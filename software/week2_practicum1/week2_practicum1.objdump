
week2_practicum1.elf:     file format elf32-littlenios2
week2_practicum1.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000201c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x000101c8 memsz 0x000101c8 flags r-x
    LOAD off    0x000111e8 vaddr 0x000301e8 paddr 0x00031cd4 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000137c0 vaddr 0x000337c0 paddr 0x000337c0 align 2**12
         filesz 0x00000000 memsz 0x0000017c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fcc0  000201c0  000201c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000368  0002fe80  0002fe80  00010e80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  000301e8  00031cd4  000111e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  000337c0  000337c0  000137c0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  0003393c  0003393c  00012cd4  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012cd4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e88  00000000  00000000  00012cf8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022c16  00000000  00000000  00013b80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008de1  00000000  00000000  00036796  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b3bc  00000000  00000000  0003f577  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020f4  00000000  00000000  0004a934  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000035d3  00000000  00000000  0004ca28  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017833  00000000  00000000  0004fffb  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00067830  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001898  00000000  00000000  00067840  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c1de  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c1e1  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c1ed  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c1ee  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006c1ef  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006c1fa  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006c205  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000f  00000000  00000000  0006c210  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004c  00000000  00000000  0006c21f  2**0
                  CONTENTS, READONLY
 26 .jdi          00005497  00000000  00000000  0006c26b  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00037d48  00000000  00000000  00071702  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
000201c0 l    d  .text	00000000 .text
0002fe80 l    d  .rodata	00000000 .rodata
000301e8 l    d  .rwdata	00000000 .rwdata
000337c0 l    d  .bss	00000000 .bss
0003393c l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../week2_practicum1_bsp//obj/HAL/src/crt0.o
000201f8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00020094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
000337c8 l     O .bss	00000006 hexadecimalnum.2818
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strncat.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002ff2e l     O .rodata	00000010 zeroes.4404
00022d50 l     F .text	000000bc __sbprintf
0002ff3e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00022f60 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00024ab8 l     F .text	00000008 __fp_unlock
00024acc l     F .text	0000019c __sinit.part.1
00024c68 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
000301e8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0003062c l     O .rwdata	00000020 lc_ctype_charset
0003060c l     O .rwdata	00000020 lc_message_charset
0003064c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0002ff70 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00027570 l     F .text	000000fc __sprint_r.part.0
00030094 l     O .rodata	00000010 zeroes.4349
00028bac l     F .text	000000bc __sbprintf
000300a4 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002d77c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d890 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d8bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0002dc50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002dd38 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002de24 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002e000 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00031cc8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002e274 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002e3b0 l     F .text	00000034 alt_dev_reg
00030c34 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e6a0 l     F .text	0000020c altera_avalon_jtag_uart_irq
0002e8ac l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0002eee4 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002f124 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002f2e4 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0002f444 l     F .text	0000003c alt_get_errno
0002f480 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0002715c g     F .text	00000074 _mprec_log10
00027248 g     F .text	0000008c __any_on
00029628 g     F .text	00000054 _isatty_r
0002ff7c g     O .rodata	00000028 __mprec_tinytens
0002df3c g     F .text	0000007c alt_main
0003383c g     O .bss	00000100 alt_irq
0002967c g     F .text	00000060 _lseek_r
00031cd4 g       *ABS*	00000000 __flash_rwdata_start
0002c154 g     F .text	00000088 .hidden __eqdf2
0003393c g       *ABS*	00000000 __alt_heap_start
00020888 g     F .text	0000003c printf
00029f54 g     F .text	0000009c _wcrtomb_r
00027474 g     F .text	0000005c __sseek
00024e18 g     F .text	00000010 __sinit
00029dfc g     F .text	00000140 __swbuf_r
00025424 g     F .text	0000007c _setlocale_r
00024c70 g     F .text	00000078 __sfmoreglue
0002dfdc g     F .text	00000024 __malloc_unlock
000296dc g     F .text	0000015c memmove
00024e00 g     F .text	00000018 _cleanup
0002621c g     F .text	000000a8 _Balloc
0002c1dc g     F .text	000000dc .hidden __gtdf2
00020000 g     F .entry	0000000c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
00029104 g     F .text	0000005c _fstat_r
000337f8 g     O .bss	00000004 errno
000273f0 g     F .text	00000008 __seofread
00033804 g     O .bss	00000004 alt_argv
00039c94 g       *ABS*	00000000 _gp
00030ab4 g     O .rwdata	00000180 alt_fd_list
0002f890 g     F .text	00000090 alt_find_dev
00025fac g     F .text	00000148 memcpy
00024ac0 g     F .text	0000000c _cleanup_r
0002d594 g     F .text	000000dc .hidden __floatsidf
0002f3c8 g     F .text	0000007c alt_io_redirect
0002c2b8 g     F .text	000000f4 .hidden __ltdf2
0002fe80 g       *ABS*	00000000 __DTOR_END__
000272d4 g     F .text	00000074 __fpclassifyd
000270b8 g     F .text	000000a4 __ratio
00028b90 g     F .text	0000001c __vfiprintf_internal
0002eaa4 g     F .text	0000021c altera_avalon_jtag_uart_read
00020858 g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0002adf4 g     F .text	00000064 .hidden __udivsi3
0002dc8c g     F .text	000000ac isatty
0002ffcc g     O .rodata	000000c8 __mprec_tens
000254a0 g     F .text	0000000c __locale_charset
000337f4 g     O .bss	00000004 __malloc_top_pad
00031c9c g     O .rwdata	00000004 __mb_cur_max
000254d0 g     F .text	0000000c _localeconv_r
00029160 g     F .text	000004c8 __sfvwrite_r
00026650 g     F .text	0000003c __i2b
00027348 g     F .text	00000054 _sbrk_r
00029838 g     F .text	00000060 _read_r
00031cbc g     O .rwdata	00000004 alt_max_fd
00028df8 g     F .text	000000f0 _fclose_r
00024a88 g     F .text	00000030 fflush
000337f0 g     O .bss	00000004 __malloc_max_sbrked_mem
0002aed8 g     F .text	000008ac .hidden __adddf3
000337d0 g     O .bss	00000004 noPara1
00026e60 g     F .text	0000010c __b2d
0002a738 g     F .text	000005c4 .hidden __umoddi3
0002de60 g     F .text	000000dc lseek
00031c94 g     O .rwdata	00000004 _global_impure_ptr
000337d4 g     O .bss	00000004 flags1
00029898 g     F .text	00000564 _realloc_r
0003393c g       *ABS*	00000000 __bss_end
0002db60 g     F .text	000000f0 alt_iic_isr_register
0002f764 g     F .text	00000108 alt_tick
0002a13c g     F .text	000005fc .hidden __udivdi3
00029060 g     F .text	00000024 _fputwc_r
0002ffa4 g     O .rodata	00000028 __mprec_bigtens
00026434 g     F .text	00000104 __s2b
0002d670 g     F .text	000000a8 .hidden __floatunsidf
00026ba0 g     F .text	00000060 __mcmp
00024e38 g     F .text	00000018 __fp_lock_all
0002db14 g     F .text	0000004c alt_ic_irq_enabled
0002f6c8 g     F .text	0000009c alt_alarm_stop
000337fc g     O .bss	00000004 alt_irq_active
000200ec g     F .exceptions	000000d4 alt_irq_handler
00030a8c g     O .rwdata	00000028 alt_dev_null
000201fc g     F .text	0000012c charToInt
0002f104 g     F .text	00000020 alt_dcache_flush_all
00026538 g     F .text	00000068 __hi0bits
0002d514 g     F .text	00000080 .hidden __fixdfsi
00031cd4 g       *ABS*	00000000 __ram_rwdata_end
00031cb4 g     O .rwdata	00000008 alt_dev_list
0002e2b0 g     F .text	00000100 write
000301e8 g       *ABS*	00000000 __ram_rodata_end
0002d8f8 g     F .text	000000b8 fstat
0002c2b8 g     F .text	000000f4 .hidden __ledf2
00026918 g     F .text	00000140 __pow5mult
00027684 g     F .text	0000150c ___vfiprintf_internal_r
000337e8 g     O .bss	00000004 __nlocale_changed
0002ae58 g     F .text	00000058 .hidden __umodsi3
00020328 g     F .text	0000012c init_interrupt
0003393c g       *ABS*	00000000 end
00020454 g     F .text	000000d4 counterInterrupt
0002e5e0 g     F .text	000000c0 altera_avalon_jtag_uart_init
0002fe80 g       *ABS*	00000000 __CTOR_LIST__
0003f400 g       *ABS*	00000000 __alt_stack_pointer
0002ef5c g     F .text	0000007c alt_avalon_timer_sc_init
0002d718 g     F .text	00000064 .hidden __clzsi2
0002ecc0 g     F .text	00000224 altera_avalon_jtag_uart_write
00024e28 g     F .text	00000004 __sfp_lock_acquire
00025ec8 g     F .text	000000e4 memchr
00020a58 g     F .text	000022dc ___vfprintf_internal_r
00024f8c g     F .text	00000310 _free_r
000254ac g     F .text	00000010 __locale_mb_cur_max
0002fccc g     F .text	00000180 __call_exitprocs
000337e4 g     O .bss	00000004 __mlocale_changed
00031ca0 g     O .rwdata	00000004 __malloc_sbrk_base
000201c0 g     F .text	0000003c _start
0003380c g     O .bss	00000004 _alt_tick_rate
00020528 g     F .text	000000ec jtagInterrupt
00026a58 g     F .text	00000148 __lshift
00033810 g     O .bss	00000004 _alt_nticks
0002e03c g     F .text	00000104 read
0002e41c g     F .text	00000060 alt_sys_init
0002fbb4 g     F .text	00000118 __register_exitproc
0002668c g     F .text	0000028c __multiply
0002e94c g     F .text	00000068 altera_avalon_jtag_uart_close
0002073c g     F .text	00000104 dec2ToHex
0002aeb0 g     F .text	00000028 .hidden __mulsi3
000301e8 g       *ABS*	00000000 __ram_rwdata_start
0002fe80 g       *ABS*	00000000 __ram_rodata_start
00033814 g     O .bss	00000028 __malloc_current_mallinfo
00026f6c g     F .text	0000014c __d2b
000337c0 g     O .bss	00000004 intCounter
0002e47c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002fa28 g     F .text	000000c4 alt_get_fd
00028cc8 g     F .text	00000054 _close_r
0002fb38 g     F .text	0000007c memcmp
0002e53c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0003393c g       *ABS*	00000000 __alt_stack_base
0002e58c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00022e0c g     F .text	00000154 __swsetup_r
0002b784 g     F .text	000009d0 .hidden __divdf3
00024ce8 g     F .text	00000118 __sfp
000209a0 g     F .text	000000b8 strncat
000271d0 g     F .text	00000078 __copybits
00030684 g     O .rwdata	00000408 __malloc_av_
00024e34 g     F .text	00000004 __sinit_lock_release
0002c3ac g     F .text	0000086c .hidden __muldf3
0002739c g     F .text	00000054 __sread
0002f920 g     F .text	00000108 alt_find_file
0002f160 g     F .text	000000a4 alt_dev_llist_insert
0002dfb8 g     F .text	00000024 __malloc_lock
0002e1c4 g     F .text	000000b0 sbrk
00024a2c g     F .text	0000005c _fflush_r
00028d1c g     F .text	000000dc _calloc_r
000337c0 g       *ABS*	00000000 __bss_start
000260f4 g     F .text	00000128 memset
00020840 g     F .text	00000018 main
00033808 g     O .bss	00000004 alt_envp
000337ec g     O .bss	00000004 __malloc_max_total_mem
0002e4dc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00029f3c g     F .text	00000018 __swbuf
000274d0 g     F .text	00000008 __sclose
0003f400 g       *ABS*	00000000 __alt_heap_limit
00028ee8 g     F .text	00000014 fclose
00023188 g     F .text	00001688 _dtoa_r
000256bc g     F .text	0000080c _malloc_r
0002a0b0 g     F .text	00000030 __ascii_wctomb
00031cc0 g     O .rwdata	00000004 alt_errno
0002529c g     F .text	000000c4 _fwalk
0002acfc g     F .text	00000084 .hidden __divsi3
00024e68 g     F .text	00000124 _malloc_trim_r
0002fe80 g       *ABS*	00000000 __CTOR_END__
000208c4 g     F .text	000000dc strcmp
0002fe80 g       *ABS*	00000000 __flash_rodata_start
0002fe80 g       *ABS*	00000000 __DTOR_LIST__
0002c154 g     F .text	00000088 .hidden __nedf2
0002e3e4 g     F .text	00000038 alt_irq_init
0002e140 g     F .text	00000084 alt_release_fd
000300b4 g     O .rodata	00000100 .hidden __clz_tab
000337e0 g     O .bss	00000004 _PathLocale
0002faec g     F .text	00000014 atexit
00028c68 g     F .text	00000060 _write_r
000254dc g     F .text	00000018 setlocale
00031c98 g     O .rwdata	00000004 _impure_ptr
00033800 g     O .bss	00000004 alt_argc
00024810 g     F .text	0000021c __sflush_r
0002f264 g     F .text	00000060 _do_dtors
000254c8 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
00026dfc g     F .text	00000064 __ulp
00024e50 g     F .text	00000018 __fp_unlock_all
00031cac g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
000254f4 g     F .text	0000000c localeconv
0002d9b0 g     F .text	00000050 alt_ic_isr_register
00031cd4 g       *ABS*	00000000 _edata
0003393c g       *ABS*	00000000 _end
000337d8 g     O .bss	00000004 noPara
00028efc g     F .text	00000164 __fputwc
000201c0 g       *ABS*	00000000 __ram_exceptions_end
0002e9b4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002da88 g     F .text	0000008c alt_ic_irq_disable
000273f8 g     F .text	0000007c __swrite
00031ca4 g     O .rwdata	00000004 __malloc_trim_threshold
0002f86c g     F .text	00000024 altera_nios2_qsys_irq_init
000254bc g     F .text	0000000c __locale_msgcharset
0002fb00 g     F .text	00000038 exit
000337dc g     O .bss	00000004 flags
00025360 g     F .text	000000c4 _fwalk_reent
00026c00 g     F .text	000001fc __mdiff
0002ad80 g     F .text	00000074 .hidden __modsi3
0003f400 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00024e2c g     F .text	00000004 __sfp_lock_release
0002fe4c g     F .text	00000034 _exit
0002efd8 g     F .text	0000012c alt_alarm_start
00025500 g     F .text	000001bc __smakebuf_r
000274d8 g     F .text	00000098 strlen
0002f56c g     F .text	0000015c open
0002c1dc g     F .text	000000dc .hidden __gedf2
00031ca8 g     O .rwdata	00000004 __wctomb
0002766c g     F .text	00000018 __sprint_r
0002f2c4 g     F .text	00000020 alt_icache_flush_all
00031cc4 g     O .rwdata	00000004 alt_priority_mask
0002da00 g     F .text	00000088 alt_ic_irq_enable
00022d34 g     F .text	0000001c __vfprintf_internal
0002a0e0 g     F .text	0000005c _wctomb_r
0002cc18 g     F .text	000008fc .hidden __subdf3
000265a0 g     F .text	000000b0 __lo0bits
00031ccc g     O .rwdata	00000008 alt_alarm_list
0002f204 g     F .text	00000060 _do_ctors
00029ff0 g     F .text	000000c0 wcrtomb
0002d7b8 g     F .text	000000d8 close
00020614 g     F .text	00000128 write7SegDisplay
000337c4 g     O .bss	00000004 runTimer
0002dda0 g     F .text	00000084 alt_load
00029084 g     F .text	00000080 fputwc
00024e30 g     F .text	00000004 __sinit_lock_acquire
000262ec g     F .text	00000148 __multadd
000262c4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20000:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20004:	08407014 	ori	at,at,448
    jmp r1
   20008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200ec0 	call	200ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000306 	br	20098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   2008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)

00020094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
   20094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   20098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   2009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200e8:	ef80083a 	eret

000200ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200ec:	defff904 	addi	sp,sp,-28
   200f0:	dfc00615 	stw	ra,24(sp)
   200f4:	df000515 	stw	fp,20(sp)
   200f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   200fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20100:	0005313a 	rdctl	r2,ipending
   20104:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20114:	00800044 	movi	r2,1
   20118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2011c:	e0fffb17 	ldw	r3,-20(fp)
   20120:	e0bffc17 	ldw	r2,-16(fp)
   20124:	1884703a 	and	r2,r3,r2
   20128:	10001426 	beq	r2,zero,2017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2012c:	008000f4 	movhi	r2,3
   20130:	108e0f04 	addi	r2,r2,14396
   20134:	e0fffd17 	ldw	r3,-12(fp)
   20138:	180690fa 	slli	r3,r3,3
   2013c:	10c5883a 	add	r2,r2,r3
   20140:	10c00017 	ldw	r3,0(r2)
   20144:	008000f4 	movhi	r2,3
   20148:	108e0f04 	addi	r2,r2,14396
   2014c:	e13ffd17 	ldw	r4,-12(fp)
   20150:	200890fa 	slli	r4,r4,3
   20154:	1105883a 	add	r2,r2,r4
   20158:	10800104 	addi	r2,r2,4
   2015c:	10800017 	ldw	r2,0(r2)
   20160:	1009883a 	mov	r4,r2
   20164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2016c:	0005313a 	rdctl	r2,ipending
   20170:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20174:	e0bfff17 	ldw	r2,-4(fp)
   20178:	00000706 	br	20198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2017c:	e0bffc17 	ldw	r2,-16(fp)
   20180:	1085883a 	add	r2,r2,r2
   20184:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20188:	e0bffd17 	ldw	r2,-12(fp)
   2018c:	10800044 	addi	r2,r2,1
   20190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   20194:	003fe106 	br	2011c <__alt_data_end+0xfffe0d1c>

    active = alt_irq_pending ();
   20198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   2019c:	e0bffb17 	ldw	r2,-20(fp)
   201a0:	103fdb1e 	bne	r2,zero,20110 <__alt_data_end+0xfffe0d10>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201a4:	0001883a 	nop
}
   201a8:	0001883a 	nop
   201ac:	e037883a 	mov	sp,fp
   201b0:	dfc00117 	ldw	ra,4(sp)
   201b4:	df000017 	ldw	fp,0(sp)
   201b8:	dec00204 	addi	sp,sp,8
   201bc:	f800283a 	ret

Disassembly of section .text:

000201c0 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   201c0:	06c000f4 	movhi	sp,3
    ori sp, sp, %lo(__alt_stack_pointer)
   201c4:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
   201c8:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   201cc:	d6a72514 	ori	gp,gp,40084
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   201d0:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   201d4:	108df014 	ori	r2,r2,14272

    movhi r3, %hi(__bss_end)
   201d8:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   201dc:	18ce4f14 	ori	r3,r3,14652

    beq r2, r3, 1f
   201e0:	10c00326 	beq	r2,r3,201f0 <_start+0x30>

0:
    stw zero, (r2)
   201e4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   201e8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   201ec:	10fffd36 	bltu	r2,r3,201e4 <__alt_data_end+0xfffe0de4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   201f0:	002dda00 	call	2dda0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   201f4:	002df3c0 	call	2df3c <alt_main>

000201f8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   201f8:	003fff06 	br	201f8 <__alt_data_end+0xfffe0df8>

000201fc <charToInt>:

volatile int runTimer = 0;

//Convert a char hexadecimal character to its corresponding int value
int charToInt(char convert)
{
   201fc:	defffe04 	addi	sp,sp,-8
   20200:	df000115 	stw	fp,4(sp)
   20204:	df000104 	addi	fp,sp,4
   20208:	2005883a 	mov	r2,r4
   2020c:	e0bfff05 	stb	r2,-4(fp)
	switch(convert){
   20210:	e0bfff07 	ldb	r2,-4(fp)
   20214:	10bff404 	addi	r2,r2,-48
   20218:	10c005e8 	cmpgeui	r3,r2,23
   2021c:	18003d1e 	bne	r3,zero,20314 <charToInt+0x118>
   20220:	100690ba 	slli	r3,r2,2
   20224:	008000b4 	movhi	r2,2
   20228:	10808e04 	addi	r2,r2,568
   2022c:	1885883a 	add	r2,r3,r2
   20230:	10800017 	ldw	r2,0(r2)
   20234:	1000683a 	jmp	r2
   20238:	00020294 	movui	zero,2058
   2023c:	0002029c 	xori	zero,zero,2058
   20240:	000202a4 	muli	zero,zero,2058
   20244:	000202ac 	andhi	zero,zero,2058
   20248:	000202b4 	movhi	zero,2058
   2024c:	000202bc 	xorhi	zero,zero,2058
   20250:	000202c4 	movi	zero,2059
   20254:	000202cc 	andi	zero,zero,2059
   20258:	000202d4 	movui	zero,2059
   2025c:	000202dc 	xori	zero,zero,2059
   20260:	00020314 	movui	zero,2060
   20264:	00020314 	movui	zero,2060
   20268:	00020314 	movui	zero,2060
   2026c:	00020314 	movui	zero,2060
   20270:	00020314 	movui	zero,2060
   20274:	00020314 	movui	zero,2060
   20278:	00020314 	movui	zero,2060
   2027c:	000202e4 	muli	zero,zero,2059
   20280:	000202ec 	andhi	zero,zero,2059
   20284:	000202f4 	movhi	zero,2059
   20288:	000202fc 	xorhi	zero,zero,2059
   2028c:	00020304 	movi	zero,2060
   20290:	0002030c 	andi	zero,zero,2060
        case '0' : return 0; break;
   20294:	0005883a 	mov	r2,zero
   20298:	00001f06 	br	20318 <charToInt+0x11c>
        case '1' : return 1; break;
   2029c:	00800044 	movi	r2,1
   202a0:	00001d06 	br	20318 <charToInt+0x11c>
        case '2' : return 2; break;
   202a4:	00800084 	movi	r2,2
   202a8:	00001b06 	br	20318 <charToInt+0x11c>
        case '3' : return 3; break;
   202ac:	008000c4 	movi	r2,3
   202b0:	00001906 	br	20318 <charToInt+0x11c>
        case '4' : return 4; break;
   202b4:	00800104 	movi	r2,4
   202b8:	00001706 	br	20318 <charToInt+0x11c>
        case '5' : return 5; break;
   202bc:	00800144 	movi	r2,5
   202c0:	00001506 	br	20318 <charToInt+0x11c>
        case '6' : return 6; break;
   202c4:	00800184 	movi	r2,6
   202c8:	00001306 	br	20318 <charToInt+0x11c>
        case '7' : return 7; break;
   202cc:	008001c4 	movi	r2,7
   202d0:	00001106 	br	20318 <charToInt+0x11c>
        case '8' : return 8; break;
   202d4:	00800204 	movi	r2,8
   202d8:	00000f06 	br	20318 <charToInt+0x11c>
        case '9' : return 9; break;
   202dc:	00800244 	movi	r2,9
   202e0:	00000d06 	br	20318 <charToInt+0x11c>
        case 'A' : return 10; break;
   202e4:	00800284 	movi	r2,10
   202e8:	00000b06 	br	20318 <charToInt+0x11c>
        case 'B' : return 11; break;
   202ec:	008002c4 	movi	r2,11
   202f0:	00000906 	br	20318 <charToInt+0x11c>
        case 'C' : return 12; break;
   202f4:	00800304 	movi	r2,12
   202f8:	00000706 	br	20318 <charToInt+0x11c>
        case 'D' : return 13; break;
   202fc:	00800344 	movi	r2,13
   20300:	00000506 	br	20318 <charToInt+0x11c>
        case 'E' : return 14; break;
   20304:	00800384 	movi	r2,14
   20308:	00000306 	br	20318 <charToInt+0x11c>
        case 'F' : return 15; break;
   2030c:	008003c4 	movi	r2,15
   20310:	00000106 	br	20318 <charToInt+0x11c>
        default  : return 0;
   20314:	0005883a 	mov	r2,zero
    }
}
   20318:	e037883a 	mov	sp,fp
   2031c:	df000017 	ldw	fp,0(sp)
   20320:	dec00104 	addi	sp,sp,4
   20324:	f800283a 	ret

00020328 <init_interrupt>:

void init_interrupt(){
   20328:	defff804 	addi	sp,sp,-32
   2032c:	dfc00715 	stw	ra,28(sp)
   20330:	df000615 	stw	fp,24(sp)
   20334:	df000604 	addi	fp,sp,24
		/*Set interrupt for interval timer*/
		int counter	= 50000;	// 1/(50MHz) x (50000) = 1msec
   20338:	00b0d414 	movui	r2,50000
   2033c:	e0bffb15 	stw	r2,-20(fp)
		IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_0_BASE, counter & 0xFFFF);
   20340:	e0bffb17 	ldw	r2,-20(fp)
   20344:	10ffffcc 	andi	r3,r2,65535
   20348:	00800134 	movhi	r2,4
   2034c:	10800a04 	addi	r2,r2,40
   20350:	10c00035 	stwio	r3,0(r2)
		IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_0_BASE, (counter >> 16) & 0xFFFF);
   20354:	e0bffb17 	ldw	r2,-20(fp)
   20358:	1004d43a 	srli	r2,r2,16
   2035c:	1007883a 	mov	r3,r2
   20360:	00800134 	movhi	r2,4
   20364:	10800b04 	addi	r2,r2,44
   20368:	10c00035 	stwio	r3,0(r2)

		//Set control register bits
		IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_0_BASE, 0x7);
   2036c:	00c001c4 	movi	r3,7
   20370:	00800134 	movhi	r2,4
   20374:	10800904 	addi	r2,r2,36
   20378:	10c00035 	stwio	r3,0(r2)
		//Set control register bits, enable Write interrupts
		IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(JTAG_UART_0_BASE, 0x2);
   2037c:	00c00084 	movi	r3,2
   20380:	00800134 	movhi	r2,4
   20384:	10801304 	addi	r2,r2,76
   20388:	10c00035 	stwio	r3,0(r2)

		void* isrPara = (void *) &noPara;
   2038c:	d0a6d104 	addi	r2,gp,-25788
   20390:	e0bffc15 	stw	r2,-16(fp)
		void* noFlags = (void *) &flags;
   20394:	d0a6d204 	addi	r2,gp,-25784
   20398:	e0bffd15 	stw	r2,-12(fp)
		void* isrPara1 = (void *) &noPara1;
   2039c:	d0a6cf04 	addi	r2,gp,-25796
   203a0:	e0bffe15 	stw	r2,-8(fp)
		void* noFlags1 = (void *) &flags1;
   203a4:	d0a6d004 	addi	r2,gp,-25792
   203a8:	e0bfff15 	stw	r2,-4(fp)
		//uitzoeken wat void isr_context moet zijn en de flags
		if(alt_ic_isr_register(TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID,TIMER_0_IRQ, counterInterrupt, isrPara, noFlags) != 0){
   203ac:	e0bffd17 	ldw	r2,-12(fp)
   203b0:	d8800015 	stw	r2,0(sp)
   203b4:	e1fffc17 	ldw	r7,-16(fp)
   203b8:	018000b4 	movhi	r6,2
   203bc:	31811504 	addi	r6,r6,1108
   203c0:	01400144 	movi	r5,5
   203c4:	0009883a 	mov	r4,zero
   203c8:	002d9b00 	call	2d9b0 <alt_ic_isr_register>
   203cc:	10000326 	beq	r2,zero,203dc <init_interrupt+0xb4>
			printf("Error in initializing interval timer interrupt");
   203d0:	010000f4 	movhi	r4,3
   203d4:	213fa004 	addi	r4,r4,-384
   203d8:	00208880 	call	20888 <printf>
		}
		/*Set jtag_uart interrupt */
		if(alt_ic_isr_register(JTAG_UART_0_IRQ_INTERRUPT_CONTROLLER_ID,JTAG_UART_0_IRQ, jtagInterrupt, isrPara1, noFlags1) != 0){
   203dc:	e0bfff17 	ldw	r2,-4(fp)
   203e0:	d8800015 	stw	r2,0(sp)
   203e4:	e1fffe17 	ldw	r7,-8(fp)
   203e8:	018000b4 	movhi	r6,2
   203ec:	31814a04 	addi	r6,r6,1320
   203f0:	01400184 	movi	r5,6
   203f4:	0009883a 	mov	r4,zero
   203f8:	002d9b00 	call	2d9b0 <alt_ic_isr_register>
   203fc:	10000326 	beq	r2,zero,2040c <init_interrupt+0xe4>
			printf("Error in initializing jtag_uart interrupt");
   20400:	010000f4 	movhi	r4,3
   20404:	213fac04 	addi	r4,r4,-336
   20408:	00208880 	call	20888 <printf>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2040c:	00800044 	movi	r2,1
   20410:	1001703a 	wrctl	status,r2
		}

		alt_irq_cpu_enable_interrupts();
		alt_ic_irq_enable(JTAG_UART_0_IRQ_INTERRUPT_CONTROLLER_ID,jtagInterrupt);
   20414:	008000b4 	movhi	r2,2
   20418:	10814a04 	addi	r2,r2,1320
   2041c:	100b883a 	mov	r5,r2
   20420:	0009883a 	mov	r4,zero
   20424:	002da000 	call	2da00 <alt_ic_irq_enable>
		alt_ic_irq_enable(TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID, counterInterrupt);
   20428:	008000b4 	movhi	r2,2
   2042c:	10811504 	addi	r2,r2,1108
   20430:	100b883a 	mov	r5,r2
   20434:	0009883a 	mov	r4,zero
   20438:	002da000 	call	2da00 <alt_ic_irq_enable>

}
   2043c:	0001883a 	nop
   20440:	e037883a 	mov	sp,fp
   20444:	dfc00117 	ldw	ra,4(sp)
   20448:	df000017 	ldw	fp,0(sp)
   2044c:	dec00204 	addi	sp,sp,8
   20450:	f800283a 	ret

00020454 <counterInterrupt>:

/*Interrupt function */
void counterInterrupt(void* isr_context)
{
   20454:	defffa04 	addi	sp,sp,-24
   20458:	dfc00515 	stw	ra,20(sp)
   2045c:	df000415 	stw	fp,16(sp)
   20460:	df000404 	addi	fp,sp,16
   20464:	e13fff15 	stw	r4,-4(fp)
	volatile int * interval_timer_ptr = (int *)TIMER_0_BASE;
   20468:	00800134 	movhi	r2,4
   2046c:	10800804 	addi	r2,r2,32
   20470:	e0bffd15 	stw	r2,-12(fp)
	*(interval_timer_ptr) = 0;
   20474:	e0bffd17 	ldw	r2,-12(fp)
   20478:	10000015 	stw	zero,0(r2)

	if(runTimer == 1){
   2047c:	d0a6cc17 	ldw	r2,-25808(gp)
   20480:	10800058 	cmpnei	r2,r2,1
   20484:	10001f1e 	bne	r2,zero,20504 <counterInterrupt+0xb0>
		intCounter++;
   20488:	d0a6cb17 	ldw	r2,-25812(gp)
   2048c:	10800044 	addi	r2,r2,1
   20490:	d0a6cb15 	stw	r2,-25812(gp)
		if(intCounter > 999999) intCounter = 0; //6 seven segments displays
   20494:	d0e6cb17 	ldw	r3,-25812(gp)
   20498:	008003f4 	movhi	r2,15
   2049c:	10908fc4 	addi	r2,r2,16959
   204a0:	10c0010e 	bge	r2,r3,204a8 <counterInterrupt+0x54>
   204a4:	d026cb15 	stw	zero,-25812(gp)
		char *intCounterHex;
		intCounterHex = dec2ToHex(intCounter);
   204a8:	d0a6cb17 	ldw	r2,-25812(gp)
   204ac:	1009883a 	mov	r4,r2
   204b0:	002073c0 	call	2073c <dec2ToHex>
   204b4:	e0bffe15 	stw	r2,-8(fp)

		//elke charachter uit intCounterHex staat gelijk aan een getal op de hex display
		int i = 0;
   204b8:	e03ffc15 	stw	zero,-16(fp)
		while(i < 6){
   204bc:	00000d06 	br	204f4 <counterInterrupt+0xa0>
			write7SegDisplay(intCounterHex[i], i);
   204c0:	e0bffc17 	ldw	r2,-16(fp)
   204c4:	e0fffe17 	ldw	r3,-8(fp)
   204c8:	1885883a 	add	r2,r3,r2
   204cc:	10800003 	ldbu	r2,0(r2)
   204d0:	10803fcc 	andi	r2,r2,255
   204d4:	1080201c 	xori	r2,r2,128
   204d8:	10bfe004 	addi	r2,r2,-128
   204dc:	e17ffc17 	ldw	r5,-16(fp)
   204e0:	1009883a 	mov	r4,r2
   204e4:	00206140 	call	20614 <write7SegDisplay>
			i++;
   204e8:	e0bffc17 	ldw	r2,-16(fp)
   204ec:	10800044 	addi	r2,r2,1
   204f0:	e0bffc15 	stw	r2,-16(fp)
		char *intCounterHex;
		intCounterHex = dec2ToHex(intCounter);

		//elke charachter uit intCounterHex staat gelijk aan een getal op de hex display
		int i = 0;
		while(i < 6){
   204f4:	e0bffc17 	ldw	r2,-16(fp)
   204f8:	10800190 	cmplti	r2,r2,6
   204fc:	103ff01e 	bne	r2,zero,204c0 <__alt_data_end+0xfffe10c0>
			i++;
		}
	}else if(runTimer == 0){
		intCounter = 0;
	}
}
   20500:	00000306 	br	20510 <counterInterrupt+0xbc>
		int i = 0;
		while(i < 6){
			write7SegDisplay(intCounterHex[i], i);
			i++;
		}
	}else if(runTimer == 0){
   20504:	d0a6cc17 	ldw	r2,-25808(gp)
   20508:	1000011e 	bne	r2,zero,20510 <counterInterrupt+0xbc>
		intCounter = 0;
   2050c:	d026cb15 	stw	zero,-25812(gp)
	}
}
   20510:	0001883a 	nop
   20514:	e037883a 	mov	sp,fp
   20518:	dfc00117 	ldw	ra,4(sp)
   2051c:	df000017 	ldw	fp,0(sp)
   20520:	dec00204 	addi	sp,sp,8
   20524:	f800283a 	ret

00020528 <jtagInterrupt>:

void jtagInterrupt(void* isr_context){
   20528:	defffa04 	addi	sp,sp,-24
   2052c:	dfc00515 	stw	ra,20(sp)
   20530:	df000415 	stw	fp,16(sp)
   20534:	df000404 	addi	fp,sp,16
   20538:	e13fff15 	stw	r4,-4(fp)
	char data;
	char completeData[10] = "";
   2053c:	e03ffc45 	stb	zero,-15(fp)
   20540:	e03ffc85 	stb	zero,-14(fp)
   20544:	e03ffcc5 	stb	zero,-13(fp)
   20548:	e03ffd05 	stb	zero,-12(fp)
   2054c:	e03ffd45 	stb	zero,-11(fp)
   20550:	e03ffd85 	stb	zero,-10(fp)
   20554:	e03ffdc5 	stb	zero,-9(fp)
   20558:	e03ffe05 	stb	zero,-8(fp)
   2055c:	e03ffe45 	stb	zero,-7(fp)
   20560:	e03ffe85 	stb	zero,-6(fp)

	do{
		data = IORD_ALTERA_AVALON_JTAG_UART_DATA(JTAG_UART_0_BASE);
   20564:	00800134 	movhi	r2,4
   20568:	10801204 	addi	r2,r2,72
   2056c:	10800037 	ldwio	r2,0(r2)
   20570:	e0bffc05 	stb	r2,-16(fp)
		if(data == '\n')
   20574:	e0bffc03 	ldbu	r2,-16(fp)
   20578:	10803fcc 	andi	r2,r2,255
   2057c:	1080201c 	xori	r2,r2,128
   20580:	10bfe004 	addi	r2,r2,-128
   20584:	10800298 	cmpnei	r2,r2,10
   20588:	10000c26 	beq	r2,zero,205bc <jtagInterrupt+0x94>
			break;
		strncat(completeData,&data,1);
   2058c:	e0bffc44 	addi	r2,fp,-15
   20590:	01800044 	movi	r6,1
   20594:	e17ffc04 	addi	r5,fp,-16
   20598:	1009883a 	mov	r4,r2
   2059c:	00209a00 	call	209a0 <strncat>
	}while(data != '\n');
   205a0:	e0bffc03 	ldbu	r2,-16(fp)
   205a4:	10803fcc 	andi	r2,r2,255
   205a8:	1080201c 	xori	r2,r2,128
   205ac:	10bfe004 	addi	r2,r2,-128
   205b0:	10800298 	cmpnei	r2,r2,10
   205b4:	103feb1e 	bne	r2,zero,20564 <__alt_data_end+0xfffe1164>
   205b8:	00000106 	br	205c0 <jtagInterrupt+0x98>
	char completeData[10] = "";

	do{
		data = IORD_ALTERA_AVALON_JTAG_UART_DATA(JTAG_UART_0_BASE);
		if(data == '\n')
			break;
   205bc:	0001883a 	nop
		strncat(completeData,&data,1);
	}while(data != '\n');

	if(!(strcmp (completeData,"start"))) //strcmp returns zero on succes
   205c0:	e0bffc44 	addi	r2,fp,-15
   205c4:	014000f4 	movhi	r5,3
   205c8:	297fb704 	addi	r5,r5,-292
   205cc:	1009883a 	mov	r4,r2
   205d0:	00208c40 	call	208c4 <strcmp>
   205d4:	1000021e 	bne	r2,zero,205e0 <jtagInterrupt+0xb8>
		runTimer = 1;
   205d8:	00800044 	movi	r2,1
   205dc:	d0a6cc15 	stw	r2,-25808(gp)
	if(!(strcmp (completeData,"stop")))
   205e0:	e0bffc44 	addi	r2,fp,-15
   205e4:	014000f4 	movhi	r5,3
   205e8:	297fb904 	addi	r5,r5,-284
   205ec:	1009883a 	mov	r4,r2
   205f0:	00208c40 	call	208c4 <strcmp>
   205f4:	1000011e 	bne	r2,zero,205fc <jtagInterrupt+0xd4>
		runTimer = 0;
   205f8:	d026cc15 	stw	zero,-25808(gp)
}
   205fc:	0001883a 	nop
   20600:	e037883a 	mov	sp,fp
   20604:	dfc00117 	ldw	ra,4(sp)
   20608:	df000017 	ldw	fp,0(sp)
   2060c:	dec00204 	addi	sp,sp,8
   20610:	f800283a 	ret

00020614 <write7SegDisplay>:

void write7SegDisplay(char displayValue, int displayNumber)
{
   20614:	defff904 	addi	sp,sp,-28
   20618:	dfc00615 	stw	ra,24(sp)
   2061c:	df000515 	stw	fp,20(sp)
   20620:	df000504 	addi	fp,sp,20
   20624:	2005883a 	mov	r2,r4
   20628:	e17fff15 	stw	r5,-4(fp)
   2062c:	e0bffe05 	stb	r2,-8(fp)
    int decNumber = charToInt(displayValue);
   20630:	e0bffe07 	ldb	r2,-8(fp)
   20634:	1009883a 	mov	r4,r2
   20638:	00201fc0 	call	201fc <charToInt>
   2063c:	e0bffb15 	stw	r2,-20(fp)

    volatile int* hexDisplay = (int *) REG32_AVALON_INTERFACE_0_AVALON_SLAVE_0_1_BASE;
   20640:	00800134 	movhi	r2,4
   20644:	10801504 	addi	r2,r2,84
   20648:	e0bffc15 	stw	r2,-16(fp)
    volatile int* hexDisplay4_5 = (int *) REG32_AVALON_INTERFACE_0_AVALON_SLAVE_0_2_BASE;
   2064c:	00800134 	movhi	r2,4
   20650:	10801404 	addi	r2,r2,80
   20654:	e0bffd15 	stw	r2,-12(fp)

    //Write to the correct adress for a given display
    if(displayNumber == 0)
   20658:	e0bfff17 	ldw	r2,-4(fp)
   2065c:	1000031e 	bne	r2,zero,2066c <write7SegDisplay+0x58>
    	*(hexDisplay) = decNumber;
   20660:	e0bffc17 	ldw	r2,-16(fp)
   20664:	e0fffb17 	ldw	r3,-20(fp)
   20668:	10c00015 	stw	r3,0(r2)
    if(displayNumber == 1)
   2066c:	e0bfff17 	ldw	r2,-4(fp)
   20670:	10800058 	cmpnei	r2,r2,1
   20674:	1000071e 	bne	r2,zero,20694 <write7SegDisplay+0x80>
    	*(hexDisplay) = (decNumber << 4) | *(hexDisplay);
   20678:	e0bffb17 	ldw	r2,-20(fp)
   2067c:	1006913a 	slli	r3,r2,4
   20680:	e0bffc17 	ldw	r2,-16(fp)
   20684:	10800017 	ldw	r2,0(r2)
   20688:	1886b03a 	or	r3,r3,r2
   2068c:	e0bffc17 	ldw	r2,-16(fp)
   20690:	10c00015 	stw	r3,0(r2)
    if(displayNumber == 2)
   20694:	e0bfff17 	ldw	r2,-4(fp)
   20698:	10800098 	cmpnei	r2,r2,2
   2069c:	1000071e 	bne	r2,zero,206bc <write7SegDisplay+0xa8>
    	*(hexDisplay) = (decNumber << 8) | *(hexDisplay);
   206a0:	e0bffb17 	ldw	r2,-20(fp)
   206a4:	1006923a 	slli	r3,r2,8
   206a8:	e0bffc17 	ldw	r2,-16(fp)
   206ac:	10800017 	ldw	r2,0(r2)
   206b0:	1886b03a 	or	r3,r3,r2
   206b4:	e0bffc17 	ldw	r2,-16(fp)
   206b8:	10c00015 	stw	r3,0(r2)
    if(displayNumber == 3)
   206bc:	e0bfff17 	ldw	r2,-4(fp)
   206c0:	108000d8 	cmpnei	r2,r2,3
   206c4:	1000071e 	bne	r2,zero,206e4 <write7SegDisplay+0xd0>
    	*(hexDisplay) = (decNumber << 12) | *(hexDisplay);
   206c8:	e0bffb17 	ldw	r2,-20(fp)
   206cc:	1006933a 	slli	r3,r2,12
   206d0:	e0bffc17 	ldw	r2,-16(fp)
   206d4:	10800017 	ldw	r2,0(r2)
   206d8:	1886b03a 	or	r3,r3,r2
   206dc:	e0bffc17 	ldw	r2,-16(fp)
   206e0:	10c00015 	stw	r3,0(r2)
    if(displayNumber == 4)
   206e4:	e0bfff17 	ldw	r2,-4(fp)
   206e8:	10800118 	cmpnei	r2,r2,4
   206ec:	1000031e 	bne	r2,zero,206fc <write7SegDisplay+0xe8>
    	*(hexDisplay4_5) = (decNumber);
   206f0:	e0bffd17 	ldw	r2,-12(fp)
   206f4:	e0fffb17 	ldw	r3,-20(fp)
   206f8:	10c00015 	stw	r3,0(r2)
    if(displayNumber == 5)
   206fc:	e0bfff17 	ldw	r2,-4(fp)
   20700:	10800158 	cmpnei	r2,r2,5
   20704:	1000071e 	bne	r2,zero,20724 <write7SegDisplay+0x110>
    	*(hexDisplay4_5) = (decNumber << 4) | *(hexDisplay4_5);
   20708:	e0bffb17 	ldw	r2,-20(fp)
   2070c:	1006913a 	slli	r3,r2,4
   20710:	e0bffd17 	ldw	r2,-12(fp)
   20714:	10800017 	ldw	r2,0(r2)
   20718:	1886b03a 	or	r3,r3,r2
   2071c:	e0bffd17 	ldw	r2,-12(fp)
   20720:	10c00015 	stw	r3,0(r2)
}
   20724:	0001883a 	nop
   20728:	e037883a 	mov	sp,fp
   2072c:	dfc00117 	ldw	ra,4(sp)
   20730:	df000017 	ldw	fp,0(sp)
   20734:	dec00204 	addi	sp,sp,8
   20738:	f800283a 	ret

0002073c <dec2ToHex>:


char* dec2ToHex(int decimalnum)
{
   2073c:	defffa04 	addi	sp,sp,-24
   20740:	df000515 	stw	fp,20(sp)
   20744:	df000504 	addi	fp,sp,20
   20748:	e13fff15 	stw	r4,-4(fp)
    int quotient, remainder;
    int j = 0;
   2074c:	e03ffc15 	stw	zero,-16(fp)
    static char hexadecimalnum[MAX_HEX_SIZE];

    for(int i = 0; i < MAX_HEX_SIZE; i++)
   20750:	e03ffd15 	stw	zero,-12(fp)
   20754:	00000806 	br	20778 <dec2ToHex+0x3c>
        hexadecimalnum[i] = '0';
   20758:	e0fffd17 	ldw	r3,-12(fp)
   2075c:	d0a6cd04 	addi	r2,gp,-25804
   20760:	1885883a 	add	r2,r3,r2
   20764:	00c00c04 	movi	r3,48
   20768:	10c00005 	stb	r3,0(r2)
{
    int quotient, remainder;
    int j = 0;
    static char hexadecimalnum[MAX_HEX_SIZE];

    for(int i = 0; i < MAX_HEX_SIZE; i++)
   2076c:	e0bffd17 	ldw	r2,-12(fp)
   20770:	10800044 	addi	r2,r2,1
   20774:	e0bffd15 	stw	r2,-12(fp)
   20778:	e0bffd17 	ldw	r2,-12(fp)
   2077c:	10800190 	cmplti	r2,r2,6
   20780:	103ff51e 	bne	r2,zero,20758 <__alt_data_end+0xfffe1358>
        hexadecimalnum[i] = '0';

    quotient = decimalnum;
   20784:	e0bfff17 	ldw	r2,-4(fp)
   20788:	e0bffb15 	stw	r2,-20(fp)

    while (quotient != 0)
   2078c:	00002506 	br	20824 <dec2ToHex+0xe8>
    {
        remainder = quotient % 16;
   20790:	e0fffb17 	ldw	r3,-20(fp)
   20794:	00a00034 	movhi	r2,32768
   20798:	108003c4 	addi	r2,r2,15
   2079c:	1884703a 	and	r2,r3,r2
   207a0:	1000040e 	bge	r2,zero,207b4 <dec2ToHex+0x78>
   207a4:	10bfffc4 	addi	r2,r2,-1
   207a8:	00fffc04 	movi	r3,-16
   207ac:	10c4b03a 	or	r2,r2,r3
   207b0:	10800044 	addi	r2,r2,1
   207b4:	e0bffe15 	stw	r2,-8(fp)
        if (remainder < 10)
   207b8:	e0bffe17 	ldw	r2,-8(fp)
   207bc:	10800288 	cmpgei	r2,r2,10
   207c0:	10000a1e 	bne	r2,zero,207ec <dec2ToHex+0xb0>
            hexadecimalnum[j++] = 48 + remainder;
   207c4:	e0bffc17 	ldw	r2,-16(fp)
   207c8:	10c00044 	addi	r3,r2,1
   207cc:	e0fffc15 	stw	r3,-16(fp)
   207d0:	e0fffe17 	ldw	r3,-8(fp)
   207d4:	18c00c04 	addi	r3,r3,48
   207d8:	1809883a 	mov	r4,r3
   207dc:	d0e6cd04 	addi	r3,gp,-25804
   207e0:	10c5883a 	add	r2,r2,r3
   207e4:	11000005 	stb	r4,0(r2)
   207e8:	00000906 	br	20810 <dec2ToHex+0xd4>
        else
            hexadecimalnum[j++] = 55 + remainder;
   207ec:	e0bffc17 	ldw	r2,-16(fp)
   207f0:	10c00044 	addi	r3,r2,1
   207f4:	e0fffc15 	stw	r3,-16(fp)
   207f8:	e0fffe17 	ldw	r3,-8(fp)
   207fc:	18c00dc4 	addi	r3,r3,55
   20800:	1809883a 	mov	r4,r3
   20804:	d0e6cd04 	addi	r3,gp,-25804
   20808:	10c5883a 	add	r2,r2,r3
   2080c:	11000005 	stb	r4,0(r2)
        quotient = quotient / 16;
   20810:	e0bffb17 	ldw	r2,-20(fp)
   20814:	1000010e 	bge	r2,zero,2081c <dec2ToHex+0xe0>
   20818:	108003c4 	addi	r2,r2,15
   2081c:	1005d13a 	srai	r2,r2,4
   20820:	e0bffb15 	stw	r2,-20(fp)
    for(int i = 0; i < MAX_HEX_SIZE; i++)
        hexadecimalnum[i] = '0';

    quotient = decimalnum;

    while (quotient != 0)
   20824:	e0bffb17 	ldw	r2,-20(fp)
   20828:	103fd91e 	bne	r2,zero,20790 <__alt_data_end+0xfffe1390>
            hexadecimalnum[j++] = 48 + remainder;
        else
            hexadecimalnum[j++] = 55 + remainder;
        quotient = quotient / 16;
    }
    return hexadecimalnum;
   2082c:	d0a6cd04 	addi	r2,gp,-25804
}
   20830:	e037883a 	mov	sp,fp
   20834:	df000017 	ldw	fp,0(sp)
   20838:	dec00104 	addi	sp,sp,4
   2083c:	f800283a 	ret

00020840 <main>:


int main()
{
   20840:	defffe04 	addi	sp,sp,-8
   20844:	dfc00115 	stw	ra,4(sp)
   20848:	df000015 	stw	fp,0(sp)
   2084c:	d839883a 	mov	fp,sp
  init_interrupt();
   20850:	00203280 	call	20328 <init_interrupt>

  while(1);
   20854:	003fff06 	br	20854 <__alt_data_end+0xfffe1454>

00020858 <_printf_r>:
   20858:	defffd04 	addi	sp,sp,-12
   2085c:	2805883a 	mov	r2,r5
   20860:	dfc00015 	stw	ra,0(sp)
   20864:	d9800115 	stw	r6,4(sp)
   20868:	d9c00215 	stw	r7,8(sp)
   2086c:	21400217 	ldw	r5,8(r4)
   20870:	d9c00104 	addi	r7,sp,4
   20874:	100d883a 	mov	r6,r2
   20878:	0020a580 	call	20a58 <___vfprintf_internal_r>
   2087c:	dfc00017 	ldw	ra,0(sp)
   20880:	dec00304 	addi	sp,sp,12
   20884:	f800283a 	ret

00020888 <printf>:
   20888:	defffc04 	addi	sp,sp,-16
   2088c:	dfc00015 	stw	ra,0(sp)
   20890:	d9400115 	stw	r5,4(sp)
   20894:	d9800215 	stw	r6,8(sp)
   20898:	d9c00315 	stw	r7,12(sp)
   2089c:	008000f4 	movhi	r2,3
   208a0:	10872604 	addi	r2,r2,7320
   208a4:	10800017 	ldw	r2,0(r2)
   208a8:	200b883a 	mov	r5,r4
   208ac:	d9800104 	addi	r6,sp,4
   208b0:	11000217 	ldw	r4,8(r2)
   208b4:	0022d340 	call	22d34 <__vfprintf_internal>
   208b8:	dfc00017 	ldw	ra,0(sp)
   208bc:	dec00404 	addi	sp,sp,16
   208c0:	f800283a 	ret

000208c4 <strcmp>:
   208c4:	2144b03a 	or	r2,r4,r5
   208c8:	108000cc 	andi	r2,r2,3
   208cc:	1000171e 	bne	r2,zero,2092c <strcmp+0x68>
   208d0:	20800017 	ldw	r2,0(r4)
   208d4:	28c00017 	ldw	r3,0(r5)
   208d8:	10c0141e 	bne	r2,r3,2092c <strcmp+0x68>
   208dc:	027fbff4 	movhi	r9,65279
   208e0:	4a7fbfc4 	addi	r9,r9,-257
   208e4:	0086303a 	nor	r3,zero,r2
   208e8:	02202074 	movhi	r8,32897
   208ec:	1245883a 	add	r2,r2,r9
   208f0:	42202004 	addi	r8,r8,-32640
   208f4:	10c4703a 	and	r2,r2,r3
   208f8:	1204703a 	and	r2,r2,r8
   208fc:	10000226 	beq	r2,zero,20908 <strcmp+0x44>
   20900:	00002306 	br	20990 <strcmp+0xcc>
   20904:	1000221e 	bne	r2,zero,20990 <strcmp+0xcc>
   20908:	21000104 	addi	r4,r4,4
   2090c:	20c00017 	ldw	r3,0(r4)
   20910:	29400104 	addi	r5,r5,4
   20914:	29800017 	ldw	r6,0(r5)
   20918:	1a4f883a 	add	r7,r3,r9
   2091c:	00c4303a 	nor	r2,zero,r3
   20920:	3884703a 	and	r2,r7,r2
   20924:	1204703a 	and	r2,r2,r8
   20928:	19bff626 	beq	r3,r6,20904 <__alt_data_end+0xfffe1504>
   2092c:	20800003 	ldbu	r2,0(r4)
   20930:	10c03fcc 	andi	r3,r2,255
   20934:	18c0201c 	xori	r3,r3,128
   20938:	18ffe004 	addi	r3,r3,-128
   2093c:	18000c26 	beq	r3,zero,20970 <strcmp+0xac>
   20940:	29800007 	ldb	r6,0(r5)
   20944:	19800326 	beq	r3,r6,20954 <strcmp+0x90>
   20948:	00001306 	br	20998 <strcmp+0xd4>
   2094c:	29800007 	ldb	r6,0(r5)
   20950:	11800b1e 	bne	r2,r6,20980 <strcmp+0xbc>
   20954:	21000044 	addi	r4,r4,1
   20958:	20c00003 	ldbu	r3,0(r4)
   2095c:	29400044 	addi	r5,r5,1
   20960:	18803fcc 	andi	r2,r3,255
   20964:	1080201c 	xori	r2,r2,128
   20968:	10bfe004 	addi	r2,r2,-128
   2096c:	103ff71e 	bne	r2,zero,2094c <__alt_data_end+0xfffe154c>
   20970:	0007883a 	mov	r3,zero
   20974:	28800003 	ldbu	r2,0(r5)
   20978:	1885c83a 	sub	r2,r3,r2
   2097c:	f800283a 	ret
   20980:	28800003 	ldbu	r2,0(r5)
   20984:	18c03fcc 	andi	r3,r3,255
   20988:	1885c83a 	sub	r2,r3,r2
   2098c:	f800283a 	ret
   20990:	0005883a 	mov	r2,zero
   20994:	f800283a 	ret
   20998:	10c03fcc 	andi	r3,r2,255
   2099c:	003ff506 	br	20974 <__alt_data_end+0xfffe1574>

000209a0 <strncat>:
   209a0:	20c000cc 	andi	r3,r4,3
   209a4:	2005883a 	mov	r2,r4
   209a8:	1800271e 	bne	r3,zero,20a48 <strncat+0xa8>
   209ac:	21000017 	ldw	r4,0(r4)
   209b0:	02bfbff4 	movhi	r10,65279
   209b4:	52bfbfc4 	addi	r10,r10,-257
   209b8:	0106303a 	nor	r3,zero,r4
   209bc:	02602074 	movhi	r9,32897
   209c0:	2289883a 	add	r4,r4,r10
   209c4:	20c8703a 	and	r4,r4,r3
   209c8:	4a602004 	addi	r9,r9,-32640
   209cc:	2248703a 	and	r4,r4,r9
   209d0:	1007883a 	mov	r3,r2
   209d4:	2000071e 	bne	r4,zero,209f4 <strncat+0x54>
   209d8:	18c00104 	addi	r3,r3,4
   209dc:	19c00017 	ldw	r7,0(r3)
   209e0:	3a91883a 	add	r8,r7,r10
   209e4:	01ce303a 	nor	r7,zero,r7
   209e8:	41ce703a 	and	r7,r8,r7
   209ec:	3a4e703a 	and	r7,r7,r9
   209f0:	383ff926 	beq	r7,zero,209d8 <__alt_data_end+0xfffe15d8>
   209f4:	19000007 	ldb	r4,0(r3)
   209f8:	20000326 	beq	r4,zero,20a08 <strncat+0x68>
   209fc:	18c00044 	addi	r3,r3,1
   20a00:	19c00007 	ldb	r7,0(r3)
   20a04:	383ffd1e 	bne	r7,zero,209fc <__alt_data_end+0xfffe15fc>
   20a08:	1811883a 	mov	r8,r3
   20a0c:	1993883a 	add	r9,r3,r6
   20a10:	00000a06 	br	20a3c <strncat+0x9c>
   20a14:	29c00003 	ldbu	r7,0(r5)
   20a18:	18c00044 	addi	r3,r3,1
   20a1c:	29400044 	addi	r5,r5,1
   20a20:	41c00005 	stb	r7,0(r8)
   20a24:	39c03fcc 	andi	r7,r7,255
   20a28:	39c0201c 	xori	r7,r7,128
   20a2c:	39ffe004 	addi	r7,r7,-128
   20a30:	38000426 	beq	r7,zero,20a44 <strncat+0xa4>
   20a34:	30000626 	beq	r6,zero,20a50 <strncat+0xb0>
   20a38:	42000044 	addi	r8,r8,1
   20a3c:	31bfffc4 	addi	r6,r6,-1
   20a40:	1a7ff41e 	bne	r3,r9,20a14 <__alt_data_end+0xfffe1614>
   20a44:	f800283a 	ret
   20a48:	2007883a 	mov	r3,r4
   20a4c:	003fe906 	br	209f4 <__alt_data_end+0xfffe15f4>
   20a50:	18000005 	stb	zero,0(r3)
   20a54:	003ff806 	br	20a38 <__alt_data_end+0xfffe1638>

00020a58 <___vfprintf_internal_r>:
   20a58:	deffb804 	addi	sp,sp,-288
   20a5c:	dfc04715 	stw	ra,284(sp)
   20a60:	ddc04515 	stw	r23,276(sp)
   20a64:	dd404315 	stw	r21,268(sp)
   20a68:	d9002d15 	stw	r4,180(sp)
   20a6c:	282f883a 	mov	r23,r5
   20a70:	302b883a 	mov	r21,r6
   20a74:	d9c02e15 	stw	r7,184(sp)
   20a78:	df004615 	stw	fp,280(sp)
   20a7c:	dd804415 	stw	r22,272(sp)
   20a80:	dd004215 	stw	r20,264(sp)
   20a84:	dcc04115 	stw	r19,260(sp)
   20a88:	dc804015 	stw	r18,256(sp)
   20a8c:	dc403f15 	stw	r17,252(sp)
   20a90:	dc003e15 	stw	r16,248(sp)
   20a94:	00254d00 	call	254d0 <_localeconv_r>
   20a98:	10800017 	ldw	r2,0(r2)
   20a9c:	1009883a 	mov	r4,r2
   20aa0:	d8803415 	stw	r2,208(sp)
   20aa4:	00274d80 	call	274d8 <strlen>
   20aa8:	d8803715 	stw	r2,220(sp)
   20aac:	d8802d17 	ldw	r2,180(sp)
   20ab0:	10000226 	beq	r2,zero,20abc <___vfprintf_internal_r+0x64>
   20ab4:	10800e17 	ldw	r2,56(r2)
   20ab8:	1000fb26 	beq	r2,zero,20ea8 <___vfprintf_internal_r+0x450>
   20abc:	b880030b 	ldhu	r2,12(r23)
   20ac0:	10c8000c 	andi	r3,r2,8192
   20ac4:	1800061e 	bne	r3,zero,20ae0 <___vfprintf_internal_r+0x88>
   20ac8:	b9001917 	ldw	r4,100(r23)
   20acc:	00f7ffc4 	movi	r3,-8193
   20ad0:	10880014 	ori	r2,r2,8192
   20ad4:	20c6703a 	and	r3,r4,r3
   20ad8:	b880030d 	sth	r2,12(r23)
   20adc:	b8c01915 	stw	r3,100(r23)
   20ae0:	10c0020c 	andi	r3,r2,8
   20ae4:	1800c326 	beq	r3,zero,20df4 <___vfprintf_internal_r+0x39c>
   20ae8:	b8c00417 	ldw	r3,16(r23)
   20aec:	1800c126 	beq	r3,zero,20df4 <___vfprintf_internal_r+0x39c>
   20af0:	1080068c 	andi	r2,r2,26
   20af4:	00c00284 	movi	r3,10
   20af8:	10c0c626 	beq	r2,r3,20e14 <___vfprintf_internal_r+0x3bc>
   20afc:	d8c00404 	addi	r3,sp,16
   20b00:	050000f4 	movhi	r20,3
   20b04:	d9001e04 	addi	r4,sp,120
   20b08:	a53fcb84 	addi	r20,r20,-210
   20b0c:	d8c01e15 	stw	r3,120(sp)
   20b10:	d8002015 	stw	zero,128(sp)
   20b14:	d8001f15 	stw	zero,124(sp)
   20b18:	d8003315 	stw	zero,204(sp)
   20b1c:	d8003615 	stw	zero,216(sp)
   20b20:	d8003815 	stw	zero,224(sp)
   20b24:	1811883a 	mov	r8,r3
   20b28:	d8003915 	stw	zero,228(sp)
   20b2c:	d8003a15 	stw	zero,232(sp)
   20b30:	d8002f15 	stw	zero,188(sp)
   20b34:	d9002815 	stw	r4,160(sp)
   20b38:	a8800007 	ldb	r2,0(r21)
   20b3c:	10028b26 	beq	r2,zero,2156c <___vfprintf_internal_r+0xb14>
   20b40:	00c00944 	movi	r3,37
   20b44:	a823883a 	mov	r17,r21
   20b48:	10c0021e 	bne	r2,r3,20b54 <___vfprintf_internal_r+0xfc>
   20b4c:	00001406 	br	20ba0 <___vfprintf_internal_r+0x148>
   20b50:	10c00326 	beq	r2,r3,20b60 <___vfprintf_internal_r+0x108>
   20b54:	8c400044 	addi	r17,r17,1
   20b58:	88800007 	ldb	r2,0(r17)
   20b5c:	103ffc1e 	bne	r2,zero,20b50 <__alt_data_end+0xfffe1750>
   20b60:	8d61c83a 	sub	r16,r17,r21
   20b64:	80000e26 	beq	r16,zero,20ba0 <___vfprintf_internal_r+0x148>
   20b68:	d8c02017 	ldw	r3,128(sp)
   20b6c:	d8801f17 	ldw	r2,124(sp)
   20b70:	45400015 	stw	r21,0(r8)
   20b74:	1c07883a 	add	r3,r3,r16
   20b78:	10800044 	addi	r2,r2,1
   20b7c:	d8c02015 	stw	r3,128(sp)
   20b80:	44000115 	stw	r16,4(r8)
   20b84:	d8801f15 	stw	r2,124(sp)
   20b88:	00c001c4 	movi	r3,7
   20b8c:	1880a916 	blt	r3,r2,20e34 <___vfprintf_internal_r+0x3dc>
   20b90:	42000204 	addi	r8,r8,8
   20b94:	d9402f17 	ldw	r5,188(sp)
   20b98:	2c0b883a 	add	r5,r5,r16
   20b9c:	d9402f15 	stw	r5,188(sp)
   20ba0:	88800007 	ldb	r2,0(r17)
   20ba4:	1000aa26 	beq	r2,zero,20e50 <___vfprintf_internal_r+0x3f8>
   20ba8:	8d400044 	addi	r21,r17,1
   20bac:	8c400047 	ldb	r17,1(r17)
   20bb0:	0021883a 	mov	r16,zero
   20bb4:	00bfffc4 	movi	r2,-1
   20bb8:	0025883a 	mov	r18,zero
   20bbc:	dc002905 	stb	r16,164(sp)
   20bc0:	d8002785 	stb	zero,158(sp)
   20bc4:	d8002b05 	stb	zero,172(sp)
   20bc8:	d8802a15 	stw	r2,168(sp)
   20bcc:	d8003115 	stw	zero,196(sp)
   20bd0:	04c01604 	movi	r19,88
   20bd4:	05800244 	movi	r22,9
   20bd8:	9021883a 	mov	r16,r18
   20bdc:	4039883a 	mov	fp,r8
   20be0:	ad400044 	addi	r21,r21,1
   20be4:	88bff804 	addi	r2,r17,-32
   20be8:	98833236 	bltu	r19,r2,218b4 <___vfprintf_internal_r+0xe5c>
   20bec:	100490ba 	slli	r2,r2,2
   20bf0:	00c000b4 	movhi	r3,2
   20bf4:	18c30104 	addi	r3,r3,3076
   20bf8:	10c5883a 	add	r2,r2,r3
   20bfc:	10800017 	ldw	r2,0(r2)
   20c00:	1000683a 	jmp	r2
   20c04:	000217ac 	andhi	zero,zero,2142
   20c08:	000218b4 	movhi	zero,2146
   20c0c:	000218b4 	movhi	zero,2146
   20c10:	000217cc 	andi	zero,zero,2143
   20c14:	000218b4 	movhi	zero,2146
   20c18:	000218b4 	movhi	zero,2146
   20c1c:	000218b4 	movhi	zero,2146
   20c20:	000218b4 	movhi	zero,2146
   20c24:	000218b4 	movhi	zero,2146
   20c28:	000218b4 	movhi	zero,2146
   20c2c:	00020eb4 	movhi	zero,2106
   20c30:	000216bc 	xorhi	zero,zero,2138
   20c34:	000218b4 	movhi	zero,2146
   20c38:	00020d78 	rdprs	zero,zero,2101
   20c3c:	00020ed8 	cmpnei	zero,zero,2107
   20c40:	000218b4 	movhi	zero,2146
   20c44:	00020f28 	cmpgeui	zero,zero,2108
   20c48:	00020f34 	movhi	zero,2108
   20c4c:	00020f34 	movhi	zero,2108
   20c50:	00020f34 	movhi	zero,2108
   20c54:	00020f34 	movhi	zero,2108
   20c58:	00020f34 	movhi	zero,2108
   20c5c:	00020f34 	movhi	zero,2108
   20c60:	00020f34 	movhi	zero,2108
   20c64:	00020f34 	movhi	zero,2108
   20c68:	00020f34 	movhi	zero,2108
   20c6c:	000218b4 	movhi	zero,2146
   20c70:	000218b4 	movhi	zero,2146
   20c74:	000218b4 	movhi	zero,2146
   20c78:	000218b4 	movhi	zero,2146
   20c7c:	000218b4 	movhi	zero,2146
   20c80:	000218b4 	movhi	zero,2146
   20c84:	000218b4 	movhi	zero,2146
   20c88:	000218b4 	movhi	zero,2146
   20c8c:	000218b4 	movhi	zero,2146
   20c90:	000218b4 	movhi	zero,2146
   20c94:	00020f70 	cmpltui	zero,zero,2109
   20c98:	00021038 	rdprs	zero,zero,2112
   20c9c:	000218b4 	movhi	zero,2146
   20ca0:	00021038 	rdprs	zero,zero,2112
   20ca4:	000218b4 	movhi	zero,2146
   20ca8:	000218b4 	movhi	zero,2146
   20cac:	000218b4 	movhi	zero,2146
   20cb0:	000218b4 	movhi	zero,2146
   20cb4:	000210e4 	muli	zero,zero,2115
   20cb8:	000218b4 	movhi	zero,2146
   20cbc:	000218b4 	movhi	zero,2146
   20cc0:	000210f0 	cmpltui	zero,zero,2115
   20cc4:	000218b4 	movhi	zero,2146
   20cc8:	000218b4 	movhi	zero,2146
   20ccc:	000218b4 	movhi	zero,2146
   20cd0:	000218b4 	movhi	zero,2146
   20cd4:	000218b4 	movhi	zero,2146
   20cd8:	00021574 	movhi	zero,2133
   20cdc:	000218b4 	movhi	zero,2146
   20ce0:	000218b4 	movhi	zero,2146
   20ce4:	000215e0 	cmpeqi	zero,zero,2135
   20ce8:	000218b4 	movhi	zero,2146
   20cec:	000218b4 	movhi	zero,2146
   20cf0:	000218b4 	movhi	zero,2146
   20cf4:	000218b4 	movhi	zero,2146
   20cf8:	000218b4 	movhi	zero,2146
   20cfc:	000218b4 	movhi	zero,2146
   20d00:	000218b4 	movhi	zero,2146
   20d04:	000218b4 	movhi	zero,2146
   20d08:	000218b4 	movhi	zero,2146
   20d0c:	000218b4 	movhi	zero,2146
   20d10:	00021858 	cmpnei	zero,zero,2145
   20d14:	000217d8 	cmpnei	zero,zero,2143
   20d18:	00021038 	rdprs	zero,zero,2112
   20d1c:	00021038 	rdprs	zero,zero,2112
   20d20:	00021038 	rdprs	zero,zero,2112
   20d24:	000217f8 	rdprs	zero,zero,2143
   20d28:	000217d8 	cmpnei	zero,zero,2143
   20d2c:	000218b4 	movhi	zero,2146
   20d30:	000218b4 	movhi	zero,2146
   20d34:	00021804 	movi	zero,2144
   20d38:	000218b4 	movhi	zero,2146
   20d3c:	00021818 	cmpnei	zero,zero,2144
   20d40:	0002169c 	xori	zero,zero,2138
   20d44:	00020d84 	movi	zero,2102
   20d48:	000216d4 	movui	zero,2139
   20d4c:	000218b4 	movhi	zero,2146
   20d50:	000216e0 	cmpeqi	zero,zero,2139
   20d54:	000218b4 	movhi	zero,2146
   20d58:	00021744 	movi	zero,2141
   20d5c:	000218b4 	movhi	zero,2146
   20d60:	000218b4 	movhi	zero,2146
   20d64:	00021764 	muli	zero,zero,2141
   20d68:	d8c03117 	ldw	r3,196(sp)
   20d6c:	d8802e15 	stw	r2,184(sp)
   20d70:	00c7c83a 	sub	r3,zero,r3
   20d74:	d8c03115 	stw	r3,196(sp)
   20d78:	84000114 	ori	r16,r16,4
   20d7c:	ac400007 	ldb	r17,0(r21)
   20d80:	003f9706 	br	20be0 <__alt_data_end+0xfffe17e0>
   20d84:	00800c04 	movi	r2,48
   20d88:	d8802705 	stb	r2,156(sp)
   20d8c:	00801e04 	movi	r2,120
   20d90:	d8802745 	stb	r2,157(sp)
   20d94:	d9002a17 	ldw	r4,168(sp)
   20d98:	d8802e17 	ldw	r2,184(sp)
   20d9c:	d8002785 	stb	zero,158(sp)
   20da0:	e011883a 	mov	r8,fp
   20da4:	10c00104 	addi	r3,r2,4
   20da8:	14c00017 	ldw	r19,0(r2)
   20dac:	002d883a 	mov	r22,zero
   20db0:	80800094 	ori	r2,r16,2
   20db4:	2002ca16 	blt	r4,zero,218e0 <___vfprintf_internal_r+0xe88>
   20db8:	00bfdfc4 	movi	r2,-129
   20dbc:	80a4703a 	and	r18,r16,r2
   20dc0:	d8c02e15 	stw	r3,184(sp)
   20dc4:	94800094 	ori	r18,r18,2
   20dc8:	9802b41e 	bne	r19,zero,2189c <___vfprintf_internal_r+0xe44>
   20dcc:	014000f4 	movhi	r5,3
   20dd0:	297fc404 	addi	r5,r5,-240
   20dd4:	d9403915 	stw	r5,228(sp)
   20dd8:	04401e04 	movi	r17,120
   20ddc:	d8802a17 	ldw	r2,168(sp)
   20de0:	0039883a 	mov	fp,zero
   20de4:	1001fa26 	beq	r2,zero,215d0 <___vfprintf_internal_r+0xb78>
   20de8:	0027883a 	mov	r19,zero
   20dec:	002d883a 	mov	r22,zero
   20df0:	00021906 	br	21658 <___vfprintf_internal_r+0xc00>
   20df4:	d9002d17 	ldw	r4,180(sp)
   20df8:	b80b883a 	mov	r5,r23
   20dfc:	0022e0c0 	call	22e0c <__swsetup_r>
   20e00:	1005dc1e 	bne	r2,zero,22574 <___vfprintf_internal_r+0x1b1c>
   20e04:	b880030b 	ldhu	r2,12(r23)
   20e08:	00c00284 	movi	r3,10
   20e0c:	1080068c 	andi	r2,r2,26
   20e10:	10ff3a1e 	bne	r2,r3,20afc <__alt_data_end+0xfffe16fc>
   20e14:	b880038f 	ldh	r2,14(r23)
   20e18:	103f3816 	blt	r2,zero,20afc <__alt_data_end+0xfffe16fc>
   20e1c:	d9c02e17 	ldw	r7,184(sp)
   20e20:	d9002d17 	ldw	r4,180(sp)
   20e24:	a80d883a 	mov	r6,r21
   20e28:	b80b883a 	mov	r5,r23
   20e2c:	0022d500 	call	22d50 <__sbprintf>
   20e30:	00001106 	br	20e78 <___vfprintf_internal_r+0x420>
   20e34:	d9002d17 	ldw	r4,180(sp)
   20e38:	d9801e04 	addi	r6,sp,120
   20e3c:	b80b883a 	mov	r5,r23
   20e40:	002766c0 	call	2766c <__sprint_r>
   20e44:	1000081e 	bne	r2,zero,20e68 <___vfprintf_internal_r+0x410>
   20e48:	da000404 	addi	r8,sp,16
   20e4c:	003f5106 	br	20b94 <__alt_data_end+0xfffe1794>
   20e50:	d8802017 	ldw	r2,128(sp)
   20e54:	10000426 	beq	r2,zero,20e68 <___vfprintf_internal_r+0x410>
   20e58:	d9002d17 	ldw	r4,180(sp)
   20e5c:	d9801e04 	addi	r6,sp,120
   20e60:	b80b883a 	mov	r5,r23
   20e64:	002766c0 	call	2766c <__sprint_r>
   20e68:	b880030b 	ldhu	r2,12(r23)
   20e6c:	1080100c 	andi	r2,r2,64
   20e70:	1005c01e 	bne	r2,zero,22574 <___vfprintf_internal_r+0x1b1c>
   20e74:	d8802f17 	ldw	r2,188(sp)
   20e78:	dfc04717 	ldw	ra,284(sp)
   20e7c:	df004617 	ldw	fp,280(sp)
   20e80:	ddc04517 	ldw	r23,276(sp)
   20e84:	dd804417 	ldw	r22,272(sp)
   20e88:	dd404317 	ldw	r21,268(sp)
   20e8c:	dd004217 	ldw	r20,264(sp)
   20e90:	dcc04117 	ldw	r19,260(sp)
   20e94:	dc804017 	ldw	r18,256(sp)
   20e98:	dc403f17 	ldw	r17,252(sp)
   20e9c:	dc003e17 	ldw	r16,248(sp)
   20ea0:	dec04804 	addi	sp,sp,288
   20ea4:	f800283a 	ret
   20ea8:	d9002d17 	ldw	r4,180(sp)
   20eac:	0024e180 	call	24e18 <__sinit>
   20eb0:	003f0206 	br	20abc <__alt_data_end+0xfffe16bc>
   20eb4:	d9002e17 	ldw	r4,184(sp)
   20eb8:	d9402e17 	ldw	r5,184(sp)
   20ebc:	21000017 	ldw	r4,0(r4)
   20ec0:	28800104 	addi	r2,r5,4
   20ec4:	d9003115 	stw	r4,196(sp)
   20ec8:	203fa716 	blt	r4,zero,20d68 <__alt_data_end+0xfffe1968>
   20ecc:	d8802e15 	stw	r2,184(sp)
   20ed0:	ac400007 	ldb	r17,0(r21)
   20ed4:	003f4206 	br	20be0 <__alt_data_end+0xfffe17e0>
   20ed8:	ac400007 	ldb	r17,0(r21)
   20edc:	01000a84 	movi	r4,42
   20ee0:	a8c00044 	addi	r3,r21,1
   20ee4:	89075826 	beq	r17,r4,22c48 <___vfprintf_internal_r+0x21f0>
   20ee8:	8cbff404 	addi	r18,r17,-48
   20eec:	b486ae36 	bltu	r22,r18,229a8 <___vfprintf_internal_r+0x1f50>
   20ef0:	0009883a 	mov	r4,zero
   20ef4:	1823883a 	mov	r17,r3
   20ef8:	01400284 	movi	r5,10
   20efc:	002aeb00 	call	2aeb0 <__mulsi3>
   20f00:	88c00007 	ldb	r3,0(r17)
   20f04:	1489883a 	add	r4,r2,r18
   20f08:	8d400044 	addi	r21,r17,1
   20f0c:	1cbff404 	addi	r18,r3,-48
   20f10:	a823883a 	mov	r17,r21
   20f14:	b4bff82e 	bgeu	r22,r18,20ef8 <__alt_data_end+0xfffe1af8>
   20f18:	1823883a 	mov	r17,r3
   20f1c:	2005f616 	blt	r4,zero,226f8 <___vfprintf_internal_r+0x1ca0>
   20f20:	d9002a15 	stw	r4,168(sp)
   20f24:	003f2f06 	br	20be4 <__alt_data_end+0xfffe17e4>
   20f28:	84002014 	ori	r16,r16,128
   20f2c:	ac400007 	ldb	r17,0(r21)
   20f30:	003f2b06 	br	20be0 <__alt_data_end+0xfffe17e0>
   20f34:	8cbff404 	addi	r18,r17,-48
   20f38:	d8003115 	stw	zero,196(sp)
   20f3c:	0009883a 	mov	r4,zero
   20f40:	a823883a 	mov	r17,r21
   20f44:	01400284 	movi	r5,10
   20f48:	002aeb00 	call	2aeb0 <__mulsi3>
   20f4c:	88c00007 	ldb	r3,0(r17)
   20f50:	9089883a 	add	r4,r18,r2
   20f54:	ad400044 	addi	r21,r21,1
   20f58:	1cbff404 	addi	r18,r3,-48
   20f5c:	a823883a 	mov	r17,r21
   20f60:	b4bff82e 	bgeu	r22,r18,20f44 <__alt_data_end+0xfffe1b44>
   20f64:	1823883a 	mov	r17,r3
   20f68:	d9003115 	stw	r4,196(sp)
   20f6c:	003f1d06 	br	20be4 <__alt_data_end+0xfffe17e4>
   20f70:	8025883a 	mov	r18,r16
   20f74:	dc002903 	ldbu	r16,164(sp)
   20f78:	e011883a 	mov	r8,fp
   20f7c:	84003fcc 	andi	r16,r16,255
   20f80:	8007531e 	bne	r16,zero,22cd0 <___vfprintf_internal_r+0x2278>
   20f84:	94800414 	ori	r18,r18,16
   20f88:	9080080c 	andi	r2,r18,32
   20f8c:	1003a326 	beq	r2,zero,21e1c <___vfprintf_internal_r+0x13c4>
   20f90:	d9002e17 	ldw	r4,184(sp)
   20f94:	20800117 	ldw	r2,4(r4)
   20f98:	24c00017 	ldw	r19,0(r4)
   20f9c:	21000204 	addi	r4,r4,8
   20fa0:	d9002e15 	stw	r4,184(sp)
   20fa4:	102d883a 	mov	r22,r2
   20fa8:	10047316 	blt	r2,zero,22178 <___vfprintf_internal_r+0x1720>
   20fac:	d9002a17 	ldw	r4,168(sp)
   20fb0:	df002783 	ldbu	fp,158(sp)
   20fb4:	2003e416 	blt	r4,zero,21f48 <___vfprintf_internal_r+0x14f0>
   20fb8:	00ffdfc4 	movi	r3,-129
   20fbc:	9d84b03a 	or	r2,r19,r22
   20fc0:	90e4703a 	and	r18,r18,r3
   20fc4:	10018026 	beq	r2,zero,215c8 <___vfprintf_internal_r+0xb70>
   20fc8:	b003ab26 	beq	r22,zero,21e78 <___vfprintf_internal_r+0x1420>
   20fcc:	dc402915 	stw	r17,164(sp)
   20fd0:	dc001e04 	addi	r16,sp,120
   20fd4:	b023883a 	mov	r17,r22
   20fd8:	402d883a 	mov	r22,r8
   20fdc:	9809883a 	mov	r4,r19
   20fe0:	880b883a 	mov	r5,r17
   20fe4:	01800284 	movi	r6,10
   20fe8:	000f883a 	mov	r7,zero
   20fec:	002a7380 	call	2a738 <__umoddi3>
   20ff0:	10800c04 	addi	r2,r2,48
   20ff4:	843fffc4 	addi	r16,r16,-1
   20ff8:	9809883a 	mov	r4,r19
   20ffc:	880b883a 	mov	r5,r17
   21000:	80800005 	stb	r2,0(r16)
   21004:	01800284 	movi	r6,10
   21008:	000f883a 	mov	r7,zero
   2100c:	002a13c0 	call	2a13c <__udivdi3>
   21010:	1027883a 	mov	r19,r2
   21014:	10c4b03a 	or	r2,r2,r3
   21018:	1823883a 	mov	r17,r3
   2101c:	103fef1e 	bne	r2,zero,20fdc <__alt_data_end+0xfffe1bdc>
   21020:	d8c02817 	ldw	r3,160(sp)
   21024:	dc402917 	ldw	r17,164(sp)
   21028:	b011883a 	mov	r8,r22
   2102c:	1c07c83a 	sub	r3,r3,r16
   21030:	d8c02b15 	stw	r3,172(sp)
   21034:	00005f06 	br	211b4 <___vfprintf_internal_r+0x75c>
   21038:	8025883a 	mov	r18,r16
   2103c:	dc002903 	ldbu	r16,164(sp)
   21040:	e011883a 	mov	r8,fp
   21044:	84003fcc 	andi	r16,r16,255
   21048:	80071e1e 	bne	r16,zero,22cc4 <___vfprintf_internal_r+0x226c>
   2104c:	9080020c 	andi	r2,r18,8
   21050:	1004af26 	beq	r2,zero,22310 <___vfprintf_internal_r+0x18b8>
   21054:	d9002e17 	ldw	r4,184(sp)
   21058:	d9402e17 	ldw	r5,184(sp)
   2105c:	d8802e17 	ldw	r2,184(sp)
   21060:	21000017 	ldw	r4,0(r4)
   21064:	29400117 	ldw	r5,4(r5)
   21068:	10800204 	addi	r2,r2,8
   2106c:	d9003615 	stw	r4,216(sp)
   21070:	d9403815 	stw	r5,224(sp)
   21074:	d8802e15 	stw	r2,184(sp)
   21078:	d9003617 	ldw	r4,216(sp)
   2107c:	d9403817 	ldw	r5,224(sp)
   21080:	da003d15 	stw	r8,244(sp)
   21084:	04000044 	movi	r16,1
   21088:	00272d40 	call	272d4 <__fpclassifyd>
   2108c:	da003d17 	ldw	r8,244(sp)
   21090:	1404441e 	bne	r2,r16,221a4 <___vfprintf_internal_r+0x174c>
   21094:	d9003617 	ldw	r4,216(sp)
   21098:	d9403817 	ldw	r5,224(sp)
   2109c:	000d883a 	mov	r6,zero
   210a0:	000f883a 	mov	r7,zero
   210a4:	002c2b80 	call	2c2b8 <__ledf2>
   210a8:	da003d17 	ldw	r8,244(sp)
   210ac:	1005e316 	blt	r2,zero,2283c <___vfprintf_internal_r+0x1de4>
   210b0:	df002783 	ldbu	fp,158(sp)
   210b4:	008011c4 	movi	r2,71
   210b8:	1445580e 	bge	r2,r17,2261c <___vfprintf_internal_r+0x1bc4>
   210bc:	040000f4 	movhi	r16,3
   210c0:	843fbc04 	addi	r16,r16,-272
   210c4:	00c000c4 	movi	r3,3
   210c8:	00bfdfc4 	movi	r2,-129
   210cc:	d8c02915 	stw	r3,164(sp)
   210d0:	90a4703a 	and	r18,r18,r2
   210d4:	d8c02b15 	stw	r3,172(sp)
   210d8:	d8002a15 	stw	zero,168(sp)
   210dc:	d8003215 	stw	zero,200(sp)
   210e0:	00003a06 	br	211cc <___vfprintf_internal_r+0x774>
   210e4:	84000214 	ori	r16,r16,8
   210e8:	ac400007 	ldb	r17,0(r21)
   210ec:	003ebc06 	br	20be0 <__alt_data_end+0xfffe17e0>
   210f0:	8025883a 	mov	r18,r16
   210f4:	dc002903 	ldbu	r16,164(sp)
   210f8:	e011883a 	mov	r8,fp
   210fc:	84003fcc 	andi	r16,r16,255
   21100:	8007001e 	bne	r16,zero,22d04 <___vfprintf_internal_r+0x22ac>
   21104:	94800414 	ori	r18,r18,16
   21108:	9080080c 	andi	r2,r18,32
   2110c:	1002fa26 	beq	r2,zero,21cf8 <___vfprintf_internal_r+0x12a0>
   21110:	d9002e17 	ldw	r4,184(sp)
   21114:	d9402a17 	ldw	r5,168(sp)
   21118:	d8002785 	stb	zero,158(sp)
   2111c:	20800204 	addi	r2,r4,8
   21120:	24c00017 	ldw	r19,0(r4)
   21124:	25800117 	ldw	r22,4(r4)
   21128:	2804b116 	blt	r5,zero,223f0 <___vfprintf_internal_r+0x1998>
   2112c:	013fdfc4 	movi	r4,-129
   21130:	9d86b03a 	or	r3,r19,r22
   21134:	d8802e15 	stw	r2,184(sp)
   21138:	9124703a 	and	r18,r18,r4
   2113c:	1802fb1e 	bne	r3,zero,21d2c <___vfprintf_internal_r+0x12d4>
   21140:	d8c02a17 	ldw	r3,168(sp)
   21144:	0039883a 	mov	fp,zero
   21148:	1805e526 	beq	r3,zero,228e0 <___vfprintf_internal_r+0x1e88>
   2114c:	0027883a 	mov	r19,zero
   21150:	002d883a 	mov	r22,zero
   21154:	dc001e04 	addi	r16,sp,120
   21158:	9806d0fa 	srli	r3,r19,3
   2115c:	b008977a 	slli	r4,r22,29
   21160:	b02cd0fa 	srli	r22,r22,3
   21164:	9cc001cc 	andi	r19,r19,7
   21168:	98800c04 	addi	r2,r19,48
   2116c:	843fffc4 	addi	r16,r16,-1
   21170:	20e6b03a 	or	r19,r4,r3
   21174:	80800005 	stb	r2,0(r16)
   21178:	9d86b03a 	or	r3,r19,r22
   2117c:	183ff61e 	bne	r3,zero,21158 <__alt_data_end+0xfffe1d58>
   21180:	90c0004c 	andi	r3,r18,1
   21184:	18014126 	beq	r3,zero,2168c <___vfprintf_internal_r+0xc34>
   21188:	10803fcc 	andi	r2,r2,255
   2118c:	1080201c 	xori	r2,r2,128
   21190:	10bfe004 	addi	r2,r2,-128
   21194:	00c00c04 	movi	r3,48
   21198:	10c13c26 	beq	r2,r3,2168c <___vfprintf_internal_r+0xc34>
   2119c:	80ffffc5 	stb	r3,-1(r16)
   211a0:	d8c02817 	ldw	r3,160(sp)
   211a4:	80bfffc4 	addi	r2,r16,-1
   211a8:	1021883a 	mov	r16,r2
   211ac:	1887c83a 	sub	r3,r3,r2
   211b0:	d8c02b15 	stw	r3,172(sp)
   211b4:	d8802b17 	ldw	r2,172(sp)
   211b8:	d9002a17 	ldw	r4,168(sp)
   211bc:	1100010e 	bge	r2,r4,211c4 <___vfprintf_internal_r+0x76c>
   211c0:	2005883a 	mov	r2,r4
   211c4:	d8802915 	stw	r2,164(sp)
   211c8:	d8003215 	stw	zero,200(sp)
   211cc:	e7003fcc 	andi	fp,fp,255
   211d0:	e700201c 	xori	fp,fp,128
   211d4:	e73fe004 	addi	fp,fp,-128
   211d8:	e0000326 	beq	fp,zero,211e8 <___vfprintf_internal_r+0x790>
   211dc:	d8c02917 	ldw	r3,164(sp)
   211e0:	18c00044 	addi	r3,r3,1
   211e4:	d8c02915 	stw	r3,164(sp)
   211e8:	90c0008c 	andi	r3,r18,2
   211ec:	d8c02c15 	stw	r3,176(sp)
   211f0:	18000326 	beq	r3,zero,21200 <___vfprintf_internal_r+0x7a8>
   211f4:	d8c02917 	ldw	r3,164(sp)
   211f8:	18c00084 	addi	r3,r3,2
   211fc:	d8c02915 	stw	r3,164(sp)
   21200:	90c0210c 	andi	r3,r18,132
   21204:	d8c03015 	stw	r3,192(sp)
   21208:	1801c51e 	bne	r3,zero,21920 <___vfprintf_internal_r+0xec8>
   2120c:	d9003117 	ldw	r4,196(sp)
   21210:	d8c02917 	ldw	r3,164(sp)
   21214:	20e7c83a 	sub	r19,r4,r3
   21218:	04c1c10e 	bge	zero,r19,21920 <___vfprintf_internal_r+0xec8>
   2121c:	02400404 	movi	r9,16
   21220:	d8c02017 	ldw	r3,128(sp)
   21224:	d8801f17 	ldw	r2,124(sp)
   21228:	4cc52f0e 	bge	r9,r19,226e8 <___vfprintf_internal_r+0x1c90>
   2122c:	014000f4 	movhi	r5,3
   21230:	297fcf84 	addi	r5,r5,-194
   21234:	dc403b15 	stw	r17,236(sp)
   21238:	d9403515 	stw	r5,212(sp)
   2123c:	9823883a 	mov	r17,r19
   21240:	482d883a 	mov	r22,r9
   21244:	9027883a 	mov	r19,r18
   21248:	070001c4 	movi	fp,7
   2124c:	8025883a 	mov	r18,r16
   21250:	dc002d17 	ldw	r16,180(sp)
   21254:	00000306 	br	21264 <___vfprintf_internal_r+0x80c>
   21258:	8c7ffc04 	addi	r17,r17,-16
   2125c:	42000204 	addi	r8,r8,8
   21260:	b440130e 	bge	r22,r17,212b0 <___vfprintf_internal_r+0x858>
   21264:	010000f4 	movhi	r4,3
   21268:	18c00404 	addi	r3,r3,16
   2126c:	10800044 	addi	r2,r2,1
   21270:	213fcf84 	addi	r4,r4,-194
   21274:	41000015 	stw	r4,0(r8)
   21278:	45800115 	stw	r22,4(r8)
   2127c:	d8c02015 	stw	r3,128(sp)
   21280:	d8801f15 	stw	r2,124(sp)
   21284:	e0bff40e 	bge	fp,r2,21258 <__alt_data_end+0xfffe1e58>
   21288:	d9801e04 	addi	r6,sp,120
   2128c:	b80b883a 	mov	r5,r23
   21290:	8009883a 	mov	r4,r16
   21294:	002766c0 	call	2766c <__sprint_r>
   21298:	103ef31e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   2129c:	8c7ffc04 	addi	r17,r17,-16
   212a0:	d8c02017 	ldw	r3,128(sp)
   212a4:	d8801f17 	ldw	r2,124(sp)
   212a8:	da000404 	addi	r8,sp,16
   212ac:	b47fed16 	blt	r22,r17,21264 <__alt_data_end+0xfffe1e64>
   212b0:	9021883a 	mov	r16,r18
   212b4:	9825883a 	mov	r18,r19
   212b8:	8827883a 	mov	r19,r17
   212bc:	dc403b17 	ldw	r17,236(sp)
   212c0:	d9403517 	ldw	r5,212(sp)
   212c4:	98c7883a 	add	r3,r19,r3
   212c8:	10800044 	addi	r2,r2,1
   212cc:	41400015 	stw	r5,0(r8)
   212d0:	44c00115 	stw	r19,4(r8)
   212d4:	d8c02015 	stw	r3,128(sp)
   212d8:	d8801f15 	stw	r2,124(sp)
   212dc:	010001c4 	movi	r4,7
   212e0:	2082c516 	blt	r4,r2,21df8 <___vfprintf_internal_r+0x13a0>
   212e4:	df002787 	ldb	fp,158(sp)
   212e8:	42000204 	addi	r8,r8,8
   212ec:	e0000c26 	beq	fp,zero,21320 <___vfprintf_internal_r+0x8c8>
   212f0:	d8801f17 	ldw	r2,124(sp)
   212f4:	d9002784 	addi	r4,sp,158
   212f8:	18c00044 	addi	r3,r3,1
   212fc:	10800044 	addi	r2,r2,1
   21300:	41000015 	stw	r4,0(r8)
   21304:	01000044 	movi	r4,1
   21308:	41000115 	stw	r4,4(r8)
   2130c:	d8c02015 	stw	r3,128(sp)
   21310:	d8801f15 	stw	r2,124(sp)
   21314:	010001c4 	movi	r4,7
   21318:	20825e16 	blt	r4,r2,21c94 <___vfprintf_internal_r+0x123c>
   2131c:	42000204 	addi	r8,r8,8
   21320:	d8802c17 	ldw	r2,176(sp)
   21324:	10000c26 	beq	r2,zero,21358 <___vfprintf_internal_r+0x900>
   21328:	d8801f17 	ldw	r2,124(sp)
   2132c:	d9002704 	addi	r4,sp,156
   21330:	18c00084 	addi	r3,r3,2
   21334:	10800044 	addi	r2,r2,1
   21338:	41000015 	stw	r4,0(r8)
   2133c:	01000084 	movi	r4,2
   21340:	41000115 	stw	r4,4(r8)
   21344:	d8c02015 	stw	r3,128(sp)
   21348:	d8801f15 	stw	r2,124(sp)
   2134c:	010001c4 	movi	r4,7
   21350:	20825816 	blt	r4,r2,21cb4 <___vfprintf_internal_r+0x125c>
   21354:	42000204 	addi	r8,r8,8
   21358:	d9003017 	ldw	r4,192(sp)
   2135c:	00802004 	movi	r2,128
   21360:	2081bb26 	beq	r4,r2,21a50 <___vfprintf_internal_r+0xff8>
   21364:	d9402a17 	ldw	r5,168(sp)
   21368:	d8802b17 	ldw	r2,172(sp)
   2136c:	28adc83a 	sub	r22,r5,r2
   21370:	0580310e 	bge	zero,r22,21438 <___vfprintf_internal_r+0x9e0>
   21374:	07000404 	movi	fp,16
   21378:	d8801f17 	ldw	r2,124(sp)
   2137c:	e584360e 	bge	fp,r22,22458 <___vfprintf_internal_r+0x1a00>
   21380:	014000f4 	movhi	r5,3
   21384:	297fcb84 	addi	r5,r5,-210
   21388:	dc402a15 	stw	r17,168(sp)
   2138c:	d9402c15 	stw	r5,176(sp)
   21390:	b023883a 	mov	r17,r22
   21394:	04c001c4 	movi	r19,7
   21398:	a82d883a 	mov	r22,r21
   2139c:	902b883a 	mov	r21,r18
   213a0:	8025883a 	mov	r18,r16
   213a4:	dc002d17 	ldw	r16,180(sp)
   213a8:	00000306 	br	213b8 <___vfprintf_internal_r+0x960>
   213ac:	8c7ffc04 	addi	r17,r17,-16
   213b0:	42000204 	addi	r8,r8,8
   213b4:	e440110e 	bge	fp,r17,213fc <___vfprintf_internal_r+0x9a4>
   213b8:	18c00404 	addi	r3,r3,16
   213bc:	10800044 	addi	r2,r2,1
   213c0:	45000015 	stw	r20,0(r8)
   213c4:	47000115 	stw	fp,4(r8)
   213c8:	d8c02015 	stw	r3,128(sp)
   213cc:	d8801f15 	stw	r2,124(sp)
   213d0:	98bff60e 	bge	r19,r2,213ac <__alt_data_end+0xfffe1fac>
   213d4:	d9801e04 	addi	r6,sp,120
   213d8:	b80b883a 	mov	r5,r23
   213dc:	8009883a 	mov	r4,r16
   213e0:	002766c0 	call	2766c <__sprint_r>
   213e4:	103ea01e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   213e8:	8c7ffc04 	addi	r17,r17,-16
   213ec:	d8c02017 	ldw	r3,128(sp)
   213f0:	d8801f17 	ldw	r2,124(sp)
   213f4:	da000404 	addi	r8,sp,16
   213f8:	e47fef16 	blt	fp,r17,213b8 <__alt_data_end+0xfffe1fb8>
   213fc:	9021883a 	mov	r16,r18
   21400:	a825883a 	mov	r18,r21
   21404:	b02b883a 	mov	r21,r22
   21408:	882d883a 	mov	r22,r17
   2140c:	dc402a17 	ldw	r17,168(sp)
   21410:	d9002c17 	ldw	r4,176(sp)
   21414:	1d87883a 	add	r3,r3,r22
   21418:	10800044 	addi	r2,r2,1
   2141c:	41000015 	stw	r4,0(r8)
   21420:	45800115 	stw	r22,4(r8)
   21424:	d8c02015 	stw	r3,128(sp)
   21428:	d8801f15 	stw	r2,124(sp)
   2142c:	010001c4 	movi	r4,7
   21430:	20821016 	blt	r4,r2,21c74 <___vfprintf_internal_r+0x121c>
   21434:	42000204 	addi	r8,r8,8
   21438:	9080400c 	andi	r2,r18,256
   2143c:	10013a1e 	bne	r2,zero,21928 <___vfprintf_internal_r+0xed0>
   21440:	d9402b17 	ldw	r5,172(sp)
   21444:	d8801f17 	ldw	r2,124(sp)
   21448:	44000015 	stw	r16,0(r8)
   2144c:	1947883a 	add	r3,r3,r5
   21450:	10800044 	addi	r2,r2,1
   21454:	41400115 	stw	r5,4(r8)
   21458:	d8c02015 	stw	r3,128(sp)
   2145c:	d8801f15 	stw	r2,124(sp)
   21460:	010001c4 	movi	r4,7
   21464:	2081f516 	blt	r4,r2,21c3c <___vfprintf_internal_r+0x11e4>
   21468:	42000204 	addi	r8,r8,8
   2146c:	9480010c 	andi	r18,r18,4
   21470:	90003226 	beq	r18,zero,2153c <___vfprintf_internal_r+0xae4>
   21474:	d9403117 	ldw	r5,196(sp)
   21478:	d8802917 	ldw	r2,164(sp)
   2147c:	28a1c83a 	sub	r16,r5,r2
   21480:	04002e0e 	bge	zero,r16,2153c <___vfprintf_internal_r+0xae4>
   21484:	04400404 	movi	r17,16
   21488:	d8801f17 	ldw	r2,124(sp)
   2148c:	8c04c40e 	bge	r17,r16,227a0 <___vfprintf_internal_r+0x1d48>
   21490:	014000f4 	movhi	r5,3
   21494:	297fcf84 	addi	r5,r5,-194
   21498:	d9403515 	stw	r5,212(sp)
   2149c:	048001c4 	movi	r18,7
   214a0:	dcc02d17 	ldw	r19,180(sp)
   214a4:	00000306 	br	214b4 <___vfprintf_internal_r+0xa5c>
   214a8:	843ffc04 	addi	r16,r16,-16
   214ac:	42000204 	addi	r8,r8,8
   214b0:	8c00130e 	bge	r17,r16,21500 <___vfprintf_internal_r+0xaa8>
   214b4:	010000f4 	movhi	r4,3
   214b8:	18c00404 	addi	r3,r3,16
   214bc:	10800044 	addi	r2,r2,1
   214c0:	213fcf84 	addi	r4,r4,-194
   214c4:	41000015 	stw	r4,0(r8)
   214c8:	44400115 	stw	r17,4(r8)
   214cc:	d8c02015 	stw	r3,128(sp)
   214d0:	d8801f15 	stw	r2,124(sp)
   214d4:	90bff40e 	bge	r18,r2,214a8 <__alt_data_end+0xfffe20a8>
   214d8:	d9801e04 	addi	r6,sp,120
   214dc:	b80b883a 	mov	r5,r23
   214e0:	9809883a 	mov	r4,r19
   214e4:	002766c0 	call	2766c <__sprint_r>
   214e8:	103e5f1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   214ec:	843ffc04 	addi	r16,r16,-16
   214f0:	d8c02017 	ldw	r3,128(sp)
   214f4:	d8801f17 	ldw	r2,124(sp)
   214f8:	da000404 	addi	r8,sp,16
   214fc:	8c3fed16 	blt	r17,r16,214b4 <__alt_data_end+0xfffe20b4>
   21500:	d9403517 	ldw	r5,212(sp)
   21504:	1c07883a 	add	r3,r3,r16
   21508:	10800044 	addi	r2,r2,1
   2150c:	41400015 	stw	r5,0(r8)
   21510:	44000115 	stw	r16,4(r8)
   21514:	d8c02015 	stw	r3,128(sp)
   21518:	d8801f15 	stw	r2,124(sp)
   2151c:	010001c4 	movi	r4,7
   21520:	2080060e 	bge	r4,r2,2153c <___vfprintf_internal_r+0xae4>
   21524:	d9002d17 	ldw	r4,180(sp)
   21528:	d9801e04 	addi	r6,sp,120
   2152c:	b80b883a 	mov	r5,r23
   21530:	002766c0 	call	2766c <__sprint_r>
   21534:	103e4c1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21538:	d8c02017 	ldw	r3,128(sp)
   2153c:	d8803117 	ldw	r2,196(sp)
   21540:	d9002917 	ldw	r4,164(sp)
   21544:	1100010e 	bge	r2,r4,2154c <___vfprintf_internal_r+0xaf4>
   21548:	2005883a 	mov	r2,r4
   2154c:	d9402f17 	ldw	r5,188(sp)
   21550:	288b883a 	add	r5,r5,r2
   21554:	d9402f15 	stw	r5,188(sp)
   21558:	1801c01e 	bne	r3,zero,21c5c <___vfprintf_internal_r+0x1204>
   2155c:	a8800007 	ldb	r2,0(r21)
   21560:	d8001f15 	stw	zero,124(sp)
   21564:	da000404 	addi	r8,sp,16
   21568:	103d751e 	bne	r2,zero,20b40 <__alt_data_end+0xfffe1740>
   2156c:	a823883a 	mov	r17,r21
   21570:	003d8b06 	br	20ba0 <__alt_data_end+0xfffe17a0>
   21574:	8025883a 	mov	r18,r16
   21578:	dc002903 	ldbu	r16,164(sp)
   2157c:	e011883a 	mov	r8,fp
   21580:	84003fcc 	andi	r16,r16,255
   21584:	8005e51e 	bne	r16,zero,22d1c <___vfprintf_internal_r+0x22c4>
   21588:	94800414 	ori	r18,r18,16
   2158c:	9080080c 	andi	r2,r18,32
   21590:	10022b26 	beq	r2,zero,21e40 <___vfprintf_internal_r+0x13e8>
   21594:	d9002e17 	ldw	r4,184(sp)
   21598:	d9402a17 	ldw	r5,168(sp)
   2159c:	d8002785 	stb	zero,158(sp)
   215a0:	20c00204 	addi	r3,r4,8
   215a4:	24c00017 	ldw	r19,0(r4)
   215a8:	25800117 	ldw	r22,4(r4)
   215ac:	28042e16 	blt	r5,zero,22668 <___vfprintf_internal_r+0x1c10>
   215b0:	013fdfc4 	movi	r4,-129
   215b4:	9d84b03a 	or	r2,r19,r22
   215b8:	d8c02e15 	stw	r3,184(sp)
   215bc:	9124703a 	and	r18,r18,r4
   215c0:	0039883a 	mov	fp,zero
   215c4:	103e801e 	bne	r2,zero,20fc8 <__alt_data_end+0xfffe1bc8>
   215c8:	d9002a17 	ldw	r4,168(sp)
   215cc:	2002e01e 	bne	r4,zero,22150 <___vfprintf_internal_r+0x16f8>
   215d0:	d8002a15 	stw	zero,168(sp)
   215d4:	d8002b15 	stw	zero,172(sp)
   215d8:	dc001e04 	addi	r16,sp,120
   215dc:	003ef506 	br	211b4 <__alt_data_end+0xfffe1db4>
   215e0:	8025883a 	mov	r18,r16
   215e4:	dc002903 	ldbu	r16,164(sp)
   215e8:	e011883a 	mov	r8,fp
   215ec:	84003fcc 	andi	r16,r16,255
   215f0:	8005ba1e 	bne	r16,zero,22cdc <___vfprintf_internal_r+0x2284>
   215f4:	010000f4 	movhi	r4,3
   215f8:	213fbf04 	addi	r4,r4,-260
   215fc:	d9003915 	stw	r4,228(sp)
   21600:	9080080c 	andi	r2,r18,32
   21604:	10006126 	beq	r2,zero,2178c <___vfprintf_internal_r+0xd34>
   21608:	d9402e17 	ldw	r5,184(sp)
   2160c:	2cc00017 	ldw	r19,0(r5)
   21610:	2d800117 	ldw	r22,4(r5)
   21614:	29400204 	addi	r5,r5,8
   21618:	d9402e15 	stw	r5,184(sp)
   2161c:	9080004c 	andi	r2,r18,1
   21620:	1001ac26 	beq	r2,zero,21cd4 <___vfprintf_internal_r+0x127c>
   21624:	9d84b03a 	or	r2,r19,r22
   21628:	10038526 	beq	r2,zero,22440 <___vfprintf_internal_r+0x19e8>
   2162c:	d8c02a17 	ldw	r3,168(sp)
   21630:	00800c04 	movi	r2,48
   21634:	d8802705 	stb	r2,156(sp)
   21638:	dc402745 	stb	r17,157(sp)
   2163c:	d8002785 	stb	zero,158(sp)
   21640:	90800094 	ori	r2,r18,2
   21644:	18047916 	blt	r3,zero,2282c <___vfprintf_internal_r+0x1dd4>
   21648:	00bfdfc4 	movi	r2,-129
   2164c:	90a4703a 	and	r18,r18,r2
   21650:	94800094 	ori	r18,r18,2
   21654:	0039883a 	mov	fp,zero
   21658:	d9003917 	ldw	r4,228(sp)
   2165c:	dc001e04 	addi	r16,sp,120
   21660:	988003cc 	andi	r2,r19,15
   21664:	b006973a 	slli	r3,r22,28
   21668:	2085883a 	add	r2,r4,r2
   2166c:	9826d13a 	srli	r19,r19,4
   21670:	10800003 	ldbu	r2,0(r2)
   21674:	b02cd13a 	srli	r22,r22,4
   21678:	843fffc4 	addi	r16,r16,-1
   2167c:	1ce6b03a 	or	r19,r3,r19
   21680:	80800005 	stb	r2,0(r16)
   21684:	9d84b03a 	or	r2,r19,r22
   21688:	103ff51e 	bne	r2,zero,21660 <__alt_data_end+0xfffe2260>
   2168c:	d8c02817 	ldw	r3,160(sp)
   21690:	1c07c83a 	sub	r3,r3,r16
   21694:	d8c02b15 	stw	r3,172(sp)
   21698:	003ec606 	br	211b4 <__alt_data_end+0xfffe1db4>
   2169c:	8025883a 	mov	r18,r16
   216a0:	dc002903 	ldbu	r16,164(sp)
   216a4:	e011883a 	mov	r8,fp
   216a8:	84003fcc 	andi	r16,r16,255
   216ac:	803e9626 	beq	r16,zero,21108 <__alt_data_end+0xfffe1d08>
   216b0:	d8c02b03 	ldbu	r3,172(sp)
   216b4:	d8c02785 	stb	r3,158(sp)
   216b8:	003e9306 	br	21108 <__alt_data_end+0xfffe1d08>
   216bc:	00c00044 	movi	r3,1
   216c0:	d8c02905 	stb	r3,164(sp)
   216c4:	00c00ac4 	movi	r3,43
   216c8:	d8c02b05 	stb	r3,172(sp)
   216cc:	ac400007 	ldb	r17,0(r21)
   216d0:	003d4306 	br	20be0 <__alt_data_end+0xfffe17e0>
   216d4:	84000814 	ori	r16,r16,32
   216d8:	ac400007 	ldb	r17,0(r21)
   216dc:	003d4006 	br	20be0 <__alt_data_end+0xfffe17e0>
   216e0:	d8802e17 	ldw	r2,184(sp)
   216e4:	8025883a 	mov	r18,r16
   216e8:	d8002785 	stb	zero,158(sp)
   216ec:	14000017 	ldw	r16,0(r2)
   216f0:	e011883a 	mov	r8,fp
   216f4:	14c00104 	addi	r19,r2,4
   216f8:	80042d26 	beq	r16,zero,227b0 <___vfprintf_internal_r+0x1d58>
   216fc:	d8c02a17 	ldw	r3,168(sp)
   21700:	1803e416 	blt	r3,zero,22694 <___vfprintf_internal_r+0x1c3c>
   21704:	180d883a 	mov	r6,r3
   21708:	000b883a 	mov	r5,zero
   2170c:	8009883a 	mov	r4,r16
   21710:	df003d15 	stw	fp,244(sp)
   21714:	0025ec80 	call	25ec8 <memchr>
   21718:	da003d17 	ldw	r8,244(sp)
   2171c:	10046826 	beq	r2,zero,228c0 <___vfprintf_internal_r+0x1e68>
   21720:	1405c83a 	sub	r2,r2,r16
   21724:	d8802b15 	stw	r2,172(sp)
   21728:	1003e016 	blt	r2,zero,226ac <___vfprintf_internal_r+0x1c54>
   2172c:	df002783 	ldbu	fp,158(sp)
   21730:	d8802915 	stw	r2,164(sp)
   21734:	dcc02e15 	stw	r19,184(sp)
   21738:	d8002a15 	stw	zero,168(sp)
   2173c:	d8003215 	stw	zero,200(sp)
   21740:	003ea206 	br	211cc <__alt_data_end+0xfffe1dcc>
   21744:	8025883a 	mov	r18,r16
   21748:	dc002903 	ldbu	r16,164(sp)
   2174c:	e011883a 	mov	r8,fp
   21750:	84003fcc 	andi	r16,r16,255
   21754:	803f8d26 	beq	r16,zero,2158c <__alt_data_end+0xfffe218c>
   21758:	d8c02b03 	ldbu	r3,172(sp)
   2175c:	d8c02785 	stb	r3,158(sp)
   21760:	003f8a06 	br	2158c <__alt_data_end+0xfffe218c>
   21764:	8025883a 	mov	r18,r16
   21768:	dc002903 	ldbu	r16,164(sp)
   2176c:	e011883a 	mov	r8,fp
   21770:	84003fcc 	andi	r16,r16,255
   21774:	8005661e 	bne	r16,zero,22d10 <___vfprintf_internal_r+0x22b8>
   21778:	010000f4 	movhi	r4,3
   2177c:	213fc404 	addi	r4,r4,-240
   21780:	d9003915 	stw	r4,228(sp)
   21784:	9080080c 	andi	r2,r18,32
   21788:	103f9f1e 	bne	r2,zero,21608 <__alt_data_end+0xfffe2208>
   2178c:	9080040c 	andi	r2,r18,16
   21790:	1002eb26 	beq	r2,zero,22340 <___vfprintf_internal_r+0x18e8>
   21794:	d8802e17 	ldw	r2,184(sp)
   21798:	002d883a 	mov	r22,zero
   2179c:	14c00017 	ldw	r19,0(r2)
   217a0:	10800104 	addi	r2,r2,4
   217a4:	d8802e15 	stw	r2,184(sp)
   217a8:	003f9c06 	br	2161c <__alt_data_end+0xfffe221c>
   217ac:	d8802b07 	ldb	r2,172(sp)
   217b0:	1002e11e 	bne	r2,zero,22338 <___vfprintf_internal_r+0x18e0>
   217b4:	00c00044 	movi	r3,1
   217b8:	d8c02905 	stb	r3,164(sp)
   217bc:	00c00804 	movi	r3,32
   217c0:	d8c02b05 	stb	r3,172(sp)
   217c4:	ac400007 	ldb	r17,0(r21)
   217c8:	003d0506 	br	20be0 <__alt_data_end+0xfffe17e0>
   217cc:	84000054 	ori	r16,r16,1
   217d0:	ac400007 	ldb	r17,0(r21)
   217d4:	003d0206 	br	20be0 <__alt_data_end+0xfffe17e0>
   217d8:	8025883a 	mov	r18,r16
   217dc:	dc002903 	ldbu	r16,164(sp)
   217e0:	e011883a 	mov	r8,fp
   217e4:	84003fcc 	andi	r16,r16,255
   217e8:	803de726 	beq	r16,zero,20f88 <__alt_data_end+0xfffe1b88>
   217ec:	d8c02b03 	ldbu	r3,172(sp)
   217f0:	d8c02785 	stb	r3,158(sp)
   217f4:	003de406 	br	20f88 <__alt_data_end+0xfffe1b88>
   217f8:	84001014 	ori	r16,r16,64
   217fc:	ac400007 	ldb	r17,0(r21)
   21800:	003cf706 	br	20be0 <__alt_data_end+0xfffe17e0>
   21804:	ac400007 	ldb	r17,0(r21)
   21808:	00801b04 	movi	r2,108
   2180c:	88838f26 	beq	r17,r2,2264c <___vfprintf_internal_r+0x1bf4>
   21810:	84000414 	ori	r16,r16,16
   21814:	003cf206 	br	20be0 <__alt_data_end+0xfffe17e0>
   21818:	8025883a 	mov	r18,r16
   2181c:	dc002903 	ldbu	r16,164(sp)
   21820:	e011883a 	mov	r8,fp
   21824:	84003fcc 	andi	r16,r16,255
   21828:	80053f1e 	bne	r16,zero,22d28 <___vfprintf_internal_r+0x22d0>
   2182c:	9080080c 	andi	r2,r18,32
   21830:	1002d226 	beq	r2,zero,2237c <___vfprintf_internal_r+0x1924>
   21834:	d9002e17 	ldw	r4,184(sp)
   21838:	d9402f17 	ldw	r5,188(sp)
   2183c:	20800017 	ldw	r2,0(r4)
   21840:	2807d7fa 	srai	r3,r5,31
   21844:	21000104 	addi	r4,r4,4
   21848:	d9002e15 	stw	r4,184(sp)
   2184c:	11400015 	stw	r5,0(r2)
   21850:	10c00115 	stw	r3,4(r2)
   21854:	003cb806 	br	20b38 <__alt_data_end+0xfffe1738>
   21858:	d8c02e17 	ldw	r3,184(sp)
   2185c:	d9002e17 	ldw	r4,184(sp)
   21860:	8025883a 	mov	r18,r16
   21864:	18800017 	ldw	r2,0(r3)
   21868:	21000104 	addi	r4,r4,4
   2186c:	00c00044 	movi	r3,1
   21870:	e011883a 	mov	r8,fp
   21874:	d8c02915 	stw	r3,164(sp)
   21878:	d8002785 	stb	zero,158(sp)
   2187c:	d8801405 	stb	r2,80(sp)
   21880:	d9002e15 	stw	r4,184(sp)
   21884:	d8c02b15 	stw	r3,172(sp)
   21888:	d8002a15 	stw	zero,168(sp)
   2188c:	d8003215 	stw	zero,200(sp)
   21890:	dc001404 	addi	r16,sp,80
   21894:	0039883a 	mov	fp,zero
   21898:	003e5306 	br	211e8 <__alt_data_end+0xfffe1de8>
   2189c:	010000f4 	movhi	r4,3
   218a0:	213fc404 	addi	r4,r4,-240
   218a4:	0039883a 	mov	fp,zero
   218a8:	d9003915 	stw	r4,228(sp)
   218ac:	04401e04 	movi	r17,120
   218b0:	003f6906 	br	21658 <__alt_data_end+0xfffe2258>
   218b4:	8025883a 	mov	r18,r16
   218b8:	dc002903 	ldbu	r16,164(sp)
   218bc:	e011883a 	mov	r8,fp
   218c0:	84003fcc 	andi	r16,r16,255
   218c4:	8005081e 	bne	r16,zero,22ce8 <___vfprintf_internal_r+0x2290>
   218c8:	883d6126 	beq	r17,zero,20e50 <__alt_data_end+0xfffe1a50>
   218cc:	00c00044 	movi	r3,1
   218d0:	d8c02915 	stw	r3,164(sp)
   218d4:	dc401405 	stb	r17,80(sp)
   218d8:	d8002785 	stb	zero,158(sp)
   218dc:	003fe906 	br	21884 <__alt_data_end+0xfffe2484>
   218e0:	014000f4 	movhi	r5,3
   218e4:	297fc404 	addi	r5,r5,-240
   218e8:	d9403915 	stw	r5,228(sp)
   218ec:	d8c02e15 	stw	r3,184(sp)
   218f0:	1025883a 	mov	r18,r2
   218f4:	04401e04 	movi	r17,120
   218f8:	9d84b03a 	or	r2,r19,r22
   218fc:	1000fc1e 	bne	r2,zero,21cf0 <___vfprintf_internal_r+0x1298>
   21900:	0039883a 	mov	fp,zero
   21904:	00800084 	movi	r2,2
   21908:	10803fcc 	andi	r2,r2,255
   2190c:	00c00044 	movi	r3,1
   21910:	10c20f26 	beq	r2,r3,22150 <___vfprintf_internal_r+0x16f8>
   21914:	00c00084 	movi	r3,2
   21918:	10fd3326 	beq	r2,r3,20de8 <__alt_data_end+0xfffe19e8>
   2191c:	003e0b06 	br	2114c <__alt_data_end+0xfffe1d4c>
   21920:	d8c02017 	ldw	r3,128(sp)
   21924:	003e7106 	br	212ec <__alt_data_end+0xfffe1eec>
   21928:	00801944 	movi	r2,101
   2192c:	14407e0e 	bge	r2,r17,21b28 <___vfprintf_internal_r+0x10d0>
   21930:	d9003617 	ldw	r4,216(sp)
   21934:	d9403817 	ldw	r5,224(sp)
   21938:	000d883a 	mov	r6,zero
   2193c:	000f883a 	mov	r7,zero
   21940:	d8c03c15 	stw	r3,240(sp)
   21944:	da003d15 	stw	r8,244(sp)
   21948:	002c1540 	call	2c154 <__eqdf2>
   2194c:	d8c03c17 	ldw	r3,240(sp)
   21950:	da003d17 	ldw	r8,244(sp)
   21954:	1000f71e 	bne	r2,zero,21d34 <___vfprintf_internal_r+0x12dc>
   21958:	d8801f17 	ldw	r2,124(sp)
   2195c:	010000f4 	movhi	r4,3
   21960:	213fcb04 	addi	r4,r4,-212
   21964:	18c00044 	addi	r3,r3,1
   21968:	10800044 	addi	r2,r2,1
   2196c:	41000015 	stw	r4,0(r8)
   21970:	01000044 	movi	r4,1
   21974:	41000115 	stw	r4,4(r8)
   21978:	d8c02015 	stw	r3,128(sp)
   2197c:	d8801f15 	stw	r2,124(sp)
   21980:	010001c4 	movi	r4,7
   21984:	2082b816 	blt	r4,r2,22468 <___vfprintf_internal_r+0x1a10>
   21988:	42000204 	addi	r8,r8,8
   2198c:	d8802617 	ldw	r2,152(sp)
   21990:	d9403317 	ldw	r5,204(sp)
   21994:	11400216 	blt	r2,r5,219a0 <___vfprintf_internal_r+0xf48>
   21998:	9080004c 	andi	r2,r18,1
   2199c:	103eb326 	beq	r2,zero,2146c <__alt_data_end+0xfffe206c>
   219a0:	d8803717 	ldw	r2,220(sp)
   219a4:	d9003417 	ldw	r4,208(sp)
   219a8:	d9403717 	ldw	r5,220(sp)
   219ac:	1887883a 	add	r3,r3,r2
   219b0:	d8801f17 	ldw	r2,124(sp)
   219b4:	41000015 	stw	r4,0(r8)
   219b8:	41400115 	stw	r5,4(r8)
   219bc:	10800044 	addi	r2,r2,1
   219c0:	d8c02015 	stw	r3,128(sp)
   219c4:	d8801f15 	stw	r2,124(sp)
   219c8:	010001c4 	movi	r4,7
   219cc:	20832916 	blt	r4,r2,22674 <___vfprintf_internal_r+0x1c1c>
   219d0:	42000204 	addi	r8,r8,8
   219d4:	d8803317 	ldw	r2,204(sp)
   219d8:	143fffc4 	addi	r16,r2,-1
   219dc:	043ea30e 	bge	zero,r16,2146c <__alt_data_end+0xfffe206c>
   219e0:	04400404 	movi	r17,16
   219e4:	d8801f17 	ldw	r2,124(sp)
   219e8:	8c00880e 	bge	r17,r16,21c0c <___vfprintf_internal_r+0x11b4>
   219ec:	014000f4 	movhi	r5,3
   219f0:	297fcb84 	addi	r5,r5,-210
   219f4:	d9402c15 	stw	r5,176(sp)
   219f8:	058001c4 	movi	r22,7
   219fc:	dcc02d17 	ldw	r19,180(sp)
   21a00:	00000306 	br	21a10 <___vfprintf_internal_r+0xfb8>
   21a04:	42000204 	addi	r8,r8,8
   21a08:	843ffc04 	addi	r16,r16,-16
   21a0c:	8c00820e 	bge	r17,r16,21c18 <___vfprintf_internal_r+0x11c0>
   21a10:	18c00404 	addi	r3,r3,16
   21a14:	10800044 	addi	r2,r2,1
   21a18:	45000015 	stw	r20,0(r8)
   21a1c:	44400115 	stw	r17,4(r8)
   21a20:	d8c02015 	stw	r3,128(sp)
   21a24:	d8801f15 	stw	r2,124(sp)
   21a28:	b0bff60e 	bge	r22,r2,21a04 <__alt_data_end+0xfffe2604>
   21a2c:	d9801e04 	addi	r6,sp,120
   21a30:	b80b883a 	mov	r5,r23
   21a34:	9809883a 	mov	r4,r19
   21a38:	002766c0 	call	2766c <__sprint_r>
   21a3c:	103d0a1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21a40:	d8c02017 	ldw	r3,128(sp)
   21a44:	d8801f17 	ldw	r2,124(sp)
   21a48:	da000404 	addi	r8,sp,16
   21a4c:	003fee06 	br	21a08 <__alt_data_end+0xfffe2608>
   21a50:	d9403117 	ldw	r5,196(sp)
   21a54:	d8802917 	ldw	r2,164(sp)
   21a58:	28adc83a 	sub	r22,r5,r2
   21a5c:	05be410e 	bge	zero,r22,21364 <__alt_data_end+0xfffe1f64>
   21a60:	07000404 	movi	fp,16
   21a64:	d8801f17 	ldw	r2,124(sp)
   21a68:	e5838f0e 	bge	fp,r22,228a8 <___vfprintf_internal_r+0x1e50>
   21a6c:	014000f4 	movhi	r5,3
   21a70:	297fcb84 	addi	r5,r5,-210
   21a74:	dc403015 	stw	r17,192(sp)
   21a78:	d9402c15 	stw	r5,176(sp)
   21a7c:	b023883a 	mov	r17,r22
   21a80:	04c001c4 	movi	r19,7
   21a84:	a82d883a 	mov	r22,r21
   21a88:	902b883a 	mov	r21,r18
   21a8c:	8025883a 	mov	r18,r16
   21a90:	dc002d17 	ldw	r16,180(sp)
   21a94:	00000306 	br	21aa4 <___vfprintf_internal_r+0x104c>
   21a98:	8c7ffc04 	addi	r17,r17,-16
   21a9c:	42000204 	addi	r8,r8,8
   21aa0:	e440110e 	bge	fp,r17,21ae8 <___vfprintf_internal_r+0x1090>
   21aa4:	18c00404 	addi	r3,r3,16
   21aa8:	10800044 	addi	r2,r2,1
   21aac:	45000015 	stw	r20,0(r8)
   21ab0:	47000115 	stw	fp,4(r8)
   21ab4:	d8c02015 	stw	r3,128(sp)
   21ab8:	d8801f15 	stw	r2,124(sp)
   21abc:	98bff60e 	bge	r19,r2,21a98 <__alt_data_end+0xfffe2698>
   21ac0:	d9801e04 	addi	r6,sp,120
   21ac4:	b80b883a 	mov	r5,r23
   21ac8:	8009883a 	mov	r4,r16
   21acc:	002766c0 	call	2766c <__sprint_r>
   21ad0:	103ce51e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21ad4:	8c7ffc04 	addi	r17,r17,-16
   21ad8:	d8c02017 	ldw	r3,128(sp)
   21adc:	d8801f17 	ldw	r2,124(sp)
   21ae0:	da000404 	addi	r8,sp,16
   21ae4:	e47fef16 	blt	fp,r17,21aa4 <__alt_data_end+0xfffe26a4>
   21ae8:	9021883a 	mov	r16,r18
   21aec:	a825883a 	mov	r18,r21
   21af0:	b02b883a 	mov	r21,r22
   21af4:	882d883a 	mov	r22,r17
   21af8:	dc403017 	ldw	r17,192(sp)
   21afc:	d9002c17 	ldw	r4,176(sp)
   21b00:	1d87883a 	add	r3,r3,r22
   21b04:	10800044 	addi	r2,r2,1
   21b08:	41000015 	stw	r4,0(r8)
   21b0c:	45800115 	stw	r22,4(r8)
   21b10:	d8c02015 	stw	r3,128(sp)
   21b14:	d8801f15 	stw	r2,124(sp)
   21b18:	010001c4 	movi	r4,7
   21b1c:	20818e16 	blt	r4,r2,22158 <___vfprintf_internal_r+0x1700>
   21b20:	42000204 	addi	r8,r8,8
   21b24:	003e0f06 	br	21364 <__alt_data_end+0xfffe1f64>
   21b28:	d9403317 	ldw	r5,204(sp)
   21b2c:	00800044 	movi	r2,1
   21b30:	18c00044 	addi	r3,r3,1
   21b34:	1141530e 	bge	r2,r5,22084 <___vfprintf_internal_r+0x162c>
   21b38:	dc401f17 	ldw	r17,124(sp)
   21b3c:	00800044 	movi	r2,1
   21b40:	40800115 	stw	r2,4(r8)
   21b44:	8c400044 	addi	r17,r17,1
   21b48:	44000015 	stw	r16,0(r8)
   21b4c:	d8c02015 	stw	r3,128(sp)
   21b50:	dc401f15 	stw	r17,124(sp)
   21b54:	008001c4 	movi	r2,7
   21b58:	14416b16 	blt	r2,r17,22108 <___vfprintf_internal_r+0x16b0>
   21b5c:	42000204 	addi	r8,r8,8
   21b60:	d8803717 	ldw	r2,220(sp)
   21b64:	d9003417 	ldw	r4,208(sp)
   21b68:	8c400044 	addi	r17,r17,1
   21b6c:	10c7883a 	add	r3,r2,r3
   21b70:	40800115 	stw	r2,4(r8)
   21b74:	41000015 	stw	r4,0(r8)
   21b78:	d8c02015 	stw	r3,128(sp)
   21b7c:	dc401f15 	stw	r17,124(sp)
   21b80:	008001c4 	movi	r2,7
   21b84:	14416916 	blt	r2,r17,2212c <___vfprintf_internal_r+0x16d4>
   21b88:	45800204 	addi	r22,r8,8
   21b8c:	d9003617 	ldw	r4,216(sp)
   21b90:	d9403817 	ldw	r5,224(sp)
   21b94:	000d883a 	mov	r6,zero
   21b98:	000f883a 	mov	r7,zero
   21b9c:	d8c03c15 	stw	r3,240(sp)
   21ba0:	002c1540 	call	2c154 <__eqdf2>
   21ba4:	d8c03c17 	ldw	r3,240(sp)
   21ba8:	1000bc26 	beq	r2,zero,21e9c <___vfprintf_internal_r+0x1444>
   21bac:	d9403317 	ldw	r5,204(sp)
   21bb0:	84000044 	addi	r16,r16,1
   21bb4:	8c400044 	addi	r17,r17,1
   21bb8:	28bfffc4 	addi	r2,r5,-1
   21bbc:	1887883a 	add	r3,r3,r2
   21bc0:	b0800115 	stw	r2,4(r22)
   21bc4:	b4000015 	stw	r16,0(r22)
   21bc8:	d8c02015 	stw	r3,128(sp)
   21bcc:	dc401f15 	stw	r17,124(sp)
   21bd0:	008001c4 	movi	r2,7
   21bd4:	14414316 	blt	r2,r17,220e4 <___vfprintf_internal_r+0x168c>
   21bd8:	b5800204 	addi	r22,r22,8
   21bdc:	d9003a17 	ldw	r4,232(sp)
   21be0:	df0022c4 	addi	fp,sp,139
   21be4:	8c400044 	addi	r17,r17,1
   21be8:	20c7883a 	add	r3,r4,r3
   21bec:	b7000015 	stw	fp,0(r22)
   21bf0:	b1000115 	stw	r4,4(r22)
   21bf4:	d8c02015 	stw	r3,128(sp)
   21bf8:	dc401f15 	stw	r17,124(sp)
   21bfc:	008001c4 	movi	r2,7
   21c00:	14400e16 	blt	r2,r17,21c3c <___vfprintf_internal_r+0x11e4>
   21c04:	b2000204 	addi	r8,r22,8
   21c08:	003e1806 	br	2146c <__alt_data_end+0xfffe206c>
   21c0c:	010000f4 	movhi	r4,3
   21c10:	213fcb84 	addi	r4,r4,-210
   21c14:	d9002c15 	stw	r4,176(sp)
   21c18:	d9002c17 	ldw	r4,176(sp)
   21c1c:	1c07883a 	add	r3,r3,r16
   21c20:	44000115 	stw	r16,4(r8)
   21c24:	41000015 	stw	r4,0(r8)
   21c28:	10800044 	addi	r2,r2,1
   21c2c:	d8c02015 	stw	r3,128(sp)
   21c30:	d8801f15 	stw	r2,124(sp)
   21c34:	010001c4 	movi	r4,7
   21c38:	20be0b0e 	bge	r4,r2,21468 <__alt_data_end+0xfffe2068>
   21c3c:	d9002d17 	ldw	r4,180(sp)
   21c40:	d9801e04 	addi	r6,sp,120
   21c44:	b80b883a 	mov	r5,r23
   21c48:	002766c0 	call	2766c <__sprint_r>
   21c4c:	103c861e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21c50:	d8c02017 	ldw	r3,128(sp)
   21c54:	da000404 	addi	r8,sp,16
   21c58:	003e0406 	br	2146c <__alt_data_end+0xfffe206c>
   21c5c:	d9002d17 	ldw	r4,180(sp)
   21c60:	d9801e04 	addi	r6,sp,120
   21c64:	b80b883a 	mov	r5,r23
   21c68:	002766c0 	call	2766c <__sprint_r>
   21c6c:	103e3b26 	beq	r2,zero,2155c <__alt_data_end+0xfffe215c>
   21c70:	003c7d06 	br	20e68 <__alt_data_end+0xfffe1a68>
   21c74:	d9002d17 	ldw	r4,180(sp)
   21c78:	d9801e04 	addi	r6,sp,120
   21c7c:	b80b883a 	mov	r5,r23
   21c80:	002766c0 	call	2766c <__sprint_r>
   21c84:	103c781e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21c88:	d8c02017 	ldw	r3,128(sp)
   21c8c:	da000404 	addi	r8,sp,16
   21c90:	003de906 	br	21438 <__alt_data_end+0xfffe2038>
   21c94:	d9002d17 	ldw	r4,180(sp)
   21c98:	d9801e04 	addi	r6,sp,120
   21c9c:	b80b883a 	mov	r5,r23
   21ca0:	002766c0 	call	2766c <__sprint_r>
   21ca4:	103c701e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21ca8:	d8c02017 	ldw	r3,128(sp)
   21cac:	da000404 	addi	r8,sp,16
   21cb0:	003d9b06 	br	21320 <__alt_data_end+0xfffe1f20>
   21cb4:	d9002d17 	ldw	r4,180(sp)
   21cb8:	d9801e04 	addi	r6,sp,120
   21cbc:	b80b883a 	mov	r5,r23
   21cc0:	002766c0 	call	2766c <__sprint_r>
   21cc4:	103c681e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21cc8:	d8c02017 	ldw	r3,128(sp)
   21ccc:	da000404 	addi	r8,sp,16
   21cd0:	003da106 	br	21358 <__alt_data_end+0xfffe1f58>
   21cd4:	d9402a17 	ldw	r5,168(sp)
   21cd8:	d8002785 	stb	zero,158(sp)
   21cdc:	283f0616 	blt	r5,zero,218f8 <__alt_data_end+0xfffe24f8>
   21ce0:	00ffdfc4 	movi	r3,-129
   21ce4:	9d84b03a 	or	r2,r19,r22
   21ce8:	90e4703a 	and	r18,r18,r3
   21cec:	103c3b26 	beq	r2,zero,20ddc <__alt_data_end+0xfffe19dc>
   21cf0:	0039883a 	mov	fp,zero
   21cf4:	003e5806 	br	21658 <__alt_data_end+0xfffe2258>
   21cf8:	9080040c 	andi	r2,r18,16
   21cfc:	1001b326 	beq	r2,zero,223cc <___vfprintf_internal_r+0x1974>
   21d00:	d8c02e17 	ldw	r3,184(sp)
   21d04:	d9002a17 	ldw	r4,168(sp)
   21d08:	d8002785 	stb	zero,158(sp)
   21d0c:	18800104 	addi	r2,r3,4
   21d10:	1cc00017 	ldw	r19,0(r3)
   21d14:	002d883a 	mov	r22,zero
   21d18:	2001b516 	blt	r4,zero,223f0 <___vfprintf_internal_r+0x1998>
   21d1c:	00ffdfc4 	movi	r3,-129
   21d20:	d8802e15 	stw	r2,184(sp)
   21d24:	90e4703a 	and	r18,r18,r3
   21d28:	983d0526 	beq	r19,zero,21140 <__alt_data_end+0xfffe1d40>
   21d2c:	0039883a 	mov	fp,zero
   21d30:	003d0806 	br	21154 <__alt_data_end+0xfffe1d54>
   21d34:	dc402617 	ldw	r17,152(sp)
   21d38:	0441d30e 	bge	zero,r17,22488 <___vfprintf_internal_r+0x1a30>
   21d3c:	dc403217 	ldw	r17,200(sp)
   21d40:	d8803317 	ldw	r2,204(sp)
   21d44:	1440010e 	bge	r2,r17,21d4c <___vfprintf_internal_r+0x12f4>
   21d48:	1023883a 	mov	r17,r2
   21d4c:	04400a0e 	bge	zero,r17,21d78 <___vfprintf_internal_r+0x1320>
   21d50:	d8801f17 	ldw	r2,124(sp)
   21d54:	1c47883a 	add	r3,r3,r17
   21d58:	44000015 	stw	r16,0(r8)
   21d5c:	10800044 	addi	r2,r2,1
   21d60:	44400115 	stw	r17,4(r8)
   21d64:	d8c02015 	stw	r3,128(sp)
   21d68:	d8801f15 	stw	r2,124(sp)
   21d6c:	010001c4 	movi	r4,7
   21d70:	20826516 	blt	r4,r2,22708 <___vfprintf_internal_r+0x1cb0>
   21d74:	42000204 	addi	r8,r8,8
   21d78:	88026116 	blt	r17,zero,22700 <___vfprintf_internal_r+0x1ca8>
   21d7c:	d9003217 	ldw	r4,200(sp)
   21d80:	2463c83a 	sub	r17,r4,r17
   21d84:	04407b0e 	bge	zero,r17,21f74 <___vfprintf_internal_r+0x151c>
   21d88:	05800404 	movi	r22,16
   21d8c:	d8801f17 	ldw	r2,124(sp)
   21d90:	b4419d0e 	bge	r22,r17,22408 <___vfprintf_internal_r+0x19b0>
   21d94:	010000f4 	movhi	r4,3
   21d98:	213fcb84 	addi	r4,r4,-210
   21d9c:	d9002c15 	stw	r4,176(sp)
   21da0:	070001c4 	movi	fp,7
   21da4:	dcc02d17 	ldw	r19,180(sp)
   21da8:	00000306 	br	21db8 <___vfprintf_internal_r+0x1360>
   21dac:	42000204 	addi	r8,r8,8
   21db0:	8c7ffc04 	addi	r17,r17,-16
   21db4:	b441970e 	bge	r22,r17,22414 <___vfprintf_internal_r+0x19bc>
   21db8:	18c00404 	addi	r3,r3,16
   21dbc:	10800044 	addi	r2,r2,1
   21dc0:	45000015 	stw	r20,0(r8)
   21dc4:	45800115 	stw	r22,4(r8)
   21dc8:	d8c02015 	stw	r3,128(sp)
   21dcc:	d8801f15 	stw	r2,124(sp)
   21dd0:	e0bff60e 	bge	fp,r2,21dac <__alt_data_end+0xfffe29ac>
   21dd4:	d9801e04 	addi	r6,sp,120
   21dd8:	b80b883a 	mov	r5,r23
   21ddc:	9809883a 	mov	r4,r19
   21de0:	002766c0 	call	2766c <__sprint_r>
   21de4:	103c201e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21de8:	d8c02017 	ldw	r3,128(sp)
   21dec:	d8801f17 	ldw	r2,124(sp)
   21df0:	da000404 	addi	r8,sp,16
   21df4:	003fee06 	br	21db0 <__alt_data_end+0xfffe29b0>
   21df8:	d9002d17 	ldw	r4,180(sp)
   21dfc:	d9801e04 	addi	r6,sp,120
   21e00:	b80b883a 	mov	r5,r23
   21e04:	002766c0 	call	2766c <__sprint_r>
   21e08:	103c171e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21e0c:	d8c02017 	ldw	r3,128(sp)
   21e10:	df002787 	ldb	fp,158(sp)
   21e14:	da000404 	addi	r8,sp,16
   21e18:	003d3406 	br	212ec <__alt_data_end+0xfffe1eec>
   21e1c:	9080040c 	andi	r2,r18,16
   21e20:	10016126 	beq	r2,zero,223a8 <___vfprintf_internal_r+0x1950>
   21e24:	d9402e17 	ldw	r5,184(sp)
   21e28:	2cc00017 	ldw	r19,0(r5)
   21e2c:	29400104 	addi	r5,r5,4
   21e30:	d9402e15 	stw	r5,184(sp)
   21e34:	982dd7fa 	srai	r22,r19,31
   21e38:	b005883a 	mov	r2,r22
   21e3c:	003c5a06 	br	20fa8 <__alt_data_end+0xfffe1ba8>
   21e40:	9080040c 	andi	r2,r18,16
   21e44:	10003526 	beq	r2,zero,21f1c <___vfprintf_internal_r+0x14c4>
   21e48:	d8c02e17 	ldw	r3,184(sp)
   21e4c:	d9002a17 	ldw	r4,168(sp)
   21e50:	d8002785 	stb	zero,158(sp)
   21e54:	18800104 	addi	r2,r3,4
   21e58:	1cc00017 	ldw	r19,0(r3)
   21e5c:	002d883a 	mov	r22,zero
   21e60:	20003716 	blt	r4,zero,21f40 <___vfprintf_internal_r+0x14e8>
   21e64:	00ffdfc4 	movi	r3,-129
   21e68:	d8802e15 	stw	r2,184(sp)
   21e6c:	90e4703a 	and	r18,r18,r3
   21e70:	0039883a 	mov	fp,zero
   21e74:	983dd426 	beq	r19,zero,215c8 <__alt_data_end+0xfffe21c8>
   21e78:	00800244 	movi	r2,9
   21e7c:	14fc5336 	bltu	r2,r19,20fcc <__alt_data_end+0xfffe1bcc>
   21e80:	d8c02817 	ldw	r3,160(sp)
   21e84:	dc001dc4 	addi	r16,sp,119
   21e88:	9cc00c04 	addi	r19,r19,48
   21e8c:	1c07c83a 	sub	r3,r3,r16
   21e90:	dcc01dc5 	stb	r19,119(sp)
   21e94:	d8c02b15 	stw	r3,172(sp)
   21e98:	003cc606 	br	211b4 <__alt_data_end+0xfffe1db4>
   21e9c:	d8803317 	ldw	r2,204(sp)
   21ea0:	143fffc4 	addi	r16,r2,-1
   21ea4:	043f4d0e 	bge	zero,r16,21bdc <__alt_data_end+0xfffe27dc>
   21ea8:	07000404 	movi	fp,16
   21eac:	e400810e 	bge	fp,r16,220b4 <___vfprintf_internal_r+0x165c>
   21eb0:	014000f4 	movhi	r5,3
   21eb4:	297fcb84 	addi	r5,r5,-210
   21eb8:	d9402c15 	stw	r5,176(sp)
   21ebc:	01c001c4 	movi	r7,7
   21ec0:	dcc02d17 	ldw	r19,180(sp)
   21ec4:	00000306 	br	21ed4 <___vfprintf_internal_r+0x147c>
   21ec8:	b5800204 	addi	r22,r22,8
   21ecc:	843ffc04 	addi	r16,r16,-16
   21ed0:	e4007b0e 	bge	fp,r16,220c0 <___vfprintf_internal_r+0x1668>
   21ed4:	18c00404 	addi	r3,r3,16
   21ed8:	8c400044 	addi	r17,r17,1
   21edc:	b5000015 	stw	r20,0(r22)
   21ee0:	b7000115 	stw	fp,4(r22)
   21ee4:	d8c02015 	stw	r3,128(sp)
   21ee8:	dc401f15 	stw	r17,124(sp)
   21eec:	3c7ff60e 	bge	r7,r17,21ec8 <__alt_data_end+0xfffe2ac8>
   21ef0:	d9801e04 	addi	r6,sp,120
   21ef4:	b80b883a 	mov	r5,r23
   21ef8:	9809883a 	mov	r4,r19
   21efc:	d9c03c15 	stw	r7,240(sp)
   21f00:	002766c0 	call	2766c <__sprint_r>
   21f04:	d9c03c17 	ldw	r7,240(sp)
   21f08:	103bd71e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21f0c:	d8c02017 	ldw	r3,128(sp)
   21f10:	dc401f17 	ldw	r17,124(sp)
   21f14:	dd800404 	addi	r22,sp,16
   21f18:	003fec06 	br	21ecc <__alt_data_end+0xfffe2acc>
   21f1c:	9080100c 	andi	r2,r18,64
   21f20:	d8002785 	stb	zero,158(sp)
   21f24:	10010e26 	beq	r2,zero,22360 <___vfprintf_internal_r+0x1908>
   21f28:	d9402e17 	ldw	r5,184(sp)
   21f2c:	d8c02a17 	ldw	r3,168(sp)
   21f30:	002d883a 	mov	r22,zero
   21f34:	28800104 	addi	r2,r5,4
   21f38:	2cc0000b 	ldhu	r19,0(r5)
   21f3c:	183fc90e 	bge	r3,zero,21e64 <__alt_data_end+0xfffe2a64>
   21f40:	d8802e15 	stw	r2,184(sp)
   21f44:	0039883a 	mov	fp,zero
   21f48:	9d84b03a 	or	r2,r19,r22
   21f4c:	103c1e1e 	bne	r2,zero,20fc8 <__alt_data_end+0xfffe1bc8>
   21f50:	00800044 	movi	r2,1
   21f54:	003e6c06 	br	21908 <__alt_data_end+0xfffe2508>
   21f58:	d9002d17 	ldw	r4,180(sp)
   21f5c:	d9801e04 	addi	r6,sp,120
   21f60:	b80b883a 	mov	r5,r23
   21f64:	002766c0 	call	2766c <__sprint_r>
   21f68:	103bbf1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   21f6c:	d8c02017 	ldw	r3,128(sp)
   21f70:	da000404 	addi	r8,sp,16
   21f74:	d9003217 	ldw	r4,200(sp)
   21f78:	d8802617 	ldw	r2,152(sp)
   21f7c:	d9403317 	ldw	r5,204(sp)
   21f80:	8123883a 	add	r17,r16,r4
   21f84:	11400216 	blt	r2,r5,21f90 <___vfprintf_internal_r+0x1538>
   21f88:	9100004c 	andi	r4,r18,1
   21f8c:	20000d26 	beq	r4,zero,21fc4 <___vfprintf_internal_r+0x156c>
   21f90:	d9003717 	ldw	r4,220(sp)
   21f94:	d9403417 	ldw	r5,208(sp)
   21f98:	1907883a 	add	r3,r3,r4
   21f9c:	d9001f17 	ldw	r4,124(sp)
   21fa0:	41400015 	stw	r5,0(r8)
   21fa4:	d9403717 	ldw	r5,220(sp)
   21fa8:	21000044 	addi	r4,r4,1
   21fac:	d8c02015 	stw	r3,128(sp)
   21fb0:	41400115 	stw	r5,4(r8)
   21fb4:	d9001f15 	stw	r4,124(sp)
   21fb8:	014001c4 	movi	r5,7
   21fbc:	2901e816 	blt	r5,r4,22760 <___vfprintf_internal_r+0x1d08>
   21fc0:	42000204 	addi	r8,r8,8
   21fc4:	d9003317 	ldw	r4,204(sp)
   21fc8:	8121883a 	add	r16,r16,r4
   21fcc:	2085c83a 	sub	r2,r4,r2
   21fd0:	8461c83a 	sub	r16,r16,r17
   21fd4:	1400010e 	bge	r2,r16,21fdc <___vfprintf_internal_r+0x1584>
   21fd8:	1021883a 	mov	r16,r2
   21fdc:	04000a0e 	bge	zero,r16,22008 <___vfprintf_internal_r+0x15b0>
   21fe0:	d9001f17 	ldw	r4,124(sp)
   21fe4:	1c07883a 	add	r3,r3,r16
   21fe8:	44400015 	stw	r17,0(r8)
   21fec:	21000044 	addi	r4,r4,1
   21ff0:	44000115 	stw	r16,4(r8)
   21ff4:	d8c02015 	stw	r3,128(sp)
   21ff8:	d9001f15 	stw	r4,124(sp)
   21ffc:	014001c4 	movi	r5,7
   22000:	2901fb16 	blt	r5,r4,227f0 <___vfprintf_internal_r+0x1d98>
   22004:	42000204 	addi	r8,r8,8
   22008:	8001f716 	blt	r16,zero,227e8 <___vfprintf_internal_r+0x1d90>
   2200c:	1421c83a 	sub	r16,r2,r16
   22010:	043d160e 	bge	zero,r16,2146c <__alt_data_end+0xfffe206c>
   22014:	04400404 	movi	r17,16
   22018:	d8801f17 	ldw	r2,124(sp)
   2201c:	8c3efb0e 	bge	r17,r16,21c0c <__alt_data_end+0xfffe280c>
   22020:	014000f4 	movhi	r5,3
   22024:	297fcb84 	addi	r5,r5,-210
   22028:	d9402c15 	stw	r5,176(sp)
   2202c:	058001c4 	movi	r22,7
   22030:	dcc02d17 	ldw	r19,180(sp)
   22034:	00000306 	br	22044 <___vfprintf_internal_r+0x15ec>
   22038:	42000204 	addi	r8,r8,8
   2203c:	843ffc04 	addi	r16,r16,-16
   22040:	8c3ef50e 	bge	r17,r16,21c18 <__alt_data_end+0xfffe2818>
   22044:	18c00404 	addi	r3,r3,16
   22048:	10800044 	addi	r2,r2,1
   2204c:	45000015 	stw	r20,0(r8)
   22050:	44400115 	stw	r17,4(r8)
   22054:	d8c02015 	stw	r3,128(sp)
   22058:	d8801f15 	stw	r2,124(sp)
   2205c:	b0bff60e 	bge	r22,r2,22038 <__alt_data_end+0xfffe2c38>
   22060:	d9801e04 	addi	r6,sp,120
   22064:	b80b883a 	mov	r5,r23
   22068:	9809883a 	mov	r4,r19
   2206c:	002766c0 	call	2766c <__sprint_r>
   22070:	103b7d1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   22074:	d8c02017 	ldw	r3,128(sp)
   22078:	d8801f17 	ldw	r2,124(sp)
   2207c:	da000404 	addi	r8,sp,16
   22080:	003fee06 	br	2203c <__alt_data_end+0xfffe2c3c>
   22084:	9088703a 	and	r4,r18,r2
   22088:	203eab1e 	bne	r4,zero,21b38 <__alt_data_end+0xfffe2738>
   2208c:	dc401f17 	ldw	r17,124(sp)
   22090:	40800115 	stw	r2,4(r8)
   22094:	44000015 	stw	r16,0(r8)
   22098:	8c400044 	addi	r17,r17,1
   2209c:	d8c02015 	stw	r3,128(sp)
   220a0:	dc401f15 	stw	r17,124(sp)
   220a4:	008001c4 	movi	r2,7
   220a8:	14400e16 	blt	r2,r17,220e4 <___vfprintf_internal_r+0x168c>
   220ac:	45800204 	addi	r22,r8,8
   220b0:	003eca06 	br	21bdc <__alt_data_end+0xfffe27dc>
   220b4:	010000f4 	movhi	r4,3
   220b8:	213fcb84 	addi	r4,r4,-210
   220bc:	d9002c15 	stw	r4,176(sp)
   220c0:	d8802c17 	ldw	r2,176(sp)
   220c4:	1c07883a 	add	r3,r3,r16
   220c8:	8c400044 	addi	r17,r17,1
   220cc:	b0800015 	stw	r2,0(r22)
   220d0:	b4000115 	stw	r16,4(r22)
   220d4:	d8c02015 	stw	r3,128(sp)
   220d8:	dc401f15 	stw	r17,124(sp)
   220dc:	008001c4 	movi	r2,7
   220e0:	147ebd0e 	bge	r2,r17,21bd8 <__alt_data_end+0xfffe27d8>
   220e4:	d9002d17 	ldw	r4,180(sp)
   220e8:	d9801e04 	addi	r6,sp,120
   220ec:	b80b883a 	mov	r5,r23
   220f0:	002766c0 	call	2766c <__sprint_r>
   220f4:	103b5c1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   220f8:	d8c02017 	ldw	r3,128(sp)
   220fc:	dc401f17 	ldw	r17,124(sp)
   22100:	dd800404 	addi	r22,sp,16
   22104:	003eb506 	br	21bdc <__alt_data_end+0xfffe27dc>
   22108:	d9002d17 	ldw	r4,180(sp)
   2210c:	d9801e04 	addi	r6,sp,120
   22110:	b80b883a 	mov	r5,r23
   22114:	002766c0 	call	2766c <__sprint_r>
   22118:	103b531e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   2211c:	d8c02017 	ldw	r3,128(sp)
   22120:	dc401f17 	ldw	r17,124(sp)
   22124:	da000404 	addi	r8,sp,16
   22128:	003e8d06 	br	21b60 <__alt_data_end+0xfffe2760>
   2212c:	d9002d17 	ldw	r4,180(sp)
   22130:	d9801e04 	addi	r6,sp,120
   22134:	b80b883a 	mov	r5,r23
   22138:	002766c0 	call	2766c <__sprint_r>
   2213c:	103b4a1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   22140:	d8c02017 	ldw	r3,128(sp)
   22144:	dc401f17 	ldw	r17,124(sp)
   22148:	dd800404 	addi	r22,sp,16
   2214c:	003e8f06 	br	21b8c <__alt_data_end+0xfffe278c>
   22150:	0027883a 	mov	r19,zero
   22154:	003f4a06 	br	21e80 <__alt_data_end+0xfffe2a80>
   22158:	d9002d17 	ldw	r4,180(sp)
   2215c:	d9801e04 	addi	r6,sp,120
   22160:	b80b883a 	mov	r5,r23
   22164:	002766c0 	call	2766c <__sprint_r>
   22168:	103b3f1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   2216c:	d8c02017 	ldw	r3,128(sp)
   22170:	da000404 	addi	r8,sp,16
   22174:	003c7b06 	br	21364 <__alt_data_end+0xfffe1f64>
   22178:	d9402a17 	ldw	r5,168(sp)
   2217c:	04e7c83a 	sub	r19,zero,r19
   22180:	07000b44 	movi	fp,45
   22184:	9804c03a 	cmpne	r2,r19,zero
   22188:	05adc83a 	sub	r22,zero,r22
   2218c:	df002785 	stb	fp,158(sp)
   22190:	b0adc83a 	sub	r22,r22,r2
   22194:	28017b16 	blt	r5,zero,22784 <___vfprintf_internal_r+0x1d2c>
   22198:	00bfdfc4 	movi	r2,-129
   2219c:	90a4703a 	and	r18,r18,r2
   221a0:	003b8906 	br	20fc8 <__alt_data_end+0xfffe1bc8>
   221a4:	d9003617 	ldw	r4,216(sp)
   221a8:	d9403817 	ldw	r5,224(sp)
   221ac:	da003d15 	stw	r8,244(sp)
   221b0:	00272d40 	call	272d4 <__fpclassifyd>
   221b4:	da003d17 	ldw	r8,244(sp)
   221b8:	1000f026 	beq	r2,zero,2257c <___vfprintf_internal_r+0x1b24>
   221bc:	d9002a17 	ldw	r4,168(sp)
   221c0:	05bff7c4 	movi	r22,-33
   221c4:	00bfffc4 	movi	r2,-1
   221c8:	8dac703a 	and	r22,r17,r22
   221cc:	20820026 	beq	r4,r2,229d0 <___vfprintf_internal_r+0x1f78>
   221d0:	008011c4 	movi	r2,71
   221d4:	b081f726 	beq	r22,r2,229b4 <___vfprintf_internal_r+0x1f5c>
   221d8:	d9003817 	ldw	r4,224(sp)
   221dc:	90c04014 	ori	r3,r18,256
   221e0:	d8c02c15 	stw	r3,176(sp)
   221e4:	20021516 	blt	r4,zero,22a3c <___vfprintf_internal_r+0x1fe4>
   221e8:	dcc03817 	ldw	r19,224(sp)
   221ec:	d8002905 	stb	zero,164(sp)
   221f0:	00801984 	movi	r2,102
   221f4:	8881f926 	beq	r17,r2,229dc <___vfprintf_internal_r+0x1f84>
   221f8:	00801184 	movi	r2,70
   221fc:	88821c26 	beq	r17,r2,22a70 <___vfprintf_internal_r+0x2018>
   22200:	00801144 	movi	r2,69
   22204:	b081ef26 	beq	r22,r2,229c4 <___vfprintf_internal_r+0x1f6c>
   22208:	d8c02a17 	ldw	r3,168(sp)
   2220c:	d8802104 	addi	r2,sp,132
   22210:	d8800315 	stw	r2,12(sp)
   22214:	d9403617 	ldw	r5,216(sp)
   22218:	d8802504 	addi	r2,sp,148
   2221c:	d9002d17 	ldw	r4,180(sp)
   22220:	d8800215 	stw	r2,8(sp)
   22224:	d8802604 	addi	r2,sp,152
   22228:	d8c00015 	stw	r3,0(sp)
   2222c:	d8800115 	stw	r2,4(sp)
   22230:	01c00084 	movi	r7,2
   22234:	980d883a 	mov	r6,r19
   22238:	d8c03c15 	stw	r3,240(sp)
   2223c:	da003d15 	stw	r8,244(sp)
   22240:	00231880 	call	23188 <_dtoa_r>
   22244:	1021883a 	mov	r16,r2
   22248:	008019c4 	movi	r2,103
   2224c:	d8c03c17 	ldw	r3,240(sp)
   22250:	da003d17 	ldw	r8,244(sp)
   22254:	88817126 	beq	r17,r2,2281c <___vfprintf_internal_r+0x1dc4>
   22258:	008011c4 	movi	r2,71
   2225c:	88829126 	beq	r17,r2,22ca4 <___vfprintf_internal_r+0x224c>
   22260:	80f9883a 	add	fp,r16,r3
   22264:	d9003617 	ldw	r4,216(sp)
   22268:	000d883a 	mov	r6,zero
   2226c:	000f883a 	mov	r7,zero
   22270:	980b883a 	mov	r5,r19
   22274:	da003d15 	stw	r8,244(sp)
   22278:	002c1540 	call	2c154 <__eqdf2>
   2227c:	da003d17 	ldw	r8,244(sp)
   22280:	10018d26 	beq	r2,zero,228b8 <___vfprintf_internal_r+0x1e60>
   22284:	d8802117 	ldw	r2,132(sp)
   22288:	1700062e 	bgeu	r2,fp,222a4 <___vfprintf_internal_r+0x184c>
   2228c:	01000c04 	movi	r4,48
   22290:	10c00044 	addi	r3,r2,1
   22294:	d8c02115 	stw	r3,132(sp)
   22298:	11000005 	stb	r4,0(r2)
   2229c:	d8802117 	ldw	r2,132(sp)
   222a0:	173ffb36 	bltu	r2,fp,22290 <__alt_data_end+0xfffe2e90>
   222a4:	1405c83a 	sub	r2,r2,r16
   222a8:	d8803315 	stw	r2,204(sp)
   222ac:	008011c4 	movi	r2,71
   222b0:	b0817626 	beq	r22,r2,2288c <___vfprintf_internal_r+0x1e34>
   222b4:	00801944 	movi	r2,101
   222b8:	1442800e 	bge	r2,r17,22cbc <___vfprintf_internal_r+0x2264>
   222bc:	d8c02617 	ldw	r3,152(sp)
   222c0:	00801984 	movi	r2,102
   222c4:	d8c03215 	stw	r3,200(sp)
   222c8:	8881fe26 	beq	r17,r2,22ac4 <___vfprintf_internal_r+0x206c>
   222cc:	d8c03217 	ldw	r3,200(sp)
   222d0:	d9003317 	ldw	r4,204(sp)
   222d4:	1901dd16 	blt	r3,r4,22a4c <___vfprintf_internal_r+0x1ff4>
   222d8:	9480004c 	andi	r18,r18,1
   222dc:	90022b1e 	bne	r18,zero,22b8c <___vfprintf_internal_r+0x2134>
   222e0:	1805883a 	mov	r2,r3
   222e4:	18028316 	blt	r3,zero,22cf4 <___vfprintf_internal_r+0x229c>
   222e8:	d8c03217 	ldw	r3,200(sp)
   222ec:	044019c4 	movi	r17,103
   222f0:	d8c02b15 	stw	r3,172(sp)
   222f4:	df002907 	ldb	fp,164(sp)
   222f8:	e001531e 	bne	fp,zero,22848 <___vfprintf_internal_r+0x1df0>
   222fc:	df002783 	ldbu	fp,158(sp)
   22300:	d8802915 	stw	r2,164(sp)
   22304:	dc802c17 	ldw	r18,176(sp)
   22308:	d8002a15 	stw	zero,168(sp)
   2230c:	003baf06 	br	211cc <__alt_data_end+0xfffe1dcc>
   22310:	d8c02e17 	ldw	r3,184(sp)
   22314:	d9002e17 	ldw	r4,184(sp)
   22318:	d9402e17 	ldw	r5,184(sp)
   2231c:	18c00017 	ldw	r3,0(r3)
   22320:	21000117 	ldw	r4,4(r4)
   22324:	29400204 	addi	r5,r5,8
   22328:	d8c03615 	stw	r3,216(sp)
   2232c:	d9003815 	stw	r4,224(sp)
   22330:	d9402e15 	stw	r5,184(sp)
   22334:	003b5006 	br	21078 <__alt_data_end+0xfffe1c78>
   22338:	ac400007 	ldb	r17,0(r21)
   2233c:	003a2806 	br	20be0 <__alt_data_end+0xfffe17e0>
   22340:	9080100c 	andi	r2,r18,64
   22344:	1000a826 	beq	r2,zero,225e8 <___vfprintf_internal_r+0x1b90>
   22348:	d8c02e17 	ldw	r3,184(sp)
   2234c:	002d883a 	mov	r22,zero
   22350:	1cc0000b 	ldhu	r19,0(r3)
   22354:	18c00104 	addi	r3,r3,4
   22358:	d8c02e15 	stw	r3,184(sp)
   2235c:	003caf06 	br	2161c <__alt_data_end+0xfffe221c>
   22360:	d9002e17 	ldw	r4,184(sp)
   22364:	d9402a17 	ldw	r5,168(sp)
   22368:	002d883a 	mov	r22,zero
   2236c:	20800104 	addi	r2,r4,4
   22370:	24c00017 	ldw	r19,0(r4)
   22374:	283ebb0e 	bge	r5,zero,21e64 <__alt_data_end+0xfffe2a64>
   22378:	003ef106 	br	21f40 <__alt_data_end+0xfffe2b40>
   2237c:	9080040c 	andi	r2,r18,16
   22380:	1000921e 	bne	r2,zero,225cc <___vfprintf_internal_r+0x1b74>
   22384:	9480100c 	andi	r18,r18,64
   22388:	90013926 	beq	r18,zero,22870 <___vfprintf_internal_r+0x1e18>
   2238c:	d9402e17 	ldw	r5,184(sp)
   22390:	d8c02f17 	ldw	r3,188(sp)
   22394:	28800017 	ldw	r2,0(r5)
   22398:	29400104 	addi	r5,r5,4
   2239c:	d9402e15 	stw	r5,184(sp)
   223a0:	10c0000d 	sth	r3,0(r2)
   223a4:	0039e406 	br	20b38 <__alt_data_end+0xfffe1738>
   223a8:	9080100c 	andi	r2,r18,64
   223ac:	10008026 	beq	r2,zero,225b0 <___vfprintf_internal_r+0x1b58>
   223b0:	d8802e17 	ldw	r2,184(sp)
   223b4:	14c0000f 	ldh	r19,0(r2)
   223b8:	10800104 	addi	r2,r2,4
   223bc:	d8802e15 	stw	r2,184(sp)
   223c0:	982dd7fa 	srai	r22,r19,31
   223c4:	b005883a 	mov	r2,r22
   223c8:	003af706 	br	20fa8 <__alt_data_end+0xfffe1ba8>
   223cc:	9080100c 	andi	r2,r18,64
   223d0:	d8002785 	stb	zero,158(sp)
   223d4:	10008a1e 	bne	r2,zero,22600 <___vfprintf_internal_r+0x1ba8>
   223d8:	d9002e17 	ldw	r4,184(sp)
   223dc:	d9402a17 	ldw	r5,168(sp)
   223e0:	002d883a 	mov	r22,zero
   223e4:	20800104 	addi	r2,r4,4
   223e8:	24c00017 	ldw	r19,0(r4)
   223ec:	283e4b0e 	bge	r5,zero,21d1c <__alt_data_end+0xfffe291c>
   223f0:	9d86b03a 	or	r3,r19,r22
   223f4:	d8802e15 	stw	r2,184(sp)
   223f8:	183e4c1e 	bne	r3,zero,21d2c <__alt_data_end+0xfffe292c>
   223fc:	0039883a 	mov	fp,zero
   22400:	0005883a 	mov	r2,zero
   22404:	003d4006 	br	21908 <__alt_data_end+0xfffe2508>
   22408:	014000f4 	movhi	r5,3
   2240c:	297fcb84 	addi	r5,r5,-210
   22410:	d9402c15 	stw	r5,176(sp)
   22414:	d9402c17 	ldw	r5,176(sp)
   22418:	1c47883a 	add	r3,r3,r17
   2241c:	10800044 	addi	r2,r2,1
   22420:	41400015 	stw	r5,0(r8)
   22424:	44400115 	stw	r17,4(r8)
   22428:	d8c02015 	stw	r3,128(sp)
   2242c:	d8801f15 	stw	r2,124(sp)
   22430:	010001c4 	movi	r4,7
   22434:	20bec816 	blt	r4,r2,21f58 <__alt_data_end+0xfffe2b58>
   22438:	42000204 	addi	r8,r8,8
   2243c:	003ecd06 	br	21f74 <__alt_data_end+0xfffe2b74>
   22440:	d9002a17 	ldw	r4,168(sp)
   22444:	d8002785 	stb	zero,158(sp)
   22448:	203d2d16 	blt	r4,zero,21900 <__alt_data_end+0xfffe2500>
   2244c:	00bfdfc4 	movi	r2,-129
   22450:	90a4703a 	and	r18,r18,r2
   22454:	003a6106 	br	20ddc <__alt_data_end+0xfffe19dc>
   22458:	010000f4 	movhi	r4,3
   2245c:	213fcb84 	addi	r4,r4,-210
   22460:	d9002c15 	stw	r4,176(sp)
   22464:	003bea06 	br	21410 <__alt_data_end+0xfffe2010>
   22468:	d9002d17 	ldw	r4,180(sp)
   2246c:	d9801e04 	addi	r6,sp,120
   22470:	b80b883a 	mov	r5,r23
   22474:	002766c0 	call	2766c <__sprint_r>
   22478:	103a7b1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   2247c:	d8c02017 	ldw	r3,128(sp)
   22480:	da000404 	addi	r8,sp,16
   22484:	003d4106 	br	2198c <__alt_data_end+0xfffe258c>
   22488:	d8801f17 	ldw	r2,124(sp)
   2248c:	014000f4 	movhi	r5,3
   22490:	01000044 	movi	r4,1
   22494:	18c00044 	addi	r3,r3,1
   22498:	10800044 	addi	r2,r2,1
   2249c:	297fcb04 	addi	r5,r5,-212
   224a0:	41000115 	stw	r4,4(r8)
   224a4:	41400015 	stw	r5,0(r8)
   224a8:	d8c02015 	stw	r3,128(sp)
   224ac:	d8801f15 	stw	r2,124(sp)
   224b0:	010001c4 	movi	r4,7
   224b4:	20805c16 	blt	r4,r2,22628 <___vfprintf_internal_r+0x1bd0>
   224b8:	42000204 	addi	r8,r8,8
   224bc:	8800041e 	bne	r17,zero,224d0 <___vfprintf_internal_r+0x1a78>
   224c0:	d8803317 	ldw	r2,204(sp)
   224c4:	1000021e 	bne	r2,zero,224d0 <___vfprintf_internal_r+0x1a78>
   224c8:	9080004c 	andi	r2,r18,1
   224cc:	103be726 	beq	r2,zero,2146c <__alt_data_end+0xfffe206c>
   224d0:	d9003717 	ldw	r4,220(sp)
   224d4:	d8801f17 	ldw	r2,124(sp)
   224d8:	d9403417 	ldw	r5,208(sp)
   224dc:	20c7883a 	add	r3,r4,r3
   224e0:	10800044 	addi	r2,r2,1
   224e4:	41000115 	stw	r4,4(r8)
   224e8:	41400015 	stw	r5,0(r8)
   224ec:	d8c02015 	stw	r3,128(sp)
   224f0:	d8801f15 	stw	r2,124(sp)
   224f4:	010001c4 	movi	r4,7
   224f8:	20812116 	blt	r4,r2,22980 <___vfprintf_internal_r+0x1f28>
   224fc:	42000204 	addi	r8,r8,8
   22500:	0463c83a 	sub	r17,zero,r17
   22504:	0440730e 	bge	zero,r17,226d4 <___vfprintf_internal_r+0x1c7c>
   22508:	05800404 	movi	r22,16
   2250c:	b440860e 	bge	r22,r17,22728 <___vfprintf_internal_r+0x1cd0>
   22510:	014000f4 	movhi	r5,3
   22514:	297fcb84 	addi	r5,r5,-210
   22518:	d9402c15 	stw	r5,176(sp)
   2251c:	070001c4 	movi	fp,7
   22520:	dcc02d17 	ldw	r19,180(sp)
   22524:	00000306 	br	22534 <___vfprintf_internal_r+0x1adc>
   22528:	42000204 	addi	r8,r8,8
   2252c:	8c7ffc04 	addi	r17,r17,-16
   22530:	b440800e 	bge	r22,r17,22734 <___vfprintf_internal_r+0x1cdc>
   22534:	18c00404 	addi	r3,r3,16
   22538:	10800044 	addi	r2,r2,1
   2253c:	45000015 	stw	r20,0(r8)
   22540:	45800115 	stw	r22,4(r8)
   22544:	d8c02015 	stw	r3,128(sp)
   22548:	d8801f15 	stw	r2,124(sp)
   2254c:	e0bff60e 	bge	fp,r2,22528 <__alt_data_end+0xfffe3128>
   22550:	d9801e04 	addi	r6,sp,120
   22554:	b80b883a 	mov	r5,r23
   22558:	9809883a 	mov	r4,r19
   2255c:	002766c0 	call	2766c <__sprint_r>
   22560:	103a411e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   22564:	d8c02017 	ldw	r3,128(sp)
   22568:	d8801f17 	ldw	r2,124(sp)
   2256c:	da000404 	addi	r8,sp,16
   22570:	003fee06 	br	2252c <__alt_data_end+0xfffe312c>
   22574:	00bfffc4 	movi	r2,-1
   22578:	003a3f06 	br	20e78 <__alt_data_end+0xfffe1a78>
   2257c:	008011c4 	movi	r2,71
   22580:	1440b816 	blt	r2,r17,22864 <___vfprintf_internal_r+0x1e0c>
   22584:	040000f4 	movhi	r16,3
   22588:	843fbd04 	addi	r16,r16,-268
   2258c:	00c000c4 	movi	r3,3
   22590:	00bfdfc4 	movi	r2,-129
   22594:	d8c02915 	stw	r3,164(sp)
   22598:	90a4703a 	and	r18,r18,r2
   2259c:	df002783 	ldbu	fp,158(sp)
   225a0:	d8c02b15 	stw	r3,172(sp)
   225a4:	d8002a15 	stw	zero,168(sp)
   225a8:	d8003215 	stw	zero,200(sp)
   225ac:	003b0706 	br	211cc <__alt_data_end+0xfffe1dcc>
   225b0:	d8c02e17 	ldw	r3,184(sp)
   225b4:	1cc00017 	ldw	r19,0(r3)
   225b8:	18c00104 	addi	r3,r3,4
   225bc:	d8c02e15 	stw	r3,184(sp)
   225c0:	982dd7fa 	srai	r22,r19,31
   225c4:	b005883a 	mov	r2,r22
   225c8:	003a7706 	br	20fa8 <__alt_data_end+0xfffe1ba8>
   225cc:	d8c02e17 	ldw	r3,184(sp)
   225d0:	d9002f17 	ldw	r4,188(sp)
   225d4:	18800017 	ldw	r2,0(r3)
   225d8:	18c00104 	addi	r3,r3,4
   225dc:	d8c02e15 	stw	r3,184(sp)
   225e0:	11000015 	stw	r4,0(r2)
   225e4:	00395406 	br	20b38 <__alt_data_end+0xfffe1738>
   225e8:	d9002e17 	ldw	r4,184(sp)
   225ec:	002d883a 	mov	r22,zero
   225f0:	24c00017 	ldw	r19,0(r4)
   225f4:	21000104 	addi	r4,r4,4
   225f8:	d9002e15 	stw	r4,184(sp)
   225fc:	003c0706 	br	2161c <__alt_data_end+0xfffe221c>
   22600:	d9402e17 	ldw	r5,184(sp)
   22604:	d8c02a17 	ldw	r3,168(sp)
   22608:	002d883a 	mov	r22,zero
   2260c:	28800104 	addi	r2,r5,4
   22610:	2cc0000b 	ldhu	r19,0(r5)
   22614:	183dc10e 	bge	r3,zero,21d1c <__alt_data_end+0xfffe291c>
   22618:	003f7506 	br	223f0 <__alt_data_end+0xfffe2ff0>
   2261c:	040000f4 	movhi	r16,3
   22620:	843fbb04 	addi	r16,r16,-276
   22624:	003aa706 	br	210c4 <__alt_data_end+0xfffe1cc4>
   22628:	d9002d17 	ldw	r4,180(sp)
   2262c:	d9801e04 	addi	r6,sp,120
   22630:	b80b883a 	mov	r5,r23
   22634:	002766c0 	call	2766c <__sprint_r>
   22638:	103a0b1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   2263c:	dc402617 	ldw	r17,152(sp)
   22640:	d8c02017 	ldw	r3,128(sp)
   22644:	da000404 	addi	r8,sp,16
   22648:	003f9c06 	br	224bc <__alt_data_end+0xfffe30bc>
   2264c:	ac400043 	ldbu	r17,1(r21)
   22650:	84000814 	ori	r16,r16,32
   22654:	ad400044 	addi	r21,r21,1
   22658:	8c403fcc 	andi	r17,r17,255
   2265c:	8c40201c 	xori	r17,r17,128
   22660:	8c7fe004 	addi	r17,r17,-128
   22664:	00395e06 	br	20be0 <__alt_data_end+0xfffe17e0>
   22668:	d8c02e15 	stw	r3,184(sp)
   2266c:	0039883a 	mov	fp,zero
   22670:	003e3506 	br	21f48 <__alt_data_end+0xfffe2b48>
   22674:	d9002d17 	ldw	r4,180(sp)
   22678:	d9801e04 	addi	r6,sp,120
   2267c:	b80b883a 	mov	r5,r23
   22680:	002766c0 	call	2766c <__sprint_r>
   22684:	1039f81e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   22688:	d8c02017 	ldw	r3,128(sp)
   2268c:	da000404 	addi	r8,sp,16
   22690:	003cd006 	br	219d4 <__alt_data_end+0xfffe25d4>
   22694:	8009883a 	mov	r4,r16
   22698:	df003d15 	stw	fp,244(sp)
   2269c:	00274d80 	call	274d8 <strlen>
   226a0:	d8802b15 	stw	r2,172(sp)
   226a4:	da003d17 	ldw	r8,244(sp)
   226a8:	103c200e 	bge	r2,zero,2172c <__alt_data_end+0xfffe232c>
   226ac:	0005883a 	mov	r2,zero
   226b0:	003c1e06 	br	2172c <__alt_data_end+0xfffe232c>
   226b4:	d9002d17 	ldw	r4,180(sp)
   226b8:	d9801e04 	addi	r6,sp,120
   226bc:	b80b883a 	mov	r5,r23
   226c0:	002766c0 	call	2766c <__sprint_r>
   226c4:	1039e81e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   226c8:	d8c02017 	ldw	r3,128(sp)
   226cc:	d8801f17 	ldw	r2,124(sp)
   226d0:	da000404 	addi	r8,sp,16
   226d4:	d9403317 	ldw	r5,204(sp)
   226d8:	10800044 	addi	r2,r2,1
   226dc:	44000015 	stw	r16,0(r8)
   226e0:	28c7883a 	add	r3,r5,r3
   226e4:	003b5b06 	br	21454 <__alt_data_end+0xfffe2054>
   226e8:	010000f4 	movhi	r4,3
   226ec:	213fcf84 	addi	r4,r4,-194
   226f0:	d9003515 	stw	r4,212(sp)
   226f4:	003af206 	br	212c0 <__alt_data_end+0xfffe1ec0>
   226f8:	013fffc4 	movi	r4,-1
   226fc:	003a0806 	br	20f20 <__alt_data_end+0xfffe1b20>
   22700:	0023883a 	mov	r17,zero
   22704:	003d9d06 	br	21d7c <__alt_data_end+0xfffe297c>
   22708:	d9002d17 	ldw	r4,180(sp)
   2270c:	d9801e04 	addi	r6,sp,120
   22710:	b80b883a 	mov	r5,r23
   22714:	002766c0 	call	2766c <__sprint_r>
   22718:	1039d31e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   2271c:	d8c02017 	ldw	r3,128(sp)
   22720:	da000404 	addi	r8,sp,16
   22724:	003d9406 	br	21d78 <__alt_data_end+0xfffe2978>
   22728:	010000f4 	movhi	r4,3
   2272c:	213fcb84 	addi	r4,r4,-210
   22730:	d9002c15 	stw	r4,176(sp)
   22734:	d9002c17 	ldw	r4,176(sp)
   22738:	1c47883a 	add	r3,r3,r17
   2273c:	10800044 	addi	r2,r2,1
   22740:	41000015 	stw	r4,0(r8)
   22744:	44400115 	stw	r17,4(r8)
   22748:	d8c02015 	stw	r3,128(sp)
   2274c:	d8801f15 	stw	r2,124(sp)
   22750:	010001c4 	movi	r4,7
   22754:	20bfd716 	blt	r4,r2,226b4 <__alt_data_end+0xfffe32b4>
   22758:	42000204 	addi	r8,r8,8
   2275c:	003fdd06 	br	226d4 <__alt_data_end+0xfffe32d4>
   22760:	d9002d17 	ldw	r4,180(sp)
   22764:	d9801e04 	addi	r6,sp,120
   22768:	b80b883a 	mov	r5,r23
   2276c:	002766c0 	call	2766c <__sprint_r>
   22770:	1039bd1e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   22774:	d8802617 	ldw	r2,152(sp)
   22778:	d8c02017 	ldw	r3,128(sp)
   2277c:	da000404 	addi	r8,sp,16
   22780:	003e1006 	br	21fc4 <__alt_data_end+0xfffe2bc4>
   22784:	00800044 	movi	r2,1
   22788:	10803fcc 	andi	r2,r2,255
   2278c:	00c00044 	movi	r3,1
   22790:	10fa0d26 	beq	r2,r3,20fc8 <__alt_data_end+0xfffe1bc8>
   22794:	00c00084 	movi	r3,2
   22798:	10fbaf26 	beq	r2,r3,21658 <__alt_data_end+0xfffe2258>
   2279c:	003a6d06 	br	21154 <__alt_data_end+0xfffe1d54>
   227a0:	010000f4 	movhi	r4,3
   227a4:	213fcf84 	addi	r4,r4,-194
   227a8:	d9003515 	stw	r4,212(sp)
   227ac:	003b5406 	br	21500 <__alt_data_end+0xfffe2100>
   227b0:	d8802a17 	ldw	r2,168(sp)
   227b4:	00c00184 	movi	r3,6
   227b8:	1880012e 	bgeu	r3,r2,227c0 <___vfprintf_internal_r+0x1d68>
   227bc:	1805883a 	mov	r2,r3
   227c0:	d8802b15 	stw	r2,172(sp)
   227c4:	1000ef16 	blt	r2,zero,22b84 <___vfprintf_internal_r+0x212c>
   227c8:	040000f4 	movhi	r16,3
   227cc:	d8802915 	stw	r2,164(sp)
   227d0:	dcc02e15 	stw	r19,184(sp)
   227d4:	d8002a15 	stw	zero,168(sp)
   227d8:	d8003215 	stw	zero,200(sp)
   227dc:	843fc904 	addi	r16,r16,-220
   227e0:	0039883a 	mov	fp,zero
   227e4:	003a8006 	br	211e8 <__alt_data_end+0xfffe1de8>
   227e8:	0021883a 	mov	r16,zero
   227ec:	003e0706 	br	2200c <__alt_data_end+0xfffe2c0c>
   227f0:	d9002d17 	ldw	r4,180(sp)
   227f4:	d9801e04 	addi	r6,sp,120
   227f8:	b80b883a 	mov	r5,r23
   227fc:	002766c0 	call	2766c <__sprint_r>
   22800:	1039991e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   22804:	d8802617 	ldw	r2,152(sp)
   22808:	d9403317 	ldw	r5,204(sp)
   2280c:	d8c02017 	ldw	r3,128(sp)
   22810:	da000404 	addi	r8,sp,16
   22814:	2885c83a 	sub	r2,r5,r2
   22818:	003dfb06 	br	22008 <__alt_data_end+0xfffe2c08>
   2281c:	9080004c 	andi	r2,r18,1
   22820:	103e8f1e 	bne	r2,zero,22260 <__alt_data_end+0xfffe2e60>
   22824:	d8802117 	ldw	r2,132(sp)
   22828:	003e9e06 	br	222a4 <__alt_data_end+0xfffe2ea4>
   2282c:	1025883a 	mov	r18,r2
   22830:	0039883a 	mov	fp,zero
   22834:	00800084 	movi	r2,2
   22838:	003fd306 	br	22788 <__alt_data_end+0xfffe3388>
   2283c:	07000b44 	movi	fp,45
   22840:	df002785 	stb	fp,158(sp)
   22844:	003a1b06 	br	210b4 <__alt_data_end+0xfffe1cb4>
   22848:	00c00b44 	movi	r3,45
   2284c:	d8c02785 	stb	r3,158(sp)
   22850:	d8802915 	stw	r2,164(sp)
   22854:	dc802c17 	ldw	r18,176(sp)
   22858:	d8002a15 	stw	zero,168(sp)
   2285c:	07000b44 	movi	fp,45
   22860:	003a5e06 	br	211dc <__alt_data_end+0xfffe1ddc>
   22864:	040000f4 	movhi	r16,3
   22868:	843fbe04 	addi	r16,r16,-264
   2286c:	003f4706 	br	2258c <__alt_data_end+0xfffe318c>
   22870:	d9002e17 	ldw	r4,184(sp)
   22874:	d9402f17 	ldw	r5,188(sp)
   22878:	20800017 	ldw	r2,0(r4)
   2287c:	21000104 	addi	r4,r4,4
   22880:	d9002e15 	stw	r4,184(sp)
   22884:	11400015 	stw	r5,0(r2)
   22888:	0038ab06 	br	20b38 <__alt_data_end+0xfffe1738>
   2288c:	dd802617 	ldw	r22,152(sp)
   22890:	00bfff44 	movi	r2,-3
   22894:	b0801c16 	blt	r22,r2,22908 <___vfprintf_internal_r+0x1eb0>
   22898:	d9402a17 	ldw	r5,168(sp)
   2289c:	2d801a16 	blt	r5,r22,22908 <___vfprintf_internal_r+0x1eb0>
   228a0:	dd803215 	stw	r22,200(sp)
   228a4:	003e8906 	br	222cc <__alt_data_end+0xfffe2ecc>
   228a8:	010000f4 	movhi	r4,3
   228ac:	213fcb84 	addi	r4,r4,-210
   228b0:	d9002c15 	stw	r4,176(sp)
   228b4:	003c9106 	br	21afc <__alt_data_end+0xfffe26fc>
   228b8:	e005883a 	mov	r2,fp
   228bc:	003e7906 	br	222a4 <__alt_data_end+0xfffe2ea4>
   228c0:	d9002a17 	ldw	r4,168(sp)
   228c4:	df002783 	ldbu	fp,158(sp)
   228c8:	dcc02e15 	stw	r19,184(sp)
   228cc:	d9002915 	stw	r4,164(sp)
   228d0:	d9002b15 	stw	r4,172(sp)
   228d4:	d8002a15 	stw	zero,168(sp)
   228d8:	d8003215 	stw	zero,200(sp)
   228dc:	003a3b06 	br	211cc <__alt_data_end+0xfffe1dcc>
   228e0:	9080004c 	andi	r2,r18,1
   228e4:	0039883a 	mov	fp,zero
   228e8:	10000426 	beq	r2,zero,228fc <___vfprintf_internal_r+0x1ea4>
   228ec:	00800c04 	movi	r2,48
   228f0:	dc001dc4 	addi	r16,sp,119
   228f4:	d8801dc5 	stb	r2,119(sp)
   228f8:	003b6406 	br	2168c <__alt_data_end+0xfffe228c>
   228fc:	d8002b15 	stw	zero,172(sp)
   22900:	dc001e04 	addi	r16,sp,120
   22904:	003a2b06 	br	211b4 <__alt_data_end+0xfffe1db4>
   22908:	8c7fff84 	addi	r17,r17,-2
   2290c:	b5bfffc4 	addi	r22,r22,-1
   22910:	dd802615 	stw	r22,152(sp)
   22914:	dc4022c5 	stb	r17,139(sp)
   22918:	b000bf16 	blt	r22,zero,22c18 <___vfprintf_internal_r+0x21c0>
   2291c:	00800ac4 	movi	r2,43
   22920:	d8802305 	stb	r2,140(sp)
   22924:	00800244 	movi	r2,9
   22928:	15807016 	blt	r2,r22,22aec <___vfprintf_internal_r+0x2094>
   2292c:	00800c04 	movi	r2,48
   22930:	b5800c04 	addi	r22,r22,48
   22934:	d8802345 	stb	r2,141(sp)
   22938:	dd802385 	stb	r22,142(sp)
   2293c:	d88023c4 	addi	r2,sp,143
   22940:	df0022c4 	addi	fp,sp,139
   22944:	d8c03317 	ldw	r3,204(sp)
   22948:	1739c83a 	sub	fp,r2,fp
   2294c:	d9003317 	ldw	r4,204(sp)
   22950:	e0c7883a 	add	r3,fp,r3
   22954:	df003a15 	stw	fp,232(sp)
   22958:	d8c02b15 	stw	r3,172(sp)
   2295c:	00800044 	movi	r2,1
   22960:	1100b30e 	bge	r2,r4,22c30 <___vfprintf_internal_r+0x21d8>
   22964:	d8c02b17 	ldw	r3,172(sp)
   22968:	18c00044 	addi	r3,r3,1
   2296c:	d8c02b15 	stw	r3,172(sp)
   22970:	1805883a 	mov	r2,r3
   22974:	1800ac16 	blt	r3,zero,22c28 <___vfprintf_internal_r+0x21d0>
   22978:	d8003215 	stw	zero,200(sp)
   2297c:	003e5d06 	br	222f4 <__alt_data_end+0xfffe2ef4>
   22980:	d9002d17 	ldw	r4,180(sp)
   22984:	d9801e04 	addi	r6,sp,120
   22988:	b80b883a 	mov	r5,r23
   2298c:	002766c0 	call	2766c <__sprint_r>
   22990:	1039351e 	bne	r2,zero,20e68 <__alt_data_end+0xfffe1a68>
   22994:	dc402617 	ldw	r17,152(sp)
   22998:	d8c02017 	ldw	r3,128(sp)
   2299c:	d8801f17 	ldw	r2,124(sp)
   229a0:	da000404 	addi	r8,sp,16
   229a4:	003ed606 	br	22500 <__alt_data_end+0xfffe3100>
   229a8:	182b883a 	mov	r21,r3
   229ac:	d8002a15 	stw	zero,168(sp)
   229b0:	00388c06 	br	20be4 <__alt_data_end+0xfffe17e4>
   229b4:	d8802a17 	ldw	r2,168(sp)
   229b8:	103e071e 	bne	r2,zero,221d8 <__alt_data_end+0xfffe2dd8>
   229bc:	dc002a15 	stw	r16,168(sp)
   229c0:	003e0506 	br	221d8 <__alt_data_end+0xfffe2dd8>
   229c4:	d9002a17 	ldw	r4,168(sp)
   229c8:	20c00044 	addi	r3,r4,1
   229cc:	003e0f06 	br	2220c <__alt_data_end+0xfffe2e0c>
   229d0:	01400184 	movi	r5,6
   229d4:	d9402a15 	stw	r5,168(sp)
   229d8:	003dff06 	br	221d8 <__alt_data_end+0xfffe2dd8>
   229dc:	d8802104 	addi	r2,sp,132
   229e0:	d8800315 	stw	r2,12(sp)
   229e4:	d8802504 	addi	r2,sp,148
   229e8:	d8800215 	stw	r2,8(sp)
   229ec:	d8802604 	addi	r2,sp,152
   229f0:	d8800115 	stw	r2,4(sp)
   229f4:	d8802a17 	ldw	r2,168(sp)
   229f8:	d9403617 	ldw	r5,216(sp)
   229fc:	d9002d17 	ldw	r4,180(sp)
   22a00:	d8800015 	stw	r2,0(sp)
   22a04:	01c000c4 	movi	r7,3
   22a08:	980d883a 	mov	r6,r19
   22a0c:	da003d15 	stw	r8,244(sp)
   22a10:	00231880 	call	23188 <_dtoa_r>
   22a14:	d8c02a17 	ldw	r3,168(sp)
   22a18:	da003d17 	ldw	r8,244(sp)
   22a1c:	1021883a 	mov	r16,r2
   22a20:	10f9883a 	add	fp,r2,r3
   22a24:	81000007 	ldb	r4,0(r16)
   22a28:	00800c04 	movi	r2,48
   22a2c:	20805e26 	beq	r4,r2,22ba8 <___vfprintf_internal_r+0x2150>
   22a30:	d8c02617 	ldw	r3,152(sp)
   22a34:	e0f9883a 	add	fp,fp,r3
   22a38:	003e0a06 	br	22264 <__alt_data_end+0xfffe2e64>
   22a3c:	00c00b44 	movi	r3,45
   22a40:	24e0003c 	xorhi	r19,r4,32768
   22a44:	d8c02905 	stb	r3,164(sp)
   22a48:	003de906 	br	221f0 <__alt_data_end+0xfffe2df0>
   22a4c:	d8c03217 	ldw	r3,200(sp)
   22a50:	00c07a0e 	bge	zero,r3,22c3c <___vfprintf_internal_r+0x21e4>
   22a54:	00800044 	movi	r2,1
   22a58:	d9003317 	ldw	r4,204(sp)
   22a5c:	1105883a 	add	r2,r2,r4
   22a60:	d8802b15 	stw	r2,172(sp)
   22a64:	10004e16 	blt	r2,zero,22ba0 <___vfprintf_internal_r+0x2148>
   22a68:	044019c4 	movi	r17,103
   22a6c:	003e2106 	br	222f4 <__alt_data_end+0xfffe2ef4>
   22a70:	d9002a17 	ldw	r4,168(sp)
   22a74:	d8802104 	addi	r2,sp,132
   22a78:	d8800315 	stw	r2,12(sp)
   22a7c:	d9000015 	stw	r4,0(sp)
   22a80:	d8802504 	addi	r2,sp,148
   22a84:	d9403617 	ldw	r5,216(sp)
   22a88:	d9002d17 	ldw	r4,180(sp)
   22a8c:	d8800215 	stw	r2,8(sp)
   22a90:	d8802604 	addi	r2,sp,152
   22a94:	d8800115 	stw	r2,4(sp)
   22a98:	01c000c4 	movi	r7,3
   22a9c:	980d883a 	mov	r6,r19
   22aa0:	da003d15 	stw	r8,244(sp)
   22aa4:	00231880 	call	23188 <_dtoa_r>
   22aa8:	d8c02a17 	ldw	r3,168(sp)
   22aac:	da003d17 	ldw	r8,244(sp)
   22ab0:	1021883a 	mov	r16,r2
   22ab4:	00801184 	movi	r2,70
   22ab8:	80f9883a 	add	fp,r16,r3
   22abc:	88bfd926 	beq	r17,r2,22a24 <__alt_data_end+0xfffe3624>
   22ac0:	003de806 	br	22264 <__alt_data_end+0xfffe2e64>
   22ac4:	d9002a17 	ldw	r4,168(sp)
   22ac8:	00c04d0e 	bge	zero,r3,22c00 <___vfprintf_internal_r+0x21a8>
   22acc:	2000441e 	bne	r4,zero,22be0 <___vfprintf_internal_r+0x2188>
   22ad0:	9480004c 	andi	r18,r18,1
   22ad4:	9000421e 	bne	r18,zero,22be0 <___vfprintf_internal_r+0x2188>
   22ad8:	1805883a 	mov	r2,r3
   22adc:	18006f16 	blt	r3,zero,22c9c <___vfprintf_internal_r+0x2244>
   22ae0:	d8c03217 	ldw	r3,200(sp)
   22ae4:	d8c02b15 	stw	r3,172(sp)
   22ae8:	003e0206 	br	222f4 <__alt_data_end+0xfffe2ef4>
   22aec:	df0022c4 	addi	fp,sp,139
   22af0:	dc002a15 	stw	r16,168(sp)
   22af4:	4027883a 	mov	r19,r8
   22af8:	e021883a 	mov	r16,fp
   22afc:	b009883a 	mov	r4,r22
   22b00:	01400284 	movi	r5,10
   22b04:	002ad800 	call	2ad80 <__modsi3>
   22b08:	10800c04 	addi	r2,r2,48
   22b0c:	843fffc4 	addi	r16,r16,-1
   22b10:	b009883a 	mov	r4,r22
   22b14:	01400284 	movi	r5,10
   22b18:	80800005 	stb	r2,0(r16)
   22b1c:	002acfc0 	call	2acfc <__divsi3>
   22b20:	102d883a 	mov	r22,r2
   22b24:	00800244 	movi	r2,9
   22b28:	15bff416 	blt	r2,r22,22afc <__alt_data_end+0xfffe36fc>
   22b2c:	9811883a 	mov	r8,r19
   22b30:	b0800c04 	addi	r2,r22,48
   22b34:	8027883a 	mov	r19,r16
   22b38:	997fffc4 	addi	r5,r19,-1
   22b3c:	98bfffc5 	stb	r2,-1(r19)
   22b40:	dc002a17 	ldw	r16,168(sp)
   22b44:	2f006d2e 	bgeu	r5,fp,22cfc <___vfprintf_internal_r+0x22a4>
   22b48:	d9c02384 	addi	r7,sp,142
   22b4c:	3ccfc83a 	sub	r7,r7,r19
   22b50:	d9002344 	addi	r4,sp,141
   22b54:	e1cf883a 	add	r7,fp,r7
   22b58:	00000106 	br	22b60 <___vfprintf_internal_r+0x2108>
   22b5c:	28800003 	ldbu	r2,0(r5)
   22b60:	20800005 	stb	r2,0(r4)
   22b64:	21000044 	addi	r4,r4,1
   22b68:	29400044 	addi	r5,r5,1
   22b6c:	393ffb1e 	bne	r7,r4,22b5c <__alt_data_end+0xfffe375c>
   22b70:	d8802304 	addi	r2,sp,140
   22b74:	14c5c83a 	sub	r2,r2,r19
   22b78:	d8c02344 	addi	r3,sp,141
   22b7c:	1885883a 	add	r2,r3,r2
   22b80:	003f7006 	br	22944 <__alt_data_end+0xfffe3544>
   22b84:	0005883a 	mov	r2,zero
   22b88:	003f0f06 	br	227c8 <__alt_data_end+0xfffe33c8>
   22b8c:	d8c03217 	ldw	r3,200(sp)
   22b90:	18c00044 	addi	r3,r3,1
   22b94:	d8c02b15 	stw	r3,172(sp)
   22b98:	1805883a 	mov	r2,r3
   22b9c:	183fb20e 	bge	r3,zero,22a68 <__alt_data_end+0xfffe3668>
   22ba0:	0005883a 	mov	r2,zero
   22ba4:	003fb006 	br	22a68 <__alt_data_end+0xfffe3668>
   22ba8:	d9003617 	ldw	r4,216(sp)
   22bac:	000d883a 	mov	r6,zero
   22bb0:	000f883a 	mov	r7,zero
   22bb4:	980b883a 	mov	r5,r19
   22bb8:	d8c03c15 	stw	r3,240(sp)
   22bbc:	da003d15 	stw	r8,244(sp)
   22bc0:	002c1540 	call	2c154 <__eqdf2>
   22bc4:	d8c03c17 	ldw	r3,240(sp)
   22bc8:	da003d17 	ldw	r8,244(sp)
   22bcc:	103f9826 	beq	r2,zero,22a30 <__alt_data_end+0xfffe3630>
   22bd0:	00800044 	movi	r2,1
   22bd4:	10c7c83a 	sub	r3,r2,r3
   22bd8:	d8c02615 	stw	r3,152(sp)
   22bdc:	003f9506 	br	22a34 <__alt_data_end+0xfffe3634>
   22be0:	d9002a17 	ldw	r4,168(sp)
   22be4:	d8c03217 	ldw	r3,200(sp)
   22be8:	20800044 	addi	r2,r4,1
   22bec:	1885883a 	add	r2,r3,r2
   22bf0:	d8802b15 	stw	r2,172(sp)
   22bf4:	103dbf0e 	bge	r2,zero,222f4 <__alt_data_end+0xfffe2ef4>
   22bf8:	0005883a 	mov	r2,zero
   22bfc:	003dbd06 	br	222f4 <__alt_data_end+0xfffe2ef4>
   22c00:	2000201e 	bne	r4,zero,22c84 <___vfprintf_internal_r+0x222c>
   22c04:	9480004c 	andi	r18,r18,1
   22c08:	90001e1e 	bne	r18,zero,22c84 <___vfprintf_internal_r+0x222c>
   22c0c:	00800044 	movi	r2,1
   22c10:	d8802b15 	stw	r2,172(sp)
   22c14:	003db706 	br	222f4 <__alt_data_end+0xfffe2ef4>
   22c18:	00800b44 	movi	r2,45
   22c1c:	05adc83a 	sub	r22,zero,r22
   22c20:	d8802305 	stb	r2,140(sp)
   22c24:	003f3f06 	br	22924 <__alt_data_end+0xfffe3524>
   22c28:	0005883a 	mov	r2,zero
   22c2c:	003f5206 	br	22978 <__alt_data_end+0xfffe3578>
   22c30:	90a4703a 	and	r18,r18,r2
   22c34:	903f4e26 	beq	r18,zero,22970 <__alt_data_end+0xfffe3570>
   22c38:	003f4a06 	br	22964 <__alt_data_end+0xfffe3564>
   22c3c:	00800084 	movi	r2,2
   22c40:	10c5c83a 	sub	r2,r2,r3
   22c44:	003f8406 	br	22a58 <__alt_data_end+0xfffe3658>
   22c48:	d9402e17 	ldw	r5,184(sp)
   22c4c:	d9002e17 	ldw	r4,184(sp)
   22c50:	ac400043 	ldbu	r17,1(r21)
   22c54:	29400017 	ldw	r5,0(r5)
   22c58:	20800104 	addi	r2,r4,4
   22c5c:	d8802e15 	stw	r2,184(sp)
   22c60:	d9402a15 	stw	r5,168(sp)
   22c64:	182b883a 	mov	r21,r3
   22c68:	283e7b0e 	bge	r5,zero,22658 <__alt_data_end+0xfffe3258>
   22c6c:	8c403fcc 	andi	r17,r17,255
   22c70:	017fffc4 	movi	r5,-1
   22c74:	8c40201c 	xori	r17,r17,128
   22c78:	d9402a15 	stw	r5,168(sp)
   22c7c:	8c7fe004 	addi	r17,r17,-128
   22c80:	0037d706 	br	20be0 <__alt_data_end+0xfffe17e0>
   22c84:	d8c02a17 	ldw	r3,168(sp)
   22c88:	18c00084 	addi	r3,r3,2
   22c8c:	d8c02b15 	stw	r3,172(sp)
   22c90:	1805883a 	mov	r2,r3
   22c94:	183d970e 	bge	r3,zero,222f4 <__alt_data_end+0xfffe2ef4>
   22c98:	003fd706 	br	22bf8 <__alt_data_end+0xfffe37f8>
   22c9c:	0005883a 	mov	r2,zero
   22ca0:	003f8f06 	br	22ae0 <__alt_data_end+0xfffe36e0>
   22ca4:	9080004c 	andi	r2,r18,1
   22ca8:	103f821e 	bne	r2,zero,22ab4 <__alt_data_end+0xfffe36b4>
   22cac:	d8802117 	ldw	r2,132(sp)
   22cb0:	1405c83a 	sub	r2,r2,r16
   22cb4:	d8803315 	stw	r2,204(sp)
   22cb8:	b47ef426 	beq	r22,r17,2288c <__alt_data_end+0xfffe348c>
   22cbc:	dd802617 	ldw	r22,152(sp)
   22cc0:	003f1206 	br	2290c <__alt_data_end+0xfffe350c>
   22cc4:	d8c02b03 	ldbu	r3,172(sp)
   22cc8:	d8c02785 	stb	r3,158(sp)
   22ccc:	0038df06 	br	2104c <__alt_data_end+0xfffe1c4c>
   22cd0:	d8c02b03 	ldbu	r3,172(sp)
   22cd4:	d8c02785 	stb	r3,158(sp)
   22cd8:	0038aa06 	br	20f84 <__alt_data_end+0xfffe1b84>
   22cdc:	d8c02b03 	ldbu	r3,172(sp)
   22ce0:	d8c02785 	stb	r3,158(sp)
   22ce4:	003a4306 	br	215f4 <__alt_data_end+0xfffe21f4>
   22ce8:	d8c02b03 	ldbu	r3,172(sp)
   22cec:	d8c02785 	stb	r3,158(sp)
   22cf0:	003af506 	br	218c8 <__alt_data_end+0xfffe24c8>
   22cf4:	0005883a 	mov	r2,zero
   22cf8:	003d7b06 	br	222e8 <__alt_data_end+0xfffe2ee8>
   22cfc:	d8802344 	addi	r2,sp,141
   22d00:	003f1006 	br	22944 <__alt_data_end+0xfffe3544>
   22d04:	d8c02b03 	ldbu	r3,172(sp)
   22d08:	d8c02785 	stb	r3,158(sp)
   22d0c:	0038fd06 	br	21104 <__alt_data_end+0xfffe1d04>
   22d10:	d8c02b03 	ldbu	r3,172(sp)
   22d14:	d8c02785 	stb	r3,158(sp)
   22d18:	003a9706 	br	21778 <__alt_data_end+0xfffe2378>
   22d1c:	d8c02b03 	ldbu	r3,172(sp)
   22d20:	d8c02785 	stb	r3,158(sp)
   22d24:	003a1806 	br	21588 <__alt_data_end+0xfffe2188>
   22d28:	d8c02b03 	ldbu	r3,172(sp)
   22d2c:	d8c02785 	stb	r3,158(sp)
   22d30:	003abe06 	br	2182c <__alt_data_end+0xfffe242c>

00022d34 <__vfprintf_internal>:
   22d34:	008000f4 	movhi	r2,3
   22d38:	10872604 	addi	r2,r2,7320
   22d3c:	300f883a 	mov	r7,r6
   22d40:	280d883a 	mov	r6,r5
   22d44:	200b883a 	mov	r5,r4
   22d48:	11000017 	ldw	r4,0(r2)
   22d4c:	0020a581 	jmpi	20a58 <___vfprintf_internal_r>

00022d50 <__sbprintf>:
   22d50:	2880030b 	ldhu	r2,12(r5)
   22d54:	2ac01917 	ldw	r11,100(r5)
   22d58:	2a80038b 	ldhu	r10,14(r5)
   22d5c:	2a400717 	ldw	r9,28(r5)
   22d60:	2a000917 	ldw	r8,36(r5)
   22d64:	defee204 	addi	sp,sp,-1144
   22d68:	00c10004 	movi	r3,1024
   22d6c:	dc011a15 	stw	r16,1128(sp)
   22d70:	10bfff4c 	andi	r2,r2,65533
   22d74:	2821883a 	mov	r16,r5
   22d78:	d8cb883a 	add	r5,sp,r3
   22d7c:	dc811c15 	stw	r18,1136(sp)
   22d80:	dc411b15 	stw	r17,1132(sp)
   22d84:	dfc11d15 	stw	ra,1140(sp)
   22d88:	2025883a 	mov	r18,r4
   22d8c:	d881030d 	sth	r2,1036(sp)
   22d90:	dac11915 	stw	r11,1124(sp)
   22d94:	da81038d 	sth	r10,1038(sp)
   22d98:	da410715 	stw	r9,1052(sp)
   22d9c:	da010915 	stw	r8,1060(sp)
   22da0:	dec10015 	stw	sp,1024(sp)
   22da4:	dec10415 	stw	sp,1040(sp)
   22da8:	d8c10215 	stw	r3,1032(sp)
   22dac:	d8c10515 	stw	r3,1044(sp)
   22db0:	d8010615 	stw	zero,1048(sp)
   22db4:	0020a580 	call	20a58 <___vfprintf_internal_r>
   22db8:	1023883a 	mov	r17,r2
   22dbc:	10000416 	blt	r2,zero,22dd0 <__sbprintf+0x80>
   22dc0:	d9410004 	addi	r5,sp,1024
   22dc4:	9009883a 	mov	r4,r18
   22dc8:	0024a2c0 	call	24a2c <_fflush_r>
   22dcc:	10000d1e 	bne	r2,zero,22e04 <__sbprintf+0xb4>
   22dd0:	d881030b 	ldhu	r2,1036(sp)
   22dd4:	1080100c 	andi	r2,r2,64
   22dd8:	10000326 	beq	r2,zero,22de8 <__sbprintf+0x98>
   22ddc:	8080030b 	ldhu	r2,12(r16)
   22de0:	10801014 	ori	r2,r2,64
   22de4:	8080030d 	sth	r2,12(r16)
   22de8:	8805883a 	mov	r2,r17
   22dec:	dfc11d17 	ldw	ra,1140(sp)
   22df0:	dc811c17 	ldw	r18,1136(sp)
   22df4:	dc411b17 	ldw	r17,1132(sp)
   22df8:	dc011a17 	ldw	r16,1128(sp)
   22dfc:	dec11e04 	addi	sp,sp,1144
   22e00:	f800283a 	ret
   22e04:	047fffc4 	movi	r17,-1
   22e08:	003ff106 	br	22dd0 <__alt_data_end+0xfffe39d0>

00022e0c <__swsetup_r>:
   22e0c:	008000f4 	movhi	r2,3
   22e10:	defffd04 	addi	sp,sp,-12
   22e14:	10872604 	addi	r2,r2,7320
   22e18:	dc400115 	stw	r17,4(sp)
   22e1c:	2023883a 	mov	r17,r4
   22e20:	11000017 	ldw	r4,0(r2)
   22e24:	dc000015 	stw	r16,0(sp)
   22e28:	dfc00215 	stw	ra,8(sp)
   22e2c:	2821883a 	mov	r16,r5
   22e30:	20000226 	beq	r4,zero,22e3c <__swsetup_r+0x30>
   22e34:	20800e17 	ldw	r2,56(r4)
   22e38:	10003126 	beq	r2,zero,22f00 <__swsetup_r+0xf4>
   22e3c:	8080030b 	ldhu	r2,12(r16)
   22e40:	10c0020c 	andi	r3,r2,8
   22e44:	1009883a 	mov	r4,r2
   22e48:	18000f26 	beq	r3,zero,22e88 <__swsetup_r+0x7c>
   22e4c:	80c00417 	ldw	r3,16(r16)
   22e50:	18001526 	beq	r3,zero,22ea8 <__swsetup_r+0x9c>
   22e54:	1100004c 	andi	r4,r2,1
   22e58:	20001c1e 	bne	r4,zero,22ecc <__swsetup_r+0xc0>
   22e5c:	1080008c 	andi	r2,r2,2
   22e60:	1000291e 	bne	r2,zero,22f08 <__swsetup_r+0xfc>
   22e64:	80800517 	ldw	r2,20(r16)
   22e68:	80800215 	stw	r2,8(r16)
   22e6c:	18001c26 	beq	r3,zero,22ee0 <__swsetup_r+0xd4>
   22e70:	0005883a 	mov	r2,zero
   22e74:	dfc00217 	ldw	ra,8(sp)
   22e78:	dc400117 	ldw	r17,4(sp)
   22e7c:	dc000017 	ldw	r16,0(sp)
   22e80:	dec00304 	addi	sp,sp,12
   22e84:	f800283a 	ret
   22e88:	2080040c 	andi	r2,r4,16
   22e8c:	10002e26 	beq	r2,zero,22f48 <__swsetup_r+0x13c>
   22e90:	2080010c 	andi	r2,r4,4
   22e94:	10001e1e 	bne	r2,zero,22f10 <__swsetup_r+0x104>
   22e98:	80c00417 	ldw	r3,16(r16)
   22e9c:	20800214 	ori	r2,r4,8
   22ea0:	8080030d 	sth	r2,12(r16)
   22ea4:	183feb1e 	bne	r3,zero,22e54 <__alt_data_end+0xfffe3a54>
   22ea8:	1100a00c 	andi	r4,r2,640
   22eac:	01408004 	movi	r5,512
   22eb0:	217fe826 	beq	r4,r5,22e54 <__alt_data_end+0xfffe3a54>
   22eb4:	800b883a 	mov	r5,r16
   22eb8:	8809883a 	mov	r4,r17
   22ebc:	00255000 	call	25500 <__smakebuf_r>
   22ec0:	8080030b 	ldhu	r2,12(r16)
   22ec4:	80c00417 	ldw	r3,16(r16)
   22ec8:	003fe206 	br	22e54 <__alt_data_end+0xfffe3a54>
   22ecc:	80800517 	ldw	r2,20(r16)
   22ed0:	80000215 	stw	zero,8(r16)
   22ed4:	0085c83a 	sub	r2,zero,r2
   22ed8:	80800615 	stw	r2,24(r16)
   22edc:	183fe41e 	bne	r3,zero,22e70 <__alt_data_end+0xfffe3a70>
   22ee0:	80c0030b 	ldhu	r3,12(r16)
   22ee4:	0005883a 	mov	r2,zero
   22ee8:	1900200c 	andi	r4,r3,128
   22eec:	203fe126 	beq	r4,zero,22e74 <__alt_data_end+0xfffe3a74>
   22ef0:	18c01014 	ori	r3,r3,64
   22ef4:	80c0030d 	sth	r3,12(r16)
   22ef8:	00bfffc4 	movi	r2,-1
   22efc:	003fdd06 	br	22e74 <__alt_data_end+0xfffe3a74>
   22f00:	0024e180 	call	24e18 <__sinit>
   22f04:	003fcd06 	br	22e3c <__alt_data_end+0xfffe3a3c>
   22f08:	0005883a 	mov	r2,zero
   22f0c:	003fd606 	br	22e68 <__alt_data_end+0xfffe3a68>
   22f10:	81400c17 	ldw	r5,48(r16)
   22f14:	28000626 	beq	r5,zero,22f30 <__swsetup_r+0x124>
   22f18:	80801004 	addi	r2,r16,64
   22f1c:	28800326 	beq	r5,r2,22f2c <__swsetup_r+0x120>
   22f20:	8809883a 	mov	r4,r17
   22f24:	0024f8c0 	call	24f8c <_free_r>
   22f28:	8100030b 	ldhu	r4,12(r16)
   22f2c:	80000c15 	stw	zero,48(r16)
   22f30:	80c00417 	ldw	r3,16(r16)
   22f34:	00bff6c4 	movi	r2,-37
   22f38:	1108703a 	and	r4,r2,r4
   22f3c:	80000115 	stw	zero,4(r16)
   22f40:	80c00015 	stw	r3,0(r16)
   22f44:	003fd506 	br	22e9c <__alt_data_end+0xfffe3a9c>
   22f48:	00800244 	movi	r2,9
   22f4c:	88800015 	stw	r2,0(r17)
   22f50:	20801014 	ori	r2,r4,64
   22f54:	8080030d 	sth	r2,12(r16)
   22f58:	00bfffc4 	movi	r2,-1
   22f5c:	003fc506 	br	22e74 <__alt_data_end+0xfffe3a74>

00022f60 <quorem>:
   22f60:	defff204 	addi	sp,sp,-56
   22f64:	ddc00b15 	stw	r23,44(sp)
   22f68:	20800417 	ldw	r2,16(r4)
   22f6c:	2dc00417 	ldw	r23,16(r5)
   22f70:	dfc00d15 	stw	ra,52(sp)
   22f74:	df000c15 	stw	fp,48(sp)
   22f78:	dd800a15 	stw	r22,40(sp)
   22f7c:	dd400915 	stw	r21,36(sp)
   22f80:	dd000815 	stw	r20,32(sp)
   22f84:	dcc00715 	stw	r19,28(sp)
   22f88:	dc800615 	stw	r18,24(sp)
   22f8c:	dc400515 	stw	r17,20(sp)
   22f90:	dc000415 	stw	r16,16(sp)
   22f94:	15c07a16 	blt	r2,r23,23180 <quorem+0x220>
   22f98:	bdffffc4 	addi	r23,r23,-1
   22f9c:	bde9883a 	add	r20,r23,r23
   22fa0:	28c00504 	addi	r3,r5,20
   22fa4:	a529883a 	add	r20,r20,r20
   22fa8:	1d39883a 	add	fp,r3,r20
   22fac:	24c00504 	addi	r19,r4,20
   22fb0:	d9400215 	stw	r5,8(sp)
   22fb4:	9d29883a 	add	r20,r19,r20
   22fb8:	e1400017 	ldw	r5,0(fp)
   22fbc:	d9000015 	stw	r4,0(sp)
   22fc0:	a1000017 	ldw	r4,0(r20)
   22fc4:	29400044 	addi	r5,r5,1
   22fc8:	d8c00115 	stw	r3,4(sp)
   22fcc:	dd000315 	stw	r20,12(sp)
   22fd0:	002adf40 	call	2adf4 <__udivsi3>
   22fd4:	1025883a 	mov	r18,r2
   22fd8:	10003026 	beq	r2,zero,2309c <quorem+0x13c>
   22fdc:	dc400117 	ldw	r17,4(sp)
   22fe0:	9829883a 	mov	r20,r19
   22fe4:	002d883a 	mov	r22,zero
   22fe8:	0021883a 	mov	r16,zero
   22fec:	8d400017 	ldw	r21,0(r17)
   22ff0:	900b883a 	mov	r5,r18
   22ff4:	8c400104 	addi	r17,r17,4
   22ff8:	a93fffcc 	andi	r4,r21,65535
   22ffc:	002aeb00 	call	2aeb0 <__mulsi3>
   23000:	a808d43a 	srli	r4,r21,16
   23004:	900b883a 	mov	r5,r18
   23008:	15ad883a 	add	r22,r2,r22
   2300c:	002aeb00 	call	2aeb0 <__mulsi3>
   23010:	a1000017 	ldw	r4,0(r20)
   23014:	b00cd43a 	srli	r6,r22,16
   23018:	b0ffffcc 	andi	r3,r22,65535
   2301c:	217fffcc 	andi	r5,r4,65535
   23020:	2c21883a 	add	r16,r5,r16
   23024:	80c7c83a 	sub	r3,r16,r3
   23028:	2008d43a 	srli	r4,r4,16
   2302c:	1185883a 	add	r2,r2,r6
   23030:	1821d43a 	srai	r16,r3,16
   23034:	117fffcc 	andi	r5,r2,65535
   23038:	2149c83a 	sub	r4,r4,r5
   2303c:	2421883a 	add	r16,r4,r16
   23040:	8008943a 	slli	r4,r16,16
   23044:	18ffffcc 	andi	r3,r3,65535
   23048:	102cd43a 	srli	r22,r2,16
   2304c:	20c8b03a 	or	r4,r4,r3
   23050:	a1000015 	stw	r4,0(r20)
   23054:	8021d43a 	srai	r16,r16,16
   23058:	a5000104 	addi	r20,r20,4
   2305c:	e47fe32e 	bgeu	fp,r17,22fec <__alt_data_end+0xfffe3bec>
   23060:	d8c00317 	ldw	r3,12(sp)
   23064:	18800017 	ldw	r2,0(r3)
   23068:	10000c1e 	bne	r2,zero,2309c <quorem+0x13c>
   2306c:	18bfff04 	addi	r2,r3,-4
   23070:	9880082e 	bgeu	r19,r2,23094 <quorem+0x134>
   23074:	18ffff17 	ldw	r3,-4(r3)
   23078:	18000326 	beq	r3,zero,23088 <quorem+0x128>
   2307c:	00000506 	br	23094 <quorem+0x134>
   23080:	10c00017 	ldw	r3,0(r2)
   23084:	1800031e 	bne	r3,zero,23094 <quorem+0x134>
   23088:	10bfff04 	addi	r2,r2,-4
   2308c:	bdffffc4 	addi	r23,r23,-1
   23090:	98bffb36 	bltu	r19,r2,23080 <__alt_data_end+0xfffe3c80>
   23094:	d8c00017 	ldw	r3,0(sp)
   23098:	1dc00415 	stw	r23,16(r3)
   2309c:	d9400217 	ldw	r5,8(sp)
   230a0:	d9000017 	ldw	r4,0(sp)
   230a4:	0026ba00 	call	26ba0 <__mcmp>
   230a8:	10002816 	blt	r2,zero,2314c <quorem+0x1ec>
   230ac:	dc400117 	ldw	r17,4(sp)
   230b0:	94800044 	addi	r18,r18,1
   230b4:	980d883a 	mov	r6,r19
   230b8:	0007883a 	mov	r3,zero
   230bc:	31000017 	ldw	r4,0(r6)
   230c0:	89400017 	ldw	r5,0(r17)
   230c4:	31800104 	addi	r6,r6,4
   230c8:	20bfffcc 	andi	r2,r4,65535
   230cc:	10c7883a 	add	r3,r2,r3
   230d0:	28bfffcc 	andi	r2,r5,65535
   230d4:	1885c83a 	sub	r2,r3,r2
   230d8:	280ad43a 	srli	r5,r5,16
   230dc:	2008d43a 	srli	r4,r4,16
   230e0:	1007d43a 	srai	r3,r2,16
   230e4:	10bfffcc 	andi	r2,r2,65535
   230e8:	2149c83a 	sub	r4,r4,r5
   230ec:	20c9883a 	add	r4,r4,r3
   230f0:	200a943a 	slli	r5,r4,16
   230f4:	8c400104 	addi	r17,r17,4
   230f8:	2007d43a 	srai	r3,r4,16
   230fc:	2884b03a 	or	r2,r5,r2
   23100:	30bfff15 	stw	r2,-4(r6)
   23104:	e47fed2e 	bgeu	fp,r17,230bc <__alt_data_end+0xfffe3cbc>
   23108:	bdc5883a 	add	r2,r23,r23
   2310c:	1085883a 	add	r2,r2,r2
   23110:	9887883a 	add	r3,r19,r2
   23114:	18800017 	ldw	r2,0(r3)
   23118:	10000c1e 	bne	r2,zero,2314c <quorem+0x1ec>
   2311c:	18bfff04 	addi	r2,r3,-4
   23120:	9880082e 	bgeu	r19,r2,23144 <quorem+0x1e4>
   23124:	18ffff17 	ldw	r3,-4(r3)
   23128:	18000326 	beq	r3,zero,23138 <quorem+0x1d8>
   2312c:	00000506 	br	23144 <quorem+0x1e4>
   23130:	10c00017 	ldw	r3,0(r2)
   23134:	1800031e 	bne	r3,zero,23144 <quorem+0x1e4>
   23138:	10bfff04 	addi	r2,r2,-4
   2313c:	bdffffc4 	addi	r23,r23,-1
   23140:	98bffb36 	bltu	r19,r2,23130 <__alt_data_end+0xfffe3d30>
   23144:	d8c00017 	ldw	r3,0(sp)
   23148:	1dc00415 	stw	r23,16(r3)
   2314c:	9005883a 	mov	r2,r18
   23150:	dfc00d17 	ldw	ra,52(sp)
   23154:	df000c17 	ldw	fp,48(sp)
   23158:	ddc00b17 	ldw	r23,44(sp)
   2315c:	dd800a17 	ldw	r22,40(sp)
   23160:	dd400917 	ldw	r21,36(sp)
   23164:	dd000817 	ldw	r20,32(sp)
   23168:	dcc00717 	ldw	r19,28(sp)
   2316c:	dc800617 	ldw	r18,24(sp)
   23170:	dc400517 	ldw	r17,20(sp)
   23174:	dc000417 	ldw	r16,16(sp)
   23178:	dec00e04 	addi	sp,sp,56
   2317c:	f800283a 	ret
   23180:	0005883a 	mov	r2,zero
   23184:	003ff206 	br	23150 <__alt_data_end+0xfffe3d50>

00023188 <_dtoa_r>:
   23188:	20801017 	ldw	r2,64(r4)
   2318c:	deffde04 	addi	sp,sp,-136
   23190:	df002015 	stw	fp,128(sp)
   23194:	dcc01b15 	stw	r19,108(sp)
   23198:	dc801a15 	stw	r18,104(sp)
   2319c:	dc401915 	stw	r17,100(sp)
   231a0:	dc001815 	stw	r16,96(sp)
   231a4:	dfc02115 	stw	ra,132(sp)
   231a8:	ddc01f15 	stw	r23,124(sp)
   231ac:	dd801e15 	stw	r22,120(sp)
   231b0:	dd401d15 	stw	r21,116(sp)
   231b4:	dd001c15 	stw	r20,112(sp)
   231b8:	d9c00315 	stw	r7,12(sp)
   231bc:	2039883a 	mov	fp,r4
   231c0:	3023883a 	mov	r17,r6
   231c4:	2825883a 	mov	r18,r5
   231c8:	dc002417 	ldw	r16,144(sp)
   231cc:	3027883a 	mov	r19,r6
   231d0:	10000826 	beq	r2,zero,231f4 <_dtoa_r+0x6c>
   231d4:	21801117 	ldw	r6,68(r4)
   231d8:	00c00044 	movi	r3,1
   231dc:	100b883a 	mov	r5,r2
   231e0:	1986983a 	sll	r3,r3,r6
   231e4:	11800115 	stw	r6,4(r2)
   231e8:	10c00215 	stw	r3,8(r2)
   231ec:	00262c40 	call	262c4 <_Bfree>
   231f0:	e0001015 	stw	zero,64(fp)
   231f4:	88002e16 	blt	r17,zero,232b0 <_dtoa_r+0x128>
   231f8:	80000015 	stw	zero,0(r16)
   231fc:	889ffc2c 	andhi	r2,r17,32752
   23200:	00dffc34 	movhi	r3,32752
   23204:	10c01c26 	beq	r2,r3,23278 <_dtoa_r+0xf0>
   23208:	000d883a 	mov	r6,zero
   2320c:	000f883a 	mov	r7,zero
   23210:	9009883a 	mov	r4,r18
   23214:	980b883a 	mov	r5,r19
   23218:	002c1540 	call	2c154 <__eqdf2>
   2321c:	10002b1e 	bne	r2,zero,232cc <_dtoa_r+0x144>
   23220:	d9c02317 	ldw	r7,140(sp)
   23224:	00800044 	movi	r2,1
   23228:	38800015 	stw	r2,0(r7)
   2322c:	d8802517 	ldw	r2,148(sp)
   23230:	10019e26 	beq	r2,zero,238ac <_dtoa_r+0x724>
   23234:	d8c02517 	ldw	r3,148(sp)
   23238:	008000f4 	movhi	r2,3
   2323c:	10bfcb44 	addi	r2,r2,-211
   23240:	18800015 	stw	r2,0(r3)
   23244:	10bfffc4 	addi	r2,r2,-1
   23248:	dfc02117 	ldw	ra,132(sp)
   2324c:	df002017 	ldw	fp,128(sp)
   23250:	ddc01f17 	ldw	r23,124(sp)
   23254:	dd801e17 	ldw	r22,120(sp)
   23258:	dd401d17 	ldw	r21,116(sp)
   2325c:	dd001c17 	ldw	r20,112(sp)
   23260:	dcc01b17 	ldw	r19,108(sp)
   23264:	dc801a17 	ldw	r18,104(sp)
   23268:	dc401917 	ldw	r17,100(sp)
   2326c:	dc001817 	ldw	r16,96(sp)
   23270:	dec02204 	addi	sp,sp,136
   23274:	f800283a 	ret
   23278:	d8c02317 	ldw	r3,140(sp)
   2327c:	0089c3c4 	movi	r2,9999
   23280:	18800015 	stw	r2,0(r3)
   23284:	90017726 	beq	r18,zero,23864 <_dtoa_r+0x6dc>
   23288:	008000f4 	movhi	r2,3
   2328c:	10bfd704 	addi	r2,r2,-164
   23290:	d9002517 	ldw	r4,148(sp)
   23294:	203fec26 	beq	r4,zero,23248 <__alt_data_end+0xfffe3e48>
   23298:	10c000c7 	ldb	r3,3(r2)
   2329c:	1801781e 	bne	r3,zero,23880 <_dtoa_r+0x6f8>
   232a0:	10c000c4 	addi	r3,r2,3
   232a4:	d9802517 	ldw	r6,148(sp)
   232a8:	30c00015 	stw	r3,0(r6)
   232ac:	003fe606 	br	23248 <__alt_data_end+0xfffe3e48>
   232b0:	04e00034 	movhi	r19,32768
   232b4:	9cffffc4 	addi	r19,r19,-1
   232b8:	00800044 	movi	r2,1
   232bc:	8ce6703a 	and	r19,r17,r19
   232c0:	80800015 	stw	r2,0(r16)
   232c4:	9823883a 	mov	r17,r19
   232c8:	003fcc06 	br	231fc <__alt_data_end+0xfffe3dfc>
   232cc:	d8800204 	addi	r2,sp,8
   232d0:	d8800015 	stw	r2,0(sp)
   232d4:	d9c00104 	addi	r7,sp,4
   232d8:	900b883a 	mov	r5,r18
   232dc:	980d883a 	mov	r6,r19
   232e0:	e009883a 	mov	r4,fp
   232e4:	8820d53a 	srli	r16,r17,20
   232e8:	0026f6c0 	call	26f6c <__d2b>
   232ec:	d8800915 	stw	r2,36(sp)
   232f0:	8001651e 	bne	r16,zero,23888 <_dtoa_r+0x700>
   232f4:	dd800217 	ldw	r22,8(sp)
   232f8:	dc000117 	ldw	r16,4(sp)
   232fc:	00800804 	movi	r2,32
   23300:	b421883a 	add	r16,r22,r16
   23304:	80c10c84 	addi	r3,r16,1074
   23308:	10c2d10e 	bge	r2,r3,23e50 <_dtoa_r+0xcc8>
   2330c:	00801004 	movi	r2,64
   23310:	81010484 	addi	r4,r16,1042
   23314:	10c7c83a 	sub	r3,r2,r3
   23318:	9108d83a 	srl	r4,r18,r4
   2331c:	88e2983a 	sll	r17,r17,r3
   23320:	2448b03a 	or	r4,r4,r17
   23324:	002d6700 	call	2d670 <__floatunsidf>
   23328:	017f8434 	movhi	r5,65040
   2332c:	01800044 	movi	r6,1
   23330:	1009883a 	mov	r4,r2
   23334:	194b883a 	add	r5,r3,r5
   23338:	843fffc4 	addi	r16,r16,-1
   2333c:	d9801115 	stw	r6,68(sp)
   23340:	000d883a 	mov	r6,zero
   23344:	01cffe34 	movhi	r7,16376
   23348:	002cc180 	call	2cc18 <__subdf3>
   2334c:	0198dbf4 	movhi	r6,25455
   23350:	01cff4f4 	movhi	r7,16339
   23354:	3190d844 	addi	r6,r6,17249
   23358:	39e1e9c4 	addi	r7,r7,-30809
   2335c:	1009883a 	mov	r4,r2
   23360:	180b883a 	mov	r5,r3
   23364:	002c3ac0 	call	2c3ac <__muldf3>
   23368:	01a2d874 	movhi	r6,35681
   2336c:	01cff1f4 	movhi	r7,16327
   23370:	31b22cc4 	addi	r6,r6,-14157
   23374:	39e28a04 	addi	r7,r7,-30168
   23378:	180b883a 	mov	r5,r3
   2337c:	1009883a 	mov	r4,r2
   23380:	002aed80 	call	2aed8 <__adddf3>
   23384:	8009883a 	mov	r4,r16
   23388:	1029883a 	mov	r20,r2
   2338c:	1823883a 	mov	r17,r3
   23390:	002d5940 	call	2d594 <__floatsidf>
   23394:	019427f4 	movhi	r6,20639
   23398:	01cff4f4 	movhi	r7,16339
   2339c:	319e7ec4 	addi	r6,r6,31227
   233a0:	39d104c4 	addi	r7,r7,17427
   233a4:	1009883a 	mov	r4,r2
   233a8:	180b883a 	mov	r5,r3
   233ac:	002c3ac0 	call	2c3ac <__muldf3>
   233b0:	100d883a 	mov	r6,r2
   233b4:	180f883a 	mov	r7,r3
   233b8:	a009883a 	mov	r4,r20
   233bc:	880b883a 	mov	r5,r17
   233c0:	002aed80 	call	2aed8 <__adddf3>
   233c4:	1009883a 	mov	r4,r2
   233c8:	180b883a 	mov	r5,r3
   233cc:	1029883a 	mov	r20,r2
   233d0:	1823883a 	mov	r17,r3
   233d4:	002d5140 	call	2d514 <__fixdfsi>
   233d8:	000d883a 	mov	r6,zero
   233dc:	000f883a 	mov	r7,zero
   233e0:	a009883a 	mov	r4,r20
   233e4:	880b883a 	mov	r5,r17
   233e8:	d8800515 	stw	r2,20(sp)
   233ec:	002c2b80 	call	2c2b8 <__ledf2>
   233f0:	10028716 	blt	r2,zero,23e10 <_dtoa_r+0xc88>
   233f4:	d8c00517 	ldw	r3,20(sp)
   233f8:	00800584 	movi	r2,22
   233fc:	10c27536 	bltu	r2,r3,23dd4 <_dtoa_r+0xc4c>
   23400:	180490fa 	slli	r2,r3,3
   23404:	00c000f4 	movhi	r3,3
   23408:	18fff304 	addi	r3,r3,-52
   2340c:	1885883a 	add	r2,r3,r2
   23410:	11000017 	ldw	r4,0(r2)
   23414:	11400117 	ldw	r5,4(r2)
   23418:	900d883a 	mov	r6,r18
   2341c:	980f883a 	mov	r7,r19
   23420:	002c1dc0 	call	2c1dc <__gedf2>
   23424:	00828d0e 	bge	zero,r2,23e5c <_dtoa_r+0xcd4>
   23428:	d9000517 	ldw	r4,20(sp)
   2342c:	d8000e15 	stw	zero,56(sp)
   23430:	213fffc4 	addi	r4,r4,-1
   23434:	d9000515 	stw	r4,20(sp)
   23438:	b42dc83a 	sub	r22,r22,r16
   2343c:	b5bfffc4 	addi	r22,r22,-1
   23440:	b0026f16 	blt	r22,zero,23e00 <_dtoa_r+0xc78>
   23444:	d8000815 	stw	zero,32(sp)
   23448:	d9c00517 	ldw	r7,20(sp)
   2344c:	38026416 	blt	r7,zero,23de0 <_dtoa_r+0xc58>
   23450:	b1ed883a 	add	r22,r22,r7
   23454:	d9c00d15 	stw	r7,52(sp)
   23458:	d8000a15 	stw	zero,40(sp)
   2345c:	d9800317 	ldw	r6,12(sp)
   23460:	00800244 	movi	r2,9
   23464:	11811436 	bltu	r2,r6,238b8 <_dtoa_r+0x730>
   23468:	00800144 	movi	r2,5
   2346c:	1184e10e 	bge	r2,r6,247f4 <_dtoa_r+0x166c>
   23470:	31bfff04 	addi	r6,r6,-4
   23474:	d9800315 	stw	r6,12(sp)
   23478:	0023883a 	mov	r17,zero
   2347c:	d9800317 	ldw	r6,12(sp)
   23480:	008000c4 	movi	r2,3
   23484:	30836726 	beq	r6,r2,24224 <_dtoa_r+0x109c>
   23488:	1183410e 	bge	r2,r6,24190 <_dtoa_r+0x1008>
   2348c:	d9c00317 	ldw	r7,12(sp)
   23490:	00800104 	movi	r2,4
   23494:	38827c26 	beq	r7,r2,23e88 <_dtoa_r+0xd00>
   23498:	00800144 	movi	r2,5
   2349c:	3884c41e 	bne	r7,r2,247b0 <_dtoa_r+0x1628>
   234a0:	00800044 	movi	r2,1
   234a4:	d8800b15 	stw	r2,44(sp)
   234a8:	d8c00517 	ldw	r3,20(sp)
   234ac:	d9002217 	ldw	r4,136(sp)
   234b0:	1907883a 	add	r3,r3,r4
   234b4:	19800044 	addi	r6,r3,1
   234b8:	d8c00c15 	stw	r3,48(sp)
   234bc:	d9800615 	stw	r6,24(sp)
   234c0:	0183a40e 	bge	zero,r6,24354 <_dtoa_r+0x11cc>
   234c4:	d9800617 	ldw	r6,24(sp)
   234c8:	3021883a 	mov	r16,r6
   234cc:	e0001115 	stw	zero,68(fp)
   234d0:	008005c4 	movi	r2,23
   234d4:	1184c92e 	bgeu	r2,r6,247fc <_dtoa_r+0x1674>
   234d8:	00c00044 	movi	r3,1
   234dc:	00800104 	movi	r2,4
   234e0:	1085883a 	add	r2,r2,r2
   234e4:	11000504 	addi	r4,r2,20
   234e8:	180b883a 	mov	r5,r3
   234ec:	18c00044 	addi	r3,r3,1
   234f0:	313ffb2e 	bgeu	r6,r4,234e0 <__alt_data_end+0xfffe40e0>
   234f4:	e1401115 	stw	r5,68(fp)
   234f8:	e009883a 	mov	r4,fp
   234fc:	002621c0 	call	2621c <_Balloc>
   23500:	d8800715 	stw	r2,28(sp)
   23504:	e0801015 	stw	r2,64(fp)
   23508:	00800384 	movi	r2,14
   2350c:	1400f736 	bltu	r2,r16,238ec <_dtoa_r+0x764>
   23510:	8800f626 	beq	r17,zero,238ec <_dtoa_r+0x764>
   23514:	d9c00517 	ldw	r7,20(sp)
   23518:	01c39a0e 	bge	zero,r7,24384 <_dtoa_r+0x11fc>
   2351c:	388003cc 	andi	r2,r7,15
   23520:	100490fa 	slli	r2,r2,3
   23524:	382bd13a 	srai	r21,r7,4
   23528:	00c000f4 	movhi	r3,3
   2352c:	18fff304 	addi	r3,r3,-52
   23530:	1885883a 	add	r2,r3,r2
   23534:	a8c0040c 	andi	r3,r21,16
   23538:	12400017 	ldw	r9,0(r2)
   2353c:	12000117 	ldw	r8,4(r2)
   23540:	18037926 	beq	r3,zero,24328 <_dtoa_r+0x11a0>
   23544:	008000f4 	movhi	r2,3
   23548:	10bfe904 	addi	r2,r2,-92
   2354c:	11800817 	ldw	r6,32(r2)
   23550:	11c00917 	ldw	r7,36(r2)
   23554:	9009883a 	mov	r4,r18
   23558:	980b883a 	mov	r5,r19
   2355c:	da001715 	stw	r8,92(sp)
   23560:	da401615 	stw	r9,88(sp)
   23564:	002b7840 	call	2b784 <__divdf3>
   23568:	da001717 	ldw	r8,92(sp)
   2356c:	da401617 	ldw	r9,88(sp)
   23570:	ad4003cc 	andi	r21,r21,15
   23574:	040000c4 	movi	r16,3
   23578:	1023883a 	mov	r17,r2
   2357c:	1829883a 	mov	r20,r3
   23580:	a8001126 	beq	r21,zero,235c8 <_dtoa_r+0x440>
   23584:	05c000f4 	movhi	r23,3
   23588:	bdffe904 	addi	r23,r23,-92
   2358c:	4805883a 	mov	r2,r9
   23590:	4007883a 	mov	r3,r8
   23594:	a980004c 	andi	r6,r21,1
   23598:	1009883a 	mov	r4,r2
   2359c:	a82bd07a 	srai	r21,r21,1
   235a0:	180b883a 	mov	r5,r3
   235a4:	30000426 	beq	r6,zero,235b8 <_dtoa_r+0x430>
   235a8:	b9800017 	ldw	r6,0(r23)
   235ac:	b9c00117 	ldw	r7,4(r23)
   235b0:	84000044 	addi	r16,r16,1
   235b4:	002c3ac0 	call	2c3ac <__muldf3>
   235b8:	bdc00204 	addi	r23,r23,8
   235bc:	a83ff51e 	bne	r21,zero,23594 <__alt_data_end+0xfffe4194>
   235c0:	1013883a 	mov	r9,r2
   235c4:	1811883a 	mov	r8,r3
   235c8:	480d883a 	mov	r6,r9
   235cc:	400f883a 	mov	r7,r8
   235d0:	8809883a 	mov	r4,r17
   235d4:	a00b883a 	mov	r5,r20
   235d8:	002b7840 	call	2b784 <__divdf3>
   235dc:	d8800f15 	stw	r2,60(sp)
   235e0:	d8c01015 	stw	r3,64(sp)
   235e4:	d8c00e17 	ldw	r3,56(sp)
   235e8:	18000626 	beq	r3,zero,23604 <_dtoa_r+0x47c>
   235ec:	d9000f17 	ldw	r4,60(sp)
   235f0:	d9401017 	ldw	r5,64(sp)
   235f4:	000d883a 	mov	r6,zero
   235f8:	01cffc34 	movhi	r7,16368
   235fc:	002c2b80 	call	2c2b8 <__ledf2>
   23600:	10040b16 	blt	r2,zero,24630 <_dtoa_r+0x14a8>
   23604:	8009883a 	mov	r4,r16
   23608:	002d5940 	call	2d594 <__floatsidf>
   2360c:	d9800f17 	ldw	r6,60(sp)
   23610:	d9c01017 	ldw	r7,64(sp)
   23614:	1009883a 	mov	r4,r2
   23618:	180b883a 	mov	r5,r3
   2361c:	002c3ac0 	call	2c3ac <__muldf3>
   23620:	000d883a 	mov	r6,zero
   23624:	01d00734 	movhi	r7,16412
   23628:	1009883a 	mov	r4,r2
   2362c:	180b883a 	mov	r5,r3
   23630:	002aed80 	call	2aed8 <__adddf3>
   23634:	1021883a 	mov	r16,r2
   23638:	d8800617 	ldw	r2,24(sp)
   2363c:	047f3034 	movhi	r17,64704
   23640:	1c63883a 	add	r17,r3,r17
   23644:	10031826 	beq	r2,zero,242a8 <_dtoa_r+0x1120>
   23648:	d8c00517 	ldw	r3,20(sp)
   2364c:	db000617 	ldw	r12,24(sp)
   23650:	d8c01315 	stw	r3,76(sp)
   23654:	d9000b17 	ldw	r4,44(sp)
   23658:	20038f26 	beq	r4,zero,24498 <_dtoa_r+0x1310>
   2365c:	60bfffc4 	addi	r2,r12,-1
   23660:	100490fa 	slli	r2,r2,3
   23664:	00c000f4 	movhi	r3,3
   23668:	18fff304 	addi	r3,r3,-52
   2366c:	1885883a 	add	r2,r3,r2
   23670:	11800017 	ldw	r6,0(r2)
   23674:	11c00117 	ldw	r7,4(r2)
   23678:	d8800717 	ldw	r2,28(sp)
   2367c:	0009883a 	mov	r4,zero
   23680:	014ff834 	movhi	r5,16352
   23684:	db001615 	stw	r12,88(sp)
   23688:	15c00044 	addi	r23,r2,1
   2368c:	002b7840 	call	2b784 <__divdf3>
   23690:	800d883a 	mov	r6,r16
   23694:	880f883a 	mov	r7,r17
   23698:	1009883a 	mov	r4,r2
   2369c:	180b883a 	mov	r5,r3
   236a0:	002cc180 	call	2cc18 <__subdf3>
   236a4:	d9401017 	ldw	r5,64(sp)
   236a8:	d9000f17 	ldw	r4,60(sp)
   236ac:	102b883a 	mov	r21,r2
   236b0:	d8c01215 	stw	r3,72(sp)
   236b4:	002d5140 	call	2d514 <__fixdfsi>
   236b8:	1009883a 	mov	r4,r2
   236bc:	1029883a 	mov	r20,r2
   236c0:	002d5940 	call	2d594 <__floatsidf>
   236c4:	d9000f17 	ldw	r4,60(sp)
   236c8:	d9401017 	ldw	r5,64(sp)
   236cc:	100d883a 	mov	r6,r2
   236d0:	180f883a 	mov	r7,r3
   236d4:	002cc180 	call	2cc18 <__subdf3>
   236d8:	1823883a 	mov	r17,r3
   236dc:	d8c00717 	ldw	r3,28(sp)
   236e0:	d9401217 	ldw	r5,72(sp)
   236e4:	a2000c04 	addi	r8,r20,48
   236e8:	1021883a 	mov	r16,r2
   236ec:	1a000005 	stb	r8,0(r3)
   236f0:	800d883a 	mov	r6,r16
   236f4:	880f883a 	mov	r7,r17
   236f8:	a809883a 	mov	r4,r21
   236fc:	4029883a 	mov	r20,r8
   23700:	002c1dc0 	call	2c1dc <__gedf2>
   23704:	00841d16 	blt	zero,r2,2477c <_dtoa_r+0x15f4>
   23708:	800d883a 	mov	r6,r16
   2370c:	880f883a 	mov	r7,r17
   23710:	0009883a 	mov	r4,zero
   23714:	014ffc34 	movhi	r5,16368
   23718:	002cc180 	call	2cc18 <__subdf3>
   2371c:	d9401217 	ldw	r5,72(sp)
   23720:	100d883a 	mov	r6,r2
   23724:	180f883a 	mov	r7,r3
   23728:	a809883a 	mov	r4,r21
   2372c:	002c1dc0 	call	2c1dc <__gedf2>
   23730:	db001617 	ldw	r12,88(sp)
   23734:	00840e16 	blt	zero,r2,24770 <_dtoa_r+0x15e8>
   23738:	00800044 	movi	r2,1
   2373c:	13006b0e 	bge	r2,r12,238ec <_dtoa_r+0x764>
   23740:	d9000717 	ldw	r4,28(sp)
   23744:	dd800f15 	stw	r22,60(sp)
   23748:	dcc01015 	stw	r19,64(sp)
   2374c:	2319883a 	add	r12,r4,r12
   23750:	dcc01217 	ldw	r19,72(sp)
   23754:	602d883a 	mov	r22,r12
   23758:	dc801215 	stw	r18,72(sp)
   2375c:	b825883a 	mov	r18,r23
   23760:	00000906 	br	23788 <_dtoa_r+0x600>
   23764:	002cc180 	call	2cc18 <__subdf3>
   23768:	a80d883a 	mov	r6,r21
   2376c:	980f883a 	mov	r7,r19
   23770:	1009883a 	mov	r4,r2
   23774:	180b883a 	mov	r5,r3
   23778:	002c2b80 	call	2c2b8 <__ledf2>
   2377c:	1003e816 	blt	r2,zero,24720 <_dtoa_r+0x1598>
   23780:	b825883a 	mov	r18,r23
   23784:	bd83e926 	beq	r23,r22,2472c <_dtoa_r+0x15a4>
   23788:	a809883a 	mov	r4,r21
   2378c:	980b883a 	mov	r5,r19
   23790:	000d883a 	mov	r6,zero
   23794:	01d00934 	movhi	r7,16420
   23798:	002c3ac0 	call	2c3ac <__muldf3>
   2379c:	000d883a 	mov	r6,zero
   237a0:	01d00934 	movhi	r7,16420
   237a4:	8009883a 	mov	r4,r16
   237a8:	880b883a 	mov	r5,r17
   237ac:	102b883a 	mov	r21,r2
   237b0:	1827883a 	mov	r19,r3
   237b4:	002c3ac0 	call	2c3ac <__muldf3>
   237b8:	180b883a 	mov	r5,r3
   237bc:	1009883a 	mov	r4,r2
   237c0:	1821883a 	mov	r16,r3
   237c4:	1023883a 	mov	r17,r2
   237c8:	002d5140 	call	2d514 <__fixdfsi>
   237cc:	1009883a 	mov	r4,r2
   237d0:	1029883a 	mov	r20,r2
   237d4:	002d5940 	call	2d594 <__floatsidf>
   237d8:	8809883a 	mov	r4,r17
   237dc:	800b883a 	mov	r5,r16
   237e0:	100d883a 	mov	r6,r2
   237e4:	180f883a 	mov	r7,r3
   237e8:	002cc180 	call	2cc18 <__subdf3>
   237ec:	a5000c04 	addi	r20,r20,48
   237f0:	a80d883a 	mov	r6,r21
   237f4:	980f883a 	mov	r7,r19
   237f8:	1009883a 	mov	r4,r2
   237fc:	180b883a 	mov	r5,r3
   23800:	95000005 	stb	r20,0(r18)
   23804:	1021883a 	mov	r16,r2
   23808:	1823883a 	mov	r17,r3
   2380c:	002c2b80 	call	2c2b8 <__ledf2>
   23810:	bdc00044 	addi	r23,r23,1
   23814:	800d883a 	mov	r6,r16
   23818:	880f883a 	mov	r7,r17
   2381c:	0009883a 	mov	r4,zero
   23820:	014ffc34 	movhi	r5,16368
   23824:	103fcf0e 	bge	r2,zero,23764 <__alt_data_end+0xfffe4364>
   23828:	d8c01317 	ldw	r3,76(sp)
   2382c:	d8c00515 	stw	r3,20(sp)
   23830:	d9400917 	ldw	r5,36(sp)
   23834:	e009883a 	mov	r4,fp
   23838:	00262c40 	call	262c4 <_Bfree>
   2383c:	d9000517 	ldw	r4,20(sp)
   23840:	d9802317 	ldw	r6,140(sp)
   23844:	d9c02517 	ldw	r7,148(sp)
   23848:	b8000005 	stb	zero,0(r23)
   2384c:	20800044 	addi	r2,r4,1
   23850:	30800015 	stw	r2,0(r6)
   23854:	3802aa26 	beq	r7,zero,24300 <_dtoa_r+0x1178>
   23858:	3dc00015 	stw	r23,0(r7)
   2385c:	d8800717 	ldw	r2,28(sp)
   23860:	003e7906 	br	23248 <__alt_data_end+0xfffe3e48>
   23864:	00800434 	movhi	r2,16
   23868:	10bfffc4 	addi	r2,r2,-1
   2386c:	88a2703a 	and	r17,r17,r2
   23870:	883e851e 	bne	r17,zero,23288 <__alt_data_end+0xfffe3e88>
   23874:	008000f4 	movhi	r2,3
   23878:	10bfd404 	addi	r2,r2,-176
   2387c:	003e8406 	br	23290 <__alt_data_end+0xfffe3e90>
   23880:	10c00204 	addi	r3,r2,8
   23884:	003e8706 	br	232a4 <__alt_data_end+0xfffe3ea4>
   23888:	01400434 	movhi	r5,16
   2388c:	297fffc4 	addi	r5,r5,-1
   23890:	994a703a 	and	r5,r19,r5
   23894:	9009883a 	mov	r4,r18
   23898:	843f0044 	addi	r16,r16,-1023
   2389c:	294ffc34 	orhi	r5,r5,16368
   238a0:	dd800217 	ldw	r22,8(sp)
   238a4:	d8001115 	stw	zero,68(sp)
   238a8:	003ea506 	br	23340 <__alt_data_end+0xfffe3f40>
   238ac:	008000f4 	movhi	r2,3
   238b0:	10bfcb04 	addi	r2,r2,-212
   238b4:	003e6406 	br	23248 <__alt_data_end+0xfffe3e48>
   238b8:	e0001115 	stw	zero,68(fp)
   238bc:	000b883a 	mov	r5,zero
   238c0:	e009883a 	mov	r4,fp
   238c4:	002621c0 	call	2621c <_Balloc>
   238c8:	01bfffc4 	movi	r6,-1
   238cc:	01c00044 	movi	r7,1
   238d0:	d8800715 	stw	r2,28(sp)
   238d4:	d9800c15 	stw	r6,48(sp)
   238d8:	e0801015 	stw	r2,64(fp)
   238dc:	d8000315 	stw	zero,12(sp)
   238e0:	d9c00b15 	stw	r7,44(sp)
   238e4:	d9800615 	stw	r6,24(sp)
   238e8:	d8002215 	stw	zero,136(sp)
   238ec:	d8800117 	ldw	r2,4(sp)
   238f0:	10008916 	blt	r2,zero,23b18 <_dtoa_r+0x990>
   238f4:	d9000517 	ldw	r4,20(sp)
   238f8:	00c00384 	movi	r3,14
   238fc:	19008616 	blt	r3,r4,23b18 <_dtoa_r+0x990>
   23900:	200490fa 	slli	r2,r4,3
   23904:	00c000f4 	movhi	r3,3
   23908:	d9802217 	ldw	r6,136(sp)
   2390c:	18fff304 	addi	r3,r3,-52
   23910:	1885883a 	add	r2,r3,r2
   23914:	14000017 	ldw	r16,0(r2)
   23918:	14400117 	ldw	r17,4(r2)
   2391c:	30016316 	blt	r6,zero,23eac <_dtoa_r+0xd24>
   23920:	800d883a 	mov	r6,r16
   23924:	880f883a 	mov	r7,r17
   23928:	9009883a 	mov	r4,r18
   2392c:	980b883a 	mov	r5,r19
   23930:	002b7840 	call	2b784 <__divdf3>
   23934:	180b883a 	mov	r5,r3
   23938:	1009883a 	mov	r4,r2
   2393c:	002d5140 	call	2d514 <__fixdfsi>
   23940:	1009883a 	mov	r4,r2
   23944:	102b883a 	mov	r21,r2
   23948:	002d5940 	call	2d594 <__floatsidf>
   2394c:	800d883a 	mov	r6,r16
   23950:	880f883a 	mov	r7,r17
   23954:	1009883a 	mov	r4,r2
   23958:	180b883a 	mov	r5,r3
   2395c:	002c3ac0 	call	2c3ac <__muldf3>
   23960:	100d883a 	mov	r6,r2
   23964:	180f883a 	mov	r7,r3
   23968:	9009883a 	mov	r4,r18
   2396c:	980b883a 	mov	r5,r19
   23970:	002cc180 	call	2cc18 <__subdf3>
   23974:	d9c00717 	ldw	r7,28(sp)
   23978:	1009883a 	mov	r4,r2
   2397c:	a8800c04 	addi	r2,r21,48
   23980:	38800005 	stb	r2,0(r7)
   23984:	3dc00044 	addi	r23,r7,1
   23988:	d9c00617 	ldw	r7,24(sp)
   2398c:	01800044 	movi	r6,1
   23990:	180b883a 	mov	r5,r3
   23994:	2005883a 	mov	r2,r4
   23998:	39803826 	beq	r7,r6,23a7c <_dtoa_r+0x8f4>
   2399c:	000d883a 	mov	r6,zero
   239a0:	01d00934 	movhi	r7,16420
   239a4:	002c3ac0 	call	2c3ac <__muldf3>
   239a8:	000d883a 	mov	r6,zero
   239ac:	000f883a 	mov	r7,zero
   239b0:	1009883a 	mov	r4,r2
   239b4:	180b883a 	mov	r5,r3
   239b8:	1025883a 	mov	r18,r2
   239bc:	1827883a 	mov	r19,r3
   239c0:	002c1540 	call	2c154 <__eqdf2>
   239c4:	103f9a26 	beq	r2,zero,23830 <__alt_data_end+0xfffe4430>
   239c8:	d9c00617 	ldw	r7,24(sp)
   239cc:	d8c00717 	ldw	r3,28(sp)
   239d0:	b829883a 	mov	r20,r23
   239d4:	38bfffc4 	addi	r2,r7,-1
   239d8:	18ad883a 	add	r22,r3,r2
   239dc:	00000a06 	br	23a08 <_dtoa_r+0x880>
   239e0:	002c3ac0 	call	2c3ac <__muldf3>
   239e4:	000d883a 	mov	r6,zero
   239e8:	000f883a 	mov	r7,zero
   239ec:	1009883a 	mov	r4,r2
   239f0:	180b883a 	mov	r5,r3
   239f4:	1025883a 	mov	r18,r2
   239f8:	1827883a 	mov	r19,r3
   239fc:	b829883a 	mov	r20,r23
   23a00:	002c1540 	call	2c154 <__eqdf2>
   23a04:	103f8a26 	beq	r2,zero,23830 <__alt_data_end+0xfffe4430>
   23a08:	800d883a 	mov	r6,r16
   23a0c:	880f883a 	mov	r7,r17
   23a10:	9009883a 	mov	r4,r18
   23a14:	980b883a 	mov	r5,r19
   23a18:	002b7840 	call	2b784 <__divdf3>
   23a1c:	180b883a 	mov	r5,r3
   23a20:	1009883a 	mov	r4,r2
   23a24:	002d5140 	call	2d514 <__fixdfsi>
   23a28:	1009883a 	mov	r4,r2
   23a2c:	102b883a 	mov	r21,r2
   23a30:	002d5940 	call	2d594 <__floatsidf>
   23a34:	800d883a 	mov	r6,r16
   23a38:	880f883a 	mov	r7,r17
   23a3c:	1009883a 	mov	r4,r2
   23a40:	180b883a 	mov	r5,r3
   23a44:	002c3ac0 	call	2c3ac <__muldf3>
   23a48:	100d883a 	mov	r6,r2
   23a4c:	180f883a 	mov	r7,r3
   23a50:	9009883a 	mov	r4,r18
   23a54:	980b883a 	mov	r5,r19
   23a58:	002cc180 	call	2cc18 <__subdf3>
   23a5c:	aa000c04 	addi	r8,r21,48
   23a60:	a2000005 	stb	r8,0(r20)
   23a64:	000d883a 	mov	r6,zero
   23a68:	01d00934 	movhi	r7,16420
   23a6c:	1009883a 	mov	r4,r2
   23a70:	180b883a 	mov	r5,r3
   23a74:	a5c00044 	addi	r23,r20,1
   23a78:	b53fd91e 	bne	r22,r20,239e0 <__alt_data_end+0xfffe45e0>
   23a7c:	100d883a 	mov	r6,r2
   23a80:	180f883a 	mov	r7,r3
   23a84:	1009883a 	mov	r4,r2
   23a88:	180b883a 	mov	r5,r3
   23a8c:	002aed80 	call	2aed8 <__adddf3>
   23a90:	100d883a 	mov	r6,r2
   23a94:	180f883a 	mov	r7,r3
   23a98:	8009883a 	mov	r4,r16
   23a9c:	880b883a 	mov	r5,r17
   23aa0:	1027883a 	mov	r19,r2
   23aa4:	1825883a 	mov	r18,r3
   23aa8:	002c2b80 	call	2c2b8 <__ledf2>
   23aac:	10000816 	blt	r2,zero,23ad0 <_dtoa_r+0x948>
   23ab0:	980d883a 	mov	r6,r19
   23ab4:	900f883a 	mov	r7,r18
   23ab8:	8009883a 	mov	r4,r16
   23abc:	880b883a 	mov	r5,r17
   23ac0:	002c1540 	call	2c154 <__eqdf2>
   23ac4:	103f5a1e 	bne	r2,zero,23830 <__alt_data_end+0xfffe4430>
   23ac8:	ad40004c 	andi	r21,r21,1
   23acc:	a83f5826 	beq	r21,zero,23830 <__alt_data_end+0xfffe4430>
   23ad0:	bd3fffc3 	ldbu	r20,-1(r23)
   23ad4:	b8bfffc4 	addi	r2,r23,-1
   23ad8:	1007883a 	mov	r3,r2
   23adc:	01400e44 	movi	r5,57
   23ae0:	d9800717 	ldw	r6,28(sp)
   23ae4:	00000506 	br	23afc <_dtoa_r+0x974>
   23ae8:	18ffffc4 	addi	r3,r3,-1
   23aec:	11824726 	beq	r2,r6,2440c <_dtoa_r+0x1284>
   23af0:	1d000003 	ldbu	r20,0(r3)
   23af4:	102f883a 	mov	r23,r2
   23af8:	10bfffc4 	addi	r2,r2,-1
   23afc:	a1003fcc 	andi	r4,r20,255
   23b00:	2100201c 	xori	r4,r4,128
   23b04:	213fe004 	addi	r4,r4,-128
   23b08:	217ff726 	beq	r4,r5,23ae8 <__alt_data_end+0xfffe46e8>
   23b0c:	a2000044 	addi	r8,r20,1
   23b10:	12000005 	stb	r8,0(r2)
   23b14:	003f4606 	br	23830 <__alt_data_end+0xfffe4430>
   23b18:	d9000b17 	ldw	r4,44(sp)
   23b1c:	2000c826 	beq	r4,zero,23e40 <_dtoa_r+0xcb8>
   23b20:	d9800317 	ldw	r6,12(sp)
   23b24:	00c00044 	movi	r3,1
   23b28:	1980f90e 	bge	r3,r6,23f10 <_dtoa_r+0xd88>
   23b2c:	d8800617 	ldw	r2,24(sp)
   23b30:	d8c00a17 	ldw	r3,40(sp)
   23b34:	157fffc4 	addi	r21,r2,-1
   23b38:	1d41f316 	blt	r3,r21,24308 <_dtoa_r+0x1180>
   23b3c:	1d6bc83a 	sub	r21,r3,r21
   23b40:	d9c00617 	ldw	r7,24(sp)
   23b44:	3802aa16 	blt	r7,zero,245f0 <_dtoa_r+0x1468>
   23b48:	dd000817 	ldw	r20,32(sp)
   23b4c:	d8800617 	ldw	r2,24(sp)
   23b50:	d8c00817 	ldw	r3,32(sp)
   23b54:	01400044 	movi	r5,1
   23b58:	e009883a 	mov	r4,fp
   23b5c:	1887883a 	add	r3,r3,r2
   23b60:	d8c00815 	stw	r3,32(sp)
   23b64:	b0ad883a 	add	r22,r22,r2
   23b68:	00266500 	call	26650 <__i2b>
   23b6c:	1023883a 	mov	r17,r2
   23b70:	a0000826 	beq	r20,zero,23b94 <_dtoa_r+0xa0c>
   23b74:	0580070e 	bge	zero,r22,23b94 <_dtoa_r+0xa0c>
   23b78:	a005883a 	mov	r2,r20
   23b7c:	b500b916 	blt	r22,r20,23e64 <_dtoa_r+0xcdc>
   23b80:	d9000817 	ldw	r4,32(sp)
   23b84:	a0a9c83a 	sub	r20,r20,r2
   23b88:	b0adc83a 	sub	r22,r22,r2
   23b8c:	2089c83a 	sub	r4,r4,r2
   23b90:	d9000815 	stw	r4,32(sp)
   23b94:	d9800a17 	ldw	r6,40(sp)
   23b98:	0181810e 	bge	zero,r6,241a0 <_dtoa_r+0x1018>
   23b9c:	d9c00b17 	ldw	r7,44(sp)
   23ba0:	3800b326 	beq	r7,zero,23e70 <_dtoa_r+0xce8>
   23ba4:	a800b226 	beq	r21,zero,23e70 <_dtoa_r+0xce8>
   23ba8:	880b883a 	mov	r5,r17
   23bac:	a80d883a 	mov	r6,r21
   23bb0:	e009883a 	mov	r4,fp
   23bb4:	00269180 	call	26918 <__pow5mult>
   23bb8:	d9800917 	ldw	r6,36(sp)
   23bbc:	100b883a 	mov	r5,r2
   23bc0:	e009883a 	mov	r4,fp
   23bc4:	1023883a 	mov	r17,r2
   23bc8:	002668c0 	call	2668c <__multiply>
   23bcc:	1021883a 	mov	r16,r2
   23bd0:	d8800a17 	ldw	r2,40(sp)
   23bd4:	d9400917 	ldw	r5,36(sp)
   23bd8:	e009883a 	mov	r4,fp
   23bdc:	1545c83a 	sub	r2,r2,r21
   23be0:	d8800a15 	stw	r2,40(sp)
   23be4:	00262c40 	call	262c4 <_Bfree>
   23be8:	d8c00a17 	ldw	r3,40(sp)
   23bec:	18009f1e 	bne	r3,zero,23e6c <_dtoa_r+0xce4>
   23bf0:	05c00044 	movi	r23,1
   23bf4:	e009883a 	mov	r4,fp
   23bf8:	b80b883a 	mov	r5,r23
   23bfc:	00266500 	call	26650 <__i2b>
   23c00:	d9000d17 	ldw	r4,52(sp)
   23c04:	102b883a 	mov	r21,r2
   23c08:	2000ce26 	beq	r4,zero,23f44 <_dtoa_r+0xdbc>
   23c0c:	200d883a 	mov	r6,r4
   23c10:	100b883a 	mov	r5,r2
   23c14:	e009883a 	mov	r4,fp
   23c18:	00269180 	call	26918 <__pow5mult>
   23c1c:	d9800317 	ldw	r6,12(sp)
   23c20:	102b883a 	mov	r21,r2
   23c24:	b981810e 	bge	r23,r6,2422c <_dtoa_r+0x10a4>
   23c28:	0027883a 	mov	r19,zero
   23c2c:	a8800417 	ldw	r2,16(r21)
   23c30:	05c00804 	movi	r23,32
   23c34:	10800104 	addi	r2,r2,4
   23c38:	1085883a 	add	r2,r2,r2
   23c3c:	1085883a 	add	r2,r2,r2
   23c40:	a885883a 	add	r2,r21,r2
   23c44:	11000017 	ldw	r4,0(r2)
   23c48:	00265380 	call	26538 <__hi0bits>
   23c4c:	b885c83a 	sub	r2,r23,r2
   23c50:	1585883a 	add	r2,r2,r22
   23c54:	108007cc 	andi	r2,r2,31
   23c58:	1000b326 	beq	r2,zero,23f28 <_dtoa_r+0xda0>
   23c5c:	00c00804 	movi	r3,32
   23c60:	1887c83a 	sub	r3,r3,r2
   23c64:	01000104 	movi	r4,4
   23c68:	20c2cd0e 	bge	r4,r3,247a0 <_dtoa_r+0x1618>
   23c6c:	00c00704 	movi	r3,28
   23c70:	1885c83a 	sub	r2,r3,r2
   23c74:	d8c00817 	ldw	r3,32(sp)
   23c78:	a0a9883a 	add	r20,r20,r2
   23c7c:	b0ad883a 	add	r22,r22,r2
   23c80:	1887883a 	add	r3,r3,r2
   23c84:	d8c00815 	stw	r3,32(sp)
   23c88:	d9800817 	ldw	r6,32(sp)
   23c8c:	0180040e 	bge	zero,r6,23ca0 <_dtoa_r+0xb18>
   23c90:	800b883a 	mov	r5,r16
   23c94:	e009883a 	mov	r4,fp
   23c98:	0026a580 	call	26a58 <__lshift>
   23c9c:	1021883a 	mov	r16,r2
   23ca0:	0580050e 	bge	zero,r22,23cb8 <_dtoa_r+0xb30>
   23ca4:	a80b883a 	mov	r5,r21
   23ca8:	b00d883a 	mov	r6,r22
   23cac:	e009883a 	mov	r4,fp
   23cb0:	0026a580 	call	26a58 <__lshift>
   23cb4:	102b883a 	mov	r21,r2
   23cb8:	d9c00e17 	ldw	r7,56(sp)
   23cbc:	3801211e 	bne	r7,zero,24144 <_dtoa_r+0xfbc>
   23cc0:	d9800617 	ldw	r6,24(sp)
   23cc4:	0181380e 	bge	zero,r6,241a8 <_dtoa_r+0x1020>
   23cc8:	d8c00b17 	ldw	r3,44(sp)
   23ccc:	1800ab1e 	bne	r3,zero,23f7c <_dtoa_r+0xdf4>
   23cd0:	dc800717 	ldw	r18,28(sp)
   23cd4:	dcc00617 	ldw	r19,24(sp)
   23cd8:	9029883a 	mov	r20,r18
   23cdc:	00000206 	br	23ce8 <_dtoa_r+0xb60>
   23ce0:	00262ec0 	call	262ec <__multadd>
   23ce4:	1021883a 	mov	r16,r2
   23ce8:	a80b883a 	mov	r5,r21
   23cec:	8009883a 	mov	r4,r16
   23cf0:	0022f600 	call	22f60 <quorem>
   23cf4:	10800c04 	addi	r2,r2,48
   23cf8:	90800005 	stb	r2,0(r18)
   23cfc:	94800044 	addi	r18,r18,1
   23d00:	9507c83a 	sub	r3,r18,r20
   23d04:	000f883a 	mov	r7,zero
   23d08:	01800284 	movi	r6,10
   23d0c:	800b883a 	mov	r5,r16
   23d10:	e009883a 	mov	r4,fp
   23d14:	1cfff216 	blt	r3,r19,23ce0 <__alt_data_end+0xfffe48e0>
   23d18:	1011883a 	mov	r8,r2
   23d1c:	d8800617 	ldw	r2,24(sp)
   23d20:	0082370e 	bge	zero,r2,24600 <_dtoa_r+0x1478>
   23d24:	d9000717 	ldw	r4,28(sp)
   23d28:	0025883a 	mov	r18,zero
   23d2c:	20af883a 	add	r23,r4,r2
   23d30:	01800044 	movi	r6,1
   23d34:	800b883a 	mov	r5,r16
   23d38:	e009883a 	mov	r4,fp
   23d3c:	da001715 	stw	r8,92(sp)
   23d40:	0026a580 	call	26a58 <__lshift>
   23d44:	a80b883a 	mov	r5,r21
   23d48:	1009883a 	mov	r4,r2
   23d4c:	d8800915 	stw	r2,36(sp)
   23d50:	0026ba00 	call	26ba0 <__mcmp>
   23d54:	da001717 	ldw	r8,92(sp)
   23d58:	0081800e 	bge	zero,r2,2435c <_dtoa_r+0x11d4>
   23d5c:	b93fffc3 	ldbu	r4,-1(r23)
   23d60:	b8bfffc4 	addi	r2,r23,-1
   23d64:	1007883a 	mov	r3,r2
   23d68:	01800e44 	movi	r6,57
   23d6c:	d9c00717 	ldw	r7,28(sp)
   23d70:	00000506 	br	23d88 <_dtoa_r+0xc00>
   23d74:	18ffffc4 	addi	r3,r3,-1
   23d78:	11c12326 	beq	r2,r7,24208 <_dtoa_r+0x1080>
   23d7c:	19000003 	ldbu	r4,0(r3)
   23d80:	102f883a 	mov	r23,r2
   23d84:	10bfffc4 	addi	r2,r2,-1
   23d88:	21403fcc 	andi	r5,r4,255
   23d8c:	2940201c 	xori	r5,r5,128
   23d90:	297fe004 	addi	r5,r5,-128
   23d94:	29bff726 	beq	r5,r6,23d74 <__alt_data_end+0xfffe4974>
   23d98:	21000044 	addi	r4,r4,1
   23d9c:	11000005 	stb	r4,0(r2)
   23da0:	a80b883a 	mov	r5,r21
   23da4:	e009883a 	mov	r4,fp
   23da8:	00262c40 	call	262c4 <_Bfree>
   23dac:	883ea026 	beq	r17,zero,23830 <__alt_data_end+0xfffe4430>
   23db0:	90000426 	beq	r18,zero,23dc4 <_dtoa_r+0xc3c>
   23db4:	94400326 	beq	r18,r17,23dc4 <_dtoa_r+0xc3c>
   23db8:	900b883a 	mov	r5,r18
   23dbc:	e009883a 	mov	r4,fp
   23dc0:	00262c40 	call	262c4 <_Bfree>
   23dc4:	880b883a 	mov	r5,r17
   23dc8:	e009883a 	mov	r4,fp
   23dcc:	00262c40 	call	262c4 <_Bfree>
   23dd0:	003e9706 	br	23830 <__alt_data_end+0xfffe4430>
   23dd4:	01800044 	movi	r6,1
   23dd8:	d9800e15 	stw	r6,56(sp)
   23ddc:	003d9606 	br	23438 <__alt_data_end+0xfffe4038>
   23de0:	d8800817 	ldw	r2,32(sp)
   23de4:	d8c00517 	ldw	r3,20(sp)
   23de8:	d8000d15 	stw	zero,52(sp)
   23dec:	10c5c83a 	sub	r2,r2,r3
   23df0:	00c9c83a 	sub	r4,zero,r3
   23df4:	d8800815 	stw	r2,32(sp)
   23df8:	d9000a15 	stw	r4,40(sp)
   23dfc:	003d9706 	br	2345c <__alt_data_end+0xfffe405c>
   23e00:	05adc83a 	sub	r22,zero,r22
   23e04:	dd800815 	stw	r22,32(sp)
   23e08:	002d883a 	mov	r22,zero
   23e0c:	003d8e06 	br	23448 <__alt_data_end+0xfffe4048>
   23e10:	d9000517 	ldw	r4,20(sp)
   23e14:	002d5940 	call	2d594 <__floatsidf>
   23e18:	100d883a 	mov	r6,r2
   23e1c:	180f883a 	mov	r7,r3
   23e20:	a009883a 	mov	r4,r20
   23e24:	880b883a 	mov	r5,r17
   23e28:	002c1540 	call	2c154 <__eqdf2>
   23e2c:	103d7126 	beq	r2,zero,233f4 <__alt_data_end+0xfffe3ff4>
   23e30:	d9c00517 	ldw	r7,20(sp)
   23e34:	39ffffc4 	addi	r7,r7,-1
   23e38:	d9c00515 	stw	r7,20(sp)
   23e3c:	003d6d06 	br	233f4 <__alt_data_end+0xfffe3ff4>
   23e40:	dd400a17 	ldw	r21,40(sp)
   23e44:	dd000817 	ldw	r20,32(sp)
   23e48:	0023883a 	mov	r17,zero
   23e4c:	003f4806 	br	23b70 <__alt_data_end+0xfffe4770>
   23e50:	10e3c83a 	sub	r17,r2,r3
   23e54:	9448983a 	sll	r4,r18,r17
   23e58:	003d3206 	br	23324 <__alt_data_end+0xfffe3f24>
   23e5c:	d8000e15 	stw	zero,56(sp)
   23e60:	003d7506 	br	23438 <__alt_data_end+0xfffe4038>
   23e64:	b005883a 	mov	r2,r22
   23e68:	003f4506 	br	23b80 <__alt_data_end+0xfffe4780>
   23e6c:	dc000915 	stw	r16,36(sp)
   23e70:	d9800a17 	ldw	r6,40(sp)
   23e74:	d9400917 	ldw	r5,36(sp)
   23e78:	e009883a 	mov	r4,fp
   23e7c:	00269180 	call	26918 <__pow5mult>
   23e80:	1021883a 	mov	r16,r2
   23e84:	003f5a06 	br	23bf0 <__alt_data_end+0xfffe47f0>
   23e88:	01c00044 	movi	r7,1
   23e8c:	d9c00b15 	stw	r7,44(sp)
   23e90:	d8802217 	ldw	r2,136(sp)
   23e94:	0081280e 	bge	zero,r2,24338 <_dtoa_r+0x11b0>
   23e98:	100d883a 	mov	r6,r2
   23e9c:	1021883a 	mov	r16,r2
   23ea0:	d8800c15 	stw	r2,48(sp)
   23ea4:	d8800615 	stw	r2,24(sp)
   23ea8:	003d8806 	br	234cc <__alt_data_end+0xfffe40cc>
   23eac:	d8800617 	ldw	r2,24(sp)
   23eb0:	00be9b16 	blt	zero,r2,23920 <__alt_data_end+0xfffe4520>
   23eb4:	10010f1e 	bne	r2,zero,242f4 <_dtoa_r+0x116c>
   23eb8:	880b883a 	mov	r5,r17
   23ebc:	000d883a 	mov	r6,zero
   23ec0:	01d00534 	movhi	r7,16404
   23ec4:	8009883a 	mov	r4,r16
   23ec8:	002c3ac0 	call	2c3ac <__muldf3>
   23ecc:	900d883a 	mov	r6,r18
   23ed0:	980f883a 	mov	r7,r19
   23ed4:	1009883a 	mov	r4,r2
   23ed8:	180b883a 	mov	r5,r3
   23edc:	002c1dc0 	call	2c1dc <__gedf2>
   23ee0:	002b883a 	mov	r21,zero
   23ee4:	0023883a 	mov	r17,zero
   23ee8:	1000bf16 	blt	r2,zero,241e8 <_dtoa_r+0x1060>
   23eec:	d9802217 	ldw	r6,136(sp)
   23ef0:	ddc00717 	ldw	r23,28(sp)
   23ef4:	018c303a 	nor	r6,zero,r6
   23ef8:	d9800515 	stw	r6,20(sp)
   23efc:	a80b883a 	mov	r5,r21
   23f00:	e009883a 	mov	r4,fp
   23f04:	00262c40 	call	262c4 <_Bfree>
   23f08:	883e4926 	beq	r17,zero,23830 <__alt_data_end+0xfffe4430>
   23f0c:	003fad06 	br	23dc4 <__alt_data_end+0xfffe49c4>
   23f10:	d9c01117 	ldw	r7,68(sp)
   23f14:	3801bc26 	beq	r7,zero,24608 <_dtoa_r+0x1480>
   23f18:	10810cc4 	addi	r2,r2,1075
   23f1c:	dd400a17 	ldw	r21,40(sp)
   23f20:	dd000817 	ldw	r20,32(sp)
   23f24:	003f0a06 	br	23b50 <__alt_data_end+0xfffe4750>
   23f28:	00800704 	movi	r2,28
   23f2c:	d9000817 	ldw	r4,32(sp)
   23f30:	a0a9883a 	add	r20,r20,r2
   23f34:	b0ad883a 	add	r22,r22,r2
   23f38:	2089883a 	add	r4,r4,r2
   23f3c:	d9000815 	stw	r4,32(sp)
   23f40:	003f5106 	br	23c88 <__alt_data_end+0xfffe4888>
   23f44:	d8c00317 	ldw	r3,12(sp)
   23f48:	b8c1fc0e 	bge	r23,r3,2473c <_dtoa_r+0x15b4>
   23f4c:	0027883a 	mov	r19,zero
   23f50:	b805883a 	mov	r2,r23
   23f54:	003f3e06 	br	23c50 <__alt_data_end+0xfffe4850>
   23f58:	880b883a 	mov	r5,r17
   23f5c:	e009883a 	mov	r4,fp
   23f60:	000f883a 	mov	r7,zero
   23f64:	01800284 	movi	r6,10
   23f68:	00262ec0 	call	262ec <__multadd>
   23f6c:	d9000c17 	ldw	r4,48(sp)
   23f70:	1023883a 	mov	r17,r2
   23f74:	0102040e 	bge	zero,r4,24788 <_dtoa_r+0x1600>
   23f78:	d9000615 	stw	r4,24(sp)
   23f7c:	0500050e 	bge	zero,r20,23f94 <_dtoa_r+0xe0c>
   23f80:	880b883a 	mov	r5,r17
   23f84:	a00d883a 	mov	r6,r20
   23f88:	e009883a 	mov	r4,fp
   23f8c:	0026a580 	call	26a58 <__lshift>
   23f90:	1023883a 	mov	r17,r2
   23f94:	9801241e 	bne	r19,zero,24428 <_dtoa_r+0x12a0>
   23f98:	8829883a 	mov	r20,r17
   23f9c:	d9000617 	ldw	r4,24(sp)
   23fa0:	dcc00717 	ldw	r19,28(sp)
   23fa4:	9480004c 	andi	r18,r18,1
   23fa8:	20bfffc4 	addi	r2,r4,-1
   23fac:	9885883a 	add	r2,r19,r2
   23fb0:	d8800415 	stw	r2,16(sp)
   23fb4:	dc800615 	stw	r18,24(sp)
   23fb8:	a80b883a 	mov	r5,r21
   23fbc:	8009883a 	mov	r4,r16
   23fc0:	0022f600 	call	22f60 <quorem>
   23fc4:	880b883a 	mov	r5,r17
   23fc8:	8009883a 	mov	r4,r16
   23fcc:	102f883a 	mov	r23,r2
   23fd0:	0026ba00 	call	26ba0 <__mcmp>
   23fd4:	a80b883a 	mov	r5,r21
   23fd8:	a00d883a 	mov	r6,r20
   23fdc:	e009883a 	mov	r4,fp
   23fe0:	102d883a 	mov	r22,r2
   23fe4:	0026c000 	call	26c00 <__mdiff>
   23fe8:	1007883a 	mov	r3,r2
   23fec:	10800317 	ldw	r2,12(r2)
   23ff0:	bc800c04 	addi	r18,r23,48
   23ff4:	180b883a 	mov	r5,r3
   23ff8:	10004e1e 	bne	r2,zero,24134 <_dtoa_r+0xfac>
   23ffc:	8009883a 	mov	r4,r16
   24000:	d8c01615 	stw	r3,88(sp)
   24004:	0026ba00 	call	26ba0 <__mcmp>
   24008:	d8c01617 	ldw	r3,88(sp)
   2400c:	e009883a 	mov	r4,fp
   24010:	d8801615 	stw	r2,88(sp)
   24014:	180b883a 	mov	r5,r3
   24018:	00262c40 	call	262c4 <_Bfree>
   2401c:	d8801617 	ldw	r2,88(sp)
   24020:	1000041e 	bne	r2,zero,24034 <_dtoa_r+0xeac>
   24024:	d9800317 	ldw	r6,12(sp)
   24028:	3000021e 	bne	r6,zero,24034 <_dtoa_r+0xeac>
   2402c:	d8c00617 	ldw	r3,24(sp)
   24030:	18003726 	beq	r3,zero,24110 <_dtoa_r+0xf88>
   24034:	b0002016 	blt	r22,zero,240b8 <_dtoa_r+0xf30>
   24038:	b000041e 	bne	r22,zero,2404c <_dtoa_r+0xec4>
   2403c:	d9000317 	ldw	r4,12(sp)
   24040:	2000021e 	bne	r4,zero,2404c <_dtoa_r+0xec4>
   24044:	d8c00617 	ldw	r3,24(sp)
   24048:	18001b26 	beq	r3,zero,240b8 <_dtoa_r+0xf30>
   2404c:	00810716 	blt	zero,r2,2446c <_dtoa_r+0x12e4>
   24050:	d8c00417 	ldw	r3,16(sp)
   24054:	9d800044 	addi	r22,r19,1
   24058:	9c800005 	stb	r18,0(r19)
   2405c:	b02f883a 	mov	r23,r22
   24060:	98c10626 	beq	r19,r3,2447c <_dtoa_r+0x12f4>
   24064:	800b883a 	mov	r5,r16
   24068:	000f883a 	mov	r7,zero
   2406c:	01800284 	movi	r6,10
   24070:	e009883a 	mov	r4,fp
   24074:	00262ec0 	call	262ec <__multadd>
   24078:	1021883a 	mov	r16,r2
   2407c:	000f883a 	mov	r7,zero
   24080:	01800284 	movi	r6,10
   24084:	880b883a 	mov	r5,r17
   24088:	e009883a 	mov	r4,fp
   2408c:	8d002526 	beq	r17,r20,24124 <_dtoa_r+0xf9c>
   24090:	00262ec0 	call	262ec <__multadd>
   24094:	a00b883a 	mov	r5,r20
   24098:	000f883a 	mov	r7,zero
   2409c:	01800284 	movi	r6,10
   240a0:	e009883a 	mov	r4,fp
   240a4:	1023883a 	mov	r17,r2
   240a8:	00262ec0 	call	262ec <__multadd>
   240ac:	1029883a 	mov	r20,r2
   240b0:	b027883a 	mov	r19,r22
   240b4:	003fc006 	br	23fb8 <__alt_data_end+0xfffe4bb8>
   240b8:	9011883a 	mov	r8,r18
   240bc:	00800e0e 	bge	zero,r2,240f8 <_dtoa_r+0xf70>
   240c0:	800b883a 	mov	r5,r16
   240c4:	01800044 	movi	r6,1
   240c8:	e009883a 	mov	r4,fp
   240cc:	da001715 	stw	r8,92(sp)
   240d0:	0026a580 	call	26a58 <__lshift>
   240d4:	a80b883a 	mov	r5,r21
   240d8:	1009883a 	mov	r4,r2
   240dc:	1021883a 	mov	r16,r2
   240e0:	0026ba00 	call	26ba0 <__mcmp>
   240e4:	da001717 	ldw	r8,92(sp)
   240e8:	0081960e 	bge	zero,r2,24744 <_dtoa_r+0x15bc>
   240ec:	00800e44 	movi	r2,57
   240f0:	40817026 	beq	r8,r2,246b4 <_dtoa_r+0x152c>
   240f4:	ba000c44 	addi	r8,r23,49
   240f8:	8825883a 	mov	r18,r17
   240fc:	9dc00044 	addi	r23,r19,1
   24100:	9a000005 	stb	r8,0(r19)
   24104:	a023883a 	mov	r17,r20
   24108:	dc000915 	stw	r16,36(sp)
   2410c:	003f2406 	br	23da0 <__alt_data_end+0xfffe49a0>
   24110:	00800e44 	movi	r2,57
   24114:	9011883a 	mov	r8,r18
   24118:	90816626 	beq	r18,r2,246b4 <_dtoa_r+0x152c>
   2411c:	05bff516 	blt	zero,r22,240f4 <__alt_data_end+0xfffe4cf4>
   24120:	003ff506 	br	240f8 <__alt_data_end+0xfffe4cf8>
   24124:	00262ec0 	call	262ec <__multadd>
   24128:	1023883a 	mov	r17,r2
   2412c:	1029883a 	mov	r20,r2
   24130:	003fdf06 	br	240b0 <__alt_data_end+0xfffe4cb0>
   24134:	e009883a 	mov	r4,fp
   24138:	00262c40 	call	262c4 <_Bfree>
   2413c:	00800044 	movi	r2,1
   24140:	003fbc06 	br	24034 <__alt_data_end+0xfffe4c34>
   24144:	a80b883a 	mov	r5,r21
   24148:	8009883a 	mov	r4,r16
   2414c:	0026ba00 	call	26ba0 <__mcmp>
   24150:	103edb0e 	bge	r2,zero,23cc0 <__alt_data_end+0xfffe48c0>
   24154:	800b883a 	mov	r5,r16
   24158:	000f883a 	mov	r7,zero
   2415c:	01800284 	movi	r6,10
   24160:	e009883a 	mov	r4,fp
   24164:	00262ec0 	call	262ec <__multadd>
   24168:	1021883a 	mov	r16,r2
   2416c:	d8800517 	ldw	r2,20(sp)
   24170:	d8c00b17 	ldw	r3,44(sp)
   24174:	10bfffc4 	addi	r2,r2,-1
   24178:	d8800515 	stw	r2,20(sp)
   2417c:	183f761e 	bne	r3,zero,23f58 <__alt_data_end+0xfffe4b58>
   24180:	d9000c17 	ldw	r4,48(sp)
   24184:	0101730e 	bge	zero,r4,24754 <_dtoa_r+0x15cc>
   24188:	d9000615 	stw	r4,24(sp)
   2418c:	003ed006 	br	23cd0 <__alt_data_end+0xfffe48d0>
   24190:	00800084 	movi	r2,2
   24194:	3081861e 	bne	r6,r2,247b0 <_dtoa_r+0x1628>
   24198:	d8000b15 	stw	zero,44(sp)
   2419c:	003f3c06 	br	23e90 <__alt_data_end+0xfffe4a90>
   241a0:	dc000917 	ldw	r16,36(sp)
   241a4:	003e9206 	br	23bf0 <__alt_data_end+0xfffe47f0>
   241a8:	d9c00317 	ldw	r7,12(sp)
   241ac:	00800084 	movi	r2,2
   241b0:	11fec50e 	bge	r2,r7,23cc8 <__alt_data_end+0xfffe48c8>
   241b4:	d9000617 	ldw	r4,24(sp)
   241b8:	20013c1e 	bne	r4,zero,246ac <_dtoa_r+0x1524>
   241bc:	a80b883a 	mov	r5,r21
   241c0:	000f883a 	mov	r7,zero
   241c4:	01800144 	movi	r6,5
   241c8:	e009883a 	mov	r4,fp
   241cc:	00262ec0 	call	262ec <__multadd>
   241d0:	100b883a 	mov	r5,r2
   241d4:	8009883a 	mov	r4,r16
   241d8:	102b883a 	mov	r21,r2
   241dc:	0026ba00 	call	26ba0 <__mcmp>
   241e0:	dc000915 	stw	r16,36(sp)
   241e4:	00bf410e 	bge	zero,r2,23eec <__alt_data_end+0xfffe4aec>
   241e8:	d9c00717 	ldw	r7,28(sp)
   241ec:	00800c44 	movi	r2,49
   241f0:	38800005 	stb	r2,0(r7)
   241f4:	d8800517 	ldw	r2,20(sp)
   241f8:	3dc00044 	addi	r23,r7,1
   241fc:	10800044 	addi	r2,r2,1
   24200:	d8800515 	stw	r2,20(sp)
   24204:	003f3d06 	br	23efc <__alt_data_end+0xfffe4afc>
   24208:	d9800517 	ldw	r6,20(sp)
   2420c:	d9c00717 	ldw	r7,28(sp)
   24210:	00800c44 	movi	r2,49
   24214:	31800044 	addi	r6,r6,1
   24218:	d9800515 	stw	r6,20(sp)
   2421c:	38800005 	stb	r2,0(r7)
   24220:	003edf06 	br	23da0 <__alt_data_end+0xfffe49a0>
   24224:	d8000b15 	stw	zero,44(sp)
   24228:	003c9f06 	br	234a8 <__alt_data_end+0xfffe40a8>
   2422c:	903e7e1e 	bne	r18,zero,23c28 <__alt_data_end+0xfffe4828>
   24230:	00800434 	movhi	r2,16
   24234:	10bfffc4 	addi	r2,r2,-1
   24238:	9884703a 	and	r2,r19,r2
   2423c:	1000ea1e 	bne	r2,zero,245e8 <_dtoa_r+0x1460>
   24240:	9cdffc2c 	andhi	r19,r19,32752
   24244:	9800e826 	beq	r19,zero,245e8 <_dtoa_r+0x1460>
   24248:	d9c00817 	ldw	r7,32(sp)
   2424c:	b5800044 	addi	r22,r22,1
   24250:	04c00044 	movi	r19,1
   24254:	39c00044 	addi	r7,r7,1
   24258:	d9c00815 	stw	r7,32(sp)
   2425c:	d8800d17 	ldw	r2,52(sp)
   24260:	103e721e 	bne	r2,zero,23c2c <__alt_data_end+0xfffe482c>
   24264:	00800044 	movi	r2,1
   24268:	003e7906 	br	23c50 <__alt_data_end+0xfffe4850>
   2426c:	8009883a 	mov	r4,r16
   24270:	002d5940 	call	2d594 <__floatsidf>
   24274:	d9800f17 	ldw	r6,60(sp)
   24278:	d9c01017 	ldw	r7,64(sp)
   2427c:	1009883a 	mov	r4,r2
   24280:	180b883a 	mov	r5,r3
   24284:	002c3ac0 	call	2c3ac <__muldf3>
   24288:	000d883a 	mov	r6,zero
   2428c:	01d00734 	movhi	r7,16412
   24290:	1009883a 	mov	r4,r2
   24294:	180b883a 	mov	r5,r3
   24298:	002aed80 	call	2aed8 <__adddf3>
   2429c:	047f3034 	movhi	r17,64704
   242a0:	1021883a 	mov	r16,r2
   242a4:	1c63883a 	add	r17,r3,r17
   242a8:	d9000f17 	ldw	r4,60(sp)
   242ac:	d9401017 	ldw	r5,64(sp)
   242b0:	000d883a 	mov	r6,zero
   242b4:	01d00534 	movhi	r7,16404
   242b8:	002cc180 	call	2cc18 <__subdf3>
   242bc:	800d883a 	mov	r6,r16
   242c0:	880f883a 	mov	r7,r17
   242c4:	1009883a 	mov	r4,r2
   242c8:	180b883a 	mov	r5,r3
   242cc:	102b883a 	mov	r21,r2
   242d0:	1829883a 	mov	r20,r3
   242d4:	002c1dc0 	call	2c1dc <__gedf2>
   242d8:	00806c16 	blt	zero,r2,2448c <_dtoa_r+0x1304>
   242dc:	89e0003c 	xorhi	r7,r17,32768
   242e0:	800d883a 	mov	r6,r16
   242e4:	a809883a 	mov	r4,r21
   242e8:	a00b883a 	mov	r5,r20
   242ec:	002c2b80 	call	2c2b8 <__ledf2>
   242f0:	103d7e0e 	bge	r2,zero,238ec <__alt_data_end+0xfffe44ec>
   242f4:	002b883a 	mov	r21,zero
   242f8:	0023883a 	mov	r17,zero
   242fc:	003efb06 	br	23eec <__alt_data_end+0xfffe4aec>
   24300:	d8800717 	ldw	r2,28(sp)
   24304:	003bd006 	br	23248 <__alt_data_end+0xfffe3e48>
   24308:	d9000a17 	ldw	r4,40(sp)
   2430c:	d9800d17 	ldw	r6,52(sp)
   24310:	dd400a15 	stw	r21,40(sp)
   24314:	a905c83a 	sub	r2,r21,r4
   24318:	308d883a 	add	r6,r6,r2
   2431c:	d9800d15 	stw	r6,52(sp)
   24320:	002b883a 	mov	r21,zero
   24324:	003e0606 	br	23b40 <__alt_data_end+0xfffe4740>
   24328:	9023883a 	mov	r17,r18
   2432c:	9829883a 	mov	r20,r19
   24330:	04000084 	movi	r16,2
   24334:	003c9206 	br	23580 <__alt_data_end+0xfffe4180>
   24338:	04000044 	movi	r16,1
   2433c:	dc000c15 	stw	r16,48(sp)
   24340:	dc000615 	stw	r16,24(sp)
   24344:	dc002215 	stw	r16,136(sp)
   24348:	e0001115 	stw	zero,68(fp)
   2434c:	000b883a 	mov	r5,zero
   24350:	003c6906 	br	234f8 <__alt_data_end+0xfffe40f8>
   24354:	3021883a 	mov	r16,r6
   24358:	003ffb06 	br	24348 <__alt_data_end+0xfffe4f48>
   2435c:	1000021e 	bne	r2,zero,24368 <_dtoa_r+0x11e0>
   24360:	4200004c 	andi	r8,r8,1
   24364:	403e7d1e 	bne	r8,zero,23d5c <__alt_data_end+0xfffe495c>
   24368:	01000c04 	movi	r4,48
   2436c:	00000106 	br	24374 <_dtoa_r+0x11ec>
   24370:	102f883a 	mov	r23,r2
   24374:	b8bfffc4 	addi	r2,r23,-1
   24378:	10c00007 	ldb	r3,0(r2)
   2437c:	193ffc26 	beq	r3,r4,24370 <__alt_data_end+0xfffe4f70>
   24380:	003e8706 	br	23da0 <__alt_data_end+0xfffe49a0>
   24384:	d8800517 	ldw	r2,20(sp)
   24388:	00a3c83a 	sub	r17,zero,r2
   2438c:	8800a426 	beq	r17,zero,24620 <_dtoa_r+0x1498>
   24390:	888003cc 	andi	r2,r17,15
   24394:	100490fa 	slli	r2,r2,3
   24398:	00c000f4 	movhi	r3,3
   2439c:	18fff304 	addi	r3,r3,-52
   243a0:	1885883a 	add	r2,r3,r2
   243a4:	11800017 	ldw	r6,0(r2)
   243a8:	11c00117 	ldw	r7,4(r2)
   243ac:	9009883a 	mov	r4,r18
   243b0:	980b883a 	mov	r5,r19
   243b4:	8823d13a 	srai	r17,r17,4
   243b8:	002c3ac0 	call	2c3ac <__muldf3>
   243bc:	d8800f15 	stw	r2,60(sp)
   243c0:	d8c01015 	stw	r3,64(sp)
   243c4:	8800e826 	beq	r17,zero,24768 <_dtoa_r+0x15e0>
   243c8:	050000f4 	movhi	r20,3
   243cc:	a53fe904 	addi	r20,r20,-92
   243d0:	04000084 	movi	r16,2
   243d4:	8980004c 	andi	r6,r17,1
   243d8:	1009883a 	mov	r4,r2
   243dc:	8823d07a 	srai	r17,r17,1
   243e0:	180b883a 	mov	r5,r3
   243e4:	30000426 	beq	r6,zero,243f8 <_dtoa_r+0x1270>
   243e8:	a1800017 	ldw	r6,0(r20)
   243ec:	a1c00117 	ldw	r7,4(r20)
   243f0:	84000044 	addi	r16,r16,1
   243f4:	002c3ac0 	call	2c3ac <__muldf3>
   243f8:	a5000204 	addi	r20,r20,8
   243fc:	883ff51e 	bne	r17,zero,243d4 <__alt_data_end+0xfffe4fd4>
   24400:	d8800f15 	stw	r2,60(sp)
   24404:	d8c01015 	stw	r3,64(sp)
   24408:	003c7606 	br	235e4 <__alt_data_end+0xfffe41e4>
   2440c:	00c00c04 	movi	r3,48
   24410:	10c00005 	stb	r3,0(r2)
   24414:	d8c00517 	ldw	r3,20(sp)
   24418:	bd3fffc3 	ldbu	r20,-1(r23)
   2441c:	18c00044 	addi	r3,r3,1
   24420:	d8c00515 	stw	r3,20(sp)
   24424:	003db906 	br	23b0c <__alt_data_end+0xfffe470c>
   24428:	89400117 	ldw	r5,4(r17)
   2442c:	e009883a 	mov	r4,fp
   24430:	002621c0 	call	2621c <_Balloc>
   24434:	89800417 	ldw	r6,16(r17)
   24438:	89400304 	addi	r5,r17,12
   2443c:	11000304 	addi	r4,r2,12
   24440:	31800084 	addi	r6,r6,2
   24444:	318d883a 	add	r6,r6,r6
   24448:	318d883a 	add	r6,r6,r6
   2444c:	1027883a 	mov	r19,r2
   24450:	0025fac0 	call	25fac <memcpy>
   24454:	01800044 	movi	r6,1
   24458:	980b883a 	mov	r5,r19
   2445c:	e009883a 	mov	r4,fp
   24460:	0026a580 	call	26a58 <__lshift>
   24464:	1029883a 	mov	r20,r2
   24468:	003ecc06 	br	23f9c <__alt_data_end+0xfffe4b9c>
   2446c:	00800e44 	movi	r2,57
   24470:	90809026 	beq	r18,r2,246b4 <_dtoa_r+0x152c>
   24474:	92000044 	addi	r8,r18,1
   24478:	003f1f06 	br	240f8 <__alt_data_end+0xfffe4cf8>
   2447c:	9011883a 	mov	r8,r18
   24480:	8825883a 	mov	r18,r17
   24484:	a023883a 	mov	r17,r20
   24488:	003e2906 	br	23d30 <__alt_data_end+0xfffe4930>
   2448c:	002b883a 	mov	r21,zero
   24490:	0023883a 	mov	r17,zero
   24494:	003f5406 	br	241e8 <__alt_data_end+0xfffe4de8>
   24498:	61bfffc4 	addi	r6,r12,-1
   2449c:	300490fa 	slli	r2,r6,3
   244a0:	00c000f4 	movhi	r3,3
   244a4:	18fff304 	addi	r3,r3,-52
   244a8:	1885883a 	add	r2,r3,r2
   244ac:	11000017 	ldw	r4,0(r2)
   244b0:	11400117 	ldw	r5,4(r2)
   244b4:	d8800717 	ldw	r2,28(sp)
   244b8:	880f883a 	mov	r7,r17
   244bc:	d9801215 	stw	r6,72(sp)
   244c0:	800d883a 	mov	r6,r16
   244c4:	db001615 	stw	r12,88(sp)
   244c8:	15c00044 	addi	r23,r2,1
   244cc:	002c3ac0 	call	2c3ac <__muldf3>
   244d0:	d9401017 	ldw	r5,64(sp)
   244d4:	d9000f17 	ldw	r4,60(sp)
   244d8:	d8c01515 	stw	r3,84(sp)
   244dc:	d8801415 	stw	r2,80(sp)
   244e0:	002d5140 	call	2d514 <__fixdfsi>
   244e4:	1009883a 	mov	r4,r2
   244e8:	1021883a 	mov	r16,r2
   244ec:	002d5940 	call	2d594 <__floatsidf>
   244f0:	d9000f17 	ldw	r4,60(sp)
   244f4:	d9401017 	ldw	r5,64(sp)
   244f8:	100d883a 	mov	r6,r2
   244fc:	180f883a 	mov	r7,r3
   24500:	002cc180 	call	2cc18 <__subdf3>
   24504:	1829883a 	mov	r20,r3
   24508:	d8c00717 	ldw	r3,28(sp)
   2450c:	84000c04 	addi	r16,r16,48
   24510:	1023883a 	mov	r17,r2
   24514:	1c000005 	stb	r16,0(r3)
   24518:	db001617 	ldw	r12,88(sp)
   2451c:	00800044 	movi	r2,1
   24520:	60802226 	beq	r12,r2,245ac <_dtoa_r+0x1424>
   24524:	d9c00717 	ldw	r7,28(sp)
   24528:	8805883a 	mov	r2,r17
   2452c:	b82b883a 	mov	r21,r23
   24530:	3b19883a 	add	r12,r7,r12
   24534:	6023883a 	mov	r17,r12
   24538:	a007883a 	mov	r3,r20
   2453c:	dc800f15 	stw	r18,60(sp)
   24540:	000d883a 	mov	r6,zero
   24544:	01d00934 	movhi	r7,16420
   24548:	1009883a 	mov	r4,r2
   2454c:	180b883a 	mov	r5,r3
   24550:	002c3ac0 	call	2c3ac <__muldf3>
   24554:	180b883a 	mov	r5,r3
   24558:	1009883a 	mov	r4,r2
   2455c:	1829883a 	mov	r20,r3
   24560:	1025883a 	mov	r18,r2
   24564:	002d5140 	call	2d514 <__fixdfsi>
   24568:	1009883a 	mov	r4,r2
   2456c:	1021883a 	mov	r16,r2
   24570:	002d5940 	call	2d594 <__floatsidf>
   24574:	100d883a 	mov	r6,r2
   24578:	180f883a 	mov	r7,r3
   2457c:	9009883a 	mov	r4,r18
   24580:	a00b883a 	mov	r5,r20
   24584:	84000c04 	addi	r16,r16,48
   24588:	002cc180 	call	2cc18 <__subdf3>
   2458c:	ad400044 	addi	r21,r21,1
   24590:	ac3fffc5 	stb	r16,-1(r21)
   24594:	ac7fea1e 	bne	r21,r17,24540 <__alt_data_end+0xfffe5140>
   24598:	1023883a 	mov	r17,r2
   2459c:	d8801217 	ldw	r2,72(sp)
   245a0:	dc800f17 	ldw	r18,60(sp)
   245a4:	1829883a 	mov	r20,r3
   245a8:	b8af883a 	add	r23,r23,r2
   245ac:	d9001417 	ldw	r4,80(sp)
   245b0:	d9401517 	ldw	r5,84(sp)
   245b4:	000d883a 	mov	r6,zero
   245b8:	01cff834 	movhi	r7,16352
   245bc:	002aed80 	call	2aed8 <__adddf3>
   245c0:	880d883a 	mov	r6,r17
   245c4:	a00f883a 	mov	r7,r20
   245c8:	1009883a 	mov	r4,r2
   245cc:	180b883a 	mov	r5,r3
   245d0:	002c2b80 	call	2c2b8 <__ledf2>
   245d4:	10003e0e 	bge	r2,zero,246d0 <_dtoa_r+0x1548>
   245d8:	d9001317 	ldw	r4,76(sp)
   245dc:	bd3fffc3 	ldbu	r20,-1(r23)
   245e0:	d9000515 	stw	r4,20(sp)
   245e4:	003d3b06 	br	23ad4 <__alt_data_end+0xfffe46d4>
   245e8:	0027883a 	mov	r19,zero
   245ec:	003f1b06 	br	2425c <__alt_data_end+0xfffe4e5c>
   245f0:	d8800817 	ldw	r2,32(sp)
   245f4:	11e9c83a 	sub	r20,r2,r7
   245f8:	0005883a 	mov	r2,zero
   245fc:	003d5406 	br	23b50 <__alt_data_end+0xfffe4750>
   24600:	00800044 	movi	r2,1
   24604:	003dc706 	br	23d24 <__alt_data_end+0xfffe4924>
   24608:	d8c00217 	ldw	r3,8(sp)
   2460c:	00800d84 	movi	r2,54
   24610:	dd400a17 	ldw	r21,40(sp)
   24614:	10c5c83a 	sub	r2,r2,r3
   24618:	dd000817 	ldw	r20,32(sp)
   2461c:	003d4c06 	br	23b50 <__alt_data_end+0xfffe4750>
   24620:	dc800f15 	stw	r18,60(sp)
   24624:	dcc01015 	stw	r19,64(sp)
   24628:	04000084 	movi	r16,2
   2462c:	003bed06 	br	235e4 <__alt_data_end+0xfffe41e4>
   24630:	d9000617 	ldw	r4,24(sp)
   24634:	203f0d26 	beq	r4,zero,2426c <__alt_data_end+0xfffe4e6c>
   24638:	d9800c17 	ldw	r6,48(sp)
   2463c:	01bcab0e 	bge	zero,r6,238ec <__alt_data_end+0xfffe44ec>
   24640:	d9401017 	ldw	r5,64(sp)
   24644:	d9000f17 	ldw	r4,60(sp)
   24648:	000d883a 	mov	r6,zero
   2464c:	01d00934 	movhi	r7,16420
   24650:	002c3ac0 	call	2c3ac <__muldf3>
   24654:	81000044 	addi	r4,r16,1
   24658:	d8800f15 	stw	r2,60(sp)
   2465c:	d8c01015 	stw	r3,64(sp)
   24660:	002d5940 	call	2d594 <__floatsidf>
   24664:	d9800f17 	ldw	r6,60(sp)
   24668:	d9c01017 	ldw	r7,64(sp)
   2466c:	1009883a 	mov	r4,r2
   24670:	180b883a 	mov	r5,r3
   24674:	002c3ac0 	call	2c3ac <__muldf3>
   24678:	01d00734 	movhi	r7,16412
   2467c:	000d883a 	mov	r6,zero
   24680:	1009883a 	mov	r4,r2
   24684:	180b883a 	mov	r5,r3
   24688:	002aed80 	call	2aed8 <__adddf3>
   2468c:	d9c00517 	ldw	r7,20(sp)
   24690:	047f3034 	movhi	r17,64704
   24694:	1021883a 	mov	r16,r2
   24698:	39ffffc4 	addi	r7,r7,-1
   2469c:	d9c01315 	stw	r7,76(sp)
   246a0:	1c63883a 	add	r17,r3,r17
   246a4:	db000c17 	ldw	r12,48(sp)
   246a8:	003bea06 	br	23654 <__alt_data_end+0xfffe4254>
   246ac:	dc000915 	stw	r16,36(sp)
   246b0:	003e0e06 	br	23eec <__alt_data_end+0xfffe4aec>
   246b4:	01000e44 	movi	r4,57
   246b8:	8825883a 	mov	r18,r17
   246bc:	9dc00044 	addi	r23,r19,1
   246c0:	99000005 	stb	r4,0(r19)
   246c4:	a023883a 	mov	r17,r20
   246c8:	dc000915 	stw	r16,36(sp)
   246cc:	003da406 	br	23d60 <__alt_data_end+0xfffe4960>
   246d0:	d9801417 	ldw	r6,80(sp)
   246d4:	d9c01517 	ldw	r7,84(sp)
   246d8:	0009883a 	mov	r4,zero
   246dc:	014ff834 	movhi	r5,16352
   246e0:	002cc180 	call	2cc18 <__subdf3>
   246e4:	880d883a 	mov	r6,r17
   246e8:	a00f883a 	mov	r7,r20
   246ec:	1009883a 	mov	r4,r2
   246f0:	180b883a 	mov	r5,r3
   246f4:	002c1dc0 	call	2c1dc <__gedf2>
   246f8:	00bc7c0e 	bge	zero,r2,238ec <__alt_data_end+0xfffe44ec>
   246fc:	01000c04 	movi	r4,48
   24700:	00000106 	br	24708 <_dtoa_r+0x1580>
   24704:	102f883a 	mov	r23,r2
   24708:	b8bfffc4 	addi	r2,r23,-1
   2470c:	10c00007 	ldb	r3,0(r2)
   24710:	193ffc26 	beq	r3,r4,24704 <__alt_data_end+0xfffe5304>
   24714:	d9801317 	ldw	r6,76(sp)
   24718:	d9800515 	stw	r6,20(sp)
   2471c:	003c4406 	br	23830 <__alt_data_end+0xfffe4430>
   24720:	d9801317 	ldw	r6,76(sp)
   24724:	d9800515 	stw	r6,20(sp)
   24728:	003cea06 	br	23ad4 <__alt_data_end+0xfffe46d4>
   2472c:	dd800f17 	ldw	r22,60(sp)
   24730:	dcc01017 	ldw	r19,64(sp)
   24734:	dc801217 	ldw	r18,72(sp)
   24738:	003c6c06 	br	238ec <__alt_data_end+0xfffe44ec>
   2473c:	903e031e 	bne	r18,zero,23f4c <__alt_data_end+0xfffe4b4c>
   24740:	003ebb06 	br	24230 <__alt_data_end+0xfffe4e30>
   24744:	103e6c1e 	bne	r2,zero,240f8 <__alt_data_end+0xfffe4cf8>
   24748:	4080004c 	andi	r2,r8,1
   2474c:	103e6a26 	beq	r2,zero,240f8 <__alt_data_end+0xfffe4cf8>
   24750:	003e6606 	br	240ec <__alt_data_end+0xfffe4cec>
   24754:	d8c00317 	ldw	r3,12(sp)
   24758:	00800084 	movi	r2,2
   2475c:	10c02916 	blt	r2,r3,24804 <_dtoa_r+0x167c>
   24760:	d9000c17 	ldw	r4,48(sp)
   24764:	003e8806 	br	24188 <__alt_data_end+0xfffe4d88>
   24768:	04000084 	movi	r16,2
   2476c:	003b9d06 	br	235e4 <__alt_data_end+0xfffe41e4>
   24770:	d9001317 	ldw	r4,76(sp)
   24774:	d9000515 	stw	r4,20(sp)
   24778:	003cd606 	br	23ad4 <__alt_data_end+0xfffe46d4>
   2477c:	d8801317 	ldw	r2,76(sp)
   24780:	d8800515 	stw	r2,20(sp)
   24784:	003c2a06 	br	23830 <__alt_data_end+0xfffe4430>
   24788:	d9800317 	ldw	r6,12(sp)
   2478c:	00800084 	movi	r2,2
   24790:	11801516 	blt	r2,r6,247e8 <_dtoa_r+0x1660>
   24794:	d9c00c17 	ldw	r7,48(sp)
   24798:	d9c00615 	stw	r7,24(sp)
   2479c:	003df706 	br	23f7c <__alt_data_end+0xfffe4b7c>
   247a0:	193d3926 	beq	r3,r4,23c88 <__alt_data_end+0xfffe4888>
   247a4:	00c00f04 	movi	r3,60
   247a8:	1885c83a 	sub	r2,r3,r2
   247ac:	003ddf06 	br	23f2c <__alt_data_end+0xfffe4b2c>
   247b0:	e009883a 	mov	r4,fp
   247b4:	e0001115 	stw	zero,68(fp)
   247b8:	000b883a 	mov	r5,zero
   247bc:	002621c0 	call	2621c <_Balloc>
   247c0:	d8800715 	stw	r2,28(sp)
   247c4:	d8c00717 	ldw	r3,28(sp)
   247c8:	00bfffc4 	movi	r2,-1
   247cc:	01000044 	movi	r4,1
   247d0:	d8800c15 	stw	r2,48(sp)
   247d4:	e0c01015 	stw	r3,64(fp)
   247d8:	d9000b15 	stw	r4,44(sp)
   247dc:	d8800615 	stw	r2,24(sp)
   247e0:	d8002215 	stw	zero,136(sp)
   247e4:	003c4106 	br	238ec <__alt_data_end+0xfffe44ec>
   247e8:	d8c00c17 	ldw	r3,48(sp)
   247ec:	d8c00615 	stw	r3,24(sp)
   247f0:	003e7006 	br	241b4 <__alt_data_end+0xfffe4db4>
   247f4:	04400044 	movi	r17,1
   247f8:	003b2006 	br	2347c <__alt_data_end+0xfffe407c>
   247fc:	000b883a 	mov	r5,zero
   24800:	003b3d06 	br	234f8 <__alt_data_end+0xfffe40f8>
   24804:	d8800c17 	ldw	r2,48(sp)
   24808:	d8800615 	stw	r2,24(sp)
   2480c:	003e6906 	br	241b4 <__alt_data_end+0xfffe4db4>

00024810 <__sflush_r>:
   24810:	2880030b 	ldhu	r2,12(r5)
   24814:	defffb04 	addi	sp,sp,-20
   24818:	dcc00315 	stw	r19,12(sp)
   2481c:	dc400115 	stw	r17,4(sp)
   24820:	dfc00415 	stw	ra,16(sp)
   24824:	dc800215 	stw	r18,8(sp)
   24828:	dc000015 	stw	r16,0(sp)
   2482c:	10c0020c 	andi	r3,r2,8
   24830:	2823883a 	mov	r17,r5
   24834:	2027883a 	mov	r19,r4
   24838:	1800311e 	bne	r3,zero,24900 <__sflush_r+0xf0>
   2483c:	28c00117 	ldw	r3,4(r5)
   24840:	10820014 	ori	r2,r2,2048
   24844:	2880030d 	sth	r2,12(r5)
   24848:	00c04b0e 	bge	zero,r3,24978 <__sflush_r+0x168>
   2484c:	8a000a17 	ldw	r8,40(r17)
   24850:	40002326 	beq	r8,zero,248e0 <__sflush_r+0xd0>
   24854:	9c000017 	ldw	r16,0(r19)
   24858:	10c4000c 	andi	r3,r2,4096
   2485c:	98000015 	stw	zero,0(r19)
   24860:	18004826 	beq	r3,zero,24984 <__sflush_r+0x174>
   24864:	89801417 	ldw	r6,80(r17)
   24868:	10c0010c 	andi	r3,r2,4
   2486c:	18000626 	beq	r3,zero,24888 <__sflush_r+0x78>
   24870:	88c00117 	ldw	r3,4(r17)
   24874:	88800c17 	ldw	r2,48(r17)
   24878:	30cdc83a 	sub	r6,r6,r3
   2487c:	10000226 	beq	r2,zero,24888 <__sflush_r+0x78>
   24880:	88800f17 	ldw	r2,60(r17)
   24884:	308dc83a 	sub	r6,r6,r2
   24888:	89400717 	ldw	r5,28(r17)
   2488c:	000f883a 	mov	r7,zero
   24890:	9809883a 	mov	r4,r19
   24894:	403ee83a 	callr	r8
   24898:	00ffffc4 	movi	r3,-1
   2489c:	10c04426 	beq	r2,r3,249b0 <__sflush_r+0x1a0>
   248a0:	88c0030b 	ldhu	r3,12(r17)
   248a4:	89000417 	ldw	r4,16(r17)
   248a8:	88000115 	stw	zero,4(r17)
   248ac:	197dffcc 	andi	r5,r3,63487
   248b0:	8940030d 	sth	r5,12(r17)
   248b4:	89000015 	stw	r4,0(r17)
   248b8:	18c4000c 	andi	r3,r3,4096
   248bc:	18002c1e 	bne	r3,zero,24970 <__sflush_r+0x160>
   248c0:	89400c17 	ldw	r5,48(r17)
   248c4:	9c000015 	stw	r16,0(r19)
   248c8:	28000526 	beq	r5,zero,248e0 <__sflush_r+0xd0>
   248cc:	88801004 	addi	r2,r17,64
   248d0:	28800226 	beq	r5,r2,248dc <__sflush_r+0xcc>
   248d4:	9809883a 	mov	r4,r19
   248d8:	0024f8c0 	call	24f8c <_free_r>
   248dc:	88000c15 	stw	zero,48(r17)
   248e0:	0005883a 	mov	r2,zero
   248e4:	dfc00417 	ldw	ra,16(sp)
   248e8:	dcc00317 	ldw	r19,12(sp)
   248ec:	dc800217 	ldw	r18,8(sp)
   248f0:	dc400117 	ldw	r17,4(sp)
   248f4:	dc000017 	ldw	r16,0(sp)
   248f8:	dec00504 	addi	sp,sp,20
   248fc:	f800283a 	ret
   24900:	2c800417 	ldw	r18,16(r5)
   24904:	903ff626 	beq	r18,zero,248e0 <__alt_data_end+0xfffe54e0>
   24908:	2c000017 	ldw	r16,0(r5)
   2490c:	108000cc 	andi	r2,r2,3
   24910:	2c800015 	stw	r18,0(r5)
   24914:	84a1c83a 	sub	r16,r16,r18
   24918:	1000131e 	bne	r2,zero,24968 <__sflush_r+0x158>
   2491c:	28800517 	ldw	r2,20(r5)
   24920:	88800215 	stw	r2,8(r17)
   24924:	04000316 	blt	zero,r16,24934 <__sflush_r+0x124>
   24928:	003fed06 	br	248e0 <__alt_data_end+0xfffe54e0>
   2492c:	90a5883a 	add	r18,r18,r2
   24930:	043feb0e 	bge	zero,r16,248e0 <__alt_data_end+0xfffe54e0>
   24934:	88800917 	ldw	r2,36(r17)
   24938:	89400717 	ldw	r5,28(r17)
   2493c:	800f883a 	mov	r7,r16
   24940:	900d883a 	mov	r6,r18
   24944:	9809883a 	mov	r4,r19
   24948:	103ee83a 	callr	r2
   2494c:	80a1c83a 	sub	r16,r16,r2
   24950:	00bff616 	blt	zero,r2,2492c <__alt_data_end+0xfffe552c>
   24954:	88c0030b 	ldhu	r3,12(r17)
   24958:	00bfffc4 	movi	r2,-1
   2495c:	18c01014 	ori	r3,r3,64
   24960:	88c0030d 	sth	r3,12(r17)
   24964:	003fdf06 	br	248e4 <__alt_data_end+0xfffe54e4>
   24968:	0005883a 	mov	r2,zero
   2496c:	003fec06 	br	24920 <__alt_data_end+0xfffe5520>
   24970:	88801415 	stw	r2,80(r17)
   24974:	003fd206 	br	248c0 <__alt_data_end+0xfffe54c0>
   24978:	28c00f17 	ldw	r3,60(r5)
   2497c:	00ffb316 	blt	zero,r3,2484c <__alt_data_end+0xfffe544c>
   24980:	003fd706 	br	248e0 <__alt_data_end+0xfffe54e0>
   24984:	89400717 	ldw	r5,28(r17)
   24988:	000d883a 	mov	r6,zero
   2498c:	01c00044 	movi	r7,1
   24990:	9809883a 	mov	r4,r19
   24994:	403ee83a 	callr	r8
   24998:	100d883a 	mov	r6,r2
   2499c:	00bfffc4 	movi	r2,-1
   249a0:	30801426 	beq	r6,r2,249f4 <__sflush_r+0x1e4>
   249a4:	8880030b 	ldhu	r2,12(r17)
   249a8:	8a000a17 	ldw	r8,40(r17)
   249ac:	003fae06 	br	24868 <__alt_data_end+0xfffe5468>
   249b0:	98c00017 	ldw	r3,0(r19)
   249b4:	183fba26 	beq	r3,zero,248a0 <__alt_data_end+0xfffe54a0>
   249b8:	01000744 	movi	r4,29
   249bc:	19000626 	beq	r3,r4,249d8 <__sflush_r+0x1c8>
   249c0:	01000584 	movi	r4,22
   249c4:	19000426 	beq	r3,r4,249d8 <__sflush_r+0x1c8>
   249c8:	88c0030b 	ldhu	r3,12(r17)
   249cc:	18c01014 	ori	r3,r3,64
   249d0:	88c0030d 	sth	r3,12(r17)
   249d4:	003fc306 	br	248e4 <__alt_data_end+0xfffe54e4>
   249d8:	8880030b 	ldhu	r2,12(r17)
   249dc:	88c00417 	ldw	r3,16(r17)
   249e0:	88000115 	stw	zero,4(r17)
   249e4:	10bdffcc 	andi	r2,r2,63487
   249e8:	8880030d 	sth	r2,12(r17)
   249ec:	88c00015 	stw	r3,0(r17)
   249f0:	003fb306 	br	248c0 <__alt_data_end+0xfffe54c0>
   249f4:	98800017 	ldw	r2,0(r19)
   249f8:	103fea26 	beq	r2,zero,249a4 <__alt_data_end+0xfffe55a4>
   249fc:	00c00744 	movi	r3,29
   24a00:	10c00226 	beq	r2,r3,24a0c <__sflush_r+0x1fc>
   24a04:	00c00584 	movi	r3,22
   24a08:	10c0031e 	bne	r2,r3,24a18 <__sflush_r+0x208>
   24a0c:	9c000015 	stw	r16,0(r19)
   24a10:	0005883a 	mov	r2,zero
   24a14:	003fb306 	br	248e4 <__alt_data_end+0xfffe54e4>
   24a18:	88c0030b 	ldhu	r3,12(r17)
   24a1c:	3005883a 	mov	r2,r6
   24a20:	18c01014 	ori	r3,r3,64
   24a24:	88c0030d 	sth	r3,12(r17)
   24a28:	003fae06 	br	248e4 <__alt_data_end+0xfffe54e4>

00024a2c <_fflush_r>:
   24a2c:	defffd04 	addi	sp,sp,-12
   24a30:	dc000115 	stw	r16,4(sp)
   24a34:	dfc00215 	stw	ra,8(sp)
   24a38:	2021883a 	mov	r16,r4
   24a3c:	20000226 	beq	r4,zero,24a48 <_fflush_r+0x1c>
   24a40:	20800e17 	ldw	r2,56(r4)
   24a44:	10000c26 	beq	r2,zero,24a78 <_fflush_r+0x4c>
   24a48:	2880030f 	ldh	r2,12(r5)
   24a4c:	1000051e 	bne	r2,zero,24a64 <_fflush_r+0x38>
   24a50:	0005883a 	mov	r2,zero
   24a54:	dfc00217 	ldw	ra,8(sp)
   24a58:	dc000117 	ldw	r16,4(sp)
   24a5c:	dec00304 	addi	sp,sp,12
   24a60:	f800283a 	ret
   24a64:	8009883a 	mov	r4,r16
   24a68:	dfc00217 	ldw	ra,8(sp)
   24a6c:	dc000117 	ldw	r16,4(sp)
   24a70:	dec00304 	addi	sp,sp,12
   24a74:	00248101 	jmpi	24810 <__sflush_r>
   24a78:	d9400015 	stw	r5,0(sp)
   24a7c:	0024e180 	call	24e18 <__sinit>
   24a80:	d9400017 	ldw	r5,0(sp)
   24a84:	003ff006 	br	24a48 <__alt_data_end+0xfffe5648>

00024a88 <fflush>:
   24a88:	20000526 	beq	r4,zero,24aa0 <fflush+0x18>
   24a8c:	008000f4 	movhi	r2,3
   24a90:	10872604 	addi	r2,r2,7320
   24a94:	200b883a 	mov	r5,r4
   24a98:	11000017 	ldw	r4,0(r2)
   24a9c:	0024a2c1 	jmpi	24a2c <_fflush_r>
   24aa0:	008000f4 	movhi	r2,3
   24aa4:	10872504 	addi	r2,r2,7316
   24aa8:	11000017 	ldw	r4,0(r2)
   24aac:	014000b4 	movhi	r5,2
   24ab0:	29528b04 	addi	r5,r5,18988
   24ab4:	00253601 	jmpi	25360 <_fwalk_reent>

00024ab8 <__fp_unlock>:
   24ab8:	0005883a 	mov	r2,zero
   24abc:	f800283a 	ret

00024ac0 <_cleanup_r>:
   24ac0:	014000f4 	movhi	r5,3
   24ac4:	29637e04 	addi	r5,r5,-29192
   24ac8:	00253601 	jmpi	25360 <_fwalk_reent>

00024acc <__sinit.part.1>:
   24acc:	defff704 	addi	sp,sp,-36
   24ad0:	00c000b4 	movhi	r3,2
   24ad4:	dfc00815 	stw	ra,32(sp)
   24ad8:	ddc00715 	stw	r23,28(sp)
   24adc:	dd800615 	stw	r22,24(sp)
   24ae0:	dd400515 	stw	r21,20(sp)
   24ae4:	dd000415 	stw	r20,16(sp)
   24ae8:	dcc00315 	stw	r19,12(sp)
   24aec:	dc800215 	stw	r18,8(sp)
   24af0:	dc400115 	stw	r17,4(sp)
   24af4:	dc000015 	stw	r16,0(sp)
   24af8:	18d2b004 	addi	r3,r3,19136
   24afc:	24000117 	ldw	r16,4(r4)
   24b00:	20c00f15 	stw	r3,60(r4)
   24b04:	2080bb04 	addi	r2,r4,748
   24b08:	00c000c4 	movi	r3,3
   24b0c:	20c0b915 	stw	r3,740(r4)
   24b10:	2080ba15 	stw	r2,744(r4)
   24b14:	2000b815 	stw	zero,736(r4)
   24b18:	05c00204 	movi	r23,8
   24b1c:	00800104 	movi	r2,4
   24b20:	2025883a 	mov	r18,r4
   24b24:	b80d883a 	mov	r6,r23
   24b28:	81001704 	addi	r4,r16,92
   24b2c:	000b883a 	mov	r5,zero
   24b30:	80000015 	stw	zero,0(r16)
   24b34:	80000115 	stw	zero,4(r16)
   24b38:	80000215 	stw	zero,8(r16)
   24b3c:	8080030d 	sth	r2,12(r16)
   24b40:	80001915 	stw	zero,100(r16)
   24b44:	8000038d 	sth	zero,14(r16)
   24b48:	80000415 	stw	zero,16(r16)
   24b4c:	80000515 	stw	zero,20(r16)
   24b50:	80000615 	stw	zero,24(r16)
   24b54:	00260f40 	call	260f4 <memset>
   24b58:	058000b4 	movhi	r22,2
   24b5c:	94400217 	ldw	r17,8(r18)
   24b60:	054000b4 	movhi	r21,2
   24b64:	050000b4 	movhi	r20,2
   24b68:	04c000b4 	movhi	r19,2
   24b6c:	b59ce704 	addi	r22,r22,29596
   24b70:	ad5cfe04 	addi	r21,r21,29688
   24b74:	a51d1d04 	addi	r20,r20,29812
   24b78:	9cdd3404 	addi	r19,r19,29904
   24b7c:	85800815 	stw	r22,32(r16)
   24b80:	85400915 	stw	r21,36(r16)
   24b84:	85000a15 	stw	r20,40(r16)
   24b88:	84c00b15 	stw	r19,44(r16)
   24b8c:	84000715 	stw	r16,28(r16)
   24b90:	00800284 	movi	r2,10
   24b94:	8880030d 	sth	r2,12(r17)
   24b98:	00800044 	movi	r2,1
   24b9c:	b80d883a 	mov	r6,r23
   24ba0:	89001704 	addi	r4,r17,92
   24ba4:	000b883a 	mov	r5,zero
   24ba8:	88000015 	stw	zero,0(r17)
   24bac:	88000115 	stw	zero,4(r17)
   24bb0:	88000215 	stw	zero,8(r17)
   24bb4:	88001915 	stw	zero,100(r17)
   24bb8:	8880038d 	sth	r2,14(r17)
   24bbc:	88000415 	stw	zero,16(r17)
   24bc0:	88000515 	stw	zero,20(r17)
   24bc4:	88000615 	stw	zero,24(r17)
   24bc8:	00260f40 	call	260f4 <memset>
   24bcc:	94000317 	ldw	r16,12(r18)
   24bd0:	00800484 	movi	r2,18
   24bd4:	8c400715 	stw	r17,28(r17)
   24bd8:	8d800815 	stw	r22,32(r17)
   24bdc:	8d400915 	stw	r21,36(r17)
   24be0:	8d000a15 	stw	r20,40(r17)
   24be4:	8cc00b15 	stw	r19,44(r17)
   24be8:	8080030d 	sth	r2,12(r16)
   24bec:	00800084 	movi	r2,2
   24bf0:	80000015 	stw	zero,0(r16)
   24bf4:	80000115 	stw	zero,4(r16)
   24bf8:	80000215 	stw	zero,8(r16)
   24bfc:	80001915 	stw	zero,100(r16)
   24c00:	8080038d 	sth	r2,14(r16)
   24c04:	80000415 	stw	zero,16(r16)
   24c08:	80000515 	stw	zero,20(r16)
   24c0c:	80000615 	stw	zero,24(r16)
   24c10:	b80d883a 	mov	r6,r23
   24c14:	000b883a 	mov	r5,zero
   24c18:	81001704 	addi	r4,r16,92
   24c1c:	00260f40 	call	260f4 <memset>
   24c20:	00800044 	movi	r2,1
   24c24:	84000715 	stw	r16,28(r16)
   24c28:	85800815 	stw	r22,32(r16)
   24c2c:	85400915 	stw	r21,36(r16)
   24c30:	85000a15 	stw	r20,40(r16)
   24c34:	84c00b15 	stw	r19,44(r16)
   24c38:	90800e15 	stw	r2,56(r18)
   24c3c:	dfc00817 	ldw	ra,32(sp)
   24c40:	ddc00717 	ldw	r23,28(sp)
   24c44:	dd800617 	ldw	r22,24(sp)
   24c48:	dd400517 	ldw	r21,20(sp)
   24c4c:	dd000417 	ldw	r20,16(sp)
   24c50:	dcc00317 	ldw	r19,12(sp)
   24c54:	dc800217 	ldw	r18,8(sp)
   24c58:	dc400117 	ldw	r17,4(sp)
   24c5c:	dc000017 	ldw	r16,0(sp)
   24c60:	dec00904 	addi	sp,sp,36
   24c64:	f800283a 	ret

00024c68 <__fp_lock>:
   24c68:	0005883a 	mov	r2,zero
   24c6c:	f800283a 	ret

00024c70 <__sfmoreglue>:
   24c70:	defffc04 	addi	sp,sp,-16
   24c74:	dc800215 	stw	r18,8(sp)
   24c78:	2825883a 	mov	r18,r5
   24c7c:	dc000015 	stw	r16,0(sp)
   24c80:	01401a04 	movi	r5,104
   24c84:	2021883a 	mov	r16,r4
   24c88:	913fffc4 	addi	r4,r18,-1
   24c8c:	dfc00315 	stw	ra,12(sp)
   24c90:	dc400115 	stw	r17,4(sp)
   24c94:	002aeb00 	call	2aeb0 <__mulsi3>
   24c98:	8009883a 	mov	r4,r16
   24c9c:	11401d04 	addi	r5,r2,116
   24ca0:	1023883a 	mov	r17,r2
   24ca4:	00256bc0 	call	256bc <_malloc_r>
   24ca8:	1021883a 	mov	r16,r2
   24cac:	10000726 	beq	r2,zero,24ccc <__sfmoreglue+0x5c>
   24cb0:	11000304 	addi	r4,r2,12
   24cb4:	10000015 	stw	zero,0(r2)
   24cb8:	14800115 	stw	r18,4(r2)
   24cbc:	11000215 	stw	r4,8(r2)
   24cc0:	89801a04 	addi	r6,r17,104
   24cc4:	000b883a 	mov	r5,zero
   24cc8:	00260f40 	call	260f4 <memset>
   24ccc:	8005883a 	mov	r2,r16
   24cd0:	dfc00317 	ldw	ra,12(sp)
   24cd4:	dc800217 	ldw	r18,8(sp)
   24cd8:	dc400117 	ldw	r17,4(sp)
   24cdc:	dc000017 	ldw	r16,0(sp)
   24ce0:	dec00404 	addi	sp,sp,16
   24ce4:	f800283a 	ret

00024ce8 <__sfp>:
   24ce8:	defffb04 	addi	sp,sp,-20
   24cec:	dc000015 	stw	r16,0(sp)
   24cf0:	040000f4 	movhi	r16,3
   24cf4:	84072504 	addi	r16,r16,7316
   24cf8:	dcc00315 	stw	r19,12(sp)
   24cfc:	2027883a 	mov	r19,r4
   24d00:	81000017 	ldw	r4,0(r16)
   24d04:	dfc00415 	stw	ra,16(sp)
   24d08:	dc800215 	stw	r18,8(sp)
   24d0c:	20800e17 	ldw	r2,56(r4)
   24d10:	dc400115 	stw	r17,4(sp)
   24d14:	1000021e 	bne	r2,zero,24d20 <__sfp+0x38>
   24d18:	0024acc0 	call	24acc <__sinit.part.1>
   24d1c:	81000017 	ldw	r4,0(r16)
   24d20:	2480b804 	addi	r18,r4,736
   24d24:	047fffc4 	movi	r17,-1
   24d28:	91000117 	ldw	r4,4(r18)
   24d2c:	94000217 	ldw	r16,8(r18)
   24d30:	213fffc4 	addi	r4,r4,-1
   24d34:	20000a16 	blt	r4,zero,24d60 <__sfp+0x78>
   24d38:	8080030f 	ldh	r2,12(r16)
   24d3c:	10000c26 	beq	r2,zero,24d70 <__sfp+0x88>
   24d40:	80c01d04 	addi	r3,r16,116
   24d44:	00000206 	br	24d50 <__sfp+0x68>
   24d48:	18bfe60f 	ldh	r2,-104(r3)
   24d4c:	10000826 	beq	r2,zero,24d70 <__sfp+0x88>
   24d50:	213fffc4 	addi	r4,r4,-1
   24d54:	1c3ffd04 	addi	r16,r3,-12
   24d58:	18c01a04 	addi	r3,r3,104
   24d5c:	247ffa1e 	bne	r4,r17,24d48 <__alt_data_end+0xfffe5948>
   24d60:	90800017 	ldw	r2,0(r18)
   24d64:	10001d26 	beq	r2,zero,24ddc <__sfp+0xf4>
   24d68:	1025883a 	mov	r18,r2
   24d6c:	003fee06 	br	24d28 <__alt_data_end+0xfffe5928>
   24d70:	00bfffc4 	movi	r2,-1
   24d74:	8080038d 	sth	r2,14(r16)
   24d78:	00800044 	movi	r2,1
   24d7c:	8080030d 	sth	r2,12(r16)
   24d80:	80001915 	stw	zero,100(r16)
   24d84:	80000015 	stw	zero,0(r16)
   24d88:	80000215 	stw	zero,8(r16)
   24d8c:	80000115 	stw	zero,4(r16)
   24d90:	80000415 	stw	zero,16(r16)
   24d94:	80000515 	stw	zero,20(r16)
   24d98:	80000615 	stw	zero,24(r16)
   24d9c:	01800204 	movi	r6,8
   24da0:	000b883a 	mov	r5,zero
   24da4:	81001704 	addi	r4,r16,92
   24da8:	00260f40 	call	260f4 <memset>
   24dac:	8005883a 	mov	r2,r16
   24db0:	80000c15 	stw	zero,48(r16)
   24db4:	80000d15 	stw	zero,52(r16)
   24db8:	80001115 	stw	zero,68(r16)
   24dbc:	80001215 	stw	zero,72(r16)
   24dc0:	dfc00417 	ldw	ra,16(sp)
   24dc4:	dcc00317 	ldw	r19,12(sp)
   24dc8:	dc800217 	ldw	r18,8(sp)
   24dcc:	dc400117 	ldw	r17,4(sp)
   24dd0:	dc000017 	ldw	r16,0(sp)
   24dd4:	dec00504 	addi	sp,sp,20
   24dd8:	f800283a 	ret
   24ddc:	01400104 	movi	r5,4
   24de0:	9809883a 	mov	r4,r19
   24de4:	0024c700 	call	24c70 <__sfmoreglue>
   24de8:	90800015 	stw	r2,0(r18)
   24dec:	103fde1e 	bne	r2,zero,24d68 <__alt_data_end+0xfffe5968>
   24df0:	00800304 	movi	r2,12
   24df4:	98800015 	stw	r2,0(r19)
   24df8:	0005883a 	mov	r2,zero
   24dfc:	003ff006 	br	24dc0 <__alt_data_end+0xfffe59c0>

00024e00 <_cleanup>:
   24e00:	008000f4 	movhi	r2,3
   24e04:	10872504 	addi	r2,r2,7316
   24e08:	11000017 	ldw	r4,0(r2)
   24e0c:	014000f4 	movhi	r5,3
   24e10:	29637e04 	addi	r5,r5,-29192
   24e14:	00253601 	jmpi	25360 <_fwalk_reent>

00024e18 <__sinit>:
   24e18:	20800e17 	ldw	r2,56(r4)
   24e1c:	10000126 	beq	r2,zero,24e24 <__sinit+0xc>
   24e20:	f800283a 	ret
   24e24:	0024acc1 	jmpi	24acc <__sinit.part.1>

00024e28 <__sfp_lock_acquire>:
   24e28:	f800283a 	ret

00024e2c <__sfp_lock_release>:
   24e2c:	f800283a 	ret

00024e30 <__sinit_lock_acquire>:
   24e30:	f800283a 	ret

00024e34 <__sinit_lock_release>:
   24e34:	f800283a 	ret

00024e38 <__fp_lock_all>:
   24e38:	008000f4 	movhi	r2,3
   24e3c:	10872604 	addi	r2,r2,7320
   24e40:	11000017 	ldw	r4,0(r2)
   24e44:	014000b4 	movhi	r5,2
   24e48:	29531a04 	addi	r5,r5,19560
   24e4c:	002529c1 	jmpi	2529c <_fwalk>

00024e50 <__fp_unlock_all>:
   24e50:	008000f4 	movhi	r2,3
   24e54:	10872604 	addi	r2,r2,7320
   24e58:	11000017 	ldw	r4,0(r2)
   24e5c:	014000b4 	movhi	r5,2
   24e60:	2952ae04 	addi	r5,r5,19128
   24e64:	002529c1 	jmpi	2529c <_fwalk>

00024e68 <_malloc_trim_r>:
   24e68:	defffb04 	addi	sp,sp,-20
   24e6c:	dcc00315 	stw	r19,12(sp)
   24e70:	04c000f4 	movhi	r19,3
   24e74:	dc800215 	stw	r18,8(sp)
   24e78:	dc400115 	stw	r17,4(sp)
   24e7c:	dc000015 	stw	r16,0(sp)
   24e80:	dfc00415 	stw	ra,16(sp)
   24e84:	2821883a 	mov	r16,r5
   24e88:	9cc1a104 	addi	r19,r19,1668
   24e8c:	2025883a 	mov	r18,r4
   24e90:	002dfb80 	call	2dfb8 <__malloc_lock>
   24e94:	98800217 	ldw	r2,8(r19)
   24e98:	14400117 	ldw	r17,4(r2)
   24e9c:	00bfff04 	movi	r2,-4
   24ea0:	88a2703a 	and	r17,r17,r2
   24ea4:	8c21c83a 	sub	r16,r17,r16
   24ea8:	8403fbc4 	addi	r16,r16,4079
   24eac:	8020d33a 	srli	r16,r16,12
   24eb0:	0083ffc4 	movi	r2,4095
   24eb4:	843fffc4 	addi	r16,r16,-1
   24eb8:	8020933a 	slli	r16,r16,12
   24ebc:	1400060e 	bge	r2,r16,24ed8 <_malloc_trim_r+0x70>
   24ec0:	000b883a 	mov	r5,zero
   24ec4:	9009883a 	mov	r4,r18
   24ec8:	00273480 	call	27348 <_sbrk_r>
   24ecc:	98c00217 	ldw	r3,8(r19)
   24ed0:	1c47883a 	add	r3,r3,r17
   24ed4:	10c00a26 	beq	r2,r3,24f00 <_malloc_trim_r+0x98>
   24ed8:	9009883a 	mov	r4,r18
   24edc:	002dfdc0 	call	2dfdc <__malloc_unlock>
   24ee0:	0005883a 	mov	r2,zero
   24ee4:	dfc00417 	ldw	ra,16(sp)
   24ee8:	dcc00317 	ldw	r19,12(sp)
   24eec:	dc800217 	ldw	r18,8(sp)
   24ef0:	dc400117 	ldw	r17,4(sp)
   24ef4:	dc000017 	ldw	r16,0(sp)
   24ef8:	dec00504 	addi	sp,sp,20
   24efc:	f800283a 	ret
   24f00:	040bc83a 	sub	r5,zero,r16
   24f04:	9009883a 	mov	r4,r18
   24f08:	00273480 	call	27348 <_sbrk_r>
   24f0c:	00ffffc4 	movi	r3,-1
   24f10:	10c00d26 	beq	r2,r3,24f48 <_malloc_trim_r+0xe0>
   24f14:	00c000f4 	movhi	r3,3
   24f18:	18ce0504 	addi	r3,r3,14356
   24f1c:	18800017 	ldw	r2,0(r3)
   24f20:	99000217 	ldw	r4,8(r19)
   24f24:	8c23c83a 	sub	r17,r17,r16
   24f28:	8c400054 	ori	r17,r17,1
   24f2c:	1421c83a 	sub	r16,r2,r16
   24f30:	24400115 	stw	r17,4(r4)
   24f34:	9009883a 	mov	r4,r18
   24f38:	1c000015 	stw	r16,0(r3)
   24f3c:	002dfdc0 	call	2dfdc <__malloc_unlock>
   24f40:	00800044 	movi	r2,1
   24f44:	003fe706 	br	24ee4 <__alt_data_end+0xfffe5ae4>
   24f48:	000b883a 	mov	r5,zero
   24f4c:	9009883a 	mov	r4,r18
   24f50:	00273480 	call	27348 <_sbrk_r>
   24f54:	99000217 	ldw	r4,8(r19)
   24f58:	014003c4 	movi	r5,15
   24f5c:	1107c83a 	sub	r3,r2,r4
   24f60:	28ffdd0e 	bge	r5,r3,24ed8 <__alt_data_end+0xfffe5ad8>
   24f64:	014000f4 	movhi	r5,3
   24f68:	29472804 	addi	r5,r5,7328
   24f6c:	29400017 	ldw	r5,0(r5)
   24f70:	18c00054 	ori	r3,r3,1
   24f74:	20c00115 	stw	r3,4(r4)
   24f78:	00c000f4 	movhi	r3,3
   24f7c:	1145c83a 	sub	r2,r2,r5
   24f80:	18ce0504 	addi	r3,r3,14356
   24f84:	18800015 	stw	r2,0(r3)
   24f88:	003fd306 	br	24ed8 <__alt_data_end+0xfffe5ad8>

00024f8c <_free_r>:
   24f8c:	28004126 	beq	r5,zero,25094 <_free_r+0x108>
   24f90:	defffd04 	addi	sp,sp,-12
   24f94:	dc400115 	stw	r17,4(sp)
   24f98:	dc000015 	stw	r16,0(sp)
   24f9c:	2023883a 	mov	r17,r4
   24fa0:	2821883a 	mov	r16,r5
   24fa4:	dfc00215 	stw	ra,8(sp)
   24fa8:	002dfb80 	call	2dfb8 <__malloc_lock>
   24fac:	81ffff17 	ldw	r7,-4(r16)
   24fb0:	00bfff84 	movi	r2,-2
   24fb4:	010000f4 	movhi	r4,3
   24fb8:	81bffe04 	addi	r6,r16,-8
   24fbc:	3884703a 	and	r2,r7,r2
   24fc0:	2101a104 	addi	r4,r4,1668
   24fc4:	308b883a 	add	r5,r6,r2
   24fc8:	2a400117 	ldw	r9,4(r5)
   24fcc:	22000217 	ldw	r8,8(r4)
   24fd0:	00ffff04 	movi	r3,-4
   24fd4:	48c6703a 	and	r3,r9,r3
   24fd8:	2a005726 	beq	r5,r8,25138 <_free_r+0x1ac>
   24fdc:	28c00115 	stw	r3,4(r5)
   24fe0:	39c0004c 	andi	r7,r7,1
   24fe4:	3800091e 	bne	r7,zero,2500c <_free_r+0x80>
   24fe8:	823ffe17 	ldw	r8,-8(r16)
   24fec:	22400204 	addi	r9,r4,8
   24ff0:	320dc83a 	sub	r6,r6,r8
   24ff4:	31c00217 	ldw	r7,8(r6)
   24ff8:	1205883a 	add	r2,r2,r8
   24ffc:	3a406526 	beq	r7,r9,25194 <_free_r+0x208>
   25000:	32000317 	ldw	r8,12(r6)
   25004:	3a000315 	stw	r8,12(r7)
   25008:	41c00215 	stw	r7,8(r8)
   2500c:	28cf883a 	add	r7,r5,r3
   25010:	39c00117 	ldw	r7,4(r7)
   25014:	39c0004c 	andi	r7,r7,1
   25018:	38003a26 	beq	r7,zero,25104 <_free_r+0x178>
   2501c:	10c00054 	ori	r3,r2,1
   25020:	30c00115 	stw	r3,4(r6)
   25024:	3087883a 	add	r3,r6,r2
   25028:	18800015 	stw	r2,0(r3)
   2502c:	00c07fc4 	movi	r3,511
   25030:	18801936 	bltu	r3,r2,25098 <_free_r+0x10c>
   25034:	1004d0fa 	srli	r2,r2,3
   25038:	01c00044 	movi	r7,1
   2503c:	21400117 	ldw	r5,4(r4)
   25040:	10c00044 	addi	r3,r2,1
   25044:	18c7883a 	add	r3,r3,r3
   25048:	1005d0ba 	srai	r2,r2,2
   2504c:	18c7883a 	add	r3,r3,r3
   25050:	18c7883a 	add	r3,r3,r3
   25054:	1907883a 	add	r3,r3,r4
   25058:	3884983a 	sll	r2,r7,r2
   2505c:	19c00017 	ldw	r7,0(r3)
   25060:	1a3ffe04 	addi	r8,r3,-8
   25064:	1144b03a 	or	r2,r2,r5
   25068:	32000315 	stw	r8,12(r6)
   2506c:	31c00215 	stw	r7,8(r6)
   25070:	20800115 	stw	r2,4(r4)
   25074:	19800015 	stw	r6,0(r3)
   25078:	39800315 	stw	r6,12(r7)
   2507c:	8809883a 	mov	r4,r17
   25080:	dfc00217 	ldw	ra,8(sp)
   25084:	dc400117 	ldw	r17,4(sp)
   25088:	dc000017 	ldw	r16,0(sp)
   2508c:	dec00304 	addi	sp,sp,12
   25090:	002dfdc1 	jmpi	2dfdc <__malloc_unlock>
   25094:	f800283a 	ret
   25098:	100ad27a 	srli	r5,r2,9
   2509c:	00c00104 	movi	r3,4
   250a0:	19404a36 	bltu	r3,r5,251cc <_free_r+0x240>
   250a4:	100ad1ba 	srli	r5,r2,6
   250a8:	28c00e44 	addi	r3,r5,57
   250ac:	18c7883a 	add	r3,r3,r3
   250b0:	29400e04 	addi	r5,r5,56
   250b4:	18c7883a 	add	r3,r3,r3
   250b8:	18c7883a 	add	r3,r3,r3
   250bc:	1909883a 	add	r4,r3,r4
   250c0:	20c00017 	ldw	r3,0(r4)
   250c4:	01c000f4 	movhi	r7,3
   250c8:	213ffe04 	addi	r4,r4,-8
   250cc:	39c1a104 	addi	r7,r7,1668
   250d0:	20c04426 	beq	r4,r3,251e4 <_free_r+0x258>
   250d4:	01ffff04 	movi	r7,-4
   250d8:	19400117 	ldw	r5,4(r3)
   250dc:	29ca703a 	and	r5,r5,r7
   250e0:	1140022e 	bgeu	r2,r5,250ec <_free_r+0x160>
   250e4:	18c00217 	ldw	r3,8(r3)
   250e8:	20fffb1e 	bne	r4,r3,250d8 <__alt_data_end+0xfffe5cd8>
   250ec:	19000317 	ldw	r4,12(r3)
   250f0:	31000315 	stw	r4,12(r6)
   250f4:	30c00215 	stw	r3,8(r6)
   250f8:	21800215 	stw	r6,8(r4)
   250fc:	19800315 	stw	r6,12(r3)
   25100:	003fde06 	br	2507c <__alt_data_end+0xfffe5c7c>
   25104:	29c00217 	ldw	r7,8(r5)
   25108:	10c5883a 	add	r2,r2,r3
   2510c:	00c000f4 	movhi	r3,3
   25110:	18c1a304 	addi	r3,r3,1676
   25114:	38c03b26 	beq	r7,r3,25204 <_free_r+0x278>
   25118:	2a000317 	ldw	r8,12(r5)
   2511c:	11400054 	ori	r5,r2,1
   25120:	3087883a 	add	r3,r6,r2
   25124:	3a000315 	stw	r8,12(r7)
   25128:	41c00215 	stw	r7,8(r8)
   2512c:	31400115 	stw	r5,4(r6)
   25130:	18800015 	stw	r2,0(r3)
   25134:	003fbd06 	br	2502c <__alt_data_end+0xfffe5c2c>
   25138:	39c0004c 	andi	r7,r7,1
   2513c:	10c5883a 	add	r2,r2,r3
   25140:	3800071e 	bne	r7,zero,25160 <_free_r+0x1d4>
   25144:	81fffe17 	ldw	r7,-8(r16)
   25148:	31cdc83a 	sub	r6,r6,r7
   2514c:	30c00317 	ldw	r3,12(r6)
   25150:	31400217 	ldw	r5,8(r6)
   25154:	11c5883a 	add	r2,r2,r7
   25158:	28c00315 	stw	r3,12(r5)
   2515c:	19400215 	stw	r5,8(r3)
   25160:	10c00054 	ori	r3,r2,1
   25164:	30c00115 	stw	r3,4(r6)
   25168:	00c000f4 	movhi	r3,3
   2516c:	18c72904 	addi	r3,r3,7332
   25170:	18c00017 	ldw	r3,0(r3)
   25174:	21800215 	stw	r6,8(r4)
   25178:	10ffc036 	bltu	r2,r3,2507c <__alt_data_end+0xfffe5c7c>
   2517c:	008000f4 	movhi	r2,3
   25180:	108dfd04 	addi	r2,r2,14324
   25184:	11400017 	ldw	r5,0(r2)
   25188:	8809883a 	mov	r4,r17
   2518c:	0024e680 	call	24e68 <_malloc_trim_r>
   25190:	003fba06 	br	2507c <__alt_data_end+0xfffe5c7c>
   25194:	28c9883a 	add	r4,r5,r3
   25198:	21000117 	ldw	r4,4(r4)
   2519c:	2100004c 	andi	r4,r4,1
   251a0:	2000391e 	bne	r4,zero,25288 <_free_r+0x2fc>
   251a4:	29c00217 	ldw	r7,8(r5)
   251a8:	29000317 	ldw	r4,12(r5)
   251ac:	1885883a 	add	r2,r3,r2
   251b0:	10c00054 	ori	r3,r2,1
   251b4:	39000315 	stw	r4,12(r7)
   251b8:	21c00215 	stw	r7,8(r4)
   251bc:	30c00115 	stw	r3,4(r6)
   251c0:	308d883a 	add	r6,r6,r2
   251c4:	30800015 	stw	r2,0(r6)
   251c8:	003fac06 	br	2507c <__alt_data_end+0xfffe5c7c>
   251cc:	00c00504 	movi	r3,20
   251d0:	19401536 	bltu	r3,r5,25228 <_free_r+0x29c>
   251d4:	28c01704 	addi	r3,r5,92
   251d8:	18c7883a 	add	r3,r3,r3
   251dc:	294016c4 	addi	r5,r5,91
   251e0:	003fb406 	br	250b4 <__alt_data_end+0xfffe5cb4>
   251e4:	280bd0ba 	srai	r5,r5,2
   251e8:	00c00044 	movi	r3,1
   251ec:	38800117 	ldw	r2,4(r7)
   251f0:	194a983a 	sll	r5,r3,r5
   251f4:	2007883a 	mov	r3,r4
   251f8:	2884b03a 	or	r2,r5,r2
   251fc:	38800115 	stw	r2,4(r7)
   25200:	003fbb06 	br	250f0 <__alt_data_end+0xfffe5cf0>
   25204:	21800515 	stw	r6,20(r4)
   25208:	21800415 	stw	r6,16(r4)
   2520c:	10c00054 	ori	r3,r2,1
   25210:	31c00315 	stw	r7,12(r6)
   25214:	31c00215 	stw	r7,8(r6)
   25218:	30c00115 	stw	r3,4(r6)
   2521c:	308d883a 	add	r6,r6,r2
   25220:	30800015 	stw	r2,0(r6)
   25224:	003f9506 	br	2507c <__alt_data_end+0xfffe5c7c>
   25228:	00c01504 	movi	r3,84
   2522c:	19400536 	bltu	r3,r5,25244 <_free_r+0x2b8>
   25230:	100ad33a 	srli	r5,r2,12
   25234:	28c01bc4 	addi	r3,r5,111
   25238:	18c7883a 	add	r3,r3,r3
   2523c:	29401b84 	addi	r5,r5,110
   25240:	003f9c06 	br	250b4 <__alt_data_end+0xfffe5cb4>
   25244:	00c05504 	movi	r3,340
   25248:	19400536 	bltu	r3,r5,25260 <_free_r+0x2d4>
   2524c:	100ad3fa 	srli	r5,r2,15
   25250:	28c01e04 	addi	r3,r5,120
   25254:	18c7883a 	add	r3,r3,r3
   25258:	29401dc4 	addi	r5,r5,119
   2525c:	003f9506 	br	250b4 <__alt_data_end+0xfffe5cb4>
   25260:	00c15504 	movi	r3,1364
   25264:	19400536 	bltu	r3,r5,2527c <_free_r+0x2f0>
   25268:	100ad4ba 	srli	r5,r2,18
   2526c:	28c01f44 	addi	r3,r5,125
   25270:	18c7883a 	add	r3,r3,r3
   25274:	29401f04 	addi	r5,r5,124
   25278:	003f8e06 	br	250b4 <__alt_data_end+0xfffe5cb4>
   2527c:	00c03f84 	movi	r3,254
   25280:	01401f84 	movi	r5,126
   25284:	003f8b06 	br	250b4 <__alt_data_end+0xfffe5cb4>
   25288:	10c00054 	ori	r3,r2,1
   2528c:	30c00115 	stw	r3,4(r6)
   25290:	308d883a 	add	r6,r6,r2
   25294:	30800015 	stw	r2,0(r6)
   25298:	003f7806 	br	2507c <__alt_data_end+0xfffe5c7c>

0002529c <_fwalk>:
   2529c:	defff704 	addi	sp,sp,-36
   252a0:	dd000415 	stw	r20,16(sp)
   252a4:	dfc00815 	stw	ra,32(sp)
   252a8:	ddc00715 	stw	r23,28(sp)
   252ac:	dd800615 	stw	r22,24(sp)
   252b0:	dd400515 	stw	r21,20(sp)
   252b4:	dcc00315 	stw	r19,12(sp)
   252b8:	dc800215 	stw	r18,8(sp)
   252bc:	dc400115 	stw	r17,4(sp)
   252c0:	dc000015 	stw	r16,0(sp)
   252c4:	2500b804 	addi	r20,r4,736
   252c8:	a0002326 	beq	r20,zero,25358 <_fwalk+0xbc>
   252cc:	282b883a 	mov	r21,r5
   252d0:	002f883a 	mov	r23,zero
   252d4:	05800044 	movi	r22,1
   252d8:	04ffffc4 	movi	r19,-1
   252dc:	a4400117 	ldw	r17,4(r20)
   252e0:	a4800217 	ldw	r18,8(r20)
   252e4:	8c7fffc4 	addi	r17,r17,-1
   252e8:	88000d16 	blt	r17,zero,25320 <_fwalk+0x84>
   252ec:	94000304 	addi	r16,r18,12
   252f0:	94800384 	addi	r18,r18,14
   252f4:	8080000b 	ldhu	r2,0(r16)
   252f8:	8c7fffc4 	addi	r17,r17,-1
   252fc:	813ffd04 	addi	r4,r16,-12
   25300:	b080042e 	bgeu	r22,r2,25314 <_fwalk+0x78>
   25304:	9080000f 	ldh	r2,0(r18)
   25308:	14c00226 	beq	r2,r19,25314 <_fwalk+0x78>
   2530c:	a83ee83a 	callr	r21
   25310:	b8aeb03a 	or	r23,r23,r2
   25314:	84001a04 	addi	r16,r16,104
   25318:	94801a04 	addi	r18,r18,104
   2531c:	8cfff51e 	bne	r17,r19,252f4 <__alt_data_end+0xfffe5ef4>
   25320:	a5000017 	ldw	r20,0(r20)
   25324:	a03fed1e 	bne	r20,zero,252dc <__alt_data_end+0xfffe5edc>
   25328:	b805883a 	mov	r2,r23
   2532c:	dfc00817 	ldw	ra,32(sp)
   25330:	ddc00717 	ldw	r23,28(sp)
   25334:	dd800617 	ldw	r22,24(sp)
   25338:	dd400517 	ldw	r21,20(sp)
   2533c:	dd000417 	ldw	r20,16(sp)
   25340:	dcc00317 	ldw	r19,12(sp)
   25344:	dc800217 	ldw	r18,8(sp)
   25348:	dc400117 	ldw	r17,4(sp)
   2534c:	dc000017 	ldw	r16,0(sp)
   25350:	dec00904 	addi	sp,sp,36
   25354:	f800283a 	ret
   25358:	002f883a 	mov	r23,zero
   2535c:	003ff206 	br	25328 <__alt_data_end+0xfffe5f28>

00025360 <_fwalk_reent>:
   25360:	defff704 	addi	sp,sp,-36
   25364:	dd000415 	stw	r20,16(sp)
   25368:	dfc00815 	stw	ra,32(sp)
   2536c:	ddc00715 	stw	r23,28(sp)
   25370:	dd800615 	stw	r22,24(sp)
   25374:	dd400515 	stw	r21,20(sp)
   25378:	dcc00315 	stw	r19,12(sp)
   2537c:	dc800215 	stw	r18,8(sp)
   25380:	dc400115 	stw	r17,4(sp)
   25384:	dc000015 	stw	r16,0(sp)
   25388:	2500b804 	addi	r20,r4,736
   2538c:	a0002326 	beq	r20,zero,2541c <_fwalk_reent+0xbc>
   25390:	282b883a 	mov	r21,r5
   25394:	2027883a 	mov	r19,r4
   25398:	002f883a 	mov	r23,zero
   2539c:	05800044 	movi	r22,1
   253a0:	04bfffc4 	movi	r18,-1
   253a4:	a4400117 	ldw	r17,4(r20)
   253a8:	a4000217 	ldw	r16,8(r20)
   253ac:	8c7fffc4 	addi	r17,r17,-1
   253b0:	88000c16 	blt	r17,zero,253e4 <_fwalk_reent+0x84>
   253b4:	84000304 	addi	r16,r16,12
   253b8:	8080000b 	ldhu	r2,0(r16)
   253bc:	8c7fffc4 	addi	r17,r17,-1
   253c0:	817ffd04 	addi	r5,r16,-12
   253c4:	b080052e 	bgeu	r22,r2,253dc <_fwalk_reent+0x7c>
   253c8:	8080008f 	ldh	r2,2(r16)
   253cc:	9809883a 	mov	r4,r19
   253d0:	14800226 	beq	r2,r18,253dc <_fwalk_reent+0x7c>
   253d4:	a83ee83a 	callr	r21
   253d8:	b8aeb03a 	or	r23,r23,r2
   253dc:	84001a04 	addi	r16,r16,104
   253e0:	8cbff51e 	bne	r17,r18,253b8 <__alt_data_end+0xfffe5fb8>
   253e4:	a5000017 	ldw	r20,0(r20)
   253e8:	a03fee1e 	bne	r20,zero,253a4 <__alt_data_end+0xfffe5fa4>
   253ec:	b805883a 	mov	r2,r23
   253f0:	dfc00817 	ldw	ra,32(sp)
   253f4:	ddc00717 	ldw	r23,28(sp)
   253f8:	dd800617 	ldw	r22,24(sp)
   253fc:	dd400517 	ldw	r21,20(sp)
   25400:	dd000417 	ldw	r20,16(sp)
   25404:	dcc00317 	ldw	r19,12(sp)
   25408:	dc800217 	ldw	r18,8(sp)
   2540c:	dc400117 	ldw	r17,4(sp)
   25410:	dc000017 	ldw	r16,0(sp)
   25414:	dec00904 	addi	sp,sp,36
   25418:	f800283a 	ret
   2541c:	002f883a 	mov	r23,zero
   25420:	003ff206 	br	253ec <__alt_data_end+0xfffe5fec>

00025424 <_setlocale_r>:
   25424:	30001b26 	beq	r6,zero,25494 <_setlocale_r+0x70>
   25428:	014000f4 	movhi	r5,3
   2542c:	defffe04 	addi	sp,sp,-8
   25430:	297fd904 	addi	r5,r5,-156
   25434:	3009883a 	mov	r4,r6
   25438:	dc000015 	stw	r16,0(sp)
   2543c:	dfc00115 	stw	ra,4(sp)
   25440:	3021883a 	mov	r16,r6
   25444:	00208c40 	call	208c4 <strcmp>
   25448:	1000061e 	bne	r2,zero,25464 <_setlocale_r+0x40>
   2544c:	008000f4 	movhi	r2,3
   25450:	10bfd804 	addi	r2,r2,-160
   25454:	dfc00117 	ldw	ra,4(sp)
   25458:	dc000017 	ldw	r16,0(sp)
   2545c:	dec00204 	addi	sp,sp,8
   25460:	f800283a 	ret
   25464:	014000f4 	movhi	r5,3
   25468:	297fd804 	addi	r5,r5,-160
   2546c:	8009883a 	mov	r4,r16
   25470:	00208c40 	call	208c4 <strcmp>
   25474:	103ff526 	beq	r2,zero,2544c <__alt_data_end+0xfffe604c>
   25478:	014000f4 	movhi	r5,3
   2547c:	297fc304 	addi	r5,r5,-244
   25480:	8009883a 	mov	r4,r16
   25484:	00208c40 	call	208c4 <strcmp>
   25488:	103ff026 	beq	r2,zero,2544c <__alt_data_end+0xfffe604c>
   2548c:	0005883a 	mov	r2,zero
   25490:	003ff006 	br	25454 <__alt_data_end+0xfffe6054>
   25494:	008000f4 	movhi	r2,3
   25498:	10bfd804 	addi	r2,r2,-160
   2549c:	f800283a 	ret

000254a0 <__locale_charset>:
   254a0:	008000f4 	movhi	r2,3
   254a4:	10818b04 	addi	r2,r2,1580
   254a8:	f800283a 	ret

000254ac <__locale_mb_cur_max>:
   254ac:	008000f4 	movhi	r2,3
   254b0:	10872704 	addi	r2,r2,7324
   254b4:	10800017 	ldw	r2,0(r2)
   254b8:	f800283a 	ret

000254bc <__locale_msgcharset>:
   254bc:	008000f4 	movhi	r2,3
   254c0:	10818304 	addi	r2,r2,1548
   254c4:	f800283a 	ret

000254c8 <__locale_cjk_lang>:
   254c8:	0005883a 	mov	r2,zero
   254cc:	f800283a 	ret

000254d0 <_localeconv_r>:
   254d0:	008000f4 	movhi	r2,3
   254d4:	10819304 	addi	r2,r2,1612
   254d8:	f800283a 	ret

000254dc <setlocale>:
   254dc:	008000f4 	movhi	r2,3
   254e0:	10872604 	addi	r2,r2,7320
   254e4:	280d883a 	mov	r6,r5
   254e8:	200b883a 	mov	r5,r4
   254ec:	11000017 	ldw	r4,0(r2)
   254f0:	00254241 	jmpi	25424 <_setlocale_r>

000254f4 <localeconv>:
   254f4:	008000f4 	movhi	r2,3
   254f8:	10819304 	addi	r2,r2,1612
   254fc:	f800283a 	ret

00025500 <__smakebuf_r>:
   25500:	2880030b 	ldhu	r2,12(r5)
   25504:	10c0008c 	andi	r3,r2,2
   25508:	1800411e 	bne	r3,zero,25610 <__smakebuf_r+0x110>
   2550c:	deffec04 	addi	sp,sp,-80
   25510:	dc000f15 	stw	r16,60(sp)
   25514:	2821883a 	mov	r16,r5
   25518:	2940038f 	ldh	r5,14(r5)
   2551c:	dc401015 	stw	r17,64(sp)
   25520:	dfc01315 	stw	ra,76(sp)
   25524:	dcc01215 	stw	r19,72(sp)
   25528:	dc801115 	stw	r18,68(sp)
   2552c:	2023883a 	mov	r17,r4
   25530:	28001c16 	blt	r5,zero,255a4 <__smakebuf_r+0xa4>
   25534:	d80d883a 	mov	r6,sp
   25538:	00291040 	call	29104 <_fstat_r>
   2553c:	10001816 	blt	r2,zero,255a0 <__smakebuf_r+0xa0>
   25540:	d8800117 	ldw	r2,4(sp)
   25544:	00e00014 	movui	r3,32768
   25548:	10bc000c 	andi	r2,r2,61440
   2554c:	14c80020 	cmpeqi	r19,r2,8192
   25550:	10c03726 	beq	r2,r3,25630 <__smakebuf_r+0x130>
   25554:	80c0030b 	ldhu	r3,12(r16)
   25558:	18c20014 	ori	r3,r3,2048
   2555c:	80c0030d 	sth	r3,12(r16)
   25560:	00c80004 	movi	r3,8192
   25564:	10c0521e 	bne	r2,r3,256b0 <__smakebuf_r+0x1b0>
   25568:	8140038f 	ldh	r5,14(r16)
   2556c:	8809883a 	mov	r4,r17
   25570:	00296280 	call	29628 <_isatty_r>
   25574:	10004c26 	beq	r2,zero,256a8 <__smakebuf_r+0x1a8>
   25578:	8080030b 	ldhu	r2,12(r16)
   2557c:	80c010c4 	addi	r3,r16,67
   25580:	80c00015 	stw	r3,0(r16)
   25584:	10800054 	ori	r2,r2,1
   25588:	8080030d 	sth	r2,12(r16)
   2558c:	00800044 	movi	r2,1
   25590:	80c00415 	stw	r3,16(r16)
   25594:	80800515 	stw	r2,20(r16)
   25598:	04810004 	movi	r18,1024
   2559c:	00000706 	br	255bc <__smakebuf_r+0xbc>
   255a0:	8080030b 	ldhu	r2,12(r16)
   255a4:	10c0200c 	andi	r3,r2,128
   255a8:	18001f1e 	bne	r3,zero,25628 <__smakebuf_r+0x128>
   255ac:	04810004 	movi	r18,1024
   255b0:	10820014 	ori	r2,r2,2048
   255b4:	8080030d 	sth	r2,12(r16)
   255b8:	0027883a 	mov	r19,zero
   255bc:	900b883a 	mov	r5,r18
   255c0:	8809883a 	mov	r4,r17
   255c4:	00256bc0 	call	256bc <_malloc_r>
   255c8:	10002c26 	beq	r2,zero,2567c <__smakebuf_r+0x17c>
   255cc:	80c0030b 	ldhu	r3,12(r16)
   255d0:	010000b4 	movhi	r4,2
   255d4:	2112b004 	addi	r4,r4,19136
   255d8:	89000f15 	stw	r4,60(r17)
   255dc:	18c02014 	ori	r3,r3,128
   255e0:	80c0030d 	sth	r3,12(r16)
   255e4:	80800015 	stw	r2,0(r16)
   255e8:	80800415 	stw	r2,16(r16)
   255ec:	84800515 	stw	r18,20(r16)
   255f0:	98001a1e 	bne	r19,zero,2565c <__smakebuf_r+0x15c>
   255f4:	dfc01317 	ldw	ra,76(sp)
   255f8:	dcc01217 	ldw	r19,72(sp)
   255fc:	dc801117 	ldw	r18,68(sp)
   25600:	dc401017 	ldw	r17,64(sp)
   25604:	dc000f17 	ldw	r16,60(sp)
   25608:	dec01404 	addi	sp,sp,80
   2560c:	f800283a 	ret
   25610:	288010c4 	addi	r2,r5,67
   25614:	28800015 	stw	r2,0(r5)
   25618:	28800415 	stw	r2,16(r5)
   2561c:	00800044 	movi	r2,1
   25620:	28800515 	stw	r2,20(r5)
   25624:	f800283a 	ret
   25628:	04801004 	movi	r18,64
   2562c:	003fe006 	br	255b0 <__alt_data_end+0xfffe61b0>
   25630:	81000a17 	ldw	r4,40(r16)
   25634:	00c000b4 	movhi	r3,2
   25638:	18dd1d04 	addi	r3,r3,29812
   2563c:	20ffc51e 	bne	r4,r3,25554 <__alt_data_end+0xfffe6154>
   25640:	8080030b 	ldhu	r2,12(r16)
   25644:	04810004 	movi	r18,1024
   25648:	84801315 	stw	r18,76(r16)
   2564c:	1484b03a 	or	r2,r2,r18
   25650:	8080030d 	sth	r2,12(r16)
   25654:	0027883a 	mov	r19,zero
   25658:	003fd806 	br	255bc <__alt_data_end+0xfffe61bc>
   2565c:	8140038f 	ldh	r5,14(r16)
   25660:	8809883a 	mov	r4,r17
   25664:	00296280 	call	29628 <_isatty_r>
   25668:	103fe226 	beq	r2,zero,255f4 <__alt_data_end+0xfffe61f4>
   2566c:	8080030b 	ldhu	r2,12(r16)
   25670:	10800054 	ori	r2,r2,1
   25674:	8080030d 	sth	r2,12(r16)
   25678:	003fde06 	br	255f4 <__alt_data_end+0xfffe61f4>
   2567c:	8080030b 	ldhu	r2,12(r16)
   25680:	10c0800c 	andi	r3,r2,512
   25684:	183fdb1e 	bne	r3,zero,255f4 <__alt_data_end+0xfffe61f4>
   25688:	10800094 	ori	r2,r2,2
   2568c:	80c010c4 	addi	r3,r16,67
   25690:	8080030d 	sth	r2,12(r16)
   25694:	00800044 	movi	r2,1
   25698:	80c00015 	stw	r3,0(r16)
   2569c:	80c00415 	stw	r3,16(r16)
   256a0:	80800515 	stw	r2,20(r16)
   256a4:	003fd306 	br	255f4 <__alt_data_end+0xfffe61f4>
   256a8:	04810004 	movi	r18,1024
   256ac:	003fc306 	br	255bc <__alt_data_end+0xfffe61bc>
   256b0:	0027883a 	mov	r19,zero
   256b4:	04810004 	movi	r18,1024
   256b8:	003fc006 	br	255bc <__alt_data_end+0xfffe61bc>

000256bc <_malloc_r>:
   256bc:	defff504 	addi	sp,sp,-44
   256c0:	dc800315 	stw	r18,12(sp)
   256c4:	dfc00a15 	stw	ra,40(sp)
   256c8:	df000915 	stw	fp,36(sp)
   256cc:	ddc00815 	stw	r23,32(sp)
   256d0:	dd800715 	stw	r22,28(sp)
   256d4:	dd400615 	stw	r21,24(sp)
   256d8:	dd000515 	stw	r20,20(sp)
   256dc:	dcc00415 	stw	r19,16(sp)
   256e0:	dc400215 	stw	r17,8(sp)
   256e4:	dc000115 	stw	r16,4(sp)
   256e8:	288002c4 	addi	r2,r5,11
   256ec:	00c00584 	movi	r3,22
   256f0:	2025883a 	mov	r18,r4
   256f4:	18807f2e 	bgeu	r3,r2,258f4 <_malloc_r+0x238>
   256f8:	047ffe04 	movi	r17,-8
   256fc:	1462703a 	and	r17,r2,r17
   25700:	8800a316 	blt	r17,zero,25990 <_malloc_r+0x2d4>
   25704:	8940a236 	bltu	r17,r5,25990 <_malloc_r+0x2d4>
   25708:	002dfb80 	call	2dfb8 <__malloc_lock>
   2570c:	00807dc4 	movi	r2,503
   25710:	1441e92e 	bgeu	r2,r17,25eb8 <_malloc_r+0x7fc>
   25714:	8804d27a 	srli	r2,r17,9
   25718:	1000a126 	beq	r2,zero,259a0 <_malloc_r+0x2e4>
   2571c:	00c00104 	movi	r3,4
   25720:	18811e36 	bltu	r3,r2,25b9c <_malloc_r+0x4e0>
   25724:	8804d1ba 	srli	r2,r17,6
   25728:	12000e44 	addi	r8,r2,57
   2572c:	11c00e04 	addi	r7,r2,56
   25730:	4209883a 	add	r4,r8,r8
   25734:	04c000f4 	movhi	r19,3
   25738:	2109883a 	add	r4,r4,r4
   2573c:	9cc1a104 	addi	r19,r19,1668
   25740:	2109883a 	add	r4,r4,r4
   25744:	9909883a 	add	r4,r19,r4
   25748:	24000117 	ldw	r16,4(r4)
   2574c:	213ffe04 	addi	r4,r4,-8
   25750:	24009726 	beq	r4,r16,259b0 <_malloc_r+0x2f4>
   25754:	80800117 	ldw	r2,4(r16)
   25758:	01bfff04 	movi	r6,-4
   2575c:	014003c4 	movi	r5,15
   25760:	1184703a 	and	r2,r2,r6
   25764:	1447c83a 	sub	r3,r2,r17
   25768:	28c00716 	blt	r5,r3,25788 <_malloc_r+0xcc>
   2576c:	1800920e 	bge	r3,zero,259b8 <_malloc_r+0x2fc>
   25770:	84000317 	ldw	r16,12(r16)
   25774:	24008e26 	beq	r4,r16,259b0 <_malloc_r+0x2f4>
   25778:	80800117 	ldw	r2,4(r16)
   2577c:	1184703a 	and	r2,r2,r6
   25780:	1447c83a 	sub	r3,r2,r17
   25784:	28fff90e 	bge	r5,r3,2576c <__alt_data_end+0xfffe636c>
   25788:	3809883a 	mov	r4,r7
   2578c:	018000f4 	movhi	r6,3
   25790:	9c000417 	ldw	r16,16(r19)
   25794:	3181a104 	addi	r6,r6,1668
   25798:	32000204 	addi	r8,r6,8
   2579c:	82013426 	beq	r16,r8,25c70 <_malloc_r+0x5b4>
   257a0:	80c00117 	ldw	r3,4(r16)
   257a4:	00bfff04 	movi	r2,-4
   257a8:	188e703a 	and	r7,r3,r2
   257ac:	3c45c83a 	sub	r2,r7,r17
   257b0:	00c003c4 	movi	r3,15
   257b4:	18811f16 	blt	r3,r2,25c34 <_malloc_r+0x578>
   257b8:	32000515 	stw	r8,20(r6)
   257bc:	32000415 	stw	r8,16(r6)
   257c0:	10007f0e 	bge	r2,zero,259c0 <_malloc_r+0x304>
   257c4:	00807fc4 	movi	r2,511
   257c8:	11c0fd36 	bltu	r2,r7,25bc0 <_malloc_r+0x504>
   257cc:	3806d0fa 	srli	r3,r7,3
   257d0:	01c00044 	movi	r7,1
   257d4:	30800117 	ldw	r2,4(r6)
   257d8:	19400044 	addi	r5,r3,1
   257dc:	294b883a 	add	r5,r5,r5
   257e0:	1807d0ba 	srai	r3,r3,2
   257e4:	294b883a 	add	r5,r5,r5
   257e8:	294b883a 	add	r5,r5,r5
   257ec:	298b883a 	add	r5,r5,r6
   257f0:	38c6983a 	sll	r3,r7,r3
   257f4:	29c00017 	ldw	r7,0(r5)
   257f8:	2a7ffe04 	addi	r9,r5,-8
   257fc:	1886b03a 	or	r3,r3,r2
   25800:	82400315 	stw	r9,12(r16)
   25804:	81c00215 	stw	r7,8(r16)
   25808:	30c00115 	stw	r3,4(r6)
   2580c:	2c000015 	stw	r16,0(r5)
   25810:	3c000315 	stw	r16,12(r7)
   25814:	2005d0ba 	srai	r2,r4,2
   25818:	01400044 	movi	r5,1
   2581c:	288a983a 	sll	r5,r5,r2
   25820:	19406f36 	bltu	r3,r5,259e0 <_malloc_r+0x324>
   25824:	28c4703a 	and	r2,r5,r3
   25828:	10000a1e 	bne	r2,zero,25854 <_malloc_r+0x198>
   2582c:	00bfff04 	movi	r2,-4
   25830:	294b883a 	add	r5,r5,r5
   25834:	2088703a 	and	r4,r4,r2
   25838:	28c4703a 	and	r2,r5,r3
   2583c:	21000104 	addi	r4,r4,4
   25840:	1000041e 	bne	r2,zero,25854 <_malloc_r+0x198>
   25844:	294b883a 	add	r5,r5,r5
   25848:	28c4703a 	and	r2,r5,r3
   2584c:	21000104 	addi	r4,r4,4
   25850:	103ffc26 	beq	r2,zero,25844 <__alt_data_end+0xfffe6444>
   25854:	02bfff04 	movi	r10,-4
   25858:	024003c4 	movi	r9,15
   2585c:	21800044 	addi	r6,r4,1
   25860:	318d883a 	add	r6,r6,r6
   25864:	318d883a 	add	r6,r6,r6
   25868:	318d883a 	add	r6,r6,r6
   2586c:	998d883a 	add	r6,r19,r6
   25870:	333ffe04 	addi	r12,r6,-8
   25874:	2017883a 	mov	r11,r4
   25878:	31800104 	addi	r6,r6,4
   2587c:	34000017 	ldw	r16,0(r6)
   25880:	31fffd04 	addi	r7,r6,-12
   25884:	81c0041e 	bne	r16,r7,25898 <_malloc_r+0x1dc>
   25888:	0000fb06 	br	25c78 <_malloc_r+0x5bc>
   2588c:	1801030e 	bge	r3,zero,25c9c <_malloc_r+0x5e0>
   25890:	84000317 	ldw	r16,12(r16)
   25894:	81c0f826 	beq	r16,r7,25c78 <_malloc_r+0x5bc>
   25898:	80800117 	ldw	r2,4(r16)
   2589c:	1284703a 	and	r2,r2,r10
   258a0:	1447c83a 	sub	r3,r2,r17
   258a4:	48fff90e 	bge	r9,r3,2588c <__alt_data_end+0xfffe648c>
   258a8:	80800317 	ldw	r2,12(r16)
   258ac:	81000217 	ldw	r4,8(r16)
   258b0:	89400054 	ori	r5,r17,1
   258b4:	81400115 	stw	r5,4(r16)
   258b8:	20800315 	stw	r2,12(r4)
   258bc:	11000215 	stw	r4,8(r2)
   258c0:	8463883a 	add	r17,r16,r17
   258c4:	9c400515 	stw	r17,20(r19)
   258c8:	9c400415 	stw	r17,16(r19)
   258cc:	18800054 	ori	r2,r3,1
   258d0:	88800115 	stw	r2,4(r17)
   258d4:	8a000315 	stw	r8,12(r17)
   258d8:	8a000215 	stw	r8,8(r17)
   258dc:	88e3883a 	add	r17,r17,r3
   258e0:	88c00015 	stw	r3,0(r17)
   258e4:	9009883a 	mov	r4,r18
   258e8:	002dfdc0 	call	2dfdc <__malloc_unlock>
   258ec:	80800204 	addi	r2,r16,8
   258f0:	00001b06 	br	25960 <_malloc_r+0x2a4>
   258f4:	04400404 	movi	r17,16
   258f8:	89402536 	bltu	r17,r5,25990 <_malloc_r+0x2d4>
   258fc:	002dfb80 	call	2dfb8 <__malloc_lock>
   25900:	00800184 	movi	r2,6
   25904:	01000084 	movi	r4,2
   25908:	04c000f4 	movhi	r19,3
   2590c:	1085883a 	add	r2,r2,r2
   25910:	9cc1a104 	addi	r19,r19,1668
   25914:	1085883a 	add	r2,r2,r2
   25918:	9885883a 	add	r2,r19,r2
   2591c:	14000117 	ldw	r16,4(r2)
   25920:	10fffe04 	addi	r3,r2,-8
   25924:	80c0d926 	beq	r16,r3,25c8c <_malloc_r+0x5d0>
   25928:	80c00117 	ldw	r3,4(r16)
   2592c:	81000317 	ldw	r4,12(r16)
   25930:	00bfff04 	movi	r2,-4
   25934:	1884703a 	and	r2,r3,r2
   25938:	81400217 	ldw	r5,8(r16)
   2593c:	8085883a 	add	r2,r16,r2
   25940:	10c00117 	ldw	r3,4(r2)
   25944:	29000315 	stw	r4,12(r5)
   25948:	21400215 	stw	r5,8(r4)
   2594c:	18c00054 	ori	r3,r3,1
   25950:	10c00115 	stw	r3,4(r2)
   25954:	9009883a 	mov	r4,r18
   25958:	002dfdc0 	call	2dfdc <__malloc_unlock>
   2595c:	80800204 	addi	r2,r16,8
   25960:	dfc00a17 	ldw	ra,40(sp)
   25964:	df000917 	ldw	fp,36(sp)
   25968:	ddc00817 	ldw	r23,32(sp)
   2596c:	dd800717 	ldw	r22,28(sp)
   25970:	dd400617 	ldw	r21,24(sp)
   25974:	dd000517 	ldw	r20,20(sp)
   25978:	dcc00417 	ldw	r19,16(sp)
   2597c:	dc800317 	ldw	r18,12(sp)
   25980:	dc400217 	ldw	r17,8(sp)
   25984:	dc000117 	ldw	r16,4(sp)
   25988:	dec00b04 	addi	sp,sp,44
   2598c:	f800283a 	ret
   25990:	00800304 	movi	r2,12
   25994:	90800015 	stw	r2,0(r18)
   25998:	0005883a 	mov	r2,zero
   2599c:	003ff006 	br	25960 <__alt_data_end+0xfffe6560>
   259a0:	01002004 	movi	r4,128
   259a4:	02001004 	movi	r8,64
   259a8:	01c00fc4 	movi	r7,63
   259ac:	003f6106 	br	25734 <__alt_data_end+0xfffe6334>
   259b0:	4009883a 	mov	r4,r8
   259b4:	003f7506 	br	2578c <__alt_data_end+0xfffe638c>
   259b8:	81000317 	ldw	r4,12(r16)
   259bc:	003fde06 	br	25938 <__alt_data_end+0xfffe6538>
   259c0:	81c5883a 	add	r2,r16,r7
   259c4:	11400117 	ldw	r5,4(r2)
   259c8:	9009883a 	mov	r4,r18
   259cc:	29400054 	ori	r5,r5,1
   259d0:	11400115 	stw	r5,4(r2)
   259d4:	002dfdc0 	call	2dfdc <__malloc_unlock>
   259d8:	80800204 	addi	r2,r16,8
   259dc:	003fe006 	br	25960 <__alt_data_end+0xfffe6560>
   259e0:	9c000217 	ldw	r16,8(r19)
   259e4:	00bfff04 	movi	r2,-4
   259e8:	85800117 	ldw	r22,4(r16)
   259ec:	b0ac703a 	and	r22,r22,r2
   259f0:	b4400336 	bltu	r22,r17,25a00 <_malloc_r+0x344>
   259f4:	b445c83a 	sub	r2,r22,r17
   259f8:	00c003c4 	movi	r3,15
   259fc:	18805d16 	blt	r3,r2,25b74 <_malloc_r+0x4b8>
   25a00:	05c000f4 	movhi	r23,3
   25a04:	008000f4 	movhi	r2,3
   25a08:	108dfd04 	addi	r2,r2,14324
   25a0c:	bdc72804 	addi	r23,r23,7328
   25a10:	15400017 	ldw	r21,0(r2)
   25a14:	b8c00017 	ldw	r3,0(r23)
   25a18:	00bfffc4 	movi	r2,-1
   25a1c:	858d883a 	add	r6,r16,r22
   25a20:	8d6b883a 	add	r21,r17,r21
   25a24:	1880ea26 	beq	r3,r2,25dd0 <_malloc_r+0x714>
   25a28:	ad4403c4 	addi	r21,r21,4111
   25a2c:	00bc0004 	movi	r2,-4096
   25a30:	a8aa703a 	and	r21,r21,r2
   25a34:	a80b883a 	mov	r5,r21
   25a38:	9009883a 	mov	r4,r18
   25a3c:	d9800015 	stw	r6,0(sp)
   25a40:	00273480 	call	27348 <_sbrk_r>
   25a44:	1029883a 	mov	r20,r2
   25a48:	00bfffc4 	movi	r2,-1
   25a4c:	d9800017 	ldw	r6,0(sp)
   25a50:	a080e826 	beq	r20,r2,25df4 <_malloc_r+0x738>
   25a54:	a180a636 	bltu	r20,r6,25cf0 <_malloc_r+0x634>
   25a58:	070000f4 	movhi	fp,3
   25a5c:	e70e0504 	addi	fp,fp,14356
   25a60:	e0800017 	ldw	r2,0(fp)
   25a64:	a887883a 	add	r3,r21,r2
   25a68:	e0c00015 	stw	r3,0(fp)
   25a6c:	3500e626 	beq	r6,r20,25e08 <_malloc_r+0x74c>
   25a70:	b9000017 	ldw	r4,0(r23)
   25a74:	00bfffc4 	movi	r2,-1
   25a78:	2080ee26 	beq	r4,r2,25e34 <_malloc_r+0x778>
   25a7c:	a185c83a 	sub	r2,r20,r6
   25a80:	10c5883a 	add	r2,r2,r3
   25a84:	e0800015 	stw	r2,0(fp)
   25a88:	a0c001cc 	andi	r3,r20,7
   25a8c:	1800bc26 	beq	r3,zero,25d80 <_malloc_r+0x6c4>
   25a90:	a0e9c83a 	sub	r20,r20,r3
   25a94:	00840204 	movi	r2,4104
   25a98:	a5000204 	addi	r20,r20,8
   25a9c:	10c7c83a 	sub	r3,r2,r3
   25aa0:	a545883a 	add	r2,r20,r21
   25aa4:	1083ffcc 	andi	r2,r2,4095
   25aa8:	18abc83a 	sub	r21,r3,r2
   25aac:	a80b883a 	mov	r5,r21
   25ab0:	9009883a 	mov	r4,r18
   25ab4:	00273480 	call	27348 <_sbrk_r>
   25ab8:	00ffffc4 	movi	r3,-1
   25abc:	10c0e126 	beq	r2,r3,25e44 <_malloc_r+0x788>
   25ac0:	1505c83a 	sub	r2,r2,r20
   25ac4:	1545883a 	add	r2,r2,r21
   25ac8:	10800054 	ori	r2,r2,1
   25acc:	e0c00017 	ldw	r3,0(fp)
   25ad0:	9d000215 	stw	r20,8(r19)
   25ad4:	a0800115 	stw	r2,4(r20)
   25ad8:	a8c7883a 	add	r3,r21,r3
   25adc:	e0c00015 	stw	r3,0(fp)
   25ae0:	84c00e26 	beq	r16,r19,25b1c <_malloc_r+0x460>
   25ae4:	018003c4 	movi	r6,15
   25ae8:	3580a72e 	bgeu	r6,r22,25d88 <_malloc_r+0x6cc>
   25aec:	81400117 	ldw	r5,4(r16)
   25af0:	013ffe04 	movi	r4,-8
   25af4:	b0bffd04 	addi	r2,r22,-12
   25af8:	1104703a 	and	r2,r2,r4
   25afc:	2900004c 	andi	r4,r5,1
   25b00:	2088b03a 	or	r4,r4,r2
   25b04:	81000115 	stw	r4,4(r16)
   25b08:	01400144 	movi	r5,5
   25b0c:	8089883a 	add	r4,r16,r2
   25b10:	21400115 	stw	r5,4(r4)
   25b14:	21400215 	stw	r5,8(r4)
   25b18:	3080cd36 	bltu	r6,r2,25e50 <_malloc_r+0x794>
   25b1c:	008000f4 	movhi	r2,3
   25b20:	108dfc04 	addi	r2,r2,14320
   25b24:	11000017 	ldw	r4,0(r2)
   25b28:	20c0012e 	bgeu	r4,r3,25b30 <_malloc_r+0x474>
   25b2c:	10c00015 	stw	r3,0(r2)
   25b30:	008000f4 	movhi	r2,3
   25b34:	108dfb04 	addi	r2,r2,14316
   25b38:	11000017 	ldw	r4,0(r2)
   25b3c:	9c000217 	ldw	r16,8(r19)
   25b40:	20c0012e 	bgeu	r4,r3,25b48 <_malloc_r+0x48c>
   25b44:	10c00015 	stw	r3,0(r2)
   25b48:	80c00117 	ldw	r3,4(r16)
   25b4c:	00bfff04 	movi	r2,-4
   25b50:	1886703a 	and	r3,r3,r2
   25b54:	1c45c83a 	sub	r2,r3,r17
   25b58:	1c400236 	bltu	r3,r17,25b64 <_malloc_r+0x4a8>
   25b5c:	00c003c4 	movi	r3,15
   25b60:	18800416 	blt	r3,r2,25b74 <_malloc_r+0x4b8>
   25b64:	9009883a 	mov	r4,r18
   25b68:	002dfdc0 	call	2dfdc <__malloc_unlock>
   25b6c:	0005883a 	mov	r2,zero
   25b70:	003f7b06 	br	25960 <__alt_data_end+0xfffe6560>
   25b74:	88c00054 	ori	r3,r17,1
   25b78:	80c00115 	stw	r3,4(r16)
   25b7c:	8463883a 	add	r17,r16,r17
   25b80:	10800054 	ori	r2,r2,1
   25b84:	9c400215 	stw	r17,8(r19)
   25b88:	88800115 	stw	r2,4(r17)
   25b8c:	9009883a 	mov	r4,r18
   25b90:	002dfdc0 	call	2dfdc <__malloc_unlock>
   25b94:	80800204 	addi	r2,r16,8
   25b98:	003f7106 	br	25960 <__alt_data_end+0xfffe6560>
   25b9c:	00c00504 	movi	r3,20
   25ba0:	18804a2e 	bgeu	r3,r2,25ccc <_malloc_r+0x610>
   25ba4:	00c01504 	movi	r3,84
   25ba8:	18806e36 	bltu	r3,r2,25d64 <_malloc_r+0x6a8>
   25bac:	8804d33a 	srli	r2,r17,12
   25bb0:	12001bc4 	addi	r8,r2,111
   25bb4:	11c01b84 	addi	r7,r2,110
   25bb8:	4209883a 	add	r4,r8,r8
   25bbc:	003edd06 	br	25734 <__alt_data_end+0xfffe6334>
   25bc0:	3804d27a 	srli	r2,r7,9
   25bc4:	00c00104 	movi	r3,4
   25bc8:	1880442e 	bgeu	r3,r2,25cdc <_malloc_r+0x620>
   25bcc:	00c00504 	movi	r3,20
   25bd0:	18808136 	bltu	r3,r2,25dd8 <_malloc_r+0x71c>
   25bd4:	11401704 	addi	r5,r2,92
   25bd8:	10c016c4 	addi	r3,r2,91
   25bdc:	294b883a 	add	r5,r5,r5
   25be0:	294b883a 	add	r5,r5,r5
   25be4:	294b883a 	add	r5,r5,r5
   25be8:	994b883a 	add	r5,r19,r5
   25bec:	28800017 	ldw	r2,0(r5)
   25bf0:	018000f4 	movhi	r6,3
   25bf4:	297ffe04 	addi	r5,r5,-8
   25bf8:	3181a104 	addi	r6,r6,1668
   25bfc:	28806526 	beq	r5,r2,25d94 <_malloc_r+0x6d8>
   25c00:	01bfff04 	movi	r6,-4
   25c04:	10c00117 	ldw	r3,4(r2)
   25c08:	1986703a 	and	r3,r3,r6
   25c0c:	38c0022e 	bgeu	r7,r3,25c18 <_malloc_r+0x55c>
   25c10:	10800217 	ldw	r2,8(r2)
   25c14:	28bffb1e 	bne	r5,r2,25c04 <__alt_data_end+0xfffe6804>
   25c18:	11400317 	ldw	r5,12(r2)
   25c1c:	98c00117 	ldw	r3,4(r19)
   25c20:	81400315 	stw	r5,12(r16)
   25c24:	80800215 	stw	r2,8(r16)
   25c28:	2c000215 	stw	r16,8(r5)
   25c2c:	14000315 	stw	r16,12(r2)
   25c30:	003ef806 	br	25814 <__alt_data_end+0xfffe6414>
   25c34:	88c00054 	ori	r3,r17,1
   25c38:	80c00115 	stw	r3,4(r16)
   25c3c:	8463883a 	add	r17,r16,r17
   25c40:	34400515 	stw	r17,20(r6)
   25c44:	34400415 	stw	r17,16(r6)
   25c48:	10c00054 	ori	r3,r2,1
   25c4c:	8a000315 	stw	r8,12(r17)
   25c50:	8a000215 	stw	r8,8(r17)
   25c54:	88c00115 	stw	r3,4(r17)
   25c58:	88a3883a 	add	r17,r17,r2
   25c5c:	88800015 	stw	r2,0(r17)
   25c60:	9009883a 	mov	r4,r18
   25c64:	002dfdc0 	call	2dfdc <__malloc_unlock>
   25c68:	80800204 	addi	r2,r16,8
   25c6c:	003f3c06 	br	25960 <__alt_data_end+0xfffe6560>
   25c70:	30c00117 	ldw	r3,4(r6)
   25c74:	003ee706 	br	25814 <__alt_data_end+0xfffe6414>
   25c78:	5ac00044 	addi	r11,r11,1
   25c7c:	588000cc 	andi	r2,r11,3
   25c80:	31800204 	addi	r6,r6,8
   25c84:	103efd1e 	bne	r2,zero,2587c <__alt_data_end+0xfffe647c>
   25c88:	00002406 	br	25d1c <_malloc_r+0x660>
   25c8c:	14000317 	ldw	r16,12(r2)
   25c90:	143f251e 	bne	r2,r16,25928 <__alt_data_end+0xfffe6528>
   25c94:	21000084 	addi	r4,r4,2
   25c98:	003ebc06 	br	2578c <__alt_data_end+0xfffe638c>
   25c9c:	8085883a 	add	r2,r16,r2
   25ca0:	10c00117 	ldw	r3,4(r2)
   25ca4:	81000317 	ldw	r4,12(r16)
   25ca8:	81400217 	ldw	r5,8(r16)
   25cac:	18c00054 	ori	r3,r3,1
   25cb0:	10c00115 	stw	r3,4(r2)
   25cb4:	29000315 	stw	r4,12(r5)
   25cb8:	21400215 	stw	r5,8(r4)
   25cbc:	9009883a 	mov	r4,r18
   25cc0:	002dfdc0 	call	2dfdc <__malloc_unlock>
   25cc4:	80800204 	addi	r2,r16,8
   25cc8:	003f2506 	br	25960 <__alt_data_end+0xfffe6560>
   25ccc:	12001704 	addi	r8,r2,92
   25cd0:	11c016c4 	addi	r7,r2,91
   25cd4:	4209883a 	add	r4,r8,r8
   25cd8:	003e9606 	br	25734 <__alt_data_end+0xfffe6334>
   25cdc:	3804d1ba 	srli	r2,r7,6
   25ce0:	11400e44 	addi	r5,r2,57
   25ce4:	10c00e04 	addi	r3,r2,56
   25ce8:	294b883a 	add	r5,r5,r5
   25cec:	003fbc06 	br	25be0 <__alt_data_end+0xfffe67e0>
   25cf0:	84ff5926 	beq	r16,r19,25a58 <__alt_data_end+0xfffe6658>
   25cf4:	008000f4 	movhi	r2,3
   25cf8:	1081a104 	addi	r2,r2,1668
   25cfc:	14000217 	ldw	r16,8(r2)
   25d00:	00bfff04 	movi	r2,-4
   25d04:	80c00117 	ldw	r3,4(r16)
   25d08:	1886703a 	and	r3,r3,r2
   25d0c:	003f9106 	br	25b54 <__alt_data_end+0xfffe6754>
   25d10:	60800217 	ldw	r2,8(r12)
   25d14:	213fffc4 	addi	r4,r4,-1
   25d18:	1300651e 	bne	r2,r12,25eb0 <_malloc_r+0x7f4>
   25d1c:	208000cc 	andi	r2,r4,3
   25d20:	633ffe04 	addi	r12,r12,-8
   25d24:	103ffa1e 	bne	r2,zero,25d10 <__alt_data_end+0xfffe6910>
   25d28:	98800117 	ldw	r2,4(r19)
   25d2c:	0146303a 	nor	r3,zero,r5
   25d30:	1884703a 	and	r2,r3,r2
   25d34:	98800115 	stw	r2,4(r19)
   25d38:	294b883a 	add	r5,r5,r5
   25d3c:	117f2836 	bltu	r2,r5,259e0 <__alt_data_end+0xfffe65e0>
   25d40:	283f2726 	beq	r5,zero,259e0 <__alt_data_end+0xfffe65e0>
   25d44:	2886703a 	and	r3,r5,r2
   25d48:	5809883a 	mov	r4,r11
   25d4c:	183ec31e 	bne	r3,zero,2585c <__alt_data_end+0xfffe645c>
   25d50:	294b883a 	add	r5,r5,r5
   25d54:	2886703a 	and	r3,r5,r2
   25d58:	21000104 	addi	r4,r4,4
   25d5c:	183ffc26 	beq	r3,zero,25d50 <__alt_data_end+0xfffe6950>
   25d60:	003ebe06 	br	2585c <__alt_data_end+0xfffe645c>
   25d64:	00c05504 	movi	r3,340
   25d68:	18801236 	bltu	r3,r2,25db4 <_malloc_r+0x6f8>
   25d6c:	8804d3fa 	srli	r2,r17,15
   25d70:	12001e04 	addi	r8,r2,120
   25d74:	11c01dc4 	addi	r7,r2,119
   25d78:	4209883a 	add	r4,r8,r8
   25d7c:	003e6d06 	br	25734 <__alt_data_end+0xfffe6334>
   25d80:	00c40004 	movi	r3,4096
   25d84:	003f4606 	br	25aa0 <__alt_data_end+0xfffe66a0>
   25d88:	00800044 	movi	r2,1
   25d8c:	a0800115 	stw	r2,4(r20)
   25d90:	003f7406 	br	25b64 <__alt_data_end+0xfffe6764>
   25d94:	1805d0ba 	srai	r2,r3,2
   25d98:	01c00044 	movi	r7,1
   25d9c:	30c00117 	ldw	r3,4(r6)
   25da0:	388e983a 	sll	r7,r7,r2
   25da4:	2805883a 	mov	r2,r5
   25da8:	38c6b03a 	or	r3,r7,r3
   25dac:	30c00115 	stw	r3,4(r6)
   25db0:	003f9b06 	br	25c20 <__alt_data_end+0xfffe6820>
   25db4:	00c15504 	movi	r3,1364
   25db8:	18801a36 	bltu	r3,r2,25e24 <_malloc_r+0x768>
   25dbc:	8804d4ba 	srli	r2,r17,18
   25dc0:	12001f44 	addi	r8,r2,125
   25dc4:	11c01f04 	addi	r7,r2,124
   25dc8:	4209883a 	add	r4,r8,r8
   25dcc:	003e5906 	br	25734 <__alt_data_end+0xfffe6334>
   25dd0:	ad400404 	addi	r21,r21,16
   25dd4:	003f1706 	br	25a34 <__alt_data_end+0xfffe6634>
   25dd8:	00c01504 	movi	r3,84
   25ddc:	18802336 	bltu	r3,r2,25e6c <_malloc_r+0x7b0>
   25de0:	3804d33a 	srli	r2,r7,12
   25de4:	11401bc4 	addi	r5,r2,111
   25de8:	10c01b84 	addi	r3,r2,110
   25dec:	294b883a 	add	r5,r5,r5
   25df0:	003f7b06 	br	25be0 <__alt_data_end+0xfffe67e0>
   25df4:	9c000217 	ldw	r16,8(r19)
   25df8:	00bfff04 	movi	r2,-4
   25dfc:	80c00117 	ldw	r3,4(r16)
   25e00:	1886703a 	and	r3,r3,r2
   25e04:	003f5306 	br	25b54 <__alt_data_end+0xfffe6754>
   25e08:	3083ffcc 	andi	r2,r6,4095
   25e0c:	103f181e 	bne	r2,zero,25a70 <__alt_data_end+0xfffe6670>
   25e10:	99000217 	ldw	r4,8(r19)
   25e14:	b545883a 	add	r2,r22,r21
   25e18:	10800054 	ori	r2,r2,1
   25e1c:	20800115 	stw	r2,4(r4)
   25e20:	003f3e06 	br	25b1c <__alt_data_end+0xfffe671c>
   25e24:	01003f84 	movi	r4,254
   25e28:	02001fc4 	movi	r8,127
   25e2c:	01c01f84 	movi	r7,126
   25e30:	003e4006 	br	25734 <__alt_data_end+0xfffe6334>
   25e34:	008000f4 	movhi	r2,3
   25e38:	10872804 	addi	r2,r2,7328
   25e3c:	15000015 	stw	r20,0(r2)
   25e40:	003f1106 	br	25a88 <__alt_data_end+0xfffe6688>
   25e44:	00800044 	movi	r2,1
   25e48:	002b883a 	mov	r21,zero
   25e4c:	003f1f06 	br	25acc <__alt_data_end+0xfffe66cc>
   25e50:	81400204 	addi	r5,r16,8
   25e54:	9009883a 	mov	r4,r18
   25e58:	0024f8c0 	call	24f8c <_free_r>
   25e5c:	008000f4 	movhi	r2,3
   25e60:	108e0504 	addi	r2,r2,14356
   25e64:	10c00017 	ldw	r3,0(r2)
   25e68:	003f2c06 	br	25b1c <__alt_data_end+0xfffe671c>
   25e6c:	00c05504 	movi	r3,340
   25e70:	18800536 	bltu	r3,r2,25e88 <_malloc_r+0x7cc>
   25e74:	3804d3fa 	srli	r2,r7,15
   25e78:	11401e04 	addi	r5,r2,120
   25e7c:	10c01dc4 	addi	r3,r2,119
   25e80:	294b883a 	add	r5,r5,r5
   25e84:	003f5606 	br	25be0 <__alt_data_end+0xfffe67e0>
   25e88:	00c15504 	movi	r3,1364
   25e8c:	18800536 	bltu	r3,r2,25ea4 <_malloc_r+0x7e8>
   25e90:	3804d4ba 	srli	r2,r7,18
   25e94:	11401f44 	addi	r5,r2,125
   25e98:	10c01f04 	addi	r3,r2,124
   25e9c:	294b883a 	add	r5,r5,r5
   25ea0:	003f4f06 	br	25be0 <__alt_data_end+0xfffe67e0>
   25ea4:	01403f84 	movi	r5,254
   25ea8:	00c01f84 	movi	r3,126
   25eac:	003f4c06 	br	25be0 <__alt_data_end+0xfffe67e0>
   25eb0:	98800117 	ldw	r2,4(r19)
   25eb4:	003fa006 	br	25d38 <__alt_data_end+0xfffe6938>
   25eb8:	8808d0fa 	srli	r4,r17,3
   25ebc:	20800044 	addi	r2,r4,1
   25ec0:	1085883a 	add	r2,r2,r2
   25ec4:	003e9006 	br	25908 <__alt_data_end+0xfffe6508>

00025ec8 <memchr>:
   25ec8:	208000cc 	andi	r2,r4,3
   25ecc:	280f883a 	mov	r7,r5
   25ed0:	10003426 	beq	r2,zero,25fa4 <memchr+0xdc>
   25ed4:	30bfffc4 	addi	r2,r6,-1
   25ed8:	30001a26 	beq	r6,zero,25f44 <memchr+0x7c>
   25edc:	20c00003 	ldbu	r3,0(r4)
   25ee0:	29803fcc 	andi	r6,r5,255
   25ee4:	30c0051e 	bne	r6,r3,25efc <memchr+0x34>
   25ee8:	00001806 	br	25f4c <memchr+0x84>
   25eec:	10001526 	beq	r2,zero,25f44 <memchr+0x7c>
   25ef0:	20c00003 	ldbu	r3,0(r4)
   25ef4:	10bfffc4 	addi	r2,r2,-1
   25ef8:	30c01426 	beq	r6,r3,25f4c <memchr+0x84>
   25efc:	21000044 	addi	r4,r4,1
   25f00:	20c000cc 	andi	r3,r4,3
   25f04:	183ff91e 	bne	r3,zero,25eec <__alt_data_end+0xfffe6aec>
   25f08:	020000c4 	movi	r8,3
   25f0c:	40801136 	bltu	r8,r2,25f54 <memchr+0x8c>
   25f10:	10000c26 	beq	r2,zero,25f44 <memchr+0x7c>
   25f14:	20c00003 	ldbu	r3,0(r4)
   25f18:	29403fcc 	andi	r5,r5,255
   25f1c:	28c00b26 	beq	r5,r3,25f4c <memchr+0x84>
   25f20:	20c00044 	addi	r3,r4,1
   25f24:	39803fcc 	andi	r6,r7,255
   25f28:	2089883a 	add	r4,r4,r2
   25f2c:	00000306 	br	25f3c <memchr+0x74>
   25f30:	18c00044 	addi	r3,r3,1
   25f34:	197fffc3 	ldbu	r5,-1(r3)
   25f38:	31400526 	beq	r6,r5,25f50 <memchr+0x88>
   25f3c:	1805883a 	mov	r2,r3
   25f40:	20fffb1e 	bne	r4,r3,25f30 <__alt_data_end+0xfffe6b30>
   25f44:	0005883a 	mov	r2,zero
   25f48:	f800283a 	ret
   25f4c:	2005883a 	mov	r2,r4
   25f50:	f800283a 	ret
   25f54:	28c03fcc 	andi	r3,r5,255
   25f58:	1812923a 	slli	r9,r3,8
   25f5c:	02ffbff4 	movhi	r11,65279
   25f60:	02a02074 	movhi	r10,32897
   25f64:	48d2b03a 	or	r9,r9,r3
   25f68:	4806943a 	slli	r3,r9,16
   25f6c:	5affbfc4 	addi	r11,r11,-257
   25f70:	52a02004 	addi	r10,r10,-32640
   25f74:	48d2b03a 	or	r9,r9,r3
   25f78:	20c00017 	ldw	r3,0(r4)
   25f7c:	48c6f03a 	xor	r3,r9,r3
   25f80:	1acd883a 	add	r6,r3,r11
   25f84:	00c6303a 	nor	r3,zero,r3
   25f88:	30c6703a 	and	r3,r6,r3
   25f8c:	1a86703a 	and	r3,r3,r10
   25f90:	183fe01e 	bne	r3,zero,25f14 <__alt_data_end+0xfffe6b14>
   25f94:	10bfff04 	addi	r2,r2,-4
   25f98:	21000104 	addi	r4,r4,4
   25f9c:	40bff636 	bltu	r8,r2,25f78 <__alt_data_end+0xfffe6b78>
   25fa0:	003fdb06 	br	25f10 <__alt_data_end+0xfffe6b10>
   25fa4:	3005883a 	mov	r2,r6
   25fa8:	003fd706 	br	25f08 <__alt_data_end+0xfffe6b08>

00025fac <memcpy>:
   25fac:	defffd04 	addi	sp,sp,-12
   25fb0:	dfc00215 	stw	ra,8(sp)
   25fb4:	dc400115 	stw	r17,4(sp)
   25fb8:	dc000015 	stw	r16,0(sp)
   25fbc:	00c003c4 	movi	r3,15
   25fc0:	2005883a 	mov	r2,r4
   25fc4:	1980452e 	bgeu	r3,r6,260dc <memcpy+0x130>
   25fc8:	2906b03a 	or	r3,r5,r4
   25fcc:	18c000cc 	andi	r3,r3,3
   25fd0:	1800441e 	bne	r3,zero,260e4 <memcpy+0x138>
   25fd4:	347ffc04 	addi	r17,r6,-16
   25fd8:	8822d13a 	srli	r17,r17,4
   25fdc:	28c00104 	addi	r3,r5,4
   25fe0:	23400104 	addi	r13,r4,4
   25fe4:	8820913a 	slli	r16,r17,4
   25fe8:	2b000204 	addi	r12,r5,8
   25fec:	22c00204 	addi	r11,r4,8
   25ff0:	84000504 	addi	r16,r16,20
   25ff4:	2a800304 	addi	r10,r5,12
   25ff8:	22400304 	addi	r9,r4,12
   25ffc:	2c21883a 	add	r16,r5,r16
   26000:	2811883a 	mov	r8,r5
   26004:	200f883a 	mov	r7,r4
   26008:	41000017 	ldw	r4,0(r8)
   2600c:	1fc00017 	ldw	ra,0(r3)
   26010:	63c00017 	ldw	r15,0(r12)
   26014:	39000015 	stw	r4,0(r7)
   26018:	53800017 	ldw	r14,0(r10)
   2601c:	6fc00015 	stw	ra,0(r13)
   26020:	5bc00015 	stw	r15,0(r11)
   26024:	4b800015 	stw	r14,0(r9)
   26028:	18c00404 	addi	r3,r3,16
   2602c:	39c00404 	addi	r7,r7,16
   26030:	42000404 	addi	r8,r8,16
   26034:	6b400404 	addi	r13,r13,16
   26038:	63000404 	addi	r12,r12,16
   2603c:	5ac00404 	addi	r11,r11,16
   26040:	52800404 	addi	r10,r10,16
   26044:	4a400404 	addi	r9,r9,16
   26048:	1c3fef1e 	bne	r3,r16,26008 <__alt_data_end+0xfffe6c08>
   2604c:	89c00044 	addi	r7,r17,1
   26050:	380e913a 	slli	r7,r7,4
   26054:	310003cc 	andi	r4,r6,15
   26058:	02c000c4 	movi	r11,3
   2605c:	11c7883a 	add	r3,r2,r7
   26060:	29cb883a 	add	r5,r5,r7
   26064:	5900212e 	bgeu	r11,r4,260ec <memcpy+0x140>
   26068:	1813883a 	mov	r9,r3
   2606c:	2811883a 	mov	r8,r5
   26070:	200f883a 	mov	r7,r4
   26074:	42800017 	ldw	r10,0(r8)
   26078:	4a400104 	addi	r9,r9,4
   2607c:	39ffff04 	addi	r7,r7,-4
   26080:	4abfff15 	stw	r10,-4(r9)
   26084:	42000104 	addi	r8,r8,4
   26088:	59fffa36 	bltu	r11,r7,26074 <__alt_data_end+0xfffe6c74>
   2608c:	213fff04 	addi	r4,r4,-4
   26090:	2008d0ba 	srli	r4,r4,2
   26094:	318000cc 	andi	r6,r6,3
   26098:	21000044 	addi	r4,r4,1
   2609c:	2109883a 	add	r4,r4,r4
   260a0:	2109883a 	add	r4,r4,r4
   260a4:	1907883a 	add	r3,r3,r4
   260a8:	290b883a 	add	r5,r5,r4
   260ac:	30000626 	beq	r6,zero,260c8 <memcpy+0x11c>
   260b0:	198d883a 	add	r6,r3,r6
   260b4:	29c00003 	ldbu	r7,0(r5)
   260b8:	18c00044 	addi	r3,r3,1
   260bc:	29400044 	addi	r5,r5,1
   260c0:	19ffffc5 	stb	r7,-1(r3)
   260c4:	19bffb1e 	bne	r3,r6,260b4 <__alt_data_end+0xfffe6cb4>
   260c8:	dfc00217 	ldw	ra,8(sp)
   260cc:	dc400117 	ldw	r17,4(sp)
   260d0:	dc000017 	ldw	r16,0(sp)
   260d4:	dec00304 	addi	sp,sp,12
   260d8:	f800283a 	ret
   260dc:	2007883a 	mov	r3,r4
   260e0:	003ff206 	br	260ac <__alt_data_end+0xfffe6cac>
   260e4:	2007883a 	mov	r3,r4
   260e8:	003ff106 	br	260b0 <__alt_data_end+0xfffe6cb0>
   260ec:	200d883a 	mov	r6,r4
   260f0:	003fee06 	br	260ac <__alt_data_end+0xfffe6cac>

000260f4 <memset>:
   260f4:	20c000cc 	andi	r3,r4,3
   260f8:	2005883a 	mov	r2,r4
   260fc:	18004426 	beq	r3,zero,26210 <memset+0x11c>
   26100:	31ffffc4 	addi	r7,r6,-1
   26104:	30004026 	beq	r6,zero,26208 <memset+0x114>
   26108:	2813883a 	mov	r9,r5
   2610c:	200d883a 	mov	r6,r4
   26110:	2007883a 	mov	r3,r4
   26114:	00000406 	br	26128 <memset+0x34>
   26118:	3a3fffc4 	addi	r8,r7,-1
   2611c:	31800044 	addi	r6,r6,1
   26120:	38003926 	beq	r7,zero,26208 <memset+0x114>
   26124:	400f883a 	mov	r7,r8
   26128:	18c00044 	addi	r3,r3,1
   2612c:	32400005 	stb	r9,0(r6)
   26130:	1a0000cc 	andi	r8,r3,3
   26134:	403ff81e 	bne	r8,zero,26118 <__alt_data_end+0xfffe6d18>
   26138:	010000c4 	movi	r4,3
   2613c:	21c02d2e 	bgeu	r4,r7,261f4 <memset+0x100>
   26140:	29003fcc 	andi	r4,r5,255
   26144:	200c923a 	slli	r6,r4,8
   26148:	3108b03a 	or	r4,r6,r4
   2614c:	200c943a 	slli	r6,r4,16
   26150:	218cb03a 	or	r6,r4,r6
   26154:	010003c4 	movi	r4,15
   26158:	21c0182e 	bgeu	r4,r7,261bc <memset+0xc8>
   2615c:	3b3ffc04 	addi	r12,r7,-16
   26160:	6018d13a 	srli	r12,r12,4
   26164:	1a000104 	addi	r8,r3,4
   26168:	1ac00204 	addi	r11,r3,8
   2616c:	6008913a 	slli	r4,r12,4
   26170:	1a800304 	addi	r10,r3,12
   26174:	1813883a 	mov	r9,r3
   26178:	21000504 	addi	r4,r4,20
   2617c:	1909883a 	add	r4,r3,r4
   26180:	49800015 	stw	r6,0(r9)
   26184:	41800015 	stw	r6,0(r8)
   26188:	59800015 	stw	r6,0(r11)
   2618c:	51800015 	stw	r6,0(r10)
   26190:	42000404 	addi	r8,r8,16
   26194:	4a400404 	addi	r9,r9,16
   26198:	5ac00404 	addi	r11,r11,16
   2619c:	52800404 	addi	r10,r10,16
   261a0:	413ff71e 	bne	r8,r4,26180 <__alt_data_end+0xfffe6d80>
   261a4:	63000044 	addi	r12,r12,1
   261a8:	6018913a 	slli	r12,r12,4
   261ac:	39c003cc 	andi	r7,r7,15
   261b0:	010000c4 	movi	r4,3
   261b4:	1b07883a 	add	r3,r3,r12
   261b8:	21c00e2e 	bgeu	r4,r7,261f4 <memset+0x100>
   261bc:	1813883a 	mov	r9,r3
   261c0:	3811883a 	mov	r8,r7
   261c4:	010000c4 	movi	r4,3
   261c8:	49800015 	stw	r6,0(r9)
   261cc:	423fff04 	addi	r8,r8,-4
   261d0:	4a400104 	addi	r9,r9,4
   261d4:	223ffc36 	bltu	r4,r8,261c8 <__alt_data_end+0xfffe6dc8>
   261d8:	393fff04 	addi	r4,r7,-4
   261dc:	2008d0ba 	srli	r4,r4,2
   261e0:	39c000cc 	andi	r7,r7,3
   261e4:	21000044 	addi	r4,r4,1
   261e8:	2109883a 	add	r4,r4,r4
   261ec:	2109883a 	add	r4,r4,r4
   261f0:	1907883a 	add	r3,r3,r4
   261f4:	38000526 	beq	r7,zero,2620c <memset+0x118>
   261f8:	19cf883a 	add	r7,r3,r7
   261fc:	19400005 	stb	r5,0(r3)
   26200:	18c00044 	addi	r3,r3,1
   26204:	38fffd1e 	bne	r7,r3,261fc <__alt_data_end+0xfffe6dfc>
   26208:	f800283a 	ret
   2620c:	f800283a 	ret
   26210:	2007883a 	mov	r3,r4
   26214:	300f883a 	mov	r7,r6
   26218:	003fc706 	br	26138 <__alt_data_end+0xfffe6d38>

0002621c <_Balloc>:
   2621c:	20801317 	ldw	r2,76(r4)
   26220:	defffc04 	addi	sp,sp,-16
   26224:	dc400115 	stw	r17,4(sp)
   26228:	dc000015 	stw	r16,0(sp)
   2622c:	dfc00315 	stw	ra,12(sp)
   26230:	dc800215 	stw	r18,8(sp)
   26234:	2023883a 	mov	r17,r4
   26238:	2821883a 	mov	r16,r5
   2623c:	10000f26 	beq	r2,zero,2627c <_Balloc+0x60>
   26240:	8407883a 	add	r3,r16,r16
   26244:	18c7883a 	add	r3,r3,r3
   26248:	10c7883a 	add	r3,r2,r3
   2624c:	18800017 	ldw	r2,0(r3)
   26250:	10001126 	beq	r2,zero,26298 <_Balloc+0x7c>
   26254:	11000017 	ldw	r4,0(r2)
   26258:	19000015 	stw	r4,0(r3)
   2625c:	10000415 	stw	zero,16(r2)
   26260:	10000315 	stw	zero,12(r2)
   26264:	dfc00317 	ldw	ra,12(sp)
   26268:	dc800217 	ldw	r18,8(sp)
   2626c:	dc400117 	ldw	r17,4(sp)
   26270:	dc000017 	ldw	r16,0(sp)
   26274:	dec00404 	addi	sp,sp,16
   26278:	f800283a 	ret
   2627c:	01800844 	movi	r6,33
   26280:	01400104 	movi	r5,4
   26284:	0028d1c0 	call	28d1c <_calloc_r>
   26288:	88801315 	stw	r2,76(r17)
   2628c:	103fec1e 	bne	r2,zero,26240 <__alt_data_end+0xfffe6e40>
   26290:	0005883a 	mov	r2,zero
   26294:	003ff306 	br	26264 <__alt_data_end+0xfffe6e64>
   26298:	01400044 	movi	r5,1
   2629c:	2c24983a 	sll	r18,r5,r16
   262a0:	8809883a 	mov	r4,r17
   262a4:	91800144 	addi	r6,r18,5
   262a8:	318d883a 	add	r6,r6,r6
   262ac:	318d883a 	add	r6,r6,r6
   262b0:	0028d1c0 	call	28d1c <_calloc_r>
   262b4:	103ff626 	beq	r2,zero,26290 <__alt_data_end+0xfffe6e90>
   262b8:	14000115 	stw	r16,4(r2)
   262bc:	14800215 	stw	r18,8(r2)
   262c0:	003fe606 	br	2625c <__alt_data_end+0xfffe6e5c>

000262c4 <_Bfree>:
   262c4:	28000826 	beq	r5,zero,262e8 <_Bfree+0x24>
   262c8:	28c00117 	ldw	r3,4(r5)
   262cc:	20801317 	ldw	r2,76(r4)
   262d0:	18c7883a 	add	r3,r3,r3
   262d4:	18c7883a 	add	r3,r3,r3
   262d8:	10c5883a 	add	r2,r2,r3
   262dc:	10c00017 	ldw	r3,0(r2)
   262e0:	28c00015 	stw	r3,0(r5)
   262e4:	11400015 	stw	r5,0(r2)
   262e8:	f800283a 	ret

000262ec <__multadd>:
   262ec:	defff704 	addi	sp,sp,-36
   262f0:	dc800215 	stw	r18,8(sp)
   262f4:	2c800417 	ldw	r18,16(r5)
   262f8:	dd800615 	stw	r22,24(sp)
   262fc:	dd400515 	stw	r21,20(sp)
   26300:	dd000415 	stw	r20,16(sp)
   26304:	dcc00315 	stw	r19,12(sp)
   26308:	dc400115 	stw	r17,4(sp)
   2630c:	dc000015 	stw	r16,0(sp)
   26310:	dfc00815 	stw	ra,32(sp)
   26314:	ddc00715 	stw	r23,28(sp)
   26318:	2827883a 	mov	r19,r5
   2631c:	2029883a 	mov	r20,r4
   26320:	3023883a 	mov	r17,r6
   26324:	3821883a 	mov	r16,r7
   26328:	2d400504 	addi	r21,r5,20
   2632c:	002d883a 	mov	r22,zero
   26330:	adc00017 	ldw	r23,0(r21)
   26334:	880b883a 	mov	r5,r17
   26338:	ad400104 	addi	r21,r21,4
   2633c:	b93fffcc 	andi	r4,r23,65535
   26340:	002aeb00 	call	2aeb0 <__mulsi3>
   26344:	b808d43a 	srli	r4,r23,16
   26348:	880b883a 	mov	r5,r17
   2634c:	1421883a 	add	r16,r2,r16
   26350:	002aeb00 	call	2aeb0 <__mulsi3>
   26354:	800ed43a 	srli	r7,r16,16
   26358:	80ffffcc 	andi	r3,r16,65535
   2635c:	b5800044 	addi	r22,r22,1
   26360:	11c5883a 	add	r2,r2,r7
   26364:	100e943a 	slli	r7,r2,16
   26368:	1020d43a 	srli	r16,r2,16
   2636c:	38c7883a 	add	r3,r7,r3
   26370:	a8ffff15 	stw	r3,-4(r21)
   26374:	b4bfee16 	blt	r22,r18,26330 <__alt_data_end+0xfffe6f30>
   26378:	80000926 	beq	r16,zero,263a0 <__multadd+0xb4>
   2637c:	98800217 	ldw	r2,8(r19)
   26380:	9080130e 	bge	r18,r2,263d0 <__multadd+0xe4>
   26384:	90800144 	addi	r2,r18,5
   26388:	1085883a 	add	r2,r2,r2
   2638c:	1085883a 	add	r2,r2,r2
   26390:	9885883a 	add	r2,r19,r2
   26394:	14000015 	stw	r16,0(r2)
   26398:	94800044 	addi	r18,r18,1
   2639c:	9c800415 	stw	r18,16(r19)
   263a0:	9805883a 	mov	r2,r19
   263a4:	dfc00817 	ldw	ra,32(sp)
   263a8:	ddc00717 	ldw	r23,28(sp)
   263ac:	dd800617 	ldw	r22,24(sp)
   263b0:	dd400517 	ldw	r21,20(sp)
   263b4:	dd000417 	ldw	r20,16(sp)
   263b8:	dcc00317 	ldw	r19,12(sp)
   263bc:	dc800217 	ldw	r18,8(sp)
   263c0:	dc400117 	ldw	r17,4(sp)
   263c4:	dc000017 	ldw	r16,0(sp)
   263c8:	dec00904 	addi	sp,sp,36
   263cc:	f800283a 	ret
   263d0:	99400117 	ldw	r5,4(r19)
   263d4:	a009883a 	mov	r4,r20
   263d8:	29400044 	addi	r5,r5,1
   263dc:	002621c0 	call	2621c <_Balloc>
   263e0:	99800417 	ldw	r6,16(r19)
   263e4:	99400304 	addi	r5,r19,12
   263e8:	11000304 	addi	r4,r2,12
   263ec:	31800084 	addi	r6,r6,2
   263f0:	318d883a 	add	r6,r6,r6
   263f4:	318d883a 	add	r6,r6,r6
   263f8:	1023883a 	mov	r17,r2
   263fc:	0025fac0 	call	25fac <memcpy>
   26400:	98000a26 	beq	r19,zero,2642c <__multadd+0x140>
   26404:	98c00117 	ldw	r3,4(r19)
   26408:	a0801317 	ldw	r2,76(r20)
   2640c:	18c7883a 	add	r3,r3,r3
   26410:	18c7883a 	add	r3,r3,r3
   26414:	10c5883a 	add	r2,r2,r3
   26418:	10c00017 	ldw	r3,0(r2)
   2641c:	98c00015 	stw	r3,0(r19)
   26420:	14c00015 	stw	r19,0(r2)
   26424:	8827883a 	mov	r19,r17
   26428:	003fd606 	br	26384 <__alt_data_end+0xfffe6f84>
   2642c:	8827883a 	mov	r19,r17
   26430:	003fd406 	br	26384 <__alt_data_end+0xfffe6f84>

00026434 <__s2b>:
   26434:	defff904 	addi	sp,sp,-28
   26438:	dc400115 	stw	r17,4(sp)
   2643c:	dc000015 	stw	r16,0(sp)
   26440:	2023883a 	mov	r17,r4
   26444:	2821883a 	mov	r16,r5
   26448:	39000204 	addi	r4,r7,8
   2644c:	01400244 	movi	r5,9
   26450:	dcc00315 	stw	r19,12(sp)
   26454:	dc800215 	stw	r18,8(sp)
   26458:	dfc00615 	stw	ra,24(sp)
   2645c:	dd400515 	stw	r21,20(sp)
   26460:	dd000415 	stw	r20,16(sp)
   26464:	3825883a 	mov	r18,r7
   26468:	3027883a 	mov	r19,r6
   2646c:	002acfc0 	call	2acfc <__divsi3>
   26470:	00c00044 	movi	r3,1
   26474:	000b883a 	mov	r5,zero
   26478:	1880030e 	bge	r3,r2,26488 <__s2b+0x54>
   2647c:	18c7883a 	add	r3,r3,r3
   26480:	29400044 	addi	r5,r5,1
   26484:	18bffd16 	blt	r3,r2,2647c <__alt_data_end+0xfffe707c>
   26488:	8809883a 	mov	r4,r17
   2648c:	002621c0 	call	2621c <_Balloc>
   26490:	d8c00717 	ldw	r3,28(sp)
   26494:	10c00515 	stw	r3,20(r2)
   26498:	00c00044 	movi	r3,1
   2649c:	10c00415 	stw	r3,16(r2)
   264a0:	00c00244 	movi	r3,9
   264a4:	1cc0210e 	bge	r3,r19,2652c <__s2b+0xf8>
   264a8:	80eb883a 	add	r21,r16,r3
   264ac:	a829883a 	mov	r20,r21
   264b0:	84e1883a 	add	r16,r16,r19
   264b4:	a1c00007 	ldb	r7,0(r20)
   264b8:	01800284 	movi	r6,10
   264bc:	a5000044 	addi	r20,r20,1
   264c0:	100b883a 	mov	r5,r2
   264c4:	39fff404 	addi	r7,r7,-48
   264c8:	8809883a 	mov	r4,r17
   264cc:	00262ec0 	call	262ec <__multadd>
   264d0:	a43ff81e 	bne	r20,r16,264b4 <__alt_data_end+0xfffe70b4>
   264d4:	ace1883a 	add	r16,r21,r19
   264d8:	843ffe04 	addi	r16,r16,-8
   264dc:	9c800a0e 	bge	r19,r18,26508 <__s2b+0xd4>
   264e0:	94e5c83a 	sub	r18,r18,r19
   264e4:	84a5883a 	add	r18,r16,r18
   264e8:	81c00007 	ldb	r7,0(r16)
   264ec:	01800284 	movi	r6,10
   264f0:	84000044 	addi	r16,r16,1
   264f4:	100b883a 	mov	r5,r2
   264f8:	39fff404 	addi	r7,r7,-48
   264fc:	8809883a 	mov	r4,r17
   26500:	00262ec0 	call	262ec <__multadd>
   26504:	84bff81e 	bne	r16,r18,264e8 <__alt_data_end+0xfffe70e8>
   26508:	dfc00617 	ldw	ra,24(sp)
   2650c:	dd400517 	ldw	r21,20(sp)
   26510:	dd000417 	ldw	r20,16(sp)
   26514:	dcc00317 	ldw	r19,12(sp)
   26518:	dc800217 	ldw	r18,8(sp)
   2651c:	dc400117 	ldw	r17,4(sp)
   26520:	dc000017 	ldw	r16,0(sp)
   26524:	dec00704 	addi	sp,sp,28
   26528:	f800283a 	ret
   2652c:	84000284 	addi	r16,r16,10
   26530:	1827883a 	mov	r19,r3
   26534:	003fe906 	br	264dc <__alt_data_end+0xfffe70dc>

00026538 <__hi0bits>:
   26538:	20bfffec 	andhi	r2,r4,65535
   2653c:	1000141e 	bne	r2,zero,26590 <__hi0bits+0x58>
   26540:	2008943a 	slli	r4,r4,16
   26544:	00800404 	movi	r2,16
   26548:	20ffc02c 	andhi	r3,r4,65280
   2654c:	1800021e 	bne	r3,zero,26558 <__hi0bits+0x20>
   26550:	2008923a 	slli	r4,r4,8
   26554:	10800204 	addi	r2,r2,8
   26558:	20fc002c 	andhi	r3,r4,61440
   2655c:	1800021e 	bne	r3,zero,26568 <__hi0bits+0x30>
   26560:	2008913a 	slli	r4,r4,4
   26564:	10800104 	addi	r2,r2,4
   26568:	20f0002c 	andhi	r3,r4,49152
   2656c:	1800031e 	bne	r3,zero,2657c <__hi0bits+0x44>
   26570:	2109883a 	add	r4,r4,r4
   26574:	10800084 	addi	r2,r2,2
   26578:	2109883a 	add	r4,r4,r4
   2657c:	20000316 	blt	r4,zero,2658c <__hi0bits+0x54>
   26580:	2110002c 	andhi	r4,r4,16384
   26584:	2000041e 	bne	r4,zero,26598 <__hi0bits+0x60>
   26588:	00800804 	movi	r2,32
   2658c:	f800283a 	ret
   26590:	0005883a 	mov	r2,zero
   26594:	003fec06 	br	26548 <__alt_data_end+0xfffe7148>
   26598:	10800044 	addi	r2,r2,1
   2659c:	f800283a 	ret

000265a0 <__lo0bits>:
   265a0:	20c00017 	ldw	r3,0(r4)
   265a4:	188001cc 	andi	r2,r3,7
   265a8:	10000826 	beq	r2,zero,265cc <__lo0bits+0x2c>
   265ac:	1880004c 	andi	r2,r3,1
   265b0:	1000211e 	bne	r2,zero,26638 <__lo0bits+0x98>
   265b4:	1880008c 	andi	r2,r3,2
   265b8:	1000211e 	bne	r2,zero,26640 <__lo0bits+0xa0>
   265bc:	1806d0ba 	srli	r3,r3,2
   265c0:	00800084 	movi	r2,2
   265c4:	20c00015 	stw	r3,0(r4)
   265c8:	f800283a 	ret
   265cc:	18bfffcc 	andi	r2,r3,65535
   265d0:	10001326 	beq	r2,zero,26620 <__lo0bits+0x80>
   265d4:	0005883a 	mov	r2,zero
   265d8:	19403fcc 	andi	r5,r3,255
   265dc:	2800021e 	bne	r5,zero,265e8 <__lo0bits+0x48>
   265e0:	1806d23a 	srli	r3,r3,8
   265e4:	10800204 	addi	r2,r2,8
   265e8:	194003cc 	andi	r5,r3,15
   265ec:	2800021e 	bne	r5,zero,265f8 <__lo0bits+0x58>
   265f0:	1806d13a 	srli	r3,r3,4
   265f4:	10800104 	addi	r2,r2,4
   265f8:	194000cc 	andi	r5,r3,3
   265fc:	2800021e 	bne	r5,zero,26608 <__lo0bits+0x68>
   26600:	1806d0ba 	srli	r3,r3,2
   26604:	10800084 	addi	r2,r2,2
   26608:	1940004c 	andi	r5,r3,1
   2660c:	2800081e 	bne	r5,zero,26630 <__lo0bits+0x90>
   26610:	1806d07a 	srli	r3,r3,1
   26614:	1800051e 	bne	r3,zero,2662c <__lo0bits+0x8c>
   26618:	00800804 	movi	r2,32
   2661c:	f800283a 	ret
   26620:	1806d43a 	srli	r3,r3,16
   26624:	00800404 	movi	r2,16
   26628:	003feb06 	br	265d8 <__alt_data_end+0xfffe71d8>
   2662c:	10800044 	addi	r2,r2,1
   26630:	20c00015 	stw	r3,0(r4)
   26634:	f800283a 	ret
   26638:	0005883a 	mov	r2,zero
   2663c:	f800283a 	ret
   26640:	1806d07a 	srli	r3,r3,1
   26644:	00800044 	movi	r2,1
   26648:	20c00015 	stw	r3,0(r4)
   2664c:	f800283a 	ret

00026650 <__i2b>:
   26650:	defffd04 	addi	sp,sp,-12
   26654:	dc000015 	stw	r16,0(sp)
   26658:	04000044 	movi	r16,1
   2665c:	dc400115 	stw	r17,4(sp)
   26660:	2823883a 	mov	r17,r5
   26664:	800b883a 	mov	r5,r16
   26668:	dfc00215 	stw	ra,8(sp)
   2666c:	002621c0 	call	2621c <_Balloc>
   26670:	14400515 	stw	r17,20(r2)
   26674:	14000415 	stw	r16,16(r2)
   26678:	dfc00217 	ldw	ra,8(sp)
   2667c:	dc400117 	ldw	r17,4(sp)
   26680:	dc000017 	ldw	r16,0(sp)
   26684:	dec00304 	addi	sp,sp,12
   26688:	f800283a 	ret

0002668c <__multiply>:
   2668c:	deffef04 	addi	sp,sp,-68
   26690:	dc400815 	stw	r17,32(sp)
   26694:	dc000715 	stw	r16,28(sp)
   26698:	34400417 	ldw	r17,16(r6)
   2669c:	2c000417 	ldw	r16,16(r5)
   266a0:	dd800d15 	stw	r22,52(sp)
   266a4:	dc800915 	stw	r18,36(sp)
   266a8:	dfc01015 	stw	ra,64(sp)
   266ac:	df000f15 	stw	fp,60(sp)
   266b0:	ddc00e15 	stw	r23,56(sp)
   266b4:	dd400c15 	stw	r21,48(sp)
   266b8:	dd000b15 	stw	r20,44(sp)
   266bc:	dcc00a15 	stw	r19,40(sp)
   266c0:	2825883a 	mov	r18,r5
   266c4:	302d883a 	mov	r22,r6
   266c8:	8440050e 	bge	r16,r17,266e0 <__multiply+0x54>
   266cc:	8007883a 	mov	r3,r16
   266d0:	3025883a 	mov	r18,r6
   266d4:	8821883a 	mov	r16,r17
   266d8:	282d883a 	mov	r22,r5
   266dc:	1823883a 	mov	r17,r3
   266e0:	90800217 	ldw	r2,8(r18)
   266e4:	8447883a 	add	r3,r16,r17
   266e8:	d8c00215 	stw	r3,8(sp)
   266ec:	91400117 	ldw	r5,4(r18)
   266f0:	10c0010e 	bge	r2,r3,266f8 <__multiply+0x6c>
   266f4:	29400044 	addi	r5,r5,1
   266f8:	002621c0 	call	2621c <_Balloc>
   266fc:	d8c00217 	ldw	r3,8(sp)
   26700:	d8800615 	stw	r2,24(sp)
   26704:	18eb883a 	add	r21,r3,r3
   26708:	ad6b883a 	add	r21,r21,r21
   2670c:	10c00504 	addi	r3,r2,20
   26710:	1d6b883a 	add	r21,r3,r21
   26714:	d8c00115 	stw	r3,4(sp)
   26718:	dd400315 	stw	r21,12(sp)
   2671c:	1805883a 	mov	r2,r3
   26720:	1d40042e 	bgeu	r3,r21,26734 <__multiply+0xa8>
   26724:	d8c00317 	ldw	r3,12(sp)
   26728:	10000015 	stw	zero,0(r2)
   2672c:	10800104 	addi	r2,r2,4
   26730:	10fffc36 	bltu	r2,r3,26724 <__alt_data_end+0xfffe7324>
   26734:	8c63883a 	add	r17,r17,r17
   26738:	b5800504 	addi	r22,r22,20
   2673c:	8c63883a 	add	r17,r17,r17
   26740:	94800504 	addi	r18,r18,20
   26744:	8421883a 	add	r16,r16,r16
   26748:	b463883a 	add	r17,r22,r17
   2674c:	8421883a 	add	r16,r16,r16
   26750:	dd800015 	stw	r22,0(sp)
   26754:	dc800415 	stw	r18,16(sp)
   26758:	dc400515 	stw	r17,20(sp)
   2675c:	9429883a 	add	r20,r18,r16
   26760:	b4404f2e 	bgeu	r22,r17,268a0 <__multiply+0x214>
   26764:	d8c00017 	ldw	r3,0(sp)
   26768:	1c800017 	ldw	r18,0(r3)
   2676c:	947fffcc 	andi	r17,r18,65535
   26770:	88001e26 	beq	r17,zero,267ec <__multiply+0x160>
   26774:	dd800117 	ldw	r22,4(sp)
   26778:	dd400417 	ldw	r21,16(sp)
   2677c:	0027883a 	mov	r19,zero
   26780:	ac800017 	ldw	r18,0(r21)
   26784:	b4000017 	ldw	r16,0(r22)
   26788:	880b883a 	mov	r5,r17
   2678c:	913fffcc 	andi	r4,r18,65535
   26790:	002aeb00 	call	2aeb0 <__mulsi3>
   26794:	9008d43a 	srli	r4,r18,16
   26798:	84bfffcc 	andi	r18,r16,65535
   2679c:	1485883a 	add	r2,r2,r18
   267a0:	14e5883a 	add	r18,r2,r19
   267a4:	8020d43a 	srli	r16,r16,16
   267a8:	9026d43a 	srli	r19,r18,16
   267ac:	880b883a 	mov	r5,r17
   267b0:	002aeb00 	call	2aeb0 <__mulsi3>
   267b4:	1405883a 	add	r2,r2,r16
   267b8:	14e1883a 	add	r16,r2,r19
   267bc:	90ffffcc 	andi	r3,r18,65535
   267c0:	8024943a 	slli	r18,r16,16
   267c4:	ad400104 	addi	r21,r21,4
   267c8:	b005883a 	mov	r2,r22
   267cc:	90c6b03a 	or	r3,r18,r3
   267d0:	b0c00015 	stw	r3,0(r22)
   267d4:	8026d43a 	srli	r19,r16,16
   267d8:	b5800104 	addi	r22,r22,4
   267dc:	ad3fe836 	bltu	r21,r20,26780 <__alt_data_end+0xfffe7380>
   267e0:	d8c00017 	ldw	r3,0(sp)
   267e4:	14c00115 	stw	r19,4(r2)
   267e8:	1c800017 	ldw	r18,0(r3)
   267ec:	9024d43a 	srli	r18,r18,16
   267f0:	90002226 	beq	r18,zero,2687c <__multiply+0x1f0>
   267f4:	d8c00117 	ldw	r3,4(sp)
   267f8:	dd800417 	ldw	r22,16(sp)
   267fc:	002f883a 	mov	r23,zero
   26800:	1f000017 	ldw	fp,0(r3)
   26804:	1823883a 	mov	r17,r3
   26808:	182b883a 	mov	r21,r3
   2680c:	e021883a 	mov	r16,fp
   26810:	00000106 	br	26818 <__multiply+0x18c>
   26814:	982b883a 	mov	r21,r19
   26818:	b100000b 	ldhu	r4,0(r22)
   2681c:	8020d43a 	srli	r16,r16,16
   26820:	900b883a 	mov	r5,r18
   26824:	002aeb00 	call	2aeb0 <__mulsi3>
   26828:	1405883a 	add	r2,r2,r16
   2682c:	15ef883a 	add	r23,r2,r23
   26830:	b804943a 	slli	r2,r23,16
   26834:	e0ffffcc 	andi	r3,fp,65535
   26838:	8c400104 	addi	r17,r17,4
   2683c:	10c6b03a 	or	r3,r2,r3
   26840:	88ffff15 	stw	r3,-4(r17)
   26844:	b5800104 	addi	r22,r22,4
   26848:	b13fff17 	ldw	r4,-4(r22)
   2684c:	acc00104 	addi	r19,r21,4
   26850:	900b883a 	mov	r5,r18
   26854:	2008d43a 	srli	r4,r4,16
   26858:	9c000017 	ldw	r16,0(r19)
   2685c:	002aeb00 	call	2aeb0 <__mulsi3>
   26860:	b806d43a 	srli	r3,r23,16
   26864:	813fffcc 	andi	r4,r16,65535
   26868:	1105883a 	add	r2,r2,r4
   2686c:	10f9883a 	add	fp,r2,r3
   26870:	e02ed43a 	srli	r23,fp,16
   26874:	b53fe736 	bltu	r22,r20,26814 <__alt_data_end+0xfffe7414>
   26878:	af000115 	stw	fp,4(r21)
   2687c:	d8c00017 	ldw	r3,0(sp)
   26880:	d9000517 	ldw	r4,20(sp)
   26884:	18c00104 	addi	r3,r3,4
   26888:	d8c00015 	stw	r3,0(sp)
   2688c:	d8c00117 	ldw	r3,4(sp)
   26890:	18c00104 	addi	r3,r3,4
   26894:	d8c00115 	stw	r3,4(sp)
   26898:	d8c00017 	ldw	r3,0(sp)
   2689c:	193fb136 	bltu	r3,r4,26764 <__alt_data_end+0xfffe7364>
   268a0:	d8c00217 	ldw	r3,8(sp)
   268a4:	00c00c0e 	bge	zero,r3,268d8 <__multiply+0x24c>
   268a8:	d8c00317 	ldw	r3,12(sp)
   268ac:	18bfff17 	ldw	r2,-4(r3)
   268b0:	1d7fff04 	addi	r21,r3,-4
   268b4:	10000326 	beq	r2,zero,268c4 <__multiply+0x238>
   268b8:	00000706 	br	268d8 <__multiply+0x24c>
   268bc:	a8800017 	ldw	r2,0(r21)
   268c0:	1000051e 	bne	r2,zero,268d8 <__multiply+0x24c>
   268c4:	d8c00217 	ldw	r3,8(sp)
   268c8:	ad7fff04 	addi	r21,r21,-4
   268cc:	18ffffc4 	addi	r3,r3,-1
   268d0:	d8c00215 	stw	r3,8(sp)
   268d4:	183ff91e 	bne	r3,zero,268bc <__alt_data_end+0xfffe74bc>
   268d8:	d8c00617 	ldw	r3,24(sp)
   268dc:	d9000217 	ldw	r4,8(sp)
   268e0:	1805883a 	mov	r2,r3
   268e4:	19000415 	stw	r4,16(r3)
   268e8:	dfc01017 	ldw	ra,64(sp)
   268ec:	df000f17 	ldw	fp,60(sp)
   268f0:	ddc00e17 	ldw	r23,56(sp)
   268f4:	dd800d17 	ldw	r22,52(sp)
   268f8:	dd400c17 	ldw	r21,48(sp)
   268fc:	dd000b17 	ldw	r20,44(sp)
   26900:	dcc00a17 	ldw	r19,40(sp)
   26904:	dc800917 	ldw	r18,36(sp)
   26908:	dc400817 	ldw	r17,32(sp)
   2690c:	dc000717 	ldw	r16,28(sp)
   26910:	dec01104 	addi	sp,sp,68
   26914:	f800283a 	ret

00026918 <__pow5mult>:
   26918:	defffa04 	addi	sp,sp,-24
   2691c:	dcc00315 	stw	r19,12(sp)
   26920:	dc000015 	stw	r16,0(sp)
   26924:	dfc00515 	stw	ra,20(sp)
   26928:	dd000415 	stw	r20,16(sp)
   2692c:	dc800215 	stw	r18,8(sp)
   26930:	dc400115 	stw	r17,4(sp)
   26934:	308000cc 	andi	r2,r6,3
   26938:	3021883a 	mov	r16,r6
   2693c:	2027883a 	mov	r19,r4
   26940:	10002f1e 	bne	r2,zero,26a00 <__pow5mult+0xe8>
   26944:	2825883a 	mov	r18,r5
   26948:	8021d0ba 	srai	r16,r16,2
   2694c:	80001a26 	beq	r16,zero,269b8 <__pow5mult+0xa0>
   26950:	9c401217 	ldw	r17,72(r19)
   26954:	8800061e 	bne	r17,zero,26970 <__pow5mult+0x58>
   26958:	00003406 	br	26a2c <__pow5mult+0x114>
   2695c:	8021d07a 	srai	r16,r16,1
   26960:	80001526 	beq	r16,zero,269b8 <__pow5mult+0xa0>
   26964:	88800017 	ldw	r2,0(r17)
   26968:	10001c26 	beq	r2,zero,269dc <__pow5mult+0xc4>
   2696c:	1023883a 	mov	r17,r2
   26970:	8080004c 	andi	r2,r16,1
   26974:	103ff926 	beq	r2,zero,2695c <__alt_data_end+0xfffe755c>
   26978:	880d883a 	mov	r6,r17
   2697c:	900b883a 	mov	r5,r18
   26980:	9809883a 	mov	r4,r19
   26984:	002668c0 	call	2668c <__multiply>
   26988:	90001b26 	beq	r18,zero,269f8 <__pow5mult+0xe0>
   2698c:	91000117 	ldw	r4,4(r18)
   26990:	98c01317 	ldw	r3,76(r19)
   26994:	8021d07a 	srai	r16,r16,1
   26998:	2109883a 	add	r4,r4,r4
   2699c:	2109883a 	add	r4,r4,r4
   269a0:	1907883a 	add	r3,r3,r4
   269a4:	19000017 	ldw	r4,0(r3)
   269a8:	91000015 	stw	r4,0(r18)
   269ac:	1c800015 	stw	r18,0(r3)
   269b0:	1025883a 	mov	r18,r2
   269b4:	803feb1e 	bne	r16,zero,26964 <__alt_data_end+0xfffe7564>
   269b8:	9005883a 	mov	r2,r18
   269bc:	dfc00517 	ldw	ra,20(sp)
   269c0:	dd000417 	ldw	r20,16(sp)
   269c4:	dcc00317 	ldw	r19,12(sp)
   269c8:	dc800217 	ldw	r18,8(sp)
   269cc:	dc400117 	ldw	r17,4(sp)
   269d0:	dc000017 	ldw	r16,0(sp)
   269d4:	dec00604 	addi	sp,sp,24
   269d8:	f800283a 	ret
   269dc:	880d883a 	mov	r6,r17
   269e0:	880b883a 	mov	r5,r17
   269e4:	9809883a 	mov	r4,r19
   269e8:	002668c0 	call	2668c <__multiply>
   269ec:	88800015 	stw	r2,0(r17)
   269f0:	10000015 	stw	zero,0(r2)
   269f4:	003fdd06 	br	2696c <__alt_data_end+0xfffe756c>
   269f8:	1025883a 	mov	r18,r2
   269fc:	003fd706 	br	2695c <__alt_data_end+0xfffe755c>
   26a00:	10bfffc4 	addi	r2,r2,-1
   26a04:	1085883a 	add	r2,r2,r2
   26a08:	00c000f4 	movhi	r3,3
   26a0c:	18ffdc04 	addi	r3,r3,-144
   26a10:	1085883a 	add	r2,r2,r2
   26a14:	1885883a 	add	r2,r3,r2
   26a18:	11800017 	ldw	r6,0(r2)
   26a1c:	000f883a 	mov	r7,zero
   26a20:	00262ec0 	call	262ec <__multadd>
   26a24:	1025883a 	mov	r18,r2
   26a28:	003fc706 	br	26948 <__alt_data_end+0xfffe7548>
   26a2c:	05000044 	movi	r20,1
   26a30:	a00b883a 	mov	r5,r20
   26a34:	9809883a 	mov	r4,r19
   26a38:	002621c0 	call	2621c <_Balloc>
   26a3c:	1023883a 	mov	r17,r2
   26a40:	00809c44 	movi	r2,625
   26a44:	88800515 	stw	r2,20(r17)
   26a48:	8d000415 	stw	r20,16(r17)
   26a4c:	9c401215 	stw	r17,72(r19)
   26a50:	88000015 	stw	zero,0(r17)
   26a54:	003fc606 	br	26970 <__alt_data_end+0xfffe7570>

00026a58 <__lshift>:
   26a58:	defff904 	addi	sp,sp,-28
   26a5c:	dd400515 	stw	r21,20(sp)
   26a60:	dcc00315 	stw	r19,12(sp)
   26a64:	302bd17a 	srai	r21,r6,5
   26a68:	2cc00417 	ldw	r19,16(r5)
   26a6c:	28800217 	ldw	r2,8(r5)
   26a70:	dd000415 	stw	r20,16(sp)
   26a74:	ace7883a 	add	r19,r21,r19
   26a78:	dc800215 	stw	r18,8(sp)
   26a7c:	dc400115 	stw	r17,4(sp)
   26a80:	dc000015 	stw	r16,0(sp)
   26a84:	dfc00615 	stw	ra,24(sp)
   26a88:	9c000044 	addi	r16,r19,1
   26a8c:	2823883a 	mov	r17,r5
   26a90:	3029883a 	mov	r20,r6
   26a94:	2025883a 	mov	r18,r4
   26a98:	29400117 	ldw	r5,4(r5)
   26a9c:	1400030e 	bge	r2,r16,26aac <__lshift+0x54>
   26aa0:	1085883a 	add	r2,r2,r2
   26aa4:	29400044 	addi	r5,r5,1
   26aa8:	143ffd16 	blt	r2,r16,26aa0 <__alt_data_end+0xfffe76a0>
   26aac:	9009883a 	mov	r4,r18
   26ab0:	002621c0 	call	2621c <_Balloc>
   26ab4:	10c00504 	addi	r3,r2,20
   26ab8:	0540070e 	bge	zero,r21,26ad8 <__lshift+0x80>
   26abc:	ad6b883a 	add	r21,r21,r21
   26ac0:	ad6b883a 	add	r21,r21,r21
   26ac4:	1809883a 	mov	r4,r3
   26ac8:	1d47883a 	add	r3,r3,r21
   26acc:	20000015 	stw	zero,0(r4)
   26ad0:	21000104 	addi	r4,r4,4
   26ad4:	193ffd1e 	bne	r3,r4,26acc <__alt_data_end+0xfffe76cc>
   26ad8:	8a000417 	ldw	r8,16(r17)
   26adc:	89000504 	addi	r4,r17,20
   26ae0:	a18007cc 	andi	r6,r20,31
   26ae4:	4211883a 	add	r8,r8,r8
   26ae8:	4211883a 	add	r8,r8,r8
   26aec:	2211883a 	add	r8,r4,r8
   26af0:	30002326 	beq	r6,zero,26b80 <__lshift+0x128>
   26af4:	02400804 	movi	r9,32
   26af8:	4993c83a 	sub	r9,r9,r6
   26afc:	000b883a 	mov	r5,zero
   26b00:	21c00017 	ldw	r7,0(r4)
   26b04:	1815883a 	mov	r10,r3
   26b08:	18c00104 	addi	r3,r3,4
   26b0c:	398e983a 	sll	r7,r7,r6
   26b10:	21000104 	addi	r4,r4,4
   26b14:	394ab03a 	or	r5,r7,r5
   26b18:	197fff15 	stw	r5,-4(r3)
   26b1c:	217fff17 	ldw	r5,-4(r4)
   26b20:	2a4ad83a 	srl	r5,r5,r9
   26b24:	223ff636 	bltu	r4,r8,26b00 <__alt_data_end+0xfffe7700>
   26b28:	51400115 	stw	r5,4(r10)
   26b2c:	28001a1e 	bne	r5,zero,26b98 <__lshift+0x140>
   26b30:	843fffc4 	addi	r16,r16,-1
   26b34:	14000415 	stw	r16,16(r2)
   26b38:	88000826 	beq	r17,zero,26b5c <__lshift+0x104>
   26b3c:	89000117 	ldw	r4,4(r17)
   26b40:	90c01317 	ldw	r3,76(r18)
   26b44:	2109883a 	add	r4,r4,r4
   26b48:	2109883a 	add	r4,r4,r4
   26b4c:	1907883a 	add	r3,r3,r4
   26b50:	19000017 	ldw	r4,0(r3)
   26b54:	89000015 	stw	r4,0(r17)
   26b58:	1c400015 	stw	r17,0(r3)
   26b5c:	dfc00617 	ldw	ra,24(sp)
   26b60:	dd400517 	ldw	r21,20(sp)
   26b64:	dd000417 	ldw	r20,16(sp)
   26b68:	dcc00317 	ldw	r19,12(sp)
   26b6c:	dc800217 	ldw	r18,8(sp)
   26b70:	dc400117 	ldw	r17,4(sp)
   26b74:	dc000017 	ldw	r16,0(sp)
   26b78:	dec00704 	addi	sp,sp,28
   26b7c:	f800283a 	ret
   26b80:	21400017 	ldw	r5,0(r4)
   26b84:	18c00104 	addi	r3,r3,4
   26b88:	21000104 	addi	r4,r4,4
   26b8c:	197fff15 	stw	r5,-4(r3)
   26b90:	223ffb36 	bltu	r4,r8,26b80 <__alt_data_end+0xfffe7780>
   26b94:	003fe606 	br	26b30 <__alt_data_end+0xfffe7730>
   26b98:	9c000084 	addi	r16,r19,2
   26b9c:	003fe406 	br	26b30 <__alt_data_end+0xfffe7730>

00026ba0 <__mcmp>:
   26ba0:	20800417 	ldw	r2,16(r4)
   26ba4:	28c00417 	ldw	r3,16(r5)
   26ba8:	10c5c83a 	sub	r2,r2,r3
   26bac:	1000111e 	bne	r2,zero,26bf4 <__mcmp+0x54>
   26bb0:	18c7883a 	add	r3,r3,r3
   26bb4:	18c7883a 	add	r3,r3,r3
   26bb8:	21000504 	addi	r4,r4,20
   26bbc:	29400504 	addi	r5,r5,20
   26bc0:	20c5883a 	add	r2,r4,r3
   26bc4:	28cb883a 	add	r5,r5,r3
   26bc8:	00000106 	br	26bd0 <__mcmp+0x30>
   26bcc:	20800a2e 	bgeu	r4,r2,26bf8 <__mcmp+0x58>
   26bd0:	10bfff04 	addi	r2,r2,-4
   26bd4:	297fff04 	addi	r5,r5,-4
   26bd8:	11800017 	ldw	r6,0(r2)
   26bdc:	28c00017 	ldw	r3,0(r5)
   26be0:	30fffa26 	beq	r6,r3,26bcc <__alt_data_end+0xfffe77cc>
   26be4:	30c00236 	bltu	r6,r3,26bf0 <__mcmp+0x50>
   26be8:	00800044 	movi	r2,1
   26bec:	f800283a 	ret
   26bf0:	00bfffc4 	movi	r2,-1
   26bf4:	f800283a 	ret
   26bf8:	0005883a 	mov	r2,zero
   26bfc:	f800283a 	ret

00026c00 <__mdiff>:
   26c00:	28c00417 	ldw	r3,16(r5)
   26c04:	30800417 	ldw	r2,16(r6)
   26c08:	defffa04 	addi	sp,sp,-24
   26c0c:	dcc00315 	stw	r19,12(sp)
   26c10:	dc800215 	stw	r18,8(sp)
   26c14:	dfc00515 	stw	ra,20(sp)
   26c18:	dd000415 	stw	r20,16(sp)
   26c1c:	dc400115 	stw	r17,4(sp)
   26c20:	dc000015 	stw	r16,0(sp)
   26c24:	1887c83a 	sub	r3,r3,r2
   26c28:	2825883a 	mov	r18,r5
   26c2c:	3027883a 	mov	r19,r6
   26c30:	1800141e 	bne	r3,zero,26c84 <__mdiff+0x84>
   26c34:	1085883a 	add	r2,r2,r2
   26c38:	1085883a 	add	r2,r2,r2
   26c3c:	2a000504 	addi	r8,r5,20
   26c40:	34000504 	addi	r16,r6,20
   26c44:	4087883a 	add	r3,r8,r2
   26c48:	8085883a 	add	r2,r16,r2
   26c4c:	00000106 	br	26c54 <__mdiff+0x54>
   26c50:	40c0592e 	bgeu	r8,r3,26db8 <__mdiff+0x1b8>
   26c54:	18ffff04 	addi	r3,r3,-4
   26c58:	10bfff04 	addi	r2,r2,-4
   26c5c:	19c00017 	ldw	r7,0(r3)
   26c60:	11400017 	ldw	r5,0(r2)
   26c64:	397ffa26 	beq	r7,r5,26c50 <__alt_data_end+0xfffe7850>
   26c68:	3940592e 	bgeu	r7,r5,26dd0 <__mdiff+0x1d0>
   26c6c:	9005883a 	mov	r2,r18
   26c70:	4023883a 	mov	r17,r8
   26c74:	9825883a 	mov	r18,r19
   26c78:	05000044 	movi	r20,1
   26c7c:	1027883a 	mov	r19,r2
   26c80:	00000406 	br	26c94 <__mdiff+0x94>
   26c84:	18005616 	blt	r3,zero,26de0 <__mdiff+0x1e0>
   26c88:	34400504 	addi	r17,r6,20
   26c8c:	2c000504 	addi	r16,r5,20
   26c90:	0029883a 	mov	r20,zero
   26c94:	91400117 	ldw	r5,4(r18)
   26c98:	002621c0 	call	2621c <_Balloc>
   26c9c:	92400417 	ldw	r9,16(r18)
   26ca0:	9b000417 	ldw	r12,16(r19)
   26ca4:	12c00504 	addi	r11,r2,20
   26ca8:	4a51883a 	add	r8,r9,r9
   26cac:	6319883a 	add	r12,r12,r12
   26cb0:	4211883a 	add	r8,r8,r8
   26cb4:	6319883a 	add	r12,r12,r12
   26cb8:	15000315 	stw	r20,12(r2)
   26cbc:	8211883a 	add	r8,r16,r8
   26cc0:	8b19883a 	add	r12,r17,r12
   26cc4:	0007883a 	mov	r3,zero
   26cc8:	81400017 	ldw	r5,0(r16)
   26ccc:	89c00017 	ldw	r7,0(r17)
   26cd0:	59800104 	addi	r6,r11,4
   26cd4:	293fffcc 	andi	r4,r5,65535
   26cd8:	20c7883a 	add	r3,r4,r3
   26cdc:	393fffcc 	andi	r4,r7,65535
   26ce0:	1909c83a 	sub	r4,r3,r4
   26ce4:	280ad43a 	srli	r5,r5,16
   26ce8:	380ed43a 	srli	r7,r7,16
   26cec:	2007d43a 	srai	r3,r4,16
   26cf0:	213fffcc 	andi	r4,r4,65535
   26cf4:	29cbc83a 	sub	r5,r5,r7
   26cf8:	28c7883a 	add	r3,r5,r3
   26cfc:	180a943a 	slli	r5,r3,16
   26d00:	8c400104 	addi	r17,r17,4
   26d04:	84000104 	addi	r16,r16,4
   26d08:	2908b03a 	or	r4,r5,r4
   26d0c:	59000015 	stw	r4,0(r11)
   26d10:	1807d43a 	srai	r3,r3,16
   26d14:	3015883a 	mov	r10,r6
   26d18:	3017883a 	mov	r11,r6
   26d1c:	8b3fea36 	bltu	r17,r12,26cc8 <__alt_data_end+0xfffe78c8>
   26d20:	8200162e 	bgeu	r16,r8,26d7c <__mdiff+0x17c>
   26d24:	8017883a 	mov	r11,r16
   26d28:	59400017 	ldw	r5,0(r11)
   26d2c:	31800104 	addi	r6,r6,4
   26d30:	5ac00104 	addi	r11,r11,4
   26d34:	293fffcc 	andi	r4,r5,65535
   26d38:	20c7883a 	add	r3,r4,r3
   26d3c:	280ed43a 	srli	r7,r5,16
   26d40:	180bd43a 	srai	r5,r3,16
   26d44:	193fffcc 	andi	r4,r3,65535
   26d48:	3947883a 	add	r3,r7,r5
   26d4c:	180a943a 	slli	r5,r3,16
   26d50:	1807d43a 	srai	r3,r3,16
   26d54:	2908b03a 	or	r4,r5,r4
   26d58:	313fff15 	stw	r4,-4(r6)
   26d5c:	5a3ff236 	bltu	r11,r8,26d28 <__alt_data_end+0xfffe7928>
   26d60:	0406303a 	nor	r3,zero,r16
   26d64:	1a07883a 	add	r3,r3,r8
   26d68:	1806d0ba 	srli	r3,r3,2
   26d6c:	18c00044 	addi	r3,r3,1
   26d70:	18c7883a 	add	r3,r3,r3
   26d74:	18c7883a 	add	r3,r3,r3
   26d78:	50d5883a 	add	r10,r10,r3
   26d7c:	50ffff04 	addi	r3,r10,-4
   26d80:	2000041e 	bne	r4,zero,26d94 <__mdiff+0x194>
   26d84:	18ffff04 	addi	r3,r3,-4
   26d88:	19000017 	ldw	r4,0(r3)
   26d8c:	4a7fffc4 	addi	r9,r9,-1
   26d90:	203ffc26 	beq	r4,zero,26d84 <__alt_data_end+0xfffe7984>
   26d94:	12400415 	stw	r9,16(r2)
   26d98:	dfc00517 	ldw	ra,20(sp)
   26d9c:	dd000417 	ldw	r20,16(sp)
   26da0:	dcc00317 	ldw	r19,12(sp)
   26da4:	dc800217 	ldw	r18,8(sp)
   26da8:	dc400117 	ldw	r17,4(sp)
   26dac:	dc000017 	ldw	r16,0(sp)
   26db0:	dec00604 	addi	sp,sp,24
   26db4:	f800283a 	ret
   26db8:	000b883a 	mov	r5,zero
   26dbc:	002621c0 	call	2621c <_Balloc>
   26dc0:	00c00044 	movi	r3,1
   26dc4:	10c00415 	stw	r3,16(r2)
   26dc8:	10000515 	stw	zero,20(r2)
   26dcc:	003ff206 	br	26d98 <__alt_data_end+0xfffe7998>
   26dd0:	8023883a 	mov	r17,r16
   26dd4:	0029883a 	mov	r20,zero
   26dd8:	4021883a 	mov	r16,r8
   26ddc:	003fad06 	br	26c94 <__alt_data_end+0xfffe7894>
   26de0:	9005883a 	mov	r2,r18
   26de4:	94400504 	addi	r17,r18,20
   26de8:	9c000504 	addi	r16,r19,20
   26dec:	9825883a 	mov	r18,r19
   26df0:	05000044 	movi	r20,1
   26df4:	1027883a 	mov	r19,r2
   26df8:	003fa606 	br	26c94 <__alt_data_end+0xfffe7894>

00026dfc <__ulp>:
   26dfc:	295ffc2c 	andhi	r5,r5,32752
   26e00:	00bf3034 	movhi	r2,64704
   26e04:	2887883a 	add	r3,r5,r2
   26e08:	00c0020e 	bge	zero,r3,26e14 <__ulp+0x18>
   26e0c:	0005883a 	mov	r2,zero
   26e10:	f800283a 	ret
   26e14:	00c7c83a 	sub	r3,zero,r3
   26e18:	1807d53a 	srai	r3,r3,20
   26e1c:	008004c4 	movi	r2,19
   26e20:	10c00b0e 	bge	r2,r3,26e50 <__ulp+0x54>
   26e24:	18bffb04 	addi	r2,r3,-20
   26e28:	01000784 	movi	r4,30
   26e2c:	0007883a 	mov	r3,zero
   26e30:	20800516 	blt	r4,r2,26e48 <__ulp+0x4c>
   26e34:	010007c4 	movi	r4,31
   26e38:	2089c83a 	sub	r4,r4,r2
   26e3c:	00800044 	movi	r2,1
   26e40:	1104983a 	sll	r2,r2,r4
   26e44:	f800283a 	ret
   26e48:	00800044 	movi	r2,1
   26e4c:	f800283a 	ret
   26e50:	01400234 	movhi	r5,8
   26e54:	28c7d83a 	sra	r3,r5,r3
   26e58:	0005883a 	mov	r2,zero
   26e5c:	f800283a 	ret

00026e60 <__b2d>:
   26e60:	defffa04 	addi	sp,sp,-24
   26e64:	dc000015 	stw	r16,0(sp)
   26e68:	24000417 	ldw	r16,16(r4)
   26e6c:	dc400115 	stw	r17,4(sp)
   26e70:	24400504 	addi	r17,r4,20
   26e74:	8421883a 	add	r16,r16,r16
   26e78:	8421883a 	add	r16,r16,r16
   26e7c:	8c21883a 	add	r16,r17,r16
   26e80:	dc800215 	stw	r18,8(sp)
   26e84:	84bfff17 	ldw	r18,-4(r16)
   26e88:	dd000415 	stw	r20,16(sp)
   26e8c:	dcc00315 	stw	r19,12(sp)
   26e90:	9009883a 	mov	r4,r18
   26e94:	2829883a 	mov	r20,r5
   26e98:	dfc00515 	stw	ra,20(sp)
   26e9c:	00265380 	call	26538 <__hi0bits>
   26ea0:	00c00804 	movi	r3,32
   26ea4:	1889c83a 	sub	r4,r3,r2
   26ea8:	a1000015 	stw	r4,0(r20)
   26eac:	01000284 	movi	r4,10
   26eb0:	84ffff04 	addi	r19,r16,-4
   26eb4:	20801216 	blt	r4,r2,26f00 <__b2d+0xa0>
   26eb8:	018002c4 	movi	r6,11
   26ebc:	308dc83a 	sub	r6,r6,r2
   26ec0:	9186d83a 	srl	r3,r18,r6
   26ec4:	18cffc34 	orhi	r3,r3,16368
   26ec8:	8cc0212e 	bgeu	r17,r19,26f50 <__b2d+0xf0>
   26ecc:	813ffe17 	ldw	r4,-8(r16)
   26ed0:	218cd83a 	srl	r6,r4,r6
   26ed4:	10800544 	addi	r2,r2,21
   26ed8:	9084983a 	sll	r2,r18,r2
   26edc:	1184b03a 	or	r2,r2,r6
   26ee0:	dfc00517 	ldw	ra,20(sp)
   26ee4:	dd000417 	ldw	r20,16(sp)
   26ee8:	dcc00317 	ldw	r19,12(sp)
   26eec:	dc800217 	ldw	r18,8(sp)
   26ef0:	dc400117 	ldw	r17,4(sp)
   26ef4:	dc000017 	ldw	r16,0(sp)
   26ef8:	dec00604 	addi	sp,sp,24
   26efc:	f800283a 	ret
   26f00:	8cc00f2e 	bgeu	r17,r19,26f40 <__b2d+0xe0>
   26f04:	117ffd44 	addi	r5,r2,-11
   26f08:	80bffe17 	ldw	r2,-8(r16)
   26f0c:	28000e26 	beq	r5,zero,26f48 <__b2d+0xe8>
   26f10:	1949c83a 	sub	r4,r3,r5
   26f14:	9164983a 	sll	r18,r18,r5
   26f18:	1106d83a 	srl	r3,r2,r4
   26f1c:	81bffe04 	addi	r6,r16,-8
   26f20:	948ffc34 	orhi	r18,r18,16368
   26f24:	90c6b03a 	or	r3,r18,r3
   26f28:	89800e2e 	bgeu	r17,r6,26f64 <__b2d+0x104>
   26f2c:	81bffd17 	ldw	r6,-12(r16)
   26f30:	1144983a 	sll	r2,r2,r5
   26f34:	310ad83a 	srl	r5,r6,r4
   26f38:	2884b03a 	or	r2,r5,r2
   26f3c:	003fe806 	br	26ee0 <__alt_data_end+0xfffe7ae0>
   26f40:	10bffd44 	addi	r2,r2,-11
   26f44:	1000041e 	bne	r2,zero,26f58 <__b2d+0xf8>
   26f48:	90cffc34 	orhi	r3,r18,16368
   26f4c:	003fe406 	br	26ee0 <__alt_data_end+0xfffe7ae0>
   26f50:	000d883a 	mov	r6,zero
   26f54:	003fdf06 	br	26ed4 <__alt_data_end+0xfffe7ad4>
   26f58:	90a4983a 	sll	r18,r18,r2
   26f5c:	0005883a 	mov	r2,zero
   26f60:	003ff906 	br	26f48 <__alt_data_end+0xfffe7b48>
   26f64:	1144983a 	sll	r2,r2,r5
   26f68:	003fdd06 	br	26ee0 <__alt_data_end+0xfffe7ae0>

00026f6c <__d2b>:
   26f6c:	defff804 	addi	sp,sp,-32
   26f70:	dc000215 	stw	r16,8(sp)
   26f74:	3021883a 	mov	r16,r6
   26f78:	dc400315 	stw	r17,12(sp)
   26f7c:	8022907a 	slli	r17,r16,1
   26f80:	dd000615 	stw	r20,24(sp)
   26f84:	2829883a 	mov	r20,r5
   26f88:	01400044 	movi	r5,1
   26f8c:	dcc00515 	stw	r19,20(sp)
   26f90:	dc800415 	stw	r18,16(sp)
   26f94:	dfc00715 	stw	ra,28(sp)
   26f98:	3825883a 	mov	r18,r7
   26f9c:	8822d57a 	srli	r17,r17,21
   26fa0:	002621c0 	call	2621c <_Balloc>
   26fa4:	1027883a 	mov	r19,r2
   26fa8:	00800434 	movhi	r2,16
   26fac:	10bfffc4 	addi	r2,r2,-1
   26fb0:	808c703a 	and	r6,r16,r2
   26fb4:	88000126 	beq	r17,zero,26fbc <__d2b+0x50>
   26fb8:	31800434 	orhi	r6,r6,16
   26fbc:	d9800015 	stw	r6,0(sp)
   26fc0:	a0002426 	beq	r20,zero,27054 <__d2b+0xe8>
   26fc4:	d9000104 	addi	r4,sp,4
   26fc8:	dd000115 	stw	r20,4(sp)
   26fcc:	00265a00 	call	265a0 <__lo0bits>
   26fd0:	d8c00017 	ldw	r3,0(sp)
   26fd4:	10002f1e 	bne	r2,zero,27094 <__d2b+0x128>
   26fd8:	d9000117 	ldw	r4,4(sp)
   26fdc:	99000515 	stw	r4,20(r19)
   26fe0:	1821003a 	cmpeq	r16,r3,zero
   26fe4:	01000084 	movi	r4,2
   26fe8:	2421c83a 	sub	r16,r4,r16
   26fec:	98c00615 	stw	r3,24(r19)
   26ff0:	9c000415 	stw	r16,16(r19)
   26ff4:	88001f1e 	bne	r17,zero,27074 <__d2b+0x108>
   26ff8:	10bef384 	addi	r2,r2,-1074
   26ffc:	90800015 	stw	r2,0(r18)
   27000:	00900034 	movhi	r2,16384
   27004:	10bfffc4 	addi	r2,r2,-1
   27008:	8085883a 	add	r2,r16,r2
   2700c:	1085883a 	add	r2,r2,r2
   27010:	1085883a 	add	r2,r2,r2
   27014:	9885883a 	add	r2,r19,r2
   27018:	11000517 	ldw	r4,20(r2)
   2701c:	8020917a 	slli	r16,r16,5
   27020:	00265380 	call	26538 <__hi0bits>
   27024:	d8c00817 	ldw	r3,32(sp)
   27028:	8085c83a 	sub	r2,r16,r2
   2702c:	18800015 	stw	r2,0(r3)
   27030:	9805883a 	mov	r2,r19
   27034:	dfc00717 	ldw	ra,28(sp)
   27038:	dd000617 	ldw	r20,24(sp)
   2703c:	dcc00517 	ldw	r19,20(sp)
   27040:	dc800417 	ldw	r18,16(sp)
   27044:	dc400317 	ldw	r17,12(sp)
   27048:	dc000217 	ldw	r16,8(sp)
   2704c:	dec00804 	addi	sp,sp,32
   27050:	f800283a 	ret
   27054:	d809883a 	mov	r4,sp
   27058:	00265a00 	call	265a0 <__lo0bits>
   2705c:	d8c00017 	ldw	r3,0(sp)
   27060:	04000044 	movi	r16,1
   27064:	9c000415 	stw	r16,16(r19)
   27068:	98c00515 	stw	r3,20(r19)
   2706c:	10800804 	addi	r2,r2,32
   27070:	883fe126 	beq	r17,zero,26ff8 <__alt_data_end+0xfffe7bf8>
   27074:	00c00d44 	movi	r3,53
   27078:	8c7ef344 	addi	r17,r17,-1075
   2707c:	88a3883a 	add	r17,r17,r2
   27080:	1885c83a 	sub	r2,r3,r2
   27084:	d8c00817 	ldw	r3,32(sp)
   27088:	94400015 	stw	r17,0(r18)
   2708c:	18800015 	stw	r2,0(r3)
   27090:	003fe706 	br	27030 <__alt_data_end+0xfffe7c30>
   27094:	01000804 	movi	r4,32
   27098:	2089c83a 	sub	r4,r4,r2
   2709c:	1908983a 	sll	r4,r3,r4
   270a0:	d9400117 	ldw	r5,4(sp)
   270a4:	1886d83a 	srl	r3,r3,r2
   270a8:	2148b03a 	or	r4,r4,r5
   270ac:	99000515 	stw	r4,20(r19)
   270b0:	d8c00015 	stw	r3,0(sp)
   270b4:	003fca06 	br	26fe0 <__alt_data_end+0xfffe7be0>

000270b8 <__ratio>:
   270b8:	defff904 	addi	sp,sp,-28
   270bc:	dc400315 	stw	r17,12(sp)
   270c0:	2823883a 	mov	r17,r5
   270c4:	d9400104 	addi	r5,sp,4
   270c8:	dfc00615 	stw	ra,24(sp)
   270cc:	dcc00515 	stw	r19,20(sp)
   270d0:	dc800415 	stw	r18,16(sp)
   270d4:	2027883a 	mov	r19,r4
   270d8:	dc000215 	stw	r16,8(sp)
   270dc:	0026e600 	call	26e60 <__b2d>
   270e0:	d80b883a 	mov	r5,sp
   270e4:	8809883a 	mov	r4,r17
   270e8:	1025883a 	mov	r18,r2
   270ec:	1821883a 	mov	r16,r3
   270f0:	0026e600 	call	26e60 <__b2d>
   270f4:	8a000417 	ldw	r8,16(r17)
   270f8:	99000417 	ldw	r4,16(r19)
   270fc:	d9400117 	ldw	r5,4(sp)
   27100:	2209c83a 	sub	r4,r4,r8
   27104:	2010917a 	slli	r8,r4,5
   27108:	d9000017 	ldw	r4,0(sp)
   2710c:	2909c83a 	sub	r4,r5,r4
   27110:	4109883a 	add	r4,r8,r4
   27114:	01000e0e 	bge	zero,r4,27150 <__ratio+0x98>
   27118:	2008953a 	slli	r4,r4,20
   2711c:	2421883a 	add	r16,r4,r16
   27120:	100d883a 	mov	r6,r2
   27124:	180f883a 	mov	r7,r3
   27128:	9009883a 	mov	r4,r18
   2712c:	800b883a 	mov	r5,r16
   27130:	002b7840 	call	2b784 <__divdf3>
   27134:	dfc00617 	ldw	ra,24(sp)
   27138:	dcc00517 	ldw	r19,20(sp)
   2713c:	dc800417 	ldw	r18,16(sp)
   27140:	dc400317 	ldw	r17,12(sp)
   27144:	dc000217 	ldw	r16,8(sp)
   27148:	dec00704 	addi	sp,sp,28
   2714c:	f800283a 	ret
   27150:	2008953a 	slli	r4,r4,20
   27154:	1907c83a 	sub	r3,r3,r4
   27158:	003ff106 	br	27120 <__alt_data_end+0xfffe7d20>

0002715c <_mprec_log10>:
   2715c:	defffe04 	addi	sp,sp,-8
   27160:	dc000015 	stw	r16,0(sp)
   27164:	dfc00115 	stw	ra,4(sp)
   27168:	008005c4 	movi	r2,23
   2716c:	2021883a 	mov	r16,r4
   27170:	11000d0e 	bge	r2,r4,271a8 <_mprec_log10+0x4c>
   27174:	0005883a 	mov	r2,zero
   27178:	00cffc34 	movhi	r3,16368
   2717c:	843fffc4 	addi	r16,r16,-1
   27180:	000d883a 	mov	r6,zero
   27184:	01d00934 	movhi	r7,16420
   27188:	1009883a 	mov	r4,r2
   2718c:	180b883a 	mov	r5,r3
   27190:	002c3ac0 	call	2c3ac <__muldf3>
   27194:	803ff91e 	bne	r16,zero,2717c <__alt_data_end+0xfffe7d7c>
   27198:	dfc00117 	ldw	ra,4(sp)
   2719c:	dc000017 	ldw	r16,0(sp)
   271a0:	dec00204 	addi	sp,sp,8
   271a4:	f800283a 	ret
   271a8:	202090fa 	slli	r16,r4,3
   271ac:	008000f4 	movhi	r2,3
   271b0:	10bff304 	addi	r2,r2,-52
   271b4:	1421883a 	add	r16,r2,r16
   271b8:	80800017 	ldw	r2,0(r16)
   271bc:	80c00117 	ldw	r3,4(r16)
   271c0:	dfc00117 	ldw	ra,4(sp)
   271c4:	dc000017 	ldw	r16,0(sp)
   271c8:	dec00204 	addi	sp,sp,8
   271cc:	f800283a 	ret

000271d0 <__copybits>:
   271d0:	297fffc4 	addi	r5,r5,-1
   271d4:	280fd17a 	srai	r7,r5,5
   271d8:	30c00417 	ldw	r3,16(r6)
   271dc:	30800504 	addi	r2,r6,20
   271e0:	39c00044 	addi	r7,r7,1
   271e4:	18c7883a 	add	r3,r3,r3
   271e8:	39cf883a 	add	r7,r7,r7
   271ec:	18c7883a 	add	r3,r3,r3
   271f0:	39cf883a 	add	r7,r7,r7
   271f4:	10c7883a 	add	r3,r2,r3
   271f8:	21cf883a 	add	r7,r4,r7
   271fc:	10c00d2e 	bgeu	r2,r3,27234 <__copybits+0x64>
   27200:	200b883a 	mov	r5,r4
   27204:	12000017 	ldw	r8,0(r2)
   27208:	29400104 	addi	r5,r5,4
   2720c:	10800104 	addi	r2,r2,4
   27210:	2a3fff15 	stw	r8,-4(r5)
   27214:	10fffb36 	bltu	r2,r3,27204 <__alt_data_end+0xfffe7e04>
   27218:	1985c83a 	sub	r2,r3,r6
   2721c:	10bffac4 	addi	r2,r2,-21
   27220:	1004d0ba 	srli	r2,r2,2
   27224:	10800044 	addi	r2,r2,1
   27228:	1085883a 	add	r2,r2,r2
   2722c:	1085883a 	add	r2,r2,r2
   27230:	2089883a 	add	r4,r4,r2
   27234:	21c0032e 	bgeu	r4,r7,27244 <__copybits+0x74>
   27238:	20000015 	stw	zero,0(r4)
   2723c:	21000104 	addi	r4,r4,4
   27240:	21fffd36 	bltu	r4,r7,27238 <__alt_data_end+0xfffe7e38>
   27244:	f800283a 	ret

00027248 <__any_on>:
   27248:	20c00417 	ldw	r3,16(r4)
   2724c:	2805d17a 	srai	r2,r5,5
   27250:	21000504 	addi	r4,r4,20
   27254:	18800d0e 	bge	r3,r2,2728c <__any_on+0x44>
   27258:	18c7883a 	add	r3,r3,r3
   2725c:	18c7883a 	add	r3,r3,r3
   27260:	20c7883a 	add	r3,r4,r3
   27264:	20c0192e 	bgeu	r4,r3,272cc <__any_on+0x84>
   27268:	18bfff17 	ldw	r2,-4(r3)
   2726c:	18ffff04 	addi	r3,r3,-4
   27270:	1000041e 	bne	r2,zero,27284 <__any_on+0x3c>
   27274:	20c0142e 	bgeu	r4,r3,272c8 <__any_on+0x80>
   27278:	18ffff04 	addi	r3,r3,-4
   2727c:	19400017 	ldw	r5,0(r3)
   27280:	283ffc26 	beq	r5,zero,27274 <__alt_data_end+0xfffe7e74>
   27284:	00800044 	movi	r2,1
   27288:	f800283a 	ret
   2728c:	10c00a0e 	bge	r2,r3,272b8 <__any_on+0x70>
   27290:	1085883a 	add	r2,r2,r2
   27294:	1085883a 	add	r2,r2,r2
   27298:	294007cc 	andi	r5,r5,31
   2729c:	2087883a 	add	r3,r4,r2
   272a0:	283ff026 	beq	r5,zero,27264 <__alt_data_end+0xfffe7e64>
   272a4:	19800017 	ldw	r6,0(r3)
   272a8:	3144d83a 	srl	r2,r6,r5
   272ac:	114a983a 	sll	r5,r2,r5
   272b0:	317ff41e 	bne	r6,r5,27284 <__alt_data_end+0xfffe7e84>
   272b4:	003feb06 	br	27264 <__alt_data_end+0xfffe7e64>
   272b8:	1085883a 	add	r2,r2,r2
   272bc:	1085883a 	add	r2,r2,r2
   272c0:	2087883a 	add	r3,r4,r2
   272c4:	003fe706 	br	27264 <__alt_data_end+0xfffe7e64>
   272c8:	f800283a 	ret
   272cc:	0005883a 	mov	r2,zero
   272d0:	f800283a 	ret

000272d4 <__fpclassifyd>:
   272d4:	00a00034 	movhi	r2,32768
   272d8:	10bfffc4 	addi	r2,r2,-1
   272dc:	2884703a 	and	r2,r5,r2
   272e0:	10000726 	beq	r2,zero,27300 <__fpclassifyd+0x2c>
   272e4:	00fffc34 	movhi	r3,65520
   272e8:	019ff834 	movhi	r6,32736
   272ec:	28c7883a 	add	r3,r5,r3
   272f0:	31bfffc4 	addi	r6,r6,-1
   272f4:	30c00536 	bltu	r6,r3,2730c <__fpclassifyd+0x38>
   272f8:	00800104 	movi	r2,4
   272fc:	f800283a 	ret
   27300:	2000021e 	bne	r4,zero,2730c <__fpclassifyd+0x38>
   27304:	00800084 	movi	r2,2
   27308:	f800283a 	ret
   2730c:	00dffc34 	movhi	r3,32752
   27310:	019ff834 	movhi	r6,32736
   27314:	28cb883a 	add	r5,r5,r3
   27318:	31bfffc4 	addi	r6,r6,-1
   2731c:	317ff62e 	bgeu	r6,r5,272f8 <__alt_data_end+0xfffe7ef8>
   27320:	01400434 	movhi	r5,16
   27324:	297fffc4 	addi	r5,r5,-1
   27328:	28800236 	bltu	r5,r2,27334 <__fpclassifyd+0x60>
   2732c:	008000c4 	movi	r2,3
   27330:	f800283a 	ret
   27334:	10c00226 	beq	r2,r3,27340 <__fpclassifyd+0x6c>
   27338:	0005883a 	mov	r2,zero
   2733c:	f800283a 	ret
   27340:	2005003a 	cmpeq	r2,r4,zero
   27344:	f800283a 	ret

00027348 <_sbrk_r>:
   27348:	defffd04 	addi	sp,sp,-12
   2734c:	dc000015 	stw	r16,0(sp)
   27350:	040000f4 	movhi	r16,3
   27354:	dc400115 	stw	r17,4(sp)
   27358:	840dfe04 	addi	r16,r16,14328
   2735c:	2023883a 	mov	r17,r4
   27360:	2809883a 	mov	r4,r5
   27364:	dfc00215 	stw	ra,8(sp)
   27368:	80000015 	stw	zero,0(r16)
   2736c:	002e1c40 	call	2e1c4 <sbrk>
   27370:	00ffffc4 	movi	r3,-1
   27374:	10c00526 	beq	r2,r3,2738c <_sbrk_r+0x44>
   27378:	dfc00217 	ldw	ra,8(sp)
   2737c:	dc400117 	ldw	r17,4(sp)
   27380:	dc000017 	ldw	r16,0(sp)
   27384:	dec00304 	addi	sp,sp,12
   27388:	f800283a 	ret
   2738c:	80c00017 	ldw	r3,0(r16)
   27390:	183ff926 	beq	r3,zero,27378 <__alt_data_end+0xfffe7f78>
   27394:	88c00015 	stw	r3,0(r17)
   27398:	003ff706 	br	27378 <__alt_data_end+0xfffe7f78>

0002739c <__sread>:
   2739c:	defffe04 	addi	sp,sp,-8
   273a0:	dc000015 	stw	r16,0(sp)
   273a4:	2821883a 	mov	r16,r5
   273a8:	2940038f 	ldh	r5,14(r5)
   273ac:	dfc00115 	stw	ra,4(sp)
   273b0:	00298380 	call	29838 <_read_r>
   273b4:	10000716 	blt	r2,zero,273d4 <__sread+0x38>
   273b8:	80c01417 	ldw	r3,80(r16)
   273bc:	1887883a 	add	r3,r3,r2
   273c0:	80c01415 	stw	r3,80(r16)
   273c4:	dfc00117 	ldw	ra,4(sp)
   273c8:	dc000017 	ldw	r16,0(sp)
   273cc:	dec00204 	addi	sp,sp,8
   273d0:	f800283a 	ret
   273d4:	80c0030b 	ldhu	r3,12(r16)
   273d8:	18fbffcc 	andi	r3,r3,61439
   273dc:	80c0030d 	sth	r3,12(r16)
   273e0:	dfc00117 	ldw	ra,4(sp)
   273e4:	dc000017 	ldw	r16,0(sp)
   273e8:	dec00204 	addi	sp,sp,8
   273ec:	f800283a 	ret

000273f0 <__seofread>:
   273f0:	0005883a 	mov	r2,zero
   273f4:	f800283a 	ret

000273f8 <__swrite>:
   273f8:	2880030b 	ldhu	r2,12(r5)
   273fc:	defffb04 	addi	sp,sp,-20
   27400:	dcc00315 	stw	r19,12(sp)
   27404:	dc800215 	stw	r18,8(sp)
   27408:	dc400115 	stw	r17,4(sp)
   2740c:	dc000015 	stw	r16,0(sp)
   27410:	dfc00415 	stw	ra,16(sp)
   27414:	10c0400c 	andi	r3,r2,256
   27418:	2821883a 	mov	r16,r5
   2741c:	2023883a 	mov	r17,r4
   27420:	3025883a 	mov	r18,r6
   27424:	3827883a 	mov	r19,r7
   27428:	18000526 	beq	r3,zero,27440 <__swrite+0x48>
   2742c:	2940038f 	ldh	r5,14(r5)
   27430:	01c00084 	movi	r7,2
   27434:	000d883a 	mov	r6,zero
   27438:	002967c0 	call	2967c <_lseek_r>
   2743c:	8080030b 	ldhu	r2,12(r16)
   27440:	8140038f 	ldh	r5,14(r16)
   27444:	10bbffcc 	andi	r2,r2,61439
   27448:	980f883a 	mov	r7,r19
   2744c:	900d883a 	mov	r6,r18
   27450:	8809883a 	mov	r4,r17
   27454:	8080030d 	sth	r2,12(r16)
   27458:	dfc00417 	ldw	ra,16(sp)
   2745c:	dcc00317 	ldw	r19,12(sp)
   27460:	dc800217 	ldw	r18,8(sp)
   27464:	dc400117 	ldw	r17,4(sp)
   27468:	dc000017 	ldw	r16,0(sp)
   2746c:	dec00504 	addi	sp,sp,20
   27470:	0028c681 	jmpi	28c68 <_write_r>

00027474 <__sseek>:
   27474:	defffe04 	addi	sp,sp,-8
   27478:	dc000015 	stw	r16,0(sp)
   2747c:	2821883a 	mov	r16,r5
   27480:	2940038f 	ldh	r5,14(r5)
   27484:	dfc00115 	stw	ra,4(sp)
   27488:	002967c0 	call	2967c <_lseek_r>
   2748c:	00ffffc4 	movi	r3,-1
   27490:	10c00826 	beq	r2,r3,274b4 <__sseek+0x40>
   27494:	80c0030b 	ldhu	r3,12(r16)
   27498:	80801415 	stw	r2,80(r16)
   2749c:	18c40014 	ori	r3,r3,4096
   274a0:	80c0030d 	sth	r3,12(r16)
   274a4:	dfc00117 	ldw	ra,4(sp)
   274a8:	dc000017 	ldw	r16,0(sp)
   274ac:	dec00204 	addi	sp,sp,8
   274b0:	f800283a 	ret
   274b4:	80c0030b 	ldhu	r3,12(r16)
   274b8:	18fbffcc 	andi	r3,r3,61439
   274bc:	80c0030d 	sth	r3,12(r16)
   274c0:	dfc00117 	ldw	ra,4(sp)
   274c4:	dc000017 	ldw	r16,0(sp)
   274c8:	dec00204 	addi	sp,sp,8
   274cc:	f800283a 	ret

000274d0 <__sclose>:
   274d0:	2940038f 	ldh	r5,14(r5)
   274d4:	0028cc81 	jmpi	28cc8 <_close_r>

000274d8 <strlen>:
   274d8:	208000cc 	andi	r2,r4,3
   274dc:	10002026 	beq	r2,zero,27560 <strlen+0x88>
   274e0:	20800007 	ldb	r2,0(r4)
   274e4:	10002026 	beq	r2,zero,27568 <strlen+0x90>
   274e8:	2005883a 	mov	r2,r4
   274ec:	00000206 	br	274f8 <strlen+0x20>
   274f0:	10c00007 	ldb	r3,0(r2)
   274f4:	18001826 	beq	r3,zero,27558 <strlen+0x80>
   274f8:	10800044 	addi	r2,r2,1
   274fc:	10c000cc 	andi	r3,r2,3
   27500:	183ffb1e 	bne	r3,zero,274f0 <__alt_data_end+0xfffe80f0>
   27504:	10c00017 	ldw	r3,0(r2)
   27508:	01ffbff4 	movhi	r7,65279
   2750c:	39ffbfc4 	addi	r7,r7,-257
   27510:	00ca303a 	nor	r5,zero,r3
   27514:	01a02074 	movhi	r6,32897
   27518:	19c7883a 	add	r3,r3,r7
   2751c:	31a02004 	addi	r6,r6,-32640
   27520:	1946703a 	and	r3,r3,r5
   27524:	1986703a 	and	r3,r3,r6
   27528:	1800091e 	bne	r3,zero,27550 <strlen+0x78>
   2752c:	10800104 	addi	r2,r2,4
   27530:	10c00017 	ldw	r3,0(r2)
   27534:	19cb883a 	add	r5,r3,r7
   27538:	00c6303a 	nor	r3,zero,r3
   2753c:	28c6703a 	and	r3,r5,r3
   27540:	1986703a 	and	r3,r3,r6
   27544:	183ff926 	beq	r3,zero,2752c <__alt_data_end+0xfffe812c>
   27548:	00000106 	br	27550 <strlen+0x78>
   2754c:	10800044 	addi	r2,r2,1
   27550:	10c00007 	ldb	r3,0(r2)
   27554:	183ffd1e 	bne	r3,zero,2754c <__alt_data_end+0xfffe814c>
   27558:	1105c83a 	sub	r2,r2,r4
   2755c:	f800283a 	ret
   27560:	2005883a 	mov	r2,r4
   27564:	003fe706 	br	27504 <__alt_data_end+0xfffe8104>
   27568:	0005883a 	mov	r2,zero
   2756c:	f800283a 	ret

00027570 <__sprint_r.part.0>:
   27570:	28801917 	ldw	r2,100(r5)
   27574:	defff604 	addi	sp,sp,-40
   27578:	dd400515 	stw	r21,20(sp)
   2757c:	dfc00915 	stw	ra,36(sp)
   27580:	df000815 	stw	fp,32(sp)
   27584:	ddc00715 	stw	r23,28(sp)
   27588:	dd800615 	stw	r22,24(sp)
   2758c:	dd000415 	stw	r20,16(sp)
   27590:	dcc00315 	stw	r19,12(sp)
   27594:	dc800215 	stw	r18,8(sp)
   27598:	dc400115 	stw	r17,4(sp)
   2759c:	dc000015 	stw	r16,0(sp)
   275a0:	1088000c 	andi	r2,r2,8192
   275a4:	302b883a 	mov	r21,r6
   275a8:	10002e26 	beq	r2,zero,27664 <__sprint_r.part.0+0xf4>
   275ac:	30800217 	ldw	r2,8(r6)
   275b0:	35800017 	ldw	r22,0(r6)
   275b4:	10002926 	beq	r2,zero,2765c <__sprint_r.part.0+0xec>
   275b8:	2827883a 	mov	r19,r5
   275bc:	2029883a 	mov	r20,r4
   275c0:	b5c00104 	addi	r23,r22,4
   275c4:	04bfffc4 	movi	r18,-1
   275c8:	bc400017 	ldw	r17,0(r23)
   275cc:	b4000017 	ldw	r16,0(r22)
   275d0:	0039883a 	mov	fp,zero
   275d4:	8822d0ba 	srli	r17,r17,2
   275d8:	8800031e 	bne	r17,zero,275e8 <__sprint_r.part.0+0x78>
   275dc:	00001806 	br	27640 <__sprint_r.part.0+0xd0>
   275e0:	84000104 	addi	r16,r16,4
   275e4:	8f001526 	beq	r17,fp,2763c <__sprint_r.part.0+0xcc>
   275e8:	81400017 	ldw	r5,0(r16)
   275ec:	980d883a 	mov	r6,r19
   275f0:	a009883a 	mov	r4,r20
   275f4:	00290600 	call	29060 <_fputwc_r>
   275f8:	e7000044 	addi	fp,fp,1
   275fc:	14bff81e 	bne	r2,r18,275e0 <__alt_data_end+0xfffe81e0>
   27600:	9005883a 	mov	r2,r18
   27604:	a8000215 	stw	zero,8(r21)
   27608:	a8000115 	stw	zero,4(r21)
   2760c:	dfc00917 	ldw	ra,36(sp)
   27610:	df000817 	ldw	fp,32(sp)
   27614:	ddc00717 	ldw	r23,28(sp)
   27618:	dd800617 	ldw	r22,24(sp)
   2761c:	dd400517 	ldw	r21,20(sp)
   27620:	dd000417 	ldw	r20,16(sp)
   27624:	dcc00317 	ldw	r19,12(sp)
   27628:	dc800217 	ldw	r18,8(sp)
   2762c:	dc400117 	ldw	r17,4(sp)
   27630:	dc000017 	ldw	r16,0(sp)
   27634:	dec00a04 	addi	sp,sp,40
   27638:	f800283a 	ret
   2763c:	a8800217 	ldw	r2,8(r21)
   27640:	8c63883a 	add	r17,r17,r17
   27644:	8c63883a 	add	r17,r17,r17
   27648:	1445c83a 	sub	r2,r2,r17
   2764c:	a8800215 	stw	r2,8(r21)
   27650:	b5800204 	addi	r22,r22,8
   27654:	bdc00204 	addi	r23,r23,8
   27658:	103fdb1e 	bne	r2,zero,275c8 <__alt_data_end+0xfffe81c8>
   2765c:	0005883a 	mov	r2,zero
   27660:	003fe806 	br	27604 <__alt_data_end+0xfffe8204>
   27664:	00291600 	call	29160 <__sfvwrite_r>
   27668:	003fe606 	br	27604 <__alt_data_end+0xfffe8204>

0002766c <__sprint_r>:
   2766c:	30c00217 	ldw	r3,8(r6)
   27670:	18000126 	beq	r3,zero,27678 <__sprint_r+0xc>
   27674:	00275701 	jmpi	27570 <__sprint_r.part.0>
   27678:	30000115 	stw	zero,4(r6)
   2767c:	0005883a 	mov	r2,zero
   27680:	f800283a 	ret

00027684 <___vfiprintf_internal_r>:
   27684:	deffca04 	addi	sp,sp,-216
   27688:	dd403115 	stw	r21,196(sp)
   2768c:	dfc03515 	stw	ra,212(sp)
   27690:	df003415 	stw	fp,208(sp)
   27694:	ddc03315 	stw	r23,204(sp)
   27698:	dd803215 	stw	r22,200(sp)
   2769c:	dd003015 	stw	r20,192(sp)
   276a0:	dcc02f15 	stw	r19,188(sp)
   276a4:	dc802e15 	stw	r18,184(sp)
   276a8:	dc402d15 	stw	r17,180(sp)
   276ac:	dc002c15 	stw	r16,176(sp)
   276b0:	d9002115 	stw	r4,132(sp)
   276b4:	d9402015 	stw	r5,128(sp)
   276b8:	d9c02215 	stw	r7,136(sp)
   276bc:	302b883a 	mov	r21,r6
   276c0:	20000226 	beq	r4,zero,276cc <___vfiprintf_internal_r+0x48>
   276c4:	20800e17 	ldw	r2,56(r4)
   276c8:	1000cf26 	beq	r2,zero,27a08 <___vfiprintf_internal_r+0x384>
   276cc:	d8c02017 	ldw	r3,128(sp)
   276d0:	1880030b 	ldhu	r2,12(r3)
   276d4:	10c8000c 	andi	r3,r2,8192
   276d8:	1800071e 	bne	r3,zero,276f8 <___vfiprintf_internal_r+0x74>
   276dc:	d9402017 	ldw	r5,128(sp)
   276e0:	00f7ffc4 	movi	r3,-8193
   276e4:	10880014 	ori	r2,r2,8192
   276e8:	29001917 	ldw	r4,100(r5)
   276ec:	2880030d 	sth	r2,12(r5)
   276f0:	20c6703a 	and	r3,r4,r3
   276f4:	28c01915 	stw	r3,100(r5)
   276f8:	10c0020c 	andi	r3,r2,8
   276fc:	1800a526 	beq	r3,zero,27994 <___vfiprintf_internal_r+0x310>
   27700:	d9002017 	ldw	r4,128(sp)
   27704:	20c00417 	ldw	r3,16(r4)
   27708:	1800a226 	beq	r3,zero,27994 <___vfiprintf_internal_r+0x310>
   2770c:	1080068c 	andi	r2,r2,26
   27710:	00c00284 	movi	r3,10
   27714:	10c0a826 	beq	r2,r3,279b8 <___vfiprintf_internal_r+0x334>
   27718:	d9001a04 	addi	r4,sp,104
   2771c:	d94019c4 	addi	r5,sp,103
   27720:	048000f4 	movhi	r18,3
   27724:	2145c83a 	sub	r2,r4,r5
   27728:	94802504 	addi	r18,r18,148
   2772c:	d9001e15 	stw	r4,120(sp)
   27730:	d9401f15 	stw	r5,124(sp)
   27734:	dec01a15 	stw	sp,104(sp)
   27738:	d8001c15 	stw	zero,112(sp)
   2773c:	d8001b15 	stw	zero,108(sp)
   27740:	d811883a 	mov	r8,sp
   27744:	d8002615 	stw	zero,152(sp)
   27748:	d8002415 	stw	zero,144(sp)
   2774c:	d8802815 	stw	r2,160(sp)
   27750:	a82d883a 	mov	r22,r21
   27754:	b0800007 	ldb	r2,0(r22)
   27758:	10040d26 	beq	r2,zero,28790 <___vfiprintf_internal_r+0x110c>
   2775c:	00c00944 	movi	r3,37
   27760:	b029883a 	mov	r20,r22
   27764:	10c0021e 	bne	r2,r3,27770 <___vfiprintf_internal_r+0xec>
   27768:	00001606 	br	277c4 <___vfiprintf_internal_r+0x140>
   2776c:	10c00326 	beq	r2,r3,2777c <___vfiprintf_internal_r+0xf8>
   27770:	a5000044 	addi	r20,r20,1
   27774:	a0800007 	ldb	r2,0(r20)
   27778:	103ffc1e 	bne	r2,zero,2776c <__alt_data_end+0xfffe836c>
   2777c:	a5a1c83a 	sub	r16,r20,r22
   27780:	80001026 	beq	r16,zero,277c4 <___vfiprintf_internal_r+0x140>
   27784:	d8c01c17 	ldw	r3,112(sp)
   27788:	d8801b17 	ldw	r2,108(sp)
   2778c:	45800015 	stw	r22,0(r8)
   27790:	80c7883a 	add	r3,r16,r3
   27794:	10800044 	addi	r2,r2,1
   27798:	44000115 	stw	r16,4(r8)
   2779c:	d8c01c15 	stw	r3,112(sp)
   277a0:	d8801b15 	stw	r2,108(sp)
   277a4:	010001c4 	movi	r4,7
   277a8:	2080750e 	bge	r4,r2,27980 <___vfiprintf_internal_r+0x2fc>
   277ac:	1803951e 	bne	r3,zero,28604 <___vfiprintf_internal_r+0xf80>
   277b0:	d8c02417 	ldw	r3,144(sp)
   277b4:	d8001b15 	stw	zero,108(sp)
   277b8:	d811883a 	mov	r8,sp
   277bc:	1c07883a 	add	r3,r3,r16
   277c0:	d8c02415 	stw	r3,144(sp)
   277c4:	a0800007 	ldb	r2,0(r20)
   277c8:	1002e026 	beq	r2,zero,2834c <___vfiprintf_internal_r+0xcc8>
   277cc:	a5800044 	addi	r22,r20,1
   277d0:	a0c00047 	ldb	r3,1(r20)
   277d4:	d8001d85 	stb	zero,118(sp)
   277d8:	0027883a 	mov	r19,zero
   277dc:	d8002305 	stb	zero,140(sp)
   277e0:	043fffc4 	movi	r16,-1
   277e4:	d8002515 	stw	zero,148(sp)
   277e8:	0023883a 	mov	r17,zero
   277ec:	05001604 	movi	r20,88
   277f0:	05400244 	movi	r21,9
   277f4:	402f883a 	mov	r23,r8
   277f8:	b5800044 	addi	r22,r22,1
   277fc:	18bff804 	addi	r2,r3,-32
   27800:	a0827736 	bltu	r20,r2,281e0 <___vfiprintf_internal_r+0xb5c>
   27804:	100490ba 	slli	r2,r2,2
   27808:	010000b4 	movhi	r4,2
   2780c:	211e0704 	addi	r4,r4,30748
   27810:	1105883a 	add	r2,r2,r4
   27814:	10800017 	ldw	r2,0(r2)
   27818:	1000683a 	jmp	r2
   2781c:	00027ee0 	cmpeqi	zero,zero,2555
   27820:	000281e0 	cmpeqi	zero,zero,2567
   27824:	000281e0 	cmpeqi	zero,zero,2567
   27828:	00027efc 	xorhi	zero,zero,2555
   2782c:	000281e0 	cmpeqi	zero,zero,2567
   27830:	000281e0 	cmpeqi	zero,zero,2567
   27834:	000281e0 	cmpeqi	zero,zero,2567
   27838:	000281e0 	cmpeqi	zero,zero,2567
   2783c:	000281e0 	cmpeqi	zero,zero,2567
   27840:	000281e0 	cmpeqi	zero,zero,2567
   27844:	00028104 	movi	zero,2564
   27848:	00028128 	cmpgeui	zero,zero,2564
   2784c:	000281e0 	cmpeqi	zero,zero,2567
   27850:	00027a20 	cmpeqi	zero,zero,2536
   27854:	0002813c 	xorhi	zero,zero,2564
   27858:	000281e0 	cmpeqi	zero,zero,2567
   2785c:	00027f08 	cmpgei	zero,zero,2556
   27860:	00027f14 	movui	zero,2556
   27864:	00027f14 	movui	zero,2556
   27868:	00027f14 	movui	zero,2556
   2786c:	00027f14 	movui	zero,2556
   27870:	00027f14 	movui	zero,2556
   27874:	00027f14 	movui	zero,2556
   27878:	00027f14 	movui	zero,2556
   2787c:	00027f14 	movui	zero,2556
   27880:	00027f14 	movui	zero,2556
   27884:	000281e0 	cmpeqi	zero,zero,2567
   27888:	000281e0 	cmpeqi	zero,zero,2567
   2788c:	000281e0 	cmpeqi	zero,zero,2567
   27890:	000281e0 	cmpeqi	zero,zero,2567
   27894:	000281e0 	cmpeqi	zero,zero,2567
   27898:	000281e0 	cmpeqi	zero,zero,2567
   2789c:	000281e0 	cmpeqi	zero,zero,2567
   278a0:	000281e0 	cmpeqi	zero,zero,2567
   278a4:	000281e0 	cmpeqi	zero,zero,2567
   278a8:	000281e0 	cmpeqi	zero,zero,2567
   278ac:	00027f54 	movui	zero,2557
   278b0:	000281e0 	cmpeqi	zero,zero,2567
   278b4:	000281e0 	cmpeqi	zero,zero,2567
   278b8:	000281e0 	cmpeqi	zero,zero,2567
   278bc:	000281e0 	cmpeqi	zero,zero,2567
   278c0:	000281e0 	cmpeqi	zero,zero,2567
   278c4:	000281e0 	cmpeqi	zero,zero,2567
   278c8:	000281e0 	cmpeqi	zero,zero,2567
   278cc:	000281e0 	cmpeqi	zero,zero,2567
   278d0:	000281e0 	cmpeqi	zero,zero,2567
   278d4:	000281e0 	cmpeqi	zero,zero,2567
   278d8:	00027f90 	cmplti	zero,zero,2558
   278dc:	000281e0 	cmpeqi	zero,zero,2567
   278e0:	000281e0 	cmpeqi	zero,zero,2567
   278e4:	000281e0 	cmpeqi	zero,zero,2567
   278e8:	000281e0 	cmpeqi	zero,zero,2567
   278ec:	000281e0 	cmpeqi	zero,zero,2567
   278f0:	00027fec 	andhi	zero,zero,2559
   278f4:	000281e0 	cmpeqi	zero,zero,2567
   278f8:	000281e0 	cmpeqi	zero,zero,2567
   278fc:	00028060 	cmpeqi	zero,zero,2561
   27900:	000281e0 	cmpeqi	zero,zero,2567
   27904:	000281e0 	cmpeqi	zero,zero,2567
   27908:	000281e0 	cmpeqi	zero,zero,2567
   2790c:	000281e0 	cmpeqi	zero,zero,2567
   27910:	000281e0 	cmpeqi	zero,zero,2567
   27914:	000281e0 	cmpeqi	zero,zero,2567
   27918:	000281e0 	cmpeqi	zero,zero,2567
   2791c:	000281e0 	cmpeqi	zero,zero,2567
   27920:	000281e0 	cmpeqi	zero,zero,2567
   27924:	000281e0 	cmpeqi	zero,zero,2567
   27928:	00027e08 	cmpgei	zero,zero,2552
   2792c:	00027e38 	rdprs	zero,zero,2552
   27930:	000281e0 	cmpeqi	zero,zero,2567
   27934:	000281e0 	cmpeqi	zero,zero,2567
   27938:	000281e0 	cmpeqi	zero,zero,2567
   2793c:	00028188 	cmpgei	zero,zero,2566
   27940:	00027e38 	rdprs	zero,zero,2552
   27944:	000281e0 	cmpeqi	zero,zero,2567
   27948:	000281e0 	cmpeqi	zero,zero,2567
   2794c:	00027ce0 	cmpeqi	zero,zero,2547
   27950:	000281e0 	cmpeqi	zero,zero,2567
   27954:	00027cf4 	movhi	zero,2547
   27958:	00027d2c 	andhi	zero,zero,2548
   2795c:	00027a2c 	andhi	zero,zero,2536
   27960:	00027cd4 	movui	zero,2547
   27964:	000281e0 	cmpeqi	zero,zero,2567
   27968:	000280a0 	cmpeqi	zero,zero,2562
   2796c:	000281e0 	cmpeqi	zero,zero,2567
   27970:	000280ec 	andhi	zero,zero,2563
   27974:	000281e0 	cmpeqi	zero,zero,2567
   27978:	000281e0 	cmpeqi	zero,zero,2567
   2797c:	00027db0 	cmpltui	zero,zero,2550
   27980:	42000204 	addi	r8,r8,8
   27984:	d8c02417 	ldw	r3,144(sp)
   27988:	1c07883a 	add	r3,r3,r16
   2798c:	d8c02415 	stw	r3,144(sp)
   27990:	003f8c06 	br	277c4 <__alt_data_end+0xfffe83c4>
   27994:	d9402017 	ldw	r5,128(sp)
   27998:	d9002117 	ldw	r4,132(sp)
   2799c:	0022e0c0 	call	22e0c <__swsetup_r>
   279a0:	1003c11e 	bne	r2,zero,288a8 <___vfiprintf_internal_r+0x1224>
   279a4:	d9402017 	ldw	r5,128(sp)
   279a8:	00c00284 	movi	r3,10
   279ac:	2880030b 	ldhu	r2,12(r5)
   279b0:	1080068c 	andi	r2,r2,26
   279b4:	10ff581e 	bne	r2,r3,27718 <__alt_data_end+0xfffe8318>
   279b8:	d8c02017 	ldw	r3,128(sp)
   279bc:	1880038f 	ldh	r2,14(r3)
   279c0:	103f5516 	blt	r2,zero,27718 <__alt_data_end+0xfffe8318>
   279c4:	d9c02217 	ldw	r7,136(sp)
   279c8:	d9002117 	ldw	r4,132(sp)
   279cc:	a80d883a 	mov	r6,r21
   279d0:	180b883a 	mov	r5,r3
   279d4:	0028bac0 	call	28bac <__sbprintf>
   279d8:	dfc03517 	ldw	ra,212(sp)
   279dc:	df003417 	ldw	fp,208(sp)
   279e0:	ddc03317 	ldw	r23,204(sp)
   279e4:	dd803217 	ldw	r22,200(sp)
   279e8:	dd403117 	ldw	r21,196(sp)
   279ec:	dd003017 	ldw	r20,192(sp)
   279f0:	dcc02f17 	ldw	r19,188(sp)
   279f4:	dc802e17 	ldw	r18,184(sp)
   279f8:	dc402d17 	ldw	r17,180(sp)
   279fc:	dc002c17 	ldw	r16,176(sp)
   27a00:	dec03604 	addi	sp,sp,216
   27a04:	f800283a 	ret
   27a08:	0024e180 	call	24e18 <__sinit>
   27a0c:	003f2f06 	br	276cc <__alt_data_end+0xfffe82cc>
   27a10:	d8c02517 	ldw	r3,148(sp)
   27a14:	d8802215 	stw	r2,136(sp)
   27a18:	00c7c83a 	sub	r3,zero,r3
   27a1c:	d8c02515 	stw	r3,148(sp)
   27a20:	8c400114 	ori	r17,r17,4
   27a24:	b0c00007 	ldb	r3,0(r22)
   27a28:	003f7306 	br	277f8 <__alt_data_end+0xfffe83f8>
   27a2c:	00800c04 	movi	r2,48
   27a30:	d9402217 	ldw	r5,136(sp)
   27a34:	d8801d05 	stb	r2,116(sp)
   27a38:	00801e04 	movi	r2,120
   27a3c:	d8801d45 	stb	r2,117(sp)
   27a40:	d8001d85 	stb	zero,118(sp)
   27a44:	b811883a 	mov	r8,r23
   27a48:	28c00104 	addi	r3,r5,4
   27a4c:	2cc00017 	ldw	r19,0(r5)
   27a50:	0029883a 	mov	r20,zero
   27a54:	88800094 	ori	r2,r17,2
   27a58:	80032516 	blt	r16,zero,286f0 <___vfiprintf_internal_r+0x106c>
   27a5c:	00bfdfc4 	movi	r2,-129
   27a60:	88a2703a 	and	r17,r17,r2
   27a64:	d8c02215 	stw	r3,136(sp)
   27a68:	8c400094 	ori	r17,r17,2
   27a6c:	98032a1e 	bne	r19,zero,28718 <___vfiprintf_internal_r+0x1094>
   27a70:	008000f4 	movhi	r2,3
   27a74:	10bfc404 	addi	r2,r2,-240
   27a78:	d8802615 	stw	r2,152(sp)
   27a7c:	002b883a 	mov	r21,zero
   27a80:	8001741e 	bne	r16,zero,28054 <___vfiprintf_internal_r+0x9d0>
   27a84:	0021883a 	mov	r16,zero
   27a88:	0029883a 	mov	r20,zero
   27a8c:	ddc01a04 	addi	r23,sp,104
   27a90:	8027883a 	mov	r19,r16
   27a94:	8500010e 	bge	r16,r20,27a9c <___vfiprintf_internal_r+0x418>
   27a98:	a027883a 	mov	r19,r20
   27a9c:	ad403fcc 	andi	r21,r21,255
   27aa0:	ad40201c 	xori	r21,r21,128
   27aa4:	ad7fe004 	addi	r21,r21,-128
   27aa8:	a8000126 	beq	r21,zero,27ab0 <___vfiprintf_internal_r+0x42c>
   27aac:	9cc00044 	addi	r19,r19,1
   27ab0:	89c0008c 	andi	r7,r17,2
   27ab4:	38000126 	beq	r7,zero,27abc <___vfiprintf_internal_r+0x438>
   27ab8:	9cc00084 	addi	r19,r19,2
   27abc:	88c0210c 	andi	r3,r17,132
   27ac0:	1801dd1e 	bne	r3,zero,28238 <___vfiprintf_internal_r+0xbb4>
   27ac4:	d9402517 	ldw	r5,148(sp)
   27ac8:	2cebc83a 	sub	r21,r5,r19
   27acc:	0541da0e 	bge	zero,r21,28238 <___vfiprintf_internal_r+0xbb4>
   27ad0:	07000404 	movi	fp,16
   27ad4:	d8801c17 	ldw	r2,112(sp)
   27ad8:	e543be0e 	bge	fp,r21,289d4 <___vfiprintf_internal_r+0x1350>
   27adc:	014000f4 	movhi	r5,3
   27ae0:	29402904 	addi	r5,r5,164
   27ae4:	dc002715 	stw	r16,156(sp)
   27ae8:	d9801b17 	ldw	r6,108(sp)
   27aec:	a821883a 	mov	r16,r21
   27af0:	d9402315 	stw	r5,140(sp)
   27af4:	028001c4 	movi	r10,7
   27af8:	d9c02915 	stw	r7,164(sp)
   27afc:	182b883a 	mov	r21,r3
   27b00:	00000506 	br	27b18 <___vfiprintf_internal_r+0x494>
   27b04:	31000084 	addi	r4,r6,2
   27b08:	42000204 	addi	r8,r8,8
   27b0c:	180d883a 	mov	r6,r3
   27b10:	843ffc04 	addi	r16,r16,-16
   27b14:	e4000f0e 	bge	fp,r16,27b54 <___vfiprintf_internal_r+0x4d0>
   27b18:	010000f4 	movhi	r4,3
   27b1c:	10800404 	addi	r2,r2,16
   27b20:	30c00044 	addi	r3,r6,1
   27b24:	21002904 	addi	r4,r4,164
   27b28:	41000015 	stw	r4,0(r8)
   27b2c:	47000115 	stw	fp,4(r8)
   27b30:	d8801c15 	stw	r2,112(sp)
   27b34:	d8c01b15 	stw	r3,108(sp)
   27b38:	50fff20e 	bge	r10,r3,27b04 <__alt_data_end+0xfffe8704>
   27b3c:	1001b21e 	bne	r2,zero,28208 <___vfiprintf_internal_r+0xb84>
   27b40:	843ffc04 	addi	r16,r16,-16
   27b44:	000d883a 	mov	r6,zero
   27b48:	01000044 	movi	r4,1
   27b4c:	d811883a 	mov	r8,sp
   27b50:	e43ff116 	blt	fp,r16,27b18 <__alt_data_end+0xfffe8718>
   27b54:	a807883a 	mov	r3,r21
   27b58:	d9c02917 	ldw	r7,164(sp)
   27b5c:	802b883a 	mov	r21,r16
   27b60:	dc002717 	ldw	r16,156(sp)
   27b64:	d9402317 	ldw	r5,140(sp)
   27b68:	a885883a 	add	r2,r21,r2
   27b6c:	45400115 	stw	r21,4(r8)
   27b70:	41400015 	stw	r5,0(r8)
   27b74:	d8801c15 	stw	r2,112(sp)
   27b78:	d9001b15 	stw	r4,108(sp)
   27b7c:	014001c4 	movi	r5,7
   27b80:	29026216 	blt	r5,r4,2850c <___vfiprintf_internal_r+0xe88>
   27b84:	d9801d87 	ldb	r6,118(sp)
   27b88:	42000204 	addi	r8,r8,8
   27b8c:	21400044 	addi	r5,r4,1
   27b90:	3001ae1e 	bne	r6,zero,2824c <___vfiprintf_internal_r+0xbc8>
   27b94:	3801bb26 	beq	r7,zero,28284 <___vfiprintf_internal_r+0xc00>
   27b98:	d9001d04 	addi	r4,sp,116
   27b9c:	10800084 	addi	r2,r2,2
   27ba0:	41000015 	stw	r4,0(r8)
   27ba4:	01000084 	movi	r4,2
   27ba8:	41000115 	stw	r4,4(r8)
   27bac:	d8801c15 	stw	r2,112(sp)
   27bb0:	d9401b15 	stw	r5,108(sp)
   27bb4:	010001c4 	movi	r4,7
   27bb8:	2142680e 	bge	r4,r5,2855c <___vfiprintf_internal_r+0xed8>
   27bbc:	1002b11e 	bne	r2,zero,28684 <___vfiprintf_internal_r+0x1000>
   27bc0:	01802004 	movi	r6,128
   27bc4:	01400044 	movi	r5,1
   27bc8:	0009883a 	mov	r4,zero
   27bcc:	d811883a 	mov	r8,sp
   27bd0:	1981ae1e 	bne	r3,r6,2828c <___vfiprintf_internal_r+0xc08>
   27bd4:	d8c02517 	ldw	r3,148(sp)
   27bd8:	1cf9c83a 	sub	fp,r3,r19
   27bdc:	0701ab0e 	bge	zero,fp,2828c <___vfiprintf_internal_r+0xc08>
   27be0:	05400404 	movi	r21,16
   27be4:	af03a90e 	bge	r21,fp,28a8c <___vfiprintf_internal_r+0x1408>
   27be8:	014000f4 	movhi	r5,3
   27bec:	29402504 	addi	r5,r5,148
   27bf0:	d9402315 	stw	r5,140(sp)
   27bf4:	01c001c4 	movi	r7,7
   27bf8:	00000506 	br	27c10 <___vfiprintf_internal_r+0x58c>
   27bfc:	21800084 	addi	r6,r4,2
   27c00:	42000204 	addi	r8,r8,8
   27c04:	1809883a 	mov	r4,r3
   27c08:	e73ffc04 	addi	fp,fp,-16
   27c0c:	af000d0e 	bge	r21,fp,27c44 <___vfiprintf_internal_r+0x5c0>
   27c10:	10800404 	addi	r2,r2,16
   27c14:	20c00044 	addi	r3,r4,1
   27c18:	44800015 	stw	r18,0(r8)
   27c1c:	45400115 	stw	r21,4(r8)
   27c20:	d8801c15 	stw	r2,112(sp)
   27c24:	d8c01b15 	stw	r3,108(sp)
   27c28:	38fff40e 	bge	r7,r3,27bfc <__alt_data_end+0xfffe87fc>
   27c2c:	10022b1e 	bne	r2,zero,284dc <___vfiprintf_internal_r+0xe58>
   27c30:	e73ffc04 	addi	fp,fp,-16
   27c34:	01800044 	movi	r6,1
   27c38:	0009883a 	mov	r4,zero
   27c3c:	d811883a 	mov	r8,sp
   27c40:	af3ff316 	blt	r21,fp,27c10 <__alt_data_end+0xfffe8810>
   27c44:	d8c02317 	ldw	r3,140(sp)
   27c48:	1705883a 	add	r2,r2,fp
   27c4c:	47000115 	stw	fp,4(r8)
   27c50:	40c00015 	stw	r3,0(r8)
   27c54:	d8801c15 	stw	r2,112(sp)
   27c58:	d9801b15 	stw	r6,108(sp)
   27c5c:	00c001c4 	movi	r3,7
   27c60:	19829416 	blt	r3,r6,286b4 <___vfiprintf_internal_r+0x1030>
   27c64:	8521c83a 	sub	r16,r16,r20
   27c68:	42000204 	addi	r8,r8,8
   27c6c:	31400044 	addi	r5,r6,1
   27c70:	3009883a 	mov	r4,r6
   27c74:	04018716 	blt	zero,r16,28294 <___vfiprintf_internal_r+0xc10>
   27c78:	a085883a 	add	r2,r20,r2
   27c7c:	45c00015 	stw	r23,0(r8)
   27c80:	45000115 	stw	r20,4(r8)
   27c84:	d8801c15 	stw	r2,112(sp)
   27c88:	d9401b15 	stw	r5,108(sp)
   27c8c:	00c001c4 	movi	r3,7
   27c90:	1941c20e 	bge	r3,r5,2839c <___vfiprintf_internal_r+0xd18>
   27c94:	1002531e 	bne	r2,zero,285e4 <___vfiprintf_internal_r+0xf60>
   27c98:	d8001b15 	stw	zero,108(sp)
   27c9c:	8c40010c 	andi	r17,r17,4
   27ca0:	88023226 	beq	r17,zero,2856c <___vfiprintf_internal_r+0xee8>
   27ca4:	d9002517 	ldw	r4,148(sp)
   27ca8:	24e3c83a 	sub	r17,r4,r19
   27cac:	04432916 	blt	zero,r17,28954 <___vfiprintf_internal_r+0x12d0>
   27cb0:	d8802517 	ldw	r2,148(sp)
   27cb4:	14c0010e 	bge	r2,r19,27cbc <___vfiprintf_internal_r+0x638>
   27cb8:	9805883a 	mov	r2,r19
   27cbc:	d8c02417 	ldw	r3,144(sp)
   27cc0:	1887883a 	add	r3,r3,r2
   27cc4:	d8c02415 	stw	r3,144(sp)
   27cc8:	d8001b15 	stw	zero,108(sp)
   27ccc:	d811883a 	mov	r8,sp
   27cd0:	003ea006 	br	27754 <__alt_data_end+0xfffe8354>
   27cd4:	8c400814 	ori	r17,r17,32
   27cd8:	b0c00007 	ldb	r3,0(r22)
   27cdc:	003ec606 	br	277f8 <__alt_data_end+0xfffe83f8>
   27ce0:	b0c00007 	ldb	r3,0(r22)
   27ce4:	00801b04 	movi	r2,108
   27ce8:	18832026 	beq	r3,r2,2896c <___vfiprintf_internal_r+0x12e8>
   27cec:	8c400414 	ori	r17,r17,16
   27cf0:	003ec106 	br	277f8 <__alt_data_end+0xfffe83f8>
   27cf4:	9cc03fcc 	andi	r19,r19,255
   27cf8:	b811883a 	mov	r8,r23
   27cfc:	9803981e 	bne	r19,zero,28b60 <___vfiprintf_internal_r+0x14dc>
   27d00:	8880080c 	andi	r2,r17,32
   27d04:	1002be26 	beq	r2,zero,28800 <___vfiprintf_internal_r+0x117c>
   27d08:	d9002217 	ldw	r4,136(sp)
   27d0c:	d9402417 	ldw	r5,144(sp)
   27d10:	20800017 	ldw	r2,0(r4)
   27d14:	2807d7fa 	srai	r3,r5,31
   27d18:	21000104 	addi	r4,r4,4
   27d1c:	d9002215 	stw	r4,136(sp)
   27d20:	11400015 	stw	r5,0(r2)
   27d24:	10c00115 	stw	r3,4(r2)
   27d28:	003e8a06 	br	27754 <__alt_data_end+0xfffe8354>
   27d2c:	9cc03fcc 	andi	r19,r19,255
   27d30:	b811883a 	mov	r8,r23
   27d34:	9803871e 	bne	r19,zero,28b54 <___vfiprintf_internal_r+0x14d0>
   27d38:	8880080c 	andi	r2,r17,32
   27d3c:	10009a26 	beq	r2,zero,27fa8 <___vfiprintf_internal_r+0x924>
   27d40:	d9002217 	ldw	r4,136(sp)
   27d44:	d8001d85 	stb	zero,118(sp)
   27d48:	20800204 	addi	r2,r4,8
   27d4c:	24c00017 	ldw	r19,0(r4)
   27d50:	25000117 	ldw	r20,4(r4)
   27d54:	8002a416 	blt	r16,zero,287e8 <___vfiprintf_internal_r+0x1164>
   27d58:	013fdfc4 	movi	r4,-129
   27d5c:	9d06b03a 	or	r3,r19,r20
   27d60:	d8802215 	stw	r2,136(sp)
   27d64:	8922703a 	and	r17,r17,r4
   27d68:	18009b26 	beq	r3,zero,27fd8 <___vfiprintf_internal_r+0x954>
   27d6c:	002b883a 	mov	r21,zero
   27d70:	ddc01a04 	addi	r23,sp,104
   27d74:	9806d0fa 	srli	r3,r19,3
   27d78:	a008977a 	slli	r4,r20,29
   27d7c:	a028d0fa 	srli	r20,r20,3
   27d80:	9cc001cc 	andi	r19,r19,7
   27d84:	98800c04 	addi	r2,r19,48
   27d88:	bdffffc4 	addi	r23,r23,-1
   27d8c:	20e6b03a 	or	r19,r4,r3
   27d90:	b8800005 	stb	r2,0(r23)
   27d94:	9d06b03a 	or	r3,r19,r20
   27d98:	183ff61e 	bne	r3,zero,27d74 <__alt_data_end+0xfffe8974>
   27d9c:	88c0004c 	andi	r3,r17,1
   27da0:	18021f1e 	bne	r3,zero,28620 <___vfiprintf_internal_r+0xf9c>
   27da4:	d9401e17 	ldw	r5,120(sp)
   27da8:	2de9c83a 	sub	r20,r5,r23
   27dac:	003f3806 	br	27a90 <__alt_data_end+0xfffe8690>
   27db0:	9cc03fcc 	andi	r19,r19,255
   27db4:	b811883a 	mov	r8,r23
   27db8:	98034f1e 	bne	r19,zero,28af8 <___vfiprintf_internal_r+0x1474>
   27dbc:	008000f4 	movhi	r2,3
   27dc0:	10bfc404 	addi	r2,r2,-240
   27dc4:	d8802615 	stw	r2,152(sp)
   27dc8:	8880080c 	andi	r2,r17,32
   27dcc:	1000ac26 	beq	r2,zero,28080 <___vfiprintf_internal_r+0x9fc>
   27dd0:	d9002217 	ldw	r4,136(sp)
   27dd4:	24c00017 	ldw	r19,0(r4)
   27dd8:	25000117 	ldw	r20,4(r4)
   27ddc:	21000204 	addi	r4,r4,8
   27de0:	d9002215 	stw	r4,136(sp)
   27de4:	8880004c 	andi	r2,r17,1
   27de8:	1001e726 	beq	r2,zero,28588 <___vfiprintf_internal_r+0xf04>
   27dec:	9d04b03a 	or	r2,r19,r20
   27df0:	10025c1e 	bne	r2,zero,28764 <___vfiprintf_internal_r+0x10e0>
   27df4:	d8001d85 	stb	zero,118(sp)
   27df8:	80024416 	blt	r16,zero,2870c <___vfiprintf_internal_r+0x1088>
   27dfc:	00bfdfc4 	movi	r2,-129
   27e00:	88a2703a 	and	r17,r17,r2
   27e04:	003f1d06 	br	27a7c <__alt_data_end+0xfffe867c>
   27e08:	d8c02217 	ldw	r3,136(sp)
   27e0c:	04c00044 	movi	r19,1
   27e10:	b811883a 	mov	r8,r23
   27e14:	18800017 	ldw	r2,0(r3)
   27e18:	18c00104 	addi	r3,r3,4
   27e1c:	d8001d85 	stb	zero,118(sp)
   27e20:	d8801005 	stb	r2,64(sp)
   27e24:	d8c02215 	stw	r3,136(sp)
   27e28:	9829883a 	mov	r20,r19
   27e2c:	ddc01004 	addi	r23,sp,64
   27e30:	0021883a 	mov	r16,zero
   27e34:	003f1e06 	br	27ab0 <__alt_data_end+0xfffe86b0>
   27e38:	9cc03fcc 	andi	r19,r19,255
   27e3c:	b811883a 	mov	r8,r23
   27e40:	9803331e 	bne	r19,zero,28b10 <___vfiprintf_internal_r+0x148c>
   27e44:	8880080c 	andi	r2,r17,32
   27e48:	10004826 	beq	r2,zero,27f6c <___vfiprintf_internal_r+0x8e8>
   27e4c:	d9002217 	ldw	r4,136(sp)
   27e50:	20800117 	ldw	r2,4(r4)
   27e54:	24c00017 	ldw	r19,0(r4)
   27e58:	21000204 	addi	r4,r4,8
   27e5c:	d9002215 	stw	r4,136(sp)
   27e60:	1029883a 	mov	r20,r2
   27e64:	10024c16 	blt	r2,zero,28798 <___vfiprintf_internal_r+0x1114>
   27e68:	dd401d83 	ldbu	r21,118(sp)
   27e6c:	80007116 	blt	r16,zero,28034 <___vfiprintf_internal_r+0x9b0>
   27e70:	00ffdfc4 	movi	r3,-129
   27e74:	9d04b03a 	or	r2,r19,r20
   27e78:	88e2703a 	and	r17,r17,r3
   27e7c:	1000d126 	beq	r2,zero,281c4 <___vfiprintf_internal_r+0xb40>
   27e80:	a0023526 	beq	r20,zero,28758 <___vfiprintf_internal_r+0x10d4>
   27e84:	ddc01a04 	addi	r23,sp,104
   27e88:	4039883a 	mov	fp,r8
   27e8c:	9809883a 	mov	r4,r19
   27e90:	a00b883a 	mov	r5,r20
   27e94:	01800284 	movi	r6,10
   27e98:	000f883a 	mov	r7,zero
   27e9c:	002a7380 	call	2a738 <__umoddi3>
   27ea0:	10800c04 	addi	r2,r2,48
   27ea4:	bdffffc4 	addi	r23,r23,-1
   27ea8:	9809883a 	mov	r4,r19
   27eac:	a00b883a 	mov	r5,r20
   27eb0:	b8800005 	stb	r2,0(r23)
   27eb4:	01800284 	movi	r6,10
   27eb8:	000f883a 	mov	r7,zero
   27ebc:	002a13c0 	call	2a13c <__udivdi3>
   27ec0:	1027883a 	mov	r19,r2
   27ec4:	10c4b03a 	or	r2,r2,r3
   27ec8:	1829883a 	mov	r20,r3
   27ecc:	103fef1e 	bne	r2,zero,27e8c <__alt_data_end+0xfffe8a8c>
   27ed0:	d9001e17 	ldw	r4,120(sp)
   27ed4:	e011883a 	mov	r8,fp
   27ed8:	25e9c83a 	sub	r20,r4,r23
   27edc:	003eec06 	br	27a90 <__alt_data_end+0xfffe8690>
   27ee0:	d8802307 	ldb	r2,140(sp)
   27ee4:	1002361e 	bne	r2,zero,287c0 <___vfiprintf_internal_r+0x113c>
   27ee8:	00c00804 	movi	r3,32
   27eec:	d8c02305 	stb	r3,140(sp)
   27ef0:	04c00044 	movi	r19,1
   27ef4:	b0c00007 	ldb	r3,0(r22)
   27ef8:	003e3f06 	br	277f8 <__alt_data_end+0xfffe83f8>
   27efc:	8c400054 	ori	r17,r17,1
   27f00:	b0c00007 	ldb	r3,0(r22)
   27f04:	003e3c06 	br	277f8 <__alt_data_end+0xfffe83f8>
   27f08:	8c402014 	ori	r17,r17,128
   27f0c:	b0c00007 	ldb	r3,0(r22)
   27f10:	003e3906 	br	277f8 <__alt_data_end+0xfffe83f8>
   27f14:	dc002715 	stw	r16,156(sp)
   27f18:	d8002515 	stw	zero,148(sp)
   27f1c:	1f3ff404 	addi	fp,r3,-48
   27f20:	0009883a 	mov	r4,zero
   27f24:	b021883a 	mov	r16,r22
   27f28:	01400284 	movi	r5,10
   27f2c:	002aeb00 	call	2aeb0 <__mulsi3>
   27f30:	80c00007 	ldb	r3,0(r16)
   27f34:	e089883a 	add	r4,fp,r2
   27f38:	b5800044 	addi	r22,r22,1
   27f3c:	1f3ff404 	addi	fp,r3,-48
   27f40:	b021883a 	mov	r16,r22
   27f44:	af3ff82e 	bgeu	r21,fp,27f28 <__alt_data_end+0xfffe8b28>
   27f48:	d9002515 	stw	r4,148(sp)
   27f4c:	dc002717 	ldw	r16,156(sp)
   27f50:	003e2a06 	br	277fc <__alt_data_end+0xfffe83fc>
   27f54:	9cc03fcc 	andi	r19,r19,255
   27f58:	b811883a 	mov	r8,r23
   27f5c:	9802e91e 	bne	r19,zero,28b04 <___vfiprintf_internal_r+0x1480>
   27f60:	8c400414 	ori	r17,r17,16
   27f64:	8880080c 	andi	r2,r17,32
   27f68:	103fb81e 	bne	r2,zero,27e4c <__alt_data_end+0xfffe8a4c>
   27f6c:	8880040c 	andi	r2,r17,16
   27f70:	10022e26 	beq	r2,zero,2882c <___vfiprintf_internal_r+0x11a8>
   27f74:	d9402217 	ldw	r5,136(sp)
   27f78:	2cc00017 	ldw	r19,0(r5)
   27f7c:	29400104 	addi	r5,r5,4
   27f80:	d9402215 	stw	r5,136(sp)
   27f84:	9829d7fa 	srai	r20,r19,31
   27f88:	a005883a 	mov	r2,r20
   27f8c:	003fb506 	br	27e64 <__alt_data_end+0xfffe8a64>
   27f90:	9cc03fcc 	andi	r19,r19,255
   27f94:	b811883a 	mov	r8,r23
   27f98:	9802fa1e 	bne	r19,zero,28b84 <___vfiprintf_internal_r+0x1500>
   27f9c:	8c400414 	ori	r17,r17,16
   27fa0:	8880080c 	andi	r2,r17,32
   27fa4:	103f661e 	bne	r2,zero,27d40 <__alt_data_end+0xfffe8940>
   27fa8:	8880040c 	andi	r2,r17,16
   27fac:	10020626 	beq	r2,zero,287c8 <___vfiprintf_internal_r+0x1144>
   27fb0:	d9402217 	ldw	r5,136(sp)
   27fb4:	d8001d85 	stb	zero,118(sp)
   27fb8:	0029883a 	mov	r20,zero
   27fbc:	28800104 	addi	r2,r5,4
   27fc0:	2cc00017 	ldw	r19,0(r5)
   27fc4:	80020816 	blt	r16,zero,287e8 <___vfiprintf_internal_r+0x1164>
   27fc8:	00ffdfc4 	movi	r3,-129
   27fcc:	d8802215 	stw	r2,136(sp)
   27fd0:	88e2703a 	and	r17,r17,r3
   27fd4:	983f651e 	bne	r19,zero,27d6c <__alt_data_end+0xfffe896c>
   27fd8:	002b883a 	mov	r21,zero
   27fdc:	8002cf26 	beq	r16,zero,28b1c <___vfiprintf_internal_r+0x1498>
   27fe0:	0027883a 	mov	r19,zero
   27fe4:	0029883a 	mov	r20,zero
   27fe8:	003f6106 	br	27d70 <__alt_data_end+0xfffe8970>
   27fec:	9cc03fcc 	andi	r19,r19,255
   27ff0:	b811883a 	mov	r8,r23
   27ff4:	9802e01e 	bne	r19,zero,28b78 <___vfiprintf_internal_r+0x14f4>
   27ff8:	8c400414 	ori	r17,r17,16
   27ffc:	8880080c 	andi	r2,r17,32
   28000:	1000641e 	bne	r2,zero,28194 <___vfiprintf_internal_r+0xb10>
   28004:	8880040c 	andi	r2,r17,16
   28008:	1001c81e 	bne	r2,zero,2872c <___vfiprintf_internal_r+0x10a8>
   2800c:	8880100c 	andi	r2,r17,64
   28010:	d8001d85 	stb	zero,118(sp)
   28014:	1002281e 	bne	r2,zero,288b8 <___vfiprintf_internal_r+0x1234>
   28018:	d9002217 	ldw	r4,136(sp)
   2801c:	0029883a 	mov	r20,zero
   28020:	20800104 	addi	r2,r4,4
   28024:	24c00017 	ldw	r19,0(r4)
   28028:	8001c60e 	bge	r16,zero,28744 <___vfiprintf_internal_r+0x10c0>
   2802c:	d8802215 	stw	r2,136(sp)
   28030:	002b883a 	mov	r21,zero
   28034:	9d04b03a 	or	r2,r19,r20
   28038:	103f911e 	bne	r2,zero,27e80 <__alt_data_end+0xfffe8a80>
   2803c:	00800044 	movi	r2,1
   28040:	10803fcc 	andi	r2,r2,255
   28044:	00c00044 	movi	r3,1
   28048:	10c05f26 	beq	r2,r3,281c8 <___vfiprintf_internal_r+0xb44>
   2804c:	00c00084 	movi	r3,2
   28050:	10ffe31e 	bne	r2,r3,27fe0 <__alt_data_end+0xfffe8be0>
   28054:	0027883a 	mov	r19,zero
   28058:	0029883a 	mov	r20,zero
   2805c:	00015106 	br	285a4 <___vfiprintf_internal_r+0xf20>
   28060:	9cc03fcc 	andi	r19,r19,255
   28064:	b811883a 	mov	r8,r23
   28068:	9802c01e 	bne	r19,zero,28b6c <___vfiprintf_internal_r+0x14e8>
   2806c:	014000f4 	movhi	r5,3
   28070:	297fbf04 	addi	r5,r5,-260
   28074:	d9402615 	stw	r5,152(sp)
   28078:	8880080c 	andi	r2,r17,32
   2807c:	103f541e 	bne	r2,zero,27dd0 <__alt_data_end+0xfffe89d0>
   28080:	8880040c 	andi	r2,r17,16
   28084:	1001f226 	beq	r2,zero,28850 <___vfiprintf_internal_r+0x11cc>
   28088:	d9402217 	ldw	r5,136(sp)
   2808c:	0029883a 	mov	r20,zero
   28090:	2cc00017 	ldw	r19,0(r5)
   28094:	29400104 	addi	r5,r5,4
   28098:	d9402215 	stw	r5,136(sp)
   2809c:	003f5106 	br	27de4 <__alt_data_end+0xfffe89e4>
   280a0:	d8c02217 	ldw	r3,136(sp)
   280a4:	b811883a 	mov	r8,r23
   280a8:	d8001d85 	stb	zero,118(sp)
   280ac:	1dc00017 	ldw	r23,0(r3)
   280b0:	1f000104 	addi	fp,r3,4
   280b4:	b8025926 	beq	r23,zero,28a1c <___vfiprintf_internal_r+0x1398>
   280b8:	80023316 	blt	r16,zero,28988 <___vfiprintf_internal_r+0x1304>
   280bc:	800d883a 	mov	r6,r16
   280c0:	000b883a 	mov	r5,zero
   280c4:	b809883a 	mov	r4,r23
   280c8:	da002a15 	stw	r8,168(sp)
   280cc:	0025ec80 	call	25ec8 <memchr>
   280d0:	da002a17 	ldw	r8,168(sp)
   280d4:	10026826 	beq	r2,zero,28a78 <___vfiprintf_internal_r+0x13f4>
   280d8:	15e9c83a 	sub	r20,r2,r23
   280dc:	dd401d83 	ldbu	r21,118(sp)
   280e0:	df002215 	stw	fp,136(sp)
   280e4:	0021883a 	mov	r16,zero
   280e8:	003e6906 	br	27a90 <__alt_data_end+0xfffe8690>
   280ec:	9cc03fcc 	andi	r19,r19,255
   280f0:	b811883a 	mov	r8,r23
   280f4:	983fc126 	beq	r19,zero,27ffc <__alt_data_end+0xfffe8bfc>
   280f8:	d8c02303 	ldbu	r3,140(sp)
   280fc:	d8c01d85 	stb	r3,118(sp)
   28100:	003fbe06 	br	27ffc <__alt_data_end+0xfffe8bfc>
   28104:	d9002217 	ldw	r4,136(sp)
   28108:	d9402217 	ldw	r5,136(sp)
   2810c:	21000017 	ldw	r4,0(r4)
   28110:	28800104 	addi	r2,r5,4
   28114:	d9002515 	stw	r4,148(sp)
   28118:	203e3d16 	blt	r4,zero,27a10 <__alt_data_end+0xfffe8610>
   2811c:	d8802215 	stw	r2,136(sp)
   28120:	b0c00007 	ldb	r3,0(r22)
   28124:	003db406 	br	277f8 <__alt_data_end+0xfffe83f8>
   28128:	00c00ac4 	movi	r3,43
   2812c:	d8c02305 	stb	r3,140(sp)
   28130:	04c00044 	movi	r19,1
   28134:	b0c00007 	ldb	r3,0(r22)
   28138:	003daf06 	br	277f8 <__alt_data_end+0xfffe83f8>
   2813c:	b0c00007 	ldb	r3,0(r22)
   28140:	01000a84 	movi	r4,42
   28144:	b4000044 	addi	r16,r22,1
   28148:	19025e26 	beq	r3,r4,28ac4 <___vfiprintf_internal_r+0x1440>
   2814c:	1f3ff404 	addi	fp,r3,-48
   28150:	0009883a 	mov	r4,zero
   28154:	af025236 	bltu	r21,fp,28aa0 <___vfiprintf_internal_r+0x141c>
   28158:	01400284 	movi	r5,10
   2815c:	002aeb00 	call	2aeb0 <__mulsi3>
   28160:	80c00007 	ldb	r3,0(r16)
   28164:	1709883a 	add	r4,r2,fp
   28168:	85800044 	addi	r22,r16,1
   2816c:	1f3ff404 	addi	fp,r3,-48
   28170:	b021883a 	mov	r16,r22
   28174:	af3ff82e 	bgeu	r21,fp,28158 <__alt_data_end+0xfffe8d58>
   28178:	2021883a 	mov	r16,r4
   2817c:	203d9f0e 	bge	r4,zero,277fc <__alt_data_end+0xfffe83fc>
   28180:	043fffc4 	movi	r16,-1
   28184:	003d9d06 	br	277fc <__alt_data_end+0xfffe83fc>
   28188:	8c401014 	ori	r17,r17,64
   2818c:	b0c00007 	ldb	r3,0(r22)
   28190:	003d9906 	br	277f8 <__alt_data_end+0xfffe83f8>
   28194:	d9002217 	ldw	r4,136(sp)
   28198:	d8001d85 	stb	zero,118(sp)
   2819c:	20c00204 	addi	r3,r4,8
   281a0:	24c00017 	ldw	r19,0(r4)
   281a4:	25000117 	ldw	r20,4(r4)
   281a8:	8001e716 	blt	r16,zero,28948 <___vfiprintf_internal_r+0x12c4>
   281ac:	013fdfc4 	movi	r4,-129
   281b0:	9d04b03a 	or	r2,r19,r20
   281b4:	d8c02215 	stw	r3,136(sp)
   281b8:	8922703a 	and	r17,r17,r4
   281bc:	002b883a 	mov	r21,zero
   281c0:	103f2f1e 	bne	r2,zero,27e80 <__alt_data_end+0xfffe8a80>
   281c4:	803e2f26 	beq	r16,zero,27a84 <__alt_data_end+0xfffe8684>
   281c8:	0027883a 	mov	r19,zero
   281cc:	9cc00c04 	addi	r19,r19,48
   281d0:	dcc019c5 	stb	r19,103(sp)
   281d4:	dd002817 	ldw	r20,160(sp)
   281d8:	ddc019c4 	addi	r23,sp,103
   281dc:	003e2c06 	br	27a90 <__alt_data_end+0xfffe8690>
   281e0:	9cc03fcc 	andi	r19,r19,255
   281e4:	b811883a 	mov	r8,r23
   281e8:	9802571e 	bne	r19,zero,28b48 <___vfiprintf_internal_r+0x14c4>
   281ec:	18005726 	beq	r3,zero,2834c <___vfiprintf_internal_r+0xcc8>
   281f0:	04c00044 	movi	r19,1
   281f4:	d8c01005 	stb	r3,64(sp)
   281f8:	d8001d85 	stb	zero,118(sp)
   281fc:	9829883a 	mov	r20,r19
   28200:	ddc01004 	addi	r23,sp,64
   28204:	003f0a06 	br	27e30 <__alt_data_end+0xfffe8a30>
   28208:	d9402017 	ldw	r5,128(sp)
   2820c:	d9002117 	ldw	r4,132(sp)
   28210:	d9801a04 	addi	r6,sp,104
   28214:	da802a15 	stw	r10,168(sp)
   28218:	00275700 	call	27570 <__sprint_r.part.0>
   2821c:	da802a17 	ldw	r10,168(sp)
   28220:	1000501e 	bne	r2,zero,28364 <___vfiprintf_internal_r+0xce0>
   28224:	d9801b17 	ldw	r6,108(sp)
   28228:	d8801c17 	ldw	r2,112(sp)
   2822c:	d811883a 	mov	r8,sp
   28230:	31000044 	addi	r4,r6,1
   28234:	003e3606 	br	27b10 <__alt_data_end+0xfffe8710>
   28238:	d9001b17 	ldw	r4,108(sp)
   2823c:	d8801c17 	ldw	r2,112(sp)
   28240:	21400044 	addi	r5,r4,1
   28244:	d9801d87 	ldb	r6,118(sp)
   28248:	303e5226 	beq	r6,zero,27b94 <__alt_data_end+0xfffe8794>
   2824c:	01800044 	movi	r6,1
   28250:	d9001d84 	addi	r4,sp,118
   28254:	1185883a 	add	r2,r2,r6
   28258:	41000015 	stw	r4,0(r8)
   2825c:	41800115 	stw	r6,4(r8)
   28260:	d8801c15 	stw	r2,112(sp)
   28264:	d9401b15 	stw	r5,108(sp)
   28268:	010001c4 	movi	r4,7
   2826c:	2140b00e 	bge	r4,r5,28530 <___vfiprintf_internal_r+0xeac>
   28270:	1000f61e 	bne	r2,zero,2864c <___vfiprintf_internal_r+0xfc8>
   28274:	3800b31e 	bne	r7,zero,28544 <___vfiprintf_internal_r+0xec0>
   28278:	0009883a 	mov	r4,zero
   2827c:	300b883a 	mov	r5,r6
   28280:	d811883a 	mov	r8,sp
   28284:	01802004 	movi	r6,128
   28288:	19be5226 	beq	r3,r6,27bd4 <__alt_data_end+0xfffe87d4>
   2828c:	8521c83a 	sub	r16,r16,r20
   28290:	043e790e 	bge	zero,r16,27c78 <__alt_data_end+0xfffe8878>
   28294:	05400404 	movi	r21,16
   28298:	ac01b00e 	bge	r21,r16,2895c <___vfiprintf_internal_r+0x12d8>
   2829c:	014000f4 	movhi	r5,3
   282a0:	29402504 	addi	r5,r5,148
   282a4:	d9402315 	stw	r5,140(sp)
   282a8:	070001c4 	movi	fp,7
   282ac:	00000506 	br	282c4 <___vfiprintf_internal_r+0xc40>
   282b0:	21400084 	addi	r5,r4,2
   282b4:	42000204 	addi	r8,r8,8
   282b8:	1809883a 	mov	r4,r3
   282bc:	843ffc04 	addi	r16,r16,-16
   282c0:	ac000d0e 	bge	r21,r16,282f8 <___vfiprintf_internal_r+0xc74>
   282c4:	10800404 	addi	r2,r2,16
   282c8:	20c00044 	addi	r3,r4,1
   282cc:	44800015 	stw	r18,0(r8)
   282d0:	45400115 	stw	r21,4(r8)
   282d4:	d8801c15 	stw	r2,112(sp)
   282d8:	d8c01b15 	stw	r3,108(sp)
   282dc:	e0fff40e 	bge	fp,r3,282b0 <__alt_data_end+0xfffe8eb0>
   282e0:	1000101e 	bne	r2,zero,28324 <___vfiprintf_internal_r+0xca0>
   282e4:	843ffc04 	addi	r16,r16,-16
   282e8:	01400044 	movi	r5,1
   282ec:	0009883a 	mov	r4,zero
   282f0:	d811883a 	mov	r8,sp
   282f4:	ac3ff316 	blt	r21,r16,282c4 <__alt_data_end+0xfffe8ec4>
   282f8:	d8c02317 	ldw	r3,140(sp)
   282fc:	1405883a 	add	r2,r2,r16
   28300:	44000115 	stw	r16,4(r8)
   28304:	40c00015 	stw	r3,0(r8)
   28308:	d8801c15 	stw	r2,112(sp)
   2830c:	d9401b15 	stw	r5,108(sp)
   28310:	00c001c4 	movi	r3,7
   28314:	19401916 	blt	r3,r5,2837c <___vfiprintf_internal_r+0xcf8>
   28318:	42000204 	addi	r8,r8,8
   2831c:	29400044 	addi	r5,r5,1
   28320:	003e5506 	br	27c78 <__alt_data_end+0xfffe8878>
   28324:	d9402017 	ldw	r5,128(sp)
   28328:	d9002117 	ldw	r4,132(sp)
   2832c:	d9801a04 	addi	r6,sp,104
   28330:	00275700 	call	27570 <__sprint_r.part.0>
   28334:	10000b1e 	bne	r2,zero,28364 <___vfiprintf_internal_r+0xce0>
   28338:	d9001b17 	ldw	r4,108(sp)
   2833c:	d8801c17 	ldw	r2,112(sp)
   28340:	d811883a 	mov	r8,sp
   28344:	21400044 	addi	r5,r4,1
   28348:	003fdc06 	br	282bc <__alt_data_end+0xfffe8ebc>
   2834c:	d8801c17 	ldw	r2,112(sp)
   28350:	10000426 	beq	r2,zero,28364 <___vfiprintf_internal_r+0xce0>
   28354:	d9402017 	ldw	r5,128(sp)
   28358:	d9002117 	ldw	r4,132(sp)
   2835c:	d9801a04 	addi	r6,sp,104
   28360:	00275700 	call	27570 <__sprint_r.part.0>
   28364:	d9402017 	ldw	r5,128(sp)
   28368:	2880030b 	ldhu	r2,12(r5)
   2836c:	1080100c 	andi	r2,r2,64
   28370:	10014d1e 	bne	r2,zero,288a8 <___vfiprintf_internal_r+0x1224>
   28374:	d8802417 	ldw	r2,144(sp)
   28378:	003d9706 	br	279d8 <__alt_data_end+0xfffe85d8>
   2837c:	1000d21e 	bne	r2,zero,286c8 <___vfiprintf_internal_r+0x1044>
   28380:	00c00044 	movi	r3,1
   28384:	a005883a 	mov	r2,r20
   28388:	ddc00015 	stw	r23,0(sp)
   2838c:	dd000115 	stw	r20,4(sp)
   28390:	dd001c15 	stw	r20,112(sp)
   28394:	d8c01b15 	stw	r3,108(sp)
   28398:	d811883a 	mov	r8,sp
   2839c:	42000204 	addi	r8,r8,8
   283a0:	8c40010c 	andi	r17,r17,4
   283a4:	88004026 	beq	r17,zero,284a8 <___vfiprintf_internal_r+0xe24>
   283a8:	d9002517 	ldw	r4,148(sp)
   283ac:	24e3c83a 	sub	r17,r4,r19
   283b0:	04403d0e 	bge	zero,r17,284a8 <___vfiprintf_internal_r+0xe24>
   283b4:	04000404 	movi	r16,16
   283b8:	8441a90e 	bge	r16,r17,28a60 <___vfiprintf_internal_r+0x13dc>
   283bc:	00c000f4 	movhi	r3,3
   283c0:	18c02904 	addi	r3,r3,164
   283c4:	d9001b17 	ldw	r4,108(sp)
   283c8:	d8c02315 	stw	r3,140(sp)
   283cc:	050001c4 	movi	r20,7
   283d0:	dd402117 	ldw	r21,132(sp)
   283d4:	ddc02017 	ldw	r23,128(sp)
   283d8:	00000506 	br	283f0 <___vfiprintf_internal_r+0xd6c>
   283dc:	21400084 	addi	r5,r4,2
   283e0:	42000204 	addi	r8,r8,8
   283e4:	1809883a 	mov	r4,r3
   283e8:	8c7ffc04 	addi	r17,r17,-16
   283ec:	84400f0e 	bge	r16,r17,2842c <___vfiprintf_internal_r+0xda8>
   283f0:	014000f4 	movhi	r5,3
   283f4:	10800404 	addi	r2,r2,16
   283f8:	20c00044 	addi	r3,r4,1
   283fc:	29402904 	addi	r5,r5,164
   28400:	41400015 	stw	r5,0(r8)
   28404:	44000115 	stw	r16,4(r8)
   28408:	d8801c15 	stw	r2,112(sp)
   2840c:	d8c01b15 	stw	r3,108(sp)
   28410:	a0fff20e 	bge	r20,r3,283dc <__alt_data_end+0xfffe8fdc>
   28414:	1000141e 	bne	r2,zero,28468 <___vfiprintf_internal_r+0xde4>
   28418:	8c7ffc04 	addi	r17,r17,-16
   2841c:	01400044 	movi	r5,1
   28420:	0009883a 	mov	r4,zero
   28424:	d811883a 	mov	r8,sp
   28428:	847ff116 	blt	r16,r17,283f0 <__alt_data_end+0xfffe8ff0>
   2842c:	d8c02317 	ldw	r3,140(sp)
   28430:	1445883a 	add	r2,r2,r17
   28434:	44400115 	stw	r17,4(r8)
   28438:	40c00015 	stw	r3,0(r8)
   2843c:	d8801c15 	stw	r2,112(sp)
   28440:	d9401b15 	stw	r5,108(sp)
   28444:	00c001c4 	movi	r3,7
   28448:	1940170e 	bge	r3,r5,284a8 <___vfiprintf_internal_r+0xe24>
   2844c:	1000101e 	bne	r2,zero,28490 <___vfiprintf_internal_r+0xe0c>
   28450:	d8802517 	ldw	r2,148(sp)
   28454:	14c11616 	blt	r2,r19,288b0 <___vfiprintf_internal_r+0x122c>
   28458:	d9002417 	ldw	r4,144(sp)
   2845c:	2089883a 	add	r4,r4,r2
   28460:	d9002415 	stw	r4,144(sp)
   28464:	003e1806 	br	27cc8 <__alt_data_end+0xfffe88c8>
   28468:	d9801a04 	addi	r6,sp,104
   2846c:	b80b883a 	mov	r5,r23
   28470:	a809883a 	mov	r4,r21
   28474:	00275700 	call	27570 <__sprint_r.part.0>
   28478:	103fba1e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   2847c:	d9001b17 	ldw	r4,108(sp)
   28480:	d8801c17 	ldw	r2,112(sp)
   28484:	d811883a 	mov	r8,sp
   28488:	21400044 	addi	r5,r4,1
   2848c:	003fd606 	br	283e8 <__alt_data_end+0xfffe8fe8>
   28490:	d9402017 	ldw	r5,128(sp)
   28494:	d9002117 	ldw	r4,132(sp)
   28498:	d9801a04 	addi	r6,sp,104
   2849c:	00275700 	call	27570 <__sprint_r.part.0>
   284a0:	103fb01e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   284a4:	d8801c17 	ldw	r2,112(sp)
   284a8:	d8c02517 	ldw	r3,148(sp)
   284ac:	1cc0010e 	bge	r3,r19,284b4 <___vfiprintf_internal_r+0xe30>
   284b0:	9807883a 	mov	r3,r19
   284b4:	d9002417 	ldw	r4,144(sp)
   284b8:	20c9883a 	add	r4,r4,r3
   284bc:	d9002415 	stw	r4,144(sp)
   284c0:	103e0126 	beq	r2,zero,27cc8 <__alt_data_end+0xfffe88c8>
   284c4:	d9402017 	ldw	r5,128(sp)
   284c8:	d9002117 	ldw	r4,132(sp)
   284cc:	d9801a04 	addi	r6,sp,104
   284d0:	00275700 	call	27570 <__sprint_r.part.0>
   284d4:	103dfc26 	beq	r2,zero,27cc8 <__alt_data_end+0xfffe88c8>
   284d8:	003fa206 	br	28364 <__alt_data_end+0xfffe8f64>
   284dc:	d9402017 	ldw	r5,128(sp)
   284e0:	d9002117 	ldw	r4,132(sp)
   284e4:	d9801a04 	addi	r6,sp,104
   284e8:	d9c02b15 	stw	r7,172(sp)
   284ec:	00275700 	call	27570 <__sprint_r.part.0>
   284f0:	d9c02b17 	ldw	r7,172(sp)
   284f4:	103f9b1e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   284f8:	d9001b17 	ldw	r4,108(sp)
   284fc:	d8801c17 	ldw	r2,112(sp)
   28500:	d811883a 	mov	r8,sp
   28504:	21800044 	addi	r6,r4,1
   28508:	003dbf06 	br	27c08 <__alt_data_end+0xfffe8808>
   2850c:	1000d81e 	bne	r2,zero,28870 <___vfiprintf_internal_r+0x11ec>
   28510:	d9001d87 	ldb	r4,118(sp)
   28514:	20000a26 	beq	r4,zero,28540 <___vfiprintf_internal_r+0xebc>
   28518:	00800044 	movi	r2,1
   2851c:	d9001d84 	addi	r4,sp,118
   28520:	100b883a 	mov	r5,r2
   28524:	d9000015 	stw	r4,0(sp)
   28528:	d8800115 	stw	r2,4(sp)
   2852c:	d811883a 	mov	r8,sp
   28530:	2809883a 	mov	r4,r5
   28534:	42000204 	addi	r8,r8,8
   28538:	29400044 	addi	r5,r5,1
   2853c:	003d9506 	br	27b94 <__alt_data_end+0xfffe8794>
   28540:	3800fd26 	beq	r7,zero,28938 <___vfiprintf_internal_r+0x12b4>
   28544:	00800084 	movi	r2,2
   28548:	d9001d04 	addi	r4,sp,116
   2854c:	d9000015 	stw	r4,0(sp)
   28550:	d8800115 	stw	r2,4(sp)
   28554:	01400044 	movi	r5,1
   28558:	d811883a 	mov	r8,sp
   2855c:	2809883a 	mov	r4,r5
   28560:	42000204 	addi	r8,r8,8
   28564:	29400044 	addi	r5,r5,1
   28568:	003f4606 	br	28284 <__alt_data_end+0xfffe8e84>
   2856c:	d8802517 	ldw	r2,148(sp)
   28570:	14c0010e 	bge	r2,r19,28578 <___vfiprintf_internal_r+0xef4>
   28574:	9805883a 	mov	r2,r19
   28578:	d9402417 	ldw	r5,144(sp)
   2857c:	288b883a 	add	r5,r5,r2
   28580:	d9402415 	stw	r5,144(sp)
   28584:	003dd006 	br	27cc8 <__alt_data_end+0xfffe88c8>
   28588:	d8001d85 	stb	zero,118(sp)
   2858c:	80005d16 	blt	r16,zero,28704 <___vfiprintf_internal_r+0x1080>
   28590:	00ffdfc4 	movi	r3,-129
   28594:	9d04b03a 	or	r2,r19,r20
   28598:	88e2703a 	and	r17,r17,r3
   2859c:	103d3726 	beq	r2,zero,27a7c <__alt_data_end+0xfffe867c>
   285a0:	002b883a 	mov	r21,zero
   285a4:	d9002617 	ldw	r4,152(sp)
   285a8:	ddc01a04 	addi	r23,sp,104
   285ac:	988003cc 	andi	r2,r19,15
   285b0:	a006973a 	slli	r3,r20,28
   285b4:	2085883a 	add	r2,r4,r2
   285b8:	9826d13a 	srli	r19,r19,4
   285bc:	10800003 	ldbu	r2,0(r2)
   285c0:	a028d13a 	srli	r20,r20,4
   285c4:	bdffffc4 	addi	r23,r23,-1
   285c8:	1ce6b03a 	or	r19,r3,r19
   285cc:	b8800005 	stb	r2,0(r23)
   285d0:	9d04b03a 	or	r2,r19,r20
   285d4:	103ff51e 	bne	r2,zero,285ac <__alt_data_end+0xfffe91ac>
   285d8:	d8801e17 	ldw	r2,120(sp)
   285dc:	15e9c83a 	sub	r20,r2,r23
   285e0:	003d2b06 	br	27a90 <__alt_data_end+0xfffe8690>
   285e4:	d9402017 	ldw	r5,128(sp)
   285e8:	d9002117 	ldw	r4,132(sp)
   285ec:	d9801a04 	addi	r6,sp,104
   285f0:	00275700 	call	27570 <__sprint_r.part.0>
   285f4:	103f5b1e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   285f8:	d8801c17 	ldw	r2,112(sp)
   285fc:	d811883a 	mov	r8,sp
   28600:	003f6706 	br	283a0 <__alt_data_end+0xfffe8fa0>
   28604:	d9402017 	ldw	r5,128(sp)
   28608:	d9002117 	ldw	r4,132(sp)
   2860c:	d9801a04 	addi	r6,sp,104
   28610:	00275700 	call	27570 <__sprint_r.part.0>
   28614:	103f531e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   28618:	d811883a 	mov	r8,sp
   2861c:	003cd906 	br	27984 <__alt_data_end+0xfffe8584>
   28620:	10803fcc 	andi	r2,r2,255
   28624:	1080201c 	xori	r2,r2,128
   28628:	10bfe004 	addi	r2,r2,-128
   2862c:	00c00c04 	movi	r3,48
   28630:	10ffe926 	beq	r2,r3,285d8 <__alt_data_end+0xfffe91d8>
   28634:	b8ffffc5 	stb	r3,-1(r23)
   28638:	d8c01e17 	ldw	r3,120(sp)
   2863c:	b8bfffc4 	addi	r2,r23,-1
   28640:	102f883a 	mov	r23,r2
   28644:	18a9c83a 	sub	r20,r3,r2
   28648:	003d1106 	br	27a90 <__alt_data_end+0xfffe8690>
   2864c:	d9402017 	ldw	r5,128(sp)
   28650:	d9002117 	ldw	r4,132(sp)
   28654:	d9801a04 	addi	r6,sp,104
   28658:	d8c02a15 	stw	r3,168(sp)
   2865c:	d9c02b15 	stw	r7,172(sp)
   28660:	00275700 	call	27570 <__sprint_r.part.0>
   28664:	d8c02a17 	ldw	r3,168(sp)
   28668:	d9c02b17 	ldw	r7,172(sp)
   2866c:	103f3d1e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   28670:	d9001b17 	ldw	r4,108(sp)
   28674:	d8801c17 	ldw	r2,112(sp)
   28678:	d811883a 	mov	r8,sp
   2867c:	21400044 	addi	r5,r4,1
   28680:	003d4406 	br	27b94 <__alt_data_end+0xfffe8794>
   28684:	d9402017 	ldw	r5,128(sp)
   28688:	d9002117 	ldw	r4,132(sp)
   2868c:	d9801a04 	addi	r6,sp,104
   28690:	d8c02a15 	stw	r3,168(sp)
   28694:	00275700 	call	27570 <__sprint_r.part.0>
   28698:	d8c02a17 	ldw	r3,168(sp)
   2869c:	103f311e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   286a0:	d9001b17 	ldw	r4,108(sp)
   286a4:	d8801c17 	ldw	r2,112(sp)
   286a8:	d811883a 	mov	r8,sp
   286ac:	21400044 	addi	r5,r4,1
   286b0:	003ef406 	br	28284 <__alt_data_end+0xfffe8e84>
   286b4:	1000bd1e 	bne	r2,zero,289ac <___vfiprintf_internal_r+0x1328>
   286b8:	01400044 	movi	r5,1
   286bc:	0009883a 	mov	r4,zero
   286c0:	d811883a 	mov	r8,sp
   286c4:	003ef106 	br	2828c <__alt_data_end+0xfffe8e8c>
   286c8:	d9402017 	ldw	r5,128(sp)
   286cc:	d9002117 	ldw	r4,132(sp)
   286d0:	d9801a04 	addi	r6,sp,104
   286d4:	00275700 	call	27570 <__sprint_r.part.0>
   286d8:	103f221e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   286dc:	d9401b17 	ldw	r5,108(sp)
   286e0:	d8801c17 	ldw	r2,112(sp)
   286e4:	d811883a 	mov	r8,sp
   286e8:	29400044 	addi	r5,r5,1
   286ec:	003d6206 	br	27c78 <__alt_data_end+0xfffe8878>
   286f0:	014000f4 	movhi	r5,3
   286f4:	297fc404 	addi	r5,r5,-240
   286f8:	d9402615 	stw	r5,152(sp)
   286fc:	d8c02215 	stw	r3,136(sp)
   28700:	1023883a 	mov	r17,r2
   28704:	9d04b03a 	or	r2,r19,r20
   28708:	103fa51e 	bne	r2,zero,285a0 <__alt_data_end+0xfffe91a0>
   2870c:	002b883a 	mov	r21,zero
   28710:	00800084 	movi	r2,2
   28714:	003e4a06 	br	28040 <__alt_data_end+0xfffe8c40>
   28718:	014000f4 	movhi	r5,3
   2871c:	297fc404 	addi	r5,r5,-240
   28720:	002b883a 	mov	r21,zero
   28724:	d9402615 	stw	r5,152(sp)
   28728:	003f9e06 	br	285a4 <__alt_data_end+0xfffe91a4>
   2872c:	d9402217 	ldw	r5,136(sp)
   28730:	d8001d85 	stb	zero,118(sp)
   28734:	0029883a 	mov	r20,zero
   28738:	28800104 	addi	r2,r5,4
   2873c:	2cc00017 	ldw	r19,0(r5)
   28740:	803e3a16 	blt	r16,zero,2802c <__alt_data_end+0xfffe8c2c>
   28744:	00ffdfc4 	movi	r3,-129
   28748:	d8802215 	stw	r2,136(sp)
   2874c:	88e2703a 	and	r17,r17,r3
   28750:	002b883a 	mov	r21,zero
   28754:	983e9b26 	beq	r19,zero,281c4 <__alt_data_end+0xfffe8dc4>
   28758:	00800244 	movi	r2,9
   2875c:	14fdc936 	bltu	r2,r19,27e84 <__alt_data_end+0xfffe8a84>
   28760:	003e9a06 	br	281cc <__alt_data_end+0xfffe8dcc>
   28764:	00800c04 	movi	r2,48
   28768:	d8c01d45 	stb	r3,117(sp)
   2876c:	d8801d05 	stb	r2,116(sp)
   28770:	d8001d85 	stb	zero,118(sp)
   28774:	88c00094 	ori	r3,r17,2
   28778:	80009c16 	blt	r16,zero,289ec <___vfiprintf_internal_r+0x1368>
   2877c:	00bfdfc4 	movi	r2,-129
   28780:	88a2703a 	and	r17,r17,r2
   28784:	8c400094 	ori	r17,r17,2
   28788:	002b883a 	mov	r21,zero
   2878c:	003f8506 	br	285a4 <__alt_data_end+0xfffe91a4>
   28790:	b029883a 	mov	r20,r22
   28794:	003c0b06 	br	277c4 <__alt_data_end+0xfffe83c4>
   28798:	04e7c83a 	sub	r19,zero,r19
   2879c:	05400b44 	movi	r21,45
   287a0:	9804c03a 	cmpne	r2,r19,zero
   287a4:	0529c83a 	sub	r20,zero,r20
   287a8:	dd401d85 	stb	r21,118(sp)
   287ac:	a0a9c83a 	sub	r20,r20,r2
   287b0:	80009716 	blt	r16,zero,28a10 <___vfiprintf_internal_r+0x138c>
   287b4:	00bfdfc4 	movi	r2,-129
   287b8:	88a2703a 	and	r17,r17,r2
   287bc:	003db006 	br	27e80 <__alt_data_end+0xfffe8a80>
   287c0:	b0c00007 	ldb	r3,0(r22)
   287c4:	003c0c06 	br	277f8 <__alt_data_end+0xfffe83f8>
   287c8:	8880100c 	andi	r2,r17,64
   287cc:	d8001d85 	stb	zero,118(sp)
   287d0:	1000461e 	bne	r2,zero,288ec <___vfiprintf_internal_r+0x1268>
   287d4:	d9002217 	ldw	r4,136(sp)
   287d8:	0029883a 	mov	r20,zero
   287dc:	20800104 	addi	r2,r4,4
   287e0:	24c00017 	ldw	r19,0(r4)
   287e4:	803df80e 	bge	r16,zero,27fc8 <__alt_data_end+0xfffe8bc8>
   287e8:	9d06b03a 	or	r3,r19,r20
   287ec:	d8802215 	stw	r2,136(sp)
   287f0:	183d5e1e 	bne	r3,zero,27d6c <__alt_data_end+0xfffe896c>
   287f4:	002b883a 	mov	r21,zero
   287f8:	0005883a 	mov	r2,zero
   287fc:	003e1006 	br	28040 <__alt_data_end+0xfffe8c40>
   28800:	8880040c 	andi	r2,r17,16
   28804:	1000321e 	bne	r2,zero,288d0 <___vfiprintf_internal_r+0x124c>
   28808:	8c40100c 	andi	r17,r17,64
   2880c:	88008d26 	beq	r17,zero,28a44 <___vfiprintf_internal_r+0x13c0>
   28810:	d9402217 	ldw	r5,136(sp)
   28814:	d8c02417 	ldw	r3,144(sp)
   28818:	28800017 	ldw	r2,0(r5)
   2881c:	29400104 	addi	r5,r5,4
   28820:	d9402215 	stw	r5,136(sp)
   28824:	10c0000d 	sth	r3,0(r2)
   28828:	003bca06 	br	27754 <__alt_data_end+0xfffe8354>
   2882c:	8880100c 	andi	r2,r17,64
   28830:	10003a26 	beq	r2,zero,2891c <___vfiprintf_internal_r+0x1298>
   28834:	d8802217 	ldw	r2,136(sp)
   28838:	14c0000f 	ldh	r19,0(r2)
   2883c:	10800104 	addi	r2,r2,4
   28840:	d8802215 	stw	r2,136(sp)
   28844:	9829d7fa 	srai	r20,r19,31
   28848:	a005883a 	mov	r2,r20
   2884c:	003d8506 	br	27e64 <__alt_data_end+0xfffe8a64>
   28850:	8880100c 	andi	r2,r17,64
   28854:	10002b26 	beq	r2,zero,28904 <___vfiprintf_internal_r+0x1280>
   28858:	d8802217 	ldw	r2,136(sp)
   2885c:	0029883a 	mov	r20,zero
   28860:	14c0000b 	ldhu	r19,0(r2)
   28864:	10800104 	addi	r2,r2,4
   28868:	d8802215 	stw	r2,136(sp)
   2886c:	003d5d06 	br	27de4 <__alt_data_end+0xfffe89e4>
   28870:	d9402017 	ldw	r5,128(sp)
   28874:	d9002117 	ldw	r4,132(sp)
   28878:	d9801a04 	addi	r6,sp,104
   2887c:	d8c02a15 	stw	r3,168(sp)
   28880:	d9c02b15 	stw	r7,172(sp)
   28884:	00275700 	call	27570 <__sprint_r.part.0>
   28888:	d8c02a17 	ldw	r3,168(sp)
   2888c:	d9c02b17 	ldw	r7,172(sp)
   28890:	103eb41e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   28894:	d9001b17 	ldw	r4,108(sp)
   28898:	d8801c17 	ldw	r2,112(sp)
   2889c:	d811883a 	mov	r8,sp
   288a0:	21400044 	addi	r5,r4,1
   288a4:	003e6706 	br	28244 <__alt_data_end+0xfffe8e44>
   288a8:	00bfffc4 	movi	r2,-1
   288ac:	003c4a06 	br	279d8 <__alt_data_end+0xfffe85d8>
   288b0:	9805883a 	mov	r2,r19
   288b4:	003ee806 	br	28458 <__alt_data_end+0xfffe9058>
   288b8:	d8c02217 	ldw	r3,136(sp)
   288bc:	0029883a 	mov	r20,zero
   288c0:	18800104 	addi	r2,r3,4
   288c4:	1cc0000b 	ldhu	r19,0(r3)
   288c8:	803f9e0e 	bge	r16,zero,28744 <__alt_data_end+0xfffe9344>
   288cc:	003dd706 	br	2802c <__alt_data_end+0xfffe8c2c>
   288d0:	d8c02217 	ldw	r3,136(sp)
   288d4:	d9002417 	ldw	r4,144(sp)
   288d8:	18800017 	ldw	r2,0(r3)
   288dc:	18c00104 	addi	r3,r3,4
   288e0:	d8c02215 	stw	r3,136(sp)
   288e4:	11000015 	stw	r4,0(r2)
   288e8:	003b9a06 	br	27754 <__alt_data_end+0xfffe8354>
   288ec:	d8c02217 	ldw	r3,136(sp)
   288f0:	0029883a 	mov	r20,zero
   288f4:	18800104 	addi	r2,r3,4
   288f8:	1cc0000b 	ldhu	r19,0(r3)
   288fc:	803db20e 	bge	r16,zero,27fc8 <__alt_data_end+0xfffe8bc8>
   28900:	003fb906 	br	287e8 <__alt_data_end+0xfffe93e8>
   28904:	d9002217 	ldw	r4,136(sp)
   28908:	0029883a 	mov	r20,zero
   2890c:	24c00017 	ldw	r19,0(r4)
   28910:	21000104 	addi	r4,r4,4
   28914:	d9002215 	stw	r4,136(sp)
   28918:	003d3206 	br	27de4 <__alt_data_end+0xfffe89e4>
   2891c:	d8c02217 	ldw	r3,136(sp)
   28920:	1cc00017 	ldw	r19,0(r3)
   28924:	18c00104 	addi	r3,r3,4
   28928:	d8c02215 	stw	r3,136(sp)
   2892c:	9829d7fa 	srai	r20,r19,31
   28930:	a005883a 	mov	r2,r20
   28934:	003d4b06 	br	27e64 <__alt_data_end+0xfffe8a64>
   28938:	0009883a 	mov	r4,zero
   2893c:	01400044 	movi	r5,1
   28940:	d811883a 	mov	r8,sp
   28944:	003e4f06 	br	28284 <__alt_data_end+0xfffe8e84>
   28948:	d8c02215 	stw	r3,136(sp)
   2894c:	002b883a 	mov	r21,zero
   28950:	003db806 	br	28034 <__alt_data_end+0xfffe8c34>
   28954:	d811883a 	mov	r8,sp
   28958:	003e9606 	br	283b4 <__alt_data_end+0xfffe8fb4>
   2895c:	010000f4 	movhi	r4,3
   28960:	21002504 	addi	r4,r4,148
   28964:	d9002315 	stw	r4,140(sp)
   28968:	003e6306 	br	282f8 <__alt_data_end+0xfffe8ef8>
   2896c:	b0c00043 	ldbu	r3,1(r22)
   28970:	8c400814 	ori	r17,r17,32
   28974:	b5800044 	addi	r22,r22,1
   28978:	18c03fcc 	andi	r3,r3,255
   2897c:	18c0201c 	xori	r3,r3,128
   28980:	18ffe004 	addi	r3,r3,-128
   28984:	003b9c06 	br	277f8 <__alt_data_end+0xfffe83f8>
   28988:	b809883a 	mov	r4,r23
   2898c:	da002a15 	stw	r8,168(sp)
   28990:	00274d80 	call	274d8 <strlen>
   28994:	1029883a 	mov	r20,r2
   28998:	dd401d83 	ldbu	r21,118(sp)
   2899c:	df002215 	stw	fp,136(sp)
   289a0:	0021883a 	mov	r16,zero
   289a4:	da002a17 	ldw	r8,168(sp)
   289a8:	003c3906 	br	27a90 <__alt_data_end+0xfffe8690>
   289ac:	d9402017 	ldw	r5,128(sp)
   289b0:	d9002117 	ldw	r4,132(sp)
   289b4:	d9801a04 	addi	r6,sp,104
   289b8:	00275700 	call	27570 <__sprint_r.part.0>
   289bc:	103e691e 	bne	r2,zero,28364 <__alt_data_end+0xfffe8f64>
   289c0:	d9001b17 	ldw	r4,108(sp)
   289c4:	d8801c17 	ldw	r2,112(sp)
   289c8:	d811883a 	mov	r8,sp
   289cc:	21400044 	addi	r5,r4,1
   289d0:	003e2e06 	br	2828c <__alt_data_end+0xfffe8e8c>
   289d4:	010000f4 	movhi	r4,3
   289d8:	21002904 	addi	r4,r4,164
   289dc:	d9002315 	stw	r4,140(sp)
   289e0:	d9001b17 	ldw	r4,108(sp)
   289e4:	21000044 	addi	r4,r4,1
   289e8:	003c5e06 	br	27b64 <__alt_data_end+0xfffe8764>
   289ec:	002b883a 	mov	r21,zero
   289f0:	00800084 	movi	r2,2
   289f4:	10803fcc 	andi	r2,r2,255
   289f8:	01000044 	movi	r4,1
   289fc:	11002b26 	beq	r2,r4,28aac <___vfiprintf_internal_r+0x1428>
   28a00:	01000084 	movi	r4,2
   28a04:	11002b1e 	bne	r2,r4,28ab4 <___vfiprintf_internal_r+0x1430>
   28a08:	1823883a 	mov	r17,r3
   28a0c:	003ee506 	br	285a4 <__alt_data_end+0xfffe91a4>
   28a10:	8807883a 	mov	r3,r17
   28a14:	00800044 	movi	r2,1
   28a18:	003ff606 	br	289f4 <__alt_data_end+0xfffe95f4>
   28a1c:	00800184 	movi	r2,6
   28a20:	1400012e 	bgeu	r2,r16,28a28 <___vfiprintf_internal_r+0x13a4>
   28a24:	1021883a 	mov	r16,r2
   28a28:	8029883a 	mov	r20,r16
   28a2c:	8027883a 	mov	r19,r16
   28a30:	80002216 	blt	r16,zero,28abc <___vfiprintf_internal_r+0x1438>
   28a34:	05c000f4 	movhi	r23,3
   28a38:	df002215 	stw	fp,136(sp)
   28a3c:	bdffc904 	addi	r23,r23,-220
   28a40:	003cfb06 	br	27e30 <__alt_data_end+0xfffe8a30>
   28a44:	d9002217 	ldw	r4,136(sp)
   28a48:	d9402417 	ldw	r5,144(sp)
   28a4c:	20800017 	ldw	r2,0(r4)
   28a50:	21000104 	addi	r4,r4,4
   28a54:	d9002215 	stw	r4,136(sp)
   28a58:	11400015 	stw	r5,0(r2)
   28a5c:	003b3d06 	br	27754 <__alt_data_end+0xfffe8354>
   28a60:	014000f4 	movhi	r5,3
   28a64:	29402904 	addi	r5,r5,164
   28a68:	d9402315 	stw	r5,140(sp)
   28a6c:	d9401b17 	ldw	r5,108(sp)
   28a70:	29400044 	addi	r5,r5,1
   28a74:	003e6d06 	br	2842c <__alt_data_end+0xfffe902c>
   28a78:	8029883a 	mov	r20,r16
   28a7c:	dd401d83 	ldbu	r21,118(sp)
   28a80:	df002215 	stw	fp,136(sp)
   28a84:	0021883a 	mov	r16,zero
   28a88:	003c0106 	br	27a90 <__alt_data_end+0xfffe8690>
   28a8c:	00c000f4 	movhi	r3,3
   28a90:	18c02504 	addi	r3,r3,148
   28a94:	d8c02315 	stw	r3,140(sp)
   28a98:	280d883a 	mov	r6,r5
   28a9c:	003c6906 	br	27c44 <__alt_data_end+0xfffe8844>
   28aa0:	802d883a 	mov	r22,r16
   28aa4:	0021883a 	mov	r16,zero
   28aa8:	003b5406 	br	277fc <__alt_data_end+0xfffe83fc>
   28aac:	1823883a 	mov	r17,r3
   28ab0:	003cf306 	br	27e80 <__alt_data_end+0xfffe8a80>
   28ab4:	1823883a 	mov	r17,r3
   28ab8:	003cad06 	br	27d70 <__alt_data_end+0xfffe8970>
   28abc:	0027883a 	mov	r19,zero
   28ac0:	003fdc06 	br	28a34 <__alt_data_end+0xfffe9634>
   28ac4:	d9402217 	ldw	r5,136(sp)
   28ac8:	8005883a 	mov	r2,r16
   28acc:	b0c00043 	ldbu	r3,1(r22)
   28ad0:	2c000017 	ldw	r16,0(r5)
   28ad4:	29000104 	addi	r4,r5,4
   28ad8:	d9002215 	stw	r4,136(sp)
   28adc:	102d883a 	mov	r22,r2
   28ae0:	803fa50e 	bge	r16,zero,28978 <__alt_data_end+0xfffe9578>
   28ae4:	18c03fcc 	andi	r3,r3,255
   28ae8:	18c0201c 	xori	r3,r3,128
   28aec:	043fffc4 	movi	r16,-1
   28af0:	18ffe004 	addi	r3,r3,-128
   28af4:	003b4006 	br	277f8 <__alt_data_end+0xfffe83f8>
   28af8:	d9402303 	ldbu	r5,140(sp)
   28afc:	d9401d85 	stb	r5,118(sp)
   28b00:	003cae06 	br	27dbc <__alt_data_end+0xfffe89bc>
   28b04:	d8c02303 	ldbu	r3,140(sp)
   28b08:	d8c01d85 	stb	r3,118(sp)
   28b0c:	003d1406 	br	27f60 <__alt_data_end+0xfffe8b60>
   28b10:	d8c02303 	ldbu	r3,140(sp)
   28b14:	d8c01d85 	stb	r3,118(sp)
   28b18:	003cca06 	br	27e44 <__alt_data_end+0xfffe8a44>
   28b1c:	8880004c 	andi	r2,r17,1
   28b20:	002b883a 	mov	r21,zero
   28b24:	10000526 	beq	r2,zero,28b3c <___vfiprintf_internal_r+0x14b8>
   28b28:	00800c04 	movi	r2,48
   28b2c:	d88019c5 	stb	r2,103(sp)
   28b30:	dd002817 	ldw	r20,160(sp)
   28b34:	ddc019c4 	addi	r23,sp,103
   28b38:	003bd506 	br	27a90 <__alt_data_end+0xfffe8690>
   28b3c:	0029883a 	mov	r20,zero
   28b40:	ddc01a04 	addi	r23,sp,104
   28b44:	003bd206 	br	27a90 <__alt_data_end+0xfffe8690>
   28b48:	d9002303 	ldbu	r4,140(sp)
   28b4c:	d9001d85 	stb	r4,118(sp)
   28b50:	003da606 	br	281ec <__alt_data_end+0xfffe8dec>
   28b54:	d8c02303 	ldbu	r3,140(sp)
   28b58:	d8c01d85 	stb	r3,118(sp)
   28b5c:	003c7606 	br	27d38 <__alt_data_end+0xfffe8938>
   28b60:	d8c02303 	ldbu	r3,140(sp)
   28b64:	d8c01d85 	stb	r3,118(sp)
   28b68:	003c6506 	br	27d00 <__alt_data_end+0xfffe8900>
   28b6c:	d9002303 	ldbu	r4,140(sp)
   28b70:	d9001d85 	stb	r4,118(sp)
   28b74:	003d3d06 	br	2806c <__alt_data_end+0xfffe8c6c>
   28b78:	d8c02303 	ldbu	r3,140(sp)
   28b7c:	d8c01d85 	stb	r3,118(sp)
   28b80:	003d1d06 	br	27ff8 <__alt_data_end+0xfffe8bf8>
   28b84:	d8c02303 	ldbu	r3,140(sp)
   28b88:	d8c01d85 	stb	r3,118(sp)
   28b8c:	003d0306 	br	27f9c <__alt_data_end+0xfffe8b9c>

00028b90 <__vfiprintf_internal>:
   28b90:	008000f4 	movhi	r2,3
   28b94:	10872604 	addi	r2,r2,7320
   28b98:	300f883a 	mov	r7,r6
   28b9c:	280d883a 	mov	r6,r5
   28ba0:	200b883a 	mov	r5,r4
   28ba4:	11000017 	ldw	r4,0(r2)
   28ba8:	00276841 	jmpi	27684 <___vfiprintf_internal_r>

00028bac <__sbprintf>:
   28bac:	2880030b 	ldhu	r2,12(r5)
   28bb0:	2ac01917 	ldw	r11,100(r5)
   28bb4:	2a80038b 	ldhu	r10,14(r5)
   28bb8:	2a400717 	ldw	r9,28(r5)
   28bbc:	2a000917 	ldw	r8,36(r5)
   28bc0:	defee204 	addi	sp,sp,-1144
   28bc4:	00c10004 	movi	r3,1024
   28bc8:	dc011a15 	stw	r16,1128(sp)
   28bcc:	10bfff4c 	andi	r2,r2,65533
   28bd0:	2821883a 	mov	r16,r5
   28bd4:	d8cb883a 	add	r5,sp,r3
   28bd8:	dc811c15 	stw	r18,1136(sp)
   28bdc:	dc411b15 	stw	r17,1132(sp)
   28be0:	dfc11d15 	stw	ra,1140(sp)
   28be4:	2025883a 	mov	r18,r4
   28be8:	d881030d 	sth	r2,1036(sp)
   28bec:	dac11915 	stw	r11,1124(sp)
   28bf0:	da81038d 	sth	r10,1038(sp)
   28bf4:	da410715 	stw	r9,1052(sp)
   28bf8:	da010915 	stw	r8,1060(sp)
   28bfc:	dec10015 	stw	sp,1024(sp)
   28c00:	dec10415 	stw	sp,1040(sp)
   28c04:	d8c10215 	stw	r3,1032(sp)
   28c08:	d8c10515 	stw	r3,1044(sp)
   28c0c:	d8010615 	stw	zero,1048(sp)
   28c10:	00276840 	call	27684 <___vfiprintf_internal_r>
   28c14:	1023883a 	mov	r17,r2
   28c18:	10000416 	blt	r2,zero,28c2c <__sbprintf+0x80>
   28c1c:	d9410004 	addi	r5,sp,1024
   28c20:	9009883a 	mov	r4,r18
   28c24:	0024a2c0 	call	24a2c <_fflush_r>
   28c28:	10000d1e 	bne	r2,zero,28c60 <__sbprintf+0xb4>
   28c2c:	d881030b 	ldhu	r2,1036(sp)
   28c30:	1080100c 	andi	r2,r2,64
   28c34:	10000326 	beq	r2,zero,28c44 <__sbprintf+0x98>
   28c38:	8080030b 	ldhu	r2,12(r16)
   28c3c:	10801014 	ori	r2,r2,64
   28c40:	8080030d 	sth	r2,12(r16)
   28c44:	8805883a 	mov	r2,r17
   28c48:	dfc11d17 	ldw	ra,1140(sp)
   28c4c:	dc811c17 	ldw	r18,1136(sp)
   28c50:	dc411b17 	ldw	r17,1132(sp)
   28c54:	dc011a17 	ldw	r16,1128(sp)
   28c58:	dec11e04 	addi	sp,sp,1144
   28c5c:	f800283a 	ret
   28c60:	047fffc4 	movi	r17,-1
   28c64:	003ff106 	br	28c2c <__alt_data_end+0xfffe982c>

00028c68 <_write_r>:
   28c68:	defffd04 	addi	sp,sp,-12
   28c6c:	2805883a 	mov	r2,r5
   28c70:	dc000015 	stw	r16,0(sp)
   28c74:	040000f4 	movhi	r16,3
   28c78:	dc400115 	stw	r17,4(sp)
   28c7c:	300b883a 	mov	r5,r6
   28c80:	840dfe04 	addi	r16,r16,14328
   28c84:	2023883a 	mov	r17,r4
   28c88:	380d883a 	mov	r6,r7
   28c8c:	1009883a 	mov	r4,r2
   28c90:	dfc00215 	stw	ra,8(sp)
   28c94:	80000015 	stw	zero,0(r16)
   28c98:	002e2b00 	call	2e2b0 <write>
   28c9c:	00ffffc4 	movi	r3,-1
   28ca0:	10c00526 	beq	r2,r3,28cb8 <_write_r+0x50>
   28ca4:	dfc00217 	ldw	ra,8(sp)
   28ca8:	dc400117 	ldw	r17,4(sp)
   28cac:	dc000017 	ldw	r16,0(sp)
   28cb0:	dec00304 	addi	sp,sp,12
   28cb4:	f800283a 	ret
   28cb8:	80c00017 	ldw	r3,0(r16)
   28cbc:	183ff926 	beq	r3,zero,28ca4 <__alt_data_end+0xfffe98a4>
   28cc0:	88c00015 	stw	r3,0(r17)
   28cc4:	003ff706 	br	28ca4 <__alt_data_end+0xfffe98a4>

00028cc8 <_close_r>:
   28cc8:	defffd04 	addi	sp,sp,-12
   28ccc:	dc000015 	stw	r16,0(sp)
   28cd0:	040000f4 	movhi	r16,3
   28cd4:	dc400115 	stw	r17,4(sp)
   28cd8:	840dfe04 	addi	r16,r16,14328
   28cdc:	2023883a 	mov	r17,r4
   28ce0:	2809883a 	mov	r4,r5
   28ce4:	dfc00215 	stw	ra,8(sp)
   28ce8:	80000015 	stw	zero,0(r16)
   28cec:	002d7b80 	call	2d7b8 <close>
   28cf0:	00ffffc4 	movi	r3,-1
   28cf4:	10c00526 	beq	r2,r3,28d0c <_close_r+0x44>
   28cf8:	dfc00217 	ldw	ra,8(sp)
   28cfc:	dc400117 	ldw	r17,4(sp)
   28d00:	dc000017 	ldw	r16,0(sp)
   28d04:	dec00304 	addi	sp,sp,12
   28d08:	f800283a 	ret
   28d0c:	80c00017 	ldw	r3,0(r16)
   28d10:	183ff926 	beq	r3,zero,28cf8 <__alt_data_end+0xfffe98f8>
   28d14:	88c00015 	stw	r3,0(r17)
   28d18:	003ff706 	br	28cf8 <__alt_data_end+0xfffe98f8>

00028d1c <_calloc_r>:
   28d1c:	defffe04 	addi	sp,sp,-8
   28d20:	2805883a 	mov	r2,r5
   28d24:	dc000015 	stw	r16,0(sp)
   28d28:	300b883a 	mov	r5,r6
   28d2c:	2021883a 	mov	r16,r4
   28d30:	1009883a 	mov	r4,r2
   28d34:	dfc00115 	stw	ra,4(sp)
   28d38:	002aeb00 	call	2aeb0 <__mulsi3>
   28d3c:	100b883a 	mov	r5,r2
   28d40:	8009883a 	mov	r4,r16
   28d44:	00256bc0 	call	256bc <_malloc_r>
   28d48:	10002926 	beq	r2,zero,28df0 <_calloc_r+0xd4>
   28d4c:	11bfff17 	ldw	r6,-4(r2)
   28d50:	1021883a 	mov	r16,r2
   28d54:	00bfff04 	movi	r2,-4
   28d58:	308c703a 	and	r6,r6,r2
   28d5c:	00c00904 	movi	r3,36
   28d60:	308d883a 	add	r6,r6,r2
   28d64:	19801636 	bltu	r3,r6,28dc0 <_calloc_r+0xa4>
   28d68:	008004c4 	movi	r2,19
   28d6c:	11800b2e 	bgeu	r2,r6,28d9c <_calloc_r+0x80>
   28d70:	80000015 	stw	zero,0(r16)
   28d74:	80000115 	stw	zero,4(r16)
   28d78:	008006c4 	movi	r2,27
   28d7c:	11801a2e 	bgeu	r2,r6,28de8 <_calloc_r+0xcc>
   28d80:	80000215 	stw	zero,8(r16)
   28d84:	80000315 	stw	zero,12(r16)
   28d88:	30c0151e 	bne	r6,r3,28de0 <_calloc_r+0xc4>
   28d8c:	80000415 	stw	zero,16(r16)
   28d90:	80800604 	addi	r2,r16,24
   28d94:	80000515 	stw	zero,20(r16)
   28d98:	00000106 	br	28da0 <_calloc_r+0x84>
   28d9c:	8005883a 	mov	r2,r16
   28da0:	10000015 	stw	zero,0(r2)
   28da4:	10000115 	stw	zero,4(r2)
   28da8:	10000215 	stw	zero,8(r2)
   28dac:	8005883a 	mov	r2,r16
   28db0:	dfc00117 	ldw	ra,4(sp)
   28db4:	dc000017 	ldw	r16,0(sp)
   28db8:	dec00204 	addi	sp,sp,8
   28dbc:	f800283a 	ret
   28dc0:	000b883a 	mov	r5,zero
   28dc4:	8009883a 	mov	r4,r16
   28dc8:	00260f40 	call	260f4 <memset>
   28dcc:	8005883a 	mov	r2,r16
   28dd0:	dfc00117 	ldw	ra,4(sp)
   28dd4:	dc000017 	ldw	r16,0(sp)
   28dd8:	dec00204 	addi	sp,sp,8
   28ddc:	f800283a 	ret
   28de0:	80800404 	addi	r2,r16,16
   28de4:	003fee06 	br	28da0 <__alt_data_end+0xfffe99a0>
   28de8:	80800204 	addi	r2,r16,8
   28dec:	003fec06 	br	28da0 <__alt_data_end+0xfffe99a0>
   28df0:	0005883a 	mov	r2,zero
   28df4:	003fee06 	br	28db0 <__alt_data_end+0xfffe99b0>

00028df8 <_fclose_r>:
   28df8:	28003926 	beq	r5,zero,28ee0 <_fclose_r+0xe8>
   28dfc:	defffc04 	addi	sp,sp,-16
   28e00:	dc400115 	stw	r17,4(sp)
   28e04:	dc000015 	stw	r16,0(sp)
   28e08:	dfc00315 	stw	ra,12(sp)
   28e0c:	dc800215 	stw	r18,8(sp)
   28e10:	2023883a 	mov	r17,r4
   28e14:	2821883a 	mov	r16,r5
   28e18:	20000226 	beq	r4,zero,28e24 <_fclose_r+0x2c>
   28e1c:	20800e17 	ldw	r2,56(r4)
   28e20:	10002726 	beq	r2,zero,28ec0 <_fclose_r+0xc8>
   28e24:	8080030f 	ldh	r2,12(r16)
   28e28:	1000071e 	bne	r2,zero,28e48 <_fclose_r+0x50>
   28e2c:	0005883a 	mov	r2,zero
   28e30:	dfc00317 	ldw	ra,12(sp)
   28e34:	dc800217 	ldw	r18,8(sp)
   28e38:	dc400117 	ldw	r17,4(sp)
   28e3c:	dc000017 	ldw	r16,0(sp)
   28e40:	dec00404 	addi	sp,sp,16
   28e44:	f800283a 	ret
   28e48:	800b883a 	mov	r5,r16
   28e4c:	8809883a 	mov	r4,r17
   28e50:	00248100 	call	24810 <__sflush_r>
   28e54:	1025883a 	mov	r18,r2
   28e58:	80800b17 	ldw	r2,44(r16)
   28e5c:	10000426 	beq	r2,zero,28e70 <_fclose_r+0x78>
   28e60:	81400717 	ldw	r5,28(r16)
   28e64:	8809883a 	mov	r4,r17
   28e68:	103ee83a 	callr	r2
   28e6c:	10001616 	blt	r2,zero,28ec8 <_fclose_r+0xd0>
   28e70:	8080030b 	ldhu	r2,12(r16)
   28e74:	1080200c 	andi	r2,r2,128
   28e78:	1000151e 	bne	r2,zero,28ed0 <_fclose_r+0xd8>
   28e7c:	81400c17 	ldw	r5,48(r16)
   28e80:	28000526 	beq	r5,zero,28e98 <_fclose_r+0xa0>
   28e84:	80801004 	addi	r2,r16,64
   28e88:	28800226 	beq	r5,r2,28e94 <_fclose_r+0x9c>
   28e8c:	8809883a 	mov	r4,r17
   28e90:	0024f8c0 	call	24f8c <_free_r>
   28e94:	80000c15 	stw	zero,48(r16)
   28e98:	81401117 	ldw	r5,68(r16)
   28e9c:	28000326 	beq	r5,zero,28eac <_fclose_r+0xb4>
   28ea0:	8809883a 	mov	r4,r17
   28ea4:	0024f8c0 	call	24f8c <_free_r>
   28ea8:	80001115 	stw	zero,68(r16)
   28eac:	0024e280 	call	24e28 <__sfp_lock_acquire>
   28eb0:	8000030d 	sth	zero,12(r16)
   28eb4:	0024e2c0 	call	24e2c <__sfp_lock_release>
   28eb8:	9005883a 	mov	r2,r18
   28ebc:	003fdc06 	br	28e30 <__alt_data_end+0xfffe9a30>
   28ec0:	0024e180 	call	24e18 <__sinit>
   28ec4:	003fd706 	br	28e24 <__alt_data_end+0xfffe9a24>
   28ec8:	04bfffc4 	movi	r18,-1
   28ecc:	003fe806 	br	28e70 <__alt_data_end+0xfffe9a70>
   28ed0:	81400417 	ldw	r5,16(r16)
   28ed4:	8809883a 	mov	r4,r17
   28ed8:	0024f8c0 	call	24f8c <_free_r>
   28edc:	003fe706 	br	28e7c <__alt_data_end+0xfffe9a7c>
   28ee0:	0005883a 	mov	r2,zero
   28ee4:	f800283a 	ret

00028ee8 <fclose>:
   28ee8:	008000f4 	movhi	r2,3
   28eec:	10872604 	addi	r2,r2,7320
   28ef0:	200b883a 	mov	r5,r4
   28ef4:	11000017 	ldw	r4,0(r2)
   28ef8:	0028df81 	jmpi	28df8 <_fclose_r>

00028efc <__fputwc>:
   28efc:	defff804 	addi	sp,sp,-32
   28f00:	dcc00415 	stw	r19,16(sp)
   28f04:	dc800315 	stw	r18,12(sp)
   28f08:	dc000115 	stw	r16,4(sp)
   28f0c:	dfc00715 	stw	ra,28(sp)
   28f10:	dd400615 	stw	r21,24(sp)
   28f14:	dd000515 	stw	r20,20(sp)
   28f18:	dc400215 	stw	r17,8(sp)
   28f1c:	2027883a 	mov	r19,r4
   28f20:	2825883a 	mov	r18,r5
   28f24:	3021883a 	mov	r16,r6
   28f28:	00254ac0 	call	254ac <__locale_mb_cur_max>
   28f2c:	00c00044 	movi	r3,1
   28f30:	10c03e26 	beq	r2,r3,2902c <__fputwc+0x130>
   28f34:	81c01704 	addi	r7,r16,92
   28f38:	900d883a 	mov	r6,r18
   28f3c:	d80b883a 	mov	r5,sp
   28f40:	9809883a 	mov	r4,r19
   28f44:	0029f540 	call	29f54 <_wcrtomb_r>
   28f48:	1029883a 	mov	r20,r2
   28f4c:	00bfffc4 	movi	r2,-1
   28f50:	a0802026 	beq	r20,r2,28fd4 <__fputwc+0xd8>
   28f54:	d9400003 	ldbu	r5,0(sp)
   28f58:	a0001c26 	beq	r20,zero,28fcc <__fputwc+0xd0>
   28f5c:	0023883a 	mov	r17,zero
   28f60:	05400284 	movi	r21,10
   28f64:	00000906 	br	28f8c <__fputwc+0x90>
   28f68:	80800017 	ldw	r2,0(r16)
   28f6c:	11400005 	stb	r5,0(r2)
   28f70:	80c00017 	ldw	r3,0(r16)
   28f74:	18c00044 	addi	r3,r3,1
   28f78:	80c00015 	stw	r3,0(r16)
   28f7c:	8c400044 	addi	r17,r17,1
   28f80:	dc45883a 	add	r2,sp,r17
   28f84:	8d00112e 	bgeu	r17,r20,28fcc <__fputwc+0xd0>
   28f88:	11400003 	ldbu	r5,0(r2)
   28f8c:	80c00217 	ldw	r3,8(r16)
   28f90:	18ffffc4 	addi	r3,r3,-1
   28f94:	80c00215 	stw	r3,8(r16)
   28f98:	183ff30e 	bge	r3,zero,28f68 <__alt_data_end+0xfffe9b68>
   28f9c:	80800617 	ldw	r2,24(r16)
   28fa0:	18801916 	blt	r3,r2,29008 <__fputwc+0x10c>
   28fa4:	80800017 	ldw	r2,0(r16)
   28fa8:	11400005 	stb	r5,0(r2)
   28fac:	80800017 	ldw	r2,0(r16)
   28fb0:	10c00003 	ldbu	r3,0(r2)
   28fb4:	10800044 	addi	r2,r2,1
   28fb8:	1d402326 	beq	r3,r21,29048 <__fputwc+0x14c>
   28fbc:	80800015 	stw	r2,0(r16)
   28fc0:	8c400044 	addi	r17,r17,1
   28fc4:	dc45883a 	add	r2,sp,r17
   28fc8:	8d3fef36 	bltu	r17,r20,28f88 <__alt_data_end+0xfffe9b88>
   28fcc:	9005883a 	mov	r2,r18
   28fd0:	00000406 	br	28fe4 <__fputwc+0xe8>
   28fd4:	80c0030b 	ldhu	r3,12(r16)
   28fd8:	a005883a 	mov	r2,r20
   28fdc:	18c01014 	ori	r3,r3,64
   28fe0:	80c0030d 	sth	r3,12(r16)
   28fe4:	dfc00717 	ldw	ra,28(sp)
   28fe8:	dd400617 	ldw	r21,24(sp)
   28fec:	dd000517 	ldw	r20,20(sp)
   28ff0:	dcc00417 	ldw	r19,16(sp)
   28ff4:	dc800317 	ldw	r18,12(sp)
   28ff8:	dc400217 	ldw	r17,8(sp)
   28ffc:	dc000117 	ldw	r16,4(sp)
   29000:	dec00804 	addi	sp,sp,32
   29004:	f800283a 	ret
   29008:	800d883a 	mov	r6,r16
   2900c:	29403fcc 	andi	r5,r5,255
   29010:	9809883a 	mov	r4,r19
   29014:	0029dfc0 	call	29dfc <__swbuf_r>
   29018:	10bfffe0 	cmpeqi	r2,r2,-1
   2901c:	10803fcc 	andi	r2,r2,255
   29020:	103fd626 	beq	r2,zero,28f7c <__alt_data_end+0xfffe9b7c>
   29024:	00bfffc4 	movi	r2,-1
   29028:	003fee06 	br	28fe4 <__alt_data_end+0xfffe9be4>
   2902c:	90ffffc4 	addi	r3,r18,-1
   29030:	01003f84 	movi	r4,254
   29034:	20ffbf36 	bltu	r4,r3,28f34 <__alt_data_end+0xfffe9b34>
   29038:	900b883a 	mov	r5,r18
   2903c:	dc800005 	stb	r18,0(sp)
   29040:	1029883a 	mov	r20,r2
   29044:	003fc506 	br	28f5c <__alt_data_end+0xfffe9b5c>
   29048:	800d883a 	mov	r6,r16
   2904c:	a80b883a 	mov	r5,r21
   29050:	9809883a 	mov	r4,r19
   29054:	0029dfc0 	call	29dfc <__swbuf_r>
   29058:	10bfffe0 	cmpeqi	r2,r2,-1
   2905c:	003fef06 	br	2901c <__alt_data_end+0xfffe9c1c>

00029060 <_fputwc_r>:
   29060:	3080030b 	ldhu	r2,12(r6)
   29064:	10c8000c 	andi	r3,r2,8192
   29068:	1800051e 	bne	r3,zero,29080 <_fputwc_r+0x20>
   2906c:	30c01917 	ldw	r3,100(r6)
   29070:	10880014 	ori	r2,r2,8192
   29074:	3080030d 	sth	r2,12(r6)
   29078:	18880014 	ori	r2,r3,8192
   2907c:	30801915 	stw	r2,100(r6)
   29080:	0028efc1 	jmpi	28efc <__fputwc>

00029084 <fputwc>:
   29084:	008000f4 	movhi	r2,3
   29088:	defffc04 	addi	sp,sp,-16
   2908c:	10872604 	addi	r2,r2,7320
   29090:	dc000115 	stw	r16,4(sp)
   29094:	14000017 	ldw	r16,0(r2)
   29098:	dc400215 	stw	r17,8(sp)
   2909c:	dfc00315 	stw	ra,12(sp)
   290a0:	2023883a 	mov	r17,r4
   290a4:	80000226 	beq	r16,zero,290b0 <fputwc+0x2c>
   290a8:	80800e17 	ldw	r2,56(r16)
   290ac:	10001026 	beq	r2,zero,290f0 <fputwc+0x6c>
   290b0:	2880030b 	ldhu	r2,12(r5)
   290b4:	10c8000c 	andi	r3,r2,8192
   290b8:	1800051e 	bne	r3,zero,290d0 <fputwc+0x4c>
   290bc:	28c01917 	ldw	r3,100(r5)
   290c0:	10880014 	ori	r2,r2,8192
   290c4:	2880030d 	sth	r2,12(r5)
   290c8:	18880014 	ori	r2,r3,8192
   290cc:	28801915 	stw	r2,100(r5)
   290d0:	280d883a 	mov	r6,r5
   290d4:	8009883a 	mov	r4,r16
   290d8:	880b883a 	mov	r5,r17
   290dc:	dfc00317 	ldw	ra,12(sp)
   290e0:	dc400217 	ldw	r17,8(sp)
   290e4:	dc000117 	ldw	r16,4(sp)
   290e8:	dec00404 	addi	sp,sp,16
   290ec:	0028efc1 	jmpi	28efc <__fputwc>
   290f0:	8009883a 	mov	r4,r16
   290f4:	d9400015 	stw	r5,0(sp)
   290f8:	0024e180 	call	24e18 <__sinit>
   290fc:	d9400017 	ldw	r5,0(sp)
   29100:	003feb06 	br	290b0 <__alt_data_end+0xfffe9cb0>

00029104 <_fstat_r>:
   29104:	defffd04 	addi	sp,sp,-12
   29108:	2805883a 	mov	r2,r5
   2910c:	dc000015 	stw	r16,0(sp)
   29110:	040000f4 	movhi	r16,3
   29114:	dc400115 	stw	r17,4(sp)
   29118:	840dfe04 	addi	r16,r16,14328
   2911c:	2023883a 	mov	r17,r4
   29120:	300b883a 	mov	r5,r6
   29124:	1009883a 	mov	r4,r2
   29128:	dfc00215 	stw	ra,8(sp)
   2912c:	80000015 	stw	zero,0(r16)
   29130:	002d8f80 	call	2d8f8 <fstat>
   29134:	00ffffc4 	movi	r3,-1
   29138:	10c00526 	beq	r2,r3,29150 <_fstat_r+0x4c>
   2913c:	dfc00217 	ldw	ra,8(sp)
   29140:	dc400117 	ldw	r17,4(sp)
   29144:	dc000017 	ldw	r16,0(sp)
   29148:	dec00304 	addi	sp,sp,12
   2914c:	f800283a 	ret
   29150:	80c00017 	ldw	r3,0(r16)
   29154:	183ff926 	beq	r3,zero,2913c <__alt_data_end+0xfffe9d3c>
   29158:	88c00015 	stw	r3,0(r17)
   2915c:	003ff706 	br	2913c <__alt_data_end+0xfffe9d3c>

00029160 <__sfvwrite_r>:
   29160:	30800217 	ldw	r2,8(r6)
   29164:	10006726 	beq	r2,zero,29304 <__sfvwrite_r+0x1a4>
   29168:	28c0030b 	ldhu	r3,12(r5)
   2916c:	defff404 	addi	sp,sp,-48
   29170:	dd400715 	stw	r21,28(sp)
   29174:	dd000615 	stw	r20,24(sp)
   29178:	dc000215 	stw	r16,8(sp)
   2917c:	dfc00b15 	stw	ra,44(sp)
   29180:	df000a15 	stw	fp,40(sp)
   29184:	ddc00915 	stw	r23,36(sp)
   29188:	dd800815 	stw	r22,32(sp)
   2918c:	dcc00515 	stw	r19,20(sp)
   29190:	dc800415 	stw	r18,16(sp)
   29194:	dc400315 	stw	r17,12(sp)
   29198:	1880020c 	andi	r2,r3,8
   2919c:	2821883a 	mov	r16,r5
   291a0:	202b883a 	mov	r21,r4
   291a4:	3029883a 	mov	r20,r6
   291a8:	10002726 	beq	r2,zero,29248 <__sfvwrite_r+0xe8>
   291ac:	28800417 	ldw	r2,16(r5)
   291b0:	10002526 	beq	r2,zero,29248 <__sfvwrite_r+0xe8>
   291b4:	1880008c 	andi	r2,r3,2
   291b8:	a4400017 	ldw	r17,0(r20)
   291bc:	10002a26 	beq	r2,zero,29268 <__sfvwrite_r+0x108>
   291c0:	05a00034 	movhi	r22,32768
   291c4:	0027883a 	mov	r19,zero
   291c8:	0025883a 	mov	r18,zero
   291cc:	b5bf0004 	addi	r22,r22,-1024
   291d0:	980d883a 	mov	r6,r19
   291d4:	a809883a 	mov	r4,r21
   291d8:	90004626 	beq	r18,zero,292f4 <__sfvwrite_r+0x194>
   291dc:	900f883a 	mov	r7,r18
   291e0:	b480022e 	bgeu	r22,r18,291ec <__sfvwrite_r+0x8c>
   291e4:	01e00034 	movhi	r7,32768
   291e8:	39ff0004 	addi	r7,r7,-1024
   291ec:	80800917 	ldw	r2,36(r16)
   291f0:	81400717 	ldw	r5,28(r16)
   291f4:	103ee83a 	callr	r2
   291f8:	00805a0e 	bge	zero,r2,29364 <__sfvwrite_r+0x204>
   291fc:	a0c00217 	ldw	r3,8(r20)
   29200:	98a7883a 	add	r19,r19,r2
   29204:	90a5c83a 	sub	r18,r18,r2
   29208:	1885c83a 	sub	r2,r3,r2
   2920c:	a0800215 	stw	r2,8(r20)
   29210:	103fef1e 	bne	r2,zero,291d0 <__alt_data_end+0xfffe9dd0>
   29214:	0005883a 	mov	r2,zero
   29218:	dfc00b17 	ldw	ra,44(sp)
   2921c:	df000a17 	ldw	fp,40(sp)
   29220:	ddc00917 	ldw	r23,36(sp)
   29224:	dd800817 	ldw	r22,32(sp)
   29228:	dd400717 	ldw	r21,28(sp)
   2922c:	dd000617 	ldw	r20,24(sp)
   29230:	dcc00517 	ldw	r19,20(sp)
   29234:	dc800417 	ldw	r18,16(sp)
   29238:	dc400317 	ldw	r17,12(sp)
   2923c:	dc000217 	ldw	r16,8(sp)
   29240:	dec00c04 	addi	sp,sp,48
   29244:	f800283a 	ret
   29248:	800b883a 	mov	r5,r16
   2924c:	a809883a 	mov	r4,r21
   29250:	0022e0c0 	call	22e0c <__swsetup_r>
   29254:	1000ee1e 	bne	r2,zero,29610 <__sfvwrite_r+0x4b0>
   29258:	80c0030b 	ldhu	r3,12(r16)
   2925c:	a4400017 	ldw	r17,0(r20)
   29260:	1880008c 	andi	r2,r3,2
   29264:	103fd61e 	bne	r2,zero,291c0 <__alt_data_end+0xfffe9dc0>
   29268:	1880004c 	andi	r2,r3,1
   2926c:	1000421e 	bne	r2,zero,29378 <__sfvwrite_r+0x218>
   29270:	0039883a 	mov	fp,zero
   29274:	0025883a 	mov	r18,zero
   29278:	90001a26 	beq	r18,zero,292e4 <__sfvwrite_r+0x184>
   2927c:	1880800c 	andi	r2,r3,512
   29280:	84c00217 	ldw	r19,8(r16)
   29284:	10002126 	beq	r2,zero,2930c <__sfvwrite_r+0x1ac>
   29288:	982f883a 	mov	r23,r19
   2928c:	94c09636 	bltu	r18,r19,294e8 <__sfvwrite_r+0x388>
   29290:	1881200c 	andi	r2,r3,1152
   29294:	1000a11e 	bne	r2,zero,2951c <__sfvwrite_r+0x3bc>
   29298:	81000017 	ldw	r4,0(r16)
   2929c:	b80d883a 	mov	r6,r23
   292a0:	e00b883a 	mov	r5,fp
   292a4:	00296dc0 	call	296dc <memmove>
   292a8:	80c00217 	ldw	r3,8(r16)
   292ac:	81000017 	ldw	r4,0(r16)
   292b0:	9005883a 	mov	r2,r18
   292b4:	1ce7c83a 	sub	r19,r3,r19
   292b8:	25cf883a 	add	r7,r4,r23
   292bc:	84c00215 	stw	r19,8(r16)
   292c0:	81c00015 	stw	r7,0(r16)
   292c4:	a0c00217 	ldw	r3,8(r20)
   292c8:	e0b9883a 	add	fp,fp,r2
   292cc:	90a5c83a 	sub	r18,r18,r2
   292d0:	18a7c83a 	sub	r19,r3,r2
   292d4:	a4c00215 	stw	r19,8(r20)
   292d8:	983fce26 	beq	r19,zero,29214 <__alt_data_end+0xfffe9e14>
   292dc:	80c0030b 	ldhu	r3,12(r16)
   292e0:	903fe61e 	bne	r18,zero,2927c <__alt_data_end+0xfffe9e7c>
   292e4:	8f000017 	ldw	fp,0(r17)
   292e8:	8c800117 	ldw	r18,4(r17)
   292ec:	8c400204 	addi	r17,r17,8
   292f0:	003fe106 	br	29278 <__alt_data_end+0xfffe9e78>
   292f4:	8cc00017 	ldw	r19,0(r17)
   292f8:	8c800117 	ldw	r18,4(r17)
   292fc:	8c400204 	addi	r17,r17,8
   29300:	003fb306 	br	291d0 <__alt_data_end+0xfffe9dd0>
   29304:	0005883a 	mov	r2,zero
   29308:	f800283a 	ret
   2930c:	81000017 	ldw	r4,0(r16)
   29310:	80800417 	ldw	r2,16(r16)
   29314:	11005a36 	bltu	r2,r4,29480 <__sfvwrite_r+0x320>
   29318:	85c00517 	ldw	r23,20(r16)
   2931c:	95c05836 	bltu	r18,r23,29480 <__sfvwrite_r+0x320>
   29320:	00a00034 	movhi	r2,32768
   29324:	10bfffc4 	addi	r2,r2,-1
   29328:	9009883a 	mov	r4,r18
   2932c:	1480012e 	bgeu	r2,r18,29334 <__sfvwrite_r+0x1d4>
   29330:	1009883a 	mov	r4,r2
   29334:	b80b883a 	mov	r5,r23
   29338:	002acfc0 	call	2acfc <__divsi3>
   2933c:	b80b883a 	mov	r5,r23
   29340:	1009883a 	mov	r4,r2
   29344:	002aeb00 	call	2aeb0 <__mulsi3>
   29348:	81400717 	ldw	r5,28(r16)
   2934c:	80c00917 	ldw	r3,36(r16)
   29350:	100f883a 	mov	r7,r2
   29354:	e00d883a 	mov	r6,fp
   29358:	a809883a 	mov	r4,r21
   2935c:	183ee83a 	callr	r3
   29360:	00bfd816 	blt	zero,r2,292c4 <__alt_data_end+0xfffe9ec4>
   29364:	8080030b 	ldhu	r2,12(r16)
   29368:	10801014 	ori	r2,r2,64
   2936c:	8080030d 	sth	r2,12(r16)
   29370:	00bfffc4 	movi	r2,-1
   29374:	003fa806 	br	29218 <__alt_data_end+0xfffe9e18>
   29378:	0027883a 	mov	r19,zero
   2937c:	0011883a 	mov	r8,zero
   29380:	0039883a 	mov	fp,zero
   29384:	0025883a 	mov	r18,zero
   29388:	90001f26 	beq	r18,zero,29408 <__sfvwrite_r+0x2a8>
   2938c:	40005a26 	beq	r8,zero,294f8 <__sfvwrite_r+0x398>
   29390:	982d883a 	mov	r22,r19
   29394:	94c0012e 	bgeu	r18,r19,2939c <__sfvwrite_r+0x23c>
   29398:	902d883a 	mov	r22,r18
   2939c:	81000017 	ldw	r4,0(r16)
   293a0:	80800417 	ldw	r2,16(r16)
   293a4:	b02f883a 	mov	r23,r22
   293a8:	81c00517 	ldw	r7,20(r16)
   293ac:	1100032e 	bgeu	r2,r4,293bc <__sfvwrite_r+0x25c>
   293b0:	80c00217 	ldw	r3,8(r16)
   293b4:	38c7883a 	add	r3,r7,r3
   293b8:	1d801816 	blt	r3,r22,2941c <__sfvwrite_r+0x2bc>
   293bc:	b1c03e16 	blt	r22,r7,294b8 <__sfvwrite_r+0x358>
   293c0:	80800917 	ldw	r2,36(r16)
   293c4:	81400717 	ldw	r5,28(r16)
   293c8:	e00d883a 	mov	r6,fp
   293cc:	da000115 	stw	r8,4(sp)
   293d0:	a809883a 	mov	r4,r21
   293d4:	103ee83a 	callr	r2
   293d8:	102f883a 	mov	r23,r2
   293dc:	da000117 	ldw	r8,4(sp)
   293e0:	00bfe00e 	bge	zero,r2,29364 <__alt_data_end+0xfffe9f64>
   293e4:	9de7c83a 	sub	r19,r19,r23
   293e8:	98001f26 	beq	r19,zero,29468 <__sfvwrite_r+0x308>
   293ec:	a0800217 	ldw	r2,8(r20)
   293f0:	e5f9883a 	add	fp,fp,r23
   293f4:	95e5c83a 	sub	r18,r18,r23
   293f8:	15efc83a 	sub	r23,r2,r23
   293fc:	a5c00215 	stw	r23,8(r20)
   29400:	b83f8426 	beq	r23,zero,29214 <__alt_data_end+0xfffe9e14>
   29404:	903fe11e 	bne	r18,zero,2938c <__alt_data_end+0xfffe9f8c>
   29408:	8f000017 	ldw	fp,0(r17)
   2940c:	8c800117 	ldw	r18,4(r17)
   29410:	0011883a 	mov	r8,zero
   29414:	8c400204 	addi	r17,r17,8
   29418:	003fdb06 	br	29388 <__alt_data_end+0xfffe9f88>
   2941c:	180d883a 	mov	r6,r3
   29420:	e00b883a 	mov	r5,fp
   29424:	da000115 	stw	r8,4(sp)
   29428:	d8c00015 	stw	r3,0(sp)
   2942c:	00296dc0 	call	296dc <memmove>
   29430:	d8c00017 	ldw	r3,0(sp)
   29434:	80800017 	ldw	r2,0(r16)
   29438:	800b883a 	mov	r5,r16
   2943c:	a809883a 	mov	r4,r21
   29440:	10c5883a 	add	r2,r2,r3
   29444:	80800015 	stw	r2,0(r16)
   29448:	d8c00015 	stw	r3,0(sp)
   2944c:	0024a2c0 	call	24a2c <_fflush_r>
   29450:	d8c00017 	ldw	r3,0(sp)
   29454:	da000117 	ldw	r8,4(sp)
   29458:	103fc21e 	bne	r2,zero,29364 <__alt_data_end+0xfffe9f64>
   2945c:	182f883a 	mov	r23,r3
   29460:	9de7c83a 	sub	r19,r19,r23
   29464:	983fe11e 	bne	r19,zero,293ec <__alt_data_end+0xfffe9fec>
   29468:	800b883a 	mov	r5,r16
   2946c:	a809883a 	mov	r4,r21
   29470:	0024a2c0 	call	24a2c <_fflush_r>
   29474:	103fbb1e 	bne	r2,zero,29364 <__alt_data_end+0xfffe9f64>
   29478:	0011883a 	mov	r8,zero
   2947c:	003fdb06 	br	293ec <__alt_data_end+0xfffe9fec>
   29480:	94c0012e 	bgeu	r18,r19,29488 <__sfvwrite_r+0x328>
   29484:	9027883a 	mov	r19,r18
   29488:	980d883a 	mov	r6,r19
   2948c:	e00b883a 	mov	r5,fp
   29490:	00296dc0 	call	296dc <memmove>
   29494:	80800217 	ldw	r2,8(r16)
   29498:	80c00017 	ldw	r3,0(r16)
   2949c:	14c5c83a 	sub	r2,r2,r19
   294a0:	1cc7883a 	add	r3,r3,r19
   294a4:	80800215 	stw	r2,8(r16)
   294a8:	80c00015 	stw	r3,0(r16)
   294ac:	10004326 	beq	r2,zero,295bc <__sfvwrite_r+0x45c>
   294b0:	9805883a 	mov	r2,r19
   294b4:	003f8306 	br	292c4 <__alt_data_end+0xfffe9ec4>
   294b8:	b00d883a 	mov	r6,r22
   294bc:	e00b883a 	mov	r5,fp
   294c0:	da000115 	stw	r8,4(sp)
   294c4:	00296dc0 	call	296dc <memmove>
   294c8:	80800217 	ldw	r2,8(r16)
   294cc:	80c00017 	ldw	r3,0(r16)
   294d0:	da000117 	ldw	r8,4(sp)
   294d4:	1585c83a 	sub	r2,r2,r22
   294d8:	1dad883a 	add	r22,r3,r22
   294dc:	80800215 	stw	r2,8(r16)
   294e0:	85800015 	stw	r22,0(r16)
   294e4:	003fbf06 	br	293e4 <__alt_data_end+0xfffe9fe4>
   294e8:	81000017 	ldw	r4,0(r16)
   294ec:	9027883a 	mov	r19,r18
   294f0:	902f883a 	mov	r23,r18
   294f4:	003f6906 	br	2929c <__alt_data_end+0xfffe9e9c>
   294f8:	900d883a 	mov	r6,r18
   294fc:	01400284 	movi	r5,10
   29500:	e009883a 	mov	r4,fp
   29504:	0025ec80 	call	25ec8 <memchr>
   29508:	10003e26 	beq	r2,zero,29604 <__sfvwrite_r+0x4a4>
   2950c:	10800044 	addi	r2,r2,1
   29510:	1727c83a 	sub	r19,r2,fp
   29514:	02000044 	movi	r8,1
   29518:	003f9d06 	br	29390 <__alt_data_end+0xfffe9f90>
   2951c:	80800517 	ldw	r2,20(r16)
   29520:	81400417 	ldw	r5,16(r16)
   29524:	81c00017 	ldw	r7,0(r16)
   29528:	10a7883a 	add	r19,r2,r2
   2952c:	9885883a 	add	r2,r19,r2
   29530:	1026d7fa 	srli	r19,r2,31
   29534:	396dc83a 	sub	r22,r7,r5
   29538:	b1000044 	addi	r4,r22,1
   2953c:	9885883a 	add	r2,r19,r2
   29540:	1027d07a 	srai	r19,r2,1
   29544:	2485883a 	add	r2,r4,r18
   29548:	980d883a 	mov	r6,r19
   2954c:	9880022e 	bgeu	r19,r2,29558 <__sfvwrite_r+0x3f8>
   29550:	1027883a 	mov	r19,r2
   29554:	100d883a 	mov	r6,r2
   29558:	18c1000c 	andi	r3,r3,1024
   2955c:	18001c26 	beq	r3,zero,295d0 <__sfvwrite_r+0x470>
   29560:	300b883a 	mov	r5,r6
   29564:	a809883a 	mov	r4,r21
   29568:	00256bc0 	call	256bc <_malloc_r>
   2956c:	102f883a 	mov	r23,r2
   29570:	10002926 	beq	r2,zero,29618 <__sfvwrite_r+0x4b8>
   29574:	81400417 	ldw	r5,16(r16)
   29578:	b00d883a 	mov	r6,r22
   2957c:	1009883a 	mov	r4,r2
   29580:	0025fac0 	call	25fac <memcpy>
   29584:	8080030b 	ldhu	r2,12(r16)
   29588:	00fedfc4 	movi	r3,-1153
   2958c:	10c4703a 	and	r2,r2,r3
   29590:	10802014 	ori	r2,r2,128
   29594:	8080030d 	sth	r2,12(r16)
   29598:	bd89883a 	add	r4,r23,r22
   2959c:	9d8fc83a 	sub	r7,r19,r22
   295a0:	85c00415 	stw	r23,16(r16)
   295a4:	84c00515 	stw	r19,20(r16)
   295a8:	81000015 	stw	r4,0(r16)
   295ac:	9027883a 	mov	r19,r18
   295b0:	81c00215 	stw	r7,8(r16)
   295b4:	902f883a 	mov	r23,r18
   295b8:	003f3806 	br	2929c <__alt_data_end+0xfffe9e9c>
   295bc:	800b883a 	mov	r5,r16
   295c0:	a809883a 	mov	r4,r21
   295c4:	0024a2c0 	call	24a2c <_fflush_r>
   295c8:	103fb926 	beq	r2,zero,294b0 <__alt_data_end+0xfffea0b0>
   295cc:	003f6506 	br	29364 <__alt_data_end+0xfffe9f64>
   295d0:	a809883a 	mov	r4,r21
   295d4:	00298980 	call	29898 <_realloc_r>
   295d8:	102f883a 	mov	r23,r2
   295dc:	103fee1e 	bne	r2,zero,29598 <__alt_data_end+0xfffea198>
   295e0:	81400417 	ldw	r5,16(r16)
   295e4:	a809883a 	mov	r4,r21
   295e8:	0024f8c0 	call	24f8c <_free_r>
   295ec:	8080030b 	ldhu	r2,12(r16)
   295f0:	00ffdfc4 	movi	r3,-129
   295f4:	1884703a 	and	r2,r3,r2
   295f8:	00c00304 	movi	r3,12
   295fc:	a8c00015 	stw	r3,0(r21)
   29600:	003f5906 	br	29368 <__alt_data_end+0xfffe9f68>
   29604:	94c00044 	addi	r19,r18,1
   29608:	02000044 	movi	r8,1
   2960c:	003f6006 	br	29390 <__alt_data_end+0xfffe9f90>
   29610:	00bfffc4 	movi	r2,-1
   29614:	003f0006 	br	29218 <__alt_data_end+0xfffe9e18>
   29618:	00800304 	movi	r2,12
   2961c:	a8800015 	stw	r2,0(r21)
   29620:	8080030b 	ldhu	r2,12(r16)
   29624:	003f5006 	br	29368 <__alt_data_end+0xfffe9f68>

00029628 <_isatty_r>:
   29628:	defffd04 	addi	sp,sp,-12
   2962c:	dc000015 	stw	r16,0(sp)
   29630:	040000f4 	movhi	r16,3
   29634:	dc400115 	stw	r17,4(sp)
   29638:	840dfe04 	addi	r16,r16,14328
   2963c:	2023883a 	mov	r17,r4
   29640:	2809883a 	mov	r4,r5
   29644:	dfc00215 	stw	ra,8(sp)
   29648:	80000015 	stw	zero,0(r16)
   2964c:	002dc8c0 	call	2dc8c <isatty>
   29650:	00ffffc4 	movi	r3,-1
   29654:	10c00526 	beq	r2,r3,2966c <_isatty_r+0x44>
   29658:	dfc00217 	ldw	ra,8(sp)
   2965c:	dc400117 	ldw	r17,4(sp)
   29660:	dc000017 	ldw	r16,0(sp)
   29664:	dec00304 	addi	sp,sp,12
   29668:	f800283a 	ret
   2966c:	80c00017 	ldw	r3,0(r16)
   29670:	183ff926 	beq	r3,zero,29658 <__alt_data_end+0xfffea258>
   29674:	88c00015 	stw	r3,0(r17)
   29678:	003ff706 	br	29658 <__alt_data_end+0xfffea258>

0002967c <_lseek_r>:
   2967c:	defffd04 	addi	sp,sp,-12
   29680:	2805883a 	mov	r2,r5
   29684:	dc000015 	stw	r16,0(sp)
   29688:	040000f4 	movhi	r16,3
   2968c:	dc400115 	stw	r17,4(sp)
   29690:	300b883a 	mov	r5,r6
   29694:	840dfe04 	addi	r16,r16,14328
   29698:	2023883a 	mov	r17,r4
   2969c:	380d883a 	mov	r6,r7
   296a0:	1009883a 	mov	r4,r2
   296a4:	dfc00215 	stw	ra,8(sp)
   296a8:	80000015 	stw	zero,0(r16)
   296ac:	002de600 	call	2de60 <lseek>
   296b0:	00ffffc4 	movi	r3,-1
   296b4:	10c00526 	beq	r2,r3,296cc <_lseek_r+0x50>
   296b8:	dfc00217 	ldw	ra,8(sp)
   296bc:	dc400117 	ldw	r17,4(sp)
   296c0:	dc000017 	ldw	r16,0(sp)
   296c4:	dec00304 	addi	sp,sp,12
   296c8:	f800283a 	ret
   296cc:	80c00017 	ldw	r3,0(r16)
   296d0:	183ff926 	beq	r3,zero,296b8 <__alt_data_end+0xfffea2b8>
   296d4:	88c00015 	stw	r3,0(r17)
   296d8:	003ff706 	br	296b8 <__alt_data_end+0xfffea2b8>

000296dc <memmove>:
   296dc:	2005883a 	mov	r2,r4
   296e0:	29000b2e 	bgeu	r5,r4,29710 <memmove+0x34>
   296e4:	298f883a 	add	r7,r5,r6
   296e8:	21c0092e 	bgeu	r4,r7,29710 <memmove+0x34>
   296ec:	2187883a 	add	r3,r4,r6
   296f0:	198bc83a 	sub	r5,r3,r6
   296f4:	30004826 	beq	r6,zero,29818 <memmove+0x13c>
   296f8:	39ffffc4 	addi	r7,r7,-1
   296fc:	39000003 	ldbu	r4,0(r7)
   29700:	18ffffc4 	addi	r3,r3,-1
   29704:	19000005 	stb	r4,0(r3)
   29708:	28fffb1e 	bne	r5,r3,296f8 <__alt_data_end+0xfffea2f8>
   2970c:	f800283a 	ret
   29710:	00c003c4 	movi	r3,15
   29714:	1980412e 	bgeu	r3,r6,2981c <memmove+0x140>
   29718:	2886b03a 	or	r3,r5,r2
   2971c:	18c000cc 	andi	r3,r3,3
   29720:	1800401e 	bne	r3,zero,29824 <memmove+0x148>
   29724:	33fffc04 	addi	r15,r6,-16
   29728:	781ed13a 	srli	r15,r15,4
   2972c:	28c00104 	addi	r3,r5,4
   29730:	13400104 	addi	r13,r2,4
   29734:	781c913a 	slli	r14,r15,4
   29738:	2b000204 	addi	r12,r5,8
   2973c:	12c00204 	addi	r11,r2,8
   29740:	73800504 	addi	r14,r14,20
   29744:	2a800304 	addi	r10,r5,12
   29748:	12400304 	addi	r9,r2,12
   2974c:	2b9d883a 	add	r14,r5,r14
   29750:	2811883a 	mov	r8,r5
   29754:	100f883a 	mov	r7,r2
   29758:	41000017 	ldw	r4,0(r8)
   2975c:	39c00404 	addi	r7,r7,16
   29760:	18c00404 	addi	r3,r3,16
   29764:	393ffc15 	stw	r4,-16(r7)
   29768:	193ffc17 	ldw	r4,-16(r3)
   2976c:	6b400404 	addi	r13,r13,16
   29770:	5ac00404 	addi	r11,r11,16
   29774:	693ffc15 	stw	r4,-16(r13)
   29778:	61000017 	ldw	r4,0(r12)
   2977c:	4a400404 	addi	r9,r9,16
   29780:	42000404 	addi	r8,r8,16
   29784:	593ffc15 	stw	r4,-16(r11)
   29788:	51000017 	ldw	r4,0(r10)
   2978c:	63000404 	addi	r12,r12,16
   29790:	52800404 	addi	r10,r10,16
   29794:	493ffc15 	stw	r4,-16(r9)
   29798:	1bbfef1e 	bne	r3,r14,29758 <__alt_data_end+0xfffea358>
   2979c:	79000044 	addi	r4,r15,1
   297a0:	2008913a 	slli	r4,r4,4
   297a4:	328003cc 	andi	r10,r6,15
   297a8:	02c000c4 	movi	r11,3
   297ac:	1107883a 	add	r3,r2,r4
   297b0:	290b883a 	add	r5,r5,r4
   297b4:	5a801e2e 	bgeu	r11,r10,29830 <memmove+0x154>
   297b8:	1813883a 	mov	r9,r3
   297bc:	2811883a 	mov	r8,r5
   297c0:	500f883a 	mov	r7,r10
   297c4:	41000017 	ldw	r4,0(r8)
   297c8:	4a400104 	addi	r9,r9,4
   297cc:	39ffff04 	addi	r7,r7,-4
   297d0:	493fff15 	stw	r4,-4(r9)
   297d4:	42000104 	addi	r8,r8,4
   297d8:	59fffa36 	bltu	r11,r7,297c4 <__alt_data_end+0xfffea3c4>
   297dc:	513fff04 	addi	r4,r10,-4
   297e0:	2008d0ba 	srli	r4,r4,2
   297e4:	318000cc 	andi	r6,r6,3
   297e8:	21000044 	addi	r4,r4,1
   297ec:	2109883a 	add	r4,r4,r4
   297f0:	2109883a 	add	r4,r4,r4
   297f4:	1907883a 	add	r3,r3,r4
   297f8:	290b883a 	add	r5,r5,r4
   297fc:	30000b26 	beq	r6,zero,2982c <memmove+0x150>
   29800:	198d883a 	add	r6,r3,r6
   29804:	29c00003 	ldbu	r7,0(r5)
   29808:	18c00044 	addi	r3,r3,1
   2980c:	29400044 	addi	r5,r5,1
   29810:	19ffffc5 	stb	r7,-1(r3)
   29814:	19bffb1e 	bne	r3,r6,29804 <__alt_data_end+0xfffea404>
   29818:	f800283a 	ret
   2981c:	1007883a 	mov	r3,r2
   29820:	003ff606 	br	297fc <__alt_data_end+0xfffea3fc>
   29824:	1007883a 	mov	r3,r2
   29828:	003ff506 	br	29800 <__alt_data_end+0xfffea400>
   2982c:	f800283a 	ret
   29830:	500d883a 	mov	r6,r10
   29834:	003ff106 	br	297fc <__alt_data_end+0xfffea3fc>

00029838 <_read_r>:
   29838:	defffd04 	addi	sp,sp,-12
   2983c:	2805883a 	mov	r2,r5
   29840:	dc000015 	stw	r16,0(sp)
   29844:	040000f4 	movhi	r16,3
   29848:	dc400115 	stw	r17,4(sp)
   2984c:	300b883a 	mov	r5,r6
   29850:	840dfe04 	addi	r16,r16,14328
   29854:	2023883a 	mov	r17,r4
   29858:	380d883a 	mov	r6,r7
   2985c:	1009883a 	mov	r4,r2
   29860:	dfc00215 	stw	ra,8(sp)
   29864:	80000015 	stw	zero,0(r16)
   29868:	002e03c0 	call	2e03c <read>
   2986c:	00ffffc4 	movi	r3,-1
   29870:	10c00526 	beq	r2,r3,29888 <_read_r+0x50>
   29874:	dfc00217 	ldw	ra,8(sp)
   29878:	dc400117 	ldw	r17,4(sp)
   2987c:	dc000017 	ldw	r16,0(sp)
   29880:	dec00304 	addi	sp,sp,12
   29884:	f800283a 	ret
   29888:	80c00017 	ldw	r3,0(r16)
   2988c:	183ff926 	beq	r3,zero,29874 <__alt_data_end+0xfffea474>
   29890:	88c00015 	stw	r3,0(r17)
   29894:	003ff706 	br	29874 <__alt_data_end+0xfffea474>

00029898 <_realloc_r>:
   29898:	defff604 	addi	sp,sp,-40
   2989c:	dc800215 	stw	r18,8(sp)
   298a0:	dfc00915 	stw	ra,36(sp)
   298a4:	df000815 	stw	fp,32(sp)
   298a8:	ddc00715 	stw	r23,28(sp)
   298ac:	dd800615 	stw	r22,24(sp)
   298b0:	dd400515 	stw	r21,20(sp)
   298b4:	dd000415 	stw	r20,16(sp)
   298b8:	dcc00315 	stw	r19,12(sp)
   298bc:	dc400115 	stw	r17,4(sp)
   298c0:	dc000015 	stw	r16,0(sp)
   298c4:	3025883a 	mov	r18,r6
   298c8:	2800b726 	beq	r5,zero,29ba8 <_realloc_r+0x310>
   298cc:	282b883a 	mov	r21,r5
   298d0:	2029883a 	mov	r20,r4
   298d4:	002dfb80 	call	2dfb8 <__malloc_lock>
   298d8:	a8bfff17 	ldw	r2,-4(r21)
   298dc:	043fff04 	movi	r16,-4
   298e0:	90c002c4 	addi	r3,r18,11
   298e4:	01000584 	movi	r4,22
   298e8:	acfffe04 	addi	r19,r21,-8
   298ec:	1420703a 	and	r16,r2,r16
   298f0:	20c0332e 	bgeu	r4,r3,299c0 <_realloc_r+0x128>
   298f4:	047ffe04 	movi	r17,-8
   298f8:	1c62703a 	and	r17,r3,r17
   298fc:	8807883a 	mov	r3,r17
   29900:	88005816 	blt	r17,zero,29a64 <_realloc_r+0x1cc>
   29904:	8c805736 	bltu	r17,r18,29a64 <_realloc_r+0x1cc>
   29908:	80c0300e 	bge	r16,r3,299cc <_realloc_r+0x134>
   2990c:	070000f4 	movhi	fp,3
   29910:	e701a104 	addi	fp,fp,1668
   29914:	e1c00217 	ldw	r7,8(fp)
   29918:	9c09883a 	add	r4,r19,r16
   2991c:	22000117 	ldw	r8,4(r4)
   29920:	21c06326 	beq	r4,r7,29ab0 <_realloc_r+0x218>
   29924:	017fff84 	movi	r5,-2
   29928:	414a703a 	and	r5,r8,r5
   2992c:	214b883a 	add	r5,r4,r5
   29930:	29800117 	ldw	r6,4(r5)
   29934:	3180004c 	andi	r6,r6,1
   29938:	30003f26 	beq	r6,zero,29a38 <_realloc_r+0x1a0>
   2993c:	1080004c 	andi	r2,r2,1
   29940:	10008326 	beq	r2,zero,29b50 <_realloc_r+0x2b8>
   29944:	900b883a 	mov	r5,r18
   29948:	a009883a 	mov	r4,r20
   2994c:	00256bc0 	call	256bc <_malloc_r>
   29950:	1025883a 	mov	r18,r2
   29954:	10011e26 	beq	r2,zero,29dd0 <_realloc_r+0x538>
   29958:	a93fff17 	ldw	r4,-4(r21)
   2995c:	10fffe04 	addi	r3,r2,-8
   29960:	00bfff84 	movi	r2,-2
   29964:	2084703a 	and	r2,r4,r2
   29968:	9885883a 	add	r2,r19,r2
   2996c:	1880ee26 	beq	r3,r2,29d28 <_realloc_r+0x490>
   29970:	81bfff04 	addi	r6,r16,-4
   29974:	00800904 	movi	r2,36
   29978:	1180b836 	bltu	r2,r6,29c5c <_realloc_r+0x3c4>
   2997c:	00c004c4 	movi	r3,19
   29980:	19809636 	bltu	r3,r6,29bdc <_realloc_r+0x344>
   29984:	9005883a 	mov	r2,r18
   29988:	a807883a 	mov	r3,r21
   2998c:	19000017 	ldw	r4,0(r3)
   29990:	11000015 	stw	r4,0(r2)
   29994:	19000117 	ldw	r4,4(r3)
   29998:	11000115 	stw	r4,4(r2)
   2999c:	18c00217 	ldw	r3,8(r3)
   299a0:	10c00215 	stw	r3,8(r2)
   299a4:	a80b883a 	mov	r5,r21
   299a8:	a009883a 	mov	r4,r20
   299ac:	0024f8c0 	call	24f8c <_free_r>
   299b0:	a009883a 	mov	r4,r20
   299b4:	002dfdc0 	call	2dfdc <__malloc_unlock>
   299b8:	9005883a 	mov	r2,r18
   299bc:	00001206 	br	29a08 <_realloc_r+0x170>
   299c0:	00c00404 	movi	r3,16
   299c4:	1823883a 	mov	r17,r3
   299c8:	003fce06 	br	29904 <__alt_data_end+0xfffea504>
   299cc:	a825883a 	mov	r18,r21
   299d0:	8445c83a 	sub	r2,r16,r17
   299d4:	00c003c4 	movi	r3,15
   299d8:	18802636 	bltu	r3,r2,29a74 <_realloc_r+0x1dc>
   299dc:	99800117 	ldw	r6,4(r19)
   299e0:	9c07883a 	add	r3,r19,r16
   299e4:	3180004c 	andi	r6,r6,1
   299e8:	3420b03a 	or	r16,r6,r16
   299ec:	9c000115 	stw	r16,4(r19)
   299f0:	18800117 	ldw	r2,4(r3)
   299f4:	10800054 	ori	r2,r2,1
   299f8:	18800115 	stw	r2,4(r3)
   299fc:	a009883a 	mov	r4,r20
   29a00:	002dfdc0 	call	2dfdc <__malloc_unlock>
   29a04:	9005883a 	mov	r2,r18
   29a08:	dfc00917 	ldw	ra,36(sp)
   29a0c:	df000817 	ldw	fp,32(sp)
   29a10:	ddc00717 	ldw	r23,28(sp)
   29a14:	dd800617 	ldw	r22,24(sp)
   29a18:	dd400517 	ldw	r21,20(sp)
   29a1c:	dd000417 	ldw	r20,16(sp)
   29a20:	dcc00317 	ldw	r19,12(sp)
   29a24:	dc800217 	ldw	r18,8(sp)
   29a28:	dc400117 	ldw	r17,4(sp)
   29a2c:	dc000017 	ldw	r16,0(sp)
   29a30:	dec00a04 	addi	sp,sp,40
   29a34:	f800283a 	ret
   29a38:	017fff04 	movi	r5,-4
   29a3c:	414a703a 	and	r5,r8,r5
   29a40:	814d883a 	add	r6,r16,r5
   29a44:	30c01f16 	blt	r6,r3,29ac4 <_realloc_r+0x22c>
   29a48:	20800317 	ldw	r2,12(r4)
   29a4c:	20c00217 	ldw	r3,8(r4)
   29a50:	a825883a 	mov	r18,r21
   29a54:	3021883a 	mov	r16,r6
   29a58:	18800315 	stw	r2,12(r3)
   29a5c:	10c00215 	stw	r3,8(r2)
   29a60:	003fdb06 	br	299d0 <__alt_data_end+0xfffea5d0>
   29a64:	00800304 	movi	r2,12
   29a68:	a0800015 	stw	r2,0(r20)
   29a6c:	0005883a 	mov	r2,zero
   29a70:	003fe506 	br	29a08 <__alt_data_end+0xfffea608>
   29a74:	98c00117 	ldw	r3,4(r19)
   29a78:	9c4b883a 	add	r5,r19,r17
   29a7c:	11000054 	ori	r4,r2,1
   29a80:	18c0004c 	andi	r3,r3,1
   29a84:	1c62b03a 	or	r17,r3,r17
   29a88:	9c400115 	stw	r17,4(r19)
   29a8c:	29000115 	stw	r4,4(r5)
   29a90:	2885883a 	add	r2,r5,r2
   29a94:	10c00117 	ldw	r3,4(r2)
   29a98:	29400204 	addi	r5,r5,8
   29a9c:	a009883a 	mov	r4,r20
   29aa0:	18c00054 	ori	r3,r3,1
   29aa4:	10c00115 	stw	r3,4(r2)
   29aa8:	0024f8c0 	call	24f8c <_free_r>
   29aac:	003fd306 	br	299fc <__alt_data_end+0xfffea5fc>
   29ab0:	017fff04 	movi	r5,-4
   29ab4:	414a703a 	and	r5,r8,r5
   29ab8:	89800404 	addi	r6,r17,16
   29abc:	8151883a 	add	r8,r16,r5
   29ac0:	4180590e 	bge	r8,r6,29c28 <_realloc_r+0x390>
   29ac4:	1080004c 	andi	r2,r2,1
   29ac8:	103f9e1e 	bne	r2,zero,29944 <__alt_data_end+0xfffea544>
   29acc:	adbffe17 	ldw	r22,-8(r21)
   29ad0:	00bfff04 	movi	r2,-4
   29ad4:	9dadc83a 	sub	r22,r19,r22
   29ad8:	b1800117 	ldw	r6,4(r22)
   29adc:	3084703a 	and	r2,r6,r2
   29ae0:	20002026 	beq	r4,zero,29b64 <_realloc_r+0x2cc>
   29ae4:	80af883a 	add	r23,r16,r2
   29ae8:	b96f883a 	add	r23,r23,r5
   29aec:	21c05f26 	beq	r4,r7,29c6c <_realloc_r+0x3d4>
   29af0:	b8c01c16 	blt	r23,r3,29b64 <_realloc_r+0x2cc>
   29af4:	20800317 	ldw	r2,12(r4)
   29af8:	20c00217 	ldw	r3,8(r4)
   29afc:	81bfff04 	addi	r6,r16,-4
   29b00:	01000904 	movi	r4,36
   29b04:	18800315 	stw	r2,12(r3)
   29b08:	10c00215 	stw	r3,8(r2)
   29b0c:	b0c00217 	ldw	r3,8(r22)
   29b10:	b0800317 	ldw	r2,12(r22)
   29b14:	b4800204 	addi	r18,r22,8
   29b18:	18800315 	stw	r2,12(r3)
   29b1c:	10c00215 	stw	r3,8(r2)
   29b20:	21801b36 	bltu	r4,r6,29b90 <_realloc_r+0x2f8>
   29b24:	008004c4 	movi	r2,19
   29b28:	1180352e 	bgeu	r2,r6,29c00 <_realloc_r+0x368>
   29b2c:	a8800017 	ldw	r2,0(r21)
   29b30:	b0800215 	stw	r2,8(r22)
   29b34:	a8800117 	ldw	r2,4(r21)
   29b38:	b0800315 	stw	r2,12(r22)
   29b3c:	008006c4 	movi	r2,27
   29b40:	11807f36 	bltu	r2,r6,29d40 <_realloc_r+0x4a8>
   29b44:	b0800404 	addi	r2,r22,16
   29b48:	ad400204 	addi	r21,r21,8
   29b4c:	00002d06 	br	29c04 <_realloc_r+0x36c>
   29b50:	adbffe17 	ldw	r22,-8(r21)
   29b54:	00bfff04 	movi	r2,-4
   29b58:	9dadc83a 	sub	r22,r19,r22
   29b5c:	b1000117 	ldw	r4,4(r22)
   29b60:	2084703a 	and	r2,r4,r2
   29b64:	b03f7726 	beq	r22,zero,29944 <__alt_data_end+0xfffea544>
   29b68:	80af883a 	add	r23,r16,r2
   29b6c:	b8ff7516 	blt	r23,r3,29944 <__alt_data_end+0xfffea544>
   29b70:	b0800317 	ldw	r2,12(r22)
   29b74:	b0c00217 	ldw	r3,8(r22)
   29b78:	81bfff04 	addi	r6,r16,-4
   29b7c:	01000904 	movi	r4,36
   29b80:	18800315 	stw	r2,12(r3)
   29b84:	10c00215 	stw	r3,8(r2)
   29b88:	b4800204 	addi	r18,r22,8
   29b8c:	21bfe52e 	bgeu	r4,r6,29b24 <__alt_data_end+0xfffea724>
   29b90:	a80b883a 	mov	r5,r21
   29b94:	9009883a 	mov	r4,r18
   29b98:	00296dc0 	call	296dc <memmove>
   29b9c:	b821883a 	mov	r16,r23
   29ba0:	b027883a 	mov	r19,r22
   29ba4:	003f8a06 	br	299d0 <__alt_data_end+0xfffea5d0>
   29ba8:	300b883a 	mov	r5,r6
   29bac:	dfc00917 	ldw	ra,36(sp)
   29bb0:	df000817 	ldw	fp,32(sp)
   29bb4:	ddc00717 	ldw	r23,28(sp)
   29bb8:	dd800617 	ldw	r22,24(sp)
   29bbc:	dd400517 	ldw	r21,20(sp)
   29bc0:	dd000417 	ldw	r20,16(sp)
   29bc4:	dcc00317 	ldw	r19,12(sp)
   29bc8:	dc800217 	ldw	r18,8(sp)
   29bcc:	dc400117 	ldw	r17,4(sp)
   29bd0:	dc000017 	ldw	r16,0(sp)
   29bd4:	dec00a04 	addi	sp,sp,40
   29bd8:	00256bc1 	jmpi	256bc <_malloc_r>
   29bdc:	a8c00017 	ldw	r3,0(r21)
   29be0:	90c00015 	stw	r3,0(r18)
   29be4:	a8c00117 	ldw	r3,4(r21)
   29be8:	90c00115 	stw	r3,4(r18)
   29bec:	00c006c4 	movi	r3,27
   29bf0:	19804536 	bltu	r3,r6,29d08 <_realloc_r+0x470>
   29bf4:	90800204 	addi	r2,r18,8
   29bf8:	a8c00204 	addi	r3,r21,8
   29bfc:	003f6306 	br	2998c <__alt_data_end+0xfffea58c>
   29c00:	9005883a 	mov	r2,r18
   29c04:	a8c00017 	ldw	r3,0(r21)
   29c08:	b821883a 	mov	r16,r23
   29c0c:	b027883a 	mov	r19,r22
   29c10:	10c00015 	stw	r3,0(r2)
   29c14:	a8c00117 	ldw	r3,4(r21)
   29c18:	10c00115 	stw	r3,4(r2)
   29c1c:	a8c00217 	ldw	r3,8(r21)
   29c20:	10c00215 	stw	r3,8(r2)
   29c24:	003f6a06 	br	299d0 <__alt_data_end+0xfffea5d0>
   29c28:	9c67883a 	add	r19,r19,r17
   29c2c:	4445c83a 	sub	r2,r8,r17
   29c30:	e4c00215 	stw	r19,8(fp)
   29c34:	10800054 	ori	r2,r2,1
   29c38:	98800115 	stw	r2,4(r19)
   29c3c:	a8bfff17 	ldw	r2,-4(r21)
   29c40:	a009883a 	mov	r4,r20
   29c44:	1080004c 	andi	r2,r2,1
   29c48:	1462b03a 	or	r17,r2,r17
   29c4c:	ac7fff15 	stw	r17,-4(r21)
   29c50:	002dfdc0 	call	2dfdc <__malloc_unlock>
   29c54:	a805883a 	mov	r2,r21
   29c58:	003f6b06 	br	29a08 <__alt_data_end+0xfffea608>
   29c5c:	a80b883a 	mov	r5,r21
   29c60:	9009883a 	mov	r4,r18
   29c64:	00296dc0 	call	296dc <memmove>
   29c68:	003f4e06 	br	299a4 <__alt_data_end+0xfffea5a4>
   29c6c:	89000404 	addi	r4,r17,16
   29c70:	b93fbc16 	blt	r23,r4,29b64 <__alt_data_end+0xfffea764>
   29c74:	b0800317 	ldw	r2,12(r22)
   29c78:	b0c00217 	ldw	r3,8(r22)
   29c7c:	81bfff04 	addi	r6,r16,-4
   29c80:	01000904 	movi	r4,36
   29c84:	18800315 	stw	r2,12(r3)
   29c88:	10c00215 	stw	r3,8(r2)
   29c8c:	b4800204 	addi	r18,r22,8
   29c90:	21804336 	bltu	r4,r6,29da0 <_realloc_r+0x508>
   29c94:	008004c4 	movi	r2,19
   29c98:	11803f2e 	bgeu	r2,r6,29d98 <_realloc_r+0x500>
   29c9c:	a8800017 	ldw	r2,0(r21)
   29ca0:	b0800215 	stw	r2,8(r22)
   29ca4:	a8800117 	ldw	r2,4(r21)
   29ca8:	b0800315 	stw	r2,12(r22)
   29cac:	008006c4 	movi	r2,27
   29cb0:	11803f36 	bltu	r2,r6,29db0 <_realloc_r+0x518>
   29cb4:	b0800404 	addi	r2,r22,16
   29cb8:	ad400204 	addi	r21,r21,8
   29cbc:	a8c00017 	ldw	r3,0(r21)
   29cc0:	10c00015 	stw	r3,0(r2)
   29cc4:	a8c00117 	ldw	r3,4(r21)
   29cc8:	10c00115 	stw	r3,4(r2)
   29ccc:	a8c00217 	ldw	r3,8(r21)
   29cd0:	10c00215 	stw	r3,8(r2)
   29cd4:	b447883a 	add	r3,r22,r17
   29cd8:	bc45c83a 	sub	r2,r23,r17
   29cdc:	e0c00215 	stw	r3,8(fp)
   29ce0:	10800054 	ori	r2,r2,1
   29ce4:	18800115 	stw	r2,4(r3)
   29ce8:	b0800117 	ldw	r2,4(r22)
   29cec:	a009883a 	mov	r4,r20
   29cf0:	1080004c 	andi	r2,r2,1
   29cf4:	1462b03a 	or	r17,r2,r17
   29cf8:	b4400115 	stw	r17,4(r22)
   29cfc:	002dfdc0 	call	2dfdc <__malloc_unlock>
   29d00:	9005883a 	mov	r2,r18
   29d04:	003f4006 	br	29a08 <__alt_data_end+0xfffea608>
   29d08:	a8c00217 	ldw	r3,8(r21)
   29d0c:	90c00215 	stw	r3,8(r18)
   29d10:	a8c00317 	ldw	r3,12(r21)
   29d14:	90c00315 	stw	r3,12(r18)
   29d18:	30801126 	beq	r6,r2,29d60 <_realloc_r+0x4c8>
   29d1c:	90800404 	addi	r2,r18,16
   29d20:	a8c00404 	addi	r3,r21,16
   29d24:	003f1906 	br	2998c <__alt_data_end+0xfffea58c>
   29d28:	90ffff17 	ldw	r3,-4(r18)
   29d2c:	00bfff04 	movi	r2,-4
   29d30:	a825883a 	mov	r18,r21
   29d34:	1884703a 	and	r2,r3,r2
   29d38:	80a1883a 	add	r16,r16,r2
   29d3c:	003f2406 	br	299d0 <__alt_data_end+0xfffea5d0>
   29d40:	a8800217 	ldw	r2,8(r21)
   29d44:	b0800415 	stw	r2,16(r22)
   29d48:	a8800317 	ldw	r2,12(r21)
   29d4c:	b0800515 	stw	r2,20(r22)
   29d50:	31000a26 	beq	r6,r4,29d7c <_realloc_r+0x4e4>
   29d54:	b0800604 	addi	r2,r22,24
   29d58:	ad400404 	addi	r21,r21,16
   29d5c:	003fa906 	br	29c04 <__alt_data_end+0xfffea804>
   29d60:	a9000417 	ldw	r4,16(r21)
   29d64:	90800604 	addi	r2,r18,24
   29d68:	a8c00604 	addi	r3,r21,24
   29d6c:	91000415 	stw	r4,16(r18)
   29d70:	a9000517 	ldw	r4,20(r21)
   29d74:	91000515 	stw	r4,20(r18)
   29d78:	003f0406 	br	2998c <__alt_data_end+0xfffea58c>
   29d7c:	a8c00417 	ldw	r3,16(r21)
   29d80:	ad400604 	addi	r21,r21,24
   29d84:	b0800804 	addi	r2,r22,32
   29d88:	b0c00615 	stw	r3,24(r22)
   29d8c:	a8ffff17 	ldw	r3,-4(r21)
   29d90:	b0c00715 	stw	r3,28(r22)
   29d94:	003f9b06 	br	29c04 <__alt_data_end+0xfffea804>
   29d98:	9005883a 	mov	r2,r18
   29d9c:	003fc706 	br	29cbc <__alt_data_end+0xfffea8bc>
   29da0:	a80b883a 	mov	r5,r21
   29da4:	9009883a 	mov	r4,r18
   29da8:	00296dc0 	call	296dc <memmove>
   29dac:	003fc906 	br	29cd4 <__alt_data_end+0xfffea8d4>
   29db0:	a8800217 	ldw	r2,8(r21)
   29db4:	b0800415 	stw	r2,16(r22)
   29db8:	a8800317 	ldw	r2,12(r21)
   29dbc:	b0800515 	stw	r2,20(r22)
   29dc0:	31000726 	beq	r6,r4,29de0 <_realloc_r+0x548>
   29dc4:	b0800604 	addi	r2,r22,24
   29dc8:	ad400404 	addi	r21,r21,16
   29dcc:	003fbb06 	br	29cbc <__alt_data_end+0xfffea8bc>
   29dd0:	a009883a 	mov	r4,r20
   29dd4:	002dfdc0 	call	2dfdc <__malloc_unlock>
   29dd8:	0005883a 	mov	r2,zero
   29ddc:	003f0a06 	br	29a08 <__alt_data_end+0xfffea608>
   29de0:	a8c00417 	ldw	r3,16(r21)
   29de4:	ad400604 	addi	r21,r21,24
   29de8:	b0800804 	addi	r2,r22,32
   29dec:	b0c00615 	stw	r3,24(r22)
   29df0:	a8ffff17 	ldw	r3,-4(r21)
   29df4:	b0c00715 	stw	r3,28(r22)
   29df8:	003fb006 	br	29cbc <__alt_data_end+0xfffea8bc>

00029dfc <__swbuf_r>:
   29dfc:	defffb04 	addi	sp,sp,-20
   29e00:	dcc00315 	stw	r19,12(sp)
   29e04:	dc800215 	stw	r18,8(sp)
   29e08:	dc000015 	stw	r16,0(sp)
   29e0c:	dfc00415 	stw	ra,16(sp)
   29e10:	dc400115 	stw	r17,4(sp)
   29e14:	2025883a 	mov	r18,r4
   29e18:	2827883a 	mov	r19,r5
   29e1c:	3021883a 	mov	r16,r6
   29e20:	20000226 	beq	r4,zero,29e2c <__swbuf_r+0x30>
   29e24:	20800e17 	ldw	r2,56(r4)
   29e28:	10004226 	beq	r2,zero,29f34 <__swbuf_r+0x138>
   29e2c:	80800617 	ldw	r2,24(r16)
   29e30:	8100030b 	ldhu	r4,12(r16)
   29e34:	80800215 	stw	r2,8(r16)
   29e38:	2080020c 	andi	r2,r4,8
   29e3c:	10003626 	beq	r2,zero,29f18 <__swbuf_r+0x11c>
   29e40:	80c00417 	ldw	r3,16(r16)
   29e44:	18003426 	beq	r3,zero,29f18 <__swbuf_r+0x11c>
   29e48:	2088000c 	andi	r2,r4,8192
   29e4c:	9c403fcc 	andi	r17,r19,255
   29e50:	10001a26 	beq	r2,zero,29ebc <__swbuf_r+0xc0>
   29e54:	80800017 	ldw	r2,0(r16)
   29e58:	81000517 	ldw	r4,20(r16)
   29e5c:	10c7c83a 	sub	r3,r2,r3
   29e60:	1900200e 	bge	r3,r4,29ee4 <__swbuf_r+0xe8>
   29e64:	18c00044 	addi	r3,r3,1
   29e68:	81000217 	ldw	r4,8(r16)
   29e6c:	11400044 	addi	r5,r2,1
   29e70:	81400015 	stw	r5,0(r16)
   29e74:	213fffc4 	addi	r4,r4,-1
   29e78:	81000215 	stw	r4,8(r16)
   29e7c:	14c00005 	stb	r19,0(r2)
   29e80:	80800517 	ldw	r2,20(r16)
   29e84:	10c01e26 	beq	r2,r3,29f00 <__swbuf_r+0x104>
   29e88:	8080030b 	ldhu	r2,12(r16)
   29e8c:	1080004c 	andi	r2,r2,1
   29e90:	10000226 	beq	r2,zero,29e9c <__swbuf_r+0xa0>
   29e94:	00800284 	movi	r2,10
   29e98:	88801926 	beq	r17,r2,29f00 <__swbuf_r+0x104>
   29e9c:	8805883a 	mov	r2,r17
   29ea0:	dfc00417 	ldw	ra,16(sp)
   29ea4:	dcc00317 	ldw	r19,12(sp)
   29ea8:	dc800217 	ldw	r18,8(sp)
   29eac:	dc400117 	ldw	r17,4(sp)
   29eb0:	dc000017 	ldw	r16,0(sp)
   29eb4:	dec00504 	addi	sp,sp,20
   29eb8:	f800283a 	ret
   29ebc:	81401917 	ldw	r5,100(r16)
   29ec0:	00b7ffc4 	movi	r2,-8193
   29ec4:	21080014 	ori	r4,r4,8192
   29ec8:	2884703a 	and	r2,r5,r2
   29ecc:	80801915 	stw	r2,100(r16)
   29ed0:	80800017 	ldw	r2,0(r16)
   29ed4:	8100030d 	sth	r4,12(r16)
   29ed8:	81000517 	ldw	r4,20(r16)
   29edc:	10c7c83a 	sub	r3,r2,r3
   29ee0:	193fe016 	blt	r3,r4,29e64 <__alt_data_end+0xfffeaa64>
   29ee4:	800b883a 	mov	r5,r16
   29ee8:	9009883a 	mov	r4,r18
   29eec:	0024a2c0 	call	24a2c <_fflush_r>
   29ef0:	1000071e 	bne	r2,zero,29f10 <__swbuf_r+0x114>
   29ef4:	80800017 	ldw	r2,0(r16)
   29ef8:	00c00044 	movi	r3,1
   29efc:	003fda06 	br	29e68 <__alt_data_end+0xfffeaa68>
   29f00:	800b883a 	mov	r5,r16
   29f04:	9009883a 	mov	r4,r18
   29f08:	0024a2c0 	call	24a2c <_fflush_r>
   29f0c:	103fe326 	beq	r2,zero,29e9c <__alt_data_end+0xfffeaa9c>
   29f10:	00bfffc4 	movi	r2,-1
   29f14:	003fe206 	br	29ea0 <__alt_data_end+0xfffeaaa0>
   29f18:	800b883a 	mov	r5,r16
   29f1c:	9009883a 	mov	r4,r18
   29f20:	0022e0c0 	call	22e0c <__swsetup_r>
   29f24:	103ffa1e 	bne	r2,zero,29f10 <__alt_data_end+0xfffeab10>
   29f28:	8100030b 	ldhu	r4,12(r16)
   29f2c:	80c00417 	ldw	r3,16(r16)
   29f30:	003fc506 	br	29e48 <__alt_data_end+0xfffeaa48>
   29f34:	0024e180 	call	24e18 <__sinit>
   29f38:	003fbc06 	br	29e2c <__alt_data_end+0xfffeaa2c>

00029f3c <__swbuf>:
   29f3c:	008000f4 	movhi	r2,3
   29f40:	10872604 	addi	r2,r2,7320
   29f44:	280d883a 	mov	r6,r5
   29f48:	200b883a 	mov	r5,r4
   29f4c:	11000017 	ldw	r4,0(r2)
   29f50:	0029dfc1 	jmpi	29dfc <__swbuf_r>

00029f54 <_wcrtomb_r>:
   29f54:	defff604 	addi	sp,sp,-40
   29f58:	008000f4 	movhi	r2,3
   29f5c:	dc800815 	stw	r18,32(sp)
   29f60:	dc400715 	stw	r17,28(sp)
   29f64:	dc000615 	stw	r16,24(sp)
   29f68:	10872a04 	addi	r2,r2,7336
   29f6c:	dfc00915 	stw	ra,36(sp)
   29f70:	2021883a 	mov	r16,r4
   29f74:	3823883a 	mov	r17,r7
   29f78:	14800017 	ldw	r18,0(r2)
   29f7c:	28001426 	beq	r5,zero,29fd0 <_wcrtomb_r+0x7c>
   29f80:	d9400415 	stw	r5,16(sp)
   29f84:	d9800515 	stw	r6,20(sp)
   29f88:	00254a00 	call	254a0 <__locale_charset>
   29f8c:	d9800517 	ldw	r6,20(sp)
   29f90:	d9400417 	ldw	r5,16(sp)
   29f94:	100f883a 	mov	r7,r2
   29f98:	dc400015 	stw	r17,0(sp)
   29f9c:	8009883a 	mov	r4,r16
   29fa0:	903ee83a 	callr	r18
   29fa4:	00ffffc4 	movi	r3,-1
   29fa8:	10c0031e 	bne	r2,r3,29fb8 <_wcrtomb_r+0x64>
   29fac:	88000015 	stw	zero,0(r17)
   29fb0:	00c02284 	movi	r3,138
   29fb4:	80c00015 	stw	r3,0(r16)
   29fb8:	dfc00917 	ldw	ra,36(sp)
   29fbc:	dc800817 	ldw	r18,32(sp)
   29fc0:	dc400717 	ldw	r17,28(sp)
   29fc4:	dc000617 	ldw	r16,24(sp)
   29fc8:	dec00a04 	addi	sp,sp,40
   29fcc:	f800283a 	ret
   29fd0:	00254a00 	call	254a0 <__locale_charset>
   29fd4:	100f883a 	mov	r7,r2
   29fd8:	dc400015 	stw	r17,0(sp)
   29fdc:	000d883a 	mov	r6,zero
   29fe0:	d9400104 	addi	r5,sp,4
   29fe4:	8009883a 	mov	r4,r16
   29fe8:	903ee83a 	callr	r18
   29fec:	003fed06 	br	29fa4 <__alt_data_end+0xfffeaba4>

00029ff0 <wcrtomb>:
   29ff0:	defff604 	addi	sp,sp,-40
   29ff4:	008000f4 	movhi	r2,3
   29ff8:	dc800615 	stw	r18,24(sp)
   29ffc:	dc400515 	stw	r17,20(sp)
   2a000:	10872604 	addi	r2,r2,7320
   2a004:	dfc00915 	stw	ra,36(sp)
   2a008:	dd000815 	stw	r20,32(sp)
   2a00c:	dcc00715 	stw	r19,28(sp)
   2a010:	dc000415 	stw	r16,16(sp)
   2a014:	3025883a 	mov	r18,r6
   2a018:	14400017 	ldw	r17,0(r2)
   2a01c:	20001926 	beq	r4,zero,2a084 <wcrtomb+0x94>
   2a020:	008000f4 	movhi	r2,3
   2a024:	10872a04 	addi	r2,r2,7336
   2a028:	15000017 	ldw	r20,0(r2)
   2a02c:	2021883a 	mov	r16,r4
   2a030:	2827883a 	mov	r19,r5
   2a034:	00254a00 	call	254a0 <__locale_charset>
   2a038:	100f883a 	mov	r7,r2
   2a03c:	dc800015 	stw	r18,0(sp)
   2a040:	980d883a 	mov	r6,r19
   2a044:	800b883a 	mov	r5,r16
   2a048:	8809883a 	mov	r4,r17
   2a04c:	a03ee83a 	callr	r20
   2a050:	00ffffc4 	movi	r3,-1
   2a054:	10c0031e 	bne	r2,r3,2a064 <wcrtomb+0x74>
   2a058:	90000015 	stw	zero,0(r18)
   2a05c:	00c02284 	movi	r3,138
   2a060:	88c00015 	stw	r3,0(r17)
   2a064:	dfc00917 	ldw	ra,36(sp)
   2a068:	dd000817 	ldw	r20,32(sp)
   2a06c:	dcc00717 	ldw	r19,28(sp)
   2a070:	dc800617 	ldw	r18,24(sp)
   2a074:	dc400517 	ldw	r17,20(sp)
   2a078:	dc000417 	ldw	r16,16(sp)
   2a07c:	dec00a04 	addi	sp,sp,40
   2a080:	f800283a 	ret
   2a084:	008000f4 	movhi	r2,3
   2a088:	10872a04 	addi	r2,r2,7336
   2a08c:	14000017 	ldw	r16,0(r2)
   2a090:	00254a00 	call	254a0 <__locale_charset>
   2a094:	100f883a 	mov	r7,r2
   2a098:	dc800015 	stw	r18,0(sp)
   2a09c:	000d883a 	mov	r6,zero
   2a0a0:	d9400104 	addi	r5,sp,4
   2a0a4:	8809883a 	mov	r4,r17
   2a0a8:	803ee83a 	callr	r16
   2a0ac:	003fe806 	br	2a050 <__alt_data_end+0xfffeac50>

0002a0b0 <__ascii_wctomb>:
   2a0b0:	28000526 	beq	r5,zero,2a0c8 <__ascii_wctomb+0x18>
   2a0b4:	00803fc4 	movi	r2,255
   2a0b8:	11800536 	bltu	r2,r6,2a0d0 <__ascii_wctomb+0x20>
   2a0bc:	29800005 	stb	r6,0(r5)
   2a0c0:	00800044 	movi	r2,1
   2a0c4:	f800283a 	ret
   2a0c8:	0005883a 	mov	r2,zero
   2a0cc:	f800283a 	ret
   2a0d0:	00802284 	movi	r2,138
   2a0d4:	20800015 	stw	r2,0(r4)
   2a0d8:	00bfffc4 	movi	r2,-1
   2a0dc:	f800283a 	ret

0002a0e0 <_wctomb_r>:
   2a0e0:	008000f4 	movhi	r2,3
   2a0e4:	defff904 	addi	sp,sp,-28
   2a0e8:	10872a04 	addi	r2,r2,7336
   2a0ec:	dfc00615 	stw	ra,24(sp)
   2a0f0:	dc400515 	stw	r17,20(sp)
   2a0f4:	dc000415 	stw	r16,16(sp)
   2a0f8:	3823883a 	mov	r17,r7
   2a0fc:	14000017 	ldw	r16,0(r2)
   2a100:	d9000115 	stw	r4,4(sp)
   2a104:	d9400215 	stw	r5,8(sp)
   2a108:	d9800315 	stw	r6,12(sp)
   2a10c:	00254a00 	call	254a0 <__locale_charset>
   2a110:	d9800317 	ldw	r6,12(sp)
   2a114:	d9400217 	ldw	r5,8(sp)
   2a118:	d9000117 	ldw	r4,4(sp)
   2a11c:	100f883a 	mov	r7,r2
   2a120:	dc400015 	stw	r17,0(sp)
   2a124:	803ee83a 	callr	r16
   2a128:	dfc00617 	ldw	ra,24(sp)
   2a12c:	dc400517 	ldw	r17,20(sp)
   2a130:	dc000417 	ldw	r16,16(sp)
   2a134:	dec00704 	addi	sp,sp,28
   2a138:	f800283a 	ret

0002a13c <__udivdi3>:
   2a13c:	defff404 	addi	sp,sp,-48
   2a140:	dcc00515 	stw	r19,20(sp)
   2a144:	dc000215 	stw	r16,8(sp)
   2a148:	dfc00b15 	stw	ra,44(sp)
   2a14c:	df000a15 	stw	fp,40(sp)
   2a150:	ddc00915 	stw	r23,36(sp)
   2a154:	dd800815 	stw	r22,32(sp)
   2a158:	dd400715 	stw	r21,28(sp)
   2a15c:	dd000615 	stw	r20,24(sp)
   2a160:	dc800415 	stw	r18,16(sp)
   2a164:	dc400315 	stw	r17,12(sp)
   2a168:	2027883a 	mov	r19,r4
   2a16c:	2821883a 	mov	r16,r5
   2a170:	3800461e 	bne	r7,zero,2a28c <__udivdi3+0x150>
   2a174:	3023883a 	mov	r17,r6
   2a178:	2025883a 	mov	r18,r4
   2a17c:	2980572e 	bgeu	r5,r6,2a2dc <__udivdi3+0x1a0>
   2a180:	00bfffd4 	movui	r2,65535
   2a184:	282d883a 	mov	r22,r5
   2a188:	1180b236 	bltu	r2,r6,2a454 <__udivdi3+0x318>
   2a18c:	00803fc4 	movi	r2,255
   2a190:	1185803a 	cmpltu	r2,r2,r6
   2a194:	100490fa 	slli	r2,r2,3
   2a198:	3086d83a 	srl	r3,r6,r2
   2a19c:	010000f4 	movhi	r4,3
   2a1a0:	21002d04 	addi	r4,r4,180
   2a1a4:	20c7883a 	add	r3,r4,r3
   2a1a8:	18c00003 	ldbu	r3,0(r3)
   2a1ac:	1885883a 	add	r2,r3,r2
   2a1b0:	00c00804 	movi	r3,32
   2a1b4:	1887c83a 	sub	r3,r3,r2
   2a1b8:	18000526 	beq	r3,zero,2a1d0 <__udivdi3+0x94>
   2a1bc:	80e0983a 	sll	r16,r16,r3
   2a1c0:	9884d83a 	srl	r2,r19,r2
   2a1c4:	30e2983a 	sll	r17,r6,r3
   2a1c8:	98e4983a 	sll	r18,r19,r3
   2a1cc:	142cb03a 	or	r22,r2,r16
   2a1d0:	882ad43a 	srli	r21,r17,16
   2a1d4:	b009883a 	mov	r4,r22
   2a1d8:	8d3fffcc 	andi	r20,r17,65535
   2a1dc:	a80b883a 	mov	r5,r21
   2a1e0:	002ae580 	call	2ae58 <__umodsi3>
   2a1e4:	b009883a 	mov	r4,r22
   2a1e8:	a80b883a 	mov	r5,r21
   2a1ec:	1027883a 	mov	r19,r2
   2a1f0:	002adf40 	call	2adf4 <__udivsi3>
   2a1f4:	100b883a 	mov	r5,r2
   2a1f8:	a009883a 	mov	r4,r20
   2a1fc:	102d883a 	mov	r22,r2
   2a200:	002aeb00 	call	2aeb0 <__mulsi3>
   2a204:	9826943a 	slli	r19,r19,16
   2a208:	9006d43a 	srli	r3,r18,16
   2a20c:	1cc6b03a 	or	r3,r3,r19
   2a210:	1880052e 	bgeu	r3,r2,2a228 <__udivdi3+0xec>
   2a214:	1c47883a 	add	r3,r3,r17
   2a218:	b13fffc4 	addi	r4,r22,-1
   2a21c:	1c400136 	bltu	r3,r17,2a224 <__udivdi3+0xe8>
   2a220:	18814236 	bltu	r3,r2,2a72c <__udivdi3+0x5f0>
   2a224:	202d883a 	mov	r22,r4
   2a228:	18a1c83a 	sub	r16,r3,r2
   2a22c:	8009883a 	mov	r4,r16
   2a230:	a80b883a 	mov	r5,r21
   2a234:	002ae580 	call	2ae58 <__umodsi3>
   2a238:	1027883a 	mov	r19,r2
   2a23c:	8009883a 	mov	r4,r16
   2a240:	a80b883a 	mov	r5,r21
   2a244:	9826943a 	slli	r19,r19,16
   2a248:	002adf40 	call	2adf4 <__udivsi3>
   2a24c:	100b883a 	mov	r5,r2
   2a250:	a009883a 	mov	r4,r20
   2a254:	94bfffcc 	andi	r18,r18,65535
   2a258:	1021883a 	mov	r16,r2
   2a25c:	94e4b03a 	or	r18,r18,r19
   2a260:	002aeb00 	call	2aeb0 <__mulsi3>
   2a264:	9080052e 	bgeu	r18,r2,2a27c <__udivdi3+0x140>
   2a268:	8ca5883a 	add	r18,r17,r18
   2a26c:	80ffffc4 	addi	r3,r16,-1
   2a270:	94410c36 	bltu	r18,r17,2a6a4 <__udivdi3+0x568>
   2a274:	90810b2e 	bgeu	r18,r2,2a6a4 <__udivdi3+0x568>
   2a278:	843fff84 	addi	r16,r16,-2
   2a27c:	b004943a 	slli	r2,r22,16
   2a280:	0007883a 	mov	r3,zero
   2a284:	1404b03a 	or	r2,r2,r16
   2a288:	00005e06 	br	2a404 <__udivdi3+0x2c8>
   2a28c:	29c05b36 	bltu	r5,r7,2a3fc <__udivdi3+0x2c0>
   2a290:	00bfffd4 	movui	r2,65535
   2a294:	11c0672e 	bgeu	r2,r7,2a434 <__udivdi3+0x2f8>
   2a298:	00804034 	movhi	r2,256
   2a29c:	10bfffc4 	addi	r2,r2,-1
   2a2a0:	11c10a36 	bltu	r2,r7,2a6cc <__udivdi3+0x590>
   2a2a4:	00800404 	movi	r2,16
   2a2a8:	3886d83a 	srl	r3,r7,r2
   2a2ac:	010000f4 	movhi	r4,3
   2a2b0:	21002d04 	addi	r4,r4,180
   2a2b4:	20c7883a 	add	r3,r4,r3
   2a2b8:	18c00003 	ldbu	r3,0(r3)
   2a2bc:	05c00804 	movi	r23,32
   2a2c0:	1885883a 	add	r2,r3,r2
   2a2c4:	b8afc83a 	sub	r23,r23,r2
   2a2c8:	b800671e 	bne	r23,zero,2a468 <__udivdi3+0x32c>
   2a2cc:	3c010536 	bltu	r7,r16,2a6e4 <__udivdi3+0x5a8>
   2a2d0:	9985403a 	cmpgeu	r2,r19,r6
   2a2d4:	0007883a 	mov	r3,zero
   2a2d8:	00004a06 	br	2a404 <__udivdi3+0x2c8>
   2a2dc:	3000041e 	bne	r6,zero,2a2f0 <__udivdi3+0x1b4>
   2a2e0:	000b883a 	mov	r5,zero
   2a2e4:	01000044 	movi	r4,1
   2a2e8:	002adf40 	call	2adf4 <__udivsi3>
   2a2ec:	1023883a 	mov	r17,r2
   2a2f0:	00bfffd4 	movui	r2,65535
   2a2f4:	1440532e 	bgeu	r2,r17,2a444 <__udivdi3+0x308>
   2a2f8:	00804034 	movhi	r2,256
   2a2fc:	10bfffc4 	addi	r2,r2,-1
   2a300:	1440f436 	bltu	r2,r17,2a6d4 <__udivdi3+0x598>
   2a304:	00800404 	movi	r2,16
   2a308:	8886d83a 	srl	r3,r17,r2
   2a30c:	010000f4 	movhi	r4,3
   2a310:	21002d04 	addi	r4,r4,180
   2a314:	20c7883a 	add	r3,r4,r3
   2a318:	18c00003 	ldbu	r3,0(r3)
   2a31c:	1885883a 	add	r2,r3,r2
   2a320:	00c00804 	movi	r3,32
   2a324:	1887c83a 	sub	r3,r3,r2
   2a328:	1800a51e 	bne	r3,zero,2a5c0 <__udivdi3+0x484>
   2a32c:	882ad43a 	srli	r21,r17,16
   2a330:	8461c83a 	sub	r16,r16,r17
   2a334:	8d3fffcc 	andi	r20,r17,65535
   2a338:	00c00044 	movi	r3,1
   2a33c:	a80b883a 	mov	r5,r21
   2a340:	8009883a 	mov	r4,r16
   2a344:	d8c00115 	stw	r3,4(sp)
   2a348:	002ae580 	call	2ae58 <__umodsi3>
   2a34c:	a80b883a 	mov	r5,r21
   2a350:	8009883a 	mov	r4,r16
   2a354:	1027883a 	mov	r19,r2
   2a358:	002adf40 	call	2adf4 <__udivsi3>
   2a35c:	a00b883a 	mov	r5,r20
   2a360:	1009883a 	mov	r4,r2
   2a364:	102d883a 	mov	r22,r2
   2a368:	002aeb00 	call	2aeb0 <__mulsi3>
   2a36c:	9826943a 	slli	r19,r19,16
   2a370:	900ed43a 	srli	r7,r18,16
   2a374:	d8c00117 	ldw	r3,4(sp)
   2a378:	3cceb03a 	or	r7,r7,r19
   2a37c:	3880052e 	bgeu	r7,r2,2a394 <__udivdi3+0x258>
   2a380:	3c4f883a 	add	r7,r7,r17
   2a384:	b13fffc4 	addi	r4,r22,-1
   2a388:	3c400136 	bltu	r7,r17,2a390 <__udivdi3+0x254>
   2a38c:	3880e436 	bltu	r7,r2,2a720 <__udivdi3+0x5e4>
   2a390:	202d883a 	mov	r22,r4
   2a394:	38a1c83a 	sub	r16,r7,r2
   2a398:	8009883a 	mov	r4,r16
   2a39c:	a80b883a 	mov	r5,r21
   2a3a0:	d8c00115 	stw	r3,4(sp)
   2a3a4:	002ae580 	call	2ae58 <__umodsi3>
   2a3a8:	1027883a 	mov	r19,r2
   2a3ac:	8009883a 	mov	r4,r16
   2a3b0:	a80b883a 	mov	r5,r21
   2a3b4:	9826943a 	slli	r19,r19,16
   2a3b8:	002adf40 	call	2adf4 <__udivsi3>
   2a3bc:	a00b883a 	mov	r5,r20
   2a3c0:	1009883a 	mov	r4,r2
   2a3c4:	94bfffcc 	andi	r18,r18,65535
   2a3c8:	1021883a 	mov	r16,r2
   2a3cc:	94e4b03a 	or	r18,r18,r19
   2a3d0:	002aeb00 	call	2aeb0 <__mulsi3>
   2a3d4:	d8c00117 	ldw	r3,4(sp)
   2a3d8:	9080052e 	bgeu	r18,r2,2a3f0 <__udivdi3+0x2b4>
   2a3dc:	8ca5883a 	add	r18,r17,r18
   2a3e0:	813fffc4 	addi	r4,r16,-1
   2a3e4:	9440ad36 	bltu	r18,r17,2a69c <__udivdi3+0x560>
   2a3e8:	9080ac2e 	bgeu	r18,r2,2a69c <__udivdi3+0x560>
   2a3ec:	843fff84 	addi	r16,r16,-2
   2a3f0:	b004943a 	slli	r2,r22,16
   2a3f4:	1404b03a 	or	r2,r2,r16
   2a3f8:	00000206 	br	2a404 <__udivdi3+0x2c8>
   2a3fc:	0007883a 	mov	r3,zero
   2a400:	0005883a 	mov	r2,zero
   2a404:	dfc00b17 	ldw	ra,44(sp)
   2a408:	df000a17 	ldw	fp,40(sp)
   2a40c:	ddc00917 	ldw	r23,36(sp)
   2a410:	dd800817 	ldw	r22,32(sp)
   2a414:	dd400717 	ldw	r21,28(sp)
   2a418:	dd000617 	ldw	r20,24(sp)
   2a41c:	dcc00517 	ldw	r19,20(sp)
   2a420:	dc800417 	ldw	r18,16(sp)
   2a424:	dc400317 	ldw	r17,12(sp)
   2a428:	dc000217 	ldw	r16,8(sp)
   2a42c:	dec00c04 	addi	sp,sp,48
   2a430:	f800283a 	ret
   2a434:	00803fc4 	movi	r2,255
   2a438:	11c5803a 	cmpltu	r2,r2,r7
   2a43c:	100490fa 	slli	r2,r2,3
   2a440:	003f9906 	br	2a2a8 <__alt_data_end+0xfffeaea8>
   2a444:	00803fc4 	movi	r2,255
   2a448:	1445803a 	cmpltu	r2,r2,r17
   2a44c:	100490fa 	slli	r2,r2,3
   2a450:	003fad06 	br	2a308 <__alt_data_end+0xfffeaf08>
   2a454:	00804034 	movhi	r2,256
   2a458:	10bfffc4 	addi	r2,r2,-1
   2a45c:	11809f36 	bltu	r2,r6,2a6dc <__udivdi3+0x5a0>
   2a460:	00800404 	movi	r2,16
   2a464:	003f4c06 	br	2a198 <__alt_data_end+0xfffead98>
   2a468:	3dce983a 	sll	r7,r7,r23
   2a46c:	30b8d83a 	srl	fp,r6,r2
   2a470:	80a2d83a 	srl	r17,r16,r2
   2a474:	35cc983a 	sll	r6,r6,r23
   2a478:	3f38b03a 	or	fp,r7,fp
   2a47c:	e024d43a 	srli	r18,fp,16
   2a480:	9884d83a 	srl	r2,r19,r2
   2a484:	85e0983a 	sll	r16,r16,r23
   2a488:	8809883a 	mov	r4,r17
   2a48c:	900b883a 	mov	r5,r18
   2a490:	d9800015 	stw	r6,0(sp)
   2a494:	1420b03a 	or	r16,r2,r16
   2a498:	002ae580 	call	2ae58 <__umodsi3>
   2a49c:	900b883a 	mov	r5,r18
   2a4a0:	8809883a 	mov	r4,r17
   2a4a4:	1029883a 	mov	r20,r2
   2a4a8:	e5bfffcc 	andi	r22,fp,65535
   2a4ac:	002adf40 	call	2adf4 <__udivsi3>
   2a4b0:	100b883a 	mov	r5,r2
   2a4b4:	b009883a 	mov	r4,r22
   2a4b8:	102b883a 	mov	r21,r2
   2a4bc:	002aeb00 	call	2aeb0 <__mulsi3>
   2a4c0:	a028943a 	slli	r20,r20,16
   2a4c4:	8006d43a 	srli	r3,r16,16
   2a4c8:	1d06b03a 	or	r3,r3,r20
   2a4cc:	1880042e 	bgeu	r3,r2,2a4e0 <__udivdi3+0x3a4>
   2a4d0:	1f07883a 	add	r3,r3,fp
   2a4d4:	a93fffc4 	addi	r4,r21,-1
   2a4d8:	1f00892e 	bgeu	r3,fp,2a700 <__udivdi3+0x5c4>
   2a4dc:	202b883a 	mov	r21,r4
   2a4e0:	18a3c83a 	sub	r17,r3,r2
   2a4e4:	8809883a 	mov	r4,r17
   2a4e8:	900b883a 	mov	r5,r18
   2a4ec:	002ae580 	call	2ae58 <__umodsi3>
   2a4f0:	1029883a 	mov	r20,r2
   2a4f4:	8809883a 	mov	r4,r17
   2a4f8:	900b883a 	mov	r5,r18
   2a4fc:	a028943a 	slli	r20,r20,16
   2a500:	002adf40 	call	2adf4 <__udivsi3>
   2a504:	100b883a 	mov	r5,r2
   2a508:	b009883a 	mov	r4,r22
   2a50c:	843fffcc 	andi	r16,r16,65535
   2a510:	1023883a 	mov	r17,r2
   2a514:	8520b03a 	or	r16,r16,r20
   2a518:	002aeb00 	call	2aeb0 <__mulsi3>
   2a51c:	8080042e 	bgeu	r16,r2,2a530 <__udivdi3+0x3f4>
   2a520:	8721883a 	add	r16,r16,fp
   2a524:	88ffffc4 	addi	r3,r17,-1
   2a528:	8700712e 	bgeu	r16,fp,2a6f0 <__udivdi3+0x5b4>
   2a52c:	1823883a 	mov	r17,r3
   2a530:	a80e943a 	slli	r7,r21,16
   2a534:	d8c00017 	ldw	r3,0(sp)
   2a538:	80a1c83a 	sub	r16,r16,r2
   2a53c:	3c64b03a 	or	r18,r7,r17
   2a540:	1d3fffcc 	andi	r20,r3,65535
   2a544:	9022d43a 	srli	r17,r18,16
   2a548:	95bfffcc 	andi	r22,r18,65535
   2a54c:	a00b883a 	mov	r5,r20
   2a550:	b009883a 	mov	r4,r22
   2a554:	182ad43a 	srli	r21,r3,16
   2a558:	002aeb00 	call	2aeb0 <__mulsi3>
   2a55c:	a00b883a 	mov	r5,r20
   2a560:	8809883a 	mov	r4,r17
   2a564:	1039883a 	mov	fp,r2
   2a568:	002aeb00 	call	2aeb0 <__mulsi3>
   2a56c:	8809883a 	mov	r4,r17
   2a570:	a80b883a 	mov	r5,r21
   2a574:	1029883a 	mov	r20,r2
   2a578:	002aeb00 	call	2aeb0 <__mulsi3>
   2a57c:	a80b883a 	mov	r5,r21
   2a580:	b009883a 	mov	r4,r22
   2a584:	1023883a 	mov	r17,r2
   2a588:	002aeb00 	call	2aeb0 <__mulsi3>
   2a58c:	e006d43a 	srli	r3,fp,16
   2a590:	1505883a 	add	r2,r2,r20
   2a594:	1887883a 	add	r3,r3,r2
   2a598:	1d00022e 	bgeu	r3,r20,2a5a4 <__udivdi3+0x468>
   2a59c:	00800074 	movhi	r2,1
   2a5a0:	88a3883a 	add	r17,r17,r2
   2a5a4:	1804d43a 	srli	r2,r3,16
   2a5a8:	1463883a 	add	r17,r2,r17
   2a5ac:	84404436 	bltu	r16,r17,2a6c0 <__udivdi3+0x584>
   2a5b0:	84403e26 	beq	r16,r17,2a6ac <__udivdi3+0x570>
   2a5b4:	9005883a 	mov	r2,r18
   2a5b8:	0007883a 	mov	r3,zero
   2a5bc:	003f9106 	br	2a404 <__alt_data_end+0xfffeb004>
   2a5c0:	88e2983a 	sll	r17,r17,r3
   2a5c4:	80aed83a 	srl	r23,r16,r2
   2a5c8:	80e0983a 	sll	r16,r16,r3
   2a5cc:	882ad43a 	srli	r21,r17,16
   2a5d0:	9884d83a 	srl	r2,r19,r2
   2a5d4:	b809883a 	mov	r4,r23
   2a5d8:	a80b883a 	mov	r5,r21
   2a5dc:	98e4983a 	sll	r18,r19,r3
   2a5e0:	142cb03a 	or	r22,r2,r16
   2a5e4:	002ae580 	call	2ae58 <__umodsi3>
   2a5e8:	b809883a 	mov	r4,r23
   2a5ec:	a80b883a 	mov	r5,r21
   2a5f0:	1027883a 	mov	r19,r2
   2a5f4:	8d3fffcc 	andi	r20,r17,65535
   2a5f8:	002adf40 	call	2adf4 <__udivsi3>
   2a5fc:	a009883a 	mov	r4,r20
   2a600:	100b883a 	mov	r5,r2
   2a604:	102f883a 	mov	r23,r2
   2a608:	002aeb00 	call	2aeb0 <__mulsi3>
   2a60c:	9826943a 	slli	r19,r19,16
   2a610:	b008d43a 	srli	r4,r22,16
   2a614:	24c8b03a 	or	r4,r4,r19
   2a618:	2080062e 	bgeu	r4,r2,2a634 <__udivdi3+0x4f8>
   2a61c:	2449883a 	add	r4,r4,r17
   2a620:	b8ffffc4 	addi	r3,r23,-1
   2a624:	24403c36 	bltu	r4,r17,2a718 <__udivdi3+0x5dc>
   2a628:	20803b2e 	bgeu	r4,r2,2a718 <__udivdi3+0x5dc>
   2a62c:	bdffff84 	addi	r23,r23,-2
   2a630:	2449883a 	add	r4,r4,r17
   2a634:	20a1c83a 	sub	r16,r4,r2
   2a638:	a80b883a 	mov	r5,r21
   2a63c:	8009883a 	mov	r4,r16
   2a640:	002ae580 	call	2ae58 <__umodsi3>
   2a644:	a80b883a 	mov	r5,r21
   2a648:	8009883a 	mov	r4,r16
   2a64c:	1027883a 	mov	r19,r2
   2a650:	002adf40 	call	2adf4 <__udivsi3>
   2a654:	a009883a 	mov	r4,r20
   2a658:	100b883a 	mov	r5,r2
   2a65c:	9826943a 	slli	r19,r19,16
   2a660:	1039883a 	mov	fp,r2
   2a664:	002aeb00 	call	2aeb0 <__mulsi3>
   2a668:	b13fffcc 	andi	r4,r22,65535
   2a66c:	24c8b03a 	or	r4,r4,r19
   2a670:	2080062e 	bgeu	r4,r2,2a68c <__udivdi3+0x550>
   2a674:	2449883a 	add	r4,r4,r17
   2a678:	e0ffffc4 	addi	r3,fp,-1
   2a67c:	24402436 	bltu	r4,r17,2a710 <__udivdi3+0x5d4>
   2a680:	2080232e 	bgeu	r4,r2,2a710 <__udivdi3+0x5d4>
   2a684:	e73fff84 	addi	fp,fp,-2
   2a688:	2449883a 	add	r4,r4,r17
   2a68c:	b82e943a 	slli	r23,r23,16
   2a690:	20a1c83a 	sub	r16,r4,r2
   2a694:	bf06b03a 	or	r3,r23,fp
   2a698:	003f2806 	br	2a33c <__alt_data_end+0xfffeaf3c>
   2a69c:	2021883a 	mov	r16,r4
   2a6a0:	003f5306 	br	2a3f0 <__alt_data_end+0xfffeaff0>
   2a6a4:	1821883a 	mov	r16,r3
   2a6a8:	003ef406 	br	2a27c <__alt_data_end+0xfffeae7c>
   2a6ac:	1806943a 	slli	r3,r3,16
   2a6b0:	9de6983a 	sll	r19,r19,r23
   2a6b4:	e73fffcc 	andi	fp,fp,65535
   2a6b8:	1f07883a 	add	r3,r3,fp
   2a6bc:	98ffbd2e 	bgeu	r19,r3,2a5b4 <__alt_data_end+0xfffeb1b4>
   2a6c0:	90bfffc4 	addi	r2,r18,-1
   2a6c4:	0007883a 	mov	r3,zero
   2a6c8:	003f4e06 	br	2a404 <__alt_data_end+0xfffeb004>
   2a6cc:	00800604 	movi	r2,24
   2a6d0:	003ef506 	br	2a2a8 <__alt_data_end+0xfffeaea8>
   2a6d4:	00800604 	movi	r2,24
   2a6d8:	003f0b06 	br	2a308 <__alt_data_end+0xfffeaf08>
   2a6dc:	00800604 	movi	r2,24
   2a6e0:	003ead06 	br	2a198 <__alt_data_end+0xfffead98>
   2a6e4:	0007883a 	mov	r3,zero
   2a6e8:	00800044 	movi	r2,1
   2a6ec:	003f4506 	br	2a404 <__alt_data_end+0xfffeb004>
   2a6f0:	80bf8e2e 	bgeu	r16,r2,2a52c <__alt_data_end+0xfffeb12c>
   2a6f4:	8c7fff84 	addi	r17,r17,-2
   2a6f8:	8721883a 	add	r16,r16,fp
   2a6fc:	003f8c06 	br	2a530 <__alt_data_end+0xfffeb130>
   2a700:	18bf762e 	bgeu	r3,r2,2a4dc <__alt_data_end+0xfffeb0dc>
   2a704:	ad7fff84 	addi	r21,r21,-2
   2a708:	1f07883a 	add	r3,r3,fp
   2a70c:	003f7406 	br	2a4e0 <__alt_data_end+0xfffeb0e0>
   2a710:	1839883a 	mov	fp,r3
   2a714:	003fdd06 	br	2a68c <__alt_data_end+0xfffeb28c>
   2a718:	182f883a 	mov	r23,r3
   2a71c:	003fc506 	br	2a634 <__alt_data_end+0xfffeb234>
   2a720:	b5bfff84 	addi	r22,r22,-2
   2a724:	3c4f883a 	add	r7,r7,r17
   2a728:	003f1a06 	br	2a394 <__alt_data_end+0xfffeaf94>
   2a72c:	b5bfff84 	addi	r22,r22,-2
   2a730:	1c47883a 	add	r3,r3,r17
   2a734:	003ebc06 	br	2a228 <__alt_data_end+0xfffeae28>

0002a738 <__umoddi3>:
   2a738:	defff304 	addi	sp,sp,-52
   2a73c:	df000b15 	stw	fp,44(sp)
   2a740:	dc400415 	stw	r17,16(sp)
   2a744:	dc000315 	stw	r16,12(sp)
   2a748:	dfc00c15 	stw	ra,48(sp)
   2a74c:	ddc00a15 	stw	r23,40(sp)
   2a750:	dd800915 	stw	r22,36(sp)
   2a754:	dd400815 	stw	r21,32(sp)
   2a758:	dd000715 	stw	r20,28(sp)
   2a75c:	dcc00615 	stw	r19,24(sp)
   2a760:	dc800515 	stw	r18,20(sp)
   2a764:	2021883a 	mov	r16,r4
   2a768:	2823883a 	mov	r17,r5
   2a76c:	2839883a 	mov	fp,r5
   2a770:	3800401e 	bne	r7,zero,2a874 <__umoddi3+0x13c>
   2a774:	3027883a 	mov	r19,r6
   2a778:	2029883a 	mov	r20,r4
   2a77c:	2980552e 	bgeu	r5,r6,2a8d4 <__umoddi3+0x19c>
   2a780:	00bfffd4 	movui	r2,65535
   2a784:	1180a236 	bltu	r2,r6,2aa10 <__umoddi3+0x2d8>
   2a788:	01003fc4 	movi	r4,255
   2a78c:	2189803a 	cmpltu	r4,r4,r6
   2a790:	200890fa 	slli	r4,r4,3
   2a794:	3104d83a 	srl	r2,r6,r4
   2a798:	00c000f4 	movhi	r3,3
   2a79c:	18c02d04 	addi	r3,r3,180
   2a7a0:	1885883a 	add	r2,r3,r2
   2a7a4:	10c00003 	ldbu	r3,0(r2)
   2a7a8:	00800804 	movi	r2,32
   2a7ac:	1909883a 	add	r4,r3,r4
   2a7b0:	1125c83a 	sub	r18,r2,r4
   2a7b4:	90000526 	beq	r18,zero,2a7cc <__umoddi3+0x94>
   2a7b8:	8ca2983a 	sll	r17,r17,r18
   2a7bc:	8108d83a 	srl	r4,r16,r4
   2a7c0:	34a6983a 	sll	r19,r6,r18
   2a7c4:	84a8983a 	sll	r20,r16,r18
   2a7c8:	2478b03a 	or	fp,r4,r17
   2a7cc:	982cd43a 	srli	r22,r19,16
   2a7d0:	e009883a 	mov	r4,fp
   2a7d4:	9dffffcc 	andi	r23,r19,65535
   2a7d8:	b00b883a 	mov	r5,r22
   2a7dc:	002ae580 	call	2ae58 <__umodsi3>
   2a7e0:	b00b883a 	mov	r5,r22
   2a7e4:	e009883a 	mov	r4,fp
   2a7e8:	102b883a 	mov	r21,r2
   2a7ec:	002adf40 	call	2adf4 <__udivsi3>
   2a7f0:	100b883a 	mov	r5,r2
   2a7f4:	b809883a 	mov	r4,r23
   2a7f8:	002aeb00 	call	2aeb0 <__mulsi3>
   2a7fc:	a82a943a 	slli	r21,r21,16
   2a800:	a006d43a 	srli	r3,r20,16
   2a804:	1d46b03a 	or	r3,r3,r21
   2a808:	1880032e 	bgeu	r3,r2,2a818 <__umoddi3+0xe0>
   2a80c:	1cc7883a 	add	r3,r3,r19
   2a810:	1cc00136 	bltu	r3,r19,2a818 <__umoddi3+0xe0>
   2a814:	18813136 	bltu	r3,r2,2acdc <__umoddi3+0x5a4>
   2a818:	18a1c83a 	sub	r16,r3,r2
   2a81c:	b00b883a 	mov	r5,r22
   2a820:	8009883a 	mov	r4,r16
   2a824:	002ae580 	call	2ae58 <__umodsi3>
   2a828:	b00b883a 	mov	r5,r22
   2a82c:	8009883a 	mov	r4,r16
   2a830:	1023883a 	mov	r17,r2
   2a834:	002adf40 	call	2adf4 <__udivsi3>
   2a838:	100b883a 	mov	r5,r2
   2a83c:	b809883a 	mov	r4,r23
   2a840:	8822943a 	slli	r17,r17,16
   2a844:	002aeb00 	call	2aeb0 <__mulsi3>
   2a848:	a0ffffcc 	andi	r3,r20,65535
   2a84c:	1c46b03a 	or	r3,r3,r17
   2a850:	1880042e 	bgeu	r3,r2,2a864 <__umoddi3+0x12c>
   2a854:	1cc7883a 	add	r3,r3,r19
   2a858:	1cc00236 	bltu	r3,r19,2a864 <__umoddi3+0x12c>
   2a85c:	1880012e 	bgeu	r3,r2,2a864 <__umoddi3+0x12c>
   2a860:	1cc7883a 	add	r3,r3,r19
   2a864:	1885c83a 	sub	r2,r3,r2
   2a868:	1484d83a 	srl	r2,r2,r18
   2a86c:	0007883a 	mov	r3,zero
   2a870:	00005306 	br	2a9c0 <__umoddi3+0x288>
   2a874:	29c05036 	bltu	r5,r7,2a9b8 <__umoddi3+0x280>
   2a878:	00bfffd4 	movui	r2,65535
   2a87c:	11c05c2e 	bgeu	r2,r7,2a9f0 <__umoddi3+0x2b8>
   2a880:	00804034 	movhi	r2,256
   2a884:	10bfffc4 	addi	r2,r2,-1
   2a888:	11c10636 	bltu	r2,r7,2aca4 <__umoddi3+0x56c>
   2a88c:	01000404 	movi	r4,16
   2a890:	3904d83a 	srl	r2,r7,r4
   2a894:	00c000f4 	movhi	r3,3
   2a898:	18c02d04 	addi	r3,r3,180
   2a89c:	1885883a 	add	r2,r3,r2
   2a8a0:	14c00003 	ldbu	r19,0(r2)
   2a8a4:	00c00804 	movi	r3,32
   2a8a8:	9927883a 	add	r19,r19,r4
   2a8ac:	1ce9c83a 	sub	r20,r3,r19
   2a8b0:	a0005c1e 	bne	r20,zero,2aa24 <__umoddi3+0x2ec>
   2a8b4:	3c400136 	bltu	r7,r17,2a8bc <__umoddi3+0x184>
   2a8b8:	81810a36 	bltu	r16,r6,2ace4 <__umoddi3+0x5ac>
   2a8bc:	8185c83a 	sub	r2,r16,r6
   2a8c0:	89e3c83a 	sub	r17,r17,r7
   2a8c4:	8089803a 	cmpltu	r4,r16,r2
   2a8c8:	8939c83a 	sub	fp,r17,r4
   2a8cc:	e007883a 	mov	r3,fp
   2a8d0:	00003b06 	br	2a9c0 <__umoddi3+0x288>
   2a8d4:	3000041e 	bne	r6,zero,2a8e8 <__umoddi3+0x1b0>
   2a8d8:	000b883a 	mov	r5,zero
   2a8dc:	01000044 	movi	r4,1
   2a8e0:	002adf40 	call	2adf4 <__udivsi3>
   2a8e4:	1027883a 	mov	r19,r2
   2a8e8:	00bfffd4 	movui	r2,65535
   2a8ec:	14c0442e 	bgeu	r2,r19,2aa00 <__umoddi3+0x2c8>
   2a8f0:	00804034 	movhi	r2,256
   2a8f4:	10bfffc4 	addi	r2,r2,-1
   2a8f8:	14c0ec36 	bltu	r2,r19,2acac <__umoddi3+0x574>
   2a8fc:	00800404 	movi	r2,16
   2a900:	9886d83a 	srl	r3,r19,r2
   2a904:	010000f4 	movhi	r4,3
   2a908:	21002d04 	addi	r4,r4,180
   2a90c:	20c7883a 	add	r3,r4,r3
   2a910:	18c00003 	ldbu	r3,0(r3)
   2a914:	1887883a 	add	r3,r3,r2
   2a918:	00800804 	movi	r2,32
   2a91c:	10e5c83a 	sub	r18,r2,r3
   2a920:	9000ab1e 	bne	r18,zero,2abd0 <__umoddi3+0x498>
   2a924:	982cd43a 	srli	r22,r19,16
   2a928:	8ce3c83a 	sub	r17,r17,r19
   2a92c:	9dffffcc 	andi	r23,r19,65535
   2a930:	b00b883a 	mov	r5,r22
   2a934:	8809883a 	mov	r4,r17
   2a938:	002ae580 	call	2ae58 <__umodsi3>
   2a93c:	b00b883a 	mov	r5,r22
   2a940:	8809883a 	mov	r4,r17
   2a944:	102b883a 	mov	r21,r2
   2a948:	002adf40 	call	2adf4 <__udivsi3>
   2a94c:	b80b883a 	mov	r5,r23
   2a950:	1009883a 	mov	r4,r2
   2a954:	002aeb00 	call	2aeb0 <__mulsi3>
   2a958:	a82a943a 	slli	r21,r21,16
   2a95c:	a006d43a 	srli	r3,r20,16
   2a960:	1d46b03a 	or	r3,r3,r21
   2a964:	1880042e 	bgeu	r3,r2,2a978 <__umoddi3+0x240>
   2a968:	1cc7883a 	add	r3,r3,r19
   2a96c:	1cc00236 	bltu	r3,r19,2a978 <__umoddi3+0x240>
   2a970:	1880012e 	bgeu	r3,r2,2a978 <__umoddi3+0x240>
   2a974:	1cc7883a 	add	r3,r3,r19
   2a978:	18a1c83a 	sub	r16,r3,r2
   2a97c:	b00b883a 	mov	r5,r22
   2a980:	8009883a 	mov	r4,r16
   2a984:	002ae580 	call	2ae58 <__umodsi3>
   2a988:	1023883a 	mov	r17,r2
   2a98c:	b00b883a 	mov	r5,r22
   2a990:	8009883a 	mov	r4,r16
   2a994:	002adf40 	call	2adf4 <__udivsi3>
   2a998:	8822943a 	slli	r17,r17,16
   2a99c:	b80b883a 	mov	r5,r23
   2a9a0:	1009883a 	mov	r4,r2
   2a9a4:	002aeb00 	call	2aeb0 <__mulsi3>
   2a9a8:	a53fffcc 	andi	r20,r20,65535
   2a9ac:	a446b03a 	or	r3,r20,r17
   2a9b0:	18bfac2e 	bgeu	r3,r2,2a864 <__alt_data_end+0xfffeb464>
   2a9b4:	003fa706 	br	2a854 <__alt_data_end+0xfffeb454>
   2a9b8:	2005883a 	mov	r2,r4
   2a9bc:	2807883a 	mov	r3,r5
   2a9c0:	dfc00c17 	ldw	ra,48(sp)
   2a9c4:	df000b17 	ldw	fp,44(sp)
   2a9c8:	ddc00a17 	ldw	r23,40(sp)
   2a9cc:	dd800917 	ldw	r22,36(sp)
   2a9d0:	dd400817 	ldw	r21,32(sp)
   2a9d4:	dd000717 	ldw	r20,28(sp)
   2a9d8:	dcc00617 	ldw	r19,24(sp)
   2a9dc:	dc800517 	ldw	r18,20(sp)
   2a9e0:	dc400417 	ldw	r17,16(sp)
   2a9e4:	dc000317 	ldw	r16,12(sp)
   2a9e8:	dec00d04 	addi	sp,sp,52
   2a9ec:	f800283a 	ret
   2a9f0:	04c03fc4 	movi	r19,255
   2a9f4:	99c9803a 	cmpltu	r4,r19,r7
   2a9f8:	200890fa 	slli	r4,r4,3
   2a9fc:	003fa406 	br	2a890 <__alt_data_end+0xfffeb490>
   2aa00:	00803fc4 	movi	r2,255
   2aa04:	14c5803a 	cmpltu	r2,r2,r19
   2aa08:	100490fa 	slli	r2,r2,3
   2aa0c:	003fbc06 	br	2a900 <__alt_data_end+0xfffeb500>
   2aa10:	00804034 	movhi	r2,256
   2aa14:	10bfffc4 	addi	r2,r2,-1
   2aa18:	1180a636 	bltu	r2,r6,2acb4 <__umoddi3+0x57c>
   2aa1c:	01000404 	movi	r4,16
   2aa20:	003f5c06 	br	2a794 <__alt_data_end+0xfffeb394>
   2aa24:	3d0e983a 	sll	r7,r7,r20
   2aa28:	34ead83a 	srl	r21,r6,r19
   2aa2c:	8cc6d83a 	srl	r3,r17,r19
   2aa30:	8d10983a 	sll	r8,r17,r20
   2aa34:	3d6ab03a 	or	r21,r7,r21
   2aa38:	a82cd43a 	srli	r22,r21,16
   2aa3c:	84e2d83a 	srl	r17,r16,r19
   2aa40:	1809883a 	mov	r4,r3
   2aa44:	b00b883a 	mov	r5,r22
   2aa48:	8a22b03a 	or	r17,r17,r8
   2aa4c:	3524983a 	sll	r18,r6,r20
   2aa50:	dc400015 	stw	r17,0(sp)
   2aa54:	d8c00115 	stw	r3,4(sp)
   2aa58:	002ae580 	call	2ae58 <__umodsi3>
   2aa5c:	d8c00117 	ldw	r3,4(sp)
   2aa60:	b00b883a 	mov	r5,r22
   2aa64:	1039883a 	mov	fp,r2
   2aa68:	1809883a 	mov	r4,r3
   2aa6c:	002adf40 	call	2adf4 <__udivsi3>
   2aa70:	adffffcc 	andi	r23,r21,65535
   2aa74:	100b883a 	mov	r5,r2
   2aa78:	b809883a 	mov	r4,r23
   2aa7c:	1023883a 	mov	r17,r2
   2aa80:	002aeb00 	call	2aeb0 <__mulsi3>
   2aa84:	d9400017 	ldw	r5,0(sp)
   2aa88:	e008943a 	slli	r4,fp,16
   2aa8c:	8520983a 	sll	r16,r16,r20
   2aa90:	2806d43a 	srli	r3,r5,16
   2aa94:	1906b03a 	or	r3,r3,r4
   2aa98:	1880042e 	bgeu	r3,r2,2aaac <__umoddi3+0x374>
   2aa9c:	1d47883a 	add	r3,r3,r21
   2aaa0:	893fffc4 	addi	r4,r17,-1
   2aaa4:	1d40892e 	bgeu	r3,r21,2accc <__umoddi3+0x594>
   2aaa8:	2023883a 	mov	r17,r4
   2aaac:	18b9c83a 	sub	fp,r3,r2
   2aab0:	b00b883a 	mov	r5,r22
   2aab4:	e009883a 	mov	r4,fp
   2aab8:	002ae580 	call	2ae58 <__umodsi3>
   2aabc:	b00b883a 	mov	r5,r22
   2aac0:	e009883a 	mov	r4,fp
   2aac4:	d8800215 	stw	r2,8(sp)
   2aac8:	002adf40 	call	2adf4 <__udivsi3>
   2aacc:	100b883a 	mov	r5,r2
   2aad0:	b809883a 	mov	r4,r23
   2aad4:	102d883a 	mov	r22,r2
   2aad8:	002aeb00 	call	2aeb0 <__mulsi3>
   2aadc:	d9800217 	ldw	r6,8(sp)
   2aae0:	d8c00017 	ldw	r3,0(sp)
   2aae4:	300c943a 	slli	r6,r6,16
   2aae8:	1a3fffcc 	andi	r8,r3,65535
   2aaec:	4190b03a 	or	r8,r8,r6
   2aaf0:	4080042e 	bgeu	r8,r2,2ab04 <__umoddi3+0x3cc>
   2aaf4:	4551883a 	add	r8,r8,r21
   2aaf8:	b0ffffc4 	addi	r3,r22,-1
   2aafc:	45406f2e 	bgeu	r8,r21,2acbc <__umoddi3+0x584>
   2ab00:	182d883a 	mov	r22,r3
   2ab04:	880e943a 	slli	r7,r17,16
   2ab08:	9006d43a 	srli	r3,r18,16
   2ab0c:	91bfffcc 	andi	r6,r18,65535
   2ab10:	3dacb03a 	or	r22,r7,r22
   2ab14:	b02ed43a 	srli	r23,r22,16
   2ab18:	b5bfffcc 	andi	r22,r22,65535
   2ab1c:	300b883a 	mov	r5,r6
   2ab20:	b009883a 	mov	r4,r22
   2ab24:	40a3c83a 	sub	r17,r8,r2
   2ab28:	d8c00115 	stw	r3,4(sp)
   2ab2c:	d9800215 	stw	r6,8(sp)
   2ab30:	002aeb00 	call	2aeb0 <__mulsi3>
   2ab34:	d9800217 	ldw	r6,8(sp)
   2ab38:	b809883a 	mov	r4,r23
   2ab3c:	1039883a 	mov	fp,r2
   2ab40:	300b883a 	mov	r5,r6
   2ab44:	002aeb00 	call	2aeb0 <__mulsi3>
   2ab48:	d8c00117 	ldw	r3,4(sp)
   2ab4c:	b809883a 	mov	r4,r23
   2ab50:	d8800215 	stw	r2,8(sp)
   2ab54:	180b883a 	mov	r5,r3
   2ab58:	002aeb00 	call	2aeb0 <__mulsi3>
   2ab5c:	d8c00117 	ldw	r3,4(sp)
   2ab60:	b009883a 	mov	r4,r22
   2ab64:	102f883a 	mov	r23,r2
   2ab68:	180b883a 	mov	r5,r3
   2ab6c:	002aeb00 	call	2aeb0 <__mulsi3>
   2ab70:	d9800217 	ldw	r6,8(sp)
   2ab74:	e006d43a 	srli	r3,fp,16
   2ab78:	1185883a 	add	r2,r2,r6
   2ab7c:	1885883a 	add	r2,r3,r2
   2ab80:	1180022e 	bgeu	r2,r6,2ab8c <__umoddi3+0x454>
   2ab84:	00c00074 	movhi	r3,1
   2ab88:	b8ef883a 	add	r23,r23,r3
   2ab8c:	1006d43a 	srli	r3,r2,16
   2ab90:	1004943a 	slli	r2,r2,16
   2ab94:	e73fffcc 	andi	fp,fp,65535
   2ab98:	1dc7883a 	add	r3,r3,r23
   2ab9c:	1739883a 	add	fp,r2,fp
   2aba0:	88c03a36 	bltu	r17,r3,2ac8c <__umoddi3+0x554>
   2aba4:	88c05126 	beq	r17,r3,2acec <__umoddi3+0x5b4>
   2aba8:	88c9c83a 	sub	r4,r17,r3
   2abac:	e00f883a 	mov	r7,fp
   2abb0:	81cfc83a 	sub	r7,r16,r7
   2abb4:	81c7803a 	cmpltu	r3,r16,r7
   2abb8:	20c7c83a 	sub	r3,r4,r3
   2abbc:	1cc4983a 	sll	r2,r3,r19
   2abc0:	3d0ed83a 	srl	r7,r7,r20
   2abc4:	1d06d83a 	srl	r3,r3,r20
   2abc8:	11c4b03a 	or	r2,r2,r7
   2abcc:	003f7c06 	br	2a9c0 <__alt_data_end+0xfffeb5c0>
   2abd0:	9ca6983a 	sll	r19,r19,r18
   2abd4:	88f8d83a 	srl	fp,r17,r3
   2abd8:	80c4d83a 	srl	r2,r16,r3
   2abdc:	982cd43a 	srli	r22,r19,16
   2abe0:	8ca2983a 	sll	r17,r17,r18
   2abe4:	e009883a 	mov	r4,fp
   2abe8:	b00b883a 	mov	r5,r22
   2abec:	146ab03a 	or	r21,r2,r17
   2abf0:	002ae580 	call	2ae58 <__umodsi3>
   2abf4:	b00b883a 	mov	r5,r22
   2abf8:	e009883a 	mov	r4,fp
   2abfc:	1029883a 	mov	r20,r2
   2ac00:	9dffffcc 	andi	r23,r19,65535
   2ac04:	002adf40 	call	2adf4 <__udivsi3>
   2ac08:	b809883a 	mov	r4,r23
   2ac0c:	100b883a 	mov	r5,r2
   2ac10:	002aeb00 	call	2aeb0 <__mulsi3>
   2ac14:	a008943a 	slli	r4,r20,16
   2ac18:	a806d43a 	srli	r3,r21,16
   2ac1c:	84a8983a 	sll	r20,r16,r18
   2ac20:	1906b03a 	or	r3,r3,r4
   2ac24:	1880042e 	bgeu	r3,r2,2ac38 <__umoddi3+0x500>
   2ac28:	1cc7883a 	add	r3,r3,r19
   2ac2c:	1cc00236 	bltu	r3,r19,2ac38 <__umoddi3+0x500>
   2ac30:	1880012e 	bgeu	r3,r2,2ac38 <__umoddi3+0x500>
   2ac34:	1cc7883a 	add	r3,r3,r19
   2ac38:	18a3c83a 	sub	r17,r3,r2
   2ac3c:	b00b883a 	mov	r5,r22
   2ac40:	8809883a 	mov	r4,r17
   2ac44:	002ae580 	call	2ae58 <__umodsi3>
   2ac48:	b00b883a 	mov	r5,r22
   2ac4c:	8809883a 	mov	r4,r17
   2ac50:	1021883a 	mov	r16,r2
   2ac54:	002adf40 	call	2adf4 <__udivsi3>
   2ac58:	100b883a 	mov	r5,r2
   2ac5c:	b809883a 	mov	r4,r23
   2ac60:	8020943a 	slli	r16,r16,16
   2ac64:	002aeb00 	call	2aeb0 <__mulsi3>
   2ac68:	a8ffffcc 	andi	r3,r21,65535
   2ac6c:	1c06b03a 	or	r3,r3,r16
   2ac70:	1880042e 	bgeu	r3,r2,2ac84 <__umoddi3+0x54c>
   2ac74:	1cc7883a 	add	r3,r3,r19
   2ac78:	1cc00236 	bltu	r3,r19,2ac84 <__umoddi3+0x54c>
   2ac7c:	1880012e 	bgeu	r3,r2,2ac84 <__umoddi3+0x54c>
   2ac80:	1cc7883a 	add	r3,r3,r19
   2ac84:	18a3c83a 	sub	r17,r3,r2
   2ac88:	003f2906 	br	2a930 <__alt_data_end+0xfffeb530>
   2ac8c:	e48fc83a 	sub	r7,fp,r18
   2ac90:	1d49c83a 	sub	r4,r3,r21
   2ac94:	e1f9803a 	cmpltu	fp,fp,r7
   2ac98:	2739c83a 	sub	fp,r4,fp
   2ac9c:	8f09c83a 	sub	r4,r17,fp
   2aca0:	003fc306 	br	2abb0 <__alt_data_end+0xfffeb7b0>
   2aca4:	01000604 	movi	r4,24
   2aca8:	003ef906 	br	2a890 <__alt_data_end+0xfffeb490>
   2acac:	00800604 	movi	r2,24
   2acb0:	003f1306 	br	2a900 <__alt_data_end+0xfffeb500>
   2acb4:	01000604 	movi	r4,24
   2acb8:	003eb606 	br	2a794 <__alt_data_end+0xfffeb394>
   2acbc:	40bf902e 	bgeu	r8,r2,2ab00 <__alt_data_end+0xfffeb700>
   2acc0:	b5bfff84 	addi	r22,r22,-2
   2acc4:	4551883a 	add	r8,r8,r21
   2acc8:	003f8e06 	br	2ab04 <__alt_data_end+0xfffeb704>
   2accc:	18bf762e 	bgeu	r3,r2,2aaa8 <__alt_data_end+0xfffeb6a8>
   2acd0:	8c7fff84 	addi	r17,r17,-2
   2acd4:	1d47883a 	add	r3,r3,r21
   2acd8:	003f7406 	br	2aaac <__alt_data_end+0xfffeb6ac>
   2acdc:	1cc7883a 	add	r3,r3,r19
   2ace0:	003ecd06 	br	2a818 <__alt_data_end+0xfffeb418>
   2ace4:	8005883a 	mov	r2,r16
   2ace8:	003ef806 	br	2a8cc <__alt_data_end+0xfffeb4cc>
   2acec:	873fe736 	bltu	r16,fp,2ac8c <__alt_data_end+0xfffeb88c>
   2acf0:	e00f883a 	mov	r7,fp
   2acf4:	0009883a 	mov	r4,zero
   2acf8:	003fad06 	br	2abb0 <__alt_data_end+0xfffeb7b0>

0002acfc <__divsi3>:
   2acfc:	20001b16 	blt	r4,zero,2ad6c <__divsi3+0x70>
   2ad00:	000f883a 	mov	r7,zero
   2ad04:	28001616 	blt	r5,zero,2ad60 <__divsi3+0x64>
   2ad08:	200d883a 	mov	r6,r4
   2ad0c:	29001a2e 	bgeu	r5,r4,2ad78 <__divsi3+0x7c>
   2ad10:	00800804 	movi	r2,32
   2ad14:	00c00044 	movi	r3,1
   2ad18:	00000106 	br	2ad20 <__divsi3+0x24>
   2ad1c:	10000d26 	beq	r2,zero,2ad54 <__divsi3+0x58>
   2ad20:	294b883a 	add	r5,r5,r5
   2ad24:	10bfffc4 	addi	r2,r2,-1
   2ad28:	18c7883a 	add	r3,r3,r3
   2ad2c:	293ffb36 	bltu	r5,r4,2ad1c <__alt_data_end+0xfffeb91c>
   2ad30:	0005883a 	mov	r2,zero
   2ad34:	18000726 	beq	r3,zero,2ad54 <__divsi3+0x58>
   2ad38:	0005883a 	mov	r2,zero
   2ad3c:	31400236 	bltu	r6,r5,2ad48 <__divsi3+0x4c>
   2ad40:	314dc83a 	sub	r6,r6,r5
   2ad44:	10c4b03a 	or	r2,r2,r3
   2ad48:	1806d07a 	srli	r3,r3,1
   2ad4c:	280ad07a 	srli	r5,r5,1
   2ad50:	183ffa1e 	bne	r3,zero,2ad3c <__alt_data_end+0xfffeb93c>
   2ad54:	38000126 	beq	r7,zero,2ad5c <__divsi3+0x60>
   2ad58:	0085c83a 	sub	r2,zero,r2
   2ad5c:	f800283a 	ret
   2ad60:	014bc83a 	sub	r5,zero,r5
   2ad64:	39c0005c 	xori	r7,r7,1
   2ad68:	003fe706 	br	2ad08 <__alt_data_end+0xfffeb908>
   2ad6c:	0109c83a 	sub	r4,zero,r4
   2ad70:	01c00044 	movi	r7,1
   2ad74:	003fe306 	br	2ad04 <__alt_data_end+0xfffeb904>
   2ad78:	00c00044 	movi	r3,1
   2ad7c:	003fee06 	br	2ad38 <__alt_data_end+0xfffeb938>

0002ad80 <__modsi3>:
   2ad80:	20001716 	blt	r4,zero,2ade0 <__modsi3+0x60>
   2ad84:	000f883a 	mov	r7,zero
   2ad88:	2005883a 	mov	r2,r4
   2ad8c:	28001216 	blt	r5,zero,2add8 <__modsi3+0x58>
   2ad90:	2900162e 	bgeu	r5,r4,2adec <__modsi3+0x6c>
   2ad94:	01800804 	movi	r6,32
   2ad98:	00c00044 	movi	r3,1
   2ad9c:	00000106 	br	2ada4 <__modsi3+0x24>
   2ada0:	30000a26 	beq	r6,zero,2adcc <__modsi3+0x4c>
   2ada4:	294b883a 	add	r5,r5,r5
   2ada8:	31bfffc4 	addi	r6,r6,-1
   2adac:	18c7883a 	add	r3,r3,r3
   2adb0:	293ffb36 	bltu	r5,r4,2ada0 <__alt_data_end+0xfffeb9a0>
   2adb4:	18000526 	beq	r3,zero,2adcc <__modsi3+0x4c>
   2adb8:	1806d07a 	srli	r3,r3,1
   2adbc:	11400136 	bltu	r2,r5,2adc4 <__modsi3+0x44>
   2adc0:	1145c83a 	sub	r2,r2,r5
   2adc4:	280ad07a 	srli	r5,r5,1
   2adc8:	183ffb1e 	bne	r3,zero,2adb8 <__alt_data_end+0xfffeb9b8>
   2adcc:	38000126 	beq	r7,zero,2add4 <__modsi3+0x54>
   2add0:	0085c83a 	sub	r2,zero,r2
   2add4:	f800283a 	ret
   2add8:	014bc83a 	sub	r5,zero,r5
   2addc:	003fec06 	br	2ad90 <__alt_data_end+0xfffeb990>
   2ade0:	0109c83a 	sub	r4,zero,r4
   2ade4:	01c00044 	movi	r7,1
   2ade8:	003fe706 	br	2ad88 <__alt_data_end+0xfffeb988>
   2adec:	00c00044 	movi	r3,1
   2adf0:	003ff106 	br	2adb8 <__alt_data_end+0xfffeb9b8>

0002adf4 <__udivsi3>:
   2adf4:	200d883a 	mov	r6,r4
   2adf8:	2900152e 	bgeu	r5,r4,2ae50 <__udivsi3+0x5c>
   2adfc:	28001416 	blt	r5,zero,2ae50 <__udivsi3+0x5c>
   2ae00:	00800804 	movi	r2,32
   2ae04:	00c00044 	movi	r3,1
   2ae08:	00000206 	br	2ae14 <__udivsi3+0x20>
   2ae0c:	10000e26 	beq	r2,zero,2ae48 <__udivsi3+0x54>
   2ae10:	28000516 	blt	r5,zero,2ae28 <__udivsi3+0x34>
   2ae14:	294b883a 	add	r5,r5,r5
   2ae18:	10bfffc4 	addi	r2,r2,-1
   2ae1c:	18c7883a 	add	r3,r3,r3
   2ae20:	293ffa36 	bltu	r5,r4,2ae0c <__alt_data_end+0xfffeba0c>
   2ae24:	18000826 	beq	r3,zero,2ae48 <__udivsi3+0x54>
   2ae28:	0005883a 	mov	r2,zero
   2ae2c:	31400236 	bltu	r6,r5,2ae38 <__udivsi3+0x44>
   2ae30:	314dc83a 	sub	r6,r6,r5
   2ae34:	10c4b03a 	or	r2,r2,r3
   2ae38:	1806d07a 	srli	r3,r3,1
   2ae3c:	280ad07a 	srli	r5,r5,1
   2ae40:	183ffa1e 	bne	r3,zero,2ae2c <__alt_data_end+0xfffeba2c>
   2ae44:	f800283a 	ret
   2ae48:	0005883a 	mov	r2,zero
   2ae4c:	f800283a 	ret
   2ae50:	00c00044 	movi	r3,1
   2ae54:	003ff406 	br	2ae28 <__alt_data_end+0xfffeba28>

0002ae58 <__umodsi3>:
   2ae58:	2005883a 	mov	r2,r4
   2ae5c:	2900122e 	bgeu	r5,r4,2aea8 <__umodsi3+0x50>
   2ae60:	28001116 	blt	r5,zero,2aea8 <__umodsi3+0x50>
   2ae64:	01800804 	movi	r6,32
   2ae68:	00c00044 	movi	r3,1
   2ae6c:	00000206 	br	2ae78 <__umodsi3+0x20>
   2ae70:	30000c26 	beq	r6,zero,2aea4 <__umodsi3+0x4c>
   2ae74:	28000516 	blt	r5,zero,2ae8c <__umodsi3+0x34>
   2ae78:	294b883a 	add	r5,r5,r5
   2ae7c:	31bfffc4 	addi	r6,r6,-1
   2ae80:	18c7883a 	add	r3,r3,r3
   2ae84:	293ffa36 	bltu	r5,r4,2ae70 <__alt_data_end+0xfffeba70>
   2ae88:	18000626 	beq	r3,zero,2aea4 <__umodsi3+0x4c>
   2ae8c:	1806d07a 	srli	r3,r3,1
   2ae90:	11400136 	bltu	r2,r5,2ae98 <__umodsi3+0x40>
   2ae94:	1145c83a 	sub	r2,r2,r5
   2ae98:	280ad07a 	srli	r5,r5,1
   2ae9c:	183ffb1e 	bne	r3,zero,2ae8c <__alt_data_end+0xfffeba8c>
   2aea0:	f800283a 	ret
   2aea4:	f800283a 	ret
   2aea8:	00c00044 	movi	r3,1
   2aeac:	003ff706 	br	2ae8c <__alt_data_end+0xfffeba8c>

0002aeb0 <__mulsi3>:
   2aeb0:	0005883a 	mov	r2,zero
   2aeb4:	20000726 	beq	r4,zero,2aed4 <__mulsi3+0x24>
   2aeb8:	20c0004c 	andi	r3,r4,1
   2aebc:	2008d07a 	srli	r4,r4,1
   2aec0:	18000126 	beq	r3,zero,2aec8 <__mulsi3+0x18>
   2aec4:	1145883a 	add	r2,r2,r5
   2aec8:	294b883a 	add	r5,r5,r5
   2aecc:	203ffa1e 	bne	r4,zero,2aeb8 <__alt_data_end+0xfffebab8>
   2aed0:	f800283a 	ret
   2aed4:	f800283a 	ret

0002aed8 <__adddf3>:
   2aed8:	02c00434 	movhi	r11,16
   2aedc:	5affffc4 	addi	r11,r11,-1
   2aee0:	2806d7fa 	srli	r3,r5,31
   2aee4:	2ad4703a 	and	r10,r5,r11
   2aee8:	3ad2703a 	and	r9,r7,r11
   2aeec:	3804d53a 	srli	r2,r7,20
   2aef0:	3018d77a 	srli	r12,r6,29
   2aef4:	280ad53a 	srli	r5,r5,20
   2aef8:	501490fa 	slli	r10,r10,3
   2aefc:	2010d77a 	srli	r8,r4,29
   2af00:	481290fa 	slli	r9,r9,3
   2af04:	380ed7fa 	srli	r7,r7,31
   2af08:	defffb04 	addi	sp,sp,-20
   2af0c:	dc800215 	stw	r18,8(sp)
   2af10:	dc400115 	stw	r17,4(sp)
   2af14:	dc000015 	stw	r16,0(sp)
   2af18:	dfc00415 	stw	ra,16(sp)
   2af1c:	dcc00315 	stw	r19,12(sp)
   2af20:	1c803fcc 	andi	r18,r3,255
   2af24:	2c01ffcc 	andi	r16,r5,2047
   2af28:	5210b03a 	or	r8,r10,r8
   2af2c:	202290fa 	slli	r17,r4,3
   2af30:	1081ffcc 	andi	r2,r2,2047
   2af34:	4b12b03a 	or	r9,r9,r12
   2af38:	300c90fa 	slli	r6,r6,3
   2af3c:	91c07526 	beq	r18,r7,2b114 <__adddf3+0x23c>
   2af40:	8087c83a 	sub	r3,r16,r2
   2af44:	00c0ab0e 	bge	zero,r3,2b1f4 <__adddf3+0x31c>
   2af48:	10002a1e 	bne	r2,zero,2aff4 <__adddf3+0x11c>
   2af4c:	4984b03a 	or	r2,r9,r6
   2af50:	1000961e 	bne	r2,zero,2b1ac <__adddf3+0x2d4>
   2af54:	888001cc 	andi	r2,r17,7
   2af58:	10000726 	beq	r2,zero,2af78 <__adddf3+0xa0>
   2af5c:	888003cc 	andi	r2,r17,15
   2af60:	00c00104 	movi	r3,4
   2af64:	10c00426 	beq	r2,r3,2af78 <__adddf3+0xa0>
   2af68:	88c7883a 	add	r3,r17,r3
   2af6c:	1c63803a 	cmpltu	r17,r3,r17
   2af70:	4451883a 	add	r8,r8,r17
   2af74:	1823883a 	mov	r17,r3
   2af78:	4080202c 	andhi	r2,r8,128
   2af7c:	10005926 	beq	r2,zero,2b0e4 <__adddf3+0x20c>
   2af80:	84000044 	addi	r16,r16,1
   2af84:	0081ffc4 	movi	r2,2047
   2af88:	8080ba26 	beq	r16,r2,2b274 <__adddf3+0x39c>
   2af8c:	00bfe034 	movhi	r2,65408
   2af90:	10bfffc4 	addi	r2,r2,-1
   2af94:	4090703a 	and	r8,r8,r2
   2af98:	4004977a 	slli	r2,r8,29
   2af9c:	4010927a 	slli	r8,r8,9
   2afa0:	8822d0fa 	srli	r17,r17,3
   2afa4:	8401ffcc 	andi	r16,r16,2047
   2afa8:	4010d33a 	srli	r8,r8,12
   2afac:	9007883a 	mov	r3,r18
   2afb0:	1444b03a 	or	r2,r2,r17
   2afb4:	8401ffcc 	andi	r16,r16,2047
   2afb8:	8020953a 	slli	r16,r16,20
   2afbc:	18c03fcc 	andi	r3,r3,255
   2afc0:	01000434 	movhi	r4,16
   2afc4:	213fffc4 	addi	r4,r4,-1
   2afc8:	180697fa 	slli	r3,r3,31
   2afcc:	4110703a 	and	r8,r8,r4
   2afd0:	4410b03a 	or	r8,r8,r16
   2afd4:	40c6b03a 	or	r3,r8,r3
   2afd8:	dfc00417 	ldw	ra,16(sp)
   2afdc:	dcc00317 	ldw	r19,12(sp)
   2afe0:	dc800217 	ldw	r18,8(sp)
   2afe4:	dc400117 	ldw	r17,4(sp)
   2afe8:	dc000017 	ldw	r16,0(sp)
   2afec:	dec00504 	addi	sp,sp,20
   2aff0:	f800283a 	ret
   2aff4:	0081ffc4 	movi	r2,2047
   2aff8:	80bfd626 	beq	r16,r2,2af54 <__alt_data_end+0xfffebb54>
   2affc:	4a402034 	orhi	r9,r9,128
   2b000:	00800e04 	movi	r2,56
   2b004:	10c09f16 	blt	r2,r3,2b284 <__adddf3+0x3ac>
   2b008:	008007c4 	movi	r2,31
   2b00c:	10c0c216 	blt	r2,r3,2b318 <__adddf3+0x440>
   2b010:	00800804 	movi	r2,32
   2b014:	10c5c83a 	sub	r2,r2,r3
   2b018:	488a983a 	sll	r5,r9,r2
   2b01c:	30c8d83a 	srl	r4,r6,r3
   2b020:	3084983a 	sll	r2,r6,r2
   2b024:	48c6d83a 	srl	r3,r9,r3
   2b028:	290cb03a 	or	r6,r5,r4
   2b02c:	1004c03a 	cmpne	r2,r2,zero
   2b030:	308cb03a 	or	r6,r6,r2
   2b034:	898dc83a 	sub	r6,r17,r6
   2b038:	89a3803a 	cmpltu	r17,r17,r6
   2b03c:	40d1c83a 	sub	r8,r8,r3
   2b040:	4451c83a 	sub	r8,r8,r17
   2b044:	3023883a 	mov	r17,r6
   2b048:	4080202c 	andhi	r2,r8,128
   2b04c:	10002326 	beq	r2,zero,2b0dc <__adddf3+0x204>
   2b050:	04c02034 	movhi	r19,128
   2b054:	9cffffc4 	addi	r19,r19,-1
   2b058:	44e6703a 	and	r19,r8,r19
   2b05c:	98007626 	beq	r19,zero,2b238 <__adddf3+0x360>
   2b060:	9809883a 	mov	r4,r19
   2b064:	002d7180 	call	2d718 <__clzsi2>
   2b068:	10fffe04 	addi	r3,r2,-8
   2b06c:	010007c4 	movi	r4,31
   2b070:	20c07716 	blt	r4,r3,2b250 <__adddf3+0x378>
   2b074:	00800804 	movi	r2,32
   2b078:	10c5c83a 	sub	r2,r2,r3
   2b07c:	8884d83a 	srl	r2,r17,r2
   2b080:	98d0983a 	sll	r8,r19,r3
   2b084:	88e2983a 	sll	r17,r17,r3
   2b088:	1204b03a 	or	r2,r2,r8
   2b08c:	1c007416 	blt	r3,r16,2b260 <__adddf3+0x388>
   2b090:	1c21c83a 	sub	r16,r3,r16
   2b094:	82000044 	addi	r8,r16,1
   2b098:	00c007c4 	movi	r3,31
   2b09c:	1a009116 	blt	r3,r8,2b2e4 <__adddf3+0x40c>
   2b0a0:	00c00804 	movi	r3,32
   2b0a4:	1a07c83a 	sub	r3,r3,r8
   2b0a8:	8a08d83a 	srl	r4,r17,r8
   2b0ac:	88e2983a 	sll	r17,r17,r3
   2b0b0:	10c6983a 	sll	r3,r2,r3
   2b0b4:	1210d83a 	srl	r8,r2,r8
   2b0b8:	8804c03a 	cmpne	r2,r17,zero
   2b0bc:	1906b03a 	or	r3,r3,r4
   2b0c0:	18a2b03a 	or	r17,r3,r2
   2b0c4:	0021883a 	mov	r16,zero
   2b0c8:	003fa206 	br	2af54 <__alt_data_end+0xfffebb54>
   2b0cc:	1890b03a 	or	r8,r3,r2
   2b0d0:	40017d26 	beq	r8,zero,2b6c8 <__adddf3+0x7f0>
   2b0d4:	1011883a 	mov	r8,r2
   2b0d8:	1823883a 	mov	r17,r3
   2b0dc:	888001cc 	andi	r2,r17,7
   2b0e0:	103f9e1e 	bne	r2,zero,2af5c <__alt_data_end+0xfffebb5c>
   2b0e4:	4004977a 	slli	r2,r8,29
   2b0e8:	8822d0fa 	srli	r17,r17,3
   2b0ec:	4010d0fa 	srli	r8,r8,3
   2b0f0:	9007883a 	mov	r3,r18
   2b0f4:	1444b03a 	or	r2,r2,r17
   2b0f8:	0101ffc4 	movi	r4,2047
   2b0fc:	81002426 	beq	r16,r4,2b190 <__adddf3+0x2b8>
   2b100:	8120703a 	and	r16,r16,r4
   2b104:	01000434 	movhi	r4,16
   2b108:	213fffc4 	addi	r4,r4,-1
   2b10c:	4110703a 	and	r8,r8,r4
   2b110:	003fa806 	br	2afb4 <__alt_data_end+0xfffebbb4>
   2b114:	8089c83a 	sub	r4,r16,r2
   2b118:	01005e0e 	bge	zero,r4,2b294 <__adddf3+0x3bc>
   2b11c:	10002b26 	beq	r2,zero,2b1cc <__adddf3+0x2f4>
   2b120:	0081ffc4 	movi	r2,2047
   2b124:	80bf8b26 	beq	r16,r2,2af54 <__alt_data_end+0xfffebb54>
   2b128:	4a402034 	orhi	r9,r9,128
   2b12c:	00800e04 	movi	r2,56
   2b130:	1100a40e 	bge	r2,r4,2b3c4 <__adddf3+0x4ec>
   2b134:	498cb03a 	or	r6,r9,r6
   2b138:	300ac03a 	cmpne	r5,r6,zero
   2b13c:	0013883a 	mov	r9,zero
   2b140:	2c4b883a 	add	r5,r5,r17
   2b144:	2c63803a 	cmpltu	r17,r5,r17
   2b148:	4a11883a 	add	r8,r9,r8
   2b14c:	8a11883a 	add	r8,r17,r8
   2b150:	2823883a 	mov	r17,r5
   2b154:	4080202c 	andhi	r2,r8,128
   2b158:	103fe026 	beq	r2,zero,2b0dc <__alt_data_end+0xfffebcdc>
   2b15c:	84000044 	addi	r16,r16,1
   2b160:	0081ffc4 	movi	r2,2047
   2b164:	8080d226 	beq	r16,r2,2b4b0 <__adddf3+0x5d8>
   2b168:	00bfe034 	movhi	r2,65408
   2b16c:	10bfffc4 	addi	r2,r2,-1
   2b170:	4090703a 	and	r8,r8,r2
   2b174:	880ad07a 	srli	r5,r17,1
   2b178:	400897fa 	slli	r4,r8,31
   2b17c:	88c0004c 	andi	r3,r17,1
   2b180:	28e2b03a 	or	r17,r5,r3
   2b184:	4010d07a 	srli	r8,r8,1
   2b188:	2462b03a 	or	r17,r4,r17
   2b18c:	003f7106 	br	2af54 <__alt_data_end+0xfffebb54>
   2b190:	4088b03a 	or	r4,r8,r2
   2b194:	20014526 	beq	r4,zero,2b6ac <__adddf3+0x7d4>
   2b198:	01000434 	movhi	r4,16
   2b19c:	42000234 	orhi	r8,r8,8
   2b1a0:	213fffc4 	addi	r4,r4,-1
   2b1a4:	4110703a 	and	r8,r8,r4
   2b1a8:	003f8206 	br	2afb4 <__alt_data_end+0xfffebbb4>
   2b1ac:	18ffffc4 	addi	r3,r3,-1
   2b1b0:	1800491e 	bne	r3,zero,2b2d8 <__adddf3+0x400>
   2b1b4:	898bc83a 	sub	r5,r17,r6
   2b1b8:	8963803a 	cmpltu	r17,r17,r5
   2b1bc:	4251c83a 	sub	r8,r8,r9
   2b1c0:	4451c83a 	sub	r8,r8,r17
   2b1c4:	2823883a 	mov	r17,r5
   2b1c8:	003f9f06 	br	2b048 <__alt_data_end+0xfffebc48>
   2b1cc:	4984b03a 	or	r2,r9,r6
   2b1d0:	103f6026 	beq	r2,zero,2af54 <__alt_data_end+0xfffebb54>
   2b1d4:	213fffc4 	addi	r4,r4,-1
   2b1d8:	2000931e 	bne	r4,zero,2b428 <__adddf3+0x550>
   2b1dc:	898d883a 	add	r6,r17,r6
   2b1e0:	3463803a 	cmpltu	r17,r6,r17
   2b1e4:	4251883a 	add	r8,r8,r9
   2b1e8:	8a11883a 	add	r8,r17,r8
   2b1ec:	3023883a 	mov	r17,r6
   2b1f0:	003fd806 	br	2b154 <__alt_data_end+0xfffebd54>
   2b1f4:	1800541e 	bne	r3,zero,2b348 <__adddf3+0x470>
   2b1f8:	80800044 	addi	r2,r16,1
   2b1fc:	1081ffcc 	andi	r2,r2,2047
   2b200:	00c00044 	movi	r3,1
   2b204:	1880a00e 	bge	r3,r2,2b488 <__adddf3+0x5b0>
   2b208:	8989c83a 	sub	r4,r17,r6
   2b20c:	8905803a 	cmpltu	r2,r17,r4
   2b210:	4267c83a 	sub	r19,r8,r9
   2b214:	98a7c83a 	sub	r19,r19,r2
   2b218:	9880202c 	andhi	r2,r19,128
   2b21c:	10006326 	beq	r2,zero,2b3ac <__adddf3+0x4d4>
   2b220:	3463c83a 	sub	r17,r6,r17
   2b224:	4a07c83a 	sub	r3,r9,r8
   2b228:	344d803a 	cmpltu	r6,r6,r17
   2b22c:	19a7c83a 	sub	r19,r3,r6
   2b230:	3825883a 	mov	r18,r7
   2b234:	983f8a1e 	bne	r19,zero,2b060 <__alt_data_end+0xfffebc60>
   2b238:	8809883a 	mov	r4,r17
   2b23c:	002d7180 	call	2d718 <__clzsi2>
   2b240:	10800804 	addi	r2,r2,32
   2b244:	10fffe04 	addi	r3,r2,-8
   2b248:	010007c4 	movi	r4,31
   2b24c:	20ff890e 	bge	r4,r3,2b074 <__alt_data_end+0xfffebc74>
   2b250:	10bff604 	addi	r2,r2,-40
   2b254:	8884983a 	sll	r2,r17,r2
   2b258:	0023883a 	mov	r17,zero
   2b25c:	1c3f8c0e 	bge	r3,r16,2b090 <__alt_data_end+0xfffebc90>
   2b260:	023fe034 	movhi	r8,65408
   2b264:	423fffc4 	addi	r8,r8,-1
   2b268:	80e1c83a 	sub	r16,r16,r3
   2b26c:	1210703a 	and	r8,r2,r8
   2b270:	003f3806 	br	2af54 <__alt_data_end+0xfffebb54>
   2b274:	9007883a 	mov	r3,r18
   2b278:	0011883a 	mov	r8,zero
   2b27c:	0005883a 	mov	r2,zero
   2b280:	003f4c06 	br	2afb4 <__alt_data_end+0xfffebbb4>
   2b284:	498cb03a 	or	r6,r9,r6
   2b288:	300cc03a 	cmpne	r6,r6,zero
   2b28c:	0007883a 	mov	r3,zero
   2b290:	003f6806 	br	2b034 <__alt_data_end+0xfffebc34>
   2b294:	20009c1e 	bne	r4,zero,2b508 <__adddf3+0x630>
   2b298:	80800044 	addi	r2,r16,1
   2b29c:	1141ffcc 	andi	r5,r2,2047
   2b2a0:	01000044 	movi	r4,1
   2b2a4:	2140670e 	bge	r4,r5,2b444 <__adddf3+0x56c>
   2b2a8:	0101ffc4 	movi	r4,2047
   2b2ac:	11007f26 	beq	r2,r4,2b4ac <__adddf3+0x5d4>
   2b2b0:	898d883a 	add	r6,r17,r6
   2b2b4:	4247883a 	add	r3,r8,r9
   2b2b8:	3451803a 	cmpltu	r8,r6,r17
   2b2bc:	40d1883a 	add	r8,r8,r3
   2b2c0:	402297fa 	slli	r17,r8,31
   2b2c4:	300cd07a 	srli	r6,r6,1
   2b2c8:	4010d07a 	srli	r8,r8,1
   2b2cc:	1021883a 	mov	r16,r2
   2b2d0:	89a2b03a 	or	r17,r17,r6
   2b2d4:	003f1f06 	br	2af54 <__alt_data_end+0xfffebb54>
   2b2d8:	0081ffc4 	movi	r2,2047
   2b2dc:	80bf481e 	bne	r16,r2,2b000 <__alt_data_end+0xfffebc00>
   2b2e0:	003f1c06 	br	2af54 <__alt_data_end+0xfffebb54>
   2b2e4:	843ff844 	addi	r16,r16,-31
   2b2e8:	01000804 	movi	r4,32
   2b2ec:	1406d83a 	srl	r3,r2,r16
   2b2f0:	41005026 	beq	r8,r4,2b434 <__adddf3+0x55c>
   2b2f4:	01001004 	movi	r4,64
   2b2f8:	2211c83a 	sub	r8,r4,r8
   2b2fc:	1204983a 	sll	r2,r2,r8
   2b300:	88a2b03a 	or	r17,r17,r2
   2b304:	8822c03a 	cmpne	r17,r17,zero
   2b308:	1c62b03a 	or	r17,r3,r17
   2b30c:	0011883a 	mov	r8,zero
   2b310:	0021883a 	mov	r16,zero
   2b314:	003f7106 	br	2b0dc <__alt_data_end+0xfffebcdc>
   2b318:	193ff804 	addi	r4,r3,-32
   2b31c:	00800804 	movi	r2,32
   2b320:	4908d83a 	srl	r4,r9,r4
   2b324:	18804526 	beq	r3,r2,2b43c <__adddf3+0x564>
   2b328:	00801004 	movi	r2,64
   2b32c:	10c5c83a 	sub	r2,r2,r3
   2b330:	4886983a 	sll	r3,r9,r2
   2b334:	198cb03a 	or	r6,r3,r6
   2b338:	300cc03a 	cmpne	r6,r6,zero
   2b33c:	218cb03a 	or	r6,r4,r6
   2b340:	0007883a 	mov	r3,zero
   2b344:	003f3b06 	br	2b034 <__alt_data_end+0xfffebc34>
   2b348:	80002a26 	beq	r16,zero,2b3f4 <__adddf3+0x51c>
   2b34c:	0101ffc4 	movi	r4,2047
   2b350:	11006826 	beq	r2,r4,2b4f4 <__adddf3+0x61c>
   2b354:	00c7c83a 	sub	r3,zero,r3
   2b358:	42002034 	orhi	r8,r8,128
   2b35c:	01000e04 	movi	r4,56
   2b360:	20c07c16 	blt	r4,r3,2b554 <__adddf3+0x67c>
   2b364:	010007c4 	movi	r4,31
   2b368:	20c0da16 	blt	r4,r3,2b6d4 <__adddf3+0x7fc>
   2b36c:	01000804 	movi	r4,32
   2b370:	20c9c83a 	sub	r4,r4,r3
   2b374:	4114983a 	sll	r10,r8,r4
   2b378:	88cad83a 	srl	r5,r17,r3
   2b37c:	8908983a 	sll	r4,r17,r4
   2b380:	40c6d83a 	srl	r3,r8,r3
   2b384:	5162b03a 	or	r17,r10,r5
   2b388:	2008c03a 	cmpne	r4,r4,zero
   2b38c:	8922b03a 	or	r17,r17,r4
   2b390:	3463c83a 	sub	r17,r6,r17
   2b394:	48c7c83a 	sub	r3,r9,r3
   2b398:	344d803a 	cmpltu	r6,r6,r17
   2b39c:	1991c83a 	sub	r8,r3,r6
   2b3a0:	1021883a 	mov	r16,r2
   2b3a4:	3825883a 	mov	r18,r7
   2b3a8:	003f2706 	br	2b048 <__alt_data_end+0xfffebc48>
   2b3ac:	24d0b03a 	or	r8,r4,r19
   2b3b0:	40001b1e 	bne	r8,zero,2b420 <__adddf3+0x548>
   2b3b4:	0005883a 	mov	r2,zero
   2b3b8:	0007883a 	mov	r3,zero
   2b3bc:	0021883a 	mov	r16,zero
   2b3c0:	003f4d06 	br	2b0f8 <__alt_data_end+0xfffebcf8>
   2b3c4:	008007c4 	movi	r2,31
   2b3c8:	11003c16 	blt	r2,r4,2b4bc <__adddf3+0x5e4>
   2b3cc:	00800804 	movi	r2,32
   2b3d0:	1105c83a 	sub	r2,r2,r4
   2b3d4:	488e983a 	sll	r7,r9,r2
   2b3d8:	310ad83a 	srl	r5,r6,r4
   2b3dc:	3084983a 	sll	r2,r6,r2
   2b3e0:	4912d83a 	srl	r9,r9,r4
   2b3e4:	394ab03a 	or	r5,r7,r5
   2b3e8:	1004c03a 	cmpne	r2,r2,zero
   2b3ec:	288ab03a 	or	r5,r5,r2
   2b3f0:	003f5306 	br	2b140 <__alt_data_end+0xfffebd40>
   2b3f4:	4448b03a 	or	r4,r8,r17
   2b3f8:	20003e26 	beq	r4,zero,2b4f4 <__adddf3+0x61c>
   2b3fc:	00c6303a 	nor	r3,zero,r3
   2b400:	18003a1e 	bne	r3,zero,2b4ec <__adddf3+0x614>
   2b404:	3463c83a 	sub	r17,r6,r17
   2b408:	4a07c83a 	sub	r3,r9,r8
   2b40c:	344d803a 	cmpltu	r6,r6,r17
   2b410:	1991c83a 	sub	r8,r3,r6
   2b414:	1021883a 	mov	r16,r2
   2b418:	3825883a 	mov	r18,r7
   2b41c:	003f0a06 	br	2b048 <__alt_data_end+0xfffebc48>
   2b420:	2023883a 	mov	r17,r4
   2b424:	003f0d06 	br	2b05c <__alt_data_end+0xfffebc5c>
   2b428:	0081ffc4 	movi	r2,2047
   2b42c:	80bf3f1e 	bne	r16,r2,2b12c <__alt_data_end+0xfffebd2c>
   2b430:	003ec806 	br	2af54 <__alt_data_end+0xfffebb54>
   2b434:	0005883a 	mov	r2,zero
   2b438:	003fb106 	br	2b300 <__alt_data_end+0xfffebf00>
   2b43c:	0007883a 	mov	r3,zero
   2b440:	003fbc06 	br	2b334 <__alt_data_end+0xfffebf34>
   2b444:	4444b03a 	or	r2,r8,r17
   2b448:	8000871e 	bne	r16,zero,2b668 <__adddf3+0x790>
   2b44c:	1000ba26 	beq	r2,zero,2b738 <__adddf3+0x860>
   2b450:	4984b03a 	or	r2,r9,r6
   2b454:	103ebf26 	beq	r2,zero,2af54 <__alt_data_end+0xfffebb54>
   2b458:	8985883a 	add	r2,r17,r6
   2b45c:	4247883a 	add	r3,r8,r9
   2b460:	1451803a 	cmpltu	r8,r2,r17
   2b464:	40d1883a 	add	r8,r8,r3
   2b468:	40c0202c 	andhi	r3,r8,128
   2b46c:	1023883a 	mov	r17,r2
   2b470:	183f1a26 	beq	r3,zero,2b0dc <__alt_data_end+0xfffebcdc>
   2b474:	00bfe034 	movhi	r2,65408
   2b478:	10bfffc4 	addi	r2,r2,-1
   2b47c:	2021883a 	mov	r16,r4
   2b480:	4090703a 	and	r8,r8,r2
   2b484:	003eb306 	br	2af54 <__alt_data_end+0xfffebb54>
   2b488:	4444b03a 	or	r2,r8,r17
   2b48c:	8000291e 	bne	r16,zero,2b534 <__adddf3+0x65c>
   2b490:	10004b1e 	bne	r2,zero,2b5c0 <__adddf3+0x6e8>
   2b494:	4990b03a 	or	r8,r9,r6
   2b498:	40008b26 	beq	r8,zero,2b6c8 <__adddf3+0x7f0>
   2b49c:	4811883a 	mov	r8,r9
   2b4a0:	3023883a 	mov	r17,r6
   2b4a4:	3825883a 	mov	r18,r7
   2b4a8:	003eaa06 	br	2af54 <__alt_data_end+0xfffebb54>
   2b4ac:	1021883a 	mov	r16,r2
   2b4b0:	0011883a 	mov	r8,zero
   2b4b4:	0005883a 	mov	r2,zero
   2b4b8:	003f0f06 	br	2b0f8 <__alt_data_end+0xfffebcf8>
   2b4bc:	217ff804 	addi	r5,r4,-32
   2b4c0:	00800804 	movi	r2,32
   2b4c4:	494ad83a 	srl	r5,r9,r5
   2b4c8:	20807d26 	beq	r4,r2,2b6c0 <__adddf3+0x7e8>
   2b4cc:	00801004 	movi	r2,64
   2b4d0:	1109c83a 	sub	r4,r2,r4
   2b4d4:	4912983a 	sll	r9,r9,r4
   2b4d8:	498cb03a 	or	r6,r9,r6
   2b4dc:	300cc03a 	cmpne	r6,r6,zero
   2b4e0:	298ab03a 	or	r5,r5,r6
   2b4e4:	0013883a 	mov	r9,zero
   2b4e8:	003f1506 	br	2b140 <__alt_data_end+0xfffebd40>
   2b4ec:	0101ffc4 	movi	r4,2047
   2b4f0:	113f9a1e 	bne	r2,r4,2b35c <__alt_data_end+0xfffebf5c>
   2b4f4:	4811883a 	mov	r8,r9
   2b4f8:	3023883a 	mov	r17,r6
   2b4fc:	1021883a 	mov	r16,r2
   2b500:	3825883a 	mov	r18,r7
   2b504:	003e9306 	br	2af54 <__alt_data_end+0xfffebb54>
   2b508:	8000161e 	bne	r16,zero,2b564 <__adddf3+0x68c>
   2b50c:	444ab03a 	or	r5,r8,r17
   2b510:	28005126 	beq	r5,zero,2b658 <__adddf3+0x780>
   2b514:	0108303a 	nor	r4,zero,r4
   2b518:	20004d1e 	bne	r4,zero,2b650 <__adddf3+0x778>
   2b51c:	89a3883a 	add	r17,r17,r6
   2b520:	4253883a 	add	r9,r8,r9
   2b524:	898d803a 	cmpltu	r6,r17,r6
   2b528:	3251883a 	add	r8,r6,r9
   2b52c:	1021883a 	mov	r16,r2
   2b530:	003f0806 	br	2b154 <__alt_data_end+0xfffebd54>
   2b534:	1000301e 	bne	r2,zero,2b5f8 <__adddf3+0x720>
   2b538:	4984b03a 	or	r2,r9,r6
   2b53c:	10007126 	beq	r2,zero,2b704 <__adddf3+0x82c>
   2b540:	4811883a 	mov	r8,r9
   2b544:	3023883a 	mov	r17,r6
   2b548:	3825883a 	mov	r18,r7
   2b54c:	0401ffc4 	movi	r16,2047
   2b550:	003e8006 	br	2af54 <__alt_data_end+0xfffebb54>
   2b554:	4462b03a 	or	r17,r8,r17
   2b558:	8822c03a 	cmpne	r17,r17,zero
   2b55c:	0007883a 	mov	r3,zero
   2b560:	003f8b06 	br	2b390 <__alt_data_end+0xfffebf90>
   2b564:	0141ffc4 	movi	r5,2047
   2b568:	11403b26 	beq	r2,r5,2b658 <__adddf3+0x780>
   2b56c:	0109c83a 	sub	r4,zero,r4
   2b570:	42002034 	orhi	r8,r8,128
   2b574:	01400e04 	movi	r5,56
   2b578:	29006716 	blt	r5,r4,2b718 <__adddf3+0x840>
   2b57c:	014007c4 	movi	r5,31
   2b580:	29007016 	blt	r5,r4,2b744 <__adddf3+0x86c>
   2b584:	01400804 	movi	r5,32
   2b588:	290bc83a 	sub	r5,r5,r4
   2b58c:	4154983a 	sll	r10,r8,r5
   2b590:	890ed83a 	srl	r7,r17,r4
   2b594:	894a983a 	sll	r5,r17,r5
   2b598:	4108d83a 	srl	r4,r8,r4
   2b59c:	51e2b03a 	or	r17,r10,r7
   2b5a0:	280ac03a 	cmpne	r5,r5,zero
   2b5a4:	8962b03a 	or	r17,r17,r5
   2b5a8:	89a3883a 	add	r17,r17,r6
   2b5ac:	2253883a 	add	r9,r4,r9
   2b5b0:	898d803a 	cmpltu	r6,r17,r6
   2b5b4:	3251883a 	add	r8,r6,r9
   2b5b8:	1021883a 	mov	r16,r2
   2b5bc:	003ee506 	br	2b154 <__alt_data_end+0xfffebd54>
   2b5c0:	4984b03a 	or	r2,r9,r6
   2b5c4:	103e6326 	beq	r2,zero,2af54 <__alt_data_end+0xfffebb54>
   2b5c8:	8987c83a 	sub	r3,r17,r6
   2b5cc:	88c9803a 	cmpltu	r4,r17,r3
   2b5d0:	4245c83a 	sub	r2,r8,r9
   2b5d4:	1105c83a 	sub	r2,r2,r4
   2b5d8:	1100202c 	andhi	r4,r2,128
   2b5dc:	203ebb26 	beq	r4,zero,2b0cc <__alt_data_end+0xfffebccc>
   2b5e0:	3463c83a 	sub	r17,r6,r17
   2b5e4:	4a07c83a 	sub	r3,r9,r8
   2b5e8:	344d803a 	cmpltu	r6,r6,r17
   2b5ec:	1991c83a 	sub	r8,r3,r6
   2b5f0:	3825883a 	mov	r18,r7
   2b5f4:	003e5706 	br	2af54 <__alt_data_end+0xfffebb54>
   2b5f8:	4984b03a 	or	r2,r9,r6
   2b5fc:	10002e26 	beq	r2,zero,2b6b8 <__adddf3+0x7e0>
   2b600:	4004d0fa 	srli	r2,r8,3
   2b604:	8822d0fa 	srli	r17,r17,3
   2b608:	4010977a 	slli	r8,r8,29
   2b60c:	10c0022c 	andhi	r3,r2,8
   2b610:	4462b03a 	or	r17,r8,r17
   2b614:	18000826 	beq	r3,zero,2b638 <__adddf3+0x760>
   2b618:	4808d0fa 	srli	r4,r9,3
   2b61c:	20c0022c 	andhi	r3,r4,8
   2b620:	1800051e 	bne	r3,zero,2b638 <__adddf3+0x760>
   2b624:	300cd0fa 	srli	r6,r6,3
   2b628:	4806977a 	slli	r3,r9,29
   2b62c:	2005883a 	mov	r2,r4
   2b630:	3825883a 	mov	r18,r7
   2b634:	19a2b03a 	or	r17,r3,r6
   2b638:	8810d77a 	srli	r8,r17,29
   2b63c:	100490fa 	slli	r2,r2,3
   2b640:	882290fa 	slli	r17,r17,3
   2b644:	0401ffc4 	movi	r16,2047
   2b648:	4090b03a 	or	r8,r8,r2
   2b64c:	003e4106 	br	2af54 <__alt_data_end+0xfffebb54>
   2b650:	0141ffc4 	movi	r5,2047
   2b654:	117fc71e 	bne	r2,r5,2b574 <__alt_data_end+0xfffec174>
   2b658:	4811883a 	mov	r8,r9
   2b65c:	3023883a 	mov	r17,r6
   2b660:	1021883a 	mov	r16,r2
   2b664:	003e3b06 	br	2af54 <__alt_data_end+0xfffebb54>
   2b668:	10002f26 	beq	r2,zero,2b728 <__adddf3+0x850>
   2b66c:	4984b03a 	or	r2,r9,r6
   2b670:	10001126 	beq	r2,zero,2b6b8 <__adddf3+0x7e0>
   2b674:	4004d0fa 	srli	r2,r8,3
   2b678:	8822d0fa 	srli	r17,r17,3
   2b67c:	4010977a 	slli	r8,r8,29
   2b680:	10c0022c 	andhi	r3,r2,8
   2b684:	4462b03a 	or	r17,r8,r17
   2b688:	183feb26 	beq	r3,zero,2b638 <__alt_data_end+0xfffec238>
   2b68c:	4808d0fa 	srli	r4,r9,3
   2b690:	20c0022c 	andhi	r3,r4,8
   2b694:	183fe81e 	bne	r3,zero,2b638 <__alt_data_end+0xfffec238>
   2b698:	300cd0fa 	srli	r6,r6,3
   2b69c:	4806977a 	slli	r3,r9,29
   2b6a0:	2005883a 	mov	r2,r4
   2b6a4:	19a2b03a 	or	r17,r3,r6
   2b6a8:	003fe306 	br	2b638 <__alt_data_end+0xfffec238>
   2b6ac:	0011883a 	mov	r8,zero
   2b6b0:	0005883a 	mov	r2,zero
   2b6b4:	003e3f06 	br	2afb4 <__alt_data_end+0xfffebbb4>
   2b6b8:	0401ffc4 	movi	r16,2047
   2b6bc:	003e2506 	br	2af54 <__alt_data_end+0xfffebb54>
   2b6c0:	0013883a 	mov	r9,zero
   2b6c4:	003f8406 	br	2b4d8 <__alt_data_end+0xfffec0d8>
   2b6c8:	0005883a 	mov	r2,zero
   2b6cc:	0007883a 	mov	r3,zero
   2b6d0:	003e8906 	br	2b0f8 <__alt_data_end+0xfffebcf8>
   2b6d4:	197ff804 	addi	r5,r3,-32
   2b6d8:	01000804 	movi	r4,32
   2b6dc:	414ad83a 	srl	r5,r8,r5
   2b6e0:	19002426 	beq	r3,r4,2b774 <__adddf3+0x89c>
   2b6e4:	01001004 	movi	r4,64
   2b6e8:	20c7c83a 	sub	r3,r4,r3
   2b6ec:	40c6983a 	sll	r3,r8,r3
   2b6f0:	1c46b03a 	or	r3,r3,r17
   2b6f4:	1806c03a 	cmpne	r3,r3,zero
   2b6f8:	28e2b03a 	or	r17,r5,r3
   2b6fc:	0007883a 	mov	r3,zero
   2b700:	003f2306 	br	2b390 <__alt_data_end+0xfffebf90>
   2b704:	0007883a 	mov	r3,zero
   2b708:	5811883a 	mov	r8,r11
   2b70c:	00bfffc4 	movi	r2,-1
   2b710:	0401ffc4 	movi	r16,2047
   2b714:	003e7806 	br	2b0f8 <__alt_data_end+0xfffebcf8>
   2b718:	4462b03a 	or	r17,r8,r17
   2b71c:	8822c03a 	cmpne	r17,r17,zero
   2b720:	0009883a 	mov	r4,zero
   2b724:	003fa006 	br	2b5a8 <__alt_data_end+0xfffec1a8>
   2b728:	4811883a 	mov	r8,r9
   2b72c:	3023883a 	mov	r17,r6
   2b730:	0401ffc4 	movi	r16,2047
   2b734:	003e0706 	br	2af54 <__alt_data_end+0xfffebb54>
   2b738:	4811883a 	mov	r8,r9
   2b73c:	3023883a 	mov	r17,r6
   2b740:	003e0406 	br	2af54 <__alt_data_end+0xfffebb54>
   2b744:	21fff804 	addi	r7,r4,-32
   2b748:	01400804 	movi	r5,32
   2b74c:	41ced83a 	srl	r7,r8,r7
   2b750:	21400a26 	beq	r4,r5,2b77c <__adddf3+0x8a4>
   2b754:	01401004 	movi	r5,64
   2b758:	2909c83a 	sub	r4,r5,r4
   2b75c:	4108983a 	sll	r4,r8,r4
   2b760:	2448b03a 	or	r4,r4,r17
   2b764:	2008c03a 	cmpne	r4,r4,zero
   2b768:	3922b03a 	or	r17,r7,r4
   2b76c:	0009883a 	mov	r4,zero
   2b770:	003f8d06 	br	2b5a8 <__alt_data_end+0xfffec1a8>
   2b774:	0007883a 	mov	r3,zero
   2b778:	003fdd06 	br	2b6f0 <__alt_data_end+0xfffec2f0>
   2b77c:	0009883a 	mov	r4,zero
   2b780:	003ff706 	br	2b760 <__alt_data_end+0xfffec360>

0002b784 <__divdf3>:
   2b784:	defff004 	addi	sp,sp,-64
   2b788:	dc800815 	stw	r18,32(sp)
   2b78c:	2824d53a 	srli	r18,r5,20
   2b790:	dd800c15 	stw	r22,48(sp)
   2b794:	282cd7fa 	srli	r22,r5,31
   2b798:	dc000615 	stw	r16,24(sp)
   2b79c:	04000434 	movhi	r16,16
   2b7a0:	843fffc4 	addi	r16,r16,-1
   2b7a4:	dfc00f15 	stw	ra,60(sp)
   2b7a8:	df000e15 	stw	fp,56(sp)
   2b7ac:	ddc00d15 	stw	r23,52(sp)
   2b7b0:	dd400b15 	stw	r21,44(sp)
   2b7b4:	dd000a15 	stw	r20,40(sp)
   2b7b8:	dcc00915 	stw	r19,36(sp)
   2b7bc:	dc400715 	stw	r17,28(sp)
   2b7c0:	9481ffcc 	andi	r18,r18,2047
   2b7c4:	2c20703a 	and	r16,r5,r16
   2b7c8:	b2003fcc 	andi	r8,r22,255
   2b7cc:	90006126 	beq	r18,zero,2b954 <__divdf3+0x1d0>
   2b7d0:	0081ffc4 	movi	r2,2047
   2b7d4:	202b883a 	mov	r21,r4
   2b7d8:	90803726 	beq	r18,r2,2b8b8 <__divdf3+0x134>
   2b7dc:	80800434 	orhi	r2,r16,16
   2b7e0:	100490fa 	slli	r2,r2,3
   2b7e4:	2020d77a 	srli	r16,r4,29
   2b7e8:	202a90fa 	slli	r21,r4,3
   2b7ec:	94bf0044 	addi	r18,r18,-1023
   2b7f0:	80a0b03a 	or	r16,r16,r2
   2b7f4:	0013883a 	mov	r9,zero
   2b7f8:	000b883a 	mov	r5,zero
   2b7fc:	3806d53a 	srli	r3,r7,20
   2b800:	382ed7fa 	srli	r23,r7,31
   2b804:	04400434 	movhi	r17,16
   2b808:	8c7fffc4 	addi	r17,r17,-1
   2b80c:	18c1ffcc 	andi	r3,r3,2047
   2b810:	3029883a 	mov	r20,r6
   2b814:	3c62703a 	and	r17,r7,r17
   2b818:	bf003fcc 	andi	fp,r23,255
   2b81c:	18006e26 	beq	r3,zero,2b9d8 <__divdf3+0x254>
   2b820:	0081ffc4 	movi	r2,2047
   2b824:	18806626 	beq	r3,r2,2b9c0 <__divdf3+0x23c>
   2b828:	88800434 	orhi	r2,r17,16
   2b82c:	100490fa 	slli	r2,r2,3
   2b830:	3022d77a 	srli	r17,r6,29
   2b834:	302890fa 	slli	r20,r6,3
   2b838:	18ff0044 	addi	r3,r3,-1023
   2b83c:	88a2b03a 	or	r17,r17,r2
   2b840:	000f883a 	mov	r7,zero
   2b844:	b5e6f03a 	xor	r19,r22,r23
   2b848:	3a4cb03a 	or	r6,r7,r9
   2b84c:	008003c4 	movi	r2,15
   2b850:	9809883a 	mov	r4,r19
   2b854:	90c7c83a 	sub	r3,r18,r3
   2b858:	9cc03fcc 	andi	r19,r19,255
   2b85c:	11809636 	bltu	r2,r6,2bab8 <__divdf3+0x334>
   2b860:	300c90ba 	slli	r6,r6,2
   2b864:	008000f4 	movhi	r2,3
   2b868:	10ae1e04 	addi	r2,r2,-18312
   2b86c:	308d883a 	add	r6,r6,r2
   2b870:	30800017 	ldw	r2,0(r6)
   2b874:	1000683a 	jmp	r2
   2b878:	0002bab8 	rdprs	zero,zero,2794
   2b87c:	0002b8f0 	cmpltui	zero,zero,2787
   2b880:	0002baa8 	cmpgeui	zero,zero,2794
   2b884:	0002b8e4 	muli	zero,zero,2787
   2b888:	0002baa8 	cmpgeui	zero,zero,2794
   2b88c:	0002ba7c 	xorhi	zero,zero,2793
   2b890:	0002baa8 	cmpgeui	zero,zero,2794
   2b894:	0002b8e4 	muli	zero,zero,2787
   2b898:	0002b8f0 	cmpltui	zero,zero,2787
   2b89c:	0002b8f0 	cmpltui	zero,zero,2787
   2b8a0:	0002ba7c 	xorhi	zero,zero,2793
   2b8a4:	0002b8e4 	muli	zero,zero,2787
   2b8a8:	0002b8d4 	movui	zero,2787
   2b8ac:	0002b8d4 	movui	zero,2787
   2b8b0:	0002b8d4 	movui	zero,2787
   2b8b4:	0002be40 	call	2be4 <__alt_mem_onchip_memory2_0-0x1d41c>
   2b8b8:	2404b03a 	or	r2,r4,r16
   2b8bc:	10006c1e 	bne	r2,zero,2ba70 <__divdf3+0x2ec>
   2b8c0:	02400204 	movi	r9,8
   2b8c4:	0021883a 	mov	r16,zero
   2b8c8:	002b883a 	mov	r21,zero
   2b8cc:	01400084 	movi	r5,2
   2b8d0:	003fca06 	br	2b7fc <__alt_data_end+0xfffec3fc>
   2b8d4:	8023883a 	mov	r17,r16
   2b8d8:	a829883a 	mov	r20,r21
   2b8dc:	4039883a 	mov	fp,r8
   2b8e0:	280f883a 	mov	r7,r5
   2b8e4:	00800084 	movi	r2,2
   2b8e8:	3881601e 	bne	r7,r2,2be6c <__divdf3+0x6e8>
   2b8ec:	e027883a 	mov	r19,fp
   2b8f0:	9900004c 	andi	r4,r19,1
   2b8f4:	0081ffc4 	movi	r2,2047
   2b8f8:	0021883a 	mov	r16,zero
   2b8fc:	002b883a 	mov	r21,zero
   2b900:	1004953a 	slli	r2,r2,20
   2b904:	20c03fcc 	andi	r3,r4,255
   2b908:	01400434 	movhi	r5,16
   2b90c:	297fffc4 	addi	r5,r5,-1
   2b910:	180697fa 	slli	r3,r3,31
   2b914:	8160703a 	and	r16,r16,r5
   2b918:	80a0b03a 	or	r16,r16,r2
   2b91c:	80c6b03a 	or	r3,r16,r3
   2b920:	a805883a 	mov	r2,r21
   2b924:	dfc00f17 	ldw	ra,60(sp)
   2b928:	df000e17 	ldw	fp,56(sp)
   2b92c:	ddc00d17 	ldw	r23,52(sp)
   2b930:	dd800c17 	ldw	r22,48(sp)
   2b934:	dd400b17 	ldw	r21,44(sp)
   2b938:	dd000a17 	ldw	r20,40(sp)
   2b93c:	dcc00917 	ldw	r19,36(sp)
   2b940:	dc800817 	ldw	r18,32(sp)
   2b944:	dc400717 	ldw	r17,28(sp)
   2b948:	dc000617 	ldw	r16,24(sp)
   2b94c:	dec01004 	addi	sp,sp,64
   2b950:	f800283a 	ret
   2b954:	2404b03a 	or	r2,r4,r16
   2b958:	2023883a 	mov	r17,r4
   2b95c:	10003f26 	beq	r2,zero,2ba5c <__divdf3+0x2d8>
   2b960:	80015e26 	beq	r16,zero,2bedc <__divdf3+0x758>
   2b964:	8009883a 	mov	r4,r16
   2b968:	d9800215 	stw	r6,8(sp)
   2b96c:	d9c00515 	stw	r7,20(sp)
   2b970:	da000415 	stw	r8,16(sp)
   2b974:	002d7180 	call	2d718 <__clzsi2>
   2b978:	d9800217 	ldw	r6,8(sp)
   2b97c:	d9c00517 	ldw	r7,20(sp)
   2b980:	da000417 	ldw	r8,16(sp)
   2b984:	113ffd44 	addi	r4,r2,-11
   2b988:	00c00704 	movi	r3,28
   2b98c:	19014f16 	blt	r3,r4,2becc <__divdf3+0x748>
   2b990:	00c00744 	movi	r3,29
   2b994:	157ffe04 	addi	r21,r2,-8
   2b998:	1907c83a 	sub	r3,r3,r4
   2b99c:	8560983a 	sll	r16,r16,r21
   2b9a0:	88c6d83a 	srl	r3,r17,r3
   2b9a4:	8d6a983a 	sll	r21,r17,r21
   2b9a8:	1c20b03a 	or	r16,r3,r16
   2b9ac:	1080fcc4 	addi	r2,r2,1011
   2b9b0:	00a5c83a 	sub	r18,zero,r2
   2b9b4:	0013883a 	mov	r9,zero
   2b9b8:	000b883a 	mov	r5,zero
   2b9bc:	003f8f06 	br	2b7fc <__alt_data_end+0xfffec3fc>
   2b9c0:	3444b03a 	or	r2,r6,r17
   2b9c4:	1000231e 	bne	r2,zero,2ba54 <__divdf3+0x2d0>
   2b9c8:	0023883a 	mov	r17,zero
   2b9cc:	0029883a 	mov	r20,zero
   2b9d0:	01c00084 	movi	r7,2
   2b9d4:	003f9b06 	br	2b844 <__alt_data_end+0xfffec444>
   2b9d8:	3444b03a 	or	r2,r6,r17
   2b9dc:	10001926 	beq	r2,zero,2ba44 <__divdf3+0x2c0>
   2b9e0:	88014b26 	beq	r17,zero,2bf10 <__divdf3+0x78c>
   2b9e4:	8809883a 	mov	r4,r17
   2b9e8:	d9400115 	stw	r5,4(sp)
   2b9ec:	d9800215 	stw	r6,8(sp)
   2b9f0:	da000415 	stw	r8,16(sp)
   2b9f4:	da400315 	stw	r9,12(sp)
   2b9f8:	002d7180 	call	2d718 <__clzsi2>
   2b9fc:	d9400117 	ldw	r5,4(sp)
   2ba00:	d9800217 	ldw	r6,8(sp)
   2ba04:	da000417 	ldw	r8,16(sp)
   2ba08:	da400317 	ldw	r9,12(sp)
   2ba0c:	113ffd44 	addi	r4,r2,-11
   2ba10:	00c00704 	movi	r3,28
   2ba14:	19013a16 	blt	r3,r4,2bf00 <__divdf3+0x77c>
   2ba18:	00c00744 	movi	r3,29
   2ba1c:	153ffe04 	addi	r20,r2,-8
   2ba20:	1907c83a 	sub	r3,r3,r4
   2ba24:	8d22983a 	sll	r17,r17,r20
   2ba28:	30c6d83a 	srl	r3,r6,r3
   2ba2c:	3528983a 	sll	r20,r6,r20
   2ba30:	1c62b03a 	or	r17,r3,r17
   2ba34:	1080fcc4 	addi	r2,r2,1011
   2ba38:	0087c83a 	sub	r3,zero,r2
   2ba3c:	000f883a 	mov	r7,zero
   2ba40:	003f8006 	br	2b844 <__alt_data_end+0xfffec444>
   2ba44:	0023883a 	mov	r17,zero
   2ba48:	0029883a 	mov	r20,zero
   2ba4c:	01c00044 	movi	r7,1
   2ba50:	003f7c06 	br	2b844 <__alt_data_end+0xfffec444>
   2ba54:	01c000c4 	movi	r7,3
   2ba58:	003f7a06 	br	2b844 <__alt_data_end+0xfffec444>
   2ba5c:	02400104 	movi	r9,4
   2ba60:	0021883a 	mov	r16,zero
   2ba64:	002b883a 	mov	r21,zero
   2ba68:	01400044 	movi	r5,1
   2ba6c:	003f6306 	br	2b7fc <__alt_data_end+0xfffec3fc>
   2ba70:	02400304 	movi	r9,12
   2ba74:	014000c4 	movi	r5,3
   2ba78:	003f6006 	br	2b7fc <__alt_data_end+0xfffec3fc>
   2ba7c:	04000434 	movhi	r16,16
   2ba80:	0009883a 	mov	r4,zero
   2ba84:	843fffc4 	addi	r16,r16,-1
   2ba88:	057fffc4 	movi	r21,-1
   2ba8c:	0081ffc4 	movi	r2,2047
   2ba90:	003f9b06 	br	2b900 <__alt_data_end+0xfffec500>
   2ba94:	00c00044 	movi	r3,1
   2ba98:	1887c83a 	sub	r3,r3,r2
   2ba9c:	01000e04 	movi	r4,56
   2baa0:	20c1530e 	bge	r4,r3,2bff0 <__divdf3+0x86c>
   2baa4:	9900004c 	andi	r4,r19,1
   2baa8:	0005883a 	mov	r2,zero
   2baac:	0021883a 	mov	r16,zero
   2bab0:	002b883a 	mov	r21,zero
   2bab4:	003f9206 	br	2b900 <__alt_data_end+0xfffec500>
   2bab8:	8c012e36 	bltu	r17,r16,2bf74 <__divdf3+0x7f0>
   2babc:	84412c26 	beq	r16,r17,2bf70 <__divdf3+0x7ec>
   2bac0:	a82f883a 	mov	r23,r21
   2bac4:	18ffffc4 	addi	r3,r3,-1
   2bac8:	002b883a 	mov	r21,zero
   2bacc:	a004d63a 	srli	r2,r20,24
   2bad0:	8822923a 	slli	r17,r17,8
   2bad4:	a028923a 	slli	r20,r20,8
   2bad8:	8009883a 	mov	r4,r16
   2badc:	88acb03a 	or	r22,r17,r2
   2bae0:	dd000015 	stw	r20,0(sp)
   2bae4:	b028d43a 	srli	r20,r22,16
   2bae8:	d8c00215 	stw	r3,8(sp)
   2baec:	b4bfffcc 	andi	r18,r22,65535
   2baf0:	a00b883a 	mov	r5,r20
   2baf4:	002adf40 	call	2adf4 <__udivsi3>
   2baf8:	100b883a 	mov	r5,r2
   2bafc:	9009883a 	mov	r4,r18
   2bb00:	1023883a 	mov	r17,r2
   2bb04:	002aeb00 	call	2aeb0 <__mulsi3>
   2bb08:	8009883a 	mov	r4,r16
   2bb0c:	a00b883a 	mov	r5,r20
   2bb10:	1039883a 	mov	fp,r2
   2bb14:	002ae580 	call	2ae58 <__umodsi3>
   2bb18:	1004943a 	slli	r2,r2,16
   2bb1c:	b808d43a 	srli	r4,r23,16
   2bb20:	d8c00217 	ldw	r3,8(sp)
   2bb24:	2084b03a 	or	r2,r4,r2
   2bb28:	1700062e 	bgeu	r2,fp,2bb44 <__divdf3+0x3c0>
   2bb2c:	1585883a 	add	r2,r2,r22
   2bb30:	893fffc4 	addi	r4,r17,-1
   2bb34:	15811d36 	bltu	r2,r22,2bfac <__divdf3+0x828>
   2bb38:	17011c2e 	bgeu	r2,fp,2bfac <__divdf3+0x828>
   2bb3c:	8c7fff84 	addi	r17,r17,-2
   2bb40:	1585883a 	add	r2,r2,r22
   2bb44:	1739c83a 	sub	fp,r2,fp
   2bb48:	a00b883a 	mov	r5,r20
   2bb4c:	e009883a 	mov	r4,fp
   2bb50:	d8c00215 	stw	r3,8(sp)
   2bb54:	002adf40 	call	2adf4 <__udivsi3>
   2bb58:	100b883a 	mov	r5,r2
   2bb5c:	9009883a 	mov	r4,r18
   2bb60:	1021883a 	mov	r16,r2
   2bb64:	002aeb00 	call	2aeb0 <__mulsi3>
   2bb68:	a00b883a 	mov	r5,r20
   2bb6c:	e009883a 	mov	r4,fp
   2bb70:	d8800415 	stw	r2,16(sp)
   2bb74:	002ae580 	call	2ae58 <__umodsi3>
   2bb78:	1004943a 	slli	r2,r2,16
   2bb7c:	da000417 	ldw	r8,16(sp)
   2bb80:	bdffffcc 	andi	r23,r23,65535
   2bb84:	b884b03a 	or	r2,r23,r2
   2bb88:	d8c00217 	ldw	r3,8(sp)
   2bb8c:	1200062e 	bgeu	r2,r8,2bba8 <__divdf3+0x424>
   2bb90:	1585883a 	add	r2,r2,r22
   2bb94:	813fffc4 	addi	r4,r16,-1
   2bb98:	15810236 	bltu	r2,r22,2bfa4 <__divdf3+0x820>
   2bb9c:	1201012e 	bgeu	r2,r8,2bfa4 <__divdf3+0x820>
   2bba0:	843fff84 	addi	r16,r16,-2
   2bba4:	1585883a 	add	r2,r2,r22
   2bba8:	8822943a 	slli	r17,r17,16
   2bbac:	d9800017 	ldw	r6,0(sp)
   2bbb0:	1211c83a 	sub	r8,r2,r8
   2bbb4:	8c22b03a 	or	r17,r17,r16
   2bbb8:	373fffcc 	andi	fp,r6,65535
   2bbbc:	8abfffcc 	andi	r10,r17,65535
   2bbc0:	8820d43a 	srli	r16,r17,16
   2bbc4:	5009883a 	mov	r4,r10
   2bbc8:	e00b883a 	mov	r5,fp
   2bbcc:	302ed43a 	srli	r23,r6,16
   2bbd0:	d8c00215 	stw	r3,8(sp)
   2bbd4:	da000415 	stw	r8,16(sp)
   2bbd8:	da800115 	stw	r10,4(sp)
   2bbdc:	002aeb00 	call	2aeb0 <__mulsi3>
   2bbe0:	800b883a 	mov	r5,r16
   2bbe4:	e009883a 	mov	r4,fp
   2bbe8:	d8800515 	stw	r2,20(sp)
   2bbec:	002aeb00 	call	2aeb0 <__mulsi3>
   2bbf0:	8009883a 	mov	r4,r16
   2bbf4:	b80b883a 	mov	r5,r23
   2bbf8:	d8800315 	stw	r2,12(sp)
   2bbfc:	002aeb00 	call	2aeb0 <__mulsi3>
   2bc00:	da800117 	ldw	r10,4(sp)
   2bc04:	b80b883a 	mov	r5,r23
   2bc08:	1021883a 	mov	r16,r2
   2bc0c:	5009883a 	mov	r4,r10
   2bc10:	002aeb00 	call	2aeb0 <__mulsi3>
   2bc14:	d9c00517 	ldw	r7,20(sp)
   2bc18:	da400317 	ldw	r9,12(sp)
   2bc1c:	d8c00217 	ldw	r3,8(sp)
   2bc20:	3808d43a 	srli	r4,r7,16
   2bc24:	1245883a 	add	r2,r2,r9
   2bc28:	da000417 	ldw	r8,16(sp)
   2bc2c:	2085883a 	add	r2,r4,r2
   2bc30:	1240022e 	bgeu	r2,r9,2bc3c <__divdf3+0x4b8>
   2bc34:	01000074 	movhi	r4,1
   2bc38:	8121883a 	add	r16,r16,r4
   2bc3c:	1008d43a 	srli	r4,r2,16
   2bc40:	1004943a 	slli	r2,r2,16
   2bc44:	39ffffcc 	andi	r7,r7,65535
   2bc48:	2409883a 	add	r4,r4,r16
   2bc4c:	11c5883a 	add	r2,r2,r7
   2bc50:	4100bb36 	bltu	r8,r4,2bf40 <__divdf3+0x7bc>
   2bc54:	4100d726 	beq	r8,r4,2bfb4 <__divdf3+0x830>
   2bc58:	4109c83a 	sub	r4,r8,r4
   2bc5c:	a8a1c83a 	sub	r16,r21,r2
   2bc60:	ac2b803a 	cmpltu	r21,r21,r16
   2bc64:	256bc83a 	sub	r21,r4,r21
   2bc68:	b540d926 	beq	r22,r21,2bfd0 <__divdf3+0x84c>
   2bc6c:	a00b883a 	mov	r5,r20
   2bc70:	a809883a 	mov	r4,r21
   2bc74:	d8c00215 	stw	r3,8(sp)
   2bc78:	002adf40 	call	2adf4 <__udivsi3>
   2bc7c:	100b883a 	mov	r5,r2
   2bc80:	9009883a 	mov	r4,r18
   2bc84:	d8800515 	stw	r2,20(sp)
   2bc88:	002aeb00 	call	2aeb0 <__mulsi3>
   2bc8c:	a809883a 	mov	r4,r21
   2bc90:	a00b883a 	mov	r5,r20
   2bc94:	d8800415 	stw	r2,16(sp)
   2bc98:	002ae580 	call	2ae58 <__umodsi3>
   2bc9c:	1004943a 	slli	r2,r2,16
   2bca0:	8008d43a 	srli	r4,r16,16
   2bca4:	da000417 	ldw	r8,16(sp)
   2bca8:	d8c00217 	ldw	r3,8(sp)
   2bcac:	2084b03a 	or	r2,r4,r2
   2bcb0:	d9c00517 	ldw	r7,20(sp)
   2bcb4:	1200062e 	bgeu	r2,r8,2bcd0 <__divdf3+0x54c>
   2bcb8:	1585883a 	add	r2,r2,r22
   2bcbc:	393fffc4 	addi	r4,r7,-1
   2bcc0:	1580c536 	bltu	r2,r22,2bfd8 <__divdf3+0x854>
   2bcc4:	1200c42e 	bgeu	r2,r8,2bfd8 <__divdf3+0x854>
   2bcc8:	39ffff84 	addi	r7,r7,-2
   2bccc:	1585883a 	add	r2,r2,r22
   2bcd0:	122bc83a 	sub	r21,r2,r8
   2bcd4:	a00b883a 	mov	r5,r20
   2bcd8:	a809883a 	mov	r4,r21
   2bcdc:	d8c00215 	stw	r3,8(sp)
   2bce0:	d9c00515 	stw	r7,20(sp)
   2bce4:	002adf40 	call	2adf4 <__udivsi3>
   2bce8:	9009883a 	mov	r4,r18
   2bcec:	100b883a 	mov	r5,r2
   2bcf0:	d8800415 	stw	r2,16(sp)
   2bcf4:	002aeb00 	call	2aeb0 <__mulsi3>
   2bcf8:	a809883a 	mov	r4,r21
   2bcfc:	a00b883a 	mov	r5,r20
   2bd00:	1025883a 	mov	r18,r2
   2bd04:	002ae580 	call	2ae58 <__umodsi3>
   2bd08:	1004943a 	slli	r2,r2,16
   2bd0c:	813fffcc 	andi	r4,r16,65535
   2bd10:	d8c00217 	ldw	r3,8(sp)
   2bd14:	20a0b03a 	or	r16,r4,r2
   2bd18:	d9c00517 	ldw	r7,20(sp)
   2bd1c:	da000417 	ldw	r8,16(sp)
   2bd20:	8480062e 	bgeu	r16,r18,2bd3c <__divdf3+0x5b8>
   2bd24:	85a1883a 	add	r16,r16,r22
   2bd28:	40bfffc4 	addi	r2,r8,-1
   2bd2c:	8580ac36 	bltu	r16,r22,2bfe0 <__divdf3+0x85c>
   2bd30:	8480ab2e 	bgeu	r16,r18,2bfe0 <__divdf3+0x85c>
   2bd34:	423fff84 	addi	r8,r8,-2
   2bd38:	85a1883a 	add	r16,r16,r22
   2bd3c:	3804943a 	slli	r2,r7,16
   2bd40:	84a1c83a 	sub	r16,r16,r18
   2bd44:	e009883a 	mov	r4,fp
   2bd48:	1228b03a 	or	r20,r2,r8
   2bd4c:	a1ffffcc 	andi	r7,r20,65535
   2bd50:	a024d43a 	srli	r18,r20,16
   2bd54:	380b883a 	mov	r5,r7
   2bd58:	d8c00215 	stw	r3,8(sp)
   2bd5c:	d9c00515 	stw	r7,20(sp)
   2bd60:	002aeb00 	call	2aeb0 <__mulsi3>
   2bd64:	900b883a 	mov	r5,r18
   2bd68:	e009883a 	mov	r4,fp
   2bd6c:	102b883a 	mov	r21,r2
   2bd70:	002aeb00 	call	2aeb0 <__mulsi3>
   2bd74:	900b883a 	mov	r5,r18
   2bd78:	b809883a 	mov	r4,r23
   2bd7c:	1039883a 	mov	fp,r2
   2bd80:	002aeb00 	call	2aeb0 <__mulsi3>
   2bd84:	d9c00517 	ldw	r7,20(sp)
   2bd88:	b80b883a 	mov	r5,r23
   2bd8c:	1025883a 	mov	r18,r2
   2bd90:	3809883a 	mov	r4,r7
   2bd94:	002aeb00 	call	2aeb0 <__mulsi3>
   2bd98:	a808d43a 	srli	r4,r21,16
   2bd9c:	1705883a 	add	r2,r2,fp
   2bda0:	d8c00217 	ldw	r3,8(sp)
   2bda4:	2085883a 	add	r2,r4,r2
   2bda8:	1700022e 	bgeu	r2,fp,2bdb4 <__divdf3+0x630>
   2bdac:	01000074 	movhi	r4,1
   2bdb0:	9125883a 	add	r18,r18,r4
   2bdb4:	1008d43a 	srli	r4,r2,16
   2bdb8:	1004943a 	slli	r2,r2,16
   2bdbc:	ad7fffcc 	andi	r21,r21,65535
   2bdc0:	2489883a 	add	r4,r4,r18
   2bdc4:	1545883a 	add	r2,r2,r21
   2bdc8:	81003836 	bltu	r16,r4,2beac <__divdf3+0x728>
   2bdcc:	81003626 	beq	r16,r4,2bea8 <__divdf3+0x724>
   2bdd0:	a5000054 	ori	r20,r20,1
   2bdd4:	1880ffc4 	addi	r2,r3,1023
   2bdd8:	00bf2e0e 	bge	zero,r2,2ba94 <__alt_data_end+0xfffec694>
   2bddc:	a10001cc 	andi	r4,r20,7
   2bde0:	20000726 	beq	r4,zero,2be00 <__divdf3+0x67c>
   2bde4:	a10003cc 	andi	r4,r20,15
   2bde8:	01400104 	movi	r5,4
   2bdec:	21400426 	beq	r4,r5,2be00 <__divdf3+0x67c>
   2bdf0:	a149883a 	add	r4,r20,r5
   2bdf4:	2529803a 	cmpltu	r20,r4,r20
   2bdf8:	8d23883a 	add	r17,r17,r20
   2bdfc:	2029883a 	mov	r20,r4
   2be00:	8900402c 	andhi	r4,r17,256
   2be04:	20000426 	beq	r4,zero,2be18 <__divdf3+0x694>
   2be08:	18810004 	addi	r2,r3,1024
   2be0c:	00ffc034 	movhi	r3,65280
   2be10:	18ffffc4 	addi	r3,r3,-1
   2be14:	88e2703a 	and	r17,r17,r3
   2be18:	00c1ff84 	movi	r3,2046
   2be1c:	18beb416 	blt	r3,r2,2b8f0 <__alt_data_end+0xfffec4f0>
   2be20:	a028d0fa 	srli	r20,r20,3
   2be24:	882a977a 	slli	r21,r17,29
   2be28:	8820927a 	slli	r16,r17,9
   2be2c:	1081ffcc 	andi	r2,r2,2047
   2be30:	ad2ab03a 	or	r21,r21,r20
   2be34:	8020d33a 	srli	r16,r16,12
   2be38:	9900004c 	andi	r4,r19,1
   2be3c:	003eb006 	br	2b900 <__alt_data_end+0xfffec500>
   2be40:	8080022c 	andhi	r2,r16,8
   2be44:	10001226 	beq	r2,zero,2be90 <__divdf3+0x70c>
   2be48:	8880022c 	andhi	r2,r17,8
   2be4c:	1000101e 	bne	r2,zero,2be90 <__divdf3+0x70c>
   2be50:	00800434 	movhi	r2,16
   2be54:	8c000234 	orhi	r16,r17,8
   2be58:	10bfffc4 	addi	r2,r2,-1
   2be5c:	b809883a 	mov	r4,r23
   2be60:	80a0703a 	and	r16,r16,r2
   2be64:	a02b883a 	mov	r21,r20
   2be68:	003f0806 	br	2ba8c <__alt_data_end+0xfffec68c>
   2be6c:	008000c4 	movi	r2,3
   2be70:	3880b126 	beq	r7,r2,2c138 <__divdf3+0x9b4>
   2be74:	00800044 	movi	r2,1
   2be78:	38805b1e 	bne	r7,r2,2bfe8 <__divdf3+0x864>
   2be7c:	e009883a 	mov	r4,fp
   2be80:	0005883a 	mov	r2,zero
   2be84:	0021883a 	mov	r16,zero
   2be88:	002b883a 	mov	r21,zero
   2be8c:	003e9c06 	br	2b900 <__alt_data_end+0xfffec500>
   2be90:	00800434 	movhi	r2,16
   2be94:	84000234 	orhi	r16,r16,8
   2be98:	10bfffc4 	addi	r2,r2,-1
   2be9c:	b009883a 	mov	r4,r22
   2bea0:	80a0703a 	and	r16,r16,r2
   2bea4:	003ef906 	br	2ba8c <__alt_data_end+0xfffec68c>
   2bea8:	103fca26 	beq	r2,zero,2bdd4 <__alt_data_end+0xfffec9d4>
   2beac:	b421883a 	add	r16,r22,r16
   2beb0:	a17fffc4 	addi	r5,r20,-1
   2beb4:	8580422e 	bgeu	r16,r22,2bfc0 <__divdf3+0x83c>
   2beb8:	2829883a 	mov	r20,r5
   2bebc:	813fc41e 	bne	r16,r4,2bdd0 <__alt_data_end+0xfffec9d0>
   2bec0:	d9800017 	ldw	r6,0(sp)
   2bec4:	30bfc21e 	bne	r6,r2,2bdd0 <__alt_data_end+0xfffec9d0>
   2bec8:	003fc206 	br	2bdd4 <__alt_data_end+0xfffec9d4>
   2becc:	143ff604 	addi	r16,r2,-40
   2bed0:	8c20983a 	sll	r16,r17,r16
   2bed4:	002b883a 	mov	r21,zero
   2bed8:	003eb406 	br	2b9ac <__alt_data_end+0xfffec5ac>
   2bedc:	d9800215 	stw	r6,8(sp)
   2bee0:	d9c00515 	stw	r7,20(sp)
   2bee4:	da000415 	stw	r8,16(sp)
   2bee8:	002d7180 	call	2d718 <__clzsi2>
   2beec:	10800804 	addi	r2,r2,32
   2bef0:	da000417 	ldw	r8,16(sp)
   2bef4:	d9c00517 	ldw	r7,20(sp)
   2bef8:	d9800217 	ldw	r6,8(sp)
   2befc:	003ea106 	br	2b984 <__alt_data_end+0xfffec584>
   2bf00:	147ff604 	addi	r17,r2,-40
   2bf04:	3462983a 	sll	r17,r6,r17
   2bf08:	0029883a 	mov	r20,zero
   2bf0c:	003ec906 	br	2ba34 <__alt_data_end+0xfffec634>
   2bf10:	3009883a 	mov	r4,r6
   2bf14:	d9400115 	stw	r5,4(sp)
   2bf18:	d9800215 	stw	r6,8(sp)
   2bf1c:	da000415 	stw	r8,16(sp)
   2bf20:	da400315 	stw	r9,12(sp)
   2bf24:	002d7180 	call	2d718 <__clzsi2>
   2bf28:	10800804 	addi	r2,r2,32
   2bf2c:	da400317 	ldw	r9,12(sp)
   2bf30:	da000417 	ldw	r8,16(sp)
   2bf34:	d9800217 	ldw	r6,8(sp)
   2bf38:	d9400117 	ldw	r5,4(sp)
   2bf3c:	003eb306 	br	2ba0c <__alt_data_end+0xfffec60c>
   2bf40:	d9800017 	ldw	r6,0(sp)
   2bf44:	a9ab883a 	add	r21,r21,r6
   2bf48:	a98b803a 	cmpltu	r5,r21,r6
   2bf4c:	2d8b883a 	add	r5,r5,r22
   2bf50:	2a11883a 	add	r8,r5,r8
   2bf54:	897fffc4 	addi	r5,r17,-1
   2bf58:	b2000c2e 	bgeu	r22,r8,2bf8c <__divdf3+0x808>
   2bf5c:	41003f36 	bltu	r8,r4,2c05c <__divdf3+0x8d8>
   2bf60:	22006c26 	beq	r4,r8,2c114 <__divdf3+0x990>
   2bf64:	4109c83a 	sub	r4,r8,r4
   2bf68:	2823883a 	mov	r17,r5
   2bf6c:	003f3b06 	br	2bc5c <__alt_data_end+0xfffec85c>
   2bf70:	ad3ed336 	bltu	r21,r20,2bac0 <__alt_data_end+0xfffec6c0>
   2bf74:	a804d07a 	srli	r2,r21,1
   2bf78:	802e97fa 	slli	r23,r16,31
   2bf7c:	a82a97fa 	slli	r21,r21,31
   2bf80:	8020d07a 	srli	r16,r16,1
   2bf84:	b8aeb03a 	or	r23,r23,r2
   2bf88:	003ed006 	br	2bacc <__alt_data_end+0xfffec6cc>
   2bf8c:	b23ff51e 	bne	r22,r8,2bf64 <__alt_data_end+0xfffecb64>
   2bf90:	d9800017 	ldw	r6,0(sp)
   2bf94:	a9bff12e 	bgeu	r21,r6,2bf5c <__alt_data_end+0xfffecb5c>
   2bf98:	b109c83a 	sub	r4,r22,r4
   2bf9c:	2823883a 	mov	r17,r5
   2bfa0:	003f2e06 	br	2bc5c <__alt_data_end+0xfffec85c>
   2bfa4:	2021883a 	mov	r16,r4
   2bfa8:	003eff06 	br	2bba8 <__alt_data_end+0xfffec7a8>
   2bfac:	2023883a 	mov	r17,r4
   2bfb0:	003ee406 	br	2bb44 <__alt_data_end+0xfffec744>
   2bfb4:	a8bfe236 	bltu	r21,r2,2bf40 <__alt_data_end+0xfffecb40>
   2bfb8:	0009883a 	mov	r4,zero
   2bfbc:	003f2706 	br	2bc5c <__alt_data_end+0xfffec85c>
   2bfc0:	81002d36 	bltu	r16,r4,2c078 <__divdf3+0x8f4>
   2bfc4:	24005626 	beq	r4,r16,2c120 <__divdf3+0x99c>
   2bfc8:	2829883a 	mov	r20,r5
   2bfcc:	003f8006 	br	2bdd0 <__alt_data_end+0xfffec9d0>
   2bfd0:	053fffc4 	movi	r20,-1
   2bfd4:	003f7f06 	br	2bdd4 <__alt_data_end+0xfffec9d4>
   2bfd8:	200f883a 	mov	r7,r4
   2bfdc:	003f3c06 	br	2bcd0 <__alt_data_end+0xfffec8d0>
   2bfe0:	1011883a 	mov	r8,r2
   2bfe4:	003f5506 	br	2bd3c <__alt_data_end+0xfffec93c>
   2bfe8:	e027883a 	mov	r19,fp
   2bfec:	003f7906 	br	2bdd4 <__alt_data_end+0xfffec9d4>
   2bff0:	010007c4 	movi	r4,31
   2bff4:	20c02816 	blt	r4,r3,2c098 <__divdf3+0x914>
   2bff8:	00800804 	movi	r2,32
   2bffc:	10c5c83a 	sub	r2,r2,r3
   2c000:	888a983a 	sll	r5,r17,r2
   2c004:	a0c8d83a 	srl	r4,r20,r3
   2c008:	a084983a 	sll	r2,r20,r2
   2c00c:	88e2d83a 	srl	r17,r17,r3
   2c010:	2906b03a 	or	r3,r5,r4
   2c014:	1004c03a 	cmpne	r2,r2,zero
   2c018:	1886b03a 	or	r3,r3,r2
   2c01c:	188001cc 	andi	r2,r3,7
   2c020:	10000726 	beq	r2,zero,2c040 <__divdf3+0x8bc>
   2c024:	188003cc 	andi	r2,r3,15
   2c028:	01000104 	movi	r4,4
   2c02c:	11000426 	beq	r2,r4,2c040 <__divdf3+0x8bc>
   2c030:	1805883a 	mov	r2,r3
   2c034:	10c00104 	addi	r3,r2,4
   2c038:	1885803a 	cmpltu	r2,r3,r2
   2c03c:	88a3883a 	add	r17,r17,r2
   2c040:	8880202c 	andhi	r2,r17,128
   2c044:	10002926 	beq	r2,zero,2c0ec <__divdf3+0x968>
   2c048:	9900004c 	andi	r4,r19,1
   2c04c:	00800044 	movi	r2,1
   2c050:	0021883a 	mov	r16,zero
   2c054:	002b883a 	mov	r21,zero
   2c058:	003e2906 	br	2b900 <__alt_data_end+0xfffec500>
   2c05c:	d9800017 	ldw	r6,0(sp)
   2c060:	8c7fff84 	addi	r17,r17,-2
   2c064:	a9ab883a 	add	r21,r21,r6
   2c068:	a98b803a 	cmpltu	r5,r21,r6
   2c06c:	2d8b883a 	add	r5,r5,r22
   2c070:	2a11883a 	add	r8,r5,r8
   2c074:	003ef806 	br	2bc58 <__alt_data_end+0xfffec858>
   2c078:	d9800017 	ldw	r6,0(sp)
   2c07c:	318f883a 	add	r7,r6,r6
   2c080:	398b803a 	cmpltu	r5,r7,r6
   2c084:	2d8d883a 	add	r6,r5,r22
   2c088:	81a1883a 	add	r16,r16,r6
   2c08c:	a17fff84 	addi	r5,r20,-2
   2c090:	d9c00015 	stw	r7,0(sp)
   2c094:	003f8806 	br	2beb8 <__alt_data_end+0xfffecab8>
   2c098:	013ff844 	movi	r4,-31
   2c09c:	2085c83a 	sub	r2,r4,r2
   2c0a0:	8888d83a 	srl	r4,r17,r2
   2c0a4:	00800804 	movi	r2,32
   2c0a8:	18802126 	beq	r3,r2,2c130 <__divdf3+0x9ac>
   2c0ac:	04001004 	movi	r16,64
   2c0b0:	80c7c83a 	sub	r3,r16,r3
   2c0b4:	88e0983a 	sll	r16,r17,r3
   2c0b8:	8504b03a 	or	r2,r16,r20
   2c0bc:	1004c03a 	cmpne	r2,r2,zero
   2c0c0:	2084b03a 	or	r2,r4,r2
   2c0c4:	144001cc 	andi	r17,r2,7
   2c0c8:	88000d1e 	bne	r17,zero,2c100 <__divdf3+0x97c>
   2c0cc:	0021883a 	mov	r16,zero
   2c0d0:	102ad0fa 	srli	r21,r2,3
   2c0d4:	9900004c 	andi	r4,r19,1
   2c0d8:	0005883a 	mov	r2,zero
   2c0dc:	ac6ab03a 	or	r21,r21,r17
   2c0e0:	003e0706 	br	2b900 <__alt_data_end+0xfffec500>
   2c0e4:	1007883a 	mov	r3,r2
   2c0e8:	0023883a 	mov	r17,zero
   2c0ec:	8820927a 	slli	r16,r17,9
   2c0f0:	1805883a 	mov	r2,r3
   2c0f4:	8822977a 	slli	r17,r17,29
   2c0f8:	8020d33a 	srli	r16,r16,12
   2c0fc:	003ff406 	br	2c0d0 <__alt_data_end+0xfffeccd0>
   2c100:	10c003cc 	andi	r3,r2,15
   2c104:	01000104 	movi	r4,4
   2c108:	193ff626 	beq	r3,r4,2c0e4 <__alt_data_end+0xfffecce4>
   2c10c:	0023883a 	mov	r17,zero
   2c110:	003fc806 	br	2c034 <__alt_data_end+0xfffecc34>
   2c114:	a8bfd136 	bltu	r21,r2,2c05c <__alt_data_end+0xfffecc5c>
   2c118:	2823883a 	mov	r17,r5
   2c11c:	003fa606 	br	2bfb8 <__alt_data_end+0xfffecbb8>
   2c120:	d9800017 	ldw	r6,0(sp)
   2c124:	30bfd436 	bltu	r6,r2,2c078 <__alt_data_end+0xfffecc78>
   2c128:	2829883a 	mov	r20,r5
   2c12c:	003f6406 	br	2bec0 <__alt_data_end+0xfffecac0>
   2c130:	0021883a 	mov	r16,zero
   2c134:	003fe006 	br	2c0b8 <__alt_data_end+0xfffeccb8>
   2c138:	00800434 	movhi	r2,16
   2c13c:	8c000234 	orhi	r16,r17,8
   2c140:	10bfffc4 	addi	r2,r2,-1
   2c144:	e009883a 	mov	r4,fp
   2c148:	80a0703a 	and	r16,r16,r2
   2c14c:	a02b883a 	mov	r21,r20
   2c150:	003e4e06 	br	2ba8c <__alt_data_end+0xfffec68c>

0002c154 <__eqdf2>:
   2c154:	2804d53a 	srli	r2,r5,20
   2c158:	3806d53a 	srli	r3,r7,20
   2c15c:	02000434 	movhi	r8,16
   2c160:	423fffc4 	addi	r8,r8,-1
   2c164:	1081ffcc 	andi	r2,r2,2047
   2c168:	0281ffc4 	movi	r10,2047
   2c16c:	2a12703a 	and	r9,r5,r8
   2c170:	18c1ffcc 	andi	r3,r3,2047
   2c174:	3a10703a 	and	r8,r7,r8
   2c178:	280ad7fa 	srli	r5,r5,31
   2c17c:	380ed7fa 	srli	r7,r7,31
   2c180:	12801026 	beq	r2,r10,2c1c4 <__eqdf2+0x70>
   2c184:	0281ffc4 	movi	r10,2047
   2c188:	1a800a26 	beq	r3,r10,2c1b4 <__eqdf2+0x60>
   2c18c:	10c00226 	beq	r2,r3,2c198 <__eqdf2+0x44>
   2c190:	00800044 	movi	r2,1
   2c194:	f800283a 	ret
   2c198:	4a3ffd1e 	bne	r9,r8,2c190 <__alt_data_end+0xfffecd90>
   2c19c:	21bffc1e 	bne	r4,r6,2c190 <__alt_data_end+0xfffecd90>
   2c1a0:	29c00c26 	beq	r5,r7,2c1d4 <__eqdf2+0x80>
   2c1a4:	103ffa1e 	bne	r2,zero,2c190 <__alt_data_end+0xfffecd90>
   2c1a8:	2244b03a 	or	r2,r4,r9
   2c1ac:	1004c03a 	cmpne	r2,r2,zero
   2c1b0:	f800283a 	ret
   2c1b4:	3214b03a 	or	r10,r6,r8
   2c1b8:	503ff426 	beq	r10,zero,2c18c <__alt_data_end+0xfffecd8c>
   2c1bc:	00800044 	movi	r2,1
   2c1c0:	f800283a 	ret
   2c1c4:	2254b03a 	or	r10,r4,r9
   2c1c8:	503fee26 	beq	r10,zero,2c184 <__alt_data_end+0xfffecd84>
   2c1cc:	00800044 	movi	r2,1
   2c1d0:	f800283a 	ret
   2c1d4:	0005883a 	mov	r2,zero
   2c1d8:	f800283a 	ret

0002c1dc <__gedf2>:
   2c1dc:	2804d53a 	srli	r2,r5,20
   2c1e0:	3806d53a 	srli	r3,r7,20
   2c1e4:	02000434 	movhi	r8,16
   2c1e8:	423fffc4 	addi	r8,r8,-1
   2c1ec:	1081ffcc 	andi	r2,r2,2047
   2c1f0:	0241ffc4 	movi	r9,2047
   2c1f4:	2a14703a 	and	r10,r5,r8
   2c1f8:	18c1ffcc 	andi	r3,r3,2047
   2c1fc:	3a10703a 	and	r8,r7,r8
   2c200:	280ad7fa 	srli	r5,r5,31
   2c204:	380ed7fa 	srli	r7,r7,31
   2c208:	12401d26 	beq	r2,r9,2c280 <__gedf2+0xa4>
   2c20c:	0241ffc4 	movi	r9,2047
   2c210:	1a401226 	beq	r3,r9,2c25c <__gedf2+0x80>
   2c214:	1000081e 	bne	r2,zero,2c238 <__gedf2+0x5c>
   2c218:	2296b03a 	or	r11,r4,r10
   2c21c:	5813003a 	cmpeq	r9,r11,zero
   2c220:	1800091e 	bne	r3,zero,2c248 <__gedf2+0x6c>
   2c224:	3218b03a 	or	r12,r6,r8
   2c228:	6000071e 	bne	r12,zero,2c248 <__gedf2+0x6c>
   2c22c:	0005883a 	mov	r2,zero
   2c230:	5800101e 	bne	r11,zero,2c274 <__gedf2+0x98>
   2c234:	f800283a 	ret
   2c238:	18000c1e 	bne	r3,zero,2c26c <__gedf2+0x90>
   2c23c:	3212b03a 	or	r9,r6,r8
   2c240:	48000c26 	beq	r9,zero,2c274 <__gedf2+0x98>
   2c244:	0013883a 	mov	r9,zero
   2c248:	39c03fcc 	andi	r7,r7,255
   2c24c:	48000826 	beq	r9,zero,2c270 <__gedf2+0x94>
   2c250:	38000926 	beq	r7,zero,2c278 <__gedf2+0x9c>
   2c254:	00800044 	movi	r2,1
   2c258:	f800283a 	ret
   2c25c:	3212b03a 	or	r9,r6,r8
   2c260:	483fec26 	beq	r9,zero,2c214 <__alt_data_end+0xfffece14>
   2c264:	00bfff84 	movi	r2,-2
   2c268:	f800283a 	ret
   2c26c:	39c03fcc 	andi	r7,r7,255
   2c270:	29c00626 	beq	r5,r7,2c28c <__gedf2+0xb0>
   2c274:	283ff726 	beq	r5,zero,2c254 <__alt_data_end+0xfffece54>
   2c278:	00bfffc4 	movi	r2,-1
   2c27c:	f800283a 	ret
   2c280:	2292b03a 	or	r9,r4,r10
   2c284:	483fe126 	beq	r9,zero,2c20c <__alt_data_end+0xfffece0c>
   2c288:	003ff606 	br	2c264 <__alt_data_end+0xfffece64>
   2c28c:	18bff916 	blt	r3,r2,2c274 <__alt_data_end+0xfffece74>
   2c290:	10c00316 	blt	r2,r3,2c2a0 <__gedf2+0xc4>
   2c294:	42bff736 	bltu	r8,r10,2c274 <__alt_data_end+0xfffece74>
   2c298:	52000326 	beq	r10,r8,2c2a8 <__gedf2+0xcc>
   2c29c:	5200042e 	bgeu	r10,r8,2c2b0 <__gedf2+0xd4>
   2c2a0:	283fec1e 	bne	r5,zero,2c254 <__alt_data_end+0xfffece54>
   2c2a4:	003ff406 	br	2c278 <__alt_data_end+0xfffece78>
   2c2a8:	313ff236 	bltu	r6,r4,2c274 <__alt_data_end+0xfffece74>
   2c2ac:	21bffc36 	bltu	r4,r6,2c2a0 <__alt_data_end+0xfffecea0>
   2c2b0:	0005883a 	mov	r2,zero
   2c2b4:	f800283a 	ret

0002c2b8 <__ledf2>:
   2c2b8:	2804d53a 	srli	r2,r5,20
   2c2bc:	3810d53a 	srli	r8,r7,20
   2c2c0:	00c00434 	movhi	r3,16
   2c2c4:	18ffffc4 	addi	r3,r3,-1
   2c2c8:	1081ffcc 	andi	r2,r2,2047
   2c2cc:	0241ffc4 	movi	r9,2047
   2c2d0:	28d4703a 	and	r10,r5,r3
   2c2d4:	4201ffcc 	andi	r8,r8,2047
   2c2d8:	38c6703a 	and	r3,r7,r3
   2c2dc:	280ad7fa 	srli	r5,r5,31
   2c2e0:	380ed7fa 	srli	r7,r7,31
   2c2e4:	12401f26 	beq	r2,r9,2c364 <__ledf2+0xac>
   2c2e8:	0241ffc4 	movi	r9,2047
   2c2ec:	42401426 	beq	r8,r9,2c340 <__ledf2+0x88>
   2c2f0:	1000091e 	bne	r2,zero,2c318 <__ledf2+0x60>
   2c2f4:	2296b03a 	or	r11,r4,r10
   2c2f8:	5813003a 	cmpeq	r9,r11,zero
   2c2fc:	29403fcc 	andi	r5,r5,255
   2c300:	40000a1e 	bne	r8,zero,2c32c <__ledf2+0x74>
   2c304:	30d8b03a 	or	r12,r6,r3
   2c308:	6000081e 	bne	r12,zero,2c32c <__ledf2+0x74>
   2c30c:	0005883a 	mov	r2,zero
   2c310:	5800111e 	bne	r11,zero,2c358 <__ledf2+0xa0>
   2c314:	f800283a 	ret
   2c318:	29403fcc 	andi	r5,r5,255
   2c31c:	40000c1e 	bne	r8,zero,2c350 <__ledf2+0x98>
   2c320:	30d2b03a 	or	r9,r6,r3
   2c324:	48000c26 	beq	r9,zero,2c358 <__ledf2+0xa0>
   2c328:	0013883a 	mov	r9,zero
   2c32c:	39c03fcc 	andi	r7,r7,255
   2c330:	48000826 	beq	r9,zero,2c354 <__ledf2+0x9c>
   2c334:	38001126 	beq	r7,zero,2c37c <__ledf2+0xc4>
   2c338:	00800044 	movi	r2,1
   2c33c:	f800283a 	ret
   2c340:	30d2b03a 	or	r9,r6,r3
   2c344:	483fea26 	beq	r9,zero,2c2f0 <__alt_data_end+0xfffecef0>
   2c348:	00800084 	movi	r2,2
   2c34c:	f800283a 	ret
   2c350:	39c03fcc 	andi	r7,r7,255
   2c354:	39400726 	beq	r7,r5,2c374 <__ledf2+0xbc>
   2c358:	2800081e 	bne	r5,zero,2c37c <__ledf2+0xc4>
   2c35c:	00800044 	movi	r2,1
   2c360:	f800283a 	ret
   2c364:	2292b03a 	or	r9,r4,r10
   2c368:	483fdf26 	beq	r9,zero,2c2e8 <__alt_data_end+0xfffecee8>
   2c36c:	00800084 	movi	r2,2
   2c370:	f800283a 	ret
   2c374:	4080030e 	bge	r8,r2,2c384 <__ledf2+0xcc>
   2c378:	383fef26 	beq	r7,zero,2c338 <__alt_data_end+0xfffecf38>
   2c37c:	00bfffc4 	movi	r2,-1
   2c380:	f800283a 	ret
   2c384:	123feb16 	blt	r2,r8,2c334 <__alt_data_end+0xfffecf34>
   2c388:	1abff336 	bltu	r3,r10,2c358 <__alt_data_end+0xfffecf58>
   2c38c:	50c00326 	beq	r10,r3,2c39c <__ledf2+0xe4>
   2c390:	50c0042e 	bgeu	r10,r3,2c3a4 <__ledf2+0xec>
   2c394:	283fe81e 	bne	r5,zero,2c338 <__alt_data_end+0xfffecf38>
   2c398:	003ff806 	br	2c37c <__alt_data_end+0xfffecf7c>
   2c39c:	313fee36 	bltu	r6,r4,2c358 <__alt_data_end+0xfffecf58>
   2c3a0:	21bffc36 	bltu	r4,r6,2c394 <__alt_data_end+0xfffecf94>
   2c3a4:	0005883a 	mov	r2,zero
   2c3a8:	f800283a 	ret

0002c3ac <__muldf3>:
   2c3ac:	deffee04 	addi	sp,sp,-72
   2c3b0:	dd000c15 	stw	r20,48(sp)
   2c3b4:	2828d53a 	srli	r20,r5,20
   2c3b8:	ddc00f15 	stw	r23,60(sp)
   2c3bc:	282ed7fa 	srli	r23,r5,31
   2c3c0:	dc000815 	stw	r16,32(sp)
   2c3c4:	04000434 	movhi	r16,16
   2c3c8:	dcc00b15 	stw	r19,44(sp)
   2c3cc:	843fffc4 	addi	r16,r16,-1
   2c3d0:	dfc01115 	stw	ra,68(sp)
   2c3d4:	df001015 	stw	fp,64(sp)
   2c3d8:	dd800e15 	stw	r22,56(sp)
   2c3dc:	dd400d15 	stw	r21,52(sp)
   2c3e0:	dc800a15 	stw	r18,40(sp)
   2c3e4:	dc400915 	stw	r17,36(sp)
   2c3e8:	a501ffcc 	andi	r20,r20,2047
   2c3ec:	2c20703a 	and	r16,r5,r16
   2c3f0:	b827883a 	mov	r19,r23
   2c3f4:	ba403fcc 	andi	r9,r23,255
   2c3f8:	a0006026 	beq	r20,zero,2c57c <__muldf3+0x1d0>
   2c3fc:	0081ffc4 	movi	r2,2047
   2c400:	202d883a 	mov	r22,r4
   2c404:	a0803626 	beq	r20,r2,2c4e0 <__muldf3+0x134>
   2c408:	84000434 	orhi	r16,r16,16
   2c40c:	200ad77a 	srli	r5,r4,29
   2c410:	800490fa 	slli	r2,r16,3
   2c414:	202c90fa 	slli	r22,r4,3
   2c418:	a53f0044 	addi	r20,r20,-1023
   2c41c:	28a0b03a 	or	r16,r5,r2
   2c420:	002b883a 	mov	r21,zero
   2c424:	000b883a 	mov	r5,zero
   2c428:	3804d53a 	srli	r2,r7,20
   2c42c:	3838d7fa 	srli	fp,r7,31
   2c430:	04400434 	movhi	r17,16
   2c434:	8c7fffc4 	addi	r17,r17,-1
   2c438:	1081ffcc 	andi	r2,r2,2047
   2c43c:	3025883a 	mov	r18,r6
   2c440:	3c62703a 	and	r17,r7,r17
   2c444:	e2803fcc 	andi	r10,fp,255
   2c448:	10006d26 	beq	r2,zero,2c600 <__muldf3+0x254>
   2c44c:	00c1ffc4 	movi	r3,2047
   2c450:	10c06526 	beq	r2,r3,2c5e8 <__muldf3+0x23c>
   2c454:	8c400434 	orhi	r17,r17,16
   2c458:	300ed77a 	srli	r7,r6,29
   2c45c:	880690fa 	slli	r3,r17,3
   2c460:	302490fa 	slli	r18,r6,3
   2c464:	10bf0044 	addi	r2,r2,-1023
   2c468:	38e2b03a 	or	r17,r7,r3
   2c46c:	000f883a 	mov	r7,zero
   2c470:	a087883a 	add	r3,r20,r2
   2c474:	010003c4 	movi	r4,15
   2c478:	3d44b03a 	or	r2,r7,r21
   2c47c:	e5ccf03a 	xor	r6,fp,r23
   2c480:	1a000044 	addi	r8,r3,1
   2c484:	20809b36 	bltu	r4,r2,2c6f4 <__muldf3+0x348>
   2c488:	100490ba 	slli	r2,r2,2
   2c48c:	010000f4 	movhi	r4,3
   2c490:	21312804 	addi	r4,r4,-15200
   2c494:	1105883a 	add	r2,r2,r4
   2c498:	10800017 	ldw	r2,0(r2)
   2c49c:	1000683a 	jmp	r2
   2c4a0:	0002c6f4 	movhi	zero,2843
   2c4a4:	0002c500 	call	2c50 <__alt_mem_onchip_memory2_0-0x1d3b0>
   2c4a8:	0002c500 	call	2c50 <__alt_mem_onchip_memory2_0-0x1d3b0>
   2c4ac:	0002c4fc 	xorhi	zero,zero,2835
   2c4b0:	0002c6d0 	cmplti	zero,zero,2843
   2c4b4:	0002c6d0 	cmplti	zero,zero,2843
   2c4b8:	0002c6b8 	rdprs	zero,zero,2842
   2c4bc:	0002c4fc 	xorhi	zero,zero,2835
   2c4c0:	0002c6d0 	cmplti	zero,zero,2843
   2c4c4:	0002c6b8 	rdprs	zero,zero,2842
   2c4c8:	0002c6d0 	cmplti	zero,zero,2843
   2c4cc:	0002c4fc 	xorhi	zero,zero,2835
   2c4d0:	0002c6e0 	cmpeqi	zero,zero,2843
   2c4d4:	0002c6e0 	cmpeqi	zero,zero,2843
   2c4d8:	0002c6e0 	cmpeqi	zero,zero,2843
   2c4dc:	0002ca40 	call	2ca4 <__alt_mem_onchip_memory2_0-0x1d35c>
   2c4e0:	2404b03a 	or	r2,r4,r16
   2c4e4:	1000711e 	bne	r2,zero,2c6ac <__muldf3+0x300>
   2c4e8:	05400204 	movi	r21,8
   2c4ec:	0021883a 	mov	r16,zero
   2c4f0:	002d883a 	mov	r22,zero
   2c4f4:	01400084 	movi	r5,2
   2c4f8:	003fcb06 	br	2c428 <__alt_data_end+0xfffed028>
   2c4fc:	500d883a 	mov	r6,r10
   2c500:	00800084 	movi	r2,2
   2c504:	38805926 	beq	r7,r2,2c66c <__muldf3+0x2c0>
   2c508:	008000c4 	movi	r2,3
   2c50c:	3881bb26 	beq	r7,r2,2cbfc <__muldf3+0x850>
   2c510:	00800044 	movi	r2,1
   2c514:	3881961e 	bne	r7,r2,2cb70 <__muldf3+0x7c4>
   2c518:	3027883a 	mov	r19,r6
   2c51c:	0005883a 	mov	r2,zero
   2c520:	0021883a 	mov	r16,zero
   2c524:	002d883a 	mov	r22,zero
   2c528:	1004953a 	slli	r2,r2,20
   2c52c:	98c03fcc 	andi	r3,r19,255
   2c530:	04400434 	movhi	r17,16
   2c534:	8c7fffc4 	addi	r17,r17,-1
   2c538:	180697fa 	slli	r3,r3,31
   2c53c:	8460703a 	and	r16,r16,r17
   2c540:	80a0b03a 	or	r16,r16,r2
   2c544:	80c6b03a 	or	r3,r16,r3
   2c548:	b005883a 	mov	r2,r22
   2c54c:	dfc01117 	ldw	ra,68(sp)
   2c550:	df001017 	ldw	fp,64(sp)
   2c554:	ddc00f17 	ldw	r23,60(sp)
   2c558:	dd800e17 	ldw	r22,56(sp)
   2c55c:	dd400d17 	ldw	r21,52(sp)
   2c560:	dd000c17 	ldw	r20,48(sp)
   2c564:	dcc00b17 	ldw	r19,44(sp)
   2c568:	dc800a17 	ldw	r18,40(sp)
   2c56c:	dc400917 	ldw	r17,36(sp)
   2c570:	dc000817 	ldw	r16,32(sp)
   2c574:	dec01204 	addi	sp,sp,72
   2c578:	f800283a 	ret
   2c57c:	2404b03a 	or	r2,r4,r16
   2c580:	202b883a 	mov	r21,r4
   2c584:	10004426 	beq	r2,zero,2c698 <__muldf3+0x2ec>
   2c588:	80015126 	beq	r16,zero,2cad0 <__muldf3+0x724>
   2c58c:	8009883a 	mov	r4,r16
   2c590:	d9800715 	stw	r6,28(sp)
   2c594:	d9c00215 	stw	r7,8(sp)
   2c598:	da400415 	stw	r9,16(sp)
   2c59c:	002d7180 	call	2d718 <__clzsi2>
   2c5a0:	d9800717 	ldw	r6,28(sp)
   2c5a4:	d9c00217 	ldw	r7,8(sp)
   2c5a8:	da400417 	ldw	r9,16(sp)
   2c5ac:	113ffd44 	addi	r4,r2,-11
   2c5b0:	00c00704 	movi	r3,28
   2c5b4:	19014216 	blt	r3,r4,2cac0 <__muldf3+0x714>
   2c5b8:	00c00744 	movi	r3,29
   2c5bc:	15bffe04 	addi	r22,r2,-8
   2c5c0:	1907c83a 	sub	r3,r3,r4
   2c5c4:	85a0983a 	sll	r16,r16,r22
   2c5c8:	a8c6d83a 	srl	r3,r21,r3
   2c5cc:	adac983a 	sll	r22,r21,r22
   2c5d0:	1c20b03a 	or	r16,r3,r16
   2c5d4:	1080fcc4 	addi	r2,r2,1011
   2c5d8:	00a9c83a 	sub	r20,zero,r2
   2c5dc:	002b883a 	mov	r21,zero
   2c5e0:	000b883a 	mov	r5,zero
   2c5e4:	003f9006 	br	2c428 <__alt_data_end+0xfffed028>
   2c5e8:	3446b03a 	or	r3,r6,r17
   2c5ec:	1800281e 	bne	r3,zero,2c690 <__muldf3+0x2e4>
   2c5f0:	0023883a 	mov	r17,zero
   2c5f4:	0025883a 	mov	r18,zero
   2c5f8:	01c00084 	movi	r7,2
   2c5fc:	003f9c06 	br	2c470 <__alt_data_end+0xfffed070>
   2c600:	3446b03a 	or	r3,r6,r17
   2c604:	18001e26 	beq	r3,zero,2c680 <__muldf3+0x2d4>
   2c608:	88012126 	beq	r17,zero,2ca90 <__muldf3+0x6e4>
   2c60c:	8809883a 	mov	r4,r17
   2c610:	d9400215 	stw	r5,8(sp)
   2c614:	d9800715 	stw	r6,28(sp)
   2c618:	da400415 	stw	r9,16(sp)
   2c61c:	da800315 	stw	r10,12(sp)
   2c620:	002d7180 	call	2d718 <__clzsi2>
   2c624:	d9400217 	ldw	r5,8(sp)
   2c628:	d9800717 	ldw	r6,28(sp)
   2c62c:	da400417 	ldw	r9,16(sp)
   2c630:	da800317 	ldw	r10,12(sp)
   2c634:	113ffd44 	addi	r4,r2,-11
   2c638:	00c00704 	movi	r3,28
   2c63c:	19011016 	blt	r3,r4,2ca80 <__muldf3+0x6d4>
   2c640:	00c00744 	movi	r3,29
   2c644:	14bffe04 	addi	r18,r2,-8
   2c648:	1907c83a 	sub	r3,r3,r4
   2c64c:	8ca2983a 	sll	r17,r17,r18
   2c650:	30c6d83a 	srl	r3,r6,r3
   2c654:	34a4983a 	sll	r18,r6,r18
   2c658:	1c62b03a 	or	r17,r3,r17
   2c65c:	1080fcc4 	addi	r2,r2,1011
   2c660:	0085c83a 	sub	r2,zero,r2
   2c664:	000f883a 	mov	r7,zero
   2c668:	003f8106 	br	2c470 <__alt_data_end+0xfffed070>
   2c66c:	3027883a 	mov	r19,r6
   2c670:	0081ffc4 	movi	r2,2047
   2c674:	0021883a 	mov	r16,zero
   2c678:	002d883a 	mov	r22,zero
   2c67c:	003faa06 	br	2c528 <__alt_data_end+0xfffed128>
   2c680:	0023883a 	mov	r17,zero
   2c684:	0025883a 	mov	r18,zero
   2c688:	01c00044 	movi	r7,1
   2c68c:	003f7806 	br	2c470 <__alt_data_end+0xfffed070>
   2c690:	01c000c4 	movi	r7,3
   2c694:	003f7606 	br	2c470 <__alt_data_end+0xfffed070>
   2c698:	05400104 	movi	r21,4
   2c69c:	0021883a 	mov	r16,zero
   2c6a0:	002d883a 	mov	r22,zero
   2c6a4:	01400044 	movi	r5,1
   2c6a8:	003f5f06 	br	2c428 <__alt_data_end+0xfffed028>
   2c6ac:	05400304 	movi	r21,12
   2c6b0:	014000c4 	movi	r5,3
   2c6b4:	003f5c06 	br	2c428 <__alt_data_end+0xfffed028>
   2c6b8:	04000434 	movhi	r16,16
   2c6bc:	0027883a 	mov	r19,zero
   2c6c0:	843fffc4 	addi	r16,r16,-1
   2c6c4:	05bfffc4 	movi	r22,-1
   2c6c8:	0081ffc4 	movi	r2,2047
   2c6cc:	003f9606 	br	2c528 <__alt_data_end+0xfffed128>
   2c6d0:	8023883a 	mov	r17,r16
   2c6d4:	b025883a 	mov	r18,r22
   2c6d8:	280f883a 	mov	r7,r5
   2c6dc:	003f8806 	br	2c500 <__alt_data_end+0xfffed100>
   2c6e0:	8023883a 	mov	r17,r16
   2c6e4:	b025883a 	mov	r18,r22
   2c6e8:	480d883a 	mov	r6,r9
   2c6ec:	280f883a 	mov	r7,r5
   2c6f0:	003f8306 	br	2c500 <__alt_data_end+0xfffed100>
   2c6f4:	b026d43a 	srli	r19,r22,16
   2c6f8:	902ed43a 	srli	r23,r18,16
   2c6fc:	b5bfffcc 	andi	r22,r22,65535
   2c700:	94bfffcc 	andi	r18,r18,65535
   2c704:	b00b883a 	mov	r5,r22
   2c708:	9009883a 	mov	r4,r18
   2c70c:	d8c00515 	stw	r3,20(sp)
   2c710:	d9800715 	stw	r6,28(sp)
   2c714:	da000615 	stw	r8,24(sp)
   2c718:	002aeb00 	call	2aeb0 <__mulsi3>
   2c71c:	980b883a 	mov	r5,r19
   2c720:	9009883a 	mov	r4,r18
   2c724:	1029883a 	mov	r20,r2
   2c728:	002aeb00 	call	2aeb0 <__mulsi3>
   2c72c:	b80b883a 	mov	r5,r23
   2c730:	9809883a 	mov	r4,r19
   2c734:	102b883a 	mov	r21,r2
   2c738:	002aeb00 	call	2aeb0 <__mulsi3>
   2c73c:	b809883a 	mov	r4,r23
   2c740:	b00b883a 	mov	r5,r22
   2c744:	1039883a 	mov	fp,r2
   2c748:	002aeb00 	call	2aeb0 <__mulsi3>
   2c74c:	a008d43a 	srli	r4,r20,16
   2c750:	1545883a 	add	r2,r2,r21
   2c754:	d8c00517 	ldw	r3,20(sp)
   2c758:	2085883a 	add	r2,r4,r2
   2c75c:	d9800717 	ldw	r6,28(sp)
   2c760:	da000617 	ldw	r8,24(sp)
   2c764:	1540022e 	bgeu	r2,r21,2c770 <__muldf3+0x3c4>
   2c768:	01000074 	movhi	r4,1
   2c76c:	e139883a 	add	fp,fp,r4
   2c770:	100e943a 	slli	r7,r2,16
   2c774:	1004d43a 	srli	r2,r2,16
   2c778:	882ad43a 	srli	r21,r17,16
   2c77c:	a53fffcc 	andi	r20,r20,65535
   2c780:	8c7fffcc 	andi	r17,r17,65535
   2c784:	3d29883a 	add	r20,r7,r20
   2c788:	b00b883a 	mov	r5,r22
   2c78c:	8809883a 	mov	r4,r17
   2c790:	d8c00515 	stw	r3,20(sp)
   2c794:	d9800715 	stw	r6,28(sp)
   2c798:	da000615 	stw	r8,24(sp)
   2c79c:	dd000115 	stw	r20,4(sp)
   2c7a0:	d8800015 	stw	r2,0(sp)
   2c7a4:	002aeb00 	call	2aeb0 <__mulsi3>
   2c7a8:	980b883a 	mov	r5,r19
   2c7ac:	8809883a 	mov	r4,r17
   2c7b0:	d8800215 	stw	r2,8(sp)
   2c7b4:	002aeb00 	call	2aeb0 <__mulsi3>
   2c7b8:	9809883a 	mov	r4,r19
   2c7bc:	a80b883a 	mov	r5,r21
   2c7c0:	1029883a 	mov	r20,r2
   2c7c4:	002aeb00 	call	2aeb0 <__mulsi3>
   2c7c8:	b00b883a 	mov	r5,r22
   2c7cc:	a809883a 	mov	r4,r21
   2c7d0:	d8800415 	stw	r2,16(sp)
   2c7d4:	002aeb00 	call	2aeb0 <__mulsi3>
   2c7d8:	d9c00217 	ldw	r7,8(sp)
   2c7dc:	1505883a 	add	r2,r2,r20
   2c7e0:	d8c00517 	ldw	r3,20(sp)
   2c7e4:	3826d43a 	srli	r19,r7,16
   2c7e8:	d9800717 	ldw	r6,28(sp)
   2c7ec:	da000617 	ldw	r8,24(sp)
   2c7f0:	9885883a 	add	r2,r19,r2
   2c7f4:	da400417 	ldw	r9,16(sp)
   2c7f8:	1500022e 	bgeu	r2,r20,2c804 <__muldf3+0x458>
   2c7fc:	01000074 	movhi	r4,1
   2c800:	4913883a 	add	r9,r9,r4
   2c804:	1028d43a 	srli	r20,r2,16
   2c808:	1004943a 	slli	r2,r2,16
   2c80c:	802cd43a 	srli	r22,r16,16
   2c810:	843fffcc 	andi	r16,r16,65535
   2c814:	3cffffcc 	andi	r19,r7,65535
   2c818:	9009883a 	mov	r4,r18
   2c81c:	800b883a 	mov	r5,r16
   2c820:	a269883a 	add	r20,r20,r9
   2c824:	d8c00515 	stw	r3,20(sp)
   2c828:	d9800715 	stw	r6,28(sp)
   2c82c:	da000615 	stw	r8,24(sp)
   2c830:	14e7883a 	add	r19,r2,r19
   2c834:	002aeb00 	call	2aeb0 <__mulsi3>
   2c838:	9009883a 	mov	r4,r18
   2c83c:	b00b883a 	mov	r5,r22
   2c840:	d8800315 	stw	r2,12(sp)
   2c844:	002aeb00 	call	2aeb0 <__mulsi3>
   2c848:	b809883a 	mov	r4,r23
   2c84c:	b00b883a 	mov	r5,r22
   2c850:	d8800215 	stw	r2,8(sp)
   2c854:	002aeb00 	call	2aeb0 <__mulsi3>
   2c858:	b80b883a 	mov	r5,r23
   2c85c:	8009883a 	mov	r4,r16
   2c860:	d8800415 	stw	r2,16(sp)
   2c864:	002aeb00 	call	2aeb0 <__mulsi3>
   2c868:	da800317 	ldw	r10,12(sp)
   2c86c:	d9c00217 	ldw	r7,8(sp)
   2c870:	d9000017 	ldw	r4,0(sp)
   2c874:	502ed43a 	srli	r23,r10,16
   2c878:	11c5883a 	add	r2,r2,r7
   2c87c:	24e5883a 	add	r18,r4,r19
   2c880:	b885883a 	add	r2,r23,r2
   2c884:	d8c00517 	ldw	r3,20(sp)
   2c888:	d9800717 	ldw	r6,28(sp)
   2c88c:	da000617 	ldw	r8,24(sp)
   2c890:	da400417 	ldw	r9,16(sp)
   2c894:	11c0022e 	bgeu	r2,r7,2c8a0 <__muldf3+0x4f4>
   2c898:	01000074 	movhi	r4,1
   2c89c:	4913883a 	add	r9,r9,r4
   2c8a0:	100ed43a 	srli	r7,r2,16
   2c8a4:	1004943a 	slli	r2,r2,16
   2c8a8:	55ffffcc 	andi	r23,r10,65535
   2c8ac:	3a53883a 	add	r9,r7,r9
   2c8b0:	8809883a 	mov	r4,r17
   2c8b4:	800b883a 	mov	r5,r16
   2c8b8:	d8c00515 	stw	r3,20(sp)
   2c8bc:	d9800715 	stw	r6,28(sp)
   2c8c0:	da000615 	stw	r8,24(sp)
   2c8c4:	da400415 	stw	r9,16(sp)
   2c8c8:	15ef883a 	add	r23,r2,r23
   2c8cc:	002aeb00 	call	2aeb0 <__mulsi3>
   2c8d0:	8809883a 	mov	r4,r17
   2c8d4:	b00b883a 	mov	r5,r22
   2c8d8:	d8800215 	stw	r2,8(sp)
   2c8dc:	002aeb00 	call	2aeb0 <__mulsi3>
   2c8e0:	b00b883a 	mov	r5,r22
   2c8e4:	a809883a 	mov	r4,r21
   2c8e8:	d8800315 	stw	r2,12(sp)
   2c8ec:	002aeb00 	call	2aeb0 <__mulsi3>
   2c8f0:	8009883a 	mov	r4,r16
   2c8f4:	a80b883a 	mov	r5,r21
   2c8f8:	1023883a 	mov	r17,r2
   2c8fc:	002aeb00 	call	2aeb0 <__mulsi3>
   2c900:	d9c00217 	ldw	r7,8(sp)
   2c904:	da800317 	ldw	r10,12(sp)
   2c908:	d8c00517 	ldw	r3,20(sp)
   2c90c:	3808d43a 	srli	r4,r7,16
   2c910:	1285883a 	add	r2,r2,r10
   2c914:	d9800717 	ldw	r6,28(sp)
   2c918:	2085883a 	add	r2,r4,r2
   2c91c:	da000617 	ldw	r8,24(sp)
   2c920:	da400417 	ldw	r9,16(sp)
   2c924:	1280022e 	bgeu	r2,r10,2c930 <__muldf3+0x584>
   2c928:	01000074 	movhi	r4,1
   2c92c:	8923883a 	add	r17,r17,r4
   2c930:	1008943a 	slli	r4,r2,16
   2c934:	39ffffcc 	andi	r7,r7,65535
   2c938:	e4b9883a 	add	fp,fp,r18
   2c93c:	21cf883a 	add	r7,r4,r7
   2c940:	e4e7803a 	cmpltu	r19,fp,r19
   2c944:	3d0f883a 	add	r7,r7,r20
   2c948:	bf39883a 	add	fp,r23,fp
   2c94c:	99c9883a 	add	r4,r19,r7
   2c950:	e5ef803a 	cmpltu	r23,fp,r23
   2c954:	490b883a 	add	r5,r9,r4
   2c958:	1004d43a 	srli	r2,r2,16
   2c95c:	b965883a 	add	r18,r23,r5
   2c960:	24c9803a 	cmpltu	r4,r4,r19
   2c964:	3d29803a 	cmpltu	r20,r7,r20
   2c968:	a128b03a 	or	r20,r20,r4
   2c96c:	95ef803a 	cmpltu	r23,r18,r23
   2c970:	2a53803a 	cmpltu	r9,r5,r9
   2c974:	a0a9883a 	add	r20,r20,r2
   2c978:	4deeb03a 	or	r23,r9,r23
   2c97c:	a5ef883a 	add	r23,r20,r23
   2c980:	bc63883a 	add	r17,r23,r17
   2c984:	e004927a 	slli	r2,fp,9
   2c988:	d9000117 	ldw	r4,4(sp)
   2c98c:	882e927a 	slli	r23,r17,9
   2c990:	9022d5fa 	srli	r17,r18,23
   2c994:	e038d5fa 	srli	fp,fp,23
   2c998:	1104b03a 	or	r2,r2,r4
   2c99c:	9024927a 	slli	r18,r18,9
   2c9a0:	1004c03a 	cmpne	r2,r2,zero
   2c9a4:	bc62b03a 	or	r17,r23,r17
   2c9a8:	1738b03a 	or	fp,r2,fp
   2c9ac:	8880402c 	andhi	r2,r17,256
   2c9b0:	e4a4b03a 	or	r18,fp,r18
   2c9b4:	10000726 	beq	r2,zero,2c9d4 <__muldf3+0x628>
   2c9b8:	9006d07a 	srli	r3,r18,1
   2c9bc:	880497fa 	slli	r2,r17,31
   2c9c0:	9480004c 	andi	r18,r18,1
   2c9c4:	8822d07a 	srli	r17,r17,1
   2c9c8:	1ca4b03a 	or	r18,r3,r18
   2c9cc:	14a4b03a 	or	r18,r2,r18
   2c9d0:	4007883a 	mov	r3,r8
   2c9d4:	1880ffc4 	addi	r2,r3,1023
   2c9d8:	0080460e 	bge	zero,r2,2caf4 <__muldf3+0x748>
   2c9dc:	910001cc 	andi	r4,r18,7
   2c9e0:	20000726 	beq	r4,zero,2ca00 <__muldf3+0x654>
   2c9e4:	910003cc 	andi	r4,r18,15
   2c9e8:	01400104 	movi	r5,4
   2c9ec:	21400426 	beq	r4,r5,2ca00 <__muldf3+0x654>
   2c9f0:	9149883a 	add	r4,r18,r5
   2c9f4:	24a5803a 	cmpltu	r18,r4,r18
   2c9f8:	8ca3883a 	add	r17,r17,r18
   2c9fc:	2025883a 	mov	r18,r4
   2ca00:	8900402c 	andhi	r4,r17,256
   2ca04:	20000426 	beq	r4,zero,2ca18 <__muldf3+0x66c>
   2ca08:	18810004 	addi	r2,r3,1024
   2ca0c:	00ffc034 	movhi	r3,65280
   2ca10:	18ffffc4 	addi	r3,r3,-1
   2ca14:	88e2703a 	and	r17,r17,r3
   2ca18:	00c1ff84 	movi	r3,2046
   2ca1c:	18bf1316 	blt	r3,r2,2c66c <__alt_data_end+0xfffed26c>
   2ca20:	882c977a 	slli	r22,r17,29
   2ca24:	9024d0fa 	srli	r18,r18,3
   2ca28:	8822927a 	slli	r17,r17,9
   2ca2c:	1081ffcc 	andi	r2,r2,2047
   2ca30:	b4acb03a 	or	r22,r22,r18
   2ca34:	8820d33a 	srli	r16,r17,12
   2ca38:	3027883a 	mov	r19,r6
   2ca3c:	003eba06 	br	2c528 <__alt_data_end+0xfffed128>
   2ca40:	8080022c 	andhi	r2,r16,8
   2ca44:	10000926 	beq	r2,zero,2ca6c <__muldf3+0x6c0>
   2ca48:	8880022c 	andhi	r2,r17,8
   2ca4c:	1000071e 	bne	r2,zero,2ca6c <__muldf3+0x6c0>
   2ca50:	00800434 	movhi	r2,16
   2ca54:	8c000234 	orhi	r16,r17,8
   2ca58:	10bfffc4 	addi	r2,r2,-1
   2ca5c:	e027883a 	mov	r19,fp
   2ca60:	80a0703a 	and	r16,r16,r2
   2ca64:	902d883a 	mov	r22,r18
   2ca68:	003f1706 	br	2c6c8 <__alt_data_end+0xfffed2c8>
   2ca6c:	00800434 	movhi	r2,16
   2ca70:	84000234 	orhi	r16,r16,8
   2ca74:	10bfffc4 	addi	r2,r2,-1
   2ca78:	80a0703a 	and	r16,r16,r2
   2ca7c:	003f1206 	br	2c6c8 <__alt_data_end+0xfffed2c8>
   2ca80:	147ff604 	addi	r17,r2,-40
   2ca84:	3462983a 	sll	r17,r6,r17
   2ca88:	0025883a 	mov	r18,zero
   2ca8c:	003ef306 	br	2c65c <__alt_data_end+0xfffed25c>
   2ca90:	3009883a 	mov	r4,r6
   2ca94:	d9400215 	stw	r5,8(sp)
   2ca98:	d9800715 	stw	r6,28(sp)
   2ca9c:	da400415 	stw	r9,16(sp)
   2caa0:	da800315 	stw	r10,12(sp)
   2caa4:	002d7180 	call	2d718 <__clzsi2>
   2caa8:	10800804 	addi	r2,r2,32
   2caac:	da800317 	ldw	r10,12(sp)
   2cab0:	da400417 	ldw	r9,16(sp)
   2cab4:	d9800717 	ldw	r6,28(sp)
   2cab8:	d9400217 	ldw	r5,8(sp)
   2cabc:	003edd06 	br	2c634 <__alt_data_end+0xfffed234>
   2cac0:	143ff604 	addi	r16,r2,-40
   2cac4:	ac20983a 	sll	r16,r21,r16
   2cac8:	002d883a 	mov	r22,zero
   2cacc:	003ec106 	br	2c5d4 <__alt_data_end+0xfffed1d4>
   2cad0:	d9800715 	stw	r6,28(sp)
   2cad4:	d9c00215 	stw	r7,8(sp)
   2cad8:	da400415 	stw	r9,16(sp)
   2cadc:	002d7180 	call	2d718 <__clzsi2>
   2cae0:	10800804 	addi	r2,r2,32
   2cae4:	da400417 	ldw	r9,16(sp)
   2cae8:	d9c00217 	ldw	r7,8(sp)
   2caec:	d9800717 	ldw	r6,28(sp)
   2caf0:	003eae06 	br	2c5ac <__alt_data_end+0xfffed1ac>
   2caf4:	00c00044 	movi	r3,1
   2caf8:	1887c83a 	sub	r3,r3,r2
   2cafc:	01000e04 	movi	r4,56
   2cb00:	20fe8516 	blt	r4,r3,2c518 <__alt_data_end+0xfffed118>
   2cb04:	010007c4 	movi	r4,31
   2cb08:	20c01b16 	blt	r4,r3,2cb78 <__muldf3+0x7cc>
   2cb0c:	00800804 	movi	r2,32
   2cb10:	10c5c83a 	sub	r2,r2,r3
   2cb14:	888a983a 	sll	r5,r17,r2
   2cb18:	90c8d83a 	srl	r4,r18,r3
   2cb1c:	9084983a 	sll	r2,r18,r2
   2cb20:	88e2d83a 	srl	r17,r17,r3
   2cb24:	2906b03a 	or	r3,r5,r4
   2cb28:	1004c03a 	cmpne	r2,r2,zero
   2cb2c:	1886b03a 	or	r3,r3,r2
   2cb30:	188001cc 	andi	r2,r3,7
   2cb34:	10000726 	beq	r2,zero,2cb54 <__muldf3+0x7a8>
   2cb38:	188003cc 	andi	r2,r3,15
   2cb3c:	01000104 	movi	r4,4
   2cb40:	11000426 	beq	r2,r4,2cb54 <__muldf3+0x7a8>
   2cb44:	1805883a 	mov	r2,r3
   2cb48:	10c00104 	addi	r3,r2,4
   2cb4c:	1885803a 	cmpltu	r2,r3,r2
   2cb50:	88a3883a 	add	r17,r17,r2
   2cb54:	8880202c 	andhi	r2,r17,128
   2cb58:	10001c26 	beq	r2,zero,2cbcc <__muldf3+0x820>
   2cb5c:	3027883a 	mov	r19,r6
   2cb60:	00800044 	movi	r2,1
   2cb64:	0021883a 	mov	r16,zero
   2cb68:	002d883a 	mov	r22,zero
   2cb6c:	003e6e06 	br	2c528 <__alt_data_end+0xfffed128>
   2cb70:	4007883a 	mov	r3,r8
   2cb74:	003f9706 	br	2c9d4 <__alt_data_end+0xfffed5d4>
   2cb78:	017ff844 	movi	r5,-31
   2cb7c:	2885c83a 	sub	r2,r5,r2
   2cb80:	888ad83a 	srl	r5,r17,r2
   2cb84:	00800804 	movi	r2,32
   2cb88:	18801a26 	beq	r3,r2,2cbf4 <__muldf3+0x848>
   2cb8c:	01001004 	movi	r4,64
   2cb90:	20c7c83a 	sub	r3,r4,r3
   2cb94:	88e2983a 	sll	r17,r17,r3
   2cb98:	8ca4b03a 	or	r18,r17,r18
   2cb9c:	9004c03a 	cmpne	r2,r18,zero
   2cba0:	2884b03a 	or	r2,r5,r2
   2cba4:	144001cc 	andi	r17,r2,7
   2cba8:	88000d1e 	bne	r17,zero,2cbe0 <__muldf3+0x834>
   2cbac:	0021883a 	mov	r16,zero
   2cbb0:	102cd0fa 	srli	r22,r2,3
   2cbb4:	3027883a 	mov	r19,r6
   2cbb8:	0005883a 	mov	r2,zero
   2cbbc:	b46cb03a 	or	r22,r22,r17
   2cbc0:	003e5906 	br	2c528 <__alt_data_end+0xfffed128>
   2cbc4:	1007883a 	mov	r3,r2
   2cbc8:	0023883a 	mov	r17,zero
   2cbcc:	8820927a 	slli	r16,r17,9
   2cbd0:	1805883a 	mov	r2,r3
   2cbd4:	8822977a 	slli	r17,r17,29
   2cbd8:	8020d33a 	srli	r16,r16,12
   2cbdc:	003ff406 	br	2cbb0 <__alt_data_end+0xfffed7b0>
   2cbe0:	10c003cc 	andi	r3,r2,15
   2cbe4:	01000104 	movi	r4,4
   2cbe8:	193ff626 	beq	r3,r4,2cbc4 <__alt_data_end+0xfffed7c4>
   2cbec:	0023883a 	mov	r17,zero
   2cbf0:	003fd506 	br	2cb48 <__alt_data_end+0xfffed748>
   2cbf4:	0023883a 	mov	r17,zero
   2cbf8:	003fe706 	br	2cb98 <__alt_data_end+0xfffed798>
   2cbfc:	00800434 	movhi	r2,16
   2cc00:	8c000234 	orhi	r16,r17,8
   2cc04:	10bfffc4 	addi	r2,r2,-1
   2cc08:	3027883a 	mov	r19,r6
   2cc0c:	80a0703a 	and	r16,r16,r2
   2cc10:	902d883a 	mov	r22,r18
   2cc14:	003eac06 	br	2c6c8 <__alt_data_end+0xfffed2c8>

0002cc18 <__subdf3>:
   2cc18:	02000434 	movhi	r8,16
   2cc1c:	423fffc4 	addi	r8,r8,-1
   2cc20:	defffb04 	addi	sp,sp,-20
   2cc24:	2a14703a 	and	r10,r5,r8
   2cc28:	3812d53a 	srli	r9,r7,20
   2cc2c:	3a10703a 	and	r8,r7,r8
   2cc30:	2006d77a 	srli	r3,r4,29
   2cc34:	3004d77a 	srli	r2,r6,29
   2cc38:	dc000015 	stw	r16,0(sp)
   2cc3c:	501490fa 	slli	r10,r10,3
   2cc40:	2820d53a 	srli	r16,r5,20
   2cc44:	401090fa 	slli	r8,r8,3
   2cc48:	dc800215 	stw	r18,8(sp)
   2cc4c:	dc400115 	stw	r17,4(sp)
   2cc50:	dfc00415 	stw	ra,16(sp)
   2cc54:	202290fa 	slli	r17,r4,3
   2cc58:	dcc00315 	stw	r19,12(sp)
   2cc5c:	4a41ffcc 	andi	r9,r9,2047
   2cc60:	0101ffc4 	movi	r4,2047
   2cc64:	2824d7fa 	srli	r18,r5,31
   2cc68:	8401ffcc 	andi	r16,r16,2047
   2cc6c:	50c6b03a 	or	r3,r10,r3
   2cc70:	380ed7fa 	srli	r7,r7,31
   2cc74:	408ab03a 	or	r5,r8,r2
   2cc78:	300c90fa 	slli	r6,r6,3
   2cc7c:	49009626 	beq	r9,r4,2ced8 <__subdf3+0x2c0>
   2cc80:	39c0005c 	xori	r7,r7,1
   2cc84:	8245c83a 	sub	r2,r16,r9
   2cc88:	3c807426 	beq	r7,r18,2ce5c <__subdf3+0x244>
   2cc8c:	0080af0e 	bge	zero,r2,2cf4c <__subdf3+0x334>
   2cc90:	48002a1e 	bne	r9,zero,2cd3c <__subdf3+0x124>
   2cc94:	2988b03a 	or	r4,r5,r6
   2cc98:	20009a1e 	bne	r4,zero,2cf04 <__subdf3+0x2ec>
   2cc9c:	888001cc 	andi	r2,r17,7
   2cca0:	10000726 	beq	r2,zero,2ccc0 <__subdf3+0xa8>
   2cca4:	888003cc 	andi	r2,r17,15
   2cca8:	01000104 	movi	r4,4
   2ccac:	11000426 	beq	r2,r4,2ccc0 <__subdf3+0xa8>
   2ccb0:	890b883a 	add	r5,r17,r4
   2ccb4:	2c63803a 	cmpltu	r17,r5,r17
   2ccb8:	1c47883a 	add	r3,r3,r17
   2ccbc:	2823883a 	mov	r17,r5
   2ccc0:	1880202c 	andhi	r2,r3,128
   2ccc4:	10005926 	beq	r2,zero,2ce2c <__subdf3+0x214>
   2ccc8:	84000044 	addi	r16,r16,1
   2cccc:	0081ffc4 	movi	r2,2047
   2ccd0:	8080be26 	beq	r16,r2,2cfcc <__subdf3+0x3b4>
   2ccd4:	017fe034 	movhi	r5,65408
   2ccd8:	297fffc4 	addi	r5,r5,-1
   2ccdc:	1946703a 	and	r3,r3,r5
   2cce0:	1804977a 	slli	r2,r3,29
   2cce4:	1806927a 	slli	r3,r3,9
   2cce8:	8822d0fa 	srli	r17,r17,3
   2ccec:	8401ffcc 	andi	r16,r16,2047
   2ccf0:	180ad33a 	srli	r5,r3,12
   2ccf4:	9100004c 	andi	r4,r18,1
   2ccf8:	1444b03a 	or	r2,r2,r17
   2ccfc:	80c1ffcc 	andi	r3,r16,2047
   2cd00:	1820953a 	slli	r16,r3,20
   2cd04:	20c03fcc 	andi	r3,r4,255
   2cd08:	180897fa 	slli	r4,r3,31
   2cd0c:	00c00434 	movhi	r3,16
   2cd10:	18ffffc4 	addi	r3,r3,-1
   2cd14:	28c6703a 	and	r3,r5,r3
   2cd18:	1c06b03a 	or	r3,r3,r16
   2cd1c:	1906b03a 	or	r3,r3,r4
   2cd20:	dfc00417 	ldw	ra,16(sp)
   2cd24:	dcc00317 	ldw	r19,12(sp)
   2cd28:	dc800217 	ldw	r18,8(sp)
   2cd2c:	dc400117 	ldw	r17,4(sp)
   2cd30:	dc000017 	ldw	r16,0(sp)
   2cd34:	dec00504 	addi	sp,sp,20
   2cd38:	f800283a 	ret
   2cd3c:	0101ffc4 	movi	r4,2047
   2cd40:	813fd626 	beq	r16,r4,2cc9c <__alt_data_end+0xfffed89c>
   2cd44:	29402034 	orhi	r5,r5,128
   2cd48:	01000e04 	movi	r4,56
   2cd4c:	2080a316 	blt	r4,r2,2cfdc <__subdf3+0x3c4>
   2cd50:	010007c4 	movi	r4,31
   2cd54:	2080c616 	blt	r4,r2,2d070 <__subdf3+0x458>
   2cd58:	01000804 	movi	r4,32
   2cd5c:	2089c83a 	sub	r4,r4,r2
   2cd60:	2910983a 	sll	r8,r5,r4
   2cd64:	308ed83a 	srl	r7,r6,r2
   2cd68:	3108983a 	sll	r4,r6,r4
   2cd6c:	2884d83a 	srl	r2,r5,r2
   2cd70:	41ccb03a 	or	r6,r8,r7
   2cd74:	2008c03a 	cmpne	r4,r4,zero
   2cd78:	310cb03a 	or	r6,r6,r4
   2cd7c:	898dc83a 	sub	r6,r17,r6
   2cd80:	89a3803a 	cmpltu	r17,r17,r6
   2cd84:	1887c83a 	sub	r3,r3,r2
   2cd88:	1c47c83a 	sub	r3,r3,r17
   2cd8c:	3023883a 	mov	r17,r6
   2cd90:	1880202c 	andhi	r2,r3,128
   2cd94:	10002326 	beq	r2,zero,2ce24 <__subdf3+0x20c>
   2cd98:	04c02034 	movhi	r19,128
   2cd9c:	9cffffc4 	addi	r19,r19,-1
   2cda0:	1ce6703a 	and	r19,r3,r19
   2cda4:	98007a26 	beq	r19,zero,2cf90 <__subdf3+0x378>
   2cda8:	9809883a 	mov	r4,r19
   2cdac:	002d7180 	call	2d718 <__clzsi2>
   2cdb0:	113ffe04 	addi	r4,r2,-8
   2cdb4:	00c007c4 	movi	r3,31
   2cdb8:	19007b16 	blt	r3,r4,2cfa8 <__subdf3+0x390>
   2cdbc:	00800804 	movi	r2,32
   2cdc0:	1105c83a 	sub	r2,r2,r4
   2cdc4:	8884d83a 	srl	r2,r17,r2
   2cdc8:	9906983a 	sll	r3,r19,r4
   2cdcc:	8922983a 	sll	r17,r17,r4
   2cdd0:	10c4b03a 	or	r2,r2,r3
   2cdd4:	24007816 	blt	r4,r16,2cfb8 <__subdf3+0x3a0>
   2cdd8:	2421c83a 	sub	r16,r4,r16
   2cddc:	80c00044 	addi	r3,r16,1
   2cde0:	010007c4 	movi	r4,31
   2cde4:	20c09516 	blt	r4,r3,2d03c <__subdf3+0x424>
   2cde8:	01400804 	movi	r5,32
   2cdec:	28cbc83a 	sub	r5,r5,r3
   2cdf0:	88c8d83a 	srl	r4,r17,r3
   2cdf4:	8962983a 	sll	r17,r17,r5
   2cdf8:	114a983a 	sll	r5,r2,r5
   2cdfc:	10c6d83a 	srl	r3,r2,r3
   2ce00:	8804c03a 	cmpne	r2,r17,zero
   2ce04:	290ab03a 	or	r5,r5,r4
   2ce08:	28a2b03a 	or	r17,r5,r2
   2ce0c:	0021883a 	mov	r16,zero
   2ce10:	003fa206 	br	2cc9c <__alt_data_end+0xfffed89c>
   2ce14:	2090b03a 	or	r8,r4,r2
   2ce18:	40018e26 	beq	r8,zero,2d454 <__subdf3+0x83c>
   2ce1c:	1007883a 	mov	r3,r2
   2ce20:	2023883a 	mov	r17,r4
   2ce24:	888001cc 	andi	r2,r17,7
   2ce28:	103f9e1e 	bne	r2,zero,2cca4 <__alt_data_end+0xfffed8a4>
   2ce2c:	1804977a 	slli	r2,r3,29
   2ce30:	8822d0fa 	srli	r17,r17,3
   2ce34:	1810d0fa 	srli	r8,r3,3
   2ce38:	9100004c 	andi	r4,r18,1
   2ce3c:	1444b03a 	or	r2,r2,r17
   2ce40:	00c1ffc4 	movi	r3,2047
   2ce44:	80c02826 	beq	r16,r3,2cee8 <__subdf3+0x2d0>
   2ce48:	01400434 	movhi	r5,16
   2ce4c:	297fffc4 	addi	r5,r5,-1
   2ce50:	80e0703a 	and	r16,r16,r3
   2ce54:	414a703a 	and	r5,r8,r5
   2ce58:	003fa806 	br	2ccfc <__alt_data_end+0xfffed8fc>
   2ce5c:	0080630e 	bge	zero,r2,2cfec <__subdf3+0x3d4>
   2ce60:	48003026 	beq	r9,zero,2cf24 <__subdf3+0x30c>
   2ce64:	0101ffc4 	movi	r4,2047
   2ce68:	813f8c26 	beq	r16,r4,2cc9c <__alt_data_end+0xfffed89c>
   2ce6c:	29402034 	orhi	r5,r5,128
   2ce70:	01000e04 	movi	r4,56
   2ce74:	2080a90e 	bge	r4,r2,2d11c <__subdf3+0x504>
   2ce78:	298cb03a 	or	r6,r5,r6
   2ce7c:	3012c03a 	cmpne	r9,r6,zero
   2ce80:	0005883a 	mov	r2,zero
   2ce84:	4c53883a 	add	r9,r9,r17
   2ce88:	4c63803a 	cmpltu	r17,r9,r17
   2ce8c:	10c7883a 	add	r3,r2,r3
   2ce90:	88c7883a 	add	r3,r17,r3
   2ce94:	4823883a 	mov	r17,r9
   2ce98:	1880202c 	andhi	r2,r3,128
   2ce9c:	1000d026 	beq	r2,zero,2d1e0 <__subdf3+0x5c8>
   2cea0:	84000044 	addi	r16,r16,1
   2cea4:	0081ffc4 	movi	r2,2047
   2cea8:	8080fe26 	beq	r16,r2,2d2a4 <__subdf3+0x68c>
   2ceac:	00bfe034 	movhi	r2,65408
   2ceb0:	10bfffc4 	addi	r2,r2,-1
   2ceb4:	1886703a 	and	r3,r3,r2
   2ceb8:	880ad07a 	srli	r5,r17,1
   2cebc:	180497fa 	slli	r2,r3,31
   2cec0:	8900004c 	andi	r4,r17,1
   2cec4:	2922b03a 	or	r17,r5,r4
   2cec8:	1806d07a 	srli	r3,r3,1
   2cecc:	1462b03a 	or	r17,r2,r17
   2ced0:	3825883a 	mov	r18,r7
   2ced4:	003f7106 	br	2cc9c <__alt_data_end+0xfffed89c>
   2ced8:	2984b03a 	or	r2,r5,r6
   2cedc:	103f6826 	beq	r2,zero,2cc80 <__alt_data_end+0xfffed880>
   2cee0:	39c03fcc 	andi	r7,r7,255
   2cee4:	003f6706 	br	2cc84 <__alt_data_end+0xfffed884>
   2cee8:	4086b03a 	or	r3,r8,r2
   2ceec:	18015226 	beq	r3,zero,2d438 <__subdf3+0x820>
   2cef0:	00c00434 	movhi	r3,16
   2cef4:	41400234 	orhi	r5,r8,8
   2cef8:	18ffffc4 	addi	r3,r3,-1
   2cefc:	28ca703a 	and	r5,r5,r3
   2cf00:	003f7e06 	br	2ccfc <__alt_data_end+0xfffed8fc>
   2cf04:	10bfffc4 	addi	r2,r2,-1
   2cf08:	1000491e 	bne	r2,zero,2d030 <__subdf3+0x418>
   2cf0c:	898fc83a 	sub	r7,r17,r6
   2cf10:	89e3803a 	cmpltu	r17,r17,r7
   2cf14:	1947c83a 	sub	r3,r3,r5
   2cf18:	1c47c83a 	sub	r3,r3,r17
   2cf1c:	3823883a 	mov	r17,r7
   2cf20:	003f9b06 	br	2cd90 <__alt_data_end+0xfffed990>
   2cf24:	2988b03a 	or	r4,r5,r6
   2cf28:	203f5c26 	beq	r4,zero,2cc9c <__alt_data_end+0xfffed89c>
   2cf2c:	10bfffc4 	addi	r2,r2,-1
   2cf30:	1000931e 	bne	r2,zero,2d180 <__subdf3+0x568>
   2cf34:	898d883a 	add	r6,r17,r6
   2cf38:	3463803a 	cmpltu	r17,r6,r17
   2cf3c:	1947883a 	add	r3,r3,r5
   2cf40:	88c7883a 	add	r3,r17,r3
   2cf44:	3023883a 	mov	r17,r6
   2cf48:	003fd306 	br	2ce98 <__alt_data_end+0xfffeda98>
   2cf4c:	1000541e 	bne	r2,zero,2d0a0 <__subdf3+0x488>
   2cf50:	80800044 	addi	r2,r16,1
   2cf54:	1081ffcc 	andi	r2,r2,2047
   2cf58:	01000044 	movi	r4,1
   2cf5c:	2080a20e 	bge	r4,r2,2d1e8 <__subdf3+0x5d0>
   2cf60:	8989c83a 	sub	r4,r17,r6
   2cf64:	8905803a 	cmpltu	r2,r17,r4
   2cf68:	1967c83a 	sub	r19,r3,r5
   2cf6c:	98a7c83a 	sub	r19,r19,r2
   2cf70:	9880202c 	andhi	r2,r19,128
   2cf74:	10006326 	beq	r2,zero,2d104 <__subdf3+0x4ec>
   2cf78:	3463c83a 	sub	r17,r6,r17
   2cf7c:	28c7c83a 	sub	r3,r5,r3
   2cf80:	344d803a 	cmpltu	r6,r6,r17
   2cf84:	19a7c83a 	sub	r19,r3,r6
   2cf88:	3825883a 	mov	r18,r7
   2cf8c:	983f861e 	bne	r19,zero,2cda8 <__alt_data_end+0xfffed9a8>
   2cf90:	8809883a 	mov	r4,r17
   2cf94:	002d7180 	call	2d718 <__clzsi2>
   2cf98:	10800804 	addi	r2,r2,32
   2cf9c:	113ffe04 	addi	r4,r2,-8
   2cfa0:	00c007c4 	movi	r3,31
   2cfa4:	193f850e 	bge	r3,r4,2cdbc <__alt_data_end+0xfffed9bc>
   2cfa8:	10bff604 	addi	r2,r2,-40
   2cfac:	8884983a 	sll	r2,r17,r2
   2cfb0:	0023883a 	mov	r17,zero
   2cfb4:	243f880e 	bge	r4,r16,2cdd8 <__alt_data_end+0xfffed9d8>
   2cfb8:	00ffe034 	movhi	r3,65408
   2cfbc:	18ffffc4 	addi	r3,r3,-1
   2cfc0:	8121c83a 	sub	r16,r16,r4
   2cfc4:	10c6703a 	and	r3,r2,r3
   2cfc8:	003f3406 	br	2cc9c <__alt_data_end+0xfffed89c>
   2cfcc:	9100004c 	andi	r4,r18,1
   2cfd0:	000b883a 	mov	r5,zero
   2cfd4:	0005883a 	mov	r2,zero
   2cfd8:	003f4806 	br	2ccfc <__alt_data_end+0xfffed8fc>
   2cfdc:	298cb03a 	or	r6,r5,r6
   2cfe0:	300cc03a 	cmpne	r6,r6,zero
   2cfe4:	0005883a 	mov	r2,zero
   2cfe8:	003f6406 	br	2cd7c <__alt_data_end+0xfffed97c>
   2cfec:	10009a1e 	bne	r2,zero,2d258 <__subdf3+0x640>
   2cff0:	82400044 	addi	r9,r16,1
   2cff4:	4881ffcc 	andi	r2,r9,2047
   2cff8:	02800044 	movi	r10,1
   2cffc:	5080670e 	bge	r10,r2,2d19c <__subdf3+0x584>
   2d000:	0081ffc4 	movi	r2,2047
   2d004:	4880af26 	beq	r9,r2,2d2c4 <__subdf3+0x6ac>
   2d008:	898d883a 	add	r6,r17,r6
   2d00c:	1945883a 	add	r2,r3,r5
   2d010:	3447803a 	cmpltu	r3,r6,r17
   2d014:	1887883a 	add	r3,r3,r2
   2d018:	182297fa 	slli	r17,r3,31
   2d01c:	300cd07a 	srli	r6,r6,1
   2d020:	1806d07a 	srli	r3,r3,1
   2d024:	4821883a 	mov	r16,r9
   2d028:	89a2b03a 	or	r17,r17,r6
   2d02c:	003f1b06 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d030:	0101ffc4 	movi	r4,2047
   2d034:	813f441e 	bne	r16,r4,2cd48 <__alt_data_end+0xfffed948>
   2d038:	003f1806 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d03c:	843ff844 	addi	r16,r16,-31
   2d040:	01400804 	movi	r5,32
   2d044:	1408d83a 	srl	r4,r2,r16
   2d048:	19405026 	beq	r3,r5,2d18c <__subdf3+0x574>
   2d04c:	01401004 	movi	r5,64
   2d050:	28c7c83a 	sub	r3,r5,r3
   2d054:	10c4983a 	sll	r2,r2,r3
   2d058:	88a2b03a 	or	r17,r17,r2
   2d05c:	8822c03a 	cmpne	r17,r17,zero
   2d060:	2462b03a 	or	r17,r4,r17
   2d064:	0007883a 	mov	r3,zero
   2d068:	0021883a 	mov	r16,zero
   2d06c:	003f6d06 	br	2ce24 <__alt_data_end+0xfffeda24>
   2d070:	11fff804 	addi	r7,r2,-32
   2d074:	01000804 	movi	r4,32
   2d078:	29ced83a 	srl	r7,r5,r7
   2d07c:	11004526 	beq	r2,r4,2d194 <__subdf3+0x57c>
   2d080:	01001004 	movi	r4,64
   2d084:	2089c83a 	sub	r4,r4,r2
   2d088:	2904983a 	sll	r2,r5,r4
   2d08c:	118cb03a 	or	r6,r2,r6
   2d090:	300cc03a 	cmpne	r6,r6,zero
   2d094:	398cb03a 	or	r6,r7,r6
   2d098:	0005883a 	mov	r2,zero
   2d09c:	003f3706 	br	2cd7c <__alt_data_end+0xfffed97c>
   2d0a0:	80002a26 	beq	r16,zero,2d14c <__subdf3+0x534>
   2d0a4:	0101ffc4 	movi	r4,2047
   2d0a8:	49006626 	beq	r9,r4,2d244 <__subdf3+0x62c>
   2d0ac:	0085c83a 	sub	r2,zero,r2
   2d0b0:	18c02034 	orhi	r3,r3,128
   2d0b4:	01000e04 	movi	r4,56
   2d0b8:	20807e16 	blt	r4,r2,2d2b4 <__subdf3+0x69c>
   2d0bc:	010007c4 	movi	r4,31
   2d0c0:	2080e716 	blt	r4,r2,2d460 <__subdf3+0x848>
   2d0c4:	01000804 	movi	r4,32
   2d0c8:	2089c83a 	sub	r4,r4,r2
   2d0cc:	1914983a 	sll	r10,r3,r4
   2d0d0:	8890d83a 	srl	r8,r17,r2
   2d0d4:	8908983a 	sll	r4,r17,r4
   2d0d8:	1884d83a 	srl	r2,r3,r2
   2d0dc:	5222b03a 	or	r17,r10,r8
   2d0e0:	2006c03a 	cmpne	r3,r4,zero
   2d0e4:	88e2b03a 	or	r17,r17,r3
   2d0e8:	3463c83a 	sub	r17,r6,r17
   2d0ec:	2885c83a 	sub	r2,r5,r2
   2d0f0:	344d803a 	cmpltu	r6,r6,r17
   2d0f4:	1187c83a 	sub	r3,r2,r6
   2d0f8:	4821883a 	mov	r16,r9
   2d0fc:	3825883a 	mov	r18,r7
   2d100:	003f2306 	br	2cd90 <__alt_data_end+0xfffed990>
   2d104:	24d0b03a 	or	r8,r4,r19
   2d108:	40001b1e 	bne	r8,zero,2d178 <__subdf3+0x560>
   2d10c:	0005883a 	mov	r2,zero
   2d110:	0009883a 	mov	r4,zero
   2d114:	0021883a 	mov	r16,zero
   2d118:	003f4906 	br	2ce40 <__alt_data_end+0xfffeda40>
   2d11c:	010007c4 	movi	r4,31
   2d120:	20803a16 	blt	r4,r2,2d20c <__subdf3+0x5f4>
   2d124:	01000804 	movi	r4,32
   2d128:	2089c83a 	sub	r4,r4,r2
   2d12c:	2912983a 	sll	r9,r5,r4
   2d130:	3090d83a 	srl	r8,r6,r2
   2d134:	3108983a 	sll	r4,r6,r4
   2d138:	2884d83a 	srl	r2,r5,r2
   2d13c:	4a12b03a 	or	r9,r9,r8
   2d140:	2008c03a 	cmpne	r4,r4,zero
   2d144:	4912b03a 	or	r9,r9,r4
   2d148:	003f4e06 	br	2ce84 <__alt_data_end+0xfffeda84>
   2d14c:	1c48b03a 	or	r4,r3,r17
   2d150:	20003c26 	beq	r4,zero,2d244 <__subdf3+0x62c>
   2d154:	0084303a 	nor	r2,zero,r2
   2d158:	1000381e 	bne	r2,zero,2d23c <__subdf3+0x624>
   2d15c:	3463c83a 	sub	r17,r6,r17
   2d160:	28c5c83a 	sub	r2,r5,r3
   2d164:	344d803a 	cmpltu	r6,r6,r17
   2d168:	1187c83a 	sub	r3,r2,r6
   2d16c:	4821883a 	mov	r16,r9
   2d170:	3825883a 	mov	r18,r7
   2d174:	003f0606 	br	2cd90 <__alt_data_end+0xfffed990>
   2d178:	2023883a 	mov	r17,r4
   2d17c:	003f0906 	br	2cda4 <__alt_data_end+0xfffed9a4>
   2d180:	0101ffc4 	movi	r4,2047
   2d184:	813f3a1e 	bne	r16,r4,2ce70 <__alt_data_end+0xfffeda70>
   2d188:	003ec406 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d18c:	0005883a 	mov	r2,zero
   2d190:	003fb106 	br	2d058 <__alt_data_end+0xfffedc58>
   2d194:	0005883a 	mov	r2,zero
   2d198:	003fbc06 	br	2d08c <__alt_data_end+0xfffedc8c>
   2d19c:	1c44b03a 	or	r2,r3,r17
   2d1a0:	80008e1e 	bne	r16,zero,2d3dc <__subdf3+0x7c4>
   2d1a4:	1000c826 	beq	r2,zero,2d4c8 <__subdf3+0x8b0>
   2d1a8:	2984b03a 	or	r2,r5,r6
   2d1ac:	103ebb26 	beq	r2,zero,2cc9c <__alt_data_end+0xfffed89c>
   2d1b0:	8989883a 	add	r4,r17,r6
   2d1b4:	1945883a 	add	r2,r3,r5
   2d1b8:	2447803a 	cmpltu	r3,r4,r17
   2d1bc:	1887883a 	add	r3,r3,r2
   2d1c0:	1880202c 	andhi	r2,r3,128
   2d1c4:	2023883a 	mov	r17,r4
   2d1c8:	103f1626 	beq	r2,zero,2ce24 <__alt_data_end+0xfffeda24>
   2d1cc:	00bfe034 	movhi	r2,65408
   2d1d0:	10bfffc4 	addi	r2,r2,-1
   2d1d4:	5021883a 	mov	r16,r10
   2d1d8:	1886703a 	and	r3,r3,r2
   2d1dc:	003eaf06 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d1e0:	3825883a 	mov	r18,r7
   2d1e4:	003f0f06 	br	2ce24 <__alt_data_end+0xfffeda24>
   2d1e8:	1c44b03a 	or	r2,r3,r17
   2d1ec:	8000251e 	bne	r16,zero,2d284 <__subdf3+0x66c>
   2d1f0:	1000661e 	bne	r2,zero,2d38c <__subdf3+0x774>
   2d1f4:	2990b03a 	or	r8,r5,r6
   2d1f8:	40009626 	beq	r8,zero,2d454 <__subdf3+0x83c>
   2d1fc:	2807883a 	mov	r3,r5
   2d200:	3023883a 	mov	r17,r6
   2d204:	3825883a 	mov	r18,r7
   2d208:	003ea406 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d20c:	127ff804 	addi	r9,r2,-32
   2d210:	01000804 	movi	r4,32
   2d214:	2a52d83a 	srl	r9,r5,r9
   2d218:	11008c26 	beq	r2,r4,2d44c <__subdf3+0x834>
   2d21c:	01001004 	movi	r4,64
   2d220:	2085c83a 	sub	r2,r4,r2
   2d224:	2884983a 	sll	r2,r5,r2
   2d228:	118cb03a 	or	r6,r2,r6
   2d22c:	300cc03a 	cmpne	r6,r6,zero
   2d230:	4992b03a 	or	r9,r9,r6
   2d234:	0005883a 	mov	r2,zero
   2d238:	003f1206 	br	2ce84 <__alt_data_end+0xfffeda84>
   2d23c:	0101ffc4 	movi	r4,2047
   2d240:	493f9c1e 	bne	r9,r4,2d0b4 <__alt_data_end+0xfffedcb4>
   2d244:	2807883a 	mov	r3,r5
   2d248:	3023883a 	mov	r17,r6
   2d24c:	4821883a 	mov	r16,r9
   2d250:	3825883a 	mov	r18,r7
   2d254:	003e9106 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d258:	80001f1e 	bne	r16,zero,2d2d8 <__subdf3+0x6c0>
   2d25c:	1c48b03a 	or	r4,r3,r17
   2d260:	20005a26 	beq	r4,zero,2d3cc <__subdf3+0x7b4>
   2d264:	0084303a 	nor	r2,zero,r2
   2d268:	1000561e 	bne	r2,zero,2d3c4 <__subdf3+0x7ac>
   2d26c:	89a3883a 	add	r17,r17,r6
   2d270:	1945883a 	add	r2,r3,r5
   2d274:	898d803a 	cmpltu	r6,r17,r6
   2d278:	3087883a 	add	r3,r6,r2
   2d27c:	4821883a 	mov	r16,r9
   2d280:	003f0506 	br	2ce98 <__alt_data_end+0xfffeda98>
   2d284:	10002b1e 	bne	r2,zero,2d334 <__subdf3+0x71c>
   2d288:	2984b03a 	or	r2,r5,r6
   2d28c:	10008026 	beq	r2,zero,2d490 <__subdf3+0x878>
   2d290:	2807883a 	mov	r3,r5
   2d294:	3023883a 	mov	r17,r6
   2d298:	3825883a 	mov	r18,r7
   2d29c:	0401ffc4 	movi	r16,2047
   2d2a0:	003e7e06 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d2a4:	3809883a 	mov	r4,r7
   2d2a8:	0011883a 	mov	r8,zero
   2d2ac:	0005883a 	mov	r2,zero
   2d2b0:	003ee306 	br	2ce40 <__alt_data_end+0xfffeda40>
   2d2b4:	1c62b03a 	or	r17,r3,r17
   2d2b8:	8822c03a 	cmpne	r17,r17,zero
   2d2bc:	0005883a 	mov	r2,zero
   2d2c0:	003f8906 	br	2d0e8 <__alt_data_end+0xfffedce8>
   2d2c4:	3809883a 	mov	r4,r7
   2d2c8:	4821883a 	mov	r16,r9
   2d2cc:	0011883a 	mov	r8,zero
   2d2d0:	0005883a 	mov	r2,zero
   2d2d4:	003eda06 	br	2ce40 <__alt_data_end+0xfffeda40>
   2d2d8:	0101ffc4 	movi	r4,2047
   2d2dc:	49003b26 	beq	r9,r4,2d3cc <__subdf3+0x7b4>
   2d2e0:	0085c83a 	sub	r2,zero,r2
   2d2e4:	18c02034 	orhi	r3,r3,128
   2d2e8:	01000e04 	movi	r4,56
   2d2ec:	20806e16 	blt	r4,r2,2d4a8 <__subdf3+0x890>
   2d2f0:	010007c4 	movi	r4,31
   2d2f4:	20807716 	blt	r4,r2,2d4d4 <__subdf3+0x8bc>
   2d2f8:	01000804 	movi	r4,32
   2d2fc:	2089c83a 	sub	r4,r4,r2
   2d300:	1914983a 	sll	r10,r3,r4
   2d304:	8890d83a 	srl	r8,r17,r2
   2d308:	8908983a 	sll	r4,r17,r4
   2d30c:	1884d83a 	srl	r2,r3,r2
   2d310:	5222b03a 	or	r17,r10,r8
   2d314:	2006c03a 	cmpne	r3,r4,zero
   2d318:	88e2b03a 	or	r17,r17,r3
   2d31c:	89a3883a 	add	r17,r17,r6
   2d320:	1145883a 	add	r2,r2,r5
   2d324:	898d803a 	cmpltu	r6,r17,r6
   2d328:	3087883a 	add	r3,r6,r2
   2d32c:	4821883a 	mov	r16,r9
   2d330:	003ed906 	br	2ce98 <__alt_data_end+0xfffeda98>
   2d334:	2984b03a 	or	r2,r5,r6
   2d338:	10004226 	beq	r2,zero,2d444 <__subdf3+0x82c>
   2d33c:	1808d0fa 	srli	r4,r3,3
   2d340:	8822d0fa 	srli	r17,r17,3
   2d344:	1806977a 	slli	r3,r3,29
   2d348:	2080022c 	andhi	r2,r4,8
   2d34c:	1c62b03a 	or	r17,r3,r17
   2d350:	10000826 	beq	r2,zero,2d374 <__subdf3+0x75c>
   2d354:	2812d0fa 	srli	r9,r5,3
   2d358:	4880022c 	andhi	r2,r9,8
   2d35c:	1000051e 	bne	r2,zero,2d374 <__subdf3+0x75c>
   2d360:	300cd0fa 	srli	r6,r6,3
   2d364:	2804977a 	slli	r2,r5,29
   2d368:	4809883a 	mov	r4,r9
   2d36c:	3825883a 	mov	r18,r7
   2d370:	11a2b03a 	or	r17,r2,r6
   2d374:	8806d77a 	srli	r3,r17,29
   2d378:	200890fa 	slli	r4,r4,3
   2d37c:	882290fa 	slli	r17,r17,3
   2d380:	0401ffc4 	movi	r16,2047
   2d384:	1906b03a 	or	r3,r3,r4
   2d388:	003e4406 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d38c:	2984b03a 	or	r2,r5,r6
   2d390:	103e4226 	beq	r2,zero,2cc9c <__alt_data_end+0xfffed89c>
   2d394:	8989c83a 	sub	r4,r17,r6
   2d398:	8911803a 	cmpltu	r8,r17,r4
   2d39c:	1945c83a 	sub	r2,r3,r5
   2d3a0:	1205c83a 	sub	r2,r2,r8
   2d3a4:	1200202c 	andhi	r8,r2,128
   2d3a8:	403e9a26 	beq	r8,zero,2ce14 <__alt_data_end+0xfffeda14>
   2d3ac:	3463c83a 	sub	r17,r6,r17
   2d3b0:	28c5c83a 	sub	r2,r5,r3
   2d3b4:	344d803a 	cmpltu	r6,r6,r17
   2d3b8:	1187c83a 	sub	r3,r2,r6
   2d3bc:	3825883a 	mov	r18,r7
   2d3c0:	003e3606 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d3c4:	0101ffc4 	movi	r4,2047
   2d3c8:	493fc71e 	bne	r9,r4,2d2e8 <__alt_data_end+0xfffedee8>
   2d3cc:	2807883a 	mov	r3,r5
   2d3d0:	3023883a 	mov	r17,r6
   2d3d4:	4821883a 	mov	r16,r9
   2d3d8:	003e3006 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d3dc:	10003626 	beq	r2,zero,2d4b8 <__subdf3+0x8a0>
   2d3e0:	2984b03a 	or	r2,r5,r6
   2d3e4:	10001726 	beq	r2,zero,2d444 <__subdf3+0x82c>
   2d3e8:	1808d0fa 	srli	r4,r3,3
   2d3ec:	8822d0fa 	srli	r17,r17,3
   2d3f0:	1806977a 	slli	r3,r3,29
   2d3f4:	2080022c 	andhi	r2,r4,8
   2d3f8:	1c62b03a 	or	r17,r3,r17
   2d3fc:	10000726 	beq	r2,zero,2d41c <__subdf3+0x804>
   2d400:	2812d0fa 	srli	r9,r5,3
   2d404:	4880022c 	andhi	r2,r9,8
   2d408:	1000041e 	bne	r2,zero,2d41c <__subdf3+0x804>
   2d40c:	300cd0fa 	srli	r6,r6,3
   2d410:	2804977a 	slli	r2,r5,29
   2d414:	4809883a 	mov	r4,r9
   2d418:	11a2b03a 	or	r17,r2,r6
   2d41c:	8806d77a 	srli	r3,r17,29
   2d420:	200890fa 	slli	r4,r4,3
   2d424:	882290fa 	slli	r17,r17,3
   2d428:	3825883a 	mov	r18,r7
   2d42c:	1906b03a 	or	r3,r3,r4
   2d430:	0401ffc4 	movi	r16,2047
   2d434:	003e1906 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d438:	000b883a 	mov	r5,zero
   2d43c:	0005883a 	mov	r2,zero
   2d440:	003e2e06 	br	2ccfc <__alt_data_end+0xfffed8fc>
   2d444:	0401ffc4 	movi	r16,2047
   2d448:	003e1406 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d44c:	0005883a 	mov	r2,zero
   2d450:	003f7506 	br	2d228 <__alt_data_end+0xfffede28>
   2d454:	0005883a 	mov	r2,zero
   2d458:	0009883a 	mov	r4,zero
   2d45c:	003e7806 	br	2ce40 <__alt_data_end+0xfffeda40>
   2d460:	123ff804 	addi	r8,r2,-32
   2d464:	01000804 	movi	r4,32
   2d468:	1a10d83a 	srl	r8,r3,r8
   2d46c:	11002526 	beq	r2,r4,2d504 <__subdf3+0x8ec>
   2d470:	01001004 	movi	r4,64
   2d474:	2085c83a 	sub	r2,r4,r2
   2d478:	1884983a 	sll	r2,r3,r2
   2d47c:	1444b03a 	or	r2,r2,r17
   2d480:	1004c03a 	cmpne	r2,r2,zero
   2d484:	40a2b03a 	or	r17,r8,r2
   2d488:	0005883a 	mov	r2,zero
   2d48c:	003f1606 	br	2d0e8 <__alt_data_end+0xfffedce8>
   2d490:	02000434 	movhi	r8,16
   2d494:	0009883a 	mov	r4,zero
   2d498:	423fffc4 	addi	r8,r8,-1
   2d49c:	00bfffc4 	movi	r2,-1
   2d4a0:	0401ffc4 	movi	r16,2047
   2d4a4:	003e6606 	br	2ce40 <__alt_data_end+0xfffeda40>
   2d4a8:	1c62b03a 	or	r17,r3,r17
   2d4ac:	8822c03a 	cmpne	r17,r17,zero
   2d4b0:	0005883a 	mov	r2,zero
   2d4b4:	003f9906 	br	2d31c <__alt_data_end+0xfffedf1c>
   2d4b8:	2807883a 	mov	r3,r5
   2d4bc:	3023883a 	mov	r17,r6
   2d4c0:	0401ffc4 	movi	r16,2047
   2d4c4:	003df506 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d4c8:	2807883a 	mov	r3,r5
   2d4cc:	3023883a 	mov	r17,r6
   2d4d0:	003df206 	br	2cc9c <__alt_data_end+0xfffed89c>
   2d4d4:	123ff804 	addi	r8,r2,-32
   2d4d8:	01000804 	movi	r4,32
   2d4dc:	1a10d83a 	srl	r8,r3,r8
   2d4e0:	11000a26 	beq	r2,r4,2d50c <__subdf3+0x8f4>
   2d4e4:	01001004 	movi	r4,64
   2d4e8:	2085c83a 	sub	r2,r4,r2
   2d4ec:	1884983a 	sll	r2,r3,r2
   2d4f0:	1444b03a 	or	r2,r2,r17
   2d4f4:	1004c03a 	cmpne	r2,r2,zero
   2d4f8:	40a2b03a 	or	r17,r8,r2
   2d4fc:	0005883a 	mov	r2,zero
   2d500:	003f8606 	br	2d31c <__alt_data_end+0xfffedf1c>
   2d504:	0005883a 	mov	r2,zero
   2d508:	003fdc06 	br	2d47c <__alt_data_end+0xfffee07c>
   2d50c:	0005883a 	mov	r2,zero
   2d510:	003ff706 	br	2d4f0 <__alt_data_end+0xfffee0f0>

0002d514 <__fixdfsi>:
   2d514:	280cd53a 	srli	r6,r5,20
   2d518:	00c00434 	movhi	r3,16
   2d51c:	18ffffc4 	addi	r3,r3,-1
   2d520:	3181ffcc 	andi	r6,r6,2047
   2d524:	01c0ff84 	movi	r7,1022
   2d528:	28c6703a 	and	r3,r5,r3
   2d52c:	280ad7fa 	srli	r5,r5,31
   2d530:	3980120e 	bge	r7,r6,2d57c <__fixdfsi+0x68>
   2d534:	00810744 	movi	r2,1053
   2d538:	11800c16 	blt	r2,r6,2d56c <__fixdfsi+0x58>
   2d53c:	00810cc4 	movi	r2,1075
   2d540:	1185c83a 	sub	r2,r2,r6
   2d544:	01c007c4 	movi	r7,31
   2d548:	18c00434 	orhi	r3,r3,16
   2d54c:	38800d16 	blt	r7,r2,2d584 <__fixdfsi+0x70>
   2d550:	31befb44 	addi	r6,r6,-1043
   2d554:	2084d83a 	srl	r2,r4,r2
   2d558:	1986983a 	sll	r3,r3,r6
   2d55c:	1884b03a 	or	r2,r3,r2
   2d560:	28000726 	beq	r5,zero,2d580 <__fixdfsi+0x6c>
   2d564:	0085c83a 	sub	r2,zero,r2
   2d568:	f800283a 	ret
   2d56c:	00a00034 	movhi	r2,32768
   2d570:	10bfffc4 	addi	r2,r2,-1
   2d574:	2885883a 	add	r2,r5,r2
   2d578:	f800283a 	ret
   2d57c:	0005883a 	mov	r2,zero
   2d580:	f800283a 	ret
   2d584:	008104c4 	movi	r2,1043
   2d588:	1185c83a 	sub	r2,r2,r6
   2d58c:	1884d83a 	srl	r2,r3,r2
   2d590:	003ff306 	br	2d560 <__alt_data_end+0xfffee160>

0002d594 <__floatsidf>:
   2d594:	defffd04 	addi	sp,sp,-12
   2d598:	dfc00215 	stw	ra,8(sp)
   2d59c:	dc400115 	stw	r17,4(sp)
   2d5a0:	dc000015 	stw	r16,0(sp)
   2d5a4:	20002b26 	beq	r4,zero,2d654 <__floatsidf+0xc0>
   2d5a8:	2023883a 	mov	r17,r4
   2d5ac:	2020d7fa 	srli	r16,r4,31
   2d5b0:	20002d16 	blt	r4,zero,2d668 <__floatsidf+0xd4>
   2d5b4:	8809883a 	mov	r4,r17
   2d5b8:	002d7180 	call	2d718 <__clzsi2>
   2d5bc:	01410784 	movi	r5,1054
   2d5c0:	288bc83a 	sub	r5,r5,r2
   2d5c4:	01010cc4 	movi	r4,1075
   2d5c8:	2149c83a 	sub	r4,r4,r5
   2d5cc:	00c007c4 	movi	r3,31
   2d5d0:	1900160e 	bge	r3,r4,2d62c <__floatsidf+0x98>
   2d5d4:	00c104c4 	movi	r3,1043
   2d5d8:	1947c83a 	sub	r3,r3,r5
   2d5dc:	88c6983a 	sll	r3,r17,r3
   2d5e0:	00800434 	movhi	r2,16
   2d5e4:	10bfffc4 	addi	r2,r2,-1
   2d5e8:	1886703a 	and	r3,r3,r2
   2d5ec:	2941ffcc 	andi	r5,r5,2047
   2d5f0:	800d883a 	mov	r6,r16
   2d5f4:	0005883a 	mov	r2,zero
   2d5f8:	280a953a 	slli	r5,r5,20
   2d5fc:	31803fcc 	andi	r6,r6,255
   2d600:	01000434 	movhi	r4,16
   2d604:	300c97fa 	slli	r6,r6,31
   2d608:	213fffc4 	addi	r4,r4,-1
   2d60c:	1906703a 	and	r3,r3,r4
   2d610:	1946b03a 	or	r3,r3,r5
   2d614:	1986b03a 	or	r3,r3,r6
   2d618:	dfc00217 	ldw	ra,8(sp)
   2d61c:	dc400117 	ldw	r17,4(sp)
   2d620:	dc000017 	ldw	r16,0(sp)
   2d624:	dec00304 	addi	sp,sp,12
   2d628:	f800283a 	ret
   2d62c:	00c002c4 	movi	r3,11
   2d630:	1887c83a 	sub	r3,r3,r2
   2d634:	88c6d83a 	srl	r3,r17,r3
   2d638:	8904983a 	sll	r2,r17,r4
   2d63c:	01000434 	movhi	r4,16
   2d640:	213fffc4 	addi	r4,r4,-1
   2d644:	2941ffcc 	andi	r5,r5,2047
   2d648:	1906703a 	and	r3,r3,r4
   2d64c:	800d883a 	mov	r6,r16
   2d650:	003fe906 	br	2d5f8 <__alt_data_end+0xfffee1f8>
   2d654:	000d883a 	mov	r6,zero
   2d658:	000b883a 	mov	r5,zero
   2d65c:	0007883a 	mov	r3,zero
   2d660:	0005883a 	mov	r2,zero
   2d664:	003fe406 	br	2d5f8 <__alt_data_end+0xfffee1f8>
   2d668:	0123c83a 	sub	r17,zero,r4
   2d66c:	003fd106 	br	2d5b4 <__alt_data_end+0xfffee1b4>

0002d670 <__floatunsidf>:
   2d670:	defffe04 	addi	sp,sp,-8
   2d674:	dc000015 	stw	r16,0(sp)
   2d678:	dfc00115 	stw	ra,4(sp)
   2d67c:	2021883a 	mov	r16,r4
   2d680:	20002226 	beq	r4,zero,2d70c <__floatunsidf+0x9c>
   2d684:	002d7180 	call	2d718 <__clzsi2>
   2d688:	01010784 	movi	r4,1054
   2d68c:	2089c83a 	sub	r4,r4,r2
   2d690:	01810cc4 	movi	r6,1075
   2d694:	310dc83a 	sub	r6,r6,r4
   2d698:	00c007c4 	movi	r3,31
   2d69c:	1980120e 	bge	r3,r6,2d6e8 <__floatunsidf+0x78>
   2d6a0:	00c104c4 	movi	r3,1043
   2d6a4:	1907c83a 	sub	r3,r3,r4
   2d6a8:	80ca983a 	sll	r5,r16,r3
   2d6ac:	00800434 	movhi	r2,16
   2d6b0:	10bfffc4 	addi	r2,r2,-1
   2d6b4:	2101ffcc 	andi	r4,r4,2047
   2d6b8:	0021883a 	mov	r16,zero
   2d6bc:	288a703a 	and	r5,r5,r2
   2d6c0:	2008953a 	slli	r4,r4,20
   2d6c4:	00c00434 	movhi	r3,16
   2d6c8:	18ffffc4 	addi	r3,r3,-1
   2d6cc:	28c6703a 	and	r3,r5,r3
   2d6d0:	8005883a 	mov	r2,r16
   2d6d4:	1906b03a 	or	r3,r3,r4
   2d6d8:	dfc00117 	ldw	ra,4(sp)
   2d6dc:	dc000017 	ldw	r16,0(sp)
   2d6e0:	dec00204 	addi	sp,sp,8
   2d6e4:	f800283a 	ret
   2d6e8:	00c002c4 	movi	r3,11
   2d6ec:	188bc83a 	sub	r5,r3,r2
   2d6f0:	814ad83a 	srl	r5,r16,r5
   2d6f4:	00c00434 	movhi	r3,16
   2d6f8:	18ffffc4 	addi	r3,r3,-1
   2d6fc:	81a0983a 	sll	r16,r16,r6
   2d700:	2101ffcc 	andi	r4,r4,2047
   2d704:	28ca703a 	and	r5,r5,r3
   2d708:	003fed06 	br	2d6c0 <__alt_data_end+0xfffee2c0>
   2d70c:	0009883a 	mov	r4,zero
   2d710:	000b883a 	mov	r5,zero
   2d714:	003fea06 	br	2d6c0 <__alt_data_end+0xfffee2c0>

0002d718 <__clzsi2>:
   2d718:	00bfffd4 	movui	r2,65535
   2d71c:	11000536 	bltu	r2,r4,2d734 <__clzsi2+0x1c>
   2d720:	00803fc4 	movi	r2,255
   2d724:	11000f36 	bltu	r2,r4,2d764 <__clzsi2+0x4c>
   2d728:	00800804 	movi	r2,32
   2d72c:	0007883a 	mov	r3,zero
   2d730:	00000506 	br	2d748 <__clzsi2+0x30>
   2d734:	00804034 	movhi	r2,256
   2d738:	10bfffc4 	addi	r2,r2,-1
   2d73c:	11000c2e 	bgeu	r2,r4,2d770 <__clzsi2+0x58>
   2d740:	00800204 	movi	r2,8
   2d744:	00c00604 	movi	r3,24
   2d748:	20c8d83a 	srl	r4,r4,r3
   2d74c:	00c000f4 	movhi	r3,3
   2d750:	18c02d04 	addi	r3,r3,180
   2d754:	1909883a 	add	r4,r3,r4
   2d758:	20c00003 	ldbu	r3,0(r4)
   2d75c:	10c5c83a 	sub	r2,r2,r3
   2d760:	f800283a 	ret
   2d764:	00800604 	movi	r2,24
   2d768:	00c00204 	movi	r3,8
   2d76c:	003ff606 	br	2d748 <__alt_data_end+0xfffee348>
   2d770:	00800404 	movi	r2,16
   2d774:	1007883a 	mov	r3,r2
   2d778:	003ff306 	br	2d748 <__alt_data_end+0xfffee348>

0002d77c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d77c:	defffe04 	addi	sp,sp,-8
   2d780:	dfc00115 	stw	ra,4(sp)
   2d784:	df000015 	stw	fp,0(sp)
   2d788:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d78c:	d0a00b17 	ldw	r2,-32724(gp)
   2d790:	10000326 	beq	r2,zero,2d7a0 <alt_get_errno+0x24>
   2d794:	d0a00b17 	ldw	r2,-32724(gp)
   2d798:	103ee83a 	callr	r2
   2d79c:	00000106 	br	2d7a4 <alt_get_errno+0x28>
   2d7a0:	d0a6d904 	addi	r2,gp,-25756
}
   2d7a4:	e037883a 	mov	sp,fp
   2d7a8:	dfc00117 	ldw	ra,4(sp)
   2d7ac:	df000017 	ldw	fp,0(sp)
   2d7b0:	dec00204 	addi	sp,sp,8
   2d7b4:	f800283a 	ret

0002d7b8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2d7b8:	defffb04 	addi	sp,sp,-20
   2d7bc:	dfc00415 	stw	ra,16(sp)
   2d7c0:	df000315 	stw	fp,12(sp)
   2d7c4:	df000304 	addi	fp,sp,12
   2d7c8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d7cc:	e0bfff17 	ldw	r2,-4(fp)
   2d7d0:	10000816 	blt	r2,zero,2d7f4 <close+0x3c>
   2d7d4:	01400304 	movi	r5,12
   2d7d8:	e13fff17 	ldw	r4,-4(fp)
   2d7dc:	002aeb00 	call	2aeb0 <__mulsi3>
   2d7e0:	1007883a 	mov	r3,r2
   2d7e4:	008000f4 	movhi	r2,3
   2d7e8:	1082ad04 	addi	r2,r2,2740
   2d7ec:	1885883a 	add	r2,r3,r2
   2d7f0:	00000106 	br	2d7f8 <close+0x40>
   2d7f4:	0005883a 	mov	r2,zero
   2d7f8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2d7fc:	e0bffd17 	ldw	r2,-12(fp)
   2d800:	10001926 	beq	r2,zero,2d868 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d804:	e0bffd17 	ldw	r2,-12(fp)
   2d808:	10800017 	ldw	r2,0(r2)
   2d80c:	10800417 	ldw	r2,16(r2)
   2d810:	10000626 	beq	r2,zero,2d82c <close+0x74>
   2d814:	e0bffd17 	ldw	r2,-12(fp)
   2d818:	10800017 	ldw	r2,0(r2)
   2d81c:	10800417 	ldw	r2,16(r2)
   2d820:	e13ffd17 	ldw	r4,-12(fp)
   2d824:	103ee83a 	callr	r2
   2d828:	00000106 	br	2d830 <close+0x78>
   2d82c:	0005883a 	mov	r2,zero
   2d830:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d834:	e13fff17 	ldw	r4,-4(fp)
   2d838:	002e1400 	call	2e140 <alt_release_fd>
    if (rval < 0)
   2d83c:	e0bffe17 	ldw	r2,-8(fp)
   2d840:	1000070e 	bge	r2,zero,2d860 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   2d844:	002d77c0 	call	2d77c <alt_get_errno>
   2d848:	1007883a 	mov	r3,r2
   2d84c:	e0bffe17 	ldw	r2,-8(fp)
   2d850:	0085c83a 	sub	r2,zero,r2
   2d854:	18800015 	stw	r2,0(r3)
      return -1;
   2d858:	00bfffc4 	movi	r2,-1
   2d85c:	00000706 	br	2d87c <close+0xc4>
    }
    return 0;
   2d860:	0005883a 	mov	r2,zero
   2d864:	00000506 	br	2d87c <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d868:	002d77c0 	call	2d77c <alt_get_errno>
   2d86c:	1007883a 	mov	r3,r2
   2d870:	00801444 	movi	r2,81
   2d874:	18800015 	stw	r2,0(r3)
    return -1;
   2d878:	00bfffc4 	movi	r2,-1
  }
}
   2d87c:	e037883a 	mov	sp,fp
   2d880:	dfc00117 	ldw	ra,4(sp)
   2d884:	df000017 	ldw	fp,0(sp)
   2d888:	dec00204 	addi	sp,sp,8
   2d88c:	f800283a 	ret

0002d890 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d890:	defffc04 	addi	sp,sp,-16
   2d894:	df000315 	stw	fp,12(sp)
   2d898:	df000304 	addi	fp,sp,12
   2d89c:	e13ffd15 	stw	r4,-12(fp)
   2d8a0:	e17ffe15 	stw	r5,-8(fp)
   2d8a4:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2d8a8:	e0bfff17 	ldw	r2,-4(fp)
}
   2d8ac:	e037883a 	mov	sp,fp
   2d8b0:	df000017 	ldw	fp,0(sp)
   2d8b4:	dec00104 	addi	sp,sp,4
   2d8b8:	f800283a 	ret

0002d8bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d8bc:	defffe04 	addi	sp,sp,-8
   2d8c0:	dfc00115 	stw	ra,4(sp)
   2d8c4:	df000015 	stw	fp,0(sp)
   2d8c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d8cc:	d0a00b17 	ldw	r2,-32724(gp)
   2d8d0:	10000326 	beq	r2,zero,2d8e0 <alt_get_errno+0x24>
   2d8d4:	d0a00b17 	ldw	r2,-32724(gp)
   2d8d8:	103ee83a 	callr	r2
   2d8dc:	00000106 	br	2d8e4 <alt_get_errno+0x28>
   2d8e0:	d0a6d904 	addi	r2,gp,-25756
}
   2d8e4:	e037883a 	mov	sp,fp
   2d8e8:	dfc00117 	ldw	ra,4(sp)
   2d8ec:	df000017 	ldw	fp,0(sp)
   2d8f0:	dec00204 	addi	sp,sp,8
   2d8f4:	f800283a 	ret

0002d8f8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d8f8:	defffb04 	addi	sp,sp,-20
   2d8fc:	dfc00415 	stw	ra,16(sp)
   2d900:	df000315 	stw	fp,12(sp)
   2d904:	df000304 	addi	fp,sp,12
   2d908:	e13ffe15 	stw	r4,-8(fp)
   2d90c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d910:	e0bffe17 	ldw	r2,-8(fp)
   2d914:	10000816 	blt	r2,zero,2d938 <fstat+0x40>
   2d918:	01400304 	movi	r5,12
   2d91c:	e13ffe17 	ldw	r4,-8(fp)
   2d920:	002aeb00 	call	2aeb0 <__mulsi3>
   2d924:	1007883a 	mov	r3,r2
   2d928:	008000f4 	movhi	r2,3
   2d92c:	1082ad04 	addi	r2,r2,2740
   2d930:	1885883a 	add	r2,r3,r2
   2d934:	00000106 	br	2d93c <fstat+0x44>
   2d938:	0005883a 	mov	r2,zero
   2d93c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2d940:	e0bffd17 	ldw	r2,-12(fp)
   2d944:	10001026 	beq	r2,zero,2d988 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d948:	e0bffd17 	ldw	r2,-12(fp)
   2d94c:	10800017 	ldw	r2,0(r2)
   2d950:	10800817 	ldw	r2,32(r2)
   2d954:	10000726 	beq	r2,zero,2d974 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   2d958:	e0bffd17 	ldw	r2,-12(fp)
   2d95c:	10800017 	ldw	r2,0(r2)
   2d960:	10800817 	ldw	r2,32(r2)
   2d964:	e17fff17 	ldw	r5,-4(fp)
   2d968:	e13ffd17 	ldw	r4,-12(fp)
   2d96c:	103ee83a 	callr	r2
   2d970:	00000a06 	br	2d99c <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2d974:	e0bfff17 	ldw	r2,-4(fp)
   2d978:	00c80004 	movi	r3,8192
   2d97c:	10c00115 	stw	r3,4(r2)
      return 0;
   2d980:	0005883a 	mov	r2,zero
   2d984:	00000506 	br	2d99c <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d988:	002d8bc0 	call	2d8bc <alt_get_errno>
   2d98c:	1007883a 	mov	r3,r2
   2d990:	00801444 	movi	r2,81
   2d994:	18800015 	stw	r2,0(r3)
    return -1;
   2d998:	00bfffc4 	movi	r2,-1
  }
}
   2d99c:	e037883a 	mov	sp,fp
   2d9a0:	dfc00117 	ldw	ra,4(sp)
   2d9a4:	df000017 	ldw	fp,0(sp)
   2d9a8:	dec00204 	addi	sp,sp,8
   2d9ac:	f800283a 	ret

0002d9b0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2d9b0:	defff904 	addi	sp,sp,-28
   2d9b4:	dfc00615 	stw	ra,24(sp)
   2d9b8:	df000515 	stw	fp,20(sp)
   2d9bc:	df000504 	addi	fp,sp,20
   2d9c0:	e13ffc15 	stw	r4,-16(fp)
   2d9c4:	e17ffd15 	stw	r5,-12(fp)
   2d9c8:	e1bffe15 	stw	r6,-8(fp)
   2d9cc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2d9d0:	e0800217 	ldw	r2,8(fp)
   2d9d4:	d8800015 	stw	r2,0(sp)
   2d9d8:	e1ffff17 	ldw	r7,-4(fp)
   2d9dc:	e1bffe17 	ldw	r6,-8(fp)
   2d9e0:	e17ffd17 	ldw	r5,-12(fp)
   2d9e4:	e13ffc17 	ldw	r4,-16(fp)
   2d9e8:	002db600 	call	2db60 <alt_iic_isr_register>
}  
   2d9ec:	e037883a 	mov	sp,fp
   2d9f0:	dfc00117 	ldw	ra,4(sp)
   2d9f4:	df000017 	ldw	fp,0(sp)
   2d9f8:	dec00204 	addi	sp,sp,8
   2d9fc:	f800283a 	ret

0002da00 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2da00:	defff904 	addi	sp,sp,-28
   2da04:	df000615 	stw	fp,24(sp)
   2da08:	df000604 	addi	fp,sp,24
   2da0c:	e13ffe15 	stw	r4,-8(fp)
   2da10:	e17fff15 	stw	r5,-4(fp)
   2da14:	e0bfff17 	ldw	r2,-4(fp)
   2da18:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2da1c:	0005303a 	rdctl	r2,status
   2da20:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2da24:	e0fffb17 	ldw	r3,-20(fp)
   2da28:	00bfff84 	movi	r2,-2
   2da2c:	1884703a 	and	r2,r3,r2
   2da30:	1001703a 	wrctl	status,r2
  
  return context;
   2da34:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2da38:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   2da3c:	00c00044 	movi	r3,1
   2da40:	e0bffa17 	ldw	r2,-24(fp)
   2da44:	1884983a 	sll	r2,r3,r2
   2da48:	1007883a 	mov	r3,r2
   2da4c:	d0a6da17 	ldw	r2,-25752(gp)
   2da50:	1884b03a 	or	r2,r3,r2
   2da54:	d0a6da15 	stw	r2,-25752(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2da58:	d0a6da17 	ldw	r2,-25752(gp)
   2da5c:	100170fa 	wrctl	ienable,r2
   2da60:	e0bffc17 	ldw	r2,-16(fp)
   2da64:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2da68:	e0bffd17 	ldw	r2,-12(fp)
   2da6c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2da70:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   2da74:	0001883a 	nop
}
   2da78:	e037883a 	mov	sp,fp
   2da7c:	df000017 	ldw	fp,0(sp)
   2da80:	dec00104 	addi	sp,sp,4
   2da84:	f800283a 	ret

0002da88 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2da88:	defff904 	addi	sp,sp,-28
   2da8c:	df000615 	stw	fp,24(sp)
   2da90:	df000604 	addi	fp,sp,24
   2da94:	e13ffe15 	stw	r4,-8(fp)
   2da98:	e17fff15 	stw	r5,-4(fp)
   2da9c:	e0bfff17 	ldw	r2,-4(fp)
   2daa0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2daa4:	0005303a 	rdctl	r2,status
   2daa8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2daac:	e0fffb17 	ldw	r3,-20(fp)
   2dab0:	00bfff84 	movi	r2,-2
   2dab4:	1884703a 	and	r2,r3,r2
   2dab8:	1001703a 	wrctl	status,r2
  
  return context;
   2dabc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2dac0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   2dac4:	00c00044 	movi	r3,1
   2dac8:	e0bffa17 	ldw	r2,-24(fp)
   2dacc:	1884983a 	sll	r2,r3,r2
   2dad0:	0084303a 	nor	r2,zero,r2
   2dad4:	1007883a 	mov	r3,r2
   2dad8:	d0a6da17 	ldw	r2,-25752(gp)
   2dadc:	1884703a 	and	r2,r3,r2
   2dae0:	d0a6da15 	stw	r2,-25752(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2dae4:	d0a6da17 	ldw	r2,-25752(gp)
   2dae8:	100170fa 	wrctl	ienable,r2
   2daec:	e0bffc17 	ldw	r2,-16(fp)
   2daf0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2daf4:	e0bffd17 	ldw	r2,-12(fp)
   2daf8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2dafc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   2db00:	0001883a 	nop
}
   2db04:	e037883a 	mov	sp,fp
   2db08:	df000017 	ldw	fp,0(sp)
   2db0c:	dec00104 	addi	sp,sp,4
   2db10:	f800283a 	ret

0002db14 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2db14:	defffc04 	addi	sp,sp,-16
   2db18:	df000315 	stw	fp,12(sp)
   2db1c:	df000304 	addi	fp,sp,12
   2db20:	e13ffe15 	stw	r4,-8(fp)
   2db24:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2db28:	000530fa 	rdctl	r2,ienable
   2db2c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2db30:	00c00044 	movi	r3,1
   2db34:	e0bfff17 	ldw	r2,-4(fp)
   2db38:	1884983a 	sll	r2,r3,r2
   2db3c:	1007883a 	mov	r3,r2
   2db40:	e0bffd17 	ldw	r2,-12(fp)
   2db44:	1884703a 	and	r2,r3,r2
   2db48:	1004c03a 	cmpne	r2,r2,zero
   2db4c:	10803fcc 	andi	r2,r2,255
}
   2db50:	e037883a 	mov	sp,fp
   2db54:	df000017 	ldw	fp,0(sp)
   2db58:	dec00104 	addi	sp,sp,4
   2db5c:	f800283a 	ret

0002db60 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2db60:	defff504 	addi	sp,sp,-44
   2db64:	dfc00a15 	stw	ra,40(sp)
   2db68:	df000915 	stw	fp,36(sp)
   2db6c:	df000904 	addi	fp,sp,36
   2db70:	e13ffc15 	stw	r4,-16(fp)
   2db74:	e17ffd15 	stw	r5,-12(fp)
   2db78:	e1bffe15 	stw	r6,-8(fp)
   2db7c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   2db80:	00bffa84 	movi	r2,-22
   2db84:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2db88:	e0bffd17 	ldw	r2,-12(fp)
   2db8c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2db90:	e0bff817 	ldw	r2,-32(fp)
   2db94:	10800808 	cmpgei	r2,r2,32
   2db98:	1000271e 	bne	r2,zero,2dc38 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2db9c:	0005303a 	rdctl	r2,status
   2dba0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2dba4:	e0fffb17 	ldw	r3,-20(fp)
   2dba8:	00bfff84 	movi	r2,-2
   2dbac:	1884703a 	and	r2,r3,r2
   2dbb0:	1001703a 	wrctl	status,r2
  
  return context;
   2dbb4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2dbb8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   2dbbc:	008000f4 	movhi	r2,3
   2dbc0:	108e0f04 	addi	r2,r2,14396
   2dbc4:	e0fff817 	ldw	r3,-32(fp)
   2dbc8:	180690fa 	slli	r3,r3,3
   2dbcc:	10c5883a 	add	r2,r2,r3
   2dbd0:	e0fffe17 	ldw	r3,-8(fp)
   2dbd4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   2dbd8:	008000f4 	movhi	r2,3
   2dbdc:	108e0f04 	addi	r2,r2,14396
   2dbe0:	e0fff817 	ldw	r3,-32(fp)
   2dbe4:	180690fa 	slli	r3,r3,3
   2dbe8:	10c5883a 	add	r2,r2,r3
   2dbec:	10800104 	addi	r2,r2,4
   2dbf0:	e0ffff17 	ldw	r3,-4(fp)
   2dbf4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2dbf8:	e0bffe17 	ldw	r2,-8(fp)
   2dbfc:	10000526 	beq	r2,zero,2dc14 <alt_iic_isr_register+0xb4>
   2dc00:	e0bff817 	ldw	r2,-32(fp)
   2dc04:	100b883a 	mov	r5,r2
   2dc08:	e13ffc17 	ldw	r4,-16(fp)
   2dc0c:	002da000 	call	2da00 <alt_ic_irq_enable>
   2dc10:	00000406 	br	2dc24 <alt_iic_isr_register+0xc4>
   2dc14:	e0bff817 	ldw	r2,-32(fp)
   2dc18:	100b883a 	mov	r5,r2
   2dc1c:	e13ffc17 	ldw	r4,-16(fp)
   2dc20:	002da880 	call	2da88 <alt_ic_irq_disable>
   2dc24:	e0bff715 	stw	r2,-36(fp)
   2dc28:	e0bffa17 	ldw	r2,-24(fp)
   2dc2c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2dc30:	e0bff917 	ldw	r2,-28(fp)
   2dc34:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2dc38:	e0bff717 	ldw	r2,-36(fp)
}
   2dc3c:	e037883a 	mov	sp,fp
   2dc40:	dfc00117 	ldw	ra,4(sp)
   2dc44:	df000017 	ldw	fp,0(sp)
   2dc48:	dec00204 	addi	sp,sp,8
   2dc4c:	f800283a 	ret

0002dc50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2dc50:	defffe04 	addi	sp,sp,-8
   2dc54:	dfc00115 	stw	ra,4(sp)
   2dc58:	df000015 	stw	fp,0(sp)
   2dc5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dc60:	d0a00b17 	ldw	r2,-32724(gp)
   2dc64:	10000326 	beq	r2,zero,2dc74 <alt_get_errno+0x24>
   2dc68:	d0a00b17 	ldw	r2,-32724(gp)
   2dc6c:	103ee83a 	callr	r2
   2dc70:	00000106 	br	2dc78 <alt_get_errno+0x28>
   2dc74:	d0a6d904 	addi	r2,gp,-25756
}
   2dc78:	e037883a 	mov	sp,fp
   2dc7c:	dfc00117 	ldw	ra,4(sp)
   2dc80:	df000017 	ldw	fp,0(sp)
   2dc84:	dec00204 	addi	sp,sp,8
   2dc88:	f800283a 	ret

0002dc8c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2dc8c:	deffed04 	addi	sp,sp,-76
   2dc90:	dfc01215 	stw	ra,72(sp)
   2dc94:	df001115 	stw	fp,68(sp)
   2dc98:	df001104 	addi	fp,sp,68
   2dc9c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dca0:	e0bfff17 	ldw	r2,-4(fp)
   2dca4:	10000816 	blt	r2,zero,2dcc8 <isatty+0x3c>
   2dca8:	01400304 	movi	r5,12
   2dcac:	e13fff17 	ldw	r4,-4(fp)
   2dcb0:	002aeb00 	call	2aeb0 <__mulsi3>
   2dcb4:	1007883a 	mov	r3,r2
   2dcb8:	008000f4 	movhi	r2,3
   2dcbc:	1082ad04 	addi	r2,r2,2740
   2dcc0:	1885883a 	add	r2,r3,r2
   2dcc4:	00000106 	br	2dccc <isatty+0x40>
   2dcc8:	0005883a 	mov	r2,zero
   2dccc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2dcd0:	e0bfef17 	ldw	r2,-68(fp)
   2dcd4:	10000e26 	beq	r2,zero,2dd10 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2dcd8:	e0bfef17 	ldw	r2,-68(fp)
   2dcdc:	10800017 	ldw	r2,0(r2)
   2dce0:	10800817 	ldw	r2,32(r2)
   2dce4:	1000021e 	bne	r2,zero,2dcf0 <isatty+0x64>
    {
      return 1;
   2dce8:	00800044 	movi	r2,1
   2dcec:	00000d06 	br	2dd24 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2dcf0:	e0bff004 	addi	r2,fp,-64
   2dcf4:	100b883a 	mov	r5,r2
   2dcf8:	e13fff17 	ldw	r4,-4(fp)
   2dcfc:	002d8f80 	call	2d8f8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2dd00:	e0bff117 	ldw	r2,-60(fp)
   2dd04:	10880020 	cmpeqi	r2,r2,8192
   2dd08:	10803fcc 	andi	r2,r2,255
   2dd0c:	00000506 	br	2dd24 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2dd10:	002dc500 	call	2dc50 <alt_get_errno>
   2dd14:	1007883a 	mov	r3,r2
   2dd18:	00801444 	movi	r2,81
   2dd1c:	18800015 	stw	r2,0(r3)
    return 0;
   2dd20:	0005883a 	mov	r2,zero
  }
}
   2dd24:	e037883a 	mov	sp,fp
   2dd28:	dfc00117 	ldw	ra,4(sp)
   2dd2c:	df000017 	ldw	fp,0(sp)
   2dd30:	dec00204 	addi	sp,sp,8
   2dd34:	f800283a 	ret

0002dd38 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2dd38:	defffc04 	addi	sp,sp,-16
   2dd3c:	df000315 	stw	fp,12(sp)
   2dd40:	df000304 	addi	fp,sp,12
   2dd44:	e13ffd15 	stw	r4,-12(fp)
   2dd48:	e17ffe15 	stw	r5,-8(fp)
   2dd4c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2dd50:	e0fffe17 	ldw	r3,-8(fp)
   2dd54:	e0bffd17 	ldw	r2,-12(fp)
   2dd58:	18800c26 	beq	r3,r2,2dd8c <alt_load_section+0x54>
  {
    while( to != end )
   2dd5c:	00000806 	br	2dd80 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2dd60:	e0bffe17 	ldw	r2,-8(fp)
   2dd64:	10c00104 	addi	r3,r2,4
   2dd68:	e0fffe15 	stw	r3,-8(fp)
   2dd6c:	e0fffd17 	ldw	r3,-12(fp)
   2dd70:	19000104 	addi	r4,r3,4
   2dd74:	e13ffd15 	stw	r4,-12(fp)
   2dd78:	18c00017 	ldw	r3,0(r3)
   2dd7c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2dd80:	e0fffe17 	ldw	r3,-8(fp)
   2dd84:	e0bfff17 	ldw	r2,-4(fp)
   2dd88:	18bff51e 	bne	r3,r2,2dd60 <__alt_data_end+0xfffee960>
    {
      *to++ = *from++;
    }
  }
}
   2dd8c:	0001883a 	nop
   2dd90:	e037883a 	mov	sp,fp
   2dd94:	df000017 	ldw	fp,0(sp)
   2dd98:	dec00104 	addi	sp,sp,4
   2dd9c:	f800283a 	ret

0002dda0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2dda0:	defffe04 	addi	sp,sp,-8
   2dda4:	dfc00115 	stw	ra,4(sp)
   2dda8:	df000015 	stw	fp,0(sp)
   2ddac:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2ddb0:	018000f4 	movhi	r6,3
   2ddb4:	31873504 	addi	r6,r6,7380
   2ddb8:	014000f4 	movhi	r5,3
   2ddbc:	29407a04 	addi	r5,r5,488
   2ddc0:	010000f4 	movhi	r4,3
   2ddc4:	21073504 	addi	r4,r4,7380
   2ddc8:	002dd380 	call	2dd38 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2ddcc:	018000b4 	movhi	r6,2
   2ddd0:	31807004 	addi	r6,r6,448
   2ddd4:	014000b4 	movhi	r5,2
   2ddd8:	29400804 	addi	r5,r5,32
   2dddc:	010000b4 	movhi	r4,2
   2dde0:	21000804 	addi	r4,r4,32
   2dde4:	002dd380 	call	2dd38 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2dde8:	018000f4 	movhi	r6,3
   2ddec:	31807a04 	addi	r6,r6,488
   2ddf0:	014000f4 	movhi	r5,3
   2ddf4:	297fa004 	addi	r5,r5,-384
   2ddf8:	010000f4 	movhi	r4,3
   2ddfc:	213fa004 	addi	r4,r4,-384
   2de00:	002dd380 	call	2dd38 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2de04:	002f1040 	call	2f104 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2de08:	002f2c40 	call	2f2c4 <alt_icache_flush_all>
}
   2de0c:	0001883a 	nop
   2de10:	e037883a 	mov	sp,fp
   2de14:	dfc00117 	ldw	ra,4(sp)
   2de18:	df000017 	ldw	fp,0(sp)
   2de1c:	dec00204 	addi	sp,sp,8
   2de20:	f800283a 	ret

0002de24 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2de24:	defffe04 	addi	sp,sp,-8
   2de28:	dfc00115 	stw	ra,4(sp)
   2de2c:	df000015 	stw	fp,0(sp)
   2de30:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2de34:	d0a00b17 	ldw	r2,-32724(gp)
   2de38:	10000326 	beq	r2,zero,2de48 <alt_get_errno+0x24>
   2de3c:	d0a00b17 	ldw	r2,-32724(gp)
   2de40:	103ee83a 	callr	r2
   2de44:	00000106 	br	2de4c <alt_get_errno+0x28>
   2de48:	d0a6d904 	addi	r2,gp,-25756
}
   2de4c:	e037883a 	mov	sp,fp
   2de50:	dfc00117 	ldw	ra,4(sp)
   2de54:	df000017 	ldw	fp,0(sp)
   2de58:	dec00204 	addi	sp,sp,8
   2de5c:	f800283a 	ret

0002de60 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2de60:	defff904 	addi	sp,sp,-28
   2de64:	dfc00615 	stw	ra,24(sp)
   2de68:	df000515 	stw	fp,20(sp)
   2de6c:	df000504 	addi	fp,sp,20
   2de70:	e13ffd15 	stw	r4,-12(fp)
   2de74:	e17ffe15 	stw	r5,-8(fp)
   2de78:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2de7c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2de80:	e0bffd17 	ldw	r2,-12(fp)
   2de84:	10000816 	blt	r2,zero,2dea8 <lseek+0x48>
   2de88:	01400304 	movi	r5,12
   2de8c:	e13ffd17 	ldw	r4,-12(fp)
   2de90:	002aeb00 	call	2aeb0 <__mulsi3>
   2de94:	1007883a 	mov	r3,r2
   2de98:	008000f4 	movhi	r2,3
   2de9c:	1082ad04 	addi	r2,r2,2740
   2dea0:	1885883a 	add	r2,r3,r2
   2dea4:	00000106 	br	2deac <lseek+0x4c>
   2dea8:	0005883a 	mov	r2,zero
   2deac:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2deb0:	e0bffc17 	ldw	r2,-16(fp)
   2deb4:	10001026 	beq	r2,zero,2def8 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2deb8:	e0bffc17 	ldw	r2,-16(fp)
   2debc:	10800017 	ldw	r2,0(r2)
   2dec0:	10800717 	ldw	r2,28(r2)
   2dec4:	10000926 	beq	r2,zero,2deec <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2dec8:	e0bffc17 	ldw	r2,-16(fp)
   2decc:	10800017 	ldw	r2,0(r2)
   2ded0:	10800717 	ldw	r2,28(r2)
   2ded4:	e1bfff17 	ldw	r6,-4(fp)
   2ded8:	e17ffe17 	ldw	r5,-8(fp)
   2dedc:	e13ffc17 	ldw	r4,-16(fp)
   2dee0:	103ee83a 	callr	r2
   2dee4:	e0bffb15 	stw	r2,-20(fp)
   2dee8:	00000506 	br	2df00 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2deec:	00bfde84 	movi	r2,-134
   2def0:	e0bffb15 	stw	r2,-20(fp)
   2def4:	00000206 	br	2df00 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   2def8:	00bfebc4 	movi	r2,-81
   2defc:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2df00:	e0bffb17 	ldw	r2,-20(fp)
   2df04:	1000070e 	bge	r2,zero,2df24 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   2df08:	002de240 	call	2de24 <alt_get_errno>
   2df0c:	1007883a 	mov	r3,r2
   2df10:	e0bffb17 	ldw	r2,-20(fp)
   2df14:	0085c83a 	sub	r2,zero,r2
   2df18:	18800015 	stw	r2,0(r3)
    rc = -1;
   2df1c:	00bfffc4 	movi	r2,-1
   2df20:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2df24:	e0bffb17 	ldw	r2,-20(fp)
}
   2df28:	e037883a 	mov	sp,fp
   2df2c:	dfc00117 	ldw	ra,4(sp)
   2df30:	df000017 	ldw	fp,0(sp)
   2df34:	dec00204 	addi	sp,sp,8
   2df38:	f800283a 	ret

0002df3c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2df3c:	defffd04 	addi	sp,sp,-12
   2df40:	dfc00215 	stw	ra,8(sp)
   2df44:	df000115 	stw	fp,4(sp)
   2df48:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2df4c:	0009883a 	mov	r4,zero
   2df50:	002e3e40 	call	2e3e4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2df54:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2df58:	002e41c0 	call	2e41c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2df5c:	018000f4 	movhi	r6,3
   2df60:	31807004 	addi	r6,r6,448
   2df64:	014000f4 	movhi	r5,3
   2df68:	29407004 	addi	r5,r5,448
   2df6c:	010000f4 	movhi	r4,3
   2df70:	21007004 	addi	r4,r4,448
   2df74:	002f3c80 	call	2f3c8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2df78:	002f2040 	call	2f204 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2df7c:	010000f4 	movhi	r4,3
   2df80:	213c9904 	addi	r4,r4,-3484
   2df84:	002faec0 	call	2faec <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2df88:	d0a6db17 	ldw	r2,-25748(gp)
   2df8c:	d0e6dc17 	ldw	r3,-25744(gp)
   2df90:	d126dd17 	ldw	r4,-25740(gp)
   2df94:	200d883a 	mov	r6,r4
   2df98:	180b883a 	mov	r5,r3
   2df9c:	1009883a 	mov	r4,r2
   2dfa0:	00208400 	call	20840 <main>
   2dfa4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2dfa8:	01000044 	movi	r4,1
   2dfac:	002d7b80 	call	2d7b8 <close>
  exit (result);
   2dfb0:	e13fff17 	ldw	r4,-4(fp)
   2dfb4:	002fb000 	call	2fb00 <exit>

0002dfb8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2dfb8:	defffe04 	addi	sp,sp,-8
   2dfbc:	df000115 	stw	fp,4(sp)
   2dfc0:	df000104 	addi	fp,sp,4
   2dfc4:	e13fff15 	stw	r4,-4(fp)
}
   2dfc8:	0001883a 	nop
   2dfcc:	e037883a 	mov	sp,fp
   2dfd0:	df000017 	ldw	fp,0(sp)
   2dfd4:	dec00104 	addi	sp,sp,4
   2dfd8:	f800283a 	ret

0002dfdc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2dfdc:	defffe04 	addi	sp,sp,-8
   2dfe0:	df000115 	stw	fp,4(sp)
   2dfe4:	df000104 	addi	fp,sp,4
   2dfe8:	e13fff15 	stw	r4,-4(fp)
}
   2dfec:	0001883a 	nop
   2dff0:	e037883a 	mov	sp,fp
   2dff4:	df000017 	ldw	fp,0(sp)
   2dff8:	dec00104 	addi	sp,sp,4
   2dffc:	f800283a 	ret

0002e000 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e000:	defffe04 	addi	sp,sp,-8
   2e004:	dfc00115 	stw	ra,4(sp)
   2e008:	df000015 	stw	fp,0(sp)
   2e00c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e010:	d0a00b17 	ldw	r2,-32724(gp)
   2e014:	10000326 	beq	r2,zero,2e024 <alt_get_errno+0x24>
   2e018:	d0a00b17 	ldw	r2,-32724(gp)
   2e01c:	103ee83a 	callr	r2
   2e020:	00000106 	br	2e028 <alt_get_errno+0x28>
   2e024:	d0a6d904 	addi	r2,gp,-25756
}
   2e028:	e037883a 	mov	sp,fp
   2e02c:	dfc00117 	ldw	ra,4(sp)
   2e030:	df000017 	ldw	fp,0(sp)
   2e034:	dec00204 	addi	sp,sp,8
   2e038:	f800283a 	ret

0002e03c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2e03c:	defff904 	addi	sp,sp,-28
   2e040:	dfc00615 	stw	ra,24(sp)
   2e044:	df000515 	stw	fp,20(sp)
   2e048:	df000504 	addi	fp,sp,20
   2e04c:	e13ffd15 	stw	r4,-12(fp)
   2e050:	e17ffe15 	stw	r5,-8(fp)
   2e054:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e058:	e0bffd17 	ldw	r2,-12(fp)
   2e05c:	10000816 	blt	r2,zero,2e080 <read+0x44>
   2e060:	01400304 	movi	r5,12
   2e064:	e13ffd17 	ldw	r4,-12(fp)
   2e068:	002aeb00 	call	2aeb0 <__mulsi3>
   2e06c:	1007883a 	mov	r3,r2
   2e070:	008000f4 	movhi	r2,3
   2e074:	1082ad04 	addi	r2,r2,2740
   2e078:	1885883a 	add	r2,r3,r2
   2e07c:	00000106 	br	2e084 <read+0x48>
   2e080:	0005883a 	mov	r2,zero
   2e084:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2e088:	e0bffb17 	ldw	r2,-20(fp)
   2e08c:	10002226 	beq	r2,zero,2e118 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e090:	e0bffb17 	ldw	r2,-20(fp)
   2e094:	10800217 	ldw	r2,8(r2)
   2e098:	108000cc 	andi	r2,r2,3
   2e09c:	10800060 	cmpeqi	r2,r2,1
   2e0a0:	1000181e 	bne	r2,zero,2e104 <read+0xc8>
        (fd->dev->read))
   2e0a4:	e0bffb17 	ldw	r2,-20(fp)
   2e0a8:	10800017 	ldw	r2,0(r2)
   2e0ac:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e0b0:	10001426 	beq	r2,zero,2e104 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2e0b4:	e0bffb17 	ldw	r2,-20(fp)
   2e0b8:	10800017 	ldw	r2,0(r2)
   2e0bc:	10800517 	ldw	r2,20(r2)
   2e0c0:	e0ffff17 	ldw	r3,-4(fp)
   2e0c4:	180d883a 	mov	r6,r3
   2e0c8:	e17ffe17 	ldw	r5,-8(fp)
   2e0cc:	e13ffb17 	ldw	r4,-20(fp)
   2e0d0:	103ee83a 	callr	r2
   2e0d4:	e0bffc15 	stw	r2,-16(fp)
   2e0d8:	e0bffc17 	ldw	r2,-16(fp)
   2e0dc:	1000070e 	bge	r2,zero,2e0fc <read+0xc0>
        {
          ALT_ERRNO = -rval;
   2e0e0:	002e0000 	call	2e000 <alt_get_errno>
   2e0e4:	1007883a 	mov	r3,r2
   2e0e8:	e0bffc17 	ldw	r2,-16(fp)
   2e0ec:	0085c83a 	sub	r2,zero,r2
   2e0f0:	18800015 	stw	r2,0(r3)
          return -1;
   2e0f4:	00bfffc4 	movi	r2,-1
   2e0f8:	00000c06 	br	2e12c <read+0xf0>
        }
        return rval;
   2e0fc:	e0bffc17 	ldw	r2,-16(fp)
   2e100:	00000a06 	br	2e12c <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2e104:	002e0000 	call	2e000 <alt_get_errno>
   2e108:	1007883a 	mov	r3,r2
   2e10c:	00800344 	movi	r2,13
   2e110:	18800015 	stw	r2,0(r3)
   2e114:	00000406 	br	2e128 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2e118:	002e0000 	call	2e000 <alt_get_errno>
   2e11c:	1007883a 	mov	r3,r2
   2e120:	00801444 	movi	r2,81
   2e124:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e128:	00bfffc4 	movi	r2,-1
}
   2e12c:	e037883a 	mov	sp,fp
   2e130:	dfc00117 	ldw	ra,4(sp)
   2e134:	df000017 	ldw	fp,0(sp)
   2e138:	dec00204 	addi	sp,sp,8
   2e13c:	f800283a 	ret

0002e140 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2e140:	defffc04 	addi	sp,sp,-16
   2e144:	dfc00315 	stw	ra,12(sp)
   2e148:	df000215 	stw	fp,8(sp)
   2e14c:	dc000115 	stw	r16,4(sp)
   2e150:	df000204 	addi	fp,sp,8
   2e154:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   2e158:	e0bffe17 	ldw	r2,-8(fp)
   2e15c:	108000d0 	cmplti	r2,r2,3
   2e160:	1000111e 	bne	r2,zero,2e1a8 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   2e164:	040000f4 	movhi	r16,3
   2e168:	8402ad04 	addi	r16,r16,2740
   2e16c:	e0bffe17 	ldw	r2,-8(fp)
   2e170:	01400304 	movi	r5,12
   2e174:	1009883a 	mov	r4,r2
   2e178:	002aeb00 	call	2aeb0 <__mulsi3>
   2e17c:	8085883a 	add	r2,r16,r2
   2e180:	10800204 	addi	r2,r2,8
   2e184:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2e188:	040000f4 	movhi	r16,3
   2e18c:	8402ad04 	addi	r16,r16,2740
   2e190:	e0bffe17 	ldw	r2,-8(fp)
   2e194:	01400304 	movi	r5,12
   2e198:	1009883a 	mov	r4,r2
   2e19c:	002aeb00 	call	2aeb0 <__mulsi3>
   2e1a0:	8085883a 	add	r2,r16,r2
   2e1a4:	10000015 	stw	zero,0(r2)
  }
}
   2e1a8:	0001883a 	nop
   2e1ac:	e6ffff04 	addi	sp,fp,-4
   2e1b0:	dfc00217 	ldw	ra,8(sp)
   2e1b4:	df000117 	ldw	fp,4(sp)
   2e1b8:	dc000017 	ldw	r16,0(sp)
   2e1bc:	dec00304 	addi	sp,sp,12
   2e1c0:	f800283a 	ret

0002e1c4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2e1c4:	defff904 	addi	sp,sp,-28
   2e1c8:	df000615 	stw	fp,24(sp)
   2e1cc:	df000604 	addi	fp,sp,24
   2e1d0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e1d4:	0005303a 	rdctl	r2,status
   2e1d8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e1dc:	e0fffe17 	ldw	r3,-8(fp)
   2e1e0:	00bfff84 	movi	r2,-2
   2e1e4:	1884703a 	and	r2,r3,r2
   2e1e8:	1001703a 	wrctl	status,r2
  
  return context;
   2e1ec:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2e1f0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2e1f4:	d0a00d17 	ldw	r2,-32716(gp)
   2e1f8:	10c000c4 	addi	r3,r2,3
   2e1fc:	00bfff04 	movi	r2,-4
   2e200:	1884703a 	and	r2,r3,r2
   2e204:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2e208:	d0e00d17 	ldw	r3,-32716(gp)
   2e20c:	e0bfff17 	ldw	r2,-4(fp)
   2e210:	1887883a 	add	r3,r3,r2
   2e214:	00800134 	movhi	r2,4
   2e218:	10bd0004 	addi	r2,r2,-3072
   2e21c:	10c0062e 	bgeu	r2,r3,2e238 <sbrk+0x74>
   2e220:	e0bffb17 	ldw	r2,-20(fp)
   2e224:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e228:	e0bffa17 	ldw	r2,-24(fp)
   2e22c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2e230:	00bfffc4 	movi	r2,-1
   2e234:	00000b06 	br	2e264 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2e238:	d0a00d17 	ldw	r2,-32716(gp)
   2e23c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2e240:	d0e00d17 	ldw	r3,-32716(gp)
   2e244:	e0bfff17 	ldw	r2,-4(fp)
   2e248:	1885883a 	add	r2,r3,r2
   2e24c:	d0a00d15 	stw	r2,-32716(gp)
   2e250:	e0bffb17 	ldw	r2,-20(fp)
   2e254:	e0bffc15 	stw	r2,-16(fp)
   2e258:	e0bffc17 	ldw	r2,-16(fp)
   2e25c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2e260:	e0bffd17 	ldw	r2,-12(fp)
} 
   2e264:	e037883a 	mov	sp,fp
   2e268:	df000017 	ldw	fp,0(sp)
   2e26c:	dec00104 	addi	sp,sp,4
   2e270:	f800283a 	ret

0002e274 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e274:	defffe04 	addi	sp,sp,-8
   2e278:	dfc00115 	stw	ra,4(sp)
   2e27c:	df000015 	stw	fp,0(sp)
   2e280:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e284:	d0a00b17 	ldw	r2,-32724(gp)
   2e288:	10000326 	beq	r2,zero,2e298 <alt_get_errno+0x24>
   2e28c:	d0a00b17 	ldw	r2,-32724(gp)
   2e290:	103ee83a 	callr	r2
   2e294:	00000106 	br	2e29c <alt_get_errno+0x28>
   2e298:	d0a6d904 	addi	r2,gp,-25756
}
   2e29c:	e037883a 	mov	sp,fp
   2e2a0:	dfc00117 	ldw	ra,4(sp)
   2e2a4:	df000017 	ldw	fp,0(sp)
   2e2a8:	dec00204 	addi	sp,sp,8
   2e2ac:	f800283a 	ret

0002e2b0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2e2b0:	defff904 	addi	sp,sp,-28
   2e2b4:	dfc00615 	stw	ra,24(sp)
   2e2b8:	df000515 	stw	fp,20(sp)
   2e2bc:	df000504 	addi	fp,sp,20
   2e2c0:	e13ffd15 	stw	r4,-12(fp)
   2e2c4:	e17ffe15 	stw	r5,-8(fp)
   2e2c8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e2cc:	e0bffd17 	ldw	r2,-12(fp)
   2e2d0:	10000816 	blt	r2,zero,2e2f4 <write+0x44>
   2e2d4:	01400304 	movi	r5,12
   2e2d8:	e13ffd17 	ldw	r4,-12(fp)
   2e2dc:	002aeb00 	call	2aeb0 <__mulsi3>
   2e2e0:	1007883a 	mov	r3,r2
   2e2e4:	008000f4 	movhi	r2,3
   2e2e8:	1082ad04 	addi	r2,r2,2740
   2e2ec:	1885883a 	add	r2,r3,r2
   2e2f0:	00000106 	br	2e2f8 <write+0x48>
   2e2f4:	0005883a 	mov	r2,zero
   2e2f8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2e2fc:	e0bffb17 	ldw	r2,-20(fp)
   2e300:	10002126 	beq	r2,zero,2e388 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2e304:	e0bffb17 	ldw	r2,-20(fp)
   2e308:	10800217 	ldw	r2,8(r2)
   2e30c:	108000cc 	andi	r2,r2,3
   2e310:	10001826 	beq	r2,zero,2e374 <write+0xc4>
   2e314:	e0bffb17 	ldw	r2,-20(fp)
   2e318:	10800017 	ldw	r2,0(r2)
   2e31c:	10800617 	ldw	r2,24(r2)
   2e320:	10001426 	beq	r2,zero,2e374 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2e324:	e0bffb17 	ldw	r2,-20(fp)
   2e328:	10800017 	ldw	r2,0(r2)
   2e32c:	10800617 	ldw	r2,24(r2)
   2e330:	e0ffff17 	ldw	r3,-4(fp)
   2e334:	180d883a 	mov	r6,r3
   2e338:	e17ffe17 	ldw	r5,-8(fp)
   2e33c:	e13ffb17 	ldw	r4,-20(fp)
   2e340:	103ee83a 	callr	r2
   2e344:	e0bffc15 	stw	r2,-16(fp)
   2e348:	e0bffc17 	ldw	r2,-16(fp)
   2e34c:	1000070e 	bge	r2,zero,2e36c <write+0xbc>
      {
        ALT_ERRNO = -rval;
   2e350:	002e2740 	call	2e274 <alt_get_errno>
   2e354:	1007883a 	mov	r3,r2
   2e358:	e0bffc17 	ldw	r2,-16(fp)
   2e35c:	0085c83a 	sub	r2,zero,r2
   2e360:	18800015 	stw	r2,0(r3)
        return -1;
   2e364:	00bfffc4 	movi	r2,-1
   2e368:	00000c06 	br	2e39c <write+0xec>
      }
      return rval;
   2e36c:	e0bffc17 	ldw	r2,-16(fp)
   2e370:	00000a06 	br	2e39c <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2e374:	002e2740 	call	2e274 <alt_get_errno>
   2e378:	1007883a 	mov	r3,r2
   2e37c:	00800344 	movi	r2,13
   2e380:	18800015 	stw	r2,0(r3)
   2e384:	00000406 	br	2e398 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2e388:	002e2740 	call	2e274 <alt_get_errno>
   2e38c:	1007883a 	mov	r3,r2
   2e390:	00801444 	movi	r2,81
   2e394:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e398:	00bfffc4 	movi	r2,-1
}
   2e39c:	e037883a 	mov	sp,fp
   2e3a0:	dfc00117 	ldw	ra,4(sp)
   2e3a4:	df000017 	ldw	fp,0(sp)
   2e3a8:	dec00204 	addi	sp,sp,8
   2e3ac:	f800283a 	ret

0002e3b0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2e3b0:	defffd04 	addi	sp,sp,-12
   2e3b4:	dfc00215 	stw	ra,8(sp)
   2e3b8:	df000115 	stw	fp,4(sp)
   2e3bc:	df000104 	addi	fp,sp,4
   2e3c0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2e3c4:	d1600804 	addi	r5,gp,-32736
   2e3c8:	e13fff17 	ldw	r4,-4(fp)
   2e3cc:	002f1600 	call	2f160 <alt_dev_llist_insert>
}
   2e3d0:	e037883a 	mov	sp,fp
   2e3d4:	dfc00117 	ldw	ra,4(sp)
   2e3d8:	df000017 	ldw	fp,0(sp)
   2e3dc:	dec00204 	addi	sp,sp,8
   2e3e0:	f800283a 	ret

0002e3e4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2e3e4:	defffd04 	addi	sp,sp,-12
   2e3e8:	dfc00215 	stw	ra,8(sp)
   2e3ec:	df000115 	stw	fp,4(sp)
   2e3f0:	df000104 	addi	fp,sp,4
   2e3f4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
   2e3f8:	002f86c0 	call	2f86c <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2e3fc:	00800044 	movi	r2,1
   2e400:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2e404:	0001883a 	nop
   2e408:	e037883a 	mov	sp,fp
   2e40c:	dfc00117 	ldw	ra,4(sp)
   2e410:	df000017 	ldw	fp,0(sp)
   2e414:	dec00204 	addi	sp,sp,8
   2e418:	f800283a 	ret

0002e41c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2e41c:	defffe04 	addi	sp,sp,-8
   2e420:	dfc00115 	stw	ra,4(sp)
   2e424:	df000015 	stw	fp,0(sp)
   2e428:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
   2e42c:	01c0fa04 	movi	r7,1000
   2e430:	01800144 	movi	r6,5
   2e434:	000b883a 	mov	r5,zero
   2e438:	01000134 	movhi	r4,4
   2e43c:	21000804 	addi	r4,r4,32
   2e440:	002ef5c0 	call	2ef5c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2e444:	01800184 	movi	r6,6
   2e448:	000b883a 	mov	r5,zero
   2e44c:	010000f4 	movhi	r4,3
   2e450:	21031704 	addi	r4,r4,3164
   2e454:	002e5e00 	call	2e5e0 <altera_avalon_jtag_uart_init>
   2e458:	010000f4 	movhi	r4,3
   2e45c:	21030d04 	addi	r4,r4,3124
   2e460:	002e3b00 	call	2e3b0 <alt_dev_reg>
}
   2e464:	0001883a 	nop
   2e468:	e037883a 	mov	sp,fp
   2e46c:	dfc00117 	ldw	ra,4(sp)
   2e470:	df000017 	ldw	fp,0(sp)
   2e474:	dec00204 	addi	sp,sp,8
   2e478:	f800283a 	ret

0002e47c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e47c:	defffa04 	addi	sp,sp,-24
   2e480:	dfc00515 	stw	ra,20(sp)
   2e484:	df000415 	stw	fp,16(sp)
   2e488:	df000404 	addi	fp,sp,16
   2e48c:	e13ffd15 	stw	r4,-12(fp)
   2e490:	e17ffe15 	stw	r5,-8(fp)
   2e494:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e498:	e0bffd17 	ldw	r2,-12(fp)
   2e49c:	10800017 	ldw	r2,0(r2)
   2e4a0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e4a4:	e0bffc17 	ldw	r2,-16(fp)
   2e4a8:	10c00a04 	addi	r3,r2,40
   2e4ac:	e0bffd17 	ldw	r2,-12(fp)
   2e4b0:	10800217 	ldw	r2,8(r2)
   2e4b4:	100f883a 	mov	r7,r2
   2e4b8:	e1bfff17 	ldw	r6,-4(fp)
   2e4bc:	e17ffe17 	ldw	r5,-8(fp)
   2e4c0:	1809883a 	mov	r4,r3
   2e4c4:	002eaa40 	call	2eaa4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e4c8:	e037883a 	mov	sp,fp
   2e4cc:	dfc00117 	ldw	ra,4(sp)
   2e4d0:	df000017 	ldw	fp,0(sp)
   2e4d4:	dec00204 	addi	sp,sp,8
   2e4d8:	f800283a 	ret

0002e4dc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2e4dc:	defffa04 	addi	sp,sp,-24
   2e4e0:	dfc00515 	stw	ra,20(sp)
   2e4e4:	df000415 	stw	fp,16(sp)
   2e4e8:	df000404 	addi	fp,sp,16
   2e4ec:	e13ffd15 	stw	r4,-12(fp)
   2e4f0:	e17ffe15 	stw	r5,-8(fp)
   2e4f4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e4f8:	e0bffd17 	ldw	r2,-12(fp)
   2e4fc:	10800017 	ldw	r2,0(r2)
   2e500:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2e504:	e0bffc17 	ldw	r2,-16(fp)
   2e508:	10c00a04 	addi	r3,r2,40
   2e50c:	e0bffd17 	ldw	r2,-12(fp)
   2e510:	10800217 	ldw	r2,8(r2)
   2e514:	100f883a 	mov	r7,r2
   2e518:	e1bfff17 	ldw	r6,-4(fp)
   2e51c:	e17ffe17 	ldw	r5,-8(fp)
   2e520:	1809883a 	mov	r4,r3
   2e524:	002ecc00 	call	2ecc0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2e528:	e037883a 	mov	sp,fp
   2e52c:	dfc00117 	ldw	ra,4(sp)
   2e530:	df000017 	ldw	fp,0(sp)
   2e534:	dec00204 	addi	sp,sp,8
   2e538:	f800283a 	ret

0002e53c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2e53c:	defffc04 	addi	sp,sp,-16
   2e540:	dfc00315 	stw	ra,12(sp)
   2e544:	df000215 	stw	fp,8(sp)
   2e548:	df000204 	addi	fp,sp,8
   2e54c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e550:	e0bfff17 	ldw	r2,-4(fp)
   2e554:	10800017 	ldw	r2,0(r2)
   2e558:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2e55c:	e0bffe17 	ldw	r2,-8(fp)
   2e560:	10c00a04 	addi	r3,r2,40
   2e564:	e0bfff17 	ldw	r2,-4(fp)
   2e568:	10800217 	ldw	r2,8(r2)
   2e56c:	100b883a 	mov	r5,r2
   2e570:	1809883a 	mov	r4,r3
   2e574:	002e94c0 	call	2e94c <altera_avalon_jtag_uart_close>
}
   2e578:	e037883a 	mov	sp,fp
   2e57c:	dfc00117 	ldw	ra,4(sp)
   2e580:	df000017 	ldw	fp,0(sp)
   2e584:	dec00204 	addi	sp,sp,8
   2e588:	f800283a 	ret

0002e58c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2e58c:	defffa04 	addi	sp,sp,-24
   2e590:	dfc00515 	stw	ra,20(sp)
   2e594:	df000415 	stw	fp,16(sp)
   2e598:	df000404 	addi	fp,sp,16
   2e59c:	e13ffd15 	stw	r4,-12(fp)
   2e5a0:	e17ffe15 	stw	r5,-8(fp)
   2e5a4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2e5a8:	e0bffd17 	ldw	r2,-12(fp)
   2e5ac:	10800017 	ldw	r2,0(r2)
   2e5b0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2e5b4:	e0bffc17 	ldw	r2,-16(fp)
   2e5b8:	10800a04 	addi	r2,r2,40
   2e5bc:	e1bfff17 	ldw	r6,-4(fp)
   2e5c0:	e17ffe17 	ldw	r5,-8(fp)
   2e5c4:	1009883a 	mov	r4,r2
   2e5c8:	002e9b40 	call	2e9b4 <altera_avalon_jtag_uart_ioctl>
}
   2e5cc:	e037883a 	mov	sp,fp
   2e5d0:	dfc00117 	ldw	ra,4(sp)
   2e5d4:	df000017 	ldw	fp,0(sp)
   2e5d8:	dec00204 	addi	sp,sp,8
   2e5dc:	f800283a 	ret

0002e5e0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e5e0:	defffa04 	addi	sp,sp,-24
   2e5e4:	dfc00515 	stw	ra,20(sp)
   2e5e8:	df000415 	stw	fp,16(sp)
   2e5ec:	df000404 	addi	fp,sp,16
   2e5f0:	e13ffd15 	stw	r4,-12(fp)
   2e5f4:	e17ffe15 	stw	r5,-8(fp)
   2e5f8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e5fc:	e0bffd17 	ldw	r2,-12(fp)
   2e600:	00c00044 	movi	r3,1
   2e604:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e608:	e0bffd17 	ldw	r2,-12(fp)
   2e60c:	10800017 	ldw	r2,0(r2)
   2e610:	10800104 	addi	r2,r2,4
   2e614:	1007883a 	mov	r3,r2
   2e618:	e0bffd17 	ldw	r2,-12(fp)
   2e61c:	10800817 	ldw	r2,32(r2)
   2e620:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2e624:	e0bffe17 	ldw	r2,-8(fp)
   2e628:	e0ffff17 	ldw	r3,-4(fp)
   2e62c:	d8000015 	stw	zero,0(sp)
   2e630:	e1fffd17 	ldw	r7,-12(fp)
   2e634:	018000f4 	movhi	r6,3
   2e638:	31b9a804 	addi	r6,r6,-6496
   2e63c:	180b883a 	mov	r5,r3
   2e640:	1009883a 	mov	r4,r2
   2e644:	002d9b00 	call	2d9b0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e648:	e0bffd17 	ldw	r2,-12(fp)
   2e64c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e650:	e0bffd17 	ldw	r2,-12(fp)
   2e654:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e658:	d0e6de17 	ldw	r3,-25736(gp)
   2e65c:	e1fffd17 	ldw	r7,-12(fp)
   2e660:	018000f4 	movhi	r6,3
   2e664:	31ba2b04 	addi	r6,r6,-5972
   2e668:	180b883a 	mov	r5,r3
   2e66c:	1009883a 	mov	r4,r2
   2e670:	002efd80 	call	2efd8 <alt_alarm_start>
   2e674:	1000040e 	bge	r2,zero,2e688 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e678:	e0fffd17 	ldw	r3,-12(fp)
   2e67c:	00a00034 	movhi	r2,32768
   2e680:	10bfffc4 	addi	r2,r2,-1
   2e684:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e688:	0001883a 	nop
   2e68c:	e037883a 	mov	sp,fp
   2e690:	dfc00117 	ldw	ra,4(sp)
   2e694:	df000017 	ldw	fp,0(sp)
   2e698:	dec00204 	addi	sp,sp,8
   2e69c:	f800283a 	ret

0002e6a0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e6a0:	defff804 	addi	sp,sp,-32
   2e6a4:	df000715 	stw	fp,28(sp)
   2e6a8:	df000704 	addi	fp,sp,28
   2e6ac:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e6b0:	e0bfff17 	ldw	r2,-4(fp)
   2e6b4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2e6b8:	e0bffb17 	ldw	r2,-20(fp)
   2e6bc:	10800017 	ldw	r2,0(r2)
   2e6c0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e6c4:	e0bffc17 	ldw	r2,-16(fp)
   2e6c8:	10800104 	addi	r2,r2,4
   2e6cc:	10800037 	ldwio	r2,0(r2)
   2e6d0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e6d4:	e0bffd17 	ldw	r2,-12(fp)
   2e6d8:	1080c00c 	andi	r2,r2,768
   2e6dc:	10006d26 	beq	r2,zero,2e894 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e6e0:	e0bffd17 	ldw	r2,-12(fp)
   2e6e4:	1080400c 	andi	r2,r2,256
   2e6e8:	10003526 	beq	r2,zero,2e7c0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e6ec:	00800074 	movhi	r2,1
   2e6f0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e6f4:	e0bffb17 	ldw	r2,-20(fp)
   2e6f8:	10800a17 	ldw	r2,40(r2)
   2e6fc:	10800044 	addi	r2,r2,1
   2e700:	1081ffcc 	andi	r2,r2,2047
   2e704:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2e708:	e0bffb17 	ldw	r2,-20(fp)
   2e70c:	10c00b17 	ldw	r3,44(r2)
   2e710:	e0bffe17 	ldw	r2,-8(fp)
   2e714:	18801526 	beq	r3,r2,2e76c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e718:	e0bffc17 	ldw	r2,-16(fp)
   2e71c:	10800037 	ldwio	r2,0(r2)
   2e720:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e724:	e0bff917 	ldw	r2,-28(fp)
   2e728:	10a0000c 	andi	r2,r2,32768
   2e72c:	10001126 	beq	r2,zero,2e774 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e730:	e0bffb17 	ldw	r2,-20(fp)
   2e734:	10800a17 	ldw	r2,40(r2)
   2e738:	e0fff917 	ldw	r3,-28(fp)
   2e73c:	1809883a 	mov	r4,r3
   2e740:	e0fffb17 	ldw	r3,-20(fp)
   2e744:	1885883a 	add	r2,r3,r2
   2e748:	10800e04 	addi	r2,r2,56
   2e74c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e750:	e0bffb17 	ldw	r2,-20(fp)
   2e754:	10800a17 	ldw	r2,40(r2)
   2e758:	10800044 	addi	r2,r2,1
   2e75c:	10c1ffcc 	andi	r3,r2,2047
   2e760:	e0bffb17 	ldw	r2,-20(fp)
   2e764:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2e768:	003fe206 	br	2e6f4 <__alt_data_end+0xfffef2f4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2e76c:	0001883a 	nop
   2e770:	00000106 	br	2e778 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2e774:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e778:	e0bff917 	ldw	r2,-28(fp)
   2e77c:	10bfffec 	andhi	r2,r2,65535
   2e780:	10000f26 	beq	r2,zero,2e7c0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e784:	e0bffb17 	ldw	r2,-20(fp)
   2e788:	10c00817 	ldw	r3,32(r2)
   2e78c:	00bfff84 	movi	r2,-2
   2e790:	1886703a 	and	r3,r3,r2
   2e794:	e0bffb17 	ldw	r2,-20(fp)
   2e798:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e79c:	e0bffc17 	ldw	r2,-16(fp)
   2e7a0:	10800104 	addi	r2,r2,4
   2e7a4:	1007883a 	mov	r3,r2
   2e7a8:	e0bffb17 	ldw	r2,-20(fp)
   2e7ac:	10800817 	ldw	r2,32(r2)
   2e7b0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e7b4:	e0bffc17 	ldw	r2,-16(fp)
   2e7b8:	10800104 	addi	r2,r2,4
   2e7bc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e7c0:	e0bffd17 	ldw	r2,-12(fp)
   2e7c4:	1080800c 	andi	r2,r2,512
   2e7c8:	103fbe26 	beq	r2,zero,2e6c4 <__alt_data_end+0xfffef2c4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e7cc:	e0bffd17 	ldw	r2,-12(fp)
   2e7d0:	1004d43a 	srli	r2,r2,16
   2e7d4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e7d8:	00001406 	br	2e82c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e7dc:	e0bffc17 	ldw	r2,-16(fp)
   2e7e0:	e0fffb17 	ldw	r3,-20(fp)
   2e7e4:	18c00d17 	ldw	r3,52(r3)
   2e7e8:	e13ffb17 	ldw	r4,-20(fp)
   2e7ec:	20c7883a 	add	r3,r4,r3
   2e7f0:	18c20e04 	addi	r3,r3,2104
   2e7f4:	18c00003 	ldbu	r3,0(r3)
   2e7f8:	18c03fcc 	andi	r3,r3,255
   2e7fc:	18c0201c 	xori	r3,r3,128
   2e800:	18ffe004 	addi	r3,r3,-128
   2e804:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e808:	e0bffb17 	ldw	r2,-20(fp)
   2e80c:	10800d17 	ldw	r2,52(r2)
   2e810:	10800044 	addi	r2,r2,1
   2e814:	10c1ffcc 	andi	r3,r2,2047
   2e818:	e0bffb17 	ldw	r2,-20(fp)
   2e81c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2e820:	e0bffa17 	ldw	r2,-24(fp)
   2e824:	10bfffc4 	addi	r2,r2,-1
   2e828:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e82c:	e0bffa17 	ldw	r2,-24(fp)
   2e830:	10000526 	beq	r2,zero,2e848 <altera_avalon_jtag_uart_irq+0x1a8>
   2e834:	e0bffb17 	ldw	r2,-20(fp)
   2e838:	10c00d17 	ldw	r3,52(r2)
   2e83c:	e0bffb17 	ldw	r2,-20(fp)
   2e840:	10800c17 	ldw	r2,48(r2)
   2e844:	18bfe51e 	bne	r3,r2,2e7dc <__alt_data_end+0xfffef3dc>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2e848:	e0bffa17 	ldw	r2,-24(fp)
   2e84c:	103f9d26 	beq	r2,zero,2e6c4 <__alt_data_end+0xfffef2c4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e850:	e0bffb17 	ldw	r2,-20(fp)
   2e854:	10c00817 	ldw	r3,32(r2)
   2e858:	00bfff44 	movi	r2,-3
   2e85c:	1886703a 	and	r3,r3,r2
   2e860:	e0bffb17 	ldw	r2,-20(fp)
   2e864:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e868:	e0bffb17 	ldw	r2,-20(fp)
   2e86c:	10800017 	ldw	r2,0(r2)
   2e870:	10800104 	addi	r2,r2,4
   2e874:	1007883a 	mov	r3,r2
   2e878:	e0bffb17 	ldw	r2,-20(fp)
   2e87c:	10800817 	ldw	r2,32(r2)
   2e880:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e884:	e0bffc17 	ldw	r2,-16(fp)
   2e888:	10800104 	addi	r2,r2,4
   2e88c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2e890:	003f8c06 	br	2e6c4 <__alt_data_end+0xfffef2c4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2e894:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2e898:	0001883a 	nop
   2e89c:	e037883a 	mov	sp,fp
   2e8a0:	df000017 	ldw	fp,0(sp)
   2e8a4:	dec00104 	addi	sp,sp,4
   2e8a8:	f800283a 	ret

0002e8ac <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e8ac:	defff804 	addi	sp,sp,-32
   2e8b0:	df000715 	stw	fp,28(sp)
   2e8b4:	df000704 	addi	fp,sp,28
   2e8b8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e8bc:	e0bffb17 	ldw	r2,-20(fp)
   2e8c0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e8c4:	e0bff917 	ldw	r2,-28(fp)
   2e8c8:	10800017 	ldw	r2,0(r2)
   2e8cc:	10800104 	addi	r2,r2,4
   2e8d0:	10800037 	ldwio	r2,0(r2)
   2e8d4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e8d8:	e0bffa17 	ldw	r2,-24(fp)
   2e8dc:	1081000c 	andi	r2,r2,1024
   2e8e0:	10000b26 	beq	r2,zero,2e910 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e8e4:	e0bff917 	ldw	r2,-28(fp)
   2e8e8:	10800017 	ldw	r2,0(r2)
   2e8ec:	10800104 	addi	r2,r2,4
   2e8f0:	1007883a 	mov	r3,r2
   2e8f4:	e0bff917 	ldw	r2,-28(fp)
   2e8f8:	10800817 	ldw	r2,32(r2)
   2e8fc:	10810014 	ori	r2,r2,1024
   2e900:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2e904:	e0bff917 	ldw	r2,-28(fp)
   2e908:	10000915 	stw	zero,36(r2)
   2e90c:	00000a06 	br	2e938 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2e910:	e0bff917 	ldw	r2,-28(fp)
   2e914:	10c00917 	ldw	r3,36(r2)
   2e918:	00a00034 	movhi	r2,32768
   2e91c:	10bfff04 	addi	r2,r2,-4
   2e920:	10c00536 	bltu	r2,r3,2e938 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2e924:	e0bff917 	ldw	r2,-28(fp)
   2e928:	10800917 	ldw	r2,36(r2)
   2e92c:	10c00044 	addi	r3,r2,1
   2e930:	e0bff917 	ldw	r2,-28(fp)
   2e934:	10c00915 	stw	r3,36(r2)
   2e938:	d0a6de17 	ldw	r2,-25736(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2e93c:	e037883a 	mov	sp,fp
   2e940:	df000017 	ldw	fp,0(sp)
   2e944:	dec00104 	addi	sp,sp,4
   2e948:	f800283a 	ret

0002e94c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2e94c:	defffd04 	addi	sp,sp,-12
   2e950:	df000215 	stw	fp,8(sp)
   2e954:	df000204 	addi	fp,sp,8
   2e958:	e13ffe15 	stw	r4,-8(fp)
   2e95c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e960:	00000506 	br	2e978 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2e964:	e0bfff17 	ldw	r2,-4(fp)
   2e968:	1090000c 	andi	r2,r2,16384
   2e96c:	10000226 	beq	r2,zero,2e978 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2e970:	00bffd44 	movi	r2,-11
   2e974:	00000b06 	br	2e9a4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e978:	e0bffe17 	ldw	r2,-8(fp)
   2e97c:	10c00d17 	ldw	r3,52(r2)
   2e980:	e0bffe17 	ldw	r2,-8(fp)
   2e984:	10800c17 	ldw	r2,48(r2)
   2e988:	18800526 	beq	r3,r2,2e9a0 <altera_avalon_jtag_uart_close+0x54>
   2e98c:	e0bffe17 	ldw	r2,-8(fp)
   2e990:	10c00917 	ldw	r3,36(r2)
   2e994:	e0bffe17 	ldw	r2,-8(fp)
   2e998:	10800117 	ldw	r2,4(r2)
   2e99c:	18bff136 	bltu	r3,r2,2e964 <__alt_data_end+0xfffef564>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2e9a0:	0005883a 	mov	r2,zero
}
   2e9a4:	e037883a 	mov	sp,fp
   2e9a8:	df000017 	ldw	fp,0(sp)
   2e9ac:	dec00104 	addi	sp,sp,4
   2e9b0:	f800283a 	ret

0002e9b4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2e9b4:	defffa04 	addi	sp,sp,-24
   2e9b8:	df000515 	stw	fp,20(sp)
   2e9bc:	df000504 	addi	fp,sp,20
   2e9c0:	e13ffd15 	stw	r4,-12(fp)
   2e9c4:	e17ffe15 	stw	r5,-8(fp)
   2e9c8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2e9cc:	00bff9c4 	movi	r2,-25
   2e9d0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2e9d4:	e0bffe17 	ldw	r2,-8(fp)
   2e9d8:	10da8060 	cmpeqi	r3,r2,27137
   2e9dc:	1800031e 	bne	r3,zero,2e9ec <altera_avalon_jtag_uart_ioctl+0x38>
   2e9e0:	109a80a0 	cmpeqi	r2,r2,27138
   2e9e4:	1000181e 	bne	r2,zero,2ea48 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2e9e8:	00002906 	br	2ea90 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2e9ec:	e0bffd17 	ldw	r2,-12(fp)
   2e9f0:	10c00117 	ldw	r3,4(r2)
   2e9f4:	00a00034 	movhi	r2,32768
   2e9f8:	10bfffc4 	addi	r2,r2,-1
   2e9fc:	18802126 	beq	r3,r2,2ea84 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2ea00:	e0bfff17 	ldw	r2,-4(fp)
   2ea04:	10800017 	ldw	r2,0(r2)
   2ea08:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2ea0c:	e0bffc17 	ldw	r2,-16(fp)
   2ea10:	10800090 	cmplti	r2,r2,2
   2ea14:	1000061e 	bne	r2,zero,2ea30 <altera_avalon_jtag_uart_ioctl+0x7c>
   2ea18:	e0fffc17 	ldw	r3,-16(fp)
   2ea1c:	00a00034 	movhi	r2,32768
   2ea20:	10bfffc4 	addi	r2,r2,-1
   2ea24:	18800226 	beq	r3,r2,2ea30 <altera_avalon_jtag_uart_ioctl+0x7c>
   2ea28:	e0bffc17 	ldw	r2,-16(fp)
   2ea2c:	00000206 	br	2ea38 <altera_avalon_jtag_uart_ioctl+0x84>
   2ea30:	00a00034 	movhi	r2,32768
   2ea34:	10bfff84 	addi	r2,r2,-2
   2ea38:	e0fffd17 	ldw	r3,-12(fp)
   2ea3c:	18800115 	stw	r2,4(r3)
      rc = 0;
   2ea40:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2ea44:	00000f06 	br	2ea84 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2ea48:	e0bffd17 	ldw	r2,-12(fp)
   2ea4c:	10c00117 	ldw	r3,4(r2)
   2ea50:	00a00034 	movhi	r2,32768
   2ea54:	10bfffc4 	addi	r2,r2,-1
   2ea58:	18800c26 	beq	r3,r2,2ea8c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2ea5c:	e0bffd17 	ldw	r2,-12(fp)
   2ea60:	10c00917 	ldw	r3,36(r2)
   2ea64:	e0bffd17 	ldw	r2,-12(fp)
   2ea68:	10800117 	ldw	r2,4(r2)
   2ea6c:	1885803a 	cmpltu	r2,r3,r2
   2ea70:	10c03fcc 	andi	r3,r2,255
   2ea74:	e0bfff17 	ldw	r2,-4(fp)
   2ea78:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2ea7c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2ea80:	00000206 	br	2ea8c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2ea84:	0001883a 	nop
   2ea88:	00000106 	br	2ea90 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2ea8c:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2ea90:	e0bffb17 	ldw	r2,-20(fp)
}
   2ea94:	e037883a 	mov	sp,fp
   2ea98:	df000017 	ldw	fp,0(sp)
   2ea9c:	dec00104 	addi	sp,sp,4
   2eaa0:	f800283a 	ret

0002eaa4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2eaa4:	defff304 	addi	sp,sp,-52
   2eaa8:	dfc00c15 	stw	ra,48(sp)
   2eaac:	df000b15 	stw	fp,44(sp)
   2eab0:	df000b04 	addi	fp,sp,44
   2eab4:	e13ffc15 	stw	r4,-16(fp)
   2eab8:	e17ffd15 	stw	r5,-12(fp)
   2eabc:	e1bffe15 	stw	r6,-8(fp)
   2eac0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2eac4:	e0bffd17 	ldw	r2,-12(fp)
   2eac8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2eacc:	00004706 	br	2ebec <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2ead0:	e0bffc17 	ldw	r2,-16(fp)
   2ead4:	10800a17 	ldw	r2,40(r2)
   2ead8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2eadc:	e0bffc17 	ldw	r2,-16(fp)
   2eae0:	10800b17 	ldw	r2,44(r2)
   2eae4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2eae8:	e0fff717 	ldw	r3,-36(fp)
   2eaec:	e0bff817 	ldw	r2,-32(fp)
   2eaf0:	18800536 	bltu	r3,r2,2eb08 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2eaf4:	e0fff717 	ldw	r3,-36(fp)
   2eaf8:	e0bff817 	ldw	r2,-32(fp)
   2eafc:	1885c83a 	sub	r2,r3,r2
   2eb00:	e0bff615 	stw	r2,-40(fp)
   2eb04:	00000406 	br	2eb18 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2eb08:	00c20004 	movi	r3,2048
   2eb0c:	e0bff817 	ldw	r2,-32(fp)
   2eb10:	1885c83a 	sub	r2,r3,r2
   2eb14:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2eb18:	e0bff617 	ldw	r2,-40(fp)
   2eb1c:	10001e26 	beq	r2,zero,2eb98 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2eb20:	e0fffe17 	ldw	r3,-8(fp)
   2eb24:	e0bff617 	ldw	r2,-40(fp)
   2eb28:	1880022e 	bgeu	r3,r2,2eb34 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2eb2c:	e0bffe17 	ldw	r2,-8(fp)
   2eb30:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2eb34:	e0bffc17 	ldw	r2,-16(fp)
   2eb38:	10c00e04 	addi	r3,r2,56
   2eb3c:	e0bff817 	ldw	r2,-32(fp)
   2eb40:	1885883a 	add	r2,r3,r2
   2eb44:	e1bff617 	ldw	r6,-40(fp)
   2eb48:	100b883a 	mov	r5,r2
   2eb4c:	e13ff517 	ldw	r4,-44(fp)
   2eb50:	0025fac0 	call	25fac <memcpy>
      ptr   += n;
   2eb54:	e0fff517 	ldw	r3,-44(fp)
   2eb58:	e0bff617 	ldw	r2,-40(fp)
   2eb5c:	1885883a 	add	r2,r3,r2
   2eb60:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2eb64:	e0fffe17 	ldw	r3,-8(fp)
   2eb68:	e0bff617 	ldw	r2,-40(fp)
   2eb6c:	1885c83a 	sub	r2,r3,r2
   2eb70:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2eb74:	e0fff817 	ldw	r3,-32(fp)
   2eb78:	e0bff617 	ldw	r2,-40(fp)
   2eb7c:	1885883a 	add	r2,r3,r2
   2eb80:	10c1ffcc 	andi	r3,r2,2047
   2eb84:	e0bffc17 	ldw	r2,-16(fp)
   2eb88:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2eb8c:	e0bffe17 	ldw	r2,-8(fp)
   2eb90:	00bfcf16 	blt	zero,r2,2ead0 <__alt_data_end+0xfffef6d0>
   2eb94:	00000106 	br	2eb9c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2eb98:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2eb9c:	e0fff517 	ldw	r3,-44(fp)
   2eba0:	e0bffd17 	ldw	r2,-12(fp)
   2eba4:	1880141e 	bne	r3,r2,2ebf8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2eba8:	e0bfff17 	ldw	r2,-4(fp)
   2ebac:	1090000c 	andi	r2,r2,16384
   2ebb0:	1000131e 	bne	r2,zero,2ec00 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2ebb4:	0001883a 	nop
   2ebb8:	e0bffc17 	ldw	r2,-16(fp)
   2ebbc:	10c00a17 	ldw	r3,40(r2)
   2ebc0:	e0bff717 	ldw	r2,-36(fp)
   2ebc4:	1880051e 	bne	r3,r2,2ebdc <altera_avalon_jtag_uart_read+0x138>
   2ebc8:	e0bffc17 	ldw	r2,-16(fp)
   2ebcc:	10c00917 	ldw	r3,36(r2)
   2ebd0:	e0bffc17 	ldw	r2,-16(fp)
   2ebd4:	10800117 	ldw	r2,4(r2)
   2ebd8:	18bff736 	bltu	r3,r2,2ebb8 <__alt_data_end+0xfffef7b8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2ebdc:	e0bffc17 	ldw	r2,-16(fp)
   2ebe0:	10c00a17 	ldw	r3,40(r2)
   2ebe4:	e0bff717 	ldw	r2,-36(fp)
   2ebe8:	18800726 	beq	r3,r2,2ec08 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2ebec:	e0bffe17 	ldw	r2,-8(fp)
   2ebf0:	00bfb716 	blt	zero,r2,2ead0 <__alt_data_end+0xfffef6d0>
   2ebf4:	00000506 	br	2ec0c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2ebf8:	0001883a 	nop
   2ebfc:	00000306 	br	2ec0c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2ec00:	0001883a 	nop
   2ec04:	00000106 	br	2ec0c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2ec08:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2ec0c:	e0fff517 	ldw	r3,-44(fp)
   2ec10:	e0bffd17 	ldw	r2,-12(fp)
   2ec14:	18801826 	beq	r3,r2,2ec78 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2ec18:	0005303a 	rdctl	r2,status
   2ec1c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ec20:	e0fffb17 	ldw	r3,-20(fp)
   2ec24:	00bfff84 	movi	r2,-2
   2ec28:	1884703a 	and	r2,r3,r2
   2ec2c:	1001703a 	wrctl	status,r2
  
  return context;
   2ec30:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2ec34:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2ec38:	e0bffc17 	ldw	r2,-16(fp)
   2ec3c:	10800817 	ldw	r2,32(r2)
   2ec40:	10c00054 	ori	r3,r2,1
   2ec44:	e0bffc17 	ldw	r2,-16(fp)
   2ec48:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ec4c:	e0bffc17 	ldw	r2,-16(fp)
   2ec50:	10800017 	ldw	r2,0(r2)
   2ec54:	10800104 	addi	r2,r2,4
   2ec58:	1007883a 	mov	r3,r2
   2ec5c:	e0bffc17 	ldw	r2,-16(fp)
   2ec60:	10800817 	ldw	r2,32(r2)
   2ec64:	18800035 	stwio	r2,0(r3)
   2ec68:	e0bffa17 	ldw	r2,-24(fp)
   2ec6c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ec70:	e0bff917 	ldw	r2,-28(fp)
   2ec74:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2ec78:	e0fff517 	ldw	r3,-44(fp)
   2ec7c:	e0bffd17 	ldw	r2,-12(fp)
   2ec80:	18800426 	beq	r3,r2,2ec94 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2ec84:	e0fff517 	ldw	r3,-44(fp)
   2ec88:	e0bffd17 	ldw	r2,-12(fp)
   2ec8c:	1885c83a 	sub	r2,r3,r2
   2ec90:	00000606 	br	2ecac <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2ec94:	e0bfff17 	ldw	r2,-4(fp)
   2ec98:	1090000c 	andi	r2,r2,16384
   2ec9c:	10000226 	beq	r2,zero,2eca8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2eca0:	00bffd44 	movi	r2,-11
   2eca4:	00000106 	br	2ecac <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2eca8:	00bffec4 	movi	r2,-5
}
   2ecac:	e037883a 	mov	sp,fp
   2ecb0:	dfc00117 	ldw	ra,4(sp)
   2ecb4:	df000017 	ldw	fp,0(sp)
   2ecb8:	dec00204 	addi	sp,sp,8
   2ecbc:	f800283a 	ret

0002ecc0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2ecc0:	defff304 	addi	sp,sp,-52
   2ecc4:	dfc00c15 	stw	ra,48(sp)
   2ecc8:	df000b15 	stw	fp,44(sp)
   2eccc:	df000b04 	addi	fp,sp,44
   2ecd0:	e13ffc15 	stw	r4,-16(fp)
   2ecd4:	e17ffd15 	stw	r5,-12(fp)
   2ecd8:	e1bffe15 	stw	r6,-8(fp)
   2ecdc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2ece0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2ece4:	e0bffd17 	ldw	r2,-12(fp)
   2ece8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2ecec:	00003706 	br	2edcc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2ecf0:	e0bffc17 	ldw	r2,-16(fp)
   2ecf4:	10800c17 	ldw	r2,48(r2)
   2ecf8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2ecfc:	e0bffc17 	ldw	r2,-16(fp)
   2ed00:	10800d17 	ldw	r2,52(r2)
   2ed04:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2ed08:	e0fff917 	ldw	r3,-28(fp)
   2ed0c:	e0bff517 	ldw	r2,-44(fp)
   2ed10:	1880062e 	bgeu	r3,r2,2ed2c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2ed14:	e0fff517 	ldw	r3,-44(fp)
   2ed18:	e0bff917 	ldw	r2,-28(fp)
   2ed1c:	1885c83a 	sub	r2,r3,r2
   2ed20:	10bfffc4 	addi	r2,r2,-1
   2ed24:	e0bff615 	stw	r2,-40(fp)
   2ed28:	00000b06 	br	2ed58 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2ed2c:	e0bff517 	ldw	r2,-44(fp)
   2ed30:	10000526 	beq	r2,zero,2ed48 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2ed34:	00c20004 	movi	r3,2048
   2ed38:	e0bff917 	ldw	r2,-28(fp)
   2ed3c:	1885c83a 	sub	r2,r3,r2
   2ed40:	e0bff615 	stw	r2,-40(fp)
   2ed44:	00000406 	br	2ed58 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2ed48:	00c1ffc4 	movi	r3,2047
   2ed4c:	e0bff917 	ldw	r2,-28(fp)
   2ed50:	1885c83a 	sub	r2,r3,r2
   2ed54:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2ed58:	e0bff617 	ldw	r2,-40(fp)
   2ed5c:	10001e26 	beq	r2,zero,2edd8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2ed60:	e0fffe17 	ldw	r3,-8(fp)
   2ed64:	e0bff617 	ldw	r2,-40(fp)
   2ed68:	1880022e 	bgeu	r3,r2,2ed74 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2ed6c:	e0bffe17 	ldw	r2,-8(fp)
   2ed70:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2ed74:	e0bffc17 	ldw	r2,-16(fp)
   2ed78:	10c20e04 	addi	r3,r2,2104
   2ed7c:	e0bff917 	ldw	r2,-28(fp)
   2ed80:	1885883a 	add	r2,r3,r2
   2ed84:	e1bff617 	ldw	r6,-40(fp)
   2ed88:	e17ffd17 	ldw	r5,-12(fp)
   2ed8c:	1009883a 	mov	r4,r2
   2ed90:	0025fac0 	call	25fac <memcpy>
      ptr   += n;
   2ed94:	e0fffd17 	ldw	r3,-12(fp)
   2ed98:	e0bff617 	ldw	r2,-40(fp)
   2ed9c:	1885883a 	add	r2,r3,r2
   2eda0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2eda4:	e0fffe17 	ldw	r3,-8(fp)
   2eda8:	e0bff617 	ldw	r2,-40(fp)
   2edac:	1885c83a 	sub	r2,r3,r2
   2edb0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2edb4:	e0fff917 	ldw	r3,-28(fp)
   2edb8:	e0bff617 	ldw	r2,-40(fp)
   2edbc:	1885883a 	add	r2,r3,r2
   2edc0:	10c1ffcc 	andi	r3,r2,2047
   2edc4:	e0bffc17 	ldw	r2,-16(fp)
   2edc8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2edcc:	e0bffe17 	ldw	r2,-8(fp)
   2edd0:	00bfc716 	blt	zero,r2,2ecf0 <__alt_data_end+0xfffef8f0>
   2edd4:	00000106 	br	2eddc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2edd8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eddc:	0005303a 	rdctl	r2,status
   2ede0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ede4:	e0fffb17 	ldw	r3,-20(fp)
   2ede8:	00bfff84 	movi	r2,-2
   2edec:	1884703a 	and	r2,r3,r2
   2edf0:	1001703a 	wrctl	status,r2
  
  return context;
   2edf4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2edf8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2edfc:	e0bffc17 	ldw	r2,-16(fp)
   2ee00:	10800817 	ldw	r2,32(r2)
   2ee04:	10c00094 	ori	r3,r2,2
   2ee08:	e0bffc17 	ldw	r2,-16(fp)
   2ee0c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ee10:	e0bffc17 	ldw	r2,-16(fp)
   2ee14:	10800017 	ldw	r2,0(r2)
   2ee18:	10800104 	addi	r2,r2,4
   2ee1c:	1007883a 	mov	r3,r2
   2ee20:	e0bffc17 	ldw	r2,-16(fp)
   2ee24:	10800817 	ldw	r2,32(r2)
   2ee28:	18800035 	stwio	r2,0(r3)
   2ee2c:	e0bffa17 	ldw	r2,-24(fp)
   2ee30:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ee34:	e0bff817 	ldw	r2,-32(fp)
   2ee38:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2ee3c:	e0bffe17 	ldw	r2,-8(fp)
   2ee40:	0080100e 	bge	zero,r2,2ee84 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2ee44:	e0bfff17 	ldw	r2,-4(fp)
   2ee48:	1090000c 	andi	r2,r2,16384
   2ee4c:	1000101e 	bne	r2,zero,2ee90 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2ee50:	0001883a 	nop
   2ee54:	e0bffc17 	ldw	r2,-16(fp)
   2ee58:	10c00d17 	ldw	r3,52(r2)
   2ee5c:	e0bff517 	ldw	r2,-44(fp)
   2ee60:	1880051e 	bne	r3,r2,2ee78 <altera_avalon_jtag_uart_write+0x1b8>
   2ee64:	e0bffc17 	ldw	r2,-16(fp)
   2ee68:	10c00917 	ldw	r3,36(r2)
   2ee6c:	e0bffc17 	ldw	r2,-16(fp)
   2ee70:	10800117 	ldw	r2,4(r2)
   2ee74:	18bff736 	bltu	r3,r2,2ee54 <__alt_data_end+0xfffefa54>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2ee78:	e0bffc17 	ldw	r2,-16(fp)
   2ee7c:	10800917 	ldw	r2,36(r2)
   2ee80:	1000051e 	bne	r2,zero,2ee98 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2ee84:	e0bffe17 	ldw	r2,-8(fp)
   2ee88:	00bfd016 	blt	zero,r2,2edcc <__alt_data_end+0xfffef9cc>
   2ee8c:	00000306 	br	2ee9c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2ee90:	0001883a 	nop
   2ee94:	00000106 	br	2ee9c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2ee98:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2ee9c:	e0fffd17 	ldw	r3,-12(fp)
   2eea0:	e0bff717 	ldw	r2,-36(fp)
   2eea4:	18800426 	beq	r3,r2,2eeb8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2eea8:	e0fffd17 	ldw	r3,-12(fp)
   2eeac:	e0bff717 	ldw	r2,-36(fp)
   2eeb0:	1885c83a 	sub	r2,r3,r2
   2eeb4:	00000606 	br	2eed0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2eeb8:	e0bfff17 	ldw	r2,-4(fp)
   2eebc:	1090000c 	andi	r2,r2,16384
   2eec0:	10000226 	beq	r2,zero,2eecc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2eec4:	00bffd44 	movi	r2,-11
   2eec8:	00000106 	br	2eed0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2eecc:	00bffec4 	movi	r2,-5
}
   2eed0:	e037883a 	mov	sp,fp
   2eed4:	dfc00117 	ldw	ra,4(sp)
   2eed8:	df000017 	ldw	fp,0(sp)
   2eedc:	dec00204 	addi	sp,sp,8
   2eee0:	f800283a 	ret

0002eee4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   2eee4:	defffa04 	addi	sp,sp,-24
   2eee8:	dfc00515 	stw	ra,20(sp)
   2eeec:	df000415 	stw	fp,16(sp)
   2eef0:	df000404 	addi	fp,sp,16
   2eef4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   2eef8:	0007883a 	mov	r3,zero
   2eefc:	e0bfff17 	ldw	r2,-4(fp)
   2ef00:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   2ef04:	e0bfff17 	ldw	r2,-4(fp)
   2ef08:	10800104 	addi	r2,r2,4
   2ef0c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2ef10:	0005303a 	rdctl	r2,status
   2ef14:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ef18:	e0fffd17 	ldw	r3,-12(fp)
   2ef1c:	00bfff84 	movi	r2,-2
   2ef20:	1884703a 	and	r2,r3,r2
   2ef24:	1001703a 	wrctl	status,r2
  
  return context;
   2ef28:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   2ef2c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   2ef30:	002f7640 	call	2f764 <alt_tick>
   2ef34:	e0bffc17 	ldw	r2,-16(fp)
   2ef38:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ef3c:	e0bffe17 	ldw	r2,-8(fp)
   2ef40:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   2ef44:	0001883a 	nop
   2ef48:	e037883a 	mov	sp,fp
   2ef4c:	dfc00117 	ldw	ra,4(sp)
   2ef50:	df000017 	ldw	fp,0(sp)
   2ef54:	dec00204 	addi	sp,sp,8
   2ef58:	f800283a 	ret

0002ef5c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   2ef5c:	defff804 	addi	sp,sp,-32
   2ef60:	dfc00715 	stw	ra,28(sp)
   2ef64:	df000615 	stw	fp,24(sp)
   2ef68:	df000604 	addi	fp,sp,24
   2ef6c:	e13ffc15 	stw	r4,-16(fp)
   2ef70:	e17ffd15 	stw	r5,-12(fp)
   2ef74:	e1bffe15 	stw	r6,-8(fp)
   2ef78:	e1ffff15 	stw	r7,-4(fp)
   2ef7c:	e0bfff17 	ldw	r2,-4(fp)
   2ef80:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   2ef84:	d0a6de17 	ldw	r2,-25736(gp)
   2ef88:	1000021e 	bne	r2,zero,2ef94 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   2ef8c:	e0bffb17 	ldw	r2,-20(fp)
   2ef90:	d0a6de15 	stw	r2,-25736(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   2ef94:	e0bffc17 	ldw	r2,-16(fp)
   2ef98:	10800104 	addi	r2,r2,4
   2ef9c:	00c001c4 	movi	r3,7
   2efa0:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   2efa4:	d8000015 	stw	zero,0(sp)
   2efa8:	e1fffc17 	ldw	r7,-16(fp)
   2efac:	018000f4 	movhi	r6,3
   2efb0:	31bbb904 	addi	r6,r6,-4380
   2efb4:	e17ffe17 	ldw	r5,-8(fp)
   2efb8:	e13ffd17 	ldw	r4,-12(fp)
   2efbc:	002d9b00 	call	2d9b0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   2efc0:	0001883a 	nop
   2efc4:	e037883a 	mov	sp,fp
   2efc8:	dfc00117 	ldw	ra,4(sp)
   2efcc:	df000017 	ldw	fp,0(sp)
   2efd0:	dec00204 	addi	sp,sp,8
   2efd4:	f800283a 	ret

0002efd8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2efd8:	defff504 	addi	sp,sp,-44
   2efdc:	df000a15 	stw	fp,40(sp)
   2efe0:	df000a04 	addi	fp,sp,40
   2efe4:	e13ffc15 	stw	r4,-16(fp)
   2efe8:	e17ffd15 	stw	r5,-12(fp)
   2efec:	e1bffe15 	stw	r6,-8(fp)
   2eff0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2eff4:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2eff8:	d0a6de17 	ldw	r2,-25736(gp)
  
  if (alt_ticks_per_second ())
   2effc:	10003c26 	beq	r2,zero,2f0f0 <alt_alarm_start+0x118>
  {
    if (alarm)
   2f000:	e0bffc17 	ldw	r2,-16(fp)
   2f004:	10003826 	beq	r2,zero,2f0e8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2f008:	e0bffc17 	ldw	r2,-16(fp)
   2f00c:	e0fffe17 	ldw	r3,-8(fp)
   2f010:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2f014:	e0bffc17 	ldw	r2,-16(fp)
   2f018:	e0ffff17 	ldw	r3,-4(fp)
   2f01c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f020:	0005303a 	rdctl	r2,status
   2f024:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f028:	e0fff917 	ldw	r3,-28(fp)
   2f02c:	00bfff84 	movi	r2,-2
   2f030:	1884703a 	and	r2,r3,r2
   2f034:	1001703a 	wrctl	status,r2
  
  return context;
   2f038:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2f03c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2f040:	d0a6df17 	ldw	r2,-25732(gp)
      
      current_nticks = alt_nticks();
   2f044:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2f048:	e0fffd17 	ldw	r3,-12(fp)
   2f04c:	e0bff617 	ldw	r2,-40(fp)
   2f050:	1885883a 	add	r2,r3,r2
   2f054:	10c00044 	addi	r3,r2,1
   2f058:	e0bffc17 	ldw	r2,-16(fp)
   2f05c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2f060:	e0bffc17 	ldw	r2,-16(fp)
   2f064:	10c00217 	ldw	r3,8(r2)
   2f068:	e0bff617 	ldw	r2,-40(fp)
   2f06c:	1880042e 	bgeu	r3,r2,2f080 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2f070:	e0bffc17 	ldw	r2,-16(fp)
   2f074:	00c00044 	movi	r3,1
   2f078:	10c00405 	stb	r3,16(r2)
   2f07c:	00000206 	br	2f088 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2f080:	e0bffc17 	ldw	r2,-16(fp)
   2f084:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2f088:	e0bffc17 	ldw	r2,-16(fp)
   2f08c:	d0e00e04 	addi	r3,gp,-32712
   2f090:	e0fffa15 	stw	r3,-24(fp)
   2f094:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f098:	e0bffb17 	ldw	r2,-20(fp)
   2f09c:	e0fffa17 	ldw	r3,-24(fp)
   2f0a0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f0a4:	e0bffa17 	ldw	r2,-24(fp)
   2f0a8:	10c00017 	ldw	r3,0(r2)
   2f0ac:	e0bffb17 	ldw	r2,-20(fp)
   2f0b0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f0b4:	e0bffa17 	ldw	r2,-24(fp)
   2f0b8:	10800017 	ldw	r2,0(r2)
   2f0bc:	e0fffb17 	ldw	r3,-20(fp)
   2f0c0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f0c4:	e0bffa17 	ldw	r2,-24(fp)
   2f0c8:	e0fffb17 	ldw	r3,-20(fp)
   2f0cc:	10c00015 	stw	r3,0(r2)
   2f0d0:	e0bff817 	ldw	r2,-32(fp)
   2f0d4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f0d8:	e0bff717 	ldw	r2,-36(fp)
   2f0dc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2f0e0:	0005883a 	mov	r2,zero
   2f0e4:	00000306 	br	2f0f4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2f0e8:	00bffa84 	movi	r2,-22
   2f0ec:	00000106 	br	2f0f4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2f0f0:	00bfde84 	movi	r2,-134
  }
}
   2f0f4:	e037883a 	mov	sp,fp
   2f0f8:	df000017 	ldw	fp,0(sp)
   2f0fc:	dec00104 	addi	sp,sp,4
   2f100:	f800283a 	ret

0002f104 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2f104:	deffff04 	addi	sp,sp,-4
   2f108:	df000015 	stw	fp,0(sp)
   2f10c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2f110:	0001883a 	nop
   2f114:	e037883a 	mov	sp,fp
   2f118:	df000017 	ldw	fp,0(sp)
   2f11c:	dec00104 	addi	sp,sp,4
   2f120:	f800283a 	ret

0002f124 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f124:	defffe04 	addi	sp,sp,-8
   2f128:	dfc00115 	stw	ra,4(sp)
   2f12c:	df000015 	stw	fp,0(sp)
   2f130:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f134:	d0a00b17 	ldw	r2,-32724(gp)
   2f138:	10000326 	beq	r2,zero,2f148 <alt_get_errno+0x24>
   2f13c:	d0a00b17 	ldw	r2,-32724(gp)
   2f140:	103ee83a 	callr	r2
   2f144:	00000106 	br	2f14c <alt_get_errno+0x28>
   2f148:	d0a6d904 	addi	r2,gp,-25756
}
   2f14c:	e037883a 	mov	sp,fp
   2f150:	dfc00117 	ldw	ra,4(sp)
   2f154:	df000017 	ldw	fp,0(sp)
   2f158:	dec00204 	addi	sp,sp,8
   2f15c:	f800283a 	ret

0002f160 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2f160:	defffa04 	addi	sp,sp,-24
   2f164:	dfc00515 	stw	ra,20(sp)
   2f168:	df000415 	stw	fp,16(sp)
   2f16c:	df000404 	addi	fp,sp,16
   2f170:	e13ffe15 	stw	r4,-8(fp)
   2f174:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2f178:	e0bffe17 	ldw	r2,-8(fp)
   2f17c:	10000326 	beq	r2,zero,2f18c <alt_dev_llist_insert+0x2c>
   2f180:	e0bffe17 	ldw	r2,-8(fp)
   2f184:	10800217 	ldw	r2,8(r2)
   2f188:	1000061e 	bne	r2,zero,2f1a4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2f18c:	002f1240 	call	2f124 <alt_get_errno>
   2f190:	1007883a 	mov	r3,r2
   2f194:	00800584 	movi	r2,22
   2f198:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2f19c:	00bffa84 	movi	r2,-22
   2f1a0:	00001306 	br	2f1f0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2f1a4:	e0bffe17 	ldw	r2,-8(fp)
   2f1a8:	e0ffff17 	ldw	r3,-4(fp)
   2f1ac:	e0fffc15 	stw	r3,-16(fp)
   2f1b0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f1b4:	e0bffd17 	ldw	r2,-12(fp)
   2f1b8:	e0fffc17 	ldw	r3,-16(fp)
   2f1bc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f1c0:	e0bffc17 	ldw	r2,-16(fp)
   2f1c4:	10c00017 	ldw	r3,0(r2)
   2f1c8:	e0bffd17 	ldw	r2,-12(fp)
   2f1cc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f1d0:	e0bffc17 	ldw	r2,-16(fp)
   2f1d4:	10800017 	ldw	r2,0(r2)
   2f1d8:	e0fffd17 	ldw	r3,-12(fp)
   2f1dc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f1e0:	e0bffc17 	ldw	r2,-16(fp)
   2f1e4:	e0fffd17 	ldw	r3,-12(fp)
   2f1e8:	10c00015 	stw	r3,0(r2)

  return 0;  
   2f1ec:	0005883a 	mov	r2,zero
}
   2f1f0:	e037883a 	mov	sp,fp
   2f1f4:	dfc00117 	ldw	ra,4(sp)
   2f1f8:	df000017 	ldw	fp,0(sp)
   2f1fc:	dec00204 	addi	sp,sp,8
   2f200:	f800283a 	ret

0002f204 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2f204:	defffd04 	addi	sp,sp,-12
   2f208:	dfc00215 	stw	ra,8(sp)
   2f20c:	df000115 	stw	fp,4(sp)
   2f210:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f214:	008000f4 	movhi	r2,3
   2f218:	10bf9f04 	addi	r2,r2,-388
   2f21c:	e0bfff15 	stw	r2,-4(fp)
   2f220:	00000606 	br	2f23c <_do_ctors+0x38>
        (*ctor) (); 
   2f224:	e0bfff17 	ldw	r2,-4(fp)
   2f228:	10800017 	ldw	r2,0(r2)
   2f22c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f230:	e0bfff17 	ldw	r2,-4(fp)
   2f234:	10bfff04 	addi	r2,r2,-4
   2f238:	e0bfff15 	stw	r2,-4(fp)
   2f23c:	e0ffff17 	ldw	r3,-4(fp)
   2f240:	008000f4 	movhi	r2,3
   2f244:	10bfa004 	addi	r2,r2,-384
   2f248:	18bff62e 	bgeu	r3,r2,2f224 <__alt_data_end+0xfffefe24>
        (*ctor) (); 
}
   2f24c:	0001883a 	nop
   2f250:	e037883a 	mov	sp,fp
   2f254:	dfc00117 	ldw	ra,4(sp)
   2f258:	df000017 	ldw	fp,0(sp)
   2f25c:	dec00204 	addi	sp,sp,8
   2f260:	f800283a 	ret

0002f264 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2f264:	defffd04 	addi	sp,sp,-12
   2f268:	dfc00215 	stw	ra,8(sp)
   2f26c:	df000115 	stw	fp,4(sp)
   2f270:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f274:	008000f4 	movhi	r2,3
   2f278:	10bf9f04 	addi	r2,r2,-388
   2f27c:	e0bfff15 	stw	r2,-4(fp)
   2f280:	00000606 	br	2f29c <_do_dtors+0x38>
        (*dtor) (); 
   2f284:	e0bfff17 	ldw	r2,-4(fp)
   2f288:	10800017 	ldw	r2,0(r2)
   2f28c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f290:	e0bfff17 	ldw	r2,-4(fp)
   2f294:	10bfff04 	addi	r2,r2,-4
   2f298:	e0bfff15 	stw	r2,-4(fp)
   2f29c:	e0ffff17 	ldw	r3,-4(fp)
   2f2a0:	008000f4 	movhi	r2,3
   2f2a4:	10bfa004 	addi	r2,r2,-384
   2f2a8:	18bff62e 	bgeu	r3,r2,2f284 <__alt_data_end+0xfffefe84>
        (*dtor) (); 
}
   2f2ac:	0001883a 	nop
   2f2b0:	e037883a 	mov	sp,fp
   2f2b4:	dfc00117 	ldw	ra,4(sp)
   2f2b8:	df000017 	ldw	fp,0(sp)
   2f2bc:	dec00204 	addi	sp,sp,8
   2f2c0:	f800283a 	ret

0002f2c4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2f2c4:	deffff04 	addi	sp,sp,-4
   2f2c8:	df000015 	stw	fp,0(sp)
   2f2cc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   2f2d0:	0001883a 	nop
   2f2d4:	e037883a 	mov	sp,fp
   2f2d8:	df000017 	ldw	fp,0(sp)
   2f2dc:	dec00104 	addi	sp,sp,4
   2f2e0:	f800283a 	ret

0002f2e4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2f2e4:	defff804 	addi	sp,sp,-32
   2f2e8:	dfc00715 	stw	ra,28(sp)
   2f2ec:	df000615 	stw	fp,24(sp)
   2f2f0:	dc000515 	stw	r16,20(sp)
   2f2f4:	df000604 	addi	fp,sp,24
   2f2f8:	e13ffb15 	stw	r4,-20(fp)
   2f2fc:	e17ffc15 	stw	r5,-16(fp)
   2f300:	e1bffd15 	stw	r6,-12(fp)
   2f304:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   2f308:	e1bffe17 	ldw	r6,-8(fp)
   2f30c:	e17ffd17 	ldw	r5,-12(fp)
   2f310:	e13ffc17 	ldw	r4,-16(fp)
   2f314:	002f56c0 	call	2f56c <open>
   2f318:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   2f31c:	e0bffa17 	ldw	r2,-24(fp)
   2f320:	10002216 	blt	r2,zero,2f3ac <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   2f324:	040000f4 	movhi	r16,3
   2f328:	8402ad04 	addi	r16,r16,2740
   2f32c:	e0bffa17 	ldw	r2,-24(fp)
   2f330:	01400304 	movi	r5,12
   2f334:	1009883a 	mov	r4,r2
   2f338:	002aeb00 	call	2aeb0 <__mulsi3>
   2f33c:	8085883a 	add	r2,r16,r2
   2f340:	10c00017 	ldw	r3,0(r2)
   2f344:	e0bffb17 	ldw	r2,-20(fp)
   2f348:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2f34c:	040000f4 	movhi	r16,3
   2f350:	8402ad04 	addi	r16,r16,2740
   2f354:	e0bffa17 	ldw	r2,-24(fp)
   2f358:	01400304 	movi	r5,12
   2f35c:	1009883a 	mov	r4,r2
   2f360:	002aeb00 	call	2aeb0 <__mulsi3>
   2f364:	8085883a 	add	r2,r16,r2
   2f368:	10800104 	addi	r2,r2,4
   2f36c:	10c00017 	ldw	r3,0(r2)
   2f370:	e0bffb17 	ldw	r2,-20(fp)
   2f374:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2f378:	040000f4 	movhi	r16,3
   2f37c:	8402ad04 	addi	r16,r16,2740
   2f380:	e0bffa17 	ldw	r2,-24(fp)
   2f384:	01400304 	movi	r5,12
   2f388:	1009883a 	mov	r4,r2
   2f38c:	002aeb00 	call	2aeb0 <__mulsi3>
   2f390:	8085883a 	add	r2,r16,r2
   2f394:	10800204 	addi	r2,r2,8
   2f398:	10c00017 	ldw	r3,0(r2)
   2f39c:	e0bffb17 	ldw	r2,-20(fp)
   2f3a0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2f3a4:	e13ffa17 	ldw	r4,-24(fp)
   2f3a8:	002e1400 	call	2e140 <alt_release_fd>
  }
} 
   2f3ac:	0001883a 	nop
   2f3b0:	e6ffff04 	addi	sp,fp,-4
   2f3b4:	dfc00217 	ldw	ra,8(sp)
   2f3b8:	df000117 	ldw	fp,4(sp)
   2f3bc:	dc000017 	ldw	r16,0(sp)
   2f3c0:	dec00304 	addi	sp,sp,12
   2f3c4:	f800283a 	ret

0002f3c8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2f3c8:	defffb04 	addi	sp,sp,-20
   2f3cc:	dfc00415 	stw	ra,16(sp)
   2f3d0:	df000315 	stw	fp,12(sp)
   2f3d4:	df000304 	addi	fp,sp,12
   2f3d8:	e13ffd15 	stw	r4,-12(fp)
   2f3dc:	e17ffe15 	stw	r5,-8(fp)
   2f3e0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2f3e4:	01c07fc4 	movi	r7,511
   2f3e8:	01800044 	movi	r6,1
   2f3ec:	e17ffd17 	ldw	r5,-12(fp)
   2f3f0:	010000f4 	movhi	r4,3
   2f3f4:	2102b004 	addi	r4,r4,2752
   2f3f8:	002f2e40 	call	2f2e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2f3fc:	01c07fc4 	movi	r7,511
   2f400:	000d883a 	mov	r6,zero
   2f404:	e17ffe17 	ldw	r5,-8(fp)
   2f408:	010000f4 	movhi	r4,3
   2f40c:	2102ad04 	addi	r4,r4,2740
   2f410:	002f2e40 	call	2f2e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2f414:	01c07fc4 	movi	r7,511
   2f418:	01800044 	movi	r6,1
   2f41c:	e17fff17 	ldw	r5,-4(fp)
   2f420:	010000f4 	movhi	r4,3
   2f424:	2102b304 	addi	r4,r4,2764
   2f428:	002f2e40 	call	2f2e4 <alt_open_fd>
}  
   2f42c:	0001883a 	nop
   2f430:	e037883a 	mov	sp,fp
   2f434:	dfc00117 	ldw	ra,4(sp)
   2f438:	df000017 	ldw	fp,0(sp)
   2f43c:	dec00204 	addi	sp,sp,8
   2f440:	f800283a 	ret

0002f444 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2f444:	defffe04 	addi	sp,sp,-8
   2f448:	dfc00115 	stw	ra,4(sp)
   2f44c:	df000015 	stw	fp,0(sp)
   2f450:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f454:	d0a00b17 	ldw	r2,-32724(gp)
   2f458:	10000326 	beq	r2,zero,2f468 <alt_get_errno+0x24>
   2f45c:	d0a00b17 	ldw	r2,-32724(gp)
   2f460:	103ee83a 	callr	r2
   2f464:	00000106 	br	2f46c <alt_get_errno+0x28>
   2f468:	d0a6d904 	addi	r2,gp,-25756
}
   2f46c:	e037883a 	mov	sp,fp
   2f470:	dfc00117 	ldw	ra,4(sp)
   2f474:	df000017 	ldw	fp,0(sp)
   2f478:	dec00204 	addi	sp,sp,8
   2f47c:	f800283a 	ret

0002f480 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2f480:	defffb04 	addi	sp,sp,-20
   2f484:	dfc00415 	stw	ra,16(sp)
   2f488:	df000315 	stw	fp,12(sp)
   2f48c:	dc000215 	stw	r16,8(sp)
   2f490:	df000304 	addi	fp,sp,12
   2f494:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2f498:	e0bffe17 	ldw	r2,-8(fp)
   2f49c:	10800217 	ldw	r2,8(r2)
   2f4a0:	10d00034 	orhi	r3,r2,16384
   2f4a4:	e0bffe17 	ldw	r2,-8(fp)
   2f4a8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f4ac:	e03ffd15 	stw	zero,-12(fp)
   2f4b0:	00002306 	br	2f540 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f4b4:	040000f4 	movhi	r16,3
   2f4b8:	8402ad04 	addi	r16,r16,2740
   2f4bc:	e0bffd17 	ldw	r2,-12(fp)
   2f4c0:	01400304 	movi	r5,12
   2f4c4:	1009883a 	mov	r4,r2
   2f4c8:	002aeb00 	call	2aeb0 <__mulsi3>
   2f4cc:	8085883a 	add	r2,r16,r2
   2f4d0:	10c00017 	ldw	r3,0(r2)
   2f4d4:	e0bffe17 	ldw	r2,-8(fp)
   2f4d8:	10800017 	ldw	r2,0(r2)
   2f4dc:	1880151e 	bne	r3,r2,2f534 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f4e0:	040000f4 	movhi	r16,3
   2f4e4:	8402ad04 	addi	r16,r16,2740
   2f4e8:	e0bffd17 	ldw	r2,-12(fp)
   2f4ec:	01400304 	movi	r5,12
   2f4f0:	1009883a 	mov	r4,r2
   2f4f4:	002aeb00 	call	2aeb0 <__mulsi3>
   2f4f8:	8085883a 	add	r2,r16,r2
   2f4fc:	10800204 	addi	r2,r2,8
   2f500:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f504:	10000b0e 	bge	r2,zero,2f534 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2f508:	01400304 	movi	r5,12
   2f50c:	e13ffd17 	ldw	r4,-12(fp)
   2f510:	002aeb00 	call	2aeb0 <__mulsi3>
   2f514:	1007883a 	mov	r3,r2
   2f518:	008000f4 	movhi	r2,3
   2f51c:	1082ad04 	addi	r2,r2,2740
   2f520:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f524:	e0bffe17 	ldw	r2,-8(fp)
   2f528:	18800226 	beq	r3,r2,2f534 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2f52c:	00bffcc4 	movi	r2,-13
   2f530:	00000806 	br	2f554 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f534:	e0bffd17 	ldw	r2,-12(fp)
   2f538:	10800044 	addi	r2,r2,1
   2f53c:	e0bffd15 	stw	r2,-12(fp)
   2f540:	d0a00a17 	ldw	r2,-32728(gp)
   2f544:	1007883a 	mov	r3,r2
   2f548:	e0bffd17 	ldw	r2,-12(fp)
   2f54c:	18bfd92e 	bgeu	r3,r2,2f4b4 <__alt_data_end+0xffff00b4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2f550:	0005883a 	mov	r2,zero
}
   2f554:	e6ffff04 	addi	sp,fp,-4
   2f558:	dfc00217 	ldw	ra,8(sp)
   2f55c:	df000117 	ldw	fp,4(sp)
   2f560:	dc000017 	ldw	r16,0(sp)
   2f564:	dec00304 	addi	sp,sp,12
   2f568:	f800283a 	ret

0002f56c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2f56c:	defff604 	addi	sp,sp,-40
   2f570:	dfc00915 	stw	ra,36(sp)
   2f574:	df000815 	stw	fp,32(sp)
   2f578:	df000804 	addi	fp,sp,32
   2f57c:	e13ffd15 	stw	r4,-12(fp)
   2f580:	e17ffe15 	stw	r5,-8(fp)
   2f584:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2f588:	00bfffc4 	movi	r2,-1
   2f58c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2f590:	00bffb44 	movi	r2,-19
   2f594:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2f598:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2f59c:	d1600804 	addi	r5,gp,-32736
   2f5a0:	e13ffd17 	ldw	r4,-12(fp)
   2f5a4:	002f8900 	call	2f890 <alt_find_dev>
   2f5a8:	e0bff815 	stw	r2,-32(fp)
   2f5ac:	e0bff817 	ldw	r2,-32(fp)
   2f5b0:	1000051e 	bne	r2,zero,2f5c8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2f5b4:	e13ffd17 	ldw	r4,-12(fp)
   2f5b8:	002f9200 	call	2f920 <alt_find_file>
   2f5bc:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2f5c0:	00800044 	movi	r2,1
   2f5c4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2f5c8:	e0bff817 	ldw	r2,-32(fp)
   2f5cc:	10002b26 	beq	r2,zero,2f67c <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2f5d0:	e13ff817 	ldw	r4,-32(fp)
   2f5d4:	002fa280 	call	2fa28 <alt_get_fd>
   2f5d8:	e0bff915 	stw	r2,-28(fp)
   2f5dc:	e0bff917 	ldw	r2,-28(fp)
   2f5e0:	1000030e 	bge	r2,zero,2f5f0 <open+0x84>
    {
      status = index;
   2f5e4:	e0bff917 	ldw	r2,-28(fp)
   2f5e8:	e0bffa15 	stw	r2,-24(fp)
   2f5ec:	00002506 	br	2f684 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   2f5f0:	01400304 	movi	r5,12
   2f5f4:	e13ff917 	ldw	r4,-28(fp)
   2f5f8:	002aeb00 	call	2aeb0 <__mulsi3>
   2f5fc:	1007883a 	mov	r3,r2
   2f600:	008000f4 	movhi	r2,3
   2f604:	1082ad04 	addi	r2,r2,2740
   2f608:	1885883a 	add	r2,r3,r2
   2f60c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2f610:	e0fffe17 	ldw	r3,-8(fp)
   2f614:	00900034 	movhi	r2,16384
   2f618:	10bfffc4 	addi	r2,r2,-1
   2f61c:	1886703a 	and	r3,r3,r2
   2f620:	e0bffc17 	ldw	r2,-16(fp)
   2f624:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2f628:	e0bffb17 	ldw	r2,-20(fp)
   2f62c:	1000051e 	bne	r2,zero,2f644 <open+0xd8>
   2f630:	e13ffc17 	ldw	r4,-16(fp)
   2f634:	002f4800 	call	2f480 <alt_file_locked>
   2f638:	e0bffa15 	stw	r2,-24(fp)
   2f63c:	e0bffa17 	ldw	r2,-24(fp)
   2f640:	10001016 	blt	r2,zero,2f684 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2f644:	e0bff817 	ldw	r2,-32(fp)
   2f648:	10800317 	ldw	r2,12(r2)
   2f64c:	10000826 	beq	r2,zero,2f670 <open+0x104>
   2f650:	e0bff817 	ldw	r2,-32(fp)
   2f654:	10800317 	ldw	r2,12(r2)
   2f658:	e1ffff17 	ldw	r7,-4(fp)
   2f65c:	e1bffe17 	ldw	r6,-8(fp)
   2f660:	e17ffd17 	ldw	r5,-12(fp)
   2f664:	e13ffc17 	ldw	r4,-16(fp)
   2f668:	103ee83a 	callr	r2
   2f66c:	00000106 	br	2f674 <open+0x108>
   2f670:	0005883a 	mov	r2,zero
   2f674:	e0bffa15 	stw	r2,-24(fp)
   2f678:	00000206 	br	2f684 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2f67c:	00bffb44 	movi	r2,-19
   2f680:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2f684:	e0bffa17 	ldw	r2,-24(fp)
   2f688:	1000090e 	bge	r2,zero,2f6b0 <open+0x144>
  {
    alt_release_fd (index);  
   2f68c:	e13ff917 	ldw	r4,-28(fp)
   2f690:	002e1400 	call	2e140 <alt_release_fd>
    ALT_ERRNO = -status;
   2f694:	002f4440 	call	2f444 <alt_get_errno>
   2f698:	1007883a 	mov	r3,r2
   2f69c:	e0bffa17 	ldw	r2,-24(fp)
   2f6a0:	0085c83a 	sub	r2,zero,r2
   2f6a4:	18800015 	stw	r2,0(r3)
    return -1;
   2f6a8:	00bfffc4 	movi	r2,-1
   2f6ac:	00000106 	br	2f6b4 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   2f6b0:	e0bff917 	ldw	r2,-28(fp)
}
   2f6b4:	e037883a 	mov	sp,fp
   2f6b8:	dfc00117 	ldw	ra,4(sp)
   2f6bc:	df000017 	ldw	fp,0(sp)
   2f6c0:	dec00204 	addi	sp,sp,8
   2f6c4:	f800283a 	ret

0002f6c8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2f6c8:	defffa04 	addi	sp,sp,-24
   2f6cc:	df000515 	stw	fp,20(sp)
   2f6d0:	df000504 	addi	fp,sp,20
   2f6d4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2f6d8:	0005303a 	rdctl	r2,status
   2f6dc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f6e0:	e0fffc17 	ldw	r3,-16(fp)
   2f6e4:	00bfff84 	movi	r2,-2
   2f6e8:	1884703a 	and	r2,r3,r2
   2f6ec:	1001703a 	wrctl	status,r2
  
  return context;
   2f6f0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2f6f4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2f6f8:	e0bfff17 	ldw	r2,-4(fp)
   2f6fc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2f700:	e0bffd17 	ldw	r2,-12(fp)
   2f704:	10800017 	ldw	r2,0(r2)
   2f708:	e0fffd17 	ldw	r3,-12(fp)
   2f70c:	18c00117 	ldw	r3,4(r3)
   2f710:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2f714:	e0bffd17 	ldw	r2,-12(fp)
   2f718:	10800117 	ldw	r2,4(r2)
   2f71c:	e0fffd17 	ldw	r3,-12(fp)
   2f720:	18c00017 	ldw	r3,0(r3)
   2f724:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2f728:	e0bffd17 	ldw	r2,-12(fp)
   2f72c:	e0fffd17 	ldw	r3,-12(fp)
   2f730:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2f734:	e0bffd17 	ldw	r2,-12(fp)
   2f738:	e0fffd17 	ldw	r3,-12(fp)
   2f73c:	10c00015 	stw	r3,0(r2)
   2f740:	e0bffb17 	ldw	r2,-20(fp)
   2f744:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2f748:	e0bffe17 	ldw	r2,-8(fp)
   2f74c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2f750:	0001883a 	nop
   2f754:	e037883a 	mov	sp,fp
   2f758:	df000017 	ldw	fp,0(sp)
   2f75c:	dec00104 	addi	sp,sp,4
   2f760:	f800283a 	ret

0002f764 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2f764:	defffb04 	addi	sp,sp,-20
   2f768:	dfc00415 	stw	ra,16(sp)
   2f76c:	df000315 	stw	fp,12(sp)
   2f770:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2f774:	d0a00e17 	ldw	r2,-32712(gp)
   2f778:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2f77c:	d0a6df17 	ldw	r2,-25732(gp)
   2f780:	10800044 	addi	r2,r2,1
   2f784:	d0a6df15 	stw	r2,-25732(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f788:	00002e06 	br	2f844 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2f78c:	e0bffd17 	ldw	r2,-12(fp)
   2f790:	10800017 	ldw	r2,0(r2)
   2f794:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2f798:	e0bffd17 	ldw	r2,-12(fp)
   2f79c:	10800403 	ldbu	r2,16(r2)
   2f7a0:	10803fcc 	andi	r2,r2,255
   2f7a4:	10000426 	beq	r2,zero,2f7b8 <alt_tick+0x54>
   2f7a8:	d0a6df17 	ldw	r2,-25732(gp)
   2f7ac:	1000021e 	bne	r2,zero,2f7b8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2f7b0:	e0bffd17 	ldw	r2,-12(fp)
   2f7b4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2f7b8:	e0bffd17 	ldw	r2,-12(fp)
   2f7bc:	10800217 	ldw	r2,8(r2)
   2f7c0:	d0e6df17 	ldw	r3,-25732(gp)
   2f7c4:	18801d36 	bltu	r3,r2,2f83c <alt_tick+0xd8>
   2f7c8:	e0bffd17 	ldw	r2,-12(fp)
   2f7cc:	10800403 	ldbu	r2,16(r2)
   2f7d0:	10803fcc 	andi	r2,r2,255
   2f7d4:	1000191e 	bne	r2,zero,2f83c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2f7d8:	e0bffd17 	ldw	r2,-12(fp)
   2f7dc:	10800317 	ldw	r2,12(r2)
   2f7e0:	e0fffd17 	ldw	r3,-12(fp)
   2f7e4:	18c00517 	ldw	r3,20(r3)
   2f7e8:	1809883a 	mov	r4,r3
   2f7ec:	103ee83a 	callr	r2
   2f7f0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2f7f4:	e0bfff17 	ldw	r2,-4(fp)
   2f7f8:	1000031e 	bne	r2,zero,2f808 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2f7fc:	e13ffd17 	ldw	r4,-12(fp)
   2f800:	002f6c80 	call	2f6c8 <alt_alarm_stop>
   2f804:	00000d06 	br	2f83c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2f808:	e0bffd17 	ldw	r2,-12(fp)
   2f80c:	10c00217 	ldw	r3,8(r2)
   2f810:	e0bfff17 	ldw	r2,-4(fp)
   2f814:	1887883a 	add	r3,r3,r2
   2f818:	e0bffd17 	ldw	r2,-12(fp)
   2f81c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2f820:	e0bffd17 	ldw	r2,-12(fp)
   2f824:	10c00217 	ldw	r3,8(r2)
   2f828:	d0a6df17 	ldw	r2,-25732(gp)
   2f82c:	1880032e 	bgeu	r3,r2,2f83c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2f830:	e0bffd17 	ldw	r2,-12(fp)
   2f834:	00c00044 	movi	r3,1
   2f838:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2f83c:	e0bffe17 	ldw	r2,-8(fp)
   2f840:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f844:	e0fffd17 	ldw	r3,-12(fp)
   2f848:	d0a00e04 	addi	r2,gp,-32712
   2f84c:	18bfcf1e 	bne	r3,r2,2f78c <__alt_data_end+0xffff038c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2f850:	0001883a 	nop
}
   2f854:	0001883a 	nop
   2f858:	e037883a 	mov	sp,fp
   2f85c:	dfc00117 	ldw	ra,4(sp)
   2f860:	df000017 	ldw	fp,0(sp)
   2f864:	dec00204 	addi	sp,sp,8
   2f868:	f800283a 	ret

0002f86c <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
   2f86c:	deffff04 	addi	sp,sp,-4
   2f870:	df000015 	stw	fp,0(sp)
   2f874:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2f878:	000170fa 	wrctl	ienable,zero
}
   2f87c:	0001883a 	nop
   2f880:	e037883a 	mov	sp,fp
   2f884:	df000017 	ldw	fp,0(sp)
   2f888:	dec00104 	addi	sp,sp,4
   2f88c:	f800283a 	ret

0002f890 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f890:	defffa04 	addi	sp,sp,-24
   2f894:	dfc00515 	stw	ra,20(sp)
   2f898:	df000415 	stw	fp,16(sp)
   2f89c:	df000404 	addi	fp,sp,16
   2f8a0:	e13ffe15 	stw	r4,-8(fp)
   2f8a4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f8a8:	e0bfff17 	ldw	r2,-4(fp)
   2f8ac:	10800017 	ldw	r2,0(r2)
   2f8b0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f8b4:	e13ffe17 	ldw	r4,-8(fp)
   2f8b8:	00274d80 	call	274d8 <strlen>
   2f8bc:	10800044 	addi	r2,r2,1
   2f8c0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f8c4:	00000d06 	br	2f8fc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f8c8:	e0bffc17 	ldw	r2,-16(fp)
   2f8cc:	10800217 	ldw	r2,8(r2)
   2f8d0:	e0fffd17 	ldw	r3,-12(fp)
   2f8d4:	180d883a 	mov	r6,r3
   2f8d8:	e17ffe17 	ldw	r5,-8(fp)
   2f8dc:	1009883a 	mov	r4,r2
   2f8e0:	002fb380 	call	2fb38 <memcmp>
   2f8e4:	1000021e 	bne	r2,zero,2f8f0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f8e8:	e0bffc17 	ldw	r2,-16(fp)
   2f8ec:	00000706 	br	2f90c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2f8f0:	e0bffc17 	ldw	r2,-16(fp)
   2f8f4:	10800017 	ldw	r2,0(r2)
   2f8f8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f8fc:	e0fffc17 	ldw	r3,-16(fp)
   2f900:	e0bfff17 	ldw	r2,-4(fp)
   2f904:	18bff01e 	bne	r3,r2,2f8c8 <__alt_data_end+0xffff04c8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2f908:	0005883a 	mov	r2,zero
}
   2f90c:	e037883a 	mov	sp,fp
   2f910:	dfc00117 	ldw	ra,4(sp)
   2f914:	df000017 	ldw	fp,0(sp)
   2f918:	dec00204 	addi	sp,sp,8
   2f91c:	f800283a 	ret

0002f920 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2f920:	defffb04 	addi	sp,sp,-20
   2f924:	dfc00415 	stw	ra,16(sp)
   2f928:	df000315 	stw	fp,12(sp)
   2f92c:	df000304 	addi	fp,sp,12
   2f930:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2f934:	d0a00617 	ldw	r2,-32744(gp)
   2f938:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f93c:	00003106 	br	2fa04 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2f940:	e0bffd17 	ldw	r2,-12(fp)
   2f944:	10800217 	ldw	r2,8(r2)
   2f948:	1009883a 	mov	r4,r2
   2f94c:	00274d80 	call	274d8 <strlen>
   2f950:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2f954:	e0bffd17 	ldw	r2,-12(fp)
   2f958:	10c00217 	ldw	r3,8(r2)
   2f95c:	e0bffe17 	ldw	r2,-8(fp)
   2f960:	10bfffc4 	addi	r2,r2,-1
   2f964:	1885883a 	add	r2,r3,r2
   2f968:	10800003 	ldbu	r2,0(r2)
   2f96c:	10803fcc 	andi	r2,r2,255
   2f970:	1080201c 	xori	r2,r2,128
   2f974:	10bfe004 	addi	r2,r2,-128
   2f978:	10800bd8 	cmpnei	r2,r2,47
   2f97c:	1000031e 	bne	r2,zero,2f98c <alt_find_file+0x6c>
    {
      len -= 1;
   2f980:	e0bffe17 	ldw	r2,-8(fp)
   2f984:	10bfffc4 	addi	r2,r2,-1
   2f988:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f98c:	e0bffe17 	ldw	r2,-8(fp)
   2f990:	e0ffff17 	ldw	r3,-4(fp)
   2f994:	1885883a 	add	r2,r3,r2
   2f998:	10800003 	ldbu	r2,0(r2)
   2f99c:	10803fcc 	andi	r2,r2,255
   2f9a0:	1080201c 	xori	r2,r2,128
   2f9a4:	10bfe004 	addi	r2,r2,-128
   2f9a8:	10800be0 	cmpeqi	r2,r2,47
   2f9ac:	1000081e 	bne	r2,zero,2f9d0 <alt_find_file+0xb0>
   2f9b0:	e0bffe17 	ldw	r2,-8(fp)
   2f9b4:	e0ffff17 	ldw	r3,-4(fp)
   2f9b8:	1885883a 	add	r2,r3,r2
   2f9bc:	10800003 	ldbu	r2,0(r2)
   2f9c0:	10803fcc 	andi	r2,r2,255
   2f9c4:	1080201c 	xori	r2,r2,128
   2f9c8:	10bfe004 	addi	r2,r2,-128
   2f9cc:	10000a1e 	bne	r2,zero,2f9f8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2f9d0:	e0bffd17 	ldw	r2,-12(fp)
   2f9d4:	10800217 	ldw	r2,8(r2)
   2f9d8:	e0fffe17 	ldw	r3,-8(fp)
   2f9dc:	180d883a 	mov	r6,r3
   2f9e0:	e17fff17 	ldw	r5,-4(fp)
   2f9e4:	1009883a 	mov	r4,r2
   2f9e8:	002fb380 	call	2fb38 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f9ec:	1000021e 	bne	r2,zero,2f9f8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2f9f0:	e0bffd17 	ldw	r2,-12(fp)
   2f9f4:	00000706 	br	2fa14 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2f9f8:	e0bffd17 	ldw	r2,-12(fp)
   2f9fc:	10800017 	ldw	r2,0(r2)
   2fa00:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2fa04:	e0fffd17 	ldw	r3,-12(fp)
   2fa08:	d0a00604 	addi	r2,gp,-32744
   2fa0c:	18bfcc1e 	bne	r3,r2,2f940 <__alt_data_end+0xffff0540>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2fa10:	0005883a 	mov	r2,zero
}
   2fa14:	e037883a 	mov	sp,fp
   2fa18:	dfc00117 	ldw	ra,4(sp)
   2fa1c:	df000017 	ldw	fp,0(sp)
   2fa20:	dec00204 	addi	sp,sp,8
   2fa24:	f800283a 	ret

0002fa28 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2fa28:	defffa04 	addi	sp,sp,-24
   2fa2c:	dfc00515 	stw	ra,20(sp)
   2fa30:	df000415 	stw	fp,16(sp)
   2fa34:	dc000315 	stw	r16,12(sp)
   2fa38:	df000404 	addi	fp,sp,16
   2fa3c:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   2fa40:	00bffa04 	movi	r2,-24
   2fa44:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2fa48:	e03ffc15 	stw	zero,-16(fp)
   2fa4c:	00001d06 	br	2fac4 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   2fa50:	040000f4 	movhi	r16,3
   2fa54:	8402ad04 	addi	r16,r16,2740
   2fa58:	e0bffc17 	ldw	r2,-16(fp)
   2fa5c:	01400304 	movi	r5,12
   2fa60:	1009883a 	mov	r4,r2
   2fa64:	002aeb00 	call	2aeb0 <__mulsi3>
   2fa68:	8085883a 	add	r2,r16,r2
   2fa6c:	10800017 	ldw	r2,0(r2)
   2fa70:	1000111e 	bne	r2,zero,2fab8 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   2fa74:	040000f4 	movhi	r16,3
   2fa78:	8402ad04 	addi	r16,r16,2740
   2fa7c:	e0bffc17 	ldw	r2,-16(fp)
   2fa80:	01400304 	movi	r5,12
   2fa84:	1009883a 	mov	r4,r2
   2fa88:	002aeb00 	call	2aeb0 <__mulsi3>
   2fa8c:	8085883a 	add	r2,r16,r2
   2fa90:	e0fffe17 	ldw	r3,-8(fp)
   2fa94:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2fa98:	d0e00a17 	ldw	r3,-32728(gp)
   2fa9c:	e0bffc17 	ldw	r2,-16(fp)
   2faa0:	1880020e 	bge	r3,r2,2faac <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   2faa4:	e0bffc17 	ldw	r2,-16(fp)
   2faa8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   2faac:	e0bffc17 	ldw	r2,-16(fp)
   2fab0:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   2fab4:	00000606 	br	2fad0 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2fab8:	e0bffc17 	ldw	r2,-16(fp)
   2fabc:	10800044 	addi	r2,r2,1
   2fac0:	e0bffc15 	stw	r2,-16(fp)
   2fac4:	e0bffc17 	ldw	r2,-16(fp)
   2fac8:	10800810 	cmplti	r2,r2,32
   2facc:	103fe01e 	bne	r2,zero,2fa50 <__alt_data_end+0xffff0650>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2fad0:	e0bffd17 	ldw	r2,-12(fp)
}
   2fad4:	e6ffff04 	addi	sp,fp,-4
   2fad8:	dfc00217 	ldw	ra,8(sp)
   2fadc:	df000117 	ldw	fp,4(sp)
   2fae0:	dc000017 	ldw	r16,0(sp)
   2fae4:	dec00304 	addi	sp,sp,12
   2fae8:	f800283a 	ret

0002faec <atexit>:
   2faec:	200b883a 	mov	r5,r4
   2faf0:	000f883a 	mov	r7,zero
   2faf4:	000d883a 	mov	r6,zero
   2faf8:	0009883a 	mov	r4,zero
   2fafc:	002fbb41 	jmpi	2fbb4 <__register_exitproc>

0002fb00 <exit>:
   2fb00:	defffe04 	addi	sp,sp,-8
   2fb04:	000b883a 	mov	r5,zero
   2fb08:	dc000015 	stw	r16,0(sp)
   2fb0c:	dfc00115 	stw	ra,4(sp)
   2fb10:	2021883a 	mov	r16,r4
   2fb14:	002fccc0 	call	2fccc <__call_exitprocs>
   2fb18:	008000f4 	movhi	r2,3
   2fb1c:	10872504 	addi	r2,r2,7316
   2fb20:	11000017 	ldw	r4,0(r2)
   2fb24:	20800f17 	ldw	r2,60(r4)
   2fb28:	10000126 	beq	r2,zero,2fb30 <exit+0x30>
   2fb2c:	103ee83a 	callr	r2
   2fb30:	8009883a 	mov	r4,r16
   2fb34:	002fe4c0 	call	2fe4c <_exit>

0002fb38 <memcmp>:
   2fb38:	01c000c4 	movi	r7,3
   2fb3c:	3980192e 	bgeu	r7,r6,2fba4 <memcmp+0x6c>
   2fb40:	2144b03a 	or	r2,r4,r5
   2fb44:	11c4703a 	and	r2,r2,r7
   2fb48:	10000f26 	beq	r2,zero,2fb88 <memcmp+0x50>
   2fb4c:	20800003 	ldbu	r2,0(r4)
   2fb50:	28c00003 	ldbu	r3,0(r5)
   2fb54:	10c0151e 	bne	r2,r3,2fbac <memcmp+0x74>
   2fb58:	31bfff84 	addi	r6,r6,-2
   2fb5c:	01ffffc4 	movi	r7,-1
   2fb60:	00000406 	br	2fb74 <memcmp+0x3c>
   2fb64:	20800003 	ldbu	r2,0(r4)
   2fb68:	28c00003 	ldbu	r3,0(r5)
   2fb6c:	31bfffc4 	addi	r6,r6,-1
   2fb70:	10c00e1e 	bne	r2,r3,2fbac <memcmp+0x74>
   2fb74:	21000044 	addi	r4,r4,1
   2fb78:	29400044 	addi	r5,r5,1
   2fb7c:	31fff91e 	bne	r6,r7,2fb64 <__alt_data_end+0xffff0764>
   2fb80:	0005883a 	mov	r2,zero
   2fb84:	f800283a 	ret
   2fb88:	20c00017 	ldw	r3,0(r4)
   2fb8c:	28800017 	ldw	r2,0(r5)
   2fb90:	18bfee1e 	bne	r3,r2,2fb4c <__alt_data_end+0xffff074c>
   2fb94:	31bfff04 	addi	r6,r6,-4
   2fb98:	21000104 	addi	r4,r4,4
   2fb9c:	29400104 	addi	r5,r5,4
   2fba0:	39bff936 	bltu	r7,r6,2fb88 <__alt_data_end+0xffff0788>
   2fba4:	303fe91e 	bne	r6,zero,2fb4c <__alt_data_end+0xffff074c>
   2fba8:	003ff506 	br	2fb80 <__alt_data_end+0xffff0780>
   2fbac:	10c5c83a 	sub	r2,r2,r3
   2fbb0:	f800283a 	ret

0002fbb4 <__register_exitproc>:
   2fbb4:	defffa04 	addi	sp,sp,-24
   2fbb8:	dc000315 	stw	r16,12(sp)
   2fbbc:	040000f4 	movhi	r16,3
   2fbc0:	84072504 	addi	r16,r16,7316
   2fbc4:	80c00017 	ldw	r3,0(r16)
   2fbc8:	dc400415 	stw	r17,16(sp)
   2fbcc:	dfc00515 	stw	ra,20(sp)
   2fbd0:	18805217 	ldw	r2,328(r3)
   2fbd4:	2023883a 	mov	r17,r4
   2fbd8:	10003726 	beq	r2,zero,2fcb8 <__register_exitproc+0x104>
   2fbdc:	10c00117 	ldw	r3,4(r2)
   2fbe0:	010007c4 	movi	r4,31
   2fbe4:	20c00e16 	blt	r4,r3,2fc20 <__register_exitproc+0x6c>
   2fbe8:	1a000044 	addi	r8,r3,1
   2fbec:	8800221e 	bne	r17,zero,2fc78 <__register_exitproc+0xc4>
   2fbf0:	18c00084 	addi	r3,r3,2
   2fbf4:	18c7883a 	add	r3,r3,r3
   2fbf8:	18c7883a 	add	r3,r3,r3
   2fbfc:	12000115 	stw	r8,4(r2)
   2fc00:	10c7883a 	add	r3,r2,r3
   2fc04:	19400015 	stw	r5,0(r3)
   2fc08:	0005883a 	mov	r2,zero
   2fc0c:	dfc00517 	ldw	ra,20(sp)
   2fc10:	dc400417 	ldw	r17,16(sp)
   2fc14:	dc000317 	ldw	r16,12(sp)
   2fc18:	dec00604 	addi	sp,sp,24
   2fc1c:	f800283a 	ret
   2fc20:	00800034 	movhi	r2,0
   2fc24:	10800004 	addi	r2,r2,0
   2fc28:	10002626 	beq	r2,zero,2fcc4 <__register_exitproc+0x110>
   2fc2c:	01006404 	movi	r4,400
   2fc30:	d9400015 	stw	r5,0(sp)
   2fc34:	d9800115 	stw	r6,4(sp)
   2fc38:	d9c00215 	stw	r7,8(sp)
   2fc3c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2fc40:	d9400017 	ldw	r5,0(sp)
   2fc44:	d9800117 	ldw	r6,4(sp)
   2fc48:	d9c00217 	ldw	r7,8(sp)
   2fc4c:	10001d26 	beq	r2,zero,2fcc4 <__register_exitproc+0x110>
   2fc50:	81000017 	ldw	r4,0(r16)
   2fc54:	10000115 	stw	zero,4(r2)
   2fc58:	02000044 	movi	r8,1
   2fc5c:	22405217 	ldw	r9,328(r4)
   2fc60:	0007883a 	mov	r3,zero
   2fc64:	12400015 	stw	r9,0(r2)
   2fc68:	20805215 	stw	r2,328(r4)
   2fc6c:	10006215 	stw	zero,392(r2)
   2fc70:	10006315 	stw	zero,396(r2)
   2fc74:	883fde26 	beq	r17,zero,2fbf0 <__alt_data_end+0xffff07f0>
   2fc78:	18c9883a 	add	r4,r3,r3
   2fc7c:	2109883a 	add	r4,r4,r4
   2fc80:	1109883a 	add	r4,r2,r4
   2fc84:	21802215 	stw	r6,136(r4)
   2fc88:	01800044 	movi	r6,1
   2fc8c:	12406217 	ldw	r9,392(r2)
   2fc90:	30cc983a 	sll	r6,r6,r3
   2fc94:	4992b03a 	or	r9,r9,r6
   2fc98:	12406215 	stw	r9,392(r2)
   2fc9c:	21c04215 	stw	r7,264(r4)
   2fca0:	01000084 	movi	r4,2
   2fca4:	893fd21e 	bne	r17,r4,2fbf0 <__alt_data_end+0xffff07f0>
   2fca8:	11006317 	ldw	r4,396(r2)
   2fcac:	218cb03a 	or	r6,r4,r6
   2fcb0:	11806315 	stw	r6,396(r2)
   2fcb4:	003fce06 	br	2fbf0 <__alt_data_end+0xffff07f0>
   2fcb8:	18805304 	addi	r2,r3,332
   2fcbc:	18805215 	stw	r2,328(r3)
   2fcc0:	003fc606 	br	2fbdc <__alt_data_end+0xffff07dc>
   2fcc4:	00bfffc4 	movi	r2,-1
   2fcc8:	003fd006 	br	2fc0c <__alt_data_end+0xffff080c>

0002fccc <__call_exitprocs>:
   2fccc:	defff504 	addi	sp,sp,-44
   2fcd0:	df000915 	stw	fp,36(sp)
   2fcd4:	dd400615 	stw	r21,24(sp)
   2fcd8:	dc800315 	stw	r18,12(sp)
   2fcdc:	dfc00a15 	stw	ra,40(sp)
   2fce0:	ddc00815 	stw	r23,32(sp)
   2fce4:	dd800715 	stw	r22,28(sp)
   2fce8:	dd000515 	stw	r20,20(sp)
   2fcec:	dcc00415 	stw	r19,16(sp)
   2fcf0:	dc400215 	stw	r17,8(sp)
   2fcf4:	dc000115 	stw	r16,4(sp)
   2fcf8:	d9000015 	stw	r4,0(sp)
   2fcfc:	2839883a 	mov	fp,r5
   2fd00:	04800044 	movi	r18,1
   2fd04:	057fffc4 	movi	r21,-1
   2fd08:	008000f4 	movhi	r2,3
   2fd0c:	10872504 	addi	r2,r2,7316
   2fd10:	12000017 	ldw	r8,0(r2)
   2fd14:	45005217 	ldw	r20,328(r8)
   2fd18:	44c05204 	addi	r19,r8,328
   2fd1c:	a0001c26 	beq	r20,zero,2fd90 <__call_exitprocs+0xc4>
   2fd20:	a0800117 	ldw	r2,4(r20)
   2fd24:	15ffffc4 	addi	r23,r2,-1
   2fd28:	b8000d16 	blt	r23,zero,2fd60 <__call_exitprocs+0x94>
   2fd2c:	14000044 	addi	r16,r2,1
   2fd30:	8421883a 	add	r16,r16,r16
   2fd34:	8421883a 	add	r16,r16,r16
   2fd38:	84402004 	addi	r17,r16,128
   2fd3c:	a463883a 	add	r17,r20,r17
   2fd40:	a421883a 	add	r16,r20,r16
   2fd44:	e0001e26 	beq	fp,zero,2fdc0 <__call_exitprocs+0xf4>
   2fd48:	80804017 	ldw	r2,256(r16)
   2fd4c:	e0801c26 	beq	fp,r2,2fdc0 <__call_exitprocs+0xf4>
   2fd50:	bdffffc4 	addi	r23,r23,-1
   2fd54:	843fff04 	addi	r16,r16,-4
   2fd58:	8c7fff04 	addi	r17,r17,-4
   2fd5c:	bd7ff91e 	bne	r23,r21,2fd44 <__alt_data_end+0xffff0944>
   2fd60:	00800034 	movhi	r2,0
   2fd64:	10800004 	addi	r2,r2,0
   2fd68:	10000926 	beq	r2,zero,2fd90 <__call_exitprocs+0xc4>
   2fd6c:	a0800117 	ldw	r2,4(r20)
   2fd70:	1000301e 	bne	r2,zero,2fe34 <__call_exitprocs+0x168>
   2fd74:	a0800017 	ldw	r2,0(r20)
   2fd78:	10003226 	beq	r2,zero,2fe44 <__call_exitprocs+0x178>
   2fd7c:	a009883a 	mov	r4,r20
   2fd80:	98800015 	stw	r2,0(r19)
   2fd84:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2fd88:	9d000017 	ldw	r20,0(r19)
   2fd8c:	a03fe41e 	bne	r20,zero,2fd20 <__alt_data_end+0xffff0920>
   2fd90:	dfc00a17 	ldw	ra,40(sp)
   2fd94:	df000917 	ldw	fp,36(sp)
   2fd98:	ddc00817 	ldw	r23,32(sp)
   2fd9c:	dd800717 	ldw	r22,28(sp)
   2fda0:	dd400617 	ldw	r21,24(sp)
   2fda4:	dd000517 	ldw	r20,20(sp)
   2fda8:	dcc00417 	ldw	r19,16(sp)
   2fdac:	dc800317 	ldw	r18,12(sp)
   2fdb0:	dc400217 	ldw	r17,8(sp)
   2fdb4:	dc000117 	ldw	r16,4(sp)
   2fdb8:	dec00b04 	addi	sp,sp,44
   2fdbc:	f800283a 	ret
   2fdc0:	a0800117 	ldw	r2,4(r20)
   2fdc4:	80c00017 	ldw	r3,0(r16)
   2fdc8:	10bfffc4 	addi	r2,r2,-1
   2fdcc:	15c01426 	beq	r2,r23,2fe20 <__call_exitprocs+0x154>
   2fdd0:	80000015 	stw	zero,0(r16)
   2fdd4:	183fde26 	beq	r3,zero,2fd50 <__alt_data_end+0xffff0950>
   2fdd8:	95c8983a 	sll	r4,r18,r23
   2fddc:	a0806217 	ldw	r2,392(r20)
   2fde0:	a5800117 	ldw	r22,4(r20)
   2fde4:	2084703a 	and	r2,r4,r2
   2fde8:	10000b26 	beq	r2,zero,2fe18 <__call_exitprocs+0x14c>
   2fdec:	a0806317 	ldw	r2,396(r20)
   2fdf0:	2088703a 	and	r4,r4,r2
   2fdf4:	20000c1e 	bne	r4,zero,2fe28 <__call_exitprocs+0x15c>
   2fdf8:	89400017 	ldw	r5,0(r17)
   2fdfc:	d9000017 	ldw	r4,0(sp)
   2fe00:	183ee83a 	callr	r3
   2fe04:	a0800117 	ldw	r2,4(r20)
   2fe08:	15bfbf1e 	bne	r2,r22,2fd08 <__alt_data_end+0xffff0908>
   2fe0c:	98800017 	ldw	r2,0(r19)
   2fe10:	153fcf26 	beq	r2,r20,2fd50 <__alt_data_end+0xffff0950>
   2fe14:	003fbc06 	br	2fd08 <__alt_data_end+0xffff0908>
   2fe18:	183ee83a 	callr	r3
   2fe1c:	003ff906 	br	2fe04 <__alt_data_end+0xffff0a04>
   2fe20:	a5c00115 	stw	r23,4(r20)
   2fe24:	003feb06 	br	2fdd4 <__alt_data_end+0xffff09d4>
   2fe28:	89000017 	ldw	r4,0(r17)
   2fe2c:	183ee83a 	callr	r3
   2fe30:	003ff406 	br	2fe04 <__alt_data_end+0xffff0a04>
   2fe34:	a0800017 	ldw	r2,0(r20)
   2fe38:	a027883a 	mov	r19,r20
   2fe3c:	1029883a 	mov	r20,r2
   2fe40:	003fb606 	br	2fd1c <__alt_data_end+0xffff091c>
   2fe44:	0005883a 	mov	r2,zero
   2fe48:	003ffb06 	br	2fe38 <__alt_data_end+0xffff0a38>

0002fe4c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2fe4c:	defffd04 	addi	sp,sp,-12
   2fe50:	df000215 	stw	fp,8(sp)
   2fe54:	df000204 	addi	fp,sp,8
   2fe58:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2fe5c:	0001883a 	nop
   2fe60:	e0bfff17 	ldw	r2,-4(fp)
   2fe64:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2fe68:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2fe6c:	10000226 	beq	r2,zero,2fe78 <_exit+0x2c>
    ALT_SIM_FAIL();
   2fe70:	002af070 	cmpltui	zero,zero,43969
   2fe74:	00000106 	br	2fe7c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   2fe78:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2fe7c:	003fff06 	br	2fe7c <__alt_data_end+0xffff0a7c>
