
week1_practicum2.elf:     file format elf32-littlenios2
week1_practicum2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x000100fc memsz 0x000100fc flags r-x
    LOAD off    0x0001111c vaddr 0x0001011c paddr 0x00011c08 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000136f4 vaddr 0x000136f4 paddr 0x000136f4 align 2**12
         filesz 0x00000000 memsz 0x00000170 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fc38  000001c0  000001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000324  0000fdf8  0000fdf8  00010df8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0001011c  00011c08  0001111c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000170  000136f4  000136f4  000136f4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00013864  00013864  00012c08  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012c08  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e68  00000000  00000000  00012c30  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022a62  00000000  00000000  00013a98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008d32  00000000  00000000  000364fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b26e  00000000  00000000  0003f22c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020d0  00000000  00000000  0004a49c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000353a  00000000  00000000  0004c56c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017755  00000000  00000000  0004faa6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000671fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001888  00000000  00000000  00067210  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006bb22  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006bb25  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006bb31  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006bb32  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006bb33  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006bb3e  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006bb49  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  0006bb54  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004c  00000000  00000000  0006bb5f  2**0
                  CONTENTS, READONLY
 26 .jdi          00005227  00000000  00000000  0006bbab  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     000480a0  00000000  00000000  00070dd2  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
000001c0 l    d  .text	00000000 .text
0000fdf8 l    d  .rodata	00000000 .rodata
0001011c l    d  .rwdata	00000000 .rwdata
000136f4 l    d  .bss	00000000 .bss
00013864 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../week1_practicum2_bsp//obj/HAL/src/crt0.o
000001f8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
000136f8 l     O .bss	00000006 hexadecimalnum.2646
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000fe62 l     O .rodata	00000010 zeroes.4404
00002bec l     F .text	000000bc __sbprintf
0000fe72 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002dfc l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004954 l     F .text	00000008 __fp_unlock
00004968 l     F .text	0000019c __sinit.part.1
00004b04 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0001011c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00010560 l     O .rwdata	00000020 lc_ctype_charset
00010540 l     O .rwdata	00000020 lc_message_charset
00010580 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000fea4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000074e8 l     F .text	000000fc __sprint_r.part.0
0000ffc8 l     O .rodata	00000010 zeroes.4349
00008b24 l     F .text	000000bc __sbprintf
0000ffd8 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d6f4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d808 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d834 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0000dbc8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000dcb0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000dd9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000df78 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00011bfc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000e1ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000e328 l     F .text	00000034 alt_dev_reg
00010b68 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e618 l     F .text	0000020c altera_avalon_jtag_uart_irq
0000e824 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000ee5c l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000f09c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000f25c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0000f3bc l     F .text	0000003c alt_get_errno
0000f3f8 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00006ff8 g     F .text	00000074 _mprec_log10
000070e4 g     F .text	0000008c __any_on
000095a0 g     F .text	00000054 _isatty_r
0000feb0 g     O .rodata	00000028 __mprec_tinytens
0000deb4 g     F .text	0000007c alt_main
00013764 g     O .bss	00000100 alt_irq
000095f4 g     F .text	00000060 _lseek_r
00011c08 g       *ABS*	00000000 __flash_rwdata_start
0000c0cc g     F .text	00000088 .hidden __eqdf2
00013864 g       *ABS*	00000000 __alt_heap_start
000008b8 g     F .text	0000003c printf
00009ecc g     F .text	0000009c _wcrtomb_r
00007310 g     F .text	0000005c __sseek
00004cb4 g     F .text	00000010 __sinit
00009d74 g     F .text	00000140 __swbuf_r
000052c0 g     F .text	0000007c _setlocale_r
00004b0c g     F .text	00000078 __sfmoreglue
0000df54 g     F .text	00000024 __malloc_unlock
00009654 g     F .text	0000015c memmove
00004c9c g     F .text	00000018 _cleanup
000060b8 g     F .text	000000a8 _Balloc
0000c154 g     F .text	000000dc .hidden __gtdf2
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000907c g     F .text	0000005c _fstat_r
00013720 g     O .bss	00000004 errno
0000728c g     F .text	00000008 __seofread
0001372c g     O .bss	00000004 alt_argv
00019bc8 g       *ABS*	00000000 _gp
000109e8 g     O .rwdata	00000180 alt_fd_list
0000f808 g     F .text	00000090 alt_find_dev
00005e48 g     F .text	00000148 memcpy
0000495c g     F .text	0000000c _cleanup_r
0000d50c g     F .text	000000dc .hidden __floatsidf
0000f340 g     F .text	0000007c alt_io_redirect
0000c230 g     F .text	000000f4 .hidden __ltdf2
0000fdf8 g       *ABS*	00000000 __DTOR_END__
00007170 g     F .text	00000074 __fpclassifyd
00006f54 g     F .text	000000a4 __ratio
00008b08 g     F .text	0000001c __vfiprintf_internal
0000ea1c g     F .text	0000021c altera_avalon_jtag_uart_read
00000888 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000ad6c g     F .text	00000064 .hidden __udivsi3
0000dc04 g     F .text	000000ac isatty
0000ff00 g     O .rodata	000000c8 __mprec_tens
0000533c g     F .text	0000000c __locale_charset
0001371c g     O .bss	00000004 __malloc_top_pad
00011bd0 g     O .rwdata	00000004 __mb_cur_max
0000536c g     F .text	0000000c _localeconv_r
000090d8 g     F .text	000004c8 __sfvwrite_r
000064ec g     F .text	0000003c __i2b
000071e4 g     F .text	00000054 _sbrk_r
000097b0 g     F .text	00000060 _read_r
00011bf0 g     O .rwdata	00000004 alt_max_fd
00008d70 g     F .text	000000f0 _fclose_r
00004924 g     F .text	00000030 fflush
00013718 g     O .bss	00000004 __malloc_max_sbrked_mem
0000ae50 g     F .text	000008ac .hidden __adddf3
00006cfc g     F .text	0000010c __b2d
0000a6b0 g     F .text	000005c4 .hidden __umoddi3
0000ddd8 g     F .text	000000dc lseek
00011bc8 g     O .rwdata	00000004 _global_impure_ptr
00009810 g     F .text	00000564 _realloc_r
00013864 g       *ABS*	00000000 __bss_end
0000dad8 g     F .text	000000f0 alt_iic_isr_register
0000f6dc g     F .text	00000108 alt_tick
0000a0b4 g     F .text	000005fc .hidden __udivdi3
00008fd8 g     F .text	00000024 _fputwc_r
0000fed8 g     O .rodata	00000028 __mprec_bigtens
000062d0 g     F .text	00000104 __s2b
0000d5e8 g     F .text	000000a8 .hidden __floatunsidf
00006a3c g     F .text	00000060 __mcmp
00004cd4 g     F .text	00000018 __fp_lock_all
0000da8c g     F .text	0000004c alt_ic_irq_enabled
0000f640 g     F .text	0000009c alt_alarm_stop
00013724 g     O .bss	00000004 alt_irq_active
000000ec g     F .exceptions	000000d4 alt_irq_handler
000109c0 g     O .rwdata	00000028 alt_dev_null
000001fc g     F .text	0000012c charToInt
0000f07c g     F .text	00000020 alt_dcache_flush_all
000063d4 g     F .text	00000068 __hi0bits
0000d48c g     F .text	00000080 .hidden __fixdfsi
00011c08 g       *ABS*	00000000 __ram_rwdata_end
00011be8 g     O .rwdata	00000008 alt_dev_list
0000e228 g     F .text	00000100 write
0001011c g       *ABS*	00000000 __ram_rodata_end
0000d870 g     F .text	000000b8 fstat
0000c230 g     F .text	000000f4 .hidden __ledf2
000067b4 g     F .text	00000140 __pow5mult
000075fc g     F .text	0000150c ___vfiprintf_internal_r
00013710 g     O .bss	00000004 __nlocale_changed
0000add0 g     F .text	00000058 .hidden __umodsi3
00000488 g     F .text	000000bc init_interrupt
00013864 g       *ABS*	00000000 end
00000544 g     F .text	000000a4 counterInterrupt
0000e558 g     F .text	000000c0 altera_avalon_jtag_uart_init
0000fdf8 g       *ABS*	00000000 __CTOR_LIST__
0001f400 g       *ABS*	00000000 __alt_stack_pointer
0000eed4 g     F .text	0000007c alt_avalon_timer_sc_init
0000d690 g     F .text	00000064 .hidden __clzsi2
0000ec38 g     F .text	00000224 altera_avalon_jtag_uart_write
00004cc4 g     F .text	00000004 __sfp_lock_acquire
00005d64 g     F .text	000000e4 memchr
000008f4 g     F .text	000022dc ___vfprintf_internal_r
00004e28 g     F .text	00000310 _free_r
00005348 g     F .text	00000010 __locale_mb_cur_max
0000fc44 g     F .text	00000180 __call_exitprocs
0001370c g     O .bss	00000004 __mlocale_changed
00011bd4 g     O .rwdata	00000004 __malloc_sbrk_base
000001c0 g     F .text	0000003c _start
00013734 g     O .bss	00000004 _alt_tick_rate
000068f4 g     F .text	00000148 __lshift
00013738 g     O .bss	00000004 _alt_nticks
0000dfb4 g     F .text	00000104 read
0000e394 g     F .text	00000060 alt_sys_init
0000fb2c g     F .text	00000118 __register_exitproc
00006528 g     F .text	0000028c __multiply
0000e8c4 g     F .text	00000068 altera_avalon_jtag_uart_close
0000072c g     F .text	00000104 dec2ToHex
0000ae28 g     F .text	00000028 .hidden __mulsi3
0001011c g       *ABS*	00000000 __ram_rwdata_start
0000fdf8 g       *ABS*	00000000 __ram_rodata_start
0001373c g     O .bss	00000028 __malloc_current_mallinfo
00006e08 g     F .text	0000014c __d2b
000136f4 g     O .bss	00000004 intCounter
0000e3f4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f9a0 g     F .text	000000c4 alt_get_fd
00008c40 g     F .text	00000054 _close_r
0000fab0 g     F .text	0000007c memcmp
0000e4b4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013864 g       *ABS*	00000000 __alt_stack_base
0000e504 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00002ca8 g     F .text	00000154 __swsetup_r
0000b6fc g     F .text	000009d0 .hidden __divdf3
00004b84 g     F .text	00000118 __sfp
0000706c g     F .text	00000078 __copybits
000105b8 g     O .rwdata	00000408 __malloc_av_
00004cd0 g     F .text	00000004 __sinit_lock_release
0000c324 g     F .text	0000086c .hidden __muldf3
00007238 g     F .text	00000054 __sread
0000f898 g     F .text	00000108 alt_find_file
0000f0d8 g     F .text	000000a4 alt_dev_llist_insert
0000df30 g     F .text	00000024 __malloc_lock
0000e13c g     F .text	000000b0 sbrk
000048c8 g     F .text	0000005c _fflush_r
00008c94 g     F .text	000000dc _calloc_r
000136f4 g       *ABS*	00000000 __bss_start
00005f90 g     F .text	00000128 memset
00000830 g     F .text	00000058 main
00013730 g     O .bss	00000004 alt_envp
00013714 g     O .bss	00000004 __malloc_max_total_mem
0000e454 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009eb4 g     F .text	00000018 __swbuf
0000736c g     F .text	00000008 __sclose
0001f400 g       *ABS*	00000000 __alt_heap_limit
00008e60 g     F .text	00000014 fclose
00003024 g     F .text	00001688 _dtoa_r
00005558 g     F .text	0000080c _malloc_r
0000a028 g     F .text	00000030 __ascii_wctomb
00011bf4 g     O .rwdata	00000004 alt_errno
00005138 g     F .text	000000c4 _fwalk
0000ac74 g     F .text	00000084 .hidden __divsi3
00000328 g     F .text	00000160 hex_to_7_seg
00004d04 g     F .text	00000124 _malloc_trim_r
0000fdf8 g       *ABS*	00000000 __CTOR_END__
00007374 g     F .text	000000dc strcmp
0000fdf8 g       *ABS*	00000000 __flash_rodata_start
0000fdf8 g       *ABS*	00000000 __DTOR_LIST__
0000c0cc g     F .text	00000088 .hidden __nedf2
0000e35c g     F .text	00000038 alt_irq_init
0000e0b8 g     F .text	00000084 alt_release_fd
0000ffe8 g     O .rodata	00000100 .hidden __clz_tab
00013708 g     O .bss	00000004 _PathLocale
0000fa64 g     F .text	00000014 atexit
00008be0 g     F .text	00000060 _write_r
00005378 g     F .text	00000018 setlocale
00011bcc g     O .rwdata	00000004 _impure_ptr
00013728 g     O .bss	00000004 alt_argc
000046ac g     F .text	0000021c __sflush_r
0000f1dc g     F .text	00000060 _do_dtors
00005364 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006c98 g     F .text	00000064 __ulp
00004cec g     F .text	00000018 __fp_unlock_all
00011be0 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005390 g     F .text	0000000c localeconv
0000d928 g     F .text	00000050 alt_ic_isr_register
00011c08 g       *ABS*	00000000 _edata
00013864 g       *ABS*	00000000 _end
00013700 g     O .bss	00000004 noPara
00008e74 g     F .text	00000164 __fputwc
000001c0 g       *ABS*	00000000 __ram_exceptions_end
0000e92c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000da00 g     F .text	0000008c alt_ic_irq_disable
00007294 g     F .text	0000007c __swrite
00011bd8 g     O .rwdata	00000004 __malloc_trim_threshold
0000f7e4 g     F .text	00000024 altera_nios2_qsys_irq_init
00005358 g     F .text	0000000c __locale_msgcharset
0000fa78 g     F .text	00000038 exit
00013704 g     O .bss	00000004 flags
000051fc g     F .text	000000c4 _fwalk_reent
00006a9c g     F .text	000001fc __mdiff
0000acf8 g     F .text	00000074 .hidden __modsi3
0001f400 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004cc8 g     F .text	00000004 __sfp_lock_release
0000fdc4 g     F .text	00000034 _exit
0000ef50 g     F .text	0000012c alt_alarm_start
0000539c g     F .text	000001bc __smakebuf_r
00007450 g     F .text	00000098 strlen
0000f4e4 g     F .text	0000015c open
0000c154 g     F .text	000000dc .hidden __gedf2
00011bdc g     O .rwdata	00000004 __wctomb
000075e4 g     F .text	00000018 __sprint_r
0000f23c g     F .text	00000020 alt_icache_flush_all
00011bf8 g     O .rwdata	00000004 alt_priority_mask
0000d978 g     F .text	00000088 alt_ic_irq_enable
00002bd0 g     F .text	0000001c __vfprintf_internal
0000a058 g     F .text	0000005c _wctomb_r
0000cb90 g     F .text	000008fc .hidden __subdf3
0000643c g     F .text	000000b0 __lo0bits
00011c00 g     O .rwdata	00000008 alt_alarm_list
0000f17c g     F .text	00000060 _do_ctors
00009f68 g     F .text	000000c0 wcrtomb
0000d730 g     F .text	000000d8 close
000005e8 g     F .text	00000144 write7SegDisplay
0000dd18 g     F .text	00000084 alt_load
00008ffc g     F .text	00000080 fputwc
00004ccc g     F .text	00000004 __sinit_lock_acquire
00006188 g     F .text	00000148 __multadd
00006160 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08407014 	ori	at,at,448
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)

00000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defff904 	addi	sp,sp,-28
  f0:	dfc00615 	stw	ra,24(sp)
  f4:	df000515 	stw	fp,20(sp)
  f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 100:	0005313a 	rdctl	r2,ipending
 104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 10c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 114:	00800044 	movi	r2,1
 118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 11c:	e0fffb17 	ldw	r3,-20(fp)
 120:	e0bffc17 	ldw	r2,-16(fp)
 124:	1884703a 	and	r2,r3,r2
 128:	10001426 	beq	r2,zero,17c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 12c:	00800074 	movhi	r2,1
 130:	108dd904 	addi	r2,r2,14180
 134:	e0fffd17 	ldw	r3,-12(fp)
 138:	180690fa 	slli	r3,r3,3
 13c:	10c5883a 	add	r2,r2,r3
 140:	10c00017 	ldw	r3,0(r2)
 144:	00800074 	movhi	r2,1
 148:	108dd904 	addi	r2,r2,14180
 14c:	e13ffd17 	ldw	r4,-12(fp)
 150:	200890fa 	slli	r4,r4,3
 154:	1105883a 	add	r2,r2,r4
 158:	10800104 	addi	r2,r2,4
 15c:	10800017 	ldw	r2,0(r2)
 160:	1009883a 	mov	r4,r2
 164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 16c:	0005313a 	rdctl	r2,ipending
 170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 174:	e0bfff17 	ldw	r2,-4(fp)
 178:	00000706 	br	198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 17c:	e0bffc17 	ldw	r2,-16(fp)
 180:	1085883a 	add	r2,r2,r2
 184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 188:	e0bffd17 	ldw	r2,-12(fp)
 18c:	10800044 	addi	r2,r2,1
 190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 194:	003fe106 	br	11c <__alt_data_end+0xfffe0d1c>

    active = alt_irq_pending ();
 198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 19c:	e0bffb17 	ldw	r2,-20(fp)
 1a0:	103fdb1e 	bne	r2,zero,110 <__alt_data_end+0xfffe0d10>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a4:	0001883a 	nop
}
 1a8:	0001883a 	nop
 1ac:	e037883a 	mov	sp,fp
 1b0:	dfc00117 	ldw	ra,4(sp)
 1b4:	df000017 	ldw	fp,0(sp)
 1b8:	dec00204 	addi	sp,sp,8
 1bc:	f800283a 	ret

Disassembly of section .text:

000001c0 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1c0:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     1c4:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
     1c8:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1cc:	d6a6f214 	ori	gp,gp,39880
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1d0:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1d4:	108dbd14 	ori	r2,r2,14068

    movhi r3, %hi(__bss_end)
     1d8:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1dc:	18ce1914 	ori	r3,r3,14436

    beq r2, r3, 1f
     1e0:	10c00326 	beq	r2,r3,1f0 <_start+0x30>

0:
    stw zero, (r2)
     1e4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1e8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1ec:	10fffd36 	bltu	r2,r3,1e4 <__alt_data_end+0xfffe0de4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     1f0:	000dd180 	call	dd18 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1f4:	000deb40 	call	deb4 <alt_main>

000001f8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1f8:	003fff06 	br	1f8 <__alt_data_end+0xfffe0df8>

000001fc <charToInt>:
/*Global variable declarations*/
volatile int intCounter = 0;

//Convert a char hexadecimal character to its corresponding int value
int charToInt(char convert)
{
     1fc:	defffe04 	addi	sp,sp,-8
     200:	df000115 	stw	fp,4(sp)
     204:	df000104 	addi	fp,sp,4
     208:	2005883a 	mov	r2,r4
     20c:	e0bfff05 	stb	r2,-4(fp)
//    	return result;
//    }else{
//    	return (int)convert-55;	//if char is 'A' == 65 decimal so 65-55 is = 10 decimal is the decimal value of 0xA
//    }

    switch(convert){
     210:	e0bfff07 	ldb	r2,-4(fp)
     214:	10bff404 	addi	r2,r2,-48
     218:	10c005e8 	cmpgeui	r3,r2,23
     21c:	18003d1e 	bne	r3,zero,314 <charToInt+0x118>
     220:	100690ba 	slli	r3,r2,2
     224:	00800034 	movhi	r2,0
     228:	10808e04 	addi	r2,r2,568
     22c:	1885883a 	add	r2,r3,r2
     230:	10800017 	ldw	r2,0(r2)
     234:	1000683a 	jmp	r2
     238:	00000294 	movui	zero,10
     23c:	0000029c 	xori	zero,zero,10
     240:	000002a4 	muli	zero,zero,10
     244:	000002ac 	andhi	zero,zero,10
     248:	000002b4 	movhi	zero,10
     24c:	000002bc 	xorhi	zero,zero,10
     250:	000002c4 	movi	zero,11
     254:	000002cc 	andi	zero,zero,11
     258:	000002d4 	movui	zero,11
     25c:	000002dc 	xori	zero,zero,11
     260:	00000314 	movui	zero,12
     264:	00000314 	movui	zero,12
     268:	00000314 	movui	zero,12
     26c:	00000314 	movui	zero,12
     270:	00000314 	movui	zero,12
     274:	00000314 	movui	zero,12
     278:	00000314 	movui	zero,12
     27c:	000002e4 	muli	zero,zero,11
     280:	000002ec 	andhi	zero,zero,11
     284:	000002f4 	movhi	zero,11
     288:	000002fc 	xorhi	zero,zero,11
     28c:	00000304 	movi	zero,12
     290:	0000030c 	andi	zero,zero,12
        case '0' : return 0; break;
     294:	0005883a 	mov	r2,zero
     298:	00001f06 	br	318 <charToInt+0x11c>
        case '1' : return 1; break;
     29c:	00800044 	movi	r2,1
     2a0:	00001d06 	br	318 <charToInt+0x11c>
        case '2' : return 2; break;
     2a4:	00800084 	movi	r2,2
     2a8:	00001b06 	br	318 <charToInt+0x11c>
        case '3' : return 3; break;
     2ac:	008000c4 	movi	r2,3
     2b0:	00001906 	br	318 <charToInt+0x11c>
        case '4' : return 4; break;
     2b4:	00800104 	movi	r2,4
     2b8:	00001706 	br	318 <charToInt+0x11c>
        case '5' : return 5; break;
     2bc:	00800144 	movi	r2,5
     2c0:	00001506 	br	318 <charToInt+0x11c>
        case '6' : return 6; break;
     2c4:	00800184 	movi	r2,6
     2c8:	00001306 	br	318 <charToInt+0x11c>
        case '7' : return 7; break;
     2cc:	008001c4 	movi	r2,7
     2d0:	00001106 	br	318 <charToInt+0x11c>
        case '8' : return 8; break;
     2d4:	00800204 	movi	r2,8
     2d8:	00000f06 	br	318 <charToInt+0x11c>
        case '9' : return 9; break;
     2dc:	00800244 	movi	r2,9
     2e0:	00000d06 	br	318 <charToInt+0x11c>
        case 'A' : return 10; break;
     2e4:	00800284 	movi	r2,10
     2e8:	00000b06 	br	318 <charToInt+0x11c>
        case 'B' : return 11; break;
     2ec:	008002c4 	movi	r2,11
     2f0:	00000906 	br	318 <charToInt+0x11c>
        case 'C' : return 12; break;
     2f4:	00800304 	movi	r2,12
     2f8:	00000706 	br	318 <charToInt+0x11c>
        case 'D' : return 13; break;
     2fc:	00800344 	movi	r2,13
     300:	00000506 	br	318 <charToInt+0x11c>
        case 'E' : return 14; break;
     304:	00800384 	movi	r2,14
     308:	00000306 	br	318 <charToInt+0x11c>
        case 'F' : return 15; break;
     30c:	008003c4 	movi	r2,15
     310:	00000106 	br	318 <charToInt+0x11c>
        default  : return 0;
     314:	0005883a 	mov	r2,zero
    }
}
     318:	e037883a 	mov	sp,fp
     31c:	df000017 	ldw	fp,0(sp)
     320:	dec00104 	addi	sp,sp,4
     324:	f800283a 	ret

00000328 <hex_to_7_seg>:
//Return the hex display input bits to set a certain number on the display
int hex_to_7_seg (int hex_digit ) {
     328:	defffe04 	addi	sp,sp,-8
     32c:	df000115 	stw	fp,4(sp)
     330:	df000104 	addi	fp,sp,4
     334:	e13fff15 	stw	r4,-4(fp)
    if ( hex_digit == 0x0 ) return 0x40 ;
     338:	e0bfff17 	ldw	r2,-4(fp)
     33c:	1000021e 	bne	r2,zero,348 <hex_to_7_seg+0x20>
     340:	00801004 	movi	r2,64
     344:	00004c06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x1 ) return 0x79 ;
     348:	e0bfff17 	ldw	r2,-4(fp)
     34c:	10800058 	cmpnei	r2,r2,1
     350:	1000021e 	bne	r2,zero,35c <hex_to_7_seg+0x34>
     354:	00801e44 	movi	r2,121
     358:	00004706 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x2 ) return 0x24 ;
     35c:	e0bfff17 	ldw	r2,-4(fp)
     360:	10800098 	cmpnei	r2,r2,2
     364:	1000021e 	bne	r2,zero,370 <hex_to_7_seg+0x48>
     368:	00800904 	movi	r2,36
     36c:	00004206 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x3 ) return 0x30 ;
     370:	e0bfff17 	ldw	r2,-4(fp)
     374:	108000d8 	cmpnei	r2,r2,3
     378:	1000021e 	bne	r2,zero,384 <hex_to_7_seg+0x5c>
     37c:	00800c04 	movi	r2,48
     380:	00003d06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x4 ) return 0x19 ;
     384:	e0bfff17 	ldw	r2,-4(fp)
     388:	10800118 	cmpnei	r2,r2,4
     38c:	1000021e 	bne	r2,zero,398 <hex_to_7_seg+0x70>
     390:	00800644 	movi	r2,25
     394:	00003806 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x5 ) return 0x12 ;
     398:	e0bfff17 	ldw	r2,-4(fp)
     39c:	10800158 	cmpnei	r2,r2,5
     3a0:	1000021e 	bne	r2,zero,3ac <hex_to_7_seg+0x84>
     3a4:	00800484 	movi	r2,18
     3a8:	00003306 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x6 ) return 0x02 ;
     3ac:	e0bfff17 	ldw	r2,-4(fp)
     3b0:	10800198 	cmpnei	r2,r2,6
     3b4:	1000021e 	bne	r2,zero,3c0 <hex_to_7_seg+0x98>
     3b8:	00800084 	movi	r2,2
     3bc:	00002e06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x7 ) return 0x78 ;
     3c0:	e0bfff17 	ldw	r2,-4(fp)
     3c4:	108001d8 	cmpnei	r2,r2,7
     3c8:	1000021e 	bne	r2,zero,3d4 <hex_to_7_seg+0xac>
     3cc:	00801e04 	movi	r2,120
     3d0:	00002906 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x8 ) return 0x00 ;
     3d4:	e0bfff17 	ldw	r2,-4(fp)
     3d8:	10800218 	cmpnei	r2,r2,8
     3dc:	1000021e 	bne	r2,zero,3e8 <hex_to_7_seg+0xc0>
     3e0:	0005883a 	mov	r2,zero
     3e4:	00002406 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x9 ) return 0x18 ;
     3e8:	e0bfff17 	ldw	r2,-4(fp)
     3ec:	10800258 	cmpnei	r2,r2,9
     3f0:	1000021e 	bne	r2,zero,3fc <hex_to_7_seg+0xd4>
     3f4:	00800604 	movi	r2,24
     3f8:	00001f06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xA ) return 0x08 ;
     3fc:	e0bfff17 	ldw	r2,-4(fp)
     400:	10800298 	cmpnei	r2,r2,10
     404:	1000021e 	bne	r2,zero,410 <hex_to_7_seg+0xe8>
     408:	00800204 	movi	r2,8
     40c:	00001a06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xB ) return 0x03 ;
     410:	e0bfff17 	ldw	r2,-4(fp)
     414:	108002d8 	cmpnei	r2,r2,11
     418:	1000021e 	bne	r2,zero,424 <hex_to_7_seg+0xfc>
     41c:	008000c4 	movi	r2,3
     420:	00001506 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xC ) return 0x46 ;
     424:	e0bfff17 	ldw	r2,-4(fp)
     428:	10800318 	cmpnei	r2,r2,12
     42c:	1000021e 	bne	r2,zero,438 <hex_to_7_seg+0x110>
     430:	00801184 	movi	r2,70
     434:	00001006 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xD ) return 0x21 ;
     438:	e0bfff17 	ldw	r2,-4(fp)
     43c:	10800358 	cmpnei	r2,r2,13
     440:	1000021e 	bne	r2,zero,44c <hex_to_7_seg+0x124>
     444:	00800844 	movi	r2,33
     448:	00000b06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xE ) return 0x06 ;
     44c:	e0bfff17 	ldw	r2,-4(fp)
     450:	10800398 	cmpnei	r2,r2,14
     454:	1000021e 	bne	r2,zero,460 <hex_to_7_seg+0x138>
     458:	00800184 	movi	r2,6
     45c:	00000606 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xF ) return 0x0E ;
     460:	e0bfff17 	ldw	r2,-4(fp)
     464:	108003d8 	cmpnei	r2,r2,15
     468:	1000021e 	bne	r2,zero,474 <hex_to_7_seg+0x14c>
     46c:	00800384 	movi	r2,14
     470:	00000106 	br	478 <hex_to_7_seg+0x150>
return 0x7F ;
     474:	00801fc4 	movi	r2,127
}
     478:	e037883a 	mov	sp,fp
     47c:	df000017 	ldw	fp,0(sp)
     480:	dec00104 	addi	sp,sp,4
     484:	f800283a 	ret

00000488 <init_interrupt>:

volatile int noPara;
volatile int flags;

void init_interrupt(){
     488:	defffa04 	addi	sp,sp,-24
     48c:	dfc00515 	stw	ra,20(sp)
     490:	df000415 	stw	fp,16(sp)
     494:	df000404 	addi	fp,sp,16
		/*Set callback function abnd enable interrupts*/
		//bits 15:0 periodl
		int counter	= 50000;	// 1/(50MHz) x (50000) = 1msec
     498:	00b0d414 	movui	r2,50000
     49c:	e0bffd15 	stw	r2,-12(fp)

		//Write counter value to registers
		IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_0_BASE, counter & 0xFFFF);
     4a0:	e0bffd17 	ldw	r2,-12(fp)
     4a4:	10ffffcc 	andi	r3,r2,65535
     4a8:	008000b4 	movhi	r2,2
     4ac:	10840204 	addi	r2,r2,4104
     4b0:	10c00035 	stwio	r3,0(r2)
		IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_0_BASE, (counter >> 16) & 0xFFFF);
     4b4:	e0bffd17 	ldw	r2,-12(fp)
     4b8:	1004d43a 	srli	r2,r2,16
     4bc:	1007883a 	mov	r3,r2
     4c0:	008000b4 	movhi	r2,2
     4c4:	10840304 	addi	r2,r2,4108
     4c8:	10c00035 	stwio	r3,0(r2)

		void* isrPara = (void *) &noPara;
     4cc:	d0a6ce04 	addi	r2,gp,-25800
     4d0:	e0bffe15 	stw	r2,-8(fp)
		void* noFlags = (void *) &flags;
     4d4:	d0a6cf04 	addi	r2,gp,-25796
     4d8:	e0bfff15 	stw	r2,-4(fp)
		//uitzoeken wat void isr_context moet zijn en de flags
		if(alt_ic_isr_register(TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID,TIMER_0_IRQ, counterInterrupt, isrPara, noFlags)){
     4dc:	e0bfff17 	ldw	r2,-4(fp)
     4e0:	d8800015 	stw	r2,0(sp)
     4e4:	e1fffe17 	ldw	r7,-8(fp)
     4e8:	01800034 	movhi	r6,0
     4ec:	31815104 	addi	r6,r6,1348
     4f0:	01400184 	movi	r5,6
     4f4:	0009883a 	mov	r4,zero
     4f8:	000d9280 	call	d928 <alt_ic_isr_register>
     4fc:	10000326 	beq	r2,zero,50c <init_interrupt+0x84>
		  printf("Error in ic_isr_register set callback");
     500:	01000074 	movhi	r4,1
     504:	213f7e04 	addi	r4,r4,-520
     508:	00008b80 	call	8b8 <printf>
		}

		//Set control register bits
		IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_0_BASE, 0x7);
     50c:	00c001c4 	movi	r3,7
     510:	008000b4 	movhi	r2,2
     514:	10840104 	addi	r2,r2,4100
     518:	10c00035 	stwio	r3,0(r2)

		/* set interrupt mask bits for levels 6 which is the defined interrupt generator for
		* the interval timer hardware
		*/
		NIOS2_WRITE_IENABLE(0x40);
     51c:	00801004 	movi	r2,64
     520:	100170fa 	wrctl	ienable,r2

		NIOS2_WRITE_STATUS(1); // enable Nios II interrupts
     524:	00800044 	movi	r2,1
     528:	1001703a 	wrctl	status,r2
}
     52c:	0001883a 	nop
     530:	e037883a 	mov	sp,fp
     534:	dfc00117 	ldw	ra,4(sp)
     538:	df000017 	ldw	fp,0(sp)
     53c:	dec00204 	addi	sp,sp,8
     540:	f800283a 	ret

00000544 <counterInterrupt>:

/*Interrupt function */
void counterInterrupt(void* isr_context)
{
     544:	defffb04 	addi	sp,sp,-20
     548:	dfc00415 	stw	ra,16(sp)
     54c:	df000315 	stw	fp,12(sp)
     550:	df000304 	addi	fp,sp,12
     554:	e13fff15 	stw	r4,-4(fp)
    intCounter++;
     558:	d0a6cb17 	ldw	r2,-25812(gp)
     55c:	10800044 	addi	r2,r2,1
     560:	d0a6cb15 	stw	r2,-25812(gp)
    if(intCounter > 999999) intCounter = 0; //6 seven segments displays
     564:	d0e6cb17 	ldw	r3,-25812(gp)
     568:	008003f4 	movhi	r2,15
     56c:	10908fc4 	addi	r2,r2,16959
     570:	10c0010e 	bge	r2,r3,578 <counterInterrupt+0x34>
     574:	d026cb15 	stw	zero,-25812(gp)
    char *intCounterHex;
    intCounterHex = dec2ToHex(intCounter);
     578:	d0a6cb17 	ldw	r2,-25812(gp)
     57c:	1009883a 	mov	r4,r2
     580:	000072c0 	call	72c <dec2ToHex>
     584:	e0bffe15 	stw	r2,-8(fp)

    //elke charachter uit intCounterHex staat gelijk aan een getal op de hex display
    int i = 0;
     588:	e03ffd15 	stw	zero,-12(fp)
    while(i < 6){
     58c:	00000d06 	br	5c4 <counterInterrupt+0x80>
        write7SegDisplay(intCounterHex[i], i);
     590:	e0bffd17 	ldw	r2,-12(fp)
     594:	e0fffe17 	ldw	r3,-8(fp)
     598:	1885883a 	add	r2,r3,r2
     59c:	10800003 	ldbu	r2,0(r2)
     5a0:	10803fcc 	andi	r2,r2,255
     5a4:	1080201c 	xori	r2,r2,128
     5a8:	10bfe004 	addi	r2,r2,-128
     5ac:	e17ffd17 	ldw	r5,-12(fp)
     5b0:	1009883a 	mov	r4,r2
     5b4:	00005e80 	call	5e8 <write7SegDisplay>
        i++;
     5b8:	e0bffd17 	ldw	r2,-12(fp)
     5bc:	10800044 	addi	r2,r2,1
     5c0:	e0bffd15 	stw	r2,-12(fp)
    char *intCounterHex;
    intCounterHex = dec2ToHex(intCounter);

    //elke charachter uit intCounterHex staat gelijk aan een getal op de hex display
    int i = 0;
    while(i < 6){
     5c4:	e0bffd17 	ldw	r2,-12(fp)
     5c8:	10800190 	cmplti	r2,r2,6
     5cc:	103ff01e 	bne	r2,zero,590 <__alt_data_end+0xfffe1190>
        write7SegDisplay(intCounterHex[i], i);
        i++;
    }
}
     5d0:	0001883a 	nop
     5d4:	e037883a 	mov	sp,fp
     5d8:	dfc00117 	ldw	ra,4(sp)
     5dc:	df000017 	ldw	fp,0(sp)
     5e0:	dec00204 	addi	sp,sp,8
     5e4:	f800283a 	ret

000005e8 <write7SegDisplay>:

void write7SegDisplay(char displayValue, int displayNumber)
{
     5e8:	defffa04 	addi	sp,sp,-24
     5ec:	dfc00515 	stw	ra,20(sp)
     5f0:	df000415 	stw	fp,16(sp)
     5f4:	df000404 	addi	fp,sp,16
     5f8:	2005883a 	mov	r2,r4
     5fc:	e17fff15 	stw	r5,-4(fp)
     600:	e0bffe05 	stb	r2,-8(fp)
    int decNumber = charToInt(displayValue);
     604:	e0bffe07 	ldb	r2,-8(fp)
     608:	1009883a 	mov	r4,r2
     60c:	00001fc0 	call	1fc <charToInt>
     610:	e0bffc15 	stw	r2,-16(fp)
    int segInput = hex_to_7_seg(decNumber);
     614:	e13ffc17 	ldw	r4,-16(fp)
     618:	00003280 	call	328 <hex_to_7_seg>
     61c:	e0bffd15 	stw	r2,-12(fp)
    /* Uitleg
     * Het adres van hexY_X bevat een X aantal bits als voorbeeld hex0_3 = 28 bits
     * De hexto7Seg returned het getal wat nodig is om de goede bits van het hex display aan te sturen
     * Maar je wilt dit naar een specifiek gedeelte van de 28 bits schrijven, de 1e 7 = hex0 daarna hex1 etc. dit kan doormiddel van een mask(0x7F)
     */
    if(displayNumber == 0)
     620:	e0bfff17 	ldw	r2,-4(fp)
     624:	1000041e 	bne	r2,zero,638 <write7SegDisplay+0x50>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, (segInput));
     628:	008000b4 	movhi	r2,2
     62c:	10840c04 	addi	r2,r2,4144
     630:	e0fffd17 	ldw	r3,-12(fp)
     634:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 1)
     638:	e0bfff17 	ldw	r2,-4(fp)
     63c:	10800058 	cmpnei	r2,r2,1
     640:	1000091e 	bne	r2,zero,668 <write7SegDisplay+0x80>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, ((segInput << 7) | IORD_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE)));
     644:	e0bffd17 	ldw	r2,-12(fp)
     648:	100691fa 	slli	r3,r2,7
     64c:	008000b4 	movhi	r2,2
     650:	10840c04 	addi	r2,r2,4144
     654:	10800037 	ldwio	r2,0(r2)
     658:	1886b03a 	or	r3,r3,r2
     65c:	008000b4 	movhi	r2,2
     660:	10840c04 	addi	r2,r2,4144
     664:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 2)
     668:	e0bfff17 	ldw	r2,-4(fp)
     66c:	10800098 	cmpnei	r2,r2,2
     670:	1000091e 	bne	r2,zero,698 <write7SegDisplay+0xb0>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, ((segInput << 14) | IORD_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE)));
     674:	e0bffd17 	ldw	r2,-12(fp)
     678:	100693ba 	slli	r3,r2,14
     67c:	008000b4 	movhi	r2,2
     680:	10840c04 	addi	r2,r2,4144
     684:	10800037 	ldwio	r2,0(r2)
     688:	1886b03a 	or	r3,r3,r2
     68c:	008000b4 	movhi	r2,2
     690:	10840c04 	addi	r2,r2,4144
     694:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 3)
     698:	e0bfff17 	ldw	r2,-4(fp)
     69c:	108000d8 	cmpnei	r2,r2,3
     6a0:	1000091e 	bne	r2,zero,6c8 <write7SegDisplay+0xe0>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, ((segInput << 21) | IORD_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE)));
     6a4:	e0bffd17 	ldw	r2,-12(fp)
     6a8:	1006957a 	slli	r3,r2,21
     6ac:	008000b4 	movhi	r2,2
     6b0:	10840c04 	addi	r2,r2,4144
     6b4:	10800037 	ldwio	r2,0(r2)
     6b8:	1886b03a 	or	r3,r3,r2
     6bc:	008000b4 	movhi	r2,2
     6c0:	10840c04 	addi	r2,r2,4144
     6c4:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 4)
     6c8:	e0bfff17 	ldw	r2,-4(fp)
     6cc:	10800118 	cmpnei	r2,r2,4
     6d0:	1000041e 	bne	r2,zero,6e4 <write7SegDisplay+0xfc>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE, (segInput));
     6d4:	008000b4 	movhi	r2,2
     6d8:	10840804 	addi	r2,r2,4128
     6dc:	e0fffd17 	ldw	r3,-12(fp)
     6e0:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 5)
     6e4:	e0bfff17 	ldw	r2,-4(fp)
     6e8:	10800158 	cmpnei	r2,r2,5
     6ec:	1000091e 	bne	r2,zero,714 <write7SegDisplay+0x12c>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE, ((segInput << 7) | IORD_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE)));
     6f0:	e0bffd17 	ldw	r2,-12(fp)
     6f4:	100691fa 	slli	r3,r2,7
     6f8:	008000b4 	movhi	r2,2
     6fc:	10840804 	addi	r2,r2,4128
     700:	10800037 	ldwio	r2,0(r2)
     704:	1886b03a 	or	r3,r3,r2
     708:	008000b4 	movhi	r2,2
     70c:	10840804 	addi	r2,r2,4128
     710:	10c00035 	stwio	r3,0(r2)
}
     714:	0001883a 	nop
     718:	e037883a 	mov	sp,fp
     71c:	dfc00117 	ldw	ra,4(sp)
     720:	df000017 	ldw	fp,0(sp)
     724:	dec00204 	addi	sp,sp,8
     728:	f800283a 	ret

0000072c <dec2ToHex>:

char* dec2ToHex(int decimalnum)
{
     72c:	defffa04 	addi	sp,sp,-24
     730:	df000515 	stw	fp,20(sp)
     734:	df000504 	addi	fp,sp,20
     738:	e13fff15 	stw	r4,-4(fp)
    int quotient, remainder;
    int i, j = 0;
     73c:	e03ffc15 	stw	zero,-16(fp)
    static char hexadecimalnum[MAX_HEX_SIZE];

    for(int i = 0; i < MAX_HEX_SIZE; i++)
     740:	e03ffd15 	stw	zero,-12(fp)
     744:	00000806 	br	768 <dec2ToHex+0x3c>
        hexadecimalnum[i] = '0';
     748:	e0fffd17 	ldw	r3,-12(fp)
     74c:	d0a6cc04 	addi	r2,gp,-25808
     750:	1885883a 	add	r2,r3,r2
     754:	00c00c04 	movi	r3,48
     758:	10c00005 	stb	r3,0(r2)
{
    int quotient, remainder;
    int i, j = 0;
    static char hexadecimalnum[MAX_HEX_SIZE];

    for(int i = 0; i < MAX_HEX_SIZE; i++)
     75c:	e0bffd17 	ldw	r2,-12(fp)
     760:	10800044 	addi	r2,r2,1
     764:	e0bffd15 	stw	r2,-12(fp)
     768:	e0bffd17 	ldw	r2,-12(fp)
     76c:	10800190 	cmplti	r2,r2,6
     770:	103ff51e 	bne	r2,zero,748 <__alt_data_end+0xfffe1348>
        hexadecimalnum[i] = '0';

    quotient = decimalnum;
     774:	e0bfff17 	ldw	r2,-4(fp)
     778:	e0bffb15 	stw	r2,-20(fp)

    while (quotient != 0)
     77c:	00002506 	br	814 <dec2ToHex+0xe8>
    {
        remainder = quotient % 16;
     780:	e0fffb17 	ldw	r3,-20(fp)
     784:	00a00034 	movhi	r2,32768
     788:	108003c4 	addi	r2,r2,15
     78c:	1884703a 	and	r2,r3,r2
     790:	1000040e 	bge	r2,zero,7a4 <dec2ToHex+0x78>
     794:	10bfffc4 	addi	r2,r2,-1
     798:	00fffc04 	movi	r3,-16
     79c:	10c4b03a 	or	r2,r2,r3
     7a0:	10800044 	addi	r2,r2,1
     7a4:	e0bffe15 	stw	r2,-8(fp)
        if (remainder < 10)
     7a8:	e0bffe17 	ldw	r2,-8(fp)
     7ac:	10800288 	cmpgei	r2,r2,10
     7b0:	10000a1e 	bne	r2,zero,7dc <dec2ToHex+0xb0>
            hexadecimalnum[j++] = 48 + remainder;
     7b4:	e0bffc17 	ldw	r2,-16(fp)
     7b8:	10c00044 	addi	r3,r2,1
     7bc:	e0fffc15 	stw	r3,-16(fp)
     7c0:	e0fffe17 	ldw	r3,-8(fp)
     7c4:	18c00c04 	addi	r3,r3,48
     7c8:	1809883a 	mov	r4,r3
     7cc:	d0e6cc04 	addi	r3,gp,-25808
     7d0:	10c5883a 	add	r2,r2,r3
     7d4:	11000005 	stb	r4,0(r2)
     7d8:	00000906 	br	800 <dec2ToHex+0xd4>
        else
            hexadecimalnum[j++] = 55 + remainder;
     7dc:	e0bffc17 	ldw	r2,-16(fp)
     7e0:	10c00044 	addi	r3,r2,1
     7e4:	e0fffc15 	stw	r3,-16(fp)
     7e8:	e0fffe17 	ldw	r3,-8(fp)
     7ec:	18c00dc4 	addi	r3,r3,55
     7f0:	1809883a 	mov	r4,r3
     7f4:	d0e6cc04 	addi	r3,gp,-25808
     7f8:	10c5883a 	add	r2,r2,r3
     7fc:	11000005 	stb	r4,0(r2)
        quotient = quotient / 16;
     800:	e0bffb17 	ldw	r2,-20(fp)
     804:	1000010e 	bge	r2,zero,80c <dec2ToHex+0xe0>
     808:	108003c4 	addi	r2,r2,15
     80c:	1005d13a 	srai	r2,r2,4
     810:	e0bffb15 	stw	r2,-20(fp)
    for(int i = 0; i < MAX_HEX_SIZE; i++)
        hexadecimalnum[i] = '0';

    quotient = decimalnum;

    while (quotient != 0)
     814:	e0bffb17 	ldw	r2,-20(fp)
     818:	103fd91e 	bne	r2,zero,780 <__alt_data_end+0xfffe1380>
            hexadecimalnum[j++] = 48 + remainder;
        else
            hexadecimalnum[j++] = 55 + remainder;
        quotient = quotient / 16;
    }
    return hexadecimalnum;
     81c:	d0a6cc04 	addi	r2,gp,-25808
}
     820:	e037883a 	mov	sp,fp
     824:	df000017 	ldw	fp,0(sp)
     828:	dec00104 	addi	sp,sp,4
     82c:	f800283a 	ret

00000830 <main>:


int main()
{
     830:	defffd04 	addi	sp,sp,-12
     834:	dfc00215 	stw	ra,8(sp)
     838:	df000115 	stw	fp,4(sp)
     83c:	df000104 	addi	fp,sp,4
  IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE,0);
     840:	0007883a 	mov	r3,zero
     844:	008000b4 	movhi	r2,2
     848:	10840c04 	addi	r2,r2,4144
     84c:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE,0);
     850:	0007883a 	mov	r3,zero
     854:	008000b4 	movhi	r2,2
     858:	10840804 	addi	r2,r2,4128
     85c:	10c00035 	stwio	r3,0(r2)
  init_interrupt();
     860:	00004880 	call	488 <init_interrupt>
  int SW_value = IORD_ALTERA_AVALON_PIO_DATA ( SWITCHES_BASE ) ;
     864:	008000b4 	movhi	r2,2
     868:	10841004 	addi	r2,r2,4160
     86c:	10800037 	ldwio	r2,0(r2)
     870:	e0bfff15 	stw	r2,-4(fp)
  IOWR_ALTERA_AVALON_PIO_DATA ( LEDS_BASE , SW_value ) ;
     874:	008000b4 	movhi	r2,2
     878:	10841404 	addi	r2,r2,4176
     87c:	e0ffff17 	ldw	r3,-4(fp)
     880:	10c00035 	stwio	r3,0(r2)
  while(1);
     884:	003fff06 	br	884 <__alt_data_end+0xfffe1484>

00000888 <_printf_r>:
     888:	defffd04 	addi	sp,sp,-12
     88c:	2805883a 	mov	r2,r5
     890:	dfc00015 	stw	ra,0(sp)
     894:	d9800115 	stw	r6,4(sp)
     898:	d9c00215 	stw	r7,8(sp)
     89c:	21400217 	ldw	r5,8(r4)
     8a0:	d9c00104 	addi	r7,sp,4
     8a4:	100d883a 	mov	r6,r2
     8a8:	00008f40 	call	8f4 <___vfprintf_internal_r>
     8ac:	dfc00017 	ldw	ra,0(sp)
     8b0:	dec00304 	addi	sp,sp,12
     8b4:	f800283a 	ret

000008b8 <printf>:
     8b8:	defffc04 	addi	sp,sp,-16
     8bc:	dfc00015 	stw	ra,0(sp)
     8c0:	d9400115 	stw	r5,4(sp)
     8c4:	d9800215 	stw	r6,8(sp)
     8c8:	d9c00315 	stw	r7,12(sp)
     8cc:	00800074 	movhi	r2,1
     8d0:	1086f304 	addi	r2,r2,7116
     8d4:	10800017 	ldw	r2,0(r2)
     8d8:	200b883a 	mov	r5,r4
     8dc:	d9800104 	addi	r6,sp,4
     8e0:	11000217 	ldw	r4,8(r2)
     8e4:	0002bd00 	call	2bd0 <__vfprintf_internal>
     8e8:	dfc00017 	ldw	ra,0(sp)
     8ec:	dec00404 	addi	sp,sp,16
     8f0:	f800283a 	ret

000008f4 <___vfprintf_internal_r>:
     8f4:	deffb804 	addi	sp,sp,-288
     8f8:	dfc04715 	stw	ra,284(sp)
     8fc:	ddc04515 	stw	r23,276(sp)
     900:	dd404315 	stw	r21,268(sp)
     904:	d9002d15 	stw	r4,180(sp)
     908:	282f883a 	mov	r23,r5
     90c:	302b883a 	mov	r21,r6
     910:	d9c02e15 	stw	r7,184(sp)
     914:	df004615 	stw	fp,280(sp)
     918:	dd804415 	stw	r22,272(sp)
     91c:	dd004215 	stw	r20,264(sp)
     920:	dcc04115 	stw	r19,260(sp)
     924:	dc804015 	stw	r18,256(sp)
     928:	dc403f15 	stw	r17,252(sp)
     92c:	dc003e15 	stw	r16,248(sp)
     930:	000536c0 	call	536c <_localeconv_r>
     934:	10800017 	ldw	r2,0(r2)
     938:	1009883a 	mov	r4,r2
     93c:	d8803415 	stw	r2,208(sp)
     940:	00074500 	call	7450 <strlen>
     944:	d8803715 	stw	r2,220(sp)
     948:	d8802d17 	ldw	r2,180(sp)
     94c:	10000226 	beq	r2,zero,958 <___vfprintf_internal_r+0x64>
     950:	10800e17 	ldw	r2,56(r2)
     954:	1000fb26 	beq	r2,zero,d44 <___vfprintf_internal_r+0x450>
     958:	b880030b 	ldhu	r2,12(r23)
     95c:	10c8000c 	andi	r3,r2,8192
     960:	1800061e 	bne	r3,zero,97c <___vfprintf_internal_r+0x88>
     964:	b9001917 	ldw	r4,100(r23)
     968:	00f7ffc4 	movi	r3,-8193
     96c:	10880014 	ori	r2,r2,8192
     970:	20c6703a 	and	r3,r4,r3
     974:	b880030d 	sth	r2,12(r23)
     978:	b8c01915 	stw	r3,100(r23)
     97c:	10c0020c 	andi	r3,r2,8
     980:	1800c326 	beq	r3,zero,c90 <___vfprintf_internal_r+0x39c>
     984:	b8c00417 	ldw	r3,16(r23)
     988:	1800c126 	beq	r3,zero,c90 <___vfprintf_internal_r+0x39c>
     98c:	1080068c 	andi	r2,r2,26
     990:	00c00284 	movi	r3,10
     994:	10c0c626 	beq	r2,r3,cb0 <___vfprintf_internal_r+0x3bc>
     998:	d8c00404 	addi	r3,sp,16
     99c:	05000074 	movhi	r20,1
     9a0:	d9001e04 	addi	r4,sp,120
     9a4:	a53f9884 	addi	r20,r20,-414
     9a8:	d8c01e15 	stw	r3,120(sp)
     9ac:	d8002015 	stw	zero,128(sp)
     9b0:	d8001f15 	stw	zero,124(sp)
     9b4:	d8003315 	stw	zero,204(sp)
     9b8:	d8003615 	stw	zero,216(sp)
     9bc:	d8003815 	stw	zero,224(sp)
     9c0:	1811883a 	mov	r8,r3
     9c4:	d8003915 	stw	zero,228(sp)
     9c8:	d8003a15 	stw	zero,232(sp)
     9cc:	d8002f15 	stw	zero,188(sp)
     9d0:	d9002815 	stw	r4,160(sp)
     9d4:	a8800007 	ldb	r2,0(r21)
     9d8:	10028b26 	beq	r2,zero,1408 <___vfprintf_internal_r+0xb14>
     9dc:	00c00944 	movi	r3,37
     9e0:	a823883a 	mov	r17,r21
     9e4:	10c0021e 	bne	r2,r3,9f0 <___vfprintf_internal_r+0xfc>
     9e8:	00001406 	br	a3c <___vfprintf_internal_r+0x148>
     9ec:	10c00326 	beq	r2,r3,9fc <___vfprintf_internal_r+0x108>
     9f0:	8c400044 	addi	r17,r17,1
     9f4:	88800007 	ldb	r2,0(r17)
     9f8:	103ffc1e 	bne	r2,zero,9ec <__alt_data_end+0xfffe15ec>
     9fc:	8d61c83a 	sub	r16,r17,r21
     a00:	80000e26 	beq	r16,zero,a3c <___vfprintf_internal_r+0x148>
     a04:	d8c02017 	ldw	r3,128(sp)
     a08:	d8801f17 	ldw	r2,124(sp)
     a0c:	45400015 	stw	r21,0(r8)
     a10:	1c07883a 	add	r3,r3,r16
     a14:	10800044 	addi	r2,r2,1
     a18:	d8c02015 	stw	r3,128(sp)
     a1c:	44000115 	stw	r16,4(r8)
     a20:	d8801f15 	stw	r2,124(sp)
     a24:	00c001c4 	movi	r3,7
     a28:	1880a916 	blt	r3,r2,cd0 <___vfprintf_internal_r+0x3dc>
     a2c:	42000204 	addi	r8,r8,8
     a30:	d9402f17 	ldw	r5,188(sp)
     a34:	2c0b883a 	add	r5,r5,r16
     a38:	d9402f15 	stw	r5,188(sp)
     a3c:	88800007 	ldb	r2,0(r17)
     a40:	1000aa26 	beq	r2,zero,cec <___vfprintf_internal_r+0x3f8>
     a44:	8d400044 	addi	r21,r17,1
     a48:	8c400047 	ldb	r17,1(r17)
     a4c:	0021883a 	mov	r16,zero
     a50:	00bfffc4 	movi	r2,-1
     a54:	0025883a 	mov	r18,zero
     a58:	dc002905 	stb	r16,164(sp)
     a5c:	d8002785 	stb	zero,158(sp)
     a60:	d8002b05 	stb	zero,172(sp)
     a64:	d8802a15 	stw	r2,168(sp)
     a68:	d8003115 	stw	zero,196(sp)
     a6c:	04c01604 	movi	r19,88
     a70:	05800244 	movi	r22,9
     a74:	9021883a 	mov	r16,r18
     a78:	4039883a 	mov	fp,r8
     a7c:	ad400044 	addi	r21,r21,1
     a80:	88bff804 	addi	r2,r17,-32
     a84:	98833236 	bltu	r19,r2,1750 <___vfprintf_internal_r+0xe5c>
     a88:	100490ba 	slli	r2,r2,2
     a8c:	00c00034 	movhi	r3,0
     a90:	18c2a804 	addi	r3,r3,2720
     a94:	10c5883a 	add	r2,r2,r3
     a98:	10800017 	ldw	r2,0(r2)
     a9c:	1000683a 	jmp	r2
     aa0:	00001648 	cmpgei	zero,zero,89
     aa4:	00001750 	cmplti	zero,zero,93
     aa8:	00001750 	cmplti	zero,zero,93
     aac:	00001668 	cmpgeui	zero,zero,89
     ab0:	00001750 	cmplti	zero,zero,93
     ab4:	00001750 	cmplti	zero,zero,93
     ab8:	00001750 	cmplti	zero,zero,93
     abc:	00001750 	cmplti	zero,zero,93
     ac0:	00001750 	cmplti	zero,zero,93
     ac4:	00001750 	cmplti	zero,zero,93
     ac8:	00000d50 	cmplti	zero,zero,53
     acc:	00001558 	cmpnei	zero,zero,85
     ad0:	00001750 	cmplti	zero,zero,93
     ad4:	00000c14 	movui	zero,48
     ad8:	00000d74 	movhi	zero,53
     adc:	00001750 	cmplti	zero,zero,93
     ae0:	00000dc4 	movi	zero,55
     ae4:	00000dd0 	cmplti	zero,zero,55
     ae8:	00000dd0 	cmplti	zero,zero,55
     aec:	00000dd0 	cmplti	zero,zero,55
     af0:	00000dd0 	cmplti	zero,zero,55
     af4:	00000dd0 	cmplti	zero,zero,55
     af8:	00000dd0 	cmplti	zero,zero,55
     afc:	00000dd0 	cmplti	zero,zero,55
     b00:	00000dd0 	cmplti	zero,zero,55
     b04:	00000dd0 	cmplti	zero,zero,55
     b08:	00001750 	cmplti	zero,zero,93
     b0c:	00001750 	cmplti	zero,zero,93
     b10:	00001750 	cmplti	zero,zero,93
     b14:	00001750 	cmplti	zero,zero,93
     b18:	00001750 	cmplti	zero,zero,93
     b1c:	00001750 	cmplti	zero,zero,93
     b20:	00001750 	cmplti	zero,zero,93
     b24:	00001750 	cmplti	zero,zero,93
     b28:	00001750 	cmplti	zero,zero,93
     b2c:	00001750 	cmplti	zero,zero,93
     b30:	00000e0c 	andi	zero,zero,56
     b34:	00000ed4 	movui	zero,59
     b38:	00001750 	cmplti	zero,zero,93
     b3c:	00000ed4 	movui	zero,59
     b40:	00001750 	cmplti	zero,zero,93
     b44:	00001750 	cmplti	zero,zero,93
     b48:	00001750 	cmplti	zero,zero,93
     b4c:	00001750 	cmplti	zero,zero,93
     b50:	00000f80 	call	f8 <alt_irq_handler+0xc>
     b54:	00001750 	cmplti	zero,zero,93
     b58:	00001750 	cmplti	zero,zero,93
     b5c:	00000f8c 	andi	zero,zero,62
     b60:	00001750 	cmplti	zero,zero,93
     b64:	00001750 	cmplti	zero,zero,93
     b68:	00001750 	cmplti	zero,zero,93
     b6c:	00001750 	cmplti	zero,zero,93
     b70:	00001750 	cmplti	zero,zero,93
     b74:	00001410 	cmplti	zero,zero,80
     b78:	00001750 	cmplti	zero,zero,93
     b7c:	00001750 	cmplti	zero,zero,93
     b80:	0000147c 	xorhi	zero,zero,81
     b84:	00001750 	cmplti	zero,zero,93
     b88:	00001750 	cmplti	zero,zero,93
     b8c:	00001750 	cmplti	zero,zero,93
     b90:	00001750 	cmplti	zero,zero,93
     b94:	00001750 	cmplti	zero,zero,93
     b98:	00001750 	cmplti	zero,zero,93
     b9c:	00001750 	cmplti	zero,zero,93
     ba0:	00001750 	cmplti	zero,zero,93
     ba4:	00001750 	cmplti	zero,zero,93
     ba8:	00001750 	cmplti	zero,zero,93
     bac:	000016f4 	movhi	zero,91
     bb0:	00001674 	movhi	zero,89
     bb4:	00000ed4 	movui	zero,59
     bb8:	00000ed4 	movui	zero,59
     bbc:	00000ed4 	movui	zero,59
     bc0:	00001694 	movui	zero,90
     bc4:	00001674 	movhi	zero,89
     bc8:	00001750 	cmplti	zero,zero,93
     bcc:	00001750 	cmplti	zero,zero,93
     bd0:	000016a0 	cmpeqi	zero,zero,90
     bd4:	00001750 	cmplti	zero,zero,93
     bd8:	000016b4 	movhi	zero,90
     bdc:	00001538 	rdprs	zero,zero,84
     be0:	00000c20 	cmpeqi	zero,zero,48
     be4:	00001570 	cmpltui	zero,zero,85
     be8:	00001750 	cmplti	zero,zero,93
     bec:	0000157c 	xorhi	zero,zero,85
     bf0:	00001750 	cmplti	zero,zero,93
     bf4:	000015e0 	cmpeqi	zero,zero,87
     bf8:	00001750 	cmplti	zero,zero,93
     bfc:	00001750 	cmplti	zero,zero,93
     c00:	00001600 	call	160 <alt_irq_handler+0x74>
     c04:	d8c03117 	ldw	r3,196(sp)
     c08:	d8802e15 	stw	r2,184(sp)
     c0c:	00c7c83a 	sub	r3,zero,r3
     c10:	d8c03115 	stw	r3,196(sp)
     c14:	84000114 	ori	r16,r16,4
     c18:	ac400007 	ldb	r17,0(r21)
     c1c:	003f9706 	br	a7c <__alt_data_end+0xfffe167c>
     c20:	00800c04 	movi	r2,48
     c24:	d8802705 	stb	r2,156(sp)
     c28:	00801e04 	movi	r2,120
     c2c:	d8802745 	stb	r2,157(sp)
     c30:	d9002a17 	ldw	r4,168(sp)
     c34:	d8802e17 	ldw	r2,184(sp)
     c38:	d8002785 	stb	zero,158(sp)
     c3c:	e011883a 	mov	r8,fp
     c40:	10c00104 	addi	r3,r2,4
     c44:	14c00017 	ldw	r19,0(r2)
     c48:	002d883a 	mov	r22,zero
     c4c:	80800094 	ori	r2,r16,2
     c50:	2002ca16 	blt	r4,zero,177c <___vfprintf_internal_r+0xe88>
     c54:	00bfdfc4 	movi	r2,-129
     c58:	80a4703a 	and	r18,r16,r2
     c5c:	d8c02e15 	stw	r3,184(sp)
     c60:	94800094 	ori	r18,r18,2
     c64:	9802b41e 	bne	r19,zero,1738 <___vfprintf_internal_r+0xe44>
     c68:	01400074 	movhi	r5,1
     c6c:	297f9104 	addi	r5,r5,-444
     c70:	d9403915 	stw	r5,228(sp)
     c74:	04401e04 	movi	r17,120
     c78:	d8802a17 	ldw	r2,168(sp)
     c7c:	0039883a 	mov	fp,zero
     c80:	1001fa26 	beq	r2,zero,146c <___vfprintf_internal_r+0xb78>
     c84:	0027883a 	mov	r19,zero
     c88:	002d883a 	mov	r22,zero
     c8c:	00021906 	br	14f4 <___vfprintf_internal_r+0xc00>
     c90:	d9002d17 	ldw	r4,180(sp)
     c94:	b80b883a 	mov	r5,r23
     c98:	0002ca80 	call	2ca8 <__swsetup_r>
     c9c:	1005dc1e 	bne	r2,zero,2410 <___vfprintf_internal_r+0x1b1c>
     ca0:	b880030b 	ldhu	r2,12(r23)
     ca4:	00c00284 	movi	r3,10
     ca8:	1080068c 	andi	r2,r2,26
     cac:	10ff3a1e 	bne	r2,r3,998 <__alt_data_end+0xfffe1598>
     cb0:	b880038f 	ldh	r2,14(r23)
     cb4:	103f3816 	blt	r2,zero,998 <__alt_data_end+0xfffe1598>
     cb8:	d9c02e17 	ldw	r7,184(sp)
     cbc:	d9002d17 	ldw	r4,180(sp)
     cc0:	a80d883a 	mov	r6,r21
     cc4:	b80b883a 	mov	r5,r23
     cc8:	0002bec0 	call	2bec <__sbprintf>
     ccc:	00001106 	br	d14 <___vfprintf_internal_r+0x420>
     cd0:	d9002d17 	ldw	r4,180(sp)
     cd4:	d9801e04 	addi	r6,sp,120
     cd8:	b80b883a 	mov	r5,r23
     cdc:	00075e40 	call	75e4 <__sprint_r>
     ce0:	1000081e 	bne	r2,zero,d04 <___vfprintf_internal_r+0x410>
     ce4:	da000404 	addi	r8,sp,16
     ce8:	003f5106 	br	a30 <__alt_data_end+0xfffe1630>
     cec:	d8802017 	ldw	r2,128(sp)
     cf0:	10000426 	beq	r2,zero,d04 <___vfprintf_internal_r+0x410>
     cf4:	d9002d17 	ldw	r4,180(sp)
     cf8:	d9801e04 	addi	r6,sp,120
     cfc:	b80b883a 	mov	r5,r23
     d00:	00075e40 	call	75e4 <__sprint_r>
     d04:	b880030b 	ldhu	r2,12(r23)
     d08:	1080100c 	andi	r2,r2,64
     d0c:	1005c01e 	bne	r2,zero,2410 <___vfprintf_internal_r+0x1b1c>
     d10:	d8802f17 	ldw	r2,188(sp)
     d14:	dfc04717 	ldw	ra,284(sp)
     d18:	df004617 	ldw	fp,280(sp)
     d1c:	ddc04517 	ldw	r23,276(sp)
     d20:	dd804417 	ldw	r22,272(sp)
     d24:	dd404317 	ldw	r21,268(sp)
     d28:	dd004217 	ldw	r20,264(sp)
     d2c:	dcc04117 	ldw	r19,260(sp)
     d30:	dc804017 	ldw	r18,256(sp)
     d34:	dc403f17 	ldw	r17,252(sp)
     d38:	dc003e17 	ldw	r16,248(sp)
     d3c:	dec04804 	addi	sp,sp,288
     d40:	f800283a 	ret
     d44:	d9002d17 	ldw	r4,180(sp)
     d48:	0004cb40 	call	4cb4 <__sinit>
     d4c:	003f0206 	br	958 <__alt_data_end+0xfffe1558>
     d50:	d9002e17 	ldw	r4,184(sp)
     d54:	d9402e17 	ldw	r5,184(sp)
     d58:	21000017 	ldw	r4,0(r4)
     d5c:	28800104 	addi	r2,r5,4
     d60:	d9003115 	stw	r4,196(sp)
     d64:	203fa716 	blt	r4,zero,c04 <__alt_data_end+0xfffe1804>
     d68:	d8802e15 	stw	r2,184(sp)
     d6c:	ac400007 	ldb	r17,0(r21)
     d70:	003f4206 	br	a7c <__alt_data_end+0xfffe167c>
     d74:	ac400007 	ldb	r17,0(r21)
     d78:	01000a84 	movi	r4,42
     d7c:	a8c00044 	addi	r3,r21,1
     d80:	89075826 	beq	r17,r4,2ae4 <___vfprintf_internal_r+0x21f0>
     d84:	8cbff404 	addi	r18,r17,-48
     d88:	b486ae36 	bltu	r22,r18,2844 <___vfprintf_internal_r+0x1f50>
     d8c:	0009883a 	mov	r4,zero
     d90:	1823883a 	mov	r17,r3
     d94:	01400284 	movi	r5,10
     d98:	000ae280 	call	ae28 <__mulsi3>
     d9c:	88c00007 	ldb	r3,0(r17)
     da0:	1489883a 	add	r4,r2,r18
     da4:	8d400044 	addi	r21,r17,1
     da8:	1cbff404 	addi	r18,r3,-48
     dac:	a823883a 	mov	r17,r21
     db0:	b4bff82e 	bgeu	r22,r18,d94 <__alt_data_end+0xfffe1994>
     db4:	1823883a 	mov	r17,r3
     db8:	2005f616 	blt	r4,zero,2594 <___vfprintf_internal_r+0x1ca0>
     dbc:	d9002a15 	stw	r4,168(sp)
     dc0:	003f2f06 	br	a80 <__alt_data_end+0xfffe1680>
     dc4:	84002014 	ori	r16,r16,128
     dc8:	ac400007 	ldb	r17,0(r21)
     dcc:	003f2b06 	br	a7c <__alt_data_end+0xfffe167c>
     dd0:	8cbff404 	addi	r18,r17,-48
     dd4:	d8003115 	stw	zero,196(sp)
     dd8:	0009883a 	mov	r4,zero
     ddc:	a823883a 	mov	r17,r21
     de0:	01400284 	movi	r5,10
     de4:	000ae280 	call	ae28 <__mulsi3>
     de8:	88c00007 	ldb	r3,0(r17)
     dec:	9089883a 	add	r4,r18,r2
     df0:	ad400044 	addi	r21,r21,1
     df4:	1cbff404 	addi	r18,r3,-48
     df8:	a823883a 	mov	r17,r21
     dfc:	b4bff82e 	bgeu	r22,r18,de0 <__alt_data_end+0xfffe19e0>
     e00:	1823883a 	mov	r17,r3
     e04:	d9003115 	stw	r4,196(sp)
     e08:	003f1d06 	br	a80 <__alt_data_end+0xfffe1680>
     e0c:	8025883a 	mov	r18,r16
     e10:	dc002903 	ldbu	r16,164(sp)
     e14:	e011883a 	mov	r8,fp
     e18:	84003fcc 	andi	r16,r16,255
     e1c:	8007531e 	bne	r16,zero,2b6c <___vfprintf_internal_r+0x2278>
     e20:	94800414 	ori	r18,r18,16
     e24:	9080080c 	andi	r2,r18,32
     e28:	1003a326 	beq	r2,zero,1cb8 <___vfprintf_internal_r+0x13c4>
     e2c:	d9002e17 	ldw	r4,184(sp)
     e30:	20800117 	ldw	r2,4(r4)
     e34:	24c00017 	ldw	r19,0(r4)
     e38:	21000204 	addi	r4,r4,8
     e3c:	d9002e15 	stw	r4,184(sp)
     e40:	102d883a 	mov	r22,r2
     e44:	10047316 	blt	r2,zero,2014 <___vfprintf_internal_r+0x1720>
     e48:	d9002a17 	ldw	r4,168(sp)
     e4c:	df002783 	ldbu	fp,158(sp)
     e50:	2003e416 	blt	r4,zero,1de4 <___vfprintf_internal_r+0x14f0>
     e54:	00ffdfc4 	movi	r3,-129
     e58:	9d84b03a 	or	r2,r19,r22
     e5c:	90e4703a 	and	r18,r18,r3
     e60:	10018026 	beq	r2,zero,1464 <___vfprintf_internal_r+0xb70>
     e64:	b003ab26 	beq	r22,zero,1d14 <___vfprintf_internal_r+0x1420>
     e68:	dc402915 	stw	r17,164(sp)
     e6c:	dc001e04 	addi	r16,sp,120
     e70:	b023883a 	mov	r17,r22
     e74:	402d883a 	mov	r22,r8
     e78:	9809883a 	mov	r4,r19
     e7c:	880b883a 	mov	r5,r17
     e80:	01800284 	movi	r6,10
     e84:	000f883a 	mov	r7,zero
     e88:	000a6b00 	call	a6b0 <__umoddi3>
     e8c:	10800c04 	addi	r2,r2,48
     e90:	843fffc4 	addi	r16,r16,-1
     e94:	9809883a 	mov	r4,r19
     e98:	880b883a 	mov	r5,r17
     e9c:	80800005 	stb	r2,0(r16)
     ea0:	01800284 	movi	r6,10
     ea4:	000f883a 	mov	r7,zero
     ea8:	000a0b40 	call	a0b4 <__udivdi3>
     eac:	1027883a 	mov	r19,r2
     eb0:	10c4b03a 	or	r2,r2,r3
     eb4:	1823883a 	mov	r17,r3
     eb8:	103fef1e 	bne	r2,zero,e78 <__alt_data_end+0xfffe1a78>
     ebc:	d8c02817 	ldw	r3,160(sp)
     ec0:	dc402917 	ldw	r17,164(sp)
     ec4:	b011883a 	mov	r8,r22
     ec8:	1c07c83a 	sub	r3,r3,r16
     ecc:	d8c02b15 	stw	r3,172(sp)
     ed0:	00005f06 	br	1050 <___vfprintf_internal_r+0x75c>
     ed4:	8025883a 	mov	r18,r16
     ed8:	dc002903 	ldbu	r16,164(sp)
     edc:	e011883a 	mov	r8,fp
     ee0:	84003fcc 	andi	r16,r16,255
     ee4:	80071e1e 	bne	r16,zero,2b60 <___vfprintf_internal_r+0x226c>
     ee8:	9080020c 	andi	r2,r18,8
     eec:	1004af26 	beq	r2,zero,21ac <___vfprintf_internal_r+0x18b8>
     ef0:	d9002e17 	ldw	r4,184(sp)
     ef4:	d9402e17 	ldw	r5,184(sp)
     ef8:	d8802e17 	ldw	r2,184(sp)
     efc:	21000017 	ldw	r4,0(r4)
     f00:	29400117 	ldw	r5,4(r5)
     f04:	10800204 	addi	r2,r2,8
     f08:	d9003615 	stw	r4,216(sp)
     f0c:	d9403815 	stw	r5,224(sp)
     f10:	d8802e15 	stw	r2,184(sp)
     f14:	d9003617 	ldw	r4,216(sp)
     f18:	d9403817 	ldw	r5,224(sp)
     f1c:	da003d15 	stw	r8,244(sp)
     f20:	04000044 	movi	r16,1
     f24:	00071700 	call	7170 <__fpclassifyd>
     f28:	da003d17 	ldw	r8,244(sp)
     f2c:	1404441e 	bne	r2,r16,2040 <___vfprintf_internal_r+0x174c>
     f30:	d9003617 	ldw	r4,216(sp)
     f34:	d9403817 	ldw	r5,224(sp)
     f38:	000d883a 	mov	r6,zero
     f3c:	000f883a 	mov	r7,zero
     f40:	000c2300 	call	c230 <__ledf2>
     f44:	da003d17 	ldw	r8,244(sp)
     f48:	1005e316 	blt	r2,zero,26d8 <___vfprintf_internal_r+0x1de4>
     f4c:	df002783 	ldbu	fp,158(sp)
     f50:	008011c4 	movi	r2,71
     f54:	1445580e 	bge	r2,r17,24b8 <___vfprintf_internal_r+0x1bc4>
     f58:	04000074 	movhi	r16,1
     f5c:	843f8904 	addi	r16,r16,-476
     f60:	00c000c4 	movi	r3,3
     f64:	00bfdfc4 	movi	r2,-129
     f68:	d8c02915 	stw	r3,164(sp)
     f6c:	90a4703a 	and	r18,r18,r2
     f70:	d8c02b15 	stw	r3,172(sp)
     f74:	d8002a15 	stw	zero,168(sp)
     f78:	d8003215 	stw	zero,200(sp)
     f7c:	00003a06 	br	1068 <___vfprintf_internal_r+0x774>
     f80:	84000214 	ori	r16,r16,8
     f84:	ac400007 	ldb	r17,0(r21)
     f88:	003ebc06 	br	a7c <__alt_data_end+0xfffe167c>
     f8c:	8025883a 	mov	r18,r16
     f90:	dc002903 	ldbu	r16,164(sp)
     f94:	e011883a 	mov	r8,fp
     f98:	84003fcc 	andi	r16,r16,255
     f9c:	8007001e 	bne	r16,zero,2ba0 <___vfprintf_internal_r+0x22ac>
     fa0:	94800414 	ori	r18,r18,16
     fa4:	9080080c 	andi	r2,r18,32
     fa8:	1002fa26 	beq	r2,zero,1b94 <___vfprintf_internal_r+0x12a0>
     fac:	d9002e17 	ldw	r4,184(sp)
     fb0:	d9402a17 	ldw	r5,168(sp)
     fb4:	d8002785 	stb	zero,158(sp)
     fb8:	20800204 	addi	r2,r4,8
     fbc:	24c00017 	ldw	r19,0(r4)
     fc0:	25800117 	ldw	r22,4(r4)
     fc4:	2804b116 	blt	r5,zero,228c <___vfprintf_internal_r+0x1998>
     fc8:	013fdfc4 	movi	r4,-129
     fcc:	9d86b03a 	or	r3,r19,r22
     fd0:	d8802e15 	stw	r2,184(sp)
     fd4:	9124703a 	and	r18,r18,r4
     fd8:	1802fb1e 	bne	r3,zero,1bc8 <___vfprintf_internal_r+0x12d4>
     fdc:	d8c02a17 	ldw	r3,168(sp)
     fe0:	0039883a 	mov	fp,zero
     fe4:	1805e526 	beq	r3,zero,277c <___vfprintf_internal_r+0x1e88>
     fe8:	0027883a 	mov	r19,zero
     fec:	002d883a 	mov	r22,zero
     ff0:	dc001e04 	addi	r16,sp,120
     ff4:	9806d0fa 	srli	r3,r19,3
     ff8:	b008977a 	slli	r4,r22,29
     ffc:	b02cd0fa 	srli	r22,r22,3
    1000:	9cc001cc 	andi	r19,r19,7
    1004:	98800c04 	addi	r2,r19,48
    1008:	843fffc4 	addi	r16,r16,-1
    100c:	20e6b03a 	or	r19,r4,r3
    1010:	80800005 	stb	r2,0(r16)
    1014:	9d86b03a 	or	r3,r19,r22
    1018:	183ff61e 	bne	r3,zero,ff4 <__alt_data_end+0xfffe1bf4>
    101c:	90c0004c 	andi	r3,r18,1
    1020:	18014126 	beq	r3,zero,1528 <___vfprintf_internal_r+0xc34>
    1024:	10803fcc 	andi	r2,r2,255
    1028:	1080201c 	xori	r2,r2,128
    102c:	10bfe004 	addi	r2,r2,-128
    1030:	00c00c04 	movi	r3,48
    1034:	10c13c26 	beq	r2,r3,1528 <___vfprintf_internal_r+0xc34>
    1038:	80ffffc5 	stb	r3,-1(r16)
    103c:	d8c02817 	ldw	r3,160(sp)
    1040:	80bfffc4 	addi	r2,r16,-1
    1044:	1021883a 	mov	r16,r2
    1048:	1887c83a 	sub	r3,r3,r2
    104c:	d8c02b15 	stw	r3,172(sp)
    1050:	d8802b17 	ldw	r2,172(sp)
    1054:	d9002a17 	ldw	r4,168(sp)
    1058:	1100010e 	bge	r2,r4,1060 <___vfprintf_internal_r+0x76c>
    105c:	2005883a 	mov	r2,r4
    1060:	d8802915 	stw	r2,164(sp)
    1064:	d8003215 	stw	zero,200(sp)
    1068:	e7003fcc 	andi	fp,fp,255
    106c:	e700201c 	xori	fp,fp,128
    1070:	e73fe004 	addi	fp,fp,-128
    1074:	e0000326 	beq	fp,zero,1084 <___vfprintf_internal_r+0x790>
    1078:	d8c02917 	ldw	r3,164(sp)
    107c:	18c00044 	addi	r3,r3,1
    1080:	d8c02915 	stw	r3,164(sp)
    1084:	90c0008c 	andi	r3,r18,2
    1088:	d8c02c15 	stw	r3,176(sp)
    108c:	18000326 	beq	r3,zero,109c <___vfprintf_internal_r+0x7a8>
    1090:	d8c02917 	ldw	r3,164(sp)
    1094:	18c00084 	addi	r3,r3,2
    1098:	d8c02915 	stw	r3,164(sp)
    109c:	90c0210c 	andi	r3,r18,132
    10a0:	d8c03015 	stw	r3,192(sp)
    10a4:	1801c51e 	bne	r3,zero,17bc <___vfprintf_internal_r+0xec8>
    10a8:	d9003117 	ldw	r4,196(sp)
    10ac:	d8c02917 	ldw	r3,164(sp)
    10b0:	20e7c83a 	sub	r19,r4,r3
    10b4:	04c1c10e 	bge	zero,r19,17bc <___vfprintf_internal_r+0xec8>
    10b8:	02400404 	movi	r9,16
    10bc:	d8c02017 	ldw	r3,128(sp)
    10c0:	d8801f17 	ldw	r2,124(sp)
    10c4:	4cc52f0e 	bge	r9,r19,2584 <___vfprintf_internal_r+0x1c90>
    10c8:	01400074 	movhi	r5,1
    10cc:	297f9c84 	addi	r5,r5,-398
    10d0:	dc403b15 	stw	r17,236(sp)
    10d4:	d9403515 	stw	r5,212(sp)
    10d8:	9823883a 	mov	r17,r19
    10dc:	482d883a 	mov	r22,r9
    10e0:	9027883a 	mov	r19,r18
    10e4:	070001c4 	movi	fp,7
    10e8:	8025883a 	mov	r18,r16
    10ec:	dc002d17 	ldw	r16,180(sp)
    10f0:	00000306 	br	1100 <___vfprintf_internal_r+0x80c>
    10f4:	8c7ffc04 	addi	r17,r17,-16
    10f8:	42000204 	addi	r8,r8,8
    10fc:	b440130e 	bge	r22,r17,114c <___vfprintf_internal_r+0x858>
    1100:	01000074 	movhi	r4,1
    1104:	18c00404 	addi	r3,r3,16
    1108:	10800044 	addi	r2,r2,1
    110c:	213f9c84 	addi	r4,r4,-398
    1110:	41000015 	stw	r4,0(r8)
    1114:	45800115 	stw	r22,4(r8)
    1118:	d8c02015 	stw	r3,128(sp)
    111c:	d8801f15 	stw	r2,124(sp)
    1120:	e0bff40e 	bge	fp,r2,10f4 <__alt_data_end+0xfffe1cf4>
    1124:	d9801e04 	addi	r6,sp,120
    1128:	b80b883a 	mov	r5,r23
    112c:	8009883a 	mov	r4,r16
    1130:	00075e40 	call	75e4 <__sprint_r>
    1134:	103ef31e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1138:	8c7ffc04 	addi	r17,r17,-16
    113c:	d8c02017 	ldw	r3,128(sp)
    1140:	d8801f17 	ldw	r2,124(sp)
    1144:	da000404 	addi	r8,sp,16
    1148:	b47fed16 	blt	r22,r17,1100 <__alt_data_end+0xfffe1d00>
    114c:	9021883a 	mov	r16,r18
    1150:	9825883a 	mov	r18,r19
    1154:	8827883a 	mov	r19,r17
    1158:	dc403b17 	ldw	r17,236(sp)
    115c:	d9403517 	ldw	r5,212(sp)
    1160:	98c7883a 	add	r3,r19,r3
    1164:	10800044 	addi	r2,r2,1
    1168:	41400015 	stw	r5,0(r8)
    116c:	44c00115 	stw	r19,4(r8)
    1170:	d8c02015 	stw	r3,128(sp)
    1174:	d8801f15 	stw	r2,124(sp)
    1178:	010001c4 	movi	r4,7
    117c:	2082c516 	blt	r4,r2,1c94 <___vfprintf_internal_r+0x13a0>
    1180:	df002787 	ldb	fp,158(sp)
    1184:	42000204 	addi	r8,r8,8
    1188:	e0000c26 	beq	fp,zero,11bc <___vfprintf_internal_r+0x8c8>
    118c:	d8801f17 	ldw	r2,124(sp)
    1190:	d9002784 	addi	r4,sp,158
    1194:	18c00044 	addi	r3,r3,1
    1198:	10800044 	addi	r2,r2,1
    119c:	41000015 	stw	r4,0(r8)
    11a0:	01000044 	movi	r4,1
    11a4:	41000115 	stw	r4,4(r8)
    11a8:	d8c02015 	stw	r3,128(sp)
    11ac:	d8801f15 	stw	r2,124(sp)
    11b0:	010001c4 	movi	r4,7
    11b4:	20825e16 	blt	r4,r2,1b30 <___vfprintf_internal_r+0x123c>
    11b8:	42000204 	addi	r8,r8,8
    11bc:	d8802c17 	ldw	r2,176(sp)
    11c0:	10000c26 	beq	r2,zero,11f4 <___vfprintf_internal_r+0x900>
    11c4:	d8801f17 	ldw	r2,124(sp)
    11c8:	d9002704 	addi	r4,sp,156
    11cc:	18c00084 	addi	r3,r3,2
    11d0:	10800044 	addi	r2,r2,1
    11d4:	41000015 	stw	r4,0(r8)
    11d8:	01000084 	movi	r4,2
    11dc:	41000115 	stw	r4,4(r8)
    11e0:	d8c02015 	stw	r3,128(sp)
    11e4:	d8801f15 	stw	r2,124(sp)
    11e8:	010001c4 	movi	r4,7
    11ec:	20825816 	blt	r4,r2,1b50 <___vfprintf_internal_r+0x125c>
    11f0:	42000204 	addi	r8,r8,8
    11f4:	d9003017 	ldw	r4,192(sp)
    11f8:	00802004 	movi	r2,128
    11fc:	2081bb26 	beq	r4,r2,18ec <___vfprintf_internal_r+0xff8>
    1200:	d9402a17 	ldw	r5,168(sp)
    1204:	d8802b17 	ldw	r2,172(sp)
    1208:	28adc83a 	sub	r22,r5,r2
    120c:	0580310e 	bge	zero,r22,12d4 <___vfprintf_internal_r+0x9e0>
    1210:	07000404 	movi	fp,16
    1214:	d8801f17 	ldw	r2,124(sp)
    1218:	e584360e 	bge	fp,r22,22f4 <___vfprintf_internal_r+0x1a00>
    121c:	01400074 	movhi	r5,1
    1220:	297f9884 	addi	r5,r5,-414
    1224:	dc402a15 	stw	r17,168(sp)
    1228:	d9402c15 	stw	r5,176(sp)
    122c:	b023883a 	mov	r17,r22
    1230:	04c001c4 	movi	r19,7
    1234:	a82d883a 	mov	r22,r21
    1238:	902b883a 	mov	r21,r18
    123c:	8025883a 	mov	r18,r16
    1240:	dc002d17 	ldw	r16,180(sp)
    1244:	00000306 	br	1254 <___vfprintf_internal_r+0x960>
    1248:	8c7ffc04 	addi	r17,r17,-16
    124c:	42000204 	addi	r8,r8,8
    1250:	e440110e 	bge	fp,r17,1298 <___vfprintf_internal_r+0x9a4>
    1254:	18c00404 	addi	r3,r3,16
    1258:	10800044 	addi	r2,r2,1
    125c:	45000015 	stw	r20,0(r8)
    1260:	47000115 	stw	fp,4(r8)
    1264:	d8c02015 	stw	r3,128(sp)
    1268:	d8801f15 	stw	r2,124(sp)
    126c:	98bff60e 	bge	r19,r2,1248 <__alt_data_end+0xfffe1e48>
    1270:	d9801e04 	addi	r6,sp,120
    1274:	b80b883a 	mov	r5,r23
    1278:	8009883a 	mov	r4,r16
    127c:	00075e40 	call	75e4 <__sprint_r>
    1280:	103ea01e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1284:	8c7ffc04 	addi	r17,r17,-16
    1288:	d8c02017 	ldw	r3,128(sp)
    128c:	d8801f17 	ldw	r2,124(sp)
    1290:	da000404 	addi	r8,sp,16
    1294:	e47fef16 	blt	fp,r17,1254 <__alt_data_end+0xfffe1e54>
    1298:	9021883a 	mov	r16,r18
    129c:	a825883a 	mov	r18,r21
    12a0:	b02b883a 	mov	r21,r22
    12a4:	882d883a 	mov	r22,r17
    12a8:	dc402a17 	ldw	r17,168(sp)
    12ac:	d9002c17 	ldw	r4,176(sp)
    12b0:	1d87883a 	add	r3,r3,r22
    12b4:	10800044 	addi	r2,r2,1
    12b8:	41000015 	stw	r4,0(r8)
    12bc:	45800115 	stw	r22,4(r8)
    12c0:	d8c02015 	stw	r3,128(sp)
    12c4:	d8801f15 	stw	r2,124(sp)
    12c8:	010001c4 	movi	r4,7
    12cc:	20821016 	blt	r4,r2,1b10 <___vfprintf_internal_r+0x121c>
    12d0:	42000204 	addi	r8,r8,8
    12d4:	9080400c 	andi	r2,r18,256
    12d8:	10013a1e 	bne	r2,zero,17c4 <___vfprintf_internal_r+0xed0>
    12dc:	d9402b17 	ldw	r5,172(sp)
    12e0:	d8801f17 	ldw	r2,124(sp)
    12e4:	44000015 	stw	r16,0(r8)
    12e8:	1947883a 	add	r3,r3,r5
    12ec:	10800044 	addi	r2,r2,1
    12f0:	41400115 	stw	r5,4(r8)
    12f4:	d8c02015 	stw	r3,128(sp)
    12f8:	d8801f15 	stw	r2,124(sp)
    12fc:	010001c4 	movi	r4,7
    1300:	2081f516 	blt	r4,r2,1ad8 <___vfprintf_internal_r+0x11e4>
    1304:	42000204 	addi	r8,r8,8
    1308:	9480010c 	andi	r18,r18,4
    130c:	90003226 	beq	r18,zero,13d8 <___vfprintf_internal_r+0xae4>
    1310:	d9403117 	ldw	r5,196(sp)
    1314:	d8802917 	ldw	r2,164(sp)
    1318:	28a1c83a 	sub	r16,r5,r2
    131c:	04002e0e 	bge	zero,r16,13d8 <___vfprintf_internal_r+0xae4>
    1320:	04400404 	movi	r17,16
    1324:	d8801f17 	ldw	r2,124(sp)
    1328:	8c04c40e 	bge	r17,r16,263c <___vfprintf_internal_r+0x1d48>
    132c:	01400074 	movhi	r5,1
    1330:	297f9c84 	addi	r5,r5,-398
    1334:	d9403515 	stw	r5,212(sp)
    1338:	048001c4 	movi	r18,7
    133c:	dcc02d17 	ldw	r19,180(sp)
    1340:	00000306 	br	1350 <___vfprintf_internal_r+0xa5c>
    1344:	843ffc04 	addi	r16,r16,-16
    1348:	42000204 	addi	r8,r8,8
    134c:	8c00130e 	bge	r17,r16,139c <___vfprintf_internal_r+0xaa8>
    1350:	01000074 	movhi	r4,1
    1354:	18c00404 	addi	r3,r3,16
    1358:	10800044 	addi	r2,r2,1
    135c:	213f9c84 	addi	r4,r4,-398
    1360:	41000015 	stw	r4,0(r8)
    1364:	44400115 	stw	r17,4(r8)
    1368:	d8c02015 	stw	r3,128(sp)
    136c:	d8801f15 	stw	r2,124(sp)
    1370:	90bff40e 	bge	r18,r2,1344 <__alt_data_end+0xfffe1f44>
    1374:	d9801e04 	addi	r6,sp,120
    1378:	b80b883a 	mov	r5,r23
    137c:	9809883a 	mov	r4,r19
    1380:	00075e40 	call	75e4 <__sprint_r>
    1384:	103e5f1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1388:	843ffc04 	addi	r16,r16,-16
    138c:	d8c02017 	ldw	r3,128(sp)
    1390:	d8801f17 	ldw	r2,124(sp)
    1394:	da000404 	addi	r8,sp,16
    1398:	8c3fed16 	blt	r17,r16,1350 <__alt_data_end+0xfffe1f50>
    139c:	d9403517 	ldw	r5,212(sp)
    13a0:	1c07883a 	add	r3,r3,r16
    13a4:	10800044 	addi	r2,r2,1
    13a8:	41400015 	stw	r5,0(r8)
    13ac:	44000115 	stw	r16,4(r8)
    13b0:	d8c02015 	stw	r3,128(sp)
    13b4:	d8801f15 	stw	r2,124(sp)
    13b8:	010001c4 	movi	r4,7
    13bc:	2080060e 	bge	r4,r2,13d8 <___vfprintf_internal_r+0xae4>
    13c0:	d9002d17 	ldw	r4,180(sp)
    13c4:	d9801e04 	addi	r6,sp,120
    13c8:	b80b883a 	mov	r5,r23
    13cc:	00075e40 	call	75e4 <__sprint_r>
    13d0:	103e4c1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    13d4:	d8c02017 	ldw	r3,128(sp)
    13d8:	d8803117 	ldw	r2,196(sp)
    13dc:	d9002917 	ldw	r4,164(sp)
    13e0:	1100010e 	bge	r2,r4,13e8 <___vfprintf_internal_r+0xaf4>
    13e4:	2005883a 	mov	r2,r4
    13e8:	d9402f17 	ldw	r5,188(sp)
    13ec:	288b883a 	add	r5,r5,r2
    13f0:	d9402f15 	stw	r5,188(sp)
    13f4:	1801c01e 	bne	r3,zero,1af8 <___vfprintf_internal_r+0x1204>
    13f8:	a8800007 	ldb	r2,0(r21)
    13fc:	d8001f15 	stw	zero,124(sp)
    1400:	da000404 	addi	r8,sp,16
    1404:	103d751e 	bne	r2,zero,9dc <__alt_data_end+0xfffe15dc>
    1408:	a823883a 	mov	r17,r21
    140c:	003d8b06 	br	a3c <__alt_data_end+0xfffe163c>
    1410:	8025883a 	mov	r18,r16
    1414:	dc002903 	ldbu	r16,164(sp)
    1418:	e011883a 	mov	r8,fp
    141c:	84003fcc 	andi	r16,r16,255
    1420:	8005e51e 	bne	r16,zero,2bb8 <___vfprintf_internal_r+0x22c4>
    1424:	94800414 	ori	r18,r18,16
    1428:	9080080c 	andi	r2,r18,32
    142c:	10022b26 	beq	r2,zero,1cdc <___vfprintf_internal_r+0x13e8>
    1430:	d9002e17 	ldw	r4,184(sp)
    1434:	d9402a17 	ldw	r5,168(sp)
    1438:	d8002785 	stb	zero,158(sp)
    143c:	20c00204 	addi	r3,r4,8
    1440:	24c00017 	ldw	r19,0(r4)
    1444:	25800117 	ldw	r22,4(r4)
    1448:	28042e16 	blt	r5,zero,2504 <___vfprintf_internal_r+0x1c10>
    144c:	013fdfc4 	movi	r4,-129
    1450:	9d84b03a 	or	r2,r19,r22
    1454:	d8c02e15 	stw	r3,184(sp)
    1458:	9124703a 	and	r18,r18,r4
    145c:	0039883a 	mov	fp,zero
    1460:	103e801e 	bne	r2,zero,e64 <__alt_data_end+0xfffe1a64>
    1464:	d9002a17 	ldw	r4,168(sp)
    1468:	2002e01e 	bne	r4,zero,1fec <___vfprintf_internal_r+0x16f8>
    146c:	d8002a15 	stw	zero,168(sp)
    1470:	d8002b15 	stw	zero,172(sp)
    1474:	dc001e04 	addi	r16,sp,120
    1478:	003ef506 	br	1050 <__alt_data_end+0xfffe1c50>
    147c:	8025883a 	mov	r18,r16
    1480:	dc002903 	ldbu	r16,164(sp)
    1484:	e011883a 	mov	r8,fp
    1488:	84003fcc 	andi	r16,r16,255
    148c:	8005ba1e 	bne	r16,zero,2b78 <___vfprintf_internal_r+0x2284>
    1490:	01000074 	movhi	r4,1
    1494:	213f8c04 	addi	r4,r4,-464
    1498:	d9003915 	stw	r4,228(sp)
    149c:	9080080c 	andi	r2,r18,32
    14a0:	10006126 	beq	r2,zero,1628 <___vfprintf_internal_r+0xd34>
    14a4:	d9402e17 	ldw	r5,184(sp)
    14a8:	2cc00017 	ldw	r19,0(r5)
    14ac:	2d800117 	ldw	r22,4(r5)
    14b0:	29400204 	addi	r5,r5,8
    14b4:	d9402e15 	stw	r5,184(sp)
    14b8:	9080004c 	andi	r2,r18,1
    14bc:	1001ac26 	beq	r2,zero,1b70 <___vfprintf_internal_r+0x127c>
    14c0:	9d84b03a 	or	r2,r19,r22
    14c4:	10038526 	beq	r2,zero,22dc <___vfprintf_internal_r+0x19e8>
    14c8:	d8c02a17 	ldw	r3,168(sp)
    14cc:	00800c04 	movi	r2,48
    14d0:	d8802705 	stb	r2,156(sp)
    14d4:	dc402745 	stb	r17,157(sp)
    14d8:	d8002785 	stb	zero,158(sp)
    14dc:	90800094 	ori	r2,r18,2
    14e0:	18047916 	blt	r3,zero,26c8 <___vfprintf_internal_r+0x1dd4>
    14e4:	00bfdfc4 	movi	r2,-129
    14e8:	90a4703a 	and	r18,r18,r2
    14ec:	94800094 	ori	r18,r18,2
    14f0:	0039883a 	mov	fp,zero
    14f4:	d9003917 	ldw	r4,228(sp)
    14f8:	dc001e04 	addi	r16,sp,120
    14fc:	988003cc 	andi	r2,r19,15
    1500:	b006973a 	slli	r3,r22,28
    1504:	2085883a 	add	r2,r4,r2
    1508:	9826d13a 	srli	r19,r19,4
    150c:	10800003 	ldbu	r2,0(r2)
    1510:	b02cd13a 	srli	r22,r22,4
    1514:	843fffc4 	addi	r16,r16,-1
    1518:	1ce6b03a 	or	r19,r3,r19
    151c:	80800005 	stb	r2,0(r16)
    1520:	9d84b03a 	or	r2,r19,r22
    1524:	103ff51e 	bne	r2,zero,14fc <__alt_data_end+0xfffe20fc>
    1528:	d8c02817 	ldw	r3,160(sp)
    152c:	1c07c83a 	sub	r3,r3,r16
    1530:	d8c02b15 	stw	r3,172(sp)
    1534:	003ec606 	br	1050 <__alt_data_end+0xfffe1c50>
    1538:	8025883a 	mov	r18,r16
    153c:	dc002903 	ldbu	r16,164(sp)
    1540:	e011883a 	mov	r8,fp
    1544:	84003fcc 	andi	r16,r16,255
    1548:	803e9626 	beq	r16,zero,fa4 <__alt_data_end+0xfffe1ba4>
    154c:	d8c02b03 	ldbu	r3,172(sp)
    1550:	d8c02785 	stb	r3,158(sp)
    1554:	003e9306 	br	fa4 <__alt_data_end+0xfffe1ba4>
    1558:	00c00044 	movi	r3,1
    155c:	d8c02905 	stb	r3,164(sp)
    1560:	00c00ac4 	movi	r3,43
    1564:	d8c02b05 	stb	r3,172(sp)
    1568:	ac400007 	ldb	r17,0(r21)
    156c:	003d4306 	br	a7c <__alt_data_end+0xfffe167c>
    1570:	84000814 	ori	r16,r16,32
    1574:	ac400007 	ldb	r17,0(r21)
    1578:	003d4006 	br	a7c <__alt_data_end+0xfffe167c>
    157c:	d8802e17 	ldw	r2,184(sp)
    1580:	8025883a 	mov	r18,r16
    1584:	d8002785 	stb	zero,158(sp)
    1588:	14000017 	ldw	r16,0(r2)
    158c:	e011883a 	mov	r8,fp
    1590:	14c00104 	addi	r19,r2,4
    1594:	80042d26 	beq	r16,zero,264c <___vfprintf_internal_r+0x1d58>
    1598:	d8c02a17 	ldw	r3,168(sp)
    159c:	1803e416 	blt	r3,zero,2530 <___vfprintf_internal_r+0x1c3c>
    15a0:	180d883a 	mov	r6,r3
    15a4:	000b883a 	mov	r5,zero
    15a8:	8009883a 	mov	r4,r16
    15ac:	df003d15 	stw	fp,244(sp)
    15b0:	0005d640 	call	5d64 <memchr>
    15b4:	da003d17 	ldw	r8,244(sp)
    15b8:	10046826 	beq	r2,zero,275c <___vfprintf_internal_r+0x1e68>
    15bc:	1405c83a 	sub	r2,r2,r16
    15c0:	d8802b15 	stw	r2,172(sp)
    15c4:	1003e016 	blt	r2,zero,2548 <___vfprintf_internal_r+0x1c54>
    15c8:	df002783 	ldbu	fp,158(sp)
    15cc:	d8802915 	stw	r2,164(sp)
    15d0:	dcc02e15 	stw	r19,184(sp)
    15d4:	d8002a15 	stw	zero,168(sp)
    15d8:	d8003215 	stw	zero,200(sp)
    15dc:	003ea206 	br	1068 <__alt_data_end+0xfffe1c68>
    15e0:	8025883a 	mov	r18,r16
    15e4:	dc002903 	ldbu	r16,164(sp)
    15e8:	e011883a 	mov	r8,fp
    15ec:	84003fcc 	andi	r16,r16,255
    15f0:	803f8d26 	beq	r16,zero,1428 <__alt_data_end+0xfffe2028>
    15f4:	d8c02b03 	ldbu	r3,172(sp)
    15f8:	d8c02785 	stb	r3,158(sp)
    15fc:	003f8a06 	br	1428 <__alt_data_end+0xfffe2028>
    1600:	8025883a 	mov	r18,r16
    1604:	dc002903 	ldbu	r16,164(sp)
    1608:	e011883a 	mov	r8,fp
    160c:	84003fcc 	andi	r16,r16,255
    1610:	8005661e 	bne	r16,zero,2bac <___vfprintf_internal_r+0x22b8>
    1614:	01000074 	movhi	r4,1
    1618:	213f9104 	addi	r4,r4,-444
    161c:	d9003915 	stw	r4,228(sp)
    1620:	9080080c 	andi	r2,r18,32
    1624:	103f9f1e 	bne	r2,zero,14a4 <__alt_data_end+0xfffe20a4>
    1628:	9080040c 	andi	r2,r18,16
    162c:	1002eb26 	beq	r2,zero,21dc <___vfprintf_internal_r+0x18e8>
    1630:	d8802e17 	ldw	r2,184(sp)
    1634:	002d883a 	mov	r22,zero
    1638:	14c00017 	ldw	r19,0(r2)
    163c:	10800104 	addi	r2,r2,4
    1640:	d8802e15 	stw	r2,184(sp)
    1644:	003f9c06 	br	14b8 <__alt_data_end+0xfffe20b8>
    1648:	d8802b07 	ldb	r2,172(sp)
    164c:	1002e11e 	bne	r2,zero,21d4 <___vfprintf_internal_r+0x18e0>
    1650:	00c00044 	movi	r3,1
    1654:	d8c02905 	stb	r3,164(sp)
    1658:	00c00804 	movi	r3,32
    165c:	d8c02b05 	stb	r3,172(sp)
    1660:	ac400007 	ldb	r17,0(r21)
    1664:	003d0506 	br	a7c <__alt_data_end+0xfffe167c>
    1668:	84000054 	ori	r16,r16,1
    166c:	ac400007 	ldb	r17,0(r21)
    1670:	003d0206 	br	a7c <__alt_data_end+0xfffe167c>
    1674:	8025883a 	mov	r18,r16
    1678:	dc002903 	ldbu	r16,164(sp)
    167c:	e011883a 	mov	r8,fp
    1680:	84003fcc 	andi	r16,r16,255
    1684:	803de726 	beq	r16,zero,e24 <__alt_data_end+0xfffe1a24>
    1688:	d8c02b03 	ldbu	r3,172(sp)
    168c:	d8c02785 	stb	r3,158(sp)
    1690:	003de406 	br	e24 <__alt_data_end+0xfffe1a24>
    1694:	84001014 	ori	r16,r16,64
    1698:	ac400007 	ldb	r17,0(r21)
    169c:	003cf706 	br	a7c <__alt_data_end+0xfffe167c>
    16a0:	ac400007 	ldb	r17,0(r21)
    16a4:	00801b04 	movi	r2,108
    16a8:	88838f26 	beq	r17,r2,24e8 <___vfprintf_internal_r+0x1bf4>
    16ac:	84000414 	ori	r16,r16,16
    16b0:	003cf206 	br	a7c <__alt_data_end+0xfffe167c>
    16b4:	8025883a 	mov	r18,r16
    16b8:	dc002903 	ldbu	r16,164(sp)
    16bc:	e011883a 	mov	r8,fp
    16c0:	84003fcc 	andi	r16,r16,255
    16c4:	80053f1e 	bne	r16,zero,2bc4 <___vfprintf_internal_r+0x22d0>
    16c8:	9080080c 	andi	r2,r18,32
    16cc:	1002d226 	beq	r2,zero,2218 <___vfprintf_internal_r+0x1924>
    16d0:	d9002e17 	ldw	r4,184(sp)
    16d4:	d9402f17 	ldw	r5,188(sp)
    16d8:	20800017 	ldw	r2,0(r4)
    16dc:	2807d7fa 	srai	r3,r5,31
    16e0:	21000104 	addi	r4,r4,4
    16e4:	d9002e15 	stw	r4,184(sp)
    16e8:	11400015 	stw	r5,0(r2)
    16ec:	10c00115 	stw	r3,4(r2)
    16f0:	003cb806 	br	9d4 <__alt_data_end+0xfffe15d4>
    16f4:	d8c02e17 	ldw	r3,184(sp)
    16f8:	d9002e17 	ldw	r4,184(sp)
    16fc:	8025883a 	mov	r18,r16
    1700:	18800017 	ldw	r2,0(r3)
    1704:	21000104 	addi	r4,r4,4
    1708:	00c00044 	movi	r3,1
    170c:	e011883a 	mov	r8,fp
    1710:	d8c02915 	stw	r3,164(sp)
    1714:	d8002785 	stb	zero,158(sp)
    1718:	d8801405 	stb	r2,80(sp)
    171c:	d9002e15 	stw	r4,184(sp)
    1720:	d8c02b15 	stw	r3,172(sp)
    1724:	d8002a15 	stw	zero,168(sp)
    1728:	d8003215 	stw	zero,200(sp)
    172c:	dc001404 	addi	r16,sp,80
    1730:	0039883a 	mov	fp,zero
    1734:	003e5306 	br	1084 <__alt_data_end+0xfffe1c84>
    1738:	01000074 	movhi	r4,1
    173c:	213f9104 	addi	r4,r4,-444
    1740:	0039883a 	mov	fp,zero
    1744:	d9003915 	stw	r4,228(sp)
    1748:	04401e04 	movi	r17,120
    174c:	003f6906 	br	14f4 <__alt_data_end+0xfffe20f4>
    1750:	8025883a 	mov	r18,r16
    1754:	dc002903 	ldbu	r16,164(sp)
    1758:	e011883a 	mov	r8,fp
    175c:	84003fcc 	andi	r16,r16,255
    1760:	8005081e 	bne	r16,zero,2b84 <___vfprintf_internal_r+0x2290>
    1764:	883d6126 	beq	r17,zero,cec <__alt_data_end+0xfffe18ec>
    1768:	00c00044 	movi	r3,1
    176c:	d8c02915 	stw	r3,164(sp)
    1770:	dc401405 	stb	r17,80(sp)
    1774:	d8002785 	stb	zero,158(sp)
    1778:	003fe906 	br	1720 <__alt_data_end+0xfffe2320>
    177c:	01400074 	movhi	r5,1
    1780:	297f9104 	addi	r5,r5,-444
    1784:	d9403915 	stw	r5,228(sp)
    1788:	d8c02e15 	stw	r3,184(sp)
    178c:	1025883a 	mov	r18,r2
    1790:	04401e04 	movi	r17,120
    1794:	9d84b03a 	or	r2,r19,r22
    1798:	1000fc1e 	bne	r2,zero,1b8c <___vfprintf_internal_r+0x1298>
    179c:	0039883a 	mov	fp,zero
    17a0:	00800084 	movi	r2,2
    17a4:	10803fcc 	andi	r2,r2,255
    17a8:	00c00044 	movi	r3,1
    17ac:	10c20f26 	beq	r2,r3,1fec <___vfprintf_internal_r+0x16f8>
    17b0:	00c00084 	movi	r3,2
    17b4:	10fd3326 	beq	r2,r3,c84 <__alt_data_end+0xfffe1884>
    17b8:	003e0b06 	br	fe8 <__alt_data_end+0xfffe1be8>
    17bc:	d8c02017 	ldw	r3,128(sp)
    17c0:	003e7106 	br	1188 <__alt_data_end+0xfffe1d88>
    17c4:	00801944 	movi	r2,101
    17c8:	14407e0e 	bge	r2,r17,19c4 <___vfprintf_internal_r+0x10d0>
    17cc:	d9003617 	ldw	r4,216(sp)
    17d0:	d9403817 	ldw	r5,224(sp)
    17d4:	000d883a 	mov	r6,zero
    17d8:	000f883a 	mov	r7,zero
    17dc:	d8c03c15 	stw	r3,240(sp)
    17e0:	da003d15 	stw	r8,244(sp)
    17e4:	000c0cc0 	call	c0cc <__eqdf2>
    17e8:	d8c03c17 	ldw	r3,240(sp)
    17ec:	da003d17 	ldw	r8,244(sp)
    17f0:	1000f71e 	bne	r2,zero,1bd0 <___vfprintf_internal_r+0x12dc>
    17f4:	d8801f17 	ldw	r2,124(sp)
    17f8:	01000074 	movhi	r4,1
    17fc:	213f9804 	addi	r4,r4,-416
    1800:	18c00044 	addi	r3,r3,1
    1804:	10800044 	addi	r2,r2,1
    1808:	41000015 	stw	r4,0(r8)
    180c:	01000044 	movi	r4,1
    1810:	41000115 	stw	r4,4(r8)
    1814:	d8c02015 	stw	r3,128(sp)
    1818:	d8801f15 	stw	r2,124(sp)
    181c:	010001c4 	movi	r4,7
    1820:	2082b816 	blt	r4,r2,2304 <___vfprintf_internal_r+0x1a10>
    1824:	42000204 	addi	r8,r8,8
    1828:	d8802617 	ldw	r2,152(sp)
    182c:	d9403317 	ldw	r5,204(sp)
    1830:	11400216 	blt	r2,r5,183c <___vfprintf_internal_r+0xf48>
    1834:	9080004c 	andi	r2,r18,1
    1838:	103eb326 	beq	r2,zero,1308 <__alt_data_end+0xfffe1f08>
    183c:	d8803717 	ldw	r2,220(sp)
    1840:	d9003417 	ldw	r4,208(sp)
    1844:	d9403717 	ldw	r5,220(sp)
    1848:	1887883a 	add	r3,r3,r2
    184c:	d8801f17 	ldw	r2,124(sp)
    1850:	41000015 	stw	r4,0(r8)
    1854:	41400115 	stw	r5,4(r8)
    1858:	10800044 	addi	r2,r2,1
    185c:	d8c02015 	stw	r3,128(sp)
    1860:	d8801f15 	stw	r2,124(sp)
    1864:	010001c4 	movi	r4,7
    1868:	20832916 	blt	r4,r2,2510 <___vfprintf_internal_r+0x1c1c>
    186c:	42000204 	addi	r8,r8,8
    1870:	d8803317 	ldw	r2,204(sp)
    1874:	143fffc4 	addi	r16,r2,-1
    1878:	043ea30e 	bge	zero,r16,1308 <__alt_data_end+0xfffe1f08>
    187c:	04400404 	movi	r17,16
    1880:	d8801f17 	ldw	r2,124(sp)
    1884:	8c00880e 	bge	r17,r16,1aa8 <___vfprintf_internal_r+0x11b4>
    1888:	01400074 	movhi	r5,1
    188c:	297f9884 	addi	r5,r5,-414
    1890:	d9402c15 	stw	r5,176(sp)
    1894:	058001c4 	movi	r22,7
    1898:	dcc02d17 	ldw	r19,180(sp)
    189c:	00000306 	br	18ac <___vfprintf_internal_r+0xfb8>
    18a0:	42000204 	addi	r8,r8,8
    18a4:	843ffc04 	addi	r16,r16,-16
    18a8:	8c00820e 	bge	r17,r16,1ab4 <___vfprintf_internal_r+0x11c0>
    18ac:	18c00404 	addi	r3,r3,16
    18b0:	10800044 	addi	r2,r2,1
    18b4:	45000015 	stw	r20,0(r8)
    18b8:	44400115 	stw	r17,4(r8)
    18bc:	d8c02015 	stw	r3,128(sp)
    18c0:	d8801f15 	stw	r2,124(sp)
    18c4:	b0bff60e 	bge	r22,r2,18a0 <__alt_data_end+0xfffe24a0>
    18c8:	d9801e04 	addi	r6,sp,120
    18cc:	b80b883a 	mov	r5,r23
    18d0:	9809883a 	mov	r4,r19
    18d4:	00075e40 	call	75e4 <__sprint_r>
    18d8:	103d0a1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    18dc:	d8c02017 	ldw	r3,128(sp)
    18e0:	d8801f17 	ldw	r2,124(sp)
    18e4:	da000404 	addi	r8,sp,16
    18e8:	003fee06 	br	18a4 <__alt_data_end+0xfffe24a4>
    18ec:	d9403117 	ldw	r5,196(sp)
    18f0:	d8802917 	ldw	r2,164(sp)
    18f4:	28adc83a 	sub	r22,r5,r2
    18f8:	05be410e 	bge	zero,r22,1200 <__alt_data_end+0xfffe1e00>
    18fc:	07000404 	movi	fp,16
    1900:	d8801f17 	ldw	r2,124(sp)
    1904:	e5838f0e 	bge	fp,r22,2744 <___vfprintf_internal_r+0x1e50>
    1908:	01400074 	movhi	r5,1
    190c:	297f9884 	addi	r5,r5,-414
    1910:	dc403015 	stw	r17,192(sp)
    1914:	d9402c15 	stw	r5,176(sp)
    1918:	b023883a 	mov	r17,r22
    191c:	04c001c4 	movi	r19,7
    1920:	a82d883a 	mov	r22,r21
    1924:	902b883a 	mov	r21,r18
    1928:	8025883a 	mov	r18,r16
    192c:	dc002d17 	ldw	r16,180(sp)
    1930:	00000306 	br	1940 <___vfprintf_internal_r+0x104c>
    1934:	8c7ffc04 	addi	r17,r17,-16
    1938:	42000204 	addi	r8,r8,8
    193c:	e440110e 	bge	fp,r17,1984 <___vfprintf_internal_r+0x1090>
    1940:	18c00404 	addi	r3,r3,16
    1944:	10800044 	addi	r2,r2,1
    1948:	45000015 	stw	r20,0(r8)
    194c:	47000115 	stw	fp,4(r8)
    1950:	d8c02015 	stw	r3,128(sp)
    1954:	d8801f15 	stw	r2,124(sp)
    1958:	98bff60e 	bge	r19,r2,1934 <__alt_data_end+0xfffe2534>
    195c:	d9801e04 	addi	r6,sp,120
    1960:	b80b883a 	mov	r5,r23
    1964:	8009883a 	mov	r4,r16
    1968:	00075e40 	call	75e4 <__sprint_r>
    196c:	103ce51e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1970:	8c7ffc04 	addi	r17,r17,-16
    1974:	d8c02017 	ldw	r3,128(sp)
    1978:	d8801f17 	ldw	r2,124(sp)
    197c:	da000404 	addi	r8,sp,16
    1980:	e47fef16 	blt	fp,r17,1940 <__alt_data_end+0xfffe2540>
    1984:	9021883a 	mov	r16,r18
    1988:	a825883a 	mov	r18,r21
    198c:	b02b883a 	mov	r21,r22
    1990:	882d883a 	mov	r22,r17
    1994:	dc403017 	ldw	r17,192(sp)
    1998:	d9002c17 	ldw	r4,176(sp)
    199c:	1d87883a 	add	r3,r3,r22
    19a0:	10800044 	addi	r2,r2,1
    19a4:	41000015 	stw	r4,0(r8)
    19a8:	45800115 	stw	r22,4(r8)
    19ac:	d8c02015 	stw	r3,128(sp)
    19b0:	d8801f15 	stw	r2,124(sp)
    19b4:	010001c4 	movi	r4,7
    19b8:	20818e16 	blt	r4,r2,1ff4 <___vfprintf_internal_r+0x1700>
    19bc:	42000204 	addi	r8,r8,8
    19c0:	003e0f06 	br	1200 <__alt_data_end+0xfffe1e00>
    19c4:	d9403317 	ldw	r5,204(sp)
    19c8:	00800044 	movi	r2,1
    19cc:	18c00044 	addi	r3,r3,1
    19d0:	1141530e 	bge	r2,r5,1f20 <___vfprintf_internal_r+0x162c>
    19d4:	dc401f17 	ldw	r17,124(sp)
    19d8:	00800044 	movi	r2,1
    19dc:	40800115 	stw	r2,4(r8)
    19e0:	8c400044 	addi	r17,r17,1
    19e4:	44000015 	stw	r16,0(r8)
    19e8:	d8c02015 	stw	r3,128(sp)
    19ec:	dc401f15 	stw	r17,124(sp)
    19f0:	008001c4 	movi	r2,7
    19f4:	14416b16 	blt	r2,r17,1fa4 <___vfprintf_internal_r+0x16b0>
    19f8:	42000204 	addi	r8,r8,8
    19fc:	d8803717 	ldw	r2,220(sp)
    1a00:	d9003417 	ldw	r4,208(sp)
    1a04:	8c400044 	addi	r17,r17,1
    1a08:	10c7883a 	add	r3,r2,r3
    1a0c:	40800115 	stw	r2,4(r8)
    1a10:	41000015 	stw	r4,0(r8)
    1a14:	d8c02015 	stw	r3,128(sp)
    1a18:	dc401f15 	stw	r17,124(sp)
    1a1c:	008001c4 	movi	r2,7
    1a20:	14416916 	blt	r2,r17,1fc8 <___vfprintf_internal_r+0x16d4>
    1a24:	45800204 	addi	r22,r8,8
    1a28:	d9003617 	ldw	r4,216(sp)
    1a2c:	d9403817 	ldw	r5,224(sp)
    1a30:	000d883a 	mov	r6,zero
    1a34:	000f883a 	mov	r7,zero
    1a38:	d8c03c15 	stw	r3,240(sp)
    1a3c:	000c0cc0 	call	c0cc <__eqdf2>
    1a40:	d8c03c17 	ldw	r3,240(sp)
    1a44:	1000bc26 	beq	r2,zero,1d38 <___vfprintf_internal_r+0x1444>
    1a48:	d9403317 	ldw	r5,204(sp)
    1a4c:	84000044 	addi	r16,r16,1
    1a50:	8c400044 	addi	r17,r17,1
    1a54:	28bfffc4 	addi	r2,r5,-1
    1a58:	1887883a 	add	r3,r3,r2
    1a5c:	b0800115 	stw	r2,4(r22)
    1a60:	b4000015 	stw	r16,0(r22)
    1a64:	d8c02015 	stw	r3,128(sp)
    1a68:	dc401f15 	stw	r17,124(sp)
    1a6c:	008001c4 	movi	r2,7
    1a70:	14414316 	blt	r2,r17,1f80 <___vfprintf_internal_r+0x168c>
    1a74:	b5800204 	addi	r22,r22,8
    1a78:	d9003a17 	ldw	r4,232(sp)
    1a7c:	df0022c4 	addi	fp,sp,139
    1a80:	8c400044 	addi	r17,r17,1
    1a84:	20c7883a 	add	r3,r4,r3
    1a88:	b7000015 	stw	fp,0(r22)
    1a8c:	b1000115 	stw	r4,4(r22)
    1a90:	d8c02015 	stw	r3,128(sp)
    1a94:	dc401f15 	stw	r17,124(sp)
    1a98:	008001c4 	movi	r2,7
    1a9c:	14400e16 	blt	r2,r17,1ad8 <___vfprintf_internal_r+0x11e4>
    1aa0:	b2000204 	addi	r8,r22,8
    1aa4:	003e1806 	br	1308 <__alt_data_end+0xfffe1f08>
    1aa8:	01000074 	movhi	r4,1
    1aac:	213f9884 	addi	r4,r4,-414
    1ab0:	d9002c15 	stw	r4,176(sp)
    1ab4:	d9002c17 	ldw	r4,176(sp)
    1ab8:	1c07883a 	add	r3,r3,r16
    1abc:	44000115 	stw	r16,4(r8)
    1ac0:	41000015 	stw	r4,0(r8)
    1ac4:	10800044 	addi	r2,r2,1
    1ac8:	d8c02015 	stw	r3,128(sp)
    1acc:	d8801f15 	stw	r2,124(sp)
    1ad0:	010001c4 	movi	r4,7
    1ad4:	20be0b0e 	bge	r4,r2,1304 <__alt_data_end+0xfffe1f04>
    1ad8:	d9002d17 	ldw	r4,180(sp)
    1adc:	d9801e04 	addi	r6,sp,120
    1ae0:	b80b883a 	mov	r5,r23
    1ae4:	00075e40 	call	75e4 <__sprint_r>
    1ae8:	103c861e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1aec:	d8c02017 	ldw	r3,128(sp)
    1af0:	da000404 	addi	r8,sp,16
    1af4:	003e0406 	br	1308 <__alt_data_end+0xfffe1f08>
    1af8:	d9002d17 	ldw	r4,180(sp)
    1afc:	d9801e04 	addi	r6,sp,120
    1b00:	b80b883a 	mov	r5,r23
    1b04:	00075e40 	call	75e4 <__sprint_r>
    1b08:	103e3b26 	beq	r2,zero,13f8 <__alt_data_end+0xfffe1ff8>
    1b0c:	003c7d06 	br	d04 <__alt_data_end+0xfffe1904>
    1b10:	d9002d17 	ldw	r4,180(sp)
    1b14:	d9801e04 	addi	r6,sp,120
    1b18:	b80b883a 	mov	r5,r23
    1b1c:	00075e40 	call	75e4 <__sprint_r>
    1b20:	103c781e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1b24:	d8c02017 	ldw	r3,128(sp)
    1b28:	da000404 	addi	r8,sp,16
    1b2c:	003de906 	br	12d4 <__alt_data_end+0xfffe1ed4>
    1b30:	d9002d17 	ldw	r4,180(sp)
    1b34:	d9801e04 	addi	r6,sp,120
    1b38:	b80b883a 	mov	r5,r23
    1b3c:	00075e40 	call	75e4 <__sprint_r>
    1b40:	103c701e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1b44:	d8c02017 	ldw	r3,128(sp)
    1b48:	da000404 	addi	r8,sp,16
    1b4c:	003d9b06 	br	11bc <__alt_data_end+0xfffe1dbc>
    1b50:	d9002d17 	ldw	r4,180(sp)
    1b54:	d9801e04 	addi	r6,sp,120
    1b58:	b80b883a 	mov	r5,r23
    1b5c:	00075e40 	call	75e4 <__sprint_r>
    1b60:	103c681e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1b64:	d8c02017 	ldw	r3,128(sp)
    1b68:	da000404 	addi	r8,sp,16
    1b6c:	003da106 	br	11f4 <__alt_data_end+0xfffe1df4>
    1b70:	d9402a17 	ldw	r5,168(sp)
    1b74:	d8002785 	stb	zero,158(sp)
    1b78:	283f0616 	blt	r5,zero,1794 <__alt_data_end+0xfffe2394>
    1b7c:	00ffdfc4 	movi	r3,-129
    1b80:	9d84b03a 	or	r2,r19,r22
    1b84:	90e4703a 	and	r18,r18,r3
    1b88:	103c3b26 	beq	r2,zero,c78 <__alt_data_end+0xfffe1878>
    1b8c:	0039883a 	mov	fp,zero
    1b90:	003e5806 	br	14f4 <__alt_data_end+0xfffe20f4>
    1b94:	9080040c 	andi	r2,r18,16
    1b98:	1001b326 	beq	r2,zero,2268 <___vfprintf_internal_r+0x1974>
    1b9c:	d8c02e17 	ldw	r3,184(sp)
    1ba0:	d9002a17 	ldw	r4,168(sp)
    1ba4:	d8002785 	stb	zero,158(sp)
    1ba8:	18800104 	addi	r2,r3,4
    1bac:	1cc00017 	ldw	r19,0(r3)
    1bb0:	002d883a 	mov	r22,zero
    1bb4:	2001b516 	blt	r4,zero,228c <___vfprintf_internal_r+0x1998>
    1bb8:	00ffdfc4 	movi	r3,-129
    1bbc:	d8802e15 	stw	r2,184(sp)
    1bc0:	90e4703a 	and	r18,r18,r3
    1bc4:	983d0526 	beq	r19,zero,fdc <__alt_data_end+0xfffe1bdc>
    1bc8:	0039883a 	mov	fp,zero
    1bcc:	003d0806 	br	ff0 <__alt_data_end+0xfffe1bf0>
    1bd0:	dc402617 	ldw	r17,152(sp)
    1bd4:	0441d30e 	bge	zero,r17,2324 <___vfprintf_internal_r+0x1a30>
    1bd8:	dc403217 	ldw	r17,200(sp)
    1bdc:	d8803317 	ldw	r2,204(sp)
    1be0:	1440010e 	bge	r2,r17,1be8 <___vfprintf_internal_r+0x12f4>
    1be4:	1023883a 	mov	r17,r2
    1be8:	04400a0e 	bge	zero,r17,1c14 <___vfprintf_internal_r+0x1320>
    1bec:	d8801f17 	ldw	r2,124(sp)
    1bf0:	1c47883a 	add	r3,r3,r17
    1bf4:	44000015 	stw	r16,0(r8)
    1bf8:	10800044 	addi	r2,r2,1
    1bfc:	44400115 	stw	r17,4(r8)
    1c00:	d8c02015 	stw	r3,128(sp)
    1c04:	d8801f15 	stw	r2,124(sp)
    1c08:	010001c4 	movi	r4,7
    1c0c:	20826516 	blt	r4,r2,25a4 <___vfprintf_internal_r+0x1cb0>
    1c10:	42000204 	addi	r8,r8,8
    1c14:	88026116 	blt	r17,zero,259c <___vfprintf_internal_r+0x1ca8>
    1c18:	d9003217 	ldw	r4,200(sp)
    1c1c:	2463c83a 	sub	r17,r4,r17
    1c20:	04407b0e 	bge	zero,r17,1e10 <___vfprintf_internal_r+0x151c>
    1c24:	05800404 	movi	r22,16
    1c28:	d8801f17 	ldw	r2,124(sp)
    1c2c:	b4419d0e 	bge	r22,r17,22a4 <___vfprintf_internal_r+0x19b0>
    1c30:	01000074 	movhi	r4,1
    1c34:	213f9884 	addi	r4,r4,-414
    1c38:	d9002c15 	stw	r4,176(sp)
    1c3c:	070001c4 	movi	fp,7
    1c40:	dcc02d17 	ldw	r19,180(sp)
    1c44:	00000306 	br	1c54 <___vfprintf_internal_r+0x1360>
    1c48:	42000204 	addi	r8,r8,8
    1c4c:	8c7ffc04 	addi	r17,r17,-16
    1c50:	b441970e 	bge	r22,r17,22b0 <___vfprintf_internal_r+0x19bc>
    1c54:	18c00404 	addi	r3,r3,16
    1c58:	10800044 	addi	r2,r2,1
    1c5c:	45000015 	stw	r20,0(r8)
    1c60:	45800115 	stw	r22,4(r8)
    1c64:	d8c02015 	stw	r3,128(sp)
    1c68:	d8801f15 	stw	r2,124(sp)
    1c6c:	e0bff60e 	bge	fp,r2,1c48 <__alt_data_end+0xfffe2848>
    1c70:	d9801e04 	addi	r6,sp,120
    1c74:	b80b883a 	mov	r5,r23
    1c78:	9809883a 	mov	r4,r19
    1c7c:	00075e40 	call	75e4 <__sprint_r>
    1c80:	103c201e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1c84:	d8c02017 	ldw	r3,128(sp)
    1c88:	d8801f17 	ldw	r2,124(sp)
    1c8c:	da000404 	addi	r8,sp,16
    1c90:	003fee06 	br	1c4c <__alt_data_end+0xfffe284c>
    1c94:	d9002d17 	ldw	r4,180(sp)
    1c98:	d9801e04 	addi	r6,sp,120
    1c9c:	b80b883a 	mov	r5,r23
    1ca0:	00075e40 	call	75e4 <__sprint_r>
    1ca4:	103c171e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1ca8:	d8c02017 	ldw	r3,128(sp)
    1cac:	df002787 	ldb	fp,158(sp)
    1cb0:	da000404 	addi	r8,sp,16
    1cb4:	003d3406 	br	1188 <__alt_data_end+0xfffe1d88>
    1cb8:	9080040c 	andi	r2,r18,16
    1cbc:	10016126 	beq	r2,zero,2244 <___vfprintf_internal_r+0x1950>
    1cc0:	d9402e17 	ldw	r5,184(sp)
    1cc4:	2cc00017 	ldw	r19,0(r5)
    1cc8:	29400104 	addi	r5,r5,4
    1ccc:	d9402e15 	stw	r5,184(sp)
    1cd0:	982dd7fa 	srai	r22,r19,31
    1cd4:	b005883a 	mov	r2,r22
    1cd8:	003c5a06 	br	e44 <__alt_data_end+0xfffe1a44>
    1cdc:	9080040c 	andi	r2,r18,16
    1ce0:	10003526 	beq	r2,zero,1db8 <___vfprintf_internal_r+0x14c4>
    1ce4:	d8c02e17 	ldw	r3,184(sp)
    1ce8:	d9002a17 	ldw	r4,168(sp)
    1cec:	d8002785 	stb	zero,158(sp)
    1cf0:	18800104 	addi	r2,r3,4
    1cf4:	1cc00017 	ldw	r19,0(r3)
    1cf8:	002d883a 	mov	r22,zero
    1cfc:	20003716 	blt	r4,zero,1ddc <___vfprintf_internal_r+0x14e8>
    1d00:	00ffdfc4 	movi	r3,-129
    1d04:	d8802e15 	stw	r2,184(sp)
    1d08:	90e4703a 	and	r18,r18,r3
    1d0c:	0039883a 	mov	fp,zero
    1d10:	983dd426 	beq	r19,zero,1464 <__alt_data_end+0xfffe2064>
    1d14:	00800244 	movi	r2,9
    1d18:	14fc5336 	bltu	r2,r19,e68 <__alt_data_end+0xfffe1a68>
    1d1c:	d8c02817 	ldw	r3,160(sp)
    1d20:	dc001dc4 	addi	r16,sp,119
    1d24:	9cc00c04 	addi	r19,r19,48
    1d28:	1c07c83a 	sub	r3,r3,r16
    1d2c:	dcc01dc5 	stb	r19,119(sp)
    1d30:	d8c02b15 	stw	r3,172(sp)
    1d34:	003cc606 	br	1050 <__alt_data_end+0xfffe1c50>
    1d38:	d8803317 	ldw	r2,204(sp)
    1d3c:	143fffc4 	addi	r16,r2,-1
    1d40:	043f4d0e 	bge	zero,r16,1a78 <__alt_data_end+0xfffe2678>
    1d44:	07000404 	movi	fp,16
    1d48:	e400810e 	bge	fp,r16,1f50 <___vfprintf_internal_r+0x165c>
    1d4c:	01400074 	movhi	r5,1
    1d50:	297f9884 	addi	r5,r5,-414
    1d54:	d9402c15 	stw	r5,176(sp)
    1d58:	01c001c4 	movi	r7,7
    1d5c:	dcc02d17 	ldw	r19,180(sp)
    1d60:	00000306 	br	1d70 <___vfprintf_internal_r+0x147c>
    1d64:	b5800204 	addi	r22,r22,8
    1d68:	843ffc04 	addi	r16,r16,-16
    1d6c:	e4007b0e 	bge	fp,r16,1f5c <___vfprintf_internal_r+0x1668>
    1d70:	18c00404 	addi	r3,r3,16
    1d74:	8c400044 	addi	r17,r17,1
    1d78:	b5000015 	stw	r20,0(r22)
    1d7c:	b7000115 	stw	fp,4(r22)
    1d80:	d8c02015 	stw	r3,128(sp)
    1d84:	dc401f15 	stw	r17,124(sp)
    1d88:	3c7ff60e 	bge	r7,r17,1d64 <__alt_data_end+0xfffe2964>
    1d8c:	d9801e04 	addi	r6,sp,120
    1d90:	b80b883a 	mov	r5,r23
    1d94:	9809883a 	mov	r4,r19
    1d98:	d9c03c15 	stw	r7,240(sp)
    1d9c:	00075e40 	call	75e4 <__sprint_r>
    1da0:	d9c03c17 	ldw	r7,240(sp)
    1da4:	103bd71e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1da8:	d8c02017 	ldw	r3,128(sp)
    1dac:	dc401f17 	ldw	r17,124(sp)
    1db0:	dd800404 	addi	r22,sp,16
    1db4:	003fec06 	br	1d68 <__alt_data_end+0xfffe2968>
    1db8:	9080100c 	andi	r2,r18,64
    1dbc:	d8002785 	stb	zero,158(sp)
    1dc0:	10010e26 	beq	r2,zero,21fc <___vfprintf_internal_r+0x1908>
    1dc4:	d9402e17 	ldw	r5,184(sp)
    1dc8:	d8c02a17 	ldw	r3,168(sp)
    1dcc:	002d883a 	mov	r22,zero
    1dd0:	28800104 	addi	r2,r5,4
    1dd4:	2cc0000b 	ldhu	r19,0(r5)
    1dd8:	183fc90e 	bge	r3,zero,1d00 <__alt_data_end+0xfffe2900>
    1ddc:	d8802e15 	stw	r2,184(sp)
    1de0:	0039883a 	mov	fp,zero
    1de4:	9d84b03a 	or	r2,r19,r22
    1de8:	103c1e1e 	bne	r2,zero,e64 <__alt_data_end+0xfffe1a64>
    1dec:	00800044 	movi	r2,1
    1df0:	003e6c06 	br	17a4 <__alt_data_end+0xfffe23a4>
    1df4:	d9002d17 	ldw	r4,180(sp)
    1df8:	d9801e04 	addi	r6,sp,120
    1dfc:	b80b883a 	mov	r5,r23
    1e00:	00075e40 	call	75e4 <__sprint_r>
    1e04:	103bbf1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1e08:	d8c02017 	ldw	r3,128(sp)
    1e0c:	da000404 	addi	r8,sp,16
    1e10:	d9003217 	ldw	r4,200(sp)
    1e14:	d8802617 	ldw	r2,152(sp)
    1e18:	d9403317 	ldw	r5,204(sp)
    1e1c:	8123883a 	add	r17,r16,r4
    1e20:	11400216 	blt	r2,r5,1e2c <___vfprintf_internal_r+0x1538>
    1e24:	9100004c 	andi	r4,r18,1
    1e28:	20000d26 	beq	r4,zero,1e60 <___vfprintf_internal_r+0x156c>
    1e2c:	d9003717 	ldw	r4,220(sp)
    1e30:	d9403417 	ldw	r5,208(sp)
    1e34:	1907883a 	add	r3,r3,r4
    1e38:	d9001f17 	ldw	r4,124(sp)
    1e3c:	41400015 	stw	r5,0(r8)
    1e40:	d9403717 	ldw	r5,220(sp)
    1e44:	21000044 	addi	r4,r4,1
    1e48:	d8c02015 	stw	r3,128(sp)
    1e4c:	41400115 	stw	r5,4(r8)
    1e50:	d9001f15 	stw	r4,124(sp)
    1e54:	014001c4 	movi	r5,7
    1e58:	2901e816 	blt	r5,r4,25fc <___vfprintf_internal_r+0x1d08>
    1e5c:	42000204 	addi	r8,r8,8
    1e60:	d9003317 	ldw	r4,204(sp)
    1e64:	8121883a 	add	r16,r16,r4
    1e68:	2085c83a 	sub	r2,r4,r2
    1e6c:	8461c83a 	sub	r16,r16,r17
    1e70:	1400010e 	bge	r2,r16,1e78 <___vfprintf_internal_r+0x1584>
    1e74:	1021883a 	mov	r16,r2
    1e78:	04000a0e 	bge	zero,r16,1ea4 <___vfprintf_internal_r+0x15b0>
    1e7c:	d9001f17 	ldw	r4,124(sp)
    1e80:	1c07883a 	add	r3,r3,r16
    1e84:	44400015 	stw	r17,0(r8)
    1e88:	21000044 	addi	r4,r4,1
    1e8c:	44000115 	stw	r16,4(r8)
    1e90:	d8c02015 	stw	r3,128(sp)
    1e94:	d9001f15 	stw	r4,124(sp)
    1e98:	014001c4 	movi	r5,7
    1e9c:	2901fb16 	blt	r5,r4,268c <___vfprintf_internal_r+0x1d98>
    1ea0:	42000204 	addi	r8,r8,8
    1ea4:	8001f716 	blt	r16,zero,2684 <___vfprintf_internal_r+0x1d90>
    1ea8:	1421c83a 	sub	r16,r2,r16
    1eac:	043d160e 	bge	zero,r16,1308 <__alt_data_end+0xfffe1f08>
    1eb0:	04400404 	movi	r17,16
    1eb4:	d8801f17 	ldw	r2,124(sp)
    1eb8:	8c3efb0e 	bge	r17,r16,1aa8 <__alt_data_end+0xfffe26a8>
    1ebc:	01400074 	movhi	r5,1
    1ec0:	297f9884 	addi	r5,r5,-414
    1ec4:	d9402c15 	stw	r5,176(sp)
    1ec8:	058001c4 	movi	r22,7
    1ecc:	dcc02d17 	ldw	r19,180(sp)
    1ed0:	00000306 	br	1ee0 <___vfprintf_internal_r+0x15ec>
    1ed4:	42000204 	addi	r8,r8,8
    1ed8:	843ffc04 	addi	r16,r16,-16
    1edc:	8c3ef50e 	bge	r17,r16,1ab4 <__alt_data_end+0xfffe26b4>
    1ee0:	18c00404 	addi	r3,r3,16
    1ee4:	10800044 	addi	r2,r2,1
    1ee8:	45000015 	stw	r20,0(r8)
    1eec:	44400115 	stw	r17,4(r8)
    1ef0:	d8c02015 	stw	r3,128(sp)
    1ef4:	d8801f15 	stw	r2,124(sp)
    1ef8:	b0bff60e 	bge	r22,r2,1ed4 <__alt_data_end+0xfffe2ad4>
    1efc:	d9801e04 	addi	r6,sp,120
    1f00:	b80b883a 	mov	r5,r23
    1f04:	9809883a 	mov	r4,r19
    1f08:	00075e40 	call	75e4 <__sprint_r>
    1f0c:	103b7d1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1f10:	d8c02017 	ldw	r3,128(sp)
    1f14:	d8801f17 	ldw	r2,124(sp)
    1f18:	da000404 	addi	r8,sp,16
    1f1c:	003fee06 	br	1ed8 <__alt_data_end+0xfffe2ad8>
    1f20:	9088703a 	and	r4,r18,r2
    1f24:	203eab1e 	bne	r4,zero,19d4 <__alt_data_end+0xfffe25d4>
    1f28:	dc401f17 	ldw	r17,124(sp)
    1f2c:	40800115 	stw	r2,4(r8)
    1f30:	44000015 	stw	r16,0(r8)
    1f34:	8c400044 	addi	r17,r17,1
    1f38:	d8c02015 	stw	r3,128(sp)
    1f3c:	dc401f15 	stw	r17,124(sp)
    1f40:	008001c4 	movi	r2,7
    1f44:	14400e16 	blt	r2,r17,1f80 <___vfprintf_internal_r+0x168c>
    1f48:	45800204 	addi	r22,r8,8
    1f4c:	003eca06 	br	1a78 <__alt_data_end+0xfffe2678>
    1f50:	01000074 	movhi	r4,1
    1f54:	213f9884 	addi	r4,r4,-414
    1f58:	d9002c15 	stw	r4,176(sp)
    1f5c:	d8802c17 	ldw	r2,176(sp)
    1f60:	1c07883a 	add	r3,r3,r16
    1f64:	8c400044 	addi	r17,r17,1
    1f68:	b0800015 	stw	r2,0(r22)
    1f6c:	b4000115 	stw	r16,4(r22)
    1f70:	d8c02015 	stw	r3,128(sp)
    1f74:	dc401f15 	stw	r17,124(sp)
    1f78:	008001c4 	movi	r2,7
    1f7c:	147ebd0e 	bge	r2,r17,1a74 <__alt_data_end+0xfffe2674>
    1f80:	d9002d17 	ldw	r4,180(sp)
    1f84:	d9801e04 	addi	r6,sp,120
    1f88:	b80b883a 	mov	r5,r23
    1f8c:	00075e40 	call	75e4 <__sprint_r>
    1f90:	103b5c1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1f94:	d8c02017 	ldw	r3,128(sp)
    1f98:	dc401f17 	ldw	r17,124(sp)
    1f9c:	dd800404 	addi	r22,sp,16
    1fa0:	003eb506 	br	1a78 <__alt_data_end+0xfffe2678>
    1fa4:	d9002d17 	ldw	r4,180(sp)
    1fa8:	d9801e04 	addi	r6,sp,120
    1fac:	b80b883a 	mov	r5,r23
    1fb0:	00075e40 	call	75e4 <__sprint_r>
    1fb4:	103b531e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1fb8:	d8c02017 	ldw	r3,128(sp)
    1fbc:	dc401f17 	ldw	r17,124(sp)
    1fc0:	da000404 	addi	r8,sp,16
    1fc4:	003e8d06 	br	19fc <__alt_data_end+0xfffe25fc>
    1fc8:	d9002d17 	ldw	r4,180(sp)
    1fcc:	d9801e04 	addi	r6,sp,120
    1fd0:	b80b883a 	mov	r5,r23
    1fd4:	00075e40 	call	75e4 <__sprint_r>
    1fd8:	103b4a1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    1fdc:	d8c02017 	ldw	r3,128(sp)
    1fe0:	dc401f17 	ldw	r17,124(sp)
    1fe4:	dd800404 	addi	r22,sp,16
    1fe8:	003e8f06 	br	1a28 <__alt_data_end+0xfffe2628>
    1fec:	0027883a 	mov	r19,zero
    1ff0:	003f4a06 	br	1d1c <__alt_data_end+0xfffe291c>
    1ff4:	d9002d17 	ldw	r4,180(sp)
    1ff8:	d9801e04 	addi	r6,sp,120
    1ffc:	b80b883a 	mov	r5,r23
    2000:	00075e40 	call	75e4 <__sprint_r>
    2004:	103b3f1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    2008:	d8c02017 	ldw	r3,128(sp)
    200c:	da000404 	addi	r8,sp,16
    2010:	003c7b06 	br	1200 <__alt_data_end+0xfffe1e00>
    2014:	d9402a17 	ldw	r5,168(sp)
    2018:	04e7c83a 	sub	r19,zero,r19
    201c:	07000b44 	movi	fp,45
    2020:	9804c03a 	cmpne	r2,r19,zero
    2024:	05adc83a 	sub	r22,zero,r22
    2028:	df002785 	stb	fp,158(sp)
    202c:	b0adc83a 	sub	r22,r22,r2
    2030:	28017b16 	blt	r5,zero,2620 <___vfprintf_internal_r+0x1d2c>
    2034:	00bfdfc4 	movi	r2,-129
    2038:	90a4703a 	and	r18,r18,r2
    203c:	003b8906 	br	e64 <__alt_data_end+0xfffe1a64>
    2040:	d9003617 	ldw	r4,216(sp)
    2044:	d9403817 	ldw	r5,224(sp)
    2048:	da003d15 	stw	r8,244(sp)
    204c:	00071700 	call	7170 <__fpclassifyd>
    2050:	da003d17 	ldw	r8,244(sp)
    2054:	1000f026 	beq	r2,zero,2418 <___vfprintf_internal_r+0x1b24>
    2058:	d9002a17 	ldw	r4,168(sp)
    205c:	05bff7c4 	movi	r22,-33
    2060:	00bfffc4 	movi	r2,-1
    2064:	8dac703a 	and	r22,r17,r22
    2068:	20820026 	beq	r4,r2,286c <___vfprintf_internal_r+0x1f78>
    206c:	008011c4 	movi	r2,71
    2070:	b081f726 	beq	r22,r2,2850 <___vfprintf_internal_r+0x1f5c>
    2074:	d9003817 	ldw	r4,224(sp)
    2078:	90c04014 	ori	r3,r18,256
    207c:	d8c02c15 	stw	r3,176(sp)
    2080:	20021516 	blt	r4,zero,28d8 <___vfprintf_internal_r+0x1fe4>
    2084:	dcc03817 	ldw	r19,224(sp)
    2088:	d8002905 	stb	zero,164(sp)
    208c:	00801984 	movi	r2,102
    2090:	8881f926 	beq	r17,r2,2878 <___vfprintf_internal_r+0x1f84>
    2094:	00801184 	movi	r2,70
    2098:	88821c26 	beq	r17,r2,290c <___vfprintf_internal_r+0x2018>
    209c:	00801144 	movi	r2,69
    20a0:	b081ef26 	beq	r22,r2,2860 <___vfprintf_internal_r+0x1f6c>
    20a4:	d8c02a17 	ldw	r3,168(sp)
    20a8:	d8802104 	addi	r2,sp,132
    20ac:	d8800315 	stw	r2,12(sp)
    20b0:	d9403617 	ldw	r5,216(sp)
    20b4:	d8802504 	addi	r2,sp,148
    20b8:	d9002d17 	ldw	r4,180(sp)
    20bc:	d8800215 	stw	r2,8(sp)
    20c0:	d8802604 	addi	r2,sp,152
    20c4:	d8c00015 	stw	r3,0(sp)
    20c8:	d8800115 	stw	r2,4(sp)
    20cc:	01c00084 	movi	r7,2
    20d0:	980d883a 	mov	r6,r19
    20d4:	d8c03c15 	stw	r3,240(sp)
    20d8:	da003d15 	stw	r8,244(sp)
    20dc:	00030240 	call	3024 <_dtoa_r>
    20e0:	1021883a 	mov	r16,r2
    20e4:	008019c4 	movi	r2,103
    20e8:	d8c03c17 	ldw	r3,240(sp)
    20ec:	da003d17 	ldw	r8,244(sp)
    20f0:	88817126 	beq	r17,r2,26b8 <___vfprintf_internal_r+0x1dc4>
    20f4:	008011c4 	movi	r2,71
    20f8:	88829126 	beq	r17,r2,2b40 <___vfprintf_internal_r+0x224c>
    20fc:	80f9883a 	add	fp,r16,r3
    2100:	d9003617 	ldw	r4,216(sp)
    2104:	000d883a 	mov	r6,zero
    2108:	000f883a 	mov	r7,zero
    210c:	980b883a 	mov	r5,r19
    2110:	da003d15 	stw	r8,244(sp)
    2114:	000c0cc0 	call	c0cc <__eqdf2>
    2118:	da003d17 	ldw	r8,244(sp)
    211c:	10018d26 	beq	r2,zero,2754 <___vfprintf_internal_r+0x1e60>
    2120:	d8802117 	ldw	r2,132(sp)
    2124:	1700062e 	bgeu	r2,fp,2140 <___vfprintf_internal_r+0x184c>
    2128:	01000c04 	movi	r4,48
    212c:	10c00044 	addi	r3,r2,1
    2130:	d8c02115 	stw	r3,132(sp)
    2134:	11000005 	stb	r4,0(r2)
    2138:	d8802117 	ldw	r2,132(sp)
    213c:	173ffb36 	bltu	r2,fp,212c <__alt_data_end+0xfffe2d2c>
    2140:	1405c83a 	sub	r2,r2,r16
    2144:	d8803315 	stw	r2,204(sp)
    2148:	008011c4 	movi	r2,71
    214c:	b0817626 	beq	r22,r2,2728 <___vfprintf_internal_r+0x1e34>
    2150:	00801944 	movi	r2,101
    2154:	1442800e 	bge	r2,r17,2b58 <___vfprintf_internal_r+0x2264>
    2158:	d8c02617 	ldw	r3,152(sp)
    215c:	00801984 	movi	r2,102
    2160:	d8c03215 	stw	r3,200(sp)
    2164:	8881fe26 	beq	r17,r2,2960 <___vfprintf_internal_r+0x206c>
    2168:	d8c03217 	ldw	r3,200(sp)
    216c:	d9003317 	ldw	r4,204(sp)
    2170:	1901dd16 	blt	r3,r4,28e8 <___vfprintf_internal_r+0x1ff4>
    2174:	9480004c 	andi	r18,r18,1
    2178:	90022b1e 	bne	r18,zero,2a28 <___vfprintf_internal_r+0x2134>
    217c:	1805883a 	mov	r2,r3
    2180:	18028316 	blt	r3,zero,2b90 <___vfprintf_internal_r+0x229c>
    2184:	d8c03217 	ldw	r3,200(sp)
    2188:	044019c4 	movi	r17,103
    218c:	d8c02b15 	stw	r3,172(sp)
    2190:	df002907 	ldb	fp,164(sp)
    2194:	e001531e 	bne	fp,zero,26e4 <___vfprintf_internal_r+0x1df0>
    2198:	df002783 	ldbu	fp,158(sp)
    219c:	d8802915 	stw	r2,164(sp)
    21a0:	dc802c17 	ldw	r18,176(sp)
    21a4:	d8002a15 	stw	zero,168(sp)
    21a8:	003baf06 	br	1068 <__alt_data_end+0xfffe1c68>
    21ac:	d8c02e17 	ldw	r3,184(sp)
    21b0:	d9002e17 	ldw	r4,184(sp)
    21b4:	d9402e17 	ldw	r5,184(sp)
    21b8:	18c00017 	ldw	r3,0(r3)
    21bc:	21000117 	ldw	r4,4(r4)
    21c0:	29400204 	addi	r5,r5,8
    21c4:	d8c03615 	stw	r3,216(sp)
    21c8:	d9003815 	stw	r4,224(sp)
    21cc:	d9402e15 	stw	r5,184(sp)
    21d0:	003b5006 	br	f14 <__alt_data_end+0xfffe1b14>
    21d4:	ac400007 	ldb	r17,0(r21)
    21d8:	003a2806 	br	a7c <__alt_data_end+0xfffe167c>
    21dc:	9080100c 	andi	r2,r18,64
    21e0:	1000a826 	beq	r2,zero,2484 <___vfprintf_internal_r+0x1b90>
    21e4:	d8c02e17 	ldw	r3,184(sp)
    21e8:	002d883a 	mov	r22,zero
    21ec:	1cc0000b 	ldhu	r19,0(r3)
    21f0:	18c00104 	addi	r3,r3,4
    21f4:	d8c02e15 	stw	r3,184(sp)
    21f8:	003caf06 	br	14b8 <__alt_data_end+0xfffe20b8>
    21fc:	d9002e17 	ldw	r4,184(sp)
    2200:	d9402a17 	ldw	r5,168(sp)
    2204:	002d883a 	mov	r22,zero
    2208:	20800104 	addi	r2,r4,4
    220c:	24c00017 	ldw	r19,0(r4)
    2210:	283ebb0e 	bge	r5,zero,1d00 <__alt_data_end+0xfffe2900>
    2214:	003ef106 	br	1ddc <__alt_data_end+0xfffe29dc>
    2218:	9080040c 	andi	r2,r18,16
    221c:	1000921e 	bne	r2,zero,2468 <___vfprintf_internal_r+0x1b74>
    2220:	9480100c 	andi	r18,r18,64
    2224:	90013926 	beq	r18,zero,270c <___vfprintf_internal_r+0x1e18>
    2228:	d9402e17 	ldw	r5,184(sp)
    222c:	d8c02f17 	ldw	r3,188(sp)
    2230:	28800017 	ldw	r2,0(r5)
    2234:	29400104 	addi	r5,r5,4
    2238:	d9402e15 	stw	r5,184(sp)
    223c:	10c0000d 	sth	r3,0(r2)
    2240:	0039e406 	br	9d4 <__alt_data_end+0xfffe15d4>
    2244:	9080100c 	andi	r2,r18,64
    2248:	10008026 	beq	r2,zero,244c <___vfprintf_internal_r+0x1b58>
    224c:	d8802e17 	ldw	r2,184(sp)
    2250:	14c0000f 	ldh	r19,0(r2)
    2254:	10800104 	addi	r2,r2,4
    2258:	d8802e15 	stw	r2,184(sp)
    225c:	982dd7fa 	srai	r22,r19,31
    2260:	b005883a 	mov	r2,r22
    2264:	003af706 	br	e44 <__alt_data_end+0xfffe1a44>
    2268:	9080100c 	andi	r2,r18,64
    226c:	d8002785 	stb	zero,158(sp)
    2270:	10008a1e 	bne	r2,zero,249c <___vfprintf_internal_r+0x1ba8>
    2274:	d9002e17 	ldw	r4,184(sp)
    2278:	d9402a17 	ldw	r5,168(sp)
    227c:	002d883a 	mov	r22,zero
    2280:	20800104 	addi	r2,r4,4
    2284:	24c00017 	ldw	r19,0(r4)
    2288:	283e4b0e 	bge	r5,zero,1bb8 <__alt_data_end+0xfffe27b8>
    228c:	9d86b03a 	or	r3,r19,r22
    2290:	d8802e15 	stw	r2,184(sp)
    2294:	183e4c1e 	bne	r3,zero,1bc8 <__alt_data_end+0xfffe27c8>
    2298:	0039883a 	mov	fp,zero
    229c:	0005883a 	mov	r2,zero
    22a0:	003d4006 	br	17a4 <__alt_data_end+0xfffe23a4>
    22a4:	01400074 	movhi	r5,1
    22a8:	297f9884 	addi	r5,r5,-414
    22ac:	d9402c15 	stw	r5,176(sp)
    22b0:	d9402c17 	ldw	r5,176(sp)
    22b4:	1c47883a 	add	r3,r3,r17
    22b8:	10800044 	addi	r2,r2,1
    22bc:	41400015 	stw	r5,0(r8)
    22c0:	44400115 	stw	r17,4(r8)
    22c4:	d8c02015 	stw	r3,128(sp)
    22c8:	d8801f15 	stw	r2,124(sp)
    22cc:	010001c4 	movi	r4,7
    22d0:	20bec816 	blt	r4,r2,1df4 <__alt_data_end+0xfffe29f4>
    22d4:	42000204 	addi	r8,r8,8
    22d8:	003ecd06 	br	1e10 <__alt_data_end+0xfffe2a10>
    22dc:	d9002a17 	ldw	r4,168(sp)
    22e0:	d8002785 	stb	zero,158(sp)
    22e4:	203d2d16 	blt	r4,zero,179c <__alt_data_end+0xfffe239c>
    22e8:	00bfdfc4 	movi	r2,-129
    22ec:	90a4703a 	and	r18,r18,r2
    22f0:	003a6106 	br	c78 <__alt_data_end+0xfffe1878>
    22f4:	01000074 	movhi	r4,1
    22f8:	213f9884 	addi	r4,r4,-414
    22fc:	d9002c15 	stw	r4,176(sp)
    2300:	003bea06 	br	12ac <__alt_data_end+0xfffe1eac>
    2304:	d9002d17 	ldw	r4,180(sp)
    2308:	d9801e04 	addi	r6,sp,120
    230c:	b80b883a 	mov	r5,r23
    2310:	00075e40 	call	75e4 <__sprint_r>
    2314:	103a7b1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    2318:	d8c02017 	ldw	r3,128(sp)
    231c:	da000404 	addi	r8,sp,16
    2320:	003d4106 	br	1828 <__alt_data_end+0xfffe2428>
    2324:	d8801f17 	ldw	r2,124(sp)
    2328:	01400074 	movhi	r5,1
    232c:	01000044 	movi	r4,1
    2330:	18c00044 	addi	r3,r3,1
    2334:	10800044 	addi	r2,r2,1
    2338:	297f9804 	addi	r5,r5,-416
    233c:	41000115 	stw	r4,4(r8)
    2340:	41400015 	stw	r5,0(r8)
    2344:	d8c02015 	stw	r3,128(sp)
    2348:	d8801f15 	stw	r2,124(sp)
    234c:	010001c4 	movi	r4,7
    2350:	20805c16 	blt	r4,r2,24c4 <___vfprintf_internal_r+0x1bd0>
    2354:	42000204 	addi	r8,r8,8
    2358:	8800041e 	bne	r17,zero,236c <___vfprintf_internal_r+0x1a78>
    235c:	d8803317 	ldw	r2,204(sp)
    2360:	1000021e 	bne	r2,zero,236c <___vfprintf_internal_r+0x1a78>
    2364:	9080004c 	andi	r2,r18,1
    2368:	103be726 	beq	r2,zero,1308 <__alt_data_end+0xfffe1f08>
    236c:	d9003717 	ldw	r4,220(sp)
    2370:	d8801f17 	ldw	r2,124(sp)
    2374:	d9403417 	ldw	r5,208(sp)
    2378:	20c7883a 	add	r3,r4,r3
    237c:	10800044 	addi	r2,r2,1
    2380:	41000115 	stw	r4,4(r8)
    2384:	41400015 	stw	r5,0(r8)
    2388:	d8c02015 	stw	r3,128(sp)
    238c:	d8801f15 	stw	r2,124(sp)
    2390:	010001c4 	movi	r4,7
    2394:	20812116 	blt	r4,r2,281c <___vfprintf_internal_r+0x1f28>
    2398:	42000204 	addi	r8,r8,8
    239c:	0463c83a 	sub	r17,zero,r17
    23a0:	0440730e 	bge	zero,r17,2570 <___vfprintf_internal_r+0x1c7c>
    23a4:	05800404 	movi	r22,16
    23a8:	b440860e 	bge	r22,r17,25c4 <___vfprintf_internal_r+0x1cd0>
    23ac:	01400074 	movhi	r5,1
    23b0:	297f9884 	addi	r5,r5,-414
    23b4:	d9402c15 	stw	r5,176(sp)
    23b8:	070001c4 	movi	fp,7
    23bc:	dcc02d17 	ldw	r19,180(sp)
    23c0:	00000306 	br	23d0 <___vfprintf_internal_r+0x1adc>
    23c4:	42000204 	addi	r8,r8,8
    23c8:	8c7ffc04 	addi	r17,r17,-16
    23cc:	b440800e 	bge	r22,r17,25d0 <___vfprintf_internal_r+0x1cdc>
    23d0:	18c00404 	addi	r3,r3,16
    23d4:	10800044 	addi	r2,r2,1
    23d8:	45000015 	stw	r20,0(r8)
    23dc:	45800115 	stw	r22,4(r8)
    23e0:	d8c02015 	stw	r3,128(sp)
    23e4:	d8801f15 	stw	r2,124(sp)
    23e8:	e0bff60e 	bge	fp,r2,23c4 <__alt_data_end+0xfffe2fc4>
    23ec:	d9801e04 	addi	r6,sp,120
    23f0:	b80b883a 	mov	r5,r23
    23f4:	9809883a 	mov	r4,r19
    23f8:	00075e40 	call	75e4 <__sprint_r>
    23fc:	103a411e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    2400:	d8c02017 	ldw	r3,128(sp)
    2404:	d8801f17 	ldw	r2,124(sp)
    2408:	da000404 	addi	r8,sp,16
    240c:	003fee06 	br	23c8 <__alt_data_end+0xfffe2fc8>
    2410:	00bfffc4 	movi	r2,-1
    2414:	003a3f06 	br	d14 <__alt_data_end+0xfffe1914>
    2418:	008011c4 	movi	r2,71
    241c:	1440b816 	blt	r2,r17,2700 <___vfprintf_internal_r+0x1e0c>
    2420:	04000074 	movhi	r16,1
    2424:	843f8a04 	addi	r16,r16,-472
    2428:	00c000c4 	movi	r3,3
    242c:	00bfdfc4 	movi	r2,-129
    2430:	d8c02915 	stw	r3,164(sp)
    2434:	90a4703a 	and	r18,r18,r2
    2438:	df002783 	ldbu	fp,158(sp)
    243c:	d8c02b15 	stw	r3,172(sp)
    2440:	d8002a15 	stw	zero,168(sp)
    2444:	d8003215 	stw	zero,200(sp)
    2448:	003b0706 	br	1068 <__alt_data_end+0xfffe1c68>
    244c:	d8c02e17 	ldw	r3,184(sp)
    2450:	1cc00017 	ldw	r19,0(r3)
    2454:	18c00104 	addi	r3,r3,4
    2458:	d8c02e15 	stw	r3,184(sp)
    245c:	982dd7fa 	srai	r22,r19,31
    2460:	b005883a 	mov	r2,r22
    2464:	003a7706 	br	e44 <__alt_data_end+0xfffe1a44>
    2468:	d8c02e17 	ldw	r3,184(sp)
    246c:	d9002f17 	ldw	r4,188(sp)
    2470:	18800017 	ldw	r2,0(r3)
    2474:	18c00104 	addi	r3,r3,4
    2478:	d8c02e15 	stw	r3,184(sp)
    247c:	11000015 	stw	r4,0(r2)
    2480:	00395406 	br	9d4 <__alt_data_end+0xfffe15d4>
    2484:	d9002e17 	ldw	r4,184(sp)
    2488:	002d883a 	mov	r22,zero
    248c:	24c00017 	ldw	r19,0(r4)
    2490:	21000104 	addi	r4,r4,4
    2494:	d9002e15 	stw	r4,184(sp)
    2498:	003c0706 	br	14b8 <__alt_data_end+0xfffe20b8>
    249c:	d9402e17 	ldw	r5,184(sp)
    24a0:	d8c02a17 	ldw	r3,168(sp)
    24a4:	002d883a 	mov	r22,zero
    24a8:	28800104 	addi	r2,r5,4
    24ac:	2cc0000b 	ldhu	r19,0(r5)
    24b0:	183dc10e 	bge	r3,zero,1bb8 <__alt_data_end+0xfffe27b8>
    24b4:	003f7506 	br	228c <__alt_data_end+0xfffe2e8c>
    24b8:	04000074 	movhi	r16,1
    24bc:	843f8804 	addi	r16,r16,-480
    24c0:	003aa706 	br	f60 <__alt_data_end+0xfffe1b60>
    24c4:	d9002d17 	ldw	r4,180(sp)
    24c8:	d9801e04 	addi	r6,sp,120
    24cc:	b80b883a 	mov	r5,r23
    24d0:	00075e40 	call	75e4 <__sprint_r>
    24d4:	103a0b1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    24d8:	dc402617 	ldw	r17,152(sp)
    24dc:	d8c02017 	ldw	r3,128(sp)
    24e0:	da000404 	addi	r8,sp,16
    24e4:	003f9c06 	br	2358 <__alt_data_end+0xfffe2f58>
    24e8:	ac400043 	ldbu	r17,1(r21)
    24ec:	84000814 	ori	r16,r16,32
    24f0:	ad400044 	addi	r21,r21,1
    24f4:	8c403fcc 	andi	r17,r17,255
    24f8:	8c40201c 	xori	r17,r17,128
    24fc:	8c7fe004 	addi	r17,r17,-128
    2500:	00395e06 	br	a7c <__alt_data_end+0xfffe167c>
    2504:	d8c02e15 	stw	r3,184(sp)
    2508:	0039883a 	mov	fp,zero
    250c:	003e3506 	br	1de4 <__alt_data_end+0xfffe29e4>
    2510:	d9002d17 	ldw	r4,180(sp)
    2514:	d9801e04 	addi	r6,sp,120
    2518:	b80b883a 	mov	r5,r23
    251c:	00075e40 	call	75e4 <__sprint_r>
    2520:	1039f81e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    2524:	d8c02017 	ldw	r3,128(sp)
    2528:	da000404 	addi	r8,sp,16
    252c:	003cd006 	br	1870 <__alt_data_end+0xfffe2470>
    2530:	8009883a 	mov	r4,r16
    2534:	df003d15 	stw	fp,244(sp)
    2538:	00074500 	call	7450 <strlen>
    253c:	d8802b15 	stw	r2,172(sp)
    2540:	da003d17 	ldw	r8,244(sp)
    2544:	103c200e 	bge	r2,zero,15c8 <__alt_data_end+0xfffe21c8>
    2548:	0005883a 	mov	r2,zero
    254c:	003c1e06 	br	15c8 <__alt_data_end+0xfffe21c8>
    2550:	d9002d17 	ldw	r4,180(sp)
    2554:	d9801e04 	addi	r6,sp,120
    2558:	b80b883a 	mov	r5,r23
    255c:	00075e40 	call	75e4 <__sprint_r>
    2560:	1039e81e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    2564:	d8c02017 	ldw	r3,128(sp)
    2568:	d8801f17 	ldw	r2,124(sp)
    256c:	da000404 	addi	r8,sp,16
    2570:	d9403317 	ldw	r5,204(sp)
    2574:	10800044 	addi	r2,r2,1
    2578:	44000015 	stw	r16,0(r8)
    257c:	28c7883a 	add	r3,r5,r3
    2580:	003b5b06 	br	12f0 <__alt_data_end+0xfffe1ef0>
    2584:	01000074 	movhi	r4,1
    2588:	213f9c84 	addi	r4,r4,-398
    258c:	d9003515 	stw	r4,212(sp)
    2590:	003af206 	br	115c <__alt_data_end+0xfffe1d5c>
    2594:	013fffc4 	movi	r4,-1
    2598:	003a0806 	br	dbc <__alt_data_end+0xfffe19bc>
    259c:	0023883a 	mov	r17,zero
    25a0:	003d9d06 	br	1c18 <__alt_data_end+0xfffe2818>
    25a4:	d9002d17 	ldw	r4,180(sp)
    25a8:	d9801e04 	addi	r6,sp,120
    25ac:	b80b883a 	mov	r5,r23
    25b0:	00075e40 	call	75e4 <__sprint_r>
    25b4:	1039d31e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    25b8:	d8c02017 	ldw	r3,128(sp)
    25bc:	da000404 	addi	r8,sp,16
    25c0:	003d9406 	br	1c14 <__alt_data_end+0xfffe2814>
    25c4:	01000074 	movhi	r4,1
    25c8:	213f9884 	addi	r4,r4,-414
    25cc:	d9002c15 	stw	r4,176(sp)
    25d0:	d9002c17 	ldw	r4,176(sp)
    25d4:	1c47883a 	add	r3,r3,r17
    25d8:	10800044 	addi	r2,r2,1
    25dc:	41000015 	stw	r4,0(r8)
    25e0:	44400115 	stw	r17,4(r8)
    25e4:	d8c02015 	stw	r3,128(sp)
    25e8:	d8801f15 	stw	r2,124(sp)
    25ec:	010001c4 	movi	r4,7
    25f0:	20bfd716 	blt	r4,r2,2550 <__alt_data_end+0xfffe3150>
    25f4:	42000204 	addi	r8,r8,8
    25f8:	003fdd06 	br	2570 <__alt_data_end+0xfffe3170>
    25fc:	d9002d17 	ldw	r4,180(sp)
    2600:	d9801e04 	addi	r6,sp,120
    2604:	b80b883a 	mov	r5,r23
    2608:	00075e40 	call	75e4 <__sprint_r>
    260c:	1039bd1e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    2610:	d8802617 	ldw	r2,152(sp)
    2614:	d8c02017 	ldw	r3,128(sp)
    2618:	da000404 	addi	r8,sp,16
    261c:	003e1006 	br	1e60 <__alt_data_end+0xfffe2a60>
    2620:	00800044 	movi	r2,1
    2624:	10803fcc 	andi	r2,r2,255
    2628:	00c00044 	movi	r3,1
    262c:	10fa0d26 	beq	r2,r3,e64 <__alt_data_end+0xfffe1a64>
    2630:	00c00084 	movi	r3,2
    2634:	10fbaf26 	beq	r2,r3,14f4 <__alt_data_end+0xfffe20f4>
    2638:	003a6d06 	br	ff0 <__alt_data_end+0xfffe1bf0>
    263c:	01000074 	movhi	r4,1
    2640:	213f9c84 	addi	r4,r4,-398
    2644:	d9003515 	stw	r4,212(sp)
    2648:	003b5406 	br	139c <__alt_data_end+0xfffe1f9c>
    264c:	d8802a17 	ldw	r2,168(sp)
    2650:	00c00184 	movi	r3,6
    2654:	1880012e 	bgeu	r3,r2,265c <___vfprintf_internal_r+0x1d68>
    2658:	1805883a 	mov	r2,r3
    265c:	d8802b15 	stw	r2,172(sp)
    2660:	1000ef16 	blt	r2,zero,2a20 <___vfprintf_internal_r+0x212c>
    2664:	04000074 	movhi	r16,1
    2668:	d8802915 	stw	r2,164(sp)
    266c:	dcc02e15 	stw	r19,184(sp)
    2670:	d8002a15 	stw	zero,168(sp)
    2674:	d8003215 	stw	zero,200(sp)
    2678:	843f9604 	addi	r16,r16,-424
    267c:	0039883a 	mov	fp,zero
    2680:	003a8006 	br	1084 <__alt_data_end+0xfffe1c84>
    2684:	0021883a 	mov	r16,zero
    2688:	003e0706 	br	1ea8 <__alt_data_end+0xfffe2aa8>
    268c:	d9002d17 	ldw	r4,180(sp)
    2690:	d9801e04 	addi	r6,sp,120
    2694:	b80b883a 	mov	r5,r23
    2698:	00075e40 	call	75e4 <__sprint_r>
    269c:	1039991e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    26a0:	d8802617 	ldw	r2,152(sp)
    26a4:	d9403317 	ldw	r5,204(sp)
    26a8:	d8c02017 	ldw	r3,128(sp)
    26ac:	da000404 	addi	r8,sp,16
    26b0:	2885c83a 	sub	r2,r5,r2
    26b4:	003dfb06 	br	1ea4 <__alt_data_end+0xfffe2aa4>
    26b8:	9080004c 	andi	r2,r18,1
    26bc:	103e8f1e 	bne	r2,zero,20fc <__alt_data_end+0xfffe2cfc>
    26c0:	d8802117 	ldw	r2,132(sp)
    26c4:	003e9e06 	br	2140 <__alt_data_end+0xfffe2d40>
    26c8:	1025883a 	mov	r18,r2
    26cc:	0039883a 	mov	fp,zero
    26d0:	00800084 	movi	r2,2
    26d4:	003fd306 	br	2624 <__alt_data_end+0xfffe3224>
    26d8:	07000b44 	movi	fp,45
    26dc:	df002785 	stb	fp,158(sp)
    26e0:	003a1b06 	br	f50 <__alt_data_end+0xfffe1b50>
    26e4:	00c00b44 	movi	r3,45
    26e8:	d8c02785 	stb	r3,158(sp)
    26ec:	d8802915 	stw	r2,164(sp)
    26f0:	dc802c17 	ldw	r18,176(sp)
    26f4:	d8002a15 	stw	zero,168(sp)
    26f8:	07000b44 	movi	fp,45
    26fc:	003a5e06 	br	1078 <__alt_data_end+0xfffe1c78>
    2700:	04000074 	movhi	r16,1
    2704:	843f8b04 	addi	r16,r16,-468
    2708:	003f4706 	br	2428 <__alt_data_end+0xfffe3028>
    270c:	d9002e17 	ldw	r4,184(sp)
    2710:	d9402f17 	ldw	r5,188(sp)
    2714:	20800017 	ldw	r2,0(r4)
    2718:	21000104 	addi	r4,r4,4
    271c:	d9002e15 	stw	r4,184(sp)
    2720:	11400015 	stw	r5,0(r2)
    2724:	0038ab06 	br	9d4 <__alt_data_end+0xfffe15d4>
    2728:	dd802617 	ldw	r22,152(sp)
    272c:	00bfff44 	movi	r2,-3
    2730:	b0801c16 	blt	r22,r2,27a4 <___vfprintf_internal_r+0x1eb0>
    2734:	d9402a17 	ldw	r5,168(sp)
    2738:	2d801a16 	blt	r5,r22,27a4 <___vfprintf_internal_r+0x1eb0>
    273c:	dd803215 	stw	r22,200(sp)
    2740:	003e8906 	br	2168 <__alt_data_end+0xfffe2d68>
    2744:	01000074 	movhi	r4,1
    2748:	213f9884 	addi	r4,r4,-414
    274c:	d9002c15 	stw	r4,176(sp)
    2750:	003c9106 	br	1998 <__alt_data_end+0xfffe2598>
    2754:	e005883a 	mov	r2,fp
    2758:	003e7906 	br	2140 <__alt_data_end+0xfffe2d40>
    275c:	d9002a17 	ldw	r4,168(sp)
    2760:	df002783 	ldbu	fp,158(sp)
    2764:	dcc02e15 	stw	r19,184(sp)
    2768:	d9002915 	stw	r4,164(sp)
    276c:	d9002b15 	stw	r4,172(sp)
    2770:	d8002a15 	stw	zero,168(sp)
    2774:	d8003215 	stw	zero,200(sp)
    2778:	003a3b06 	br	1068 <__alt_data_end+0xfffe1c68>
    277c:	9080004c 	andi	r2,r18,1
    2780:	0039883a 	mov	fp,zero
    2784:	10000426 	beq	r2,zero,2798 <___vfprintf_internal_r+0x1ea4>
    2788:	00800c04 	movi	r2,48
    278c:	dc001dc4 	addi	r16,sp,119
    2790:	d8801dc5 	stb	r2,119(sp)
    2794:	003b6406 	br	1528 <__alt_data_end+0xfffe2128>
    2798:	d8002b15 	stw	zero,172(sp)
    279c:	dc001e04 	addi	r16,sp,120
    27a0:	003a2b06 	br	1050 <__alt_data_end+0xfffe1c50>
    27a4:	8c7fff84 	addi	r17,r17,-2
    27a8:	b5bfffc4 	addi	r22,r22,-1
    27ac:	dd802615 	stw	r22,152(sp)
    27b0:	dc4022c5 	stb	r17,139(sp)
    27b4:	b000bf16 	blt	r22,zero,2ab4 <___vfprintf_internal_r+0x21c0>
    27b8:	00800ac4 	movi	r2,43
    27bc:	d8802305 	stb	r2,140(sp)
    27c0:	00800244 	movi	r2,9
    27c4:	15807016 	blt	r2,r22,2988 <___vfprintf_internal_r+0x2094>
    27c8:	00800c04 	movi	r2,48
    27cc:	b5800c04 	addi	r22,r22,48
    27d0:	d8802345 	stb	r2,141(sp)
    27d4:	dd802385 	stb	r22,142(sp)
    27d8:	d88023c4 	addi	r2,sp,143
    27dc:	df0022c4 	addi	fp,sp,139
    27e0:	d8c03317 	ldw	r3,204(sp)
    27e4:	1739c83a 	sub	fp,r2,fp
    27e8:	d9003317 	ldw	r4,204(sp)
    27ec:	e0c7883a 	add	r3,fp,r3
    27f0:	df003a15 	stw	fp,232(sp)
    27f4:	d8c02b15 	stw	r3,172(sp)
    27f8:	00800044 	movi	r2,1
    27fc:	1100b30e 	bge	r2,r4,2acc <___vfprintf_internal_r+0x21d8>
    2800:	d8c02b17 	ldw	r3,172(sp)
    2804:	18c00044 	addi	r3,r3,1
    2808:	d8c02b15 	stw	r3,172(sp)
    280c:	1805883a 	mov	r2,r3
    2810:	1800ac16 	blt	r3,zero,2ac4 <___vfprintf_internal_r+0x21d0>
    2814:	d8003215 	stw	zero,200(sp)
    2818:	003e5d06 	br	2190 <__alt_data_end+0xfffe2d90>
    281c:	d9002d17 	ldw	r4,180(sp)
    2820:	d9801e04 	addi	r6,sp,120
    2824:	b80b883a 	mov	r5,r23
    2828:	00075e40 	call	75e4 <__sprint_r>
    282c:	1039351e 	bne	r2,zero,d04 <__alt_data_end+0xfffe1904>
    2830:	dc402617 	ldw	r17,152(sp)
    2834:	d8c02017 	ldw	r3,128(sp)
    2838:	d8801f17 	ldw	r2,124(sp)
    283c:	da000404 	addi	r8,sp,16
    2840:	003ed606 	br	239c <__alt_data_end+0xfffe2f9c>
    2844:	182b883a 	mov	r21,r3
    2848:	d8002a15 	stw	zero,168(sp)
    284c:	00388c06 	br	a80 <__alt_data_end+0xfffe1680>
    2850:	d8802a17 	ldw	r2,168(sp)
    2854:	103e071e 	bne	r2,zero,2074 <__alt_data_end+0xfffe2c74>
    2858:	dc002a15 	stw	r16,168(sp)
    285c:	003e0506 	br	2074 <__alt_data_end+0xfffe2c74>
    2860:	d9002a17 	ldw	r4,168(sp)
    2864:	20c00044 	addi	r3,r4,1
    2868:	003e0f06 	br	20a8 <__alt_data_end+0xfffe2ca8>
    286c:	01400184 	movi	r5,6
    2870:	d9402a15 	stw	r5,168(sp)
    2874:	003dff06 	br	2074 <__alt_data_end+0xfffe2c74>
    2878:	d8802104 	addi	r2,sp,132
    287c:	d8800315 	stw	r2,12(sp)
    2880:	d8802504 	addi	r2,sp,148
    2884:	d8800215 	stw	r2,8(sp)
    2888:	d8802604 	addi	r2,sp,152
    288c:	d8800115 	stw	r2,4(sp)
    2890:	d8802a17 	ldw	r2,168(sp)
    2894:	d9403617 	ldw	r5,216(sp)
    2898:	d9002d17 	ldw	r4,180(sp)
    289c:	d8800015 	stw	r2,0(sp)
    28a0:	01c000c4 	movi	r7,3
    28a4:	980d883a 	mov	r6,r19
    28a8:	da003d15 	stw	r8,244(sp)
    28ac:	00030240 	call	3024 <_dtoa_r>
    28b0:	d8c02a17 	ldw	r3,168(sp)
    28b4:	da003d17 	ldw	r8,244(sp)
    28b8:	1021883a 	mov	r16,r2
    28bc:	10f9883a 	add	fp,r2,r3
    28c0:	81000007 	ldb	r4,0(r16)
    28c4:	00800c04 	movi	r2,48
    28c8:	20805e26 	beq	r4,r2,2a44 <___vfprintf_internal_r+0x2150>
    28cc:	d8c02617 	ldw	r3,152(sp)
    28d0:	e0f9883a 	add	fp,fp,r3
    28d4:	003e0a06 	br	2100 <__alt_data_end+0xfffe2d00>
    28d8:	00c00b44 	movi	r3,45
    28dc:	24e0003c 	xorhi	r19,r4,32768
    28e0:	d8c02905 	stb	r3,164(sp)
    28e4:	003de906 	br	208c <__alt_data_end+0xfffe2c8c>
    28e8:	d8c03217 	ldw	r3,200(sp)
    28ec:	00c07a0e 	bge	zero,r3,2ad8 <___vfprintf_internal_r+0x21e4>
    28f0:	00800044 	movi	r2,1
    28f4:	d9003317 	ldw	r4,204(sp)
    28f8:	1105883a 	add	r2,r2,r4
    28fc:	d8802b15 	stw	r2,172(sp)
    2900:	10004e16 	blt	r2,zero,2a3c <___vfprintf_internal_r+0x2148>
    2904:	044019c4 	movi	r17,103
    2908:	003e2106 	br	2190 <__alt_data_end+0xfffe2d90>
    290c:	d9002a17 	ldw	r4,168(sp)
    2910:	d8802104 	addi	r2,sp,132
    2914:	d8800315 	stw	r2,12(sp)
    2918:	d9000015 	stw	r4,0(sp)
    291c:	d8802504 	addi	r2,sp,148
    2920:	d9403617 	ldw	r5,216(sp)
    2924:	d9002d17 	ldw	r4,180(sp)
    2928:	d8800215 	stw	r2,8(sp)
    292c:	d8802604 	addi	r2,sp,152
    2930:	d8800115 	stw	r2,4(sp)
    2934:	01c000c4 	movi	r7,3
    2938:	980d883a 	mov	r6,r19
    293c:	da003d15 	stw	r8,244(sp)
    2940:	00030240 	call	3024 <_dtoa_r>
    2944:	d8c02a17 	ldw	r3,168(sp)
    2948:	da003d17 	ldw	r8,244(sp)
    294c:	1021883a 	mov	r16,r2
    2950:	00801184 	movi	r2,70
    2954:	80f9883a 	add	fp,r16,r3
    2958:	88bfd926 	beq	r17,r2,28c0 <__alt_data_end+0xfffe34c0>
    295c:	003de806 	br	2100 <__alt_data_end+0xfffe2d00>
    2960:	d9002a17 	ldw	r4,168(sp)
    2964:	00c04d0e 	bge	zero,r3,2a9c <___vfprintf_internal_r+0x21a8>
    2968:	2000441e 	bne	r4,zero,2a7c <___vfprintf_internal_r+0x2188>
    296c:	9480004c 	andi	r18,r18,1
    2970:	9000421e 	bne	r18,zero,2a7c <___vfprintf_internal_r+0x2188>
    2974:	1805883a 	mov	r2,r3
    2978:	18006f16 	blt	r3,zero,2b38 <___vfprintf_internal_r+0x2244>
    297c:	d8c03217 	ldw	r3,200(sp)
    2980:	d8c02b15 	stw	r3,172(sp)
    2984:	003e0206 	br	2190 <__alt_data_end+0xfffe2d90>
    2988:	df0022c4 	addi	fp,sp,139
    298c:	dc002a15 	stw	r16,168(sp)
    2990:	4027883a 	mov	r19,r8
    2994:	e021883a 	mov	r16,fp
    2998:	b009883a 	mov	r4,r22
    299c:	01400284 	movi	r5,10
    29a0:	000acf80 	call	acf8 <__modsi3>
    29a4:	10800c04 	addi	r2,r2,48
    29a8:	843fffc4 	addi	r16,r16,-1
    29ac:	b009883a 	mov	r4,r22
    29b0:	01400284 	movi	r5,10
    29b4:	80800005 	stb	r2,0(r16)
    29b8:	000ac740 	call	ac74 <__divsi3>
    29bc:	102d883a 	mov	r22,r2
    29c0:	00800244 	movi	r2,9
    29c4:	15bff416 	blt	r2,r22,2998 <__alt_data_end+0xfffe3598>
    29c8:	9811883a 	mov	r8,r19
    29cc:	b0800c04 	addi	r2,r22,48
    29d0:	8027883a 	mov	r19,r16
    29d4:	997fffc4 	addi	r5,r19,-1
    29d8:	98bfffc5 	stb	r2,-1(r19)
    29dc:	dc002a17 	ldw	r16,168(sp)
    29e0:	2f006d2e 	bgeu	r5,fp,2b98 <___vfprintf_internal_r+0x22a4>
    29e4:	d9c02384 	addi	r7,sp,142
    29e8:	3ccfc83a 	sub	r7,r7,r19
    29ec:	d9002344 	addi	r4,sp,141
    29f0:	e1cf883a 	add	r7,fp,r7
    29f4:	00000106 	br	29fc <___vfprintf_internal_r+0x2108>
    29f8:	28800003 	ldbu	r2,0(r5)
    29fc:	20800005 	stb	r2,0(r4)
    2a00:	21000044 	addi	r4,r4,1
    2a04:	29400044 	addi	r5,r5,1
    2a08:	393ffb1e 	bne	r7,r4,29f8 <__alt_data_end+0xfffe35f8>
    2a0c:	d8802304 	addi	r2,sp,140
    2a10:	14c5c83a 	sub	r2,r2,r19
    2a14:	d8c02344 	addi	r3,sp,141
    2a18:	1885883a 	add	r2,r3,r2
    2a1c:	003f7006 	br	27e0 <__alt_data_end+0xfffe33e0>
    2a20:	0005883a 	mov	r2,zero
    2a24:	003f0f06 	br	2664 <__alt_data_end+0xfffe3264>
    2a28:	d8c03217 	ldw	r3,200(sp)
    2a2c:	18c00044 	addi	r3,r3,1
    2a30:	d8c02b15 	stw	r3,172(sp)
    2a34:	1805883a 	mov	r2,r3
    2a38:	183fb20e 	bge	r3,zero,2904 <__alt_data_end+0xfffe3504>
    2a3c:	0005883a 	mov	r2,zero
    2a40:	003fb006 	br	2904 <__alt_data_end+0xfffe3504>
    2a44:	d9003617 	ldw	r4,216(sp)
    2a48:	000d883a 	mov	r6,zero
    2a4c:	000f883a 	mov	r7,zero
    2a50:	980b883a 	mov	r5,r19
    2a54:	d8c03c15 	stw	r3,240(sp)
    2a58:	da003d15 	stw	r8,244(sp)
    2a5c:	000c0cc0 	call	c0cc <__eqdf2>
    2a60:	d8c03c17 	ldw	r3,240(sp)
    2a64:	da003d17 	ldw	r8,244(sp)
    2a68:	103f9826 	beq	r2,zero,28cc <__alt_data_end+0xfffe34cc>
    2a6c:	00800044 	movi	r2,1
    2a70:	10c7c83a 	sub	r3,r2,r3
    2a74:	d8c02615 	stw	r3,152(sp)
    2a78:	003f9506 	br	28d0 <__alt_data_end+0xfffe34d0>
    2a7c:	d9002a17 	ldw	r4,168(sp)
    2a80:	d8c03217 	ldw	r3,200(sp)
    2a84:	20800044 	addi	r2,r4,1
    2a88:	1885883a 	add	r2,r3,r2
    2a8c:	d8802b15 	stw	r2,172(sp)
    2a90:	103dbf0e 	bge	r2,zero,2190 <__alt_data_end+0xfffe2d90>
    2a94:	0005883a 	mov	r2,zero
    2a98:	003dbd06 	br	2190 <__alt_data_end+0xfffe2d90>
    2a9c:	2000201e 	bne	r4,zero,2b20 <___vfprintf_internal_r+0x222c>
    2aa0:	9480004c 	andi	r18,r18,1
    2aa4:	90001e1e 	bne	r18,zero,2b20 <___vfprintf_internal_r+0x222c>
    2aa8:	00800044 	movi	r2,1
    2aac:	d8802b15 	stw	r2,172(sp)
    2ab0:	003db706 	br	2190 <__alt_data_end+0xfffe2d90>
    2ab4:	00800b44 	movi	r2,45
    2ab8:	05adc83a 	sub	r22,zero,r22
    2abc:	d8802305 	stb	r2,140(sp)
    2ac0:	003f3f06 	br	27c0 <__alt_data_end+0xfffe33c0>
    2ac4:	0005883a 	mov	r2,zero
    2ac8:	003f5206 	br	2814 <__alt_data_end+0xfffe3414>
    2acc:	90a4703a 	and	r18,r18,r2
    2ad0:	903f4e26 	beq	r18,zero,280c <__alt_data_end+0xfffe340c>
    2ad4:	003f4a06 	br	2800 <__alt_data_end+0xfffe3400>
    2ad8:	00800084 	movi	r2,2
    2adc:	10c5c83a 	sub	r2,r2,r3
    2ae0:	003f8406 	br	28f4 <__alt_data_end+0xfffe34f4>
    2ae4:	d9402e17 	ldw	r5,184(sp)
    2ae8:	d9002e17 	ldw	r4,184(sp)
    2aec:	ac400043 	ldbu	r17,1(r21)
    2af0:	29400017 	ldw	r5,0(r5)
    2af4:	20800104 	addi	r2,r4,4
    2af8:	d8802e15 	stw	r2,184(sp)
    2afc:	d9402a15 	stw	r5,168(sp)
    2b00:	182b883a 	mov	r21,r3
    2b04:	283e7b0e 	bge	r5,zero,24f4 <__alt_data_end+0xfffe30f4>
    2b08:	8c403fcc 	andi	r17,r17,255
    2b0c:	017fffc4 	movi	r5,-1
    2b10:	8c40201c 	xori	r17,r17,128
    2b14:	d9402a15 	stw	r5,168(sp)
    2b18:	8c7fe004 	addi	r17,r17,-128
    2b1c:	0037d706 	br	a7c <__alt_data_end+0xfffe167c>
    2b20:	d8c02a17 	ldw	r3,168(sp)
    2b24:	18c00084 	addi	r3,r3,2
    2b28:	d8c02b15 	stw	r3,172(sp)
    2b2c:	1805883a 	mov	r2,r3
    2b30:	183d970e 	bge	r3,zero,2190 <__alt_data_end+0xfffe2d90>
    2b34:	003fd706 	br	2a94 <__alt_data_end+0xfffe3694>
    2b38:	0005883a 	mov	r2,zero
    2b3c:	003f8f06 	br	297c <__alt_data_end+0xfffe357c>
    2b40:	9080004c 	andi	r2,r18,1
    2b44:	103f821e 	bne	r2,zero,2950 <__alt_data_end+0xfffe3550>
    2b48:	d8802117 	ldw	r2,132(sp)
    2b4c:	1405c83a 	sub	r2,r2,r16
    2b50:	d8803315 	stw	r2,204(sp)
    2b54:	b47ef426 	beq	r22,r17,2728 <__alt_data_end+0xfffe3328>
    2b58:	dd802617 	ldw	r22,152(sp)
    2b5c:	003f1206 	br	27a8 <__alt_data_end+0xfffe33a8>
    2b60:	d8c02b03 	ldbu	r3,172(sp)
    2b64:	d8c02785 	stb	r3,158(sp)
    2b68:	0038df06 	br	ee8 <__alt_data_end+0xfffe1ae8>
    2b6c:	d8c02b03 	ldbu	r3,172(sp)
    2b70:	d8c02785 	stb	r3,158(sp)
    2b74:	0038aa06 	br	e20 <__alt_data_end+0xfffe1a20>
    2b78:	d8c02b03 	ldbu	r3,172(sp)
    2b7c:	d8c02785 	stb	r3,158(sp)
    2b80:	003a4306 	br	1490 <__alt_data_end+0xfffe2090>
    2b84:	d8c02b03 	ldbu	r3,172(sp)
    2b88:	d8c02785 	stb	r3,158(sp)
    2b8c:	003af506 	br	1764 <__alt_data_end+0xfffe2364>
    2b90:	0005883a 	mov	r2,zero
    2b94:	003d7b06 	br	2184 <__alt_data_end+0xfffe2d84>
    2b98:	d8802344 	addi	r2,sp,141
    2b9c:	003f1006 	br	27e0 <__alt_data_end+0xfffe33e0>
    2ba0:	d8c02b03 	ldbu	r3,172(sp)
    2ba4:	d8c02785 	stb	r3,158(sp)
    2ba8:	0038fd06 	br	fa0 <__alt_data_end+0xfffe1ba0>
    2bac:	d8c02b03 	ldbu	r3,172(sp)
    2bb0:	d8c02785 	stb	r3,158(sp)
    2bb4:	003a9706 	br	1614 <__alt_data_end+0xfffe2214>
    2bb8:	d8c02b03 	ldbu	r3,172(sp)
    2bbc:	d8c02785 	stb	r3,158(sp)
    2bc0:	003a1806 	br	1424 <__alt_data_end+0xfffe2024>
    2bc4:	d8c02b03 	ldbu	r3,172(sp)
    2bc8:	d8c02785 	stb	r3,158(sp)
    2bcc:	003abe06 	br	16c8 <__alt_data_end+0xfffe22c8>

00002bd0 <__vfprintf_internal>:
    2bd0:	00800074 	movhi	r2,1
    2bd4:	1086f304 	addi	r2,r2,7116
    2bd8:	300f883a 	mov	r7,r6
    2bdc:	280d883a 	mov	r6,r5
    2be0:	200b883a 	mov	r5,r4
    2be4:	11000017 	ldw	r4,0(r2)
    2be8:	00008f41 	jmpi	8f4 <___vfprintf_internal_r>

00002bec <__sbprintf>:
    2bec:	2880030b 	ldhu	r2,12(r5)
    2bf0:	2ac01917 	ldw	r11,100(r5)
    2bf4:	2a80038b 	ldhu	r10,14(r5)
    2bf8:	2a400717 	ldw	r9,28(r5)
    2bfc:	2a000917 	ldw	r8,36(r5)
    2c00:	defee204 	addi	sp,sp,-1144
    2c04:	00c10004 	movi	r3,1024
    2c08:	dc011a15 	stw	r16,1128(sp)
    2c0c:	10bfff4c 	andi	r2,r2,65533
    2c10:	2821883a 	mov	r16,r5
    2c14:	d8cb883a 	add	r5,sp,r3
    2c18:	dc811c15 	stw	r18,1136(sp)
    2c1c:	dc411b15 	stw	r17,1132(sp)
    2c20:	dfc11d15 	stw	ra,1140(sp)
    2c24:	2025883a 	mov	r18,r4
    2c28:	d881030d 	sth	r2,1036(sp)
    2c2c:	dac11915 	stw	r11,1124(sp)
    2c30:	da81038d 	sth	r10,1038(sp)
    2c34:	da410715 	stw	r9,1052(sp)
    2c38:	da010915 	stw	r8,1060(sp)
    2c3c:	dec10015 	stw	sp,1024(sp)
    2c40:	dec10415 	stw	sp,1040(sp)
    2c44:	d8c10215 	stw	r3,1032(sp)
    2c48:	d8c10515 	stw	r3,1044(sp)
    2c4c:	d8010615 	stw	zero,1048(sp)
    2c50:	00008f40 	call	8f4 <___vfprintf_internal_r>
    2c54:	1023883a 	mov	r17,r2
    2c58:	10000416 	blt	r2,zero,2c6c <__sbprintf+0x80>
    2c5c:	d9410004 	addi	r5,sp,1024
    2c60:	9009883a 	mov	r4,r18
    2c64:	00048c80 	call	48c8 <_fflush_r>
    2c68:	10000d1e 	bne	r2,zero,2ca0 <__sbprintf+0xb4>
    2c6c:	d881030b 	ldhu	r2,1036(sp)
    2c70:	1080100c 	andi	r2,r2,64
    2c74:	10000326 	beq	r2,zero,2c84 <__sbprintf+0x98>
    2c78:	8080030b 	ldhu	r2,12(r16)
    2c7c:	10801014 	ori	r2,r2,64
    2c80:	8080030d 	sth	r2,12(r16)
    2c84:	8805883a 	mov	r2,r17
    2c88:	dfc11d17 	ldw	ra,1140(sp)
    2c8c:	dc811c17 	ldw	r18,1136(sp)
    2c90:	dc411b17 	ldw	r17,1132(sp)
    2c94:	dc011a17 	ldw	r16,1128(sp)
    2c98:	dec11e04 	addi	sp,sp,1144
    2c9c:	f800283a 	ret
    2ca0:	047fffc4 	movi	r17,-1
    2ca4:	003ff106 	br	2c6c <__alt_data_end+0xfffe386c>

00002ca8 <__swsetup_r>:
    2ca8:	00800074 	movhi	r2,1
    2cac:	defffd04 	addi	sp,sp,-12
    2cb0:	1086f304 	addi	r2,r2,7116
    2cb4:	dc400115 	stw	r17,4(sp)
    2cb8:	2023883a 	mov	r17,r4
    2cbc:	11000017 	ldw	r4,0(r2)
    2cc0:	dc000015 	stw	r16,0(sp)
    2cc4:	dfc00215 	stw	ra,8(sp)
    2cc8:	2821883a 	mov	r16,r5
    2ccc:	20000226 	beq	r4,zero,2cd8 <__swsetup_r+0x30>
    2cd0:	20800e17 	ldw	r2,56(r4)
    2cd4:	10003126 	beq	r2,zero,2d9c <__swsetup_r+0xf4>
    2cd8:	8080030b 	ldhu	r2,12(r16)
    2cdc:	10c0020c 	andi	r3,r2,8
    2ce0:	1009883a 	mov	r4,r2
    2ce4:	18000f26 	beq	r3,zero,2d24 <__swsetup_r+0x7c>
    2ce8:	80c00417 	ldw	r3,16(r16)
    2cec:	18001526 	beq	r3,zero,2d44 <__swsetup_r+0x9c>
    2cf0:	1100004c 	andi	r4,r2,1
    2cf4:	20001c1e 	bne	r4,zero,2d68 <__swsetup_r+0xc0>
    2cf8:	1080008c 	andi	r2,r2,2
    2cfc:	1000291e 	bne	r2,zero,2da4 <__swsetup_r+0xfc>
    2d00:	80800517 	ldw	r2,20(r16)
    2d04:	80800215 	stw	r2,8(r16)
    2d08:	18001c26 	beq	r3,zero,2d7c <__swsetup_r+0xd4>
    2d0c:	0005883a 	mov	r2,zero
    2d10:	dfc00217 	ldw	ra,8(sp)
    2d14:	dc400117 	ldw	r17,4(sp)
    2d18:	dc000017 	ldw	r16,0(sp)
    2d1c:	dec00304 	addi	sp,sp,12
    2d20:	f800283a 	ret
    2d24:	2080040c 	andi	r2,r4,16
    2d28:	10002e26 	beq	r2,zero,2de4 <__swsetup_r+0x13c>
    2d2c:	2080010c 	andi	r2,r4,4
    2d30:	10001e1e 	bne	r2,zero,2dac <__swsetup_r+0x104>
    2d34:	80c00417 	ldw	r3,16(r16)
    2d38:	20800214 	ori	r2,r4,8
    2d3c:	8080030d 	sth	r2,12(r16)
    2d40:	183feb1e 	bne	r3,zero,2cf0 <__alt_data_end+0xfffe38f0>
    2d44:	1100a00c 	andi	r4,r2,640
    2d48:	01408004 	movi	r5,512
    2d4c:	217fe826 	beq	r4,r5,2cf0 <__alt_data_end+0xfffe38f0>
    2d50:	800b883a 	mov	r5,r16
    2d54:	8809883a 	mov	r4,r17
    2d58:	000539c0 	call	539c <__smakebuf_r>
    2d5c:	8080030b 	ldhu	r2,12(r16)
    2d60:	80c00417 	ldw	r3,16(r16)
    2d64:	003fe206 	br	2cf0 <__alt_data_end+0xfffe38f0>
    2d68:	80800517 	ldw	r2,20(r16)
    2d6c:	80000215 	stw	zero,8(r16)
    2d70:	0085c83a 	sub	r2,zero,r2
    2d74:	80800615 	stw	r2,24(r16)
    2d78:	183fe41e 	bne	r3,zero,2d0c <__alt_data_end+0xfffe390c>
    2d7c:	80c0030b 	ldhu	r3,12(r16)
    2d80:	0005883a 	mov	r2,zero
    2d84:	1900200c 	andi	r4,r3,128
    2d88:	203fe126 	beq	r4,zero,2d10 <__alt_data_end+0xfffe3910>
    2d8c:	18c01014 	ori	r3,r3,64
    2d90:	80c0030d 	sth	r3,12(r16)
    2d94:	00bfffc4 	movi	r2,-1
    2d98:	003fdd06 	br	2d10 <__alt_data_end+0xfffe3910>
    2d9c:	0004cb40 	call	4cb4 <__sinit>
    2da0:	003fcd06 	br	2cd8 <__alt_data_end+0xfffe38d8>
    2da4:	0005883a 	mov	r2,zero
    2da8:	003fd606 	br	2d04 <__alt_data_end+0xfffe3904>
    2dac:	81400c17 	ldw	r5,48(r16)
    2db0:	28000626 	beq	r5,zero,2dcc <__swsetup_r+0x124>
    2db4:	80801004 	addi	r2,r16,64
    2db8:	28800326 	beq	r5,r2,2dc8 <__swsetup_r+0x120>
    2dbc:	8809883a 	mov	r4,r17
    2dc0:	0004e280 	call	4e28 <_free_r>
    2dc4:	8100030b 	ldhu	r4,12(r16)
    2dc8:	80000c15 	stw	zero,48(r16)
    2dcc:	80c00417 	ldw	r3,16(r16)
    2dd0:	00bff6c4 	movi	r2,-37
    2dd4:	1108703a 	and	r4,r2,r4
    2dd8:	80000115 	stw	zero,4(r16)
    2ddc:	80c00015 	stw	r3,0(r16)
    2de0:	003fd506 	br	2d38 <__alt_data_end+0xfffe3938>
    2de4:	00800244 	movi	r2,9
    2de8:	88800015 	stw	r2,0(r17)
    2dec:	20801014 	ori	r2,r4,64
    2df0:	8080030d 	sth	r2,12(r16)
    2df4:	00bfffc4 	movi	r2,-1
    2df8:	003fc506 	br	2d10 <__alt_data_end+0xfffe3910>

00002dfc <quorem>:
    2dfc:	defff204 	addi	sp,sp,-56
    2e00:	ddc00b15 	stw	r23,44(sp)
    2e04:	20800417 	ldw	r2,16(r4)
    2e08:	2dc00417 	ldw	r23,16(r5)
    2e0c:	dfc00d15 	stw	ra,52(sp)
    2e10:	df000c15 	stw	fp,48(sp)
    2e14:	dd800a15 	stw	r22,40(sp)
    2e18:	dd400915 	stw	r21,36(sp)
    2e1c:	dd000815 	stw	r20,32(sp)
    2e20:	dcc00715 	stw	r19,28(sp)
    2e24:	dc800615 	stw	r18,24(sp)
    2e28:	dc400515 	stw	r17,20(sp)
    2e2c:	dc000415 	stw	r16,16(sp)
    2e30:	15c07a16 	blt	r2,r23,301c <quorem+0x220>
    2e34:	bdffffc4 	addi	r23,r23,-1
    2e38:	bde9883a 	add	r20,r23,r23
    2e3c:	28c00504 	addi	r3,r5,20
    2e40:	a529883a 	add	r20,r20,r20
    2e44:	1d39883a 	add	fp,r3,r20
    2e48:	24c00504 	addi	r19,r4,20
    2e4c:	d9400215 	stw	r5,8(sp)
    2e50:	9d29883a 	add	r20,r19,r20
    2e54:	e1400017 	ldw	r5,0(fp)
    2e58:	d9000015 	stw	r4,0(sp)
    2e5c:	a1000017 	ldw	r4,0(r20)
    2e60:	29400044 	addi	r5,r5,1
    2e64:	d8c00115 	stw	r3,4(sp)
    2e68:	dd000315 	stw	r20,12(sp)
    2e6c:	000ad6c0 	call	ad6c <__udivsi3>
    2e70:	1025883a 	mov	r18,r2
    2e74:	10003026 	beq	r2,zero,2f38 <quorem+0x13c>
    2e78:	dc400117 	ldw	r17,4(sp)
    2e7c:	9829883a 	mov	r20,r19
    2e80:	002d883a 	mov	r22,zero
    2e84:	0021883a 	mov	r16,zero
    2e88:	8d400017 	ldw	r21,0(r17)
    2e8c:	900b883a 	mov	r5,r18
    2e90:	8c400104 	addi	r17,r17,4
    2e94:	a93fffcc 	andi	r4,r21,65535
    2e98:	000ae280 	call	ae28 <__mulsi3>
    2e9c:	a808d43a 	srli	r4,r21,16
    2ea0:	900b883a 	mov	r5,r18
    2ea4:	15ad883a 	add	r22,r2,r22
    2ea8:	000ae280 	call	ae28 <__mulsi3>
    2eac:	a1000017 	ldw	r4,0(r20)
    2eb0:	b00cd43a 	srli	r6,r22,16
    2eb4:	b0ffffcc 	andi	r3,r22,65535
    2eb8:	217fffcc 	andi	r5,r4,65535
    2ebc:	2c21883a 	add	r16,r5,r16
    2ec0:	80c7c83a 	sub	r3,r16,r3
    2ec4:	2008d43a 	srli	r4,r4,16
    2ec8:	1185883a 	add	r2,r2,r6
    2ecc:	1821d43a 	srai	r16,r3,16
    2ed0:	117fffcc 	andi	r5,r2,65535
    2ed4:	2149c83a 	sub	r4,r4,r5
    2ed8:	2421883a 	add	r16,r4,r16
    2edc:	8008943a 	slli	r4,r16,16
    2ee0:	18ffffcc 	andi	r3,r3,65535
    2ee4:	102cd43a 	srli	r22,r2,16
    2ee8:	20c8b03a 	or	r4,r4,r3
    2eec:	a1000015 	stw	r4,0(r20)
    2ef0:	8021d43a 	srai	r16,r16,16
    2ef4:	a5000104 	addi	r20,r20,4
    2ef8:	e47fe32e 	bgeu	fp,r17,2e88 <__alt_data_end+0xfffe3a88>
    2efc:	d8c00317 	ldw	r3,12(sp)
    2f00:	18800017 	ldw	r2,0(r3)
    2f04:	10000c1e 	bne	r2,zero,2f38 <quorem+0x13c>
    2f08:	18bfff04 	addi	r2,r3,-4
    2f0c:	9880082e 	bgeu	r19,r2,2f30 <quorem+0x134>
    2f10:	18ffff17 	ldw	r3,-4(r3)
    2f14:	18000326 	beq	r3,zero,2f24 <quorem+0x128>
    2f18:	00000506 	br	2f30 <quorem+0x134>
    2f1c:	10c00017 	ldw	r3,0(r2)
    2f20:	1800031e 	bne	r3,zero,2f30 <quorem+0x134>
    2f24:	10bfff04 	addi	r2,r2,-4
    2f28:	bdffffc4 	addi	r23,r23,-1
    2f2c:	98bffb36 	bltu	r19,r2,2f1c <__alt_data_end+0xfffe3b1c>
    2f30:	d8c00017 	ldw	r3,0(sp)
    2f34:	1dc00415 	stw	r23,16(r3)
    2f38:	d9400217 	ldw	r5,8(sp)
    2f3c:	d9000017 	ldw	r4,0(sp)
    2f40:	0006a3c0 	call	6a3c <__mcmp>
    2f44:	10002816 	blt	r2,zero,2fe8 <quorem+0x1ec>
    2f48:	dc400117 	ldw	r17,4(sp)
    2f4c:	94800044 	addi	r18,r18,1
    2f50:	980d883a 	mov	r6,r19
    2f54:	0007883a 	mov	r3,zero
    2f58:	31000017 	ldw	r4,0(r6)
    2f5c:	89400017 	ldw	r5,0(r17)
    2f60:	31800104 	addi	r6,r6,4
    2f64:	20bfffcc 	andi	r2,r4,65535
    2f68:	10c7883a 	add	r3,r2,r3
    2f6c:	28bfffcc 	andi	r2,r5,65535
    2f70:	1885c83a 	sub	r2,r3,r2
    2f74:	280ad43a 	srli	r5,r5,16
    2f78:	2008d43a 	srli	r4,r4,16
    2f7c:	1007d43a 	srai	r3,r2,16
    2f80:	10bfffcc 	andi	r2,r2,65535
    2f84:	2149c83a 	sub	r4,r4,r5
    2f88:	20c9883a 	add	r4,r4,r3
    2f8c:	200a943a 	slli	r5,r4,16
    2f90:	8c400104 	addi	r17,r17,4
    2f94:	2007d43a 	srai	r3,r4,16
    2f98:	2884b03a 	or	r2,r5,r2
    2f9c:	30bfff15 	stw	r2,-4(r6)
    2fa0:	e47fed2e 	bgeu	fp,r17,2f58 <__alt_data_end+0xfffe3b58>
    2fa4:	bdc5883a 	add	r2,r23,r23
    2fa8:	1085883a 	add	r2,r2,r2
    2fac:	9887883a 	add	r3,r19,r2
    2fb0:	18800017 	ldw	r2,0(r3)
    2fb4:	10000c1e 	bne	r2,zero,2fe8 <quorem+0x1ec>
    2fb8:	18bfff04 	addi	r2,r3,-4
    2fbc:	9880082e 	bgeu	r19,r2,2fe0 <quorem+0x1e4>
    2fc0:	18ffff17 	ldw	r3,-4(r3)
    2fc4:	18000326 	beq	r3,zero,2fd4 <quorem+0x1d8>
    2fc8:	00000506 	br	2fe0 <quorem+0x1e4>
    2fcc:	10c00017 	ldw	r3,0(r2)
    2fd0:	1800031e 	bne	r3,zero,2fe0 <quorem+0x1e4>
    2fd4:	10bfff04 	addi	r2,r2,-4
    2fd8:	bdffffc4 	addi	r23,r23,-1
    2fdc:	98bffb36 	bltu	r19,r2,2fcc <__alt_data_end+0xfffe3bcc>
    2fe0:	d8c00017 	ldw	r3,0(sp)
    2fe4:	1dc00415 	stw	r23,16(r3)
    2fe8:	9005883a 	mov	r2,r18
    2fec:	dfc00d17 	ldw	ra,52(sp)
    2ff0:	df000c17 	ldw	fp,48(sp)
    2ff4:	ddc00b17 	ldw	r23,44(sp)
    2ff8:	dd800a17 	ldw	r22,40(sp)
    2ffc:	dd400917 	ldw	r21,36(sp)
    3000:	dd000817 	ldw	r20,32(sp)
    3004:	dcc00717 	ldw	r19,28(sp)
    3008:	dc800617 	ldw	r18,24(sp)
    300c:	dc400517 	ldw	r17,20(sp)
    3010:	dc000417 	ldw	r16,16(sp)
    3014:	dec00e04 	addi	sp,sp,56
    3018:	f800283a 	ret
    301c:	0005883a 	mov	r2,zero
    3020:	003ff206 	br	2fec <__alt_data_end+0xfffe3bec>

00003024 <_dtoa_r>:
    3024:	20801017 	ldw	r2,64(r4)
    3028:	deffde04 	addi	sp,sp,-136
    302c:	df002015 	stw	fp,128(sp)
    3030:	dcc01b15 	stw	r19,108(sp)
    3034:	dc801a15 	stw	r18,104(sp)
    3038:	dc401915 	stw	r17,100(sp)
    303c:	dc001815 	stw	r16,96(sp)
    3040:	dfc02115 	stw	ra,132(sp)
    3044:	ddc01f15 	stw	r23,124(sp)
    3048:	dd801e15 	stw	r22,120(sp)
    304c:	dd401d15 	stw	r21,116(sp)
    3050:	dd001c15 	stw	r20,112(sp)
    3054:	d9c00315 	stw	r7,12(sp)
    3058:	2039883a 	mov	fp,r4
    305c:	3023883a 	mov	r17,r6
    3060:	2825883a 	mov	r18,r5
    3064:	dc002417 	ldw	r16,144(sp)
    3068:	3027883a 	mov	r19,r6
    306c:	10000826 	beq	r2,zero,3090 <_dtoa_r+0x6c>
    3070:	21801117 	ldw	r6,68(r4)
    3074:	00c00044 	movi	r3,1
    3078:	100b883a 	mov	r5,r2
    307c:	1986983a 	sll	r3,r3,r6
    3080:	11800115 	stw	r6,4(r2)
    3084:	10c00215 	stw	r3,8(r2)
    3088:	00061600 	call	6160 <_Bfree>
    308c:	e0001015 	stw	zero,64(fp)
    3090:	88002e16 	blt	r17,zero,314c <_dtoa_r+0x128>
    3094:	80000015 	stw	zero,0(r16)
    3098:	889ffc2c 	andhi	r2,r17,32752
    309c:	00dffc34 	movhi	r3,32752
    30a0:	10c01c26 	beq	r2,r3,3114 <_dtoa_r+0xf0>
    30a4:	000d883a 	mov	r6,zero
    30a8:	000f883a 	mov	r7,zero
    30ac:	9009883a 	mov	r4,r18
    30b0:	980b883a 	mov	r5,r19
    30b4:	000c0cc0 	call	c0cc <__eqdf2>
    30b8:	10002b1e 	bne	r2,zero,3168 <_dtoa_r+0x144>
    30bc:	d9c02317 	ldw	r7,140(sp)
    30c0:	00800044 	movi	r2,1
    30c4:	38800015 	stw	r2,0(r7)
    30c8:	d8802517 	ldw	r2,148(sp)
    30cc:	10019e26 	beq	r2,zero,3748 <_dtoa_r+0x724>
    30d0:	d8c02517 	ldw	r3,148(sp)
    30d4:	00800074 	movhi	r2,1
    30d8:	10bf9844 	addi	r2,r2,-415
    30dc:	18800015 	stw	r2,0(r3)
    30e0:	10bfffc4 	addi	r2,r2,-1
    30e4:	dfc02117 	ldw	ra,132(sp)
    30e8:	df002017 	ldw	fp,128(sp)
    30ec:	ddc01f17 	ldw	r23,124(sp)
    30f0:	dd801e17 	ldw	r22,120(sp)
    30f4:	dd401d17 	ldw	r21,116(sp)
    30f8:	dd001c17 	ldw	r20,112(sp)
    30fc:	dcc01b17 	ldw	r19,108(sp)
    3100:	dc801a17 	ldw	r18,104(sp)
    3104:	dc401917 	ldw	r17,100(sp)
    3108:	dc001817 	ldw	r16,96(sp)
    310c:	dec02204 	addi	sp,sp,136
    3110:	f800283a 	ret
    3114:	d8c02317 	ldw	r3,140(sp)
    3118:	0089c3c4 	movi	r2,9999
    311c:	18800015 	stw	r2,0(r3)
    3120:	90017726 	beq	r18,zero,3700 <_dtoa_r+0x6dc>
    3124:	00800074 	movhi	r2,1
    3128:	10bfa404 	addi	r2,r2,-368
    312c:	d9002517 	ldw	r4,148(sp)
    3130:	203fec26 	beq	r4,zero,30e4 <__alt_data_end+0xfffe3ce4>
    3134:	10c000c7 	ldb	r3,3(r2)
    3138:	1801781e 	bne	r3,zero,371c <_dtoa_r+0x6f8>
    313c:	10c000c4 	addi	r3,r2,3
    3140:	d9802517 	ldw	r6,148(sp)
    3144:	30c00015 	stw	r3,0(r6)
    3148:	003fe606 	br	30e4 <__alt_data_end+0xfffe3ce4>
    314c:	04e00034 	movhi	r19,32768
    3150:	9cffffc4 	addi	r19,r19,-1
    3154:	00800044 	movi	r2,1
    3158:	8ce6703a 	and	r19,r17,r19
    315c:	80800015 	stw	r2,0(r16)
    3160:	9823883a 	mov	r17,r19
    3164:	003fcc06 	br	3098 <__alt_data_end+0xfffe3c98>
    3168:	d8800204 	addi	r2,sp,8
    316c:	d8800015 	stw	r2,0(sp)
    3170:	d9c00104 	addi	r7,sp,4
    3174:	900b883a 	mov	r5,r18
    3178:	980d883a 	mov	r6,r19
    317c:	e009883a 	mov	r4,fp
    3180:	8820d53a 	srli	r16,r17,20
    3184:	0006e080 	call	6e08 <__d2b>
    3188:	d8800915 	stw	r2,36(sp)
    318c:	8001651e 	bne	r16,zero,3724 <_dtoa_r+0x700>
    3190:	dd800217 	ldw	r22,8(sp)
    3194:	dc000117 	ldw	r16,4(sp)
    3198:	00800804 	movi	r2,32
    319c:	b421883a 	add	r16,r22,r16
    31a0:	80c10c84 	addi	r3,r16,1074
    31a4:	10c2d10e 	bge	r2,r3,3cec <_dtoa_r+0xcc8>
    31a8:	00801004 	movi	r2,64
    31ac:	81010484 	addi	r4,r16,1042
    31b0:	10c7c83a 	sub	r3,r2,r3
    31b4:	9108d83a 	srl	r4,r18,r4
    31b8:	88e2983a 	sll	r17,r17,r3
    31bc:	2448b03a 	or	r4,r4,r17
    31c0:	000d5e80 	call	d5e8 <__floatunsidf>
    31c4:	017f8434 	movhi	r5,65040
    31c8:	01800044 	movi	r6,1
    31cc:	1009883a 	mov	r4,r2
    31d0:	194b883a 	add	r5,r3,r5
    31d4:	843fffc4 	addi	r16,r16,-1
    31d8:	d9801115 	stw	r6,68(sp)
    31dc:	000d883a 	mov	r6,zero
    31e0:	01cffe34 	movhi	r7,16376
    31e4:	000cb900 	call	cb90 <__subdf3>
    31e8:	0198dbf4 	movhi	r6,25455
    31ec:	01cff4f4 	movhi	r7,16339
    31f0:	3190d844 	addi	r6,r6,17249
    31f4:	39e1e9c4 	addi	r7,r7,-30809
    31f8:	1009883a 	mov	r4,r2
    31fc:	180b883a 	mov	r5,r3
    3200:	000c3240 	call	c324 <__muldf3>
    3204:	01a2d874 	movhi	r6,35681
    3208:	01cff1f4 	movhi	r7,16327
    320c:	31b22cc4 	addi	r6,r6,-14157
    3210:	39e28a04 	addi	r7,r7,-30168
    3214:	180b883a 	mov	r5,r3
    3218:	1009883a 	mov	r4,r2
    321c:	000ae500 	call	ae50 <__adddf3>
    3220:	8009883a 	mov	r4,r16
    3224:	1029883a 	mov	r20,r2
    3228:	1823883a 	mov	r17,r3
    322c:	000d50c0 	call	d50c <__floatsidf>
    3230:	019427f4 	movhi	r6,20639
    3234:	01cff4f4 	movhi	r7,16339
    3238:	319e7ec4 	addi	r6,r6,31227
    323c:	39d104c4 	addi	r7,r7,17427
    3240:	1009883a 	mov	r4,r2
    3244:	180b883a 	mov	r5,r3
    3248:	000c3240 	call	c324 <__muldf3>
    324c:	100d883a 	mov	r6,r2
    3250:	180f883a 	mov	r7,r3
    3254:	a009883a 	mov	r4,r20
    3258:	880b883a 	mov	r5,r17
    325c:	000ae500 	call	ae50 <__adddf3>
    3260:	1009883a 	mov	r4,r2
    3264:	180b883a 	mov	r5,r3
    3268:	1029883a 	mov	r20,r2
    326c:	1823883a 	mov	r17,r3
    3270:	000d48c0 	call	d48c <__fixdfsi>
    3274:	000d883a 	mov	r6,zero
    3278:	000f883a 	mov	r7,zero
    327c:	a009883a 	mov	r4,r20
    3280:	880b883a 	mov	r5,r17
    3284:	d8800515 	stw	r2,20(sp)
    3288:	000c2300 	call	c230 <__ledf2>
    328c:	10028716 	blt	r2,zero,3cac <_dtoa_r+0xc88>
    3290:	d8c00517 	ldw	r3,20(sp)
    3294:	00800584 	movi	r2,22
    3298:	10c27536 	bltu	r2,r3,3c70 <_dtoa_r+0xc4c>
    329c:	180490fa 	slli	r2,r3,3
    32a0:	00c00074 	movhi	r3,1
    32a4:	18ffc004 	addi	r3,r3,-256
    32a8:	1885883a 	add	r2,r3,r2
    32ac:	11000017 	ldw	r4,0(r2)
    32b0:	11400117 	ldw	r5,4(r2)
    32b4:	900d883a 	mov	r6,r18
    32b8:	980f883a 	mov	r7,r19
    32bc:	000c1540 	call	c154 <__gedf2>
    32c0:	00828d0e 	bge	zero,r2,3cf8 <_dtoa_r+0xcd4>
    32c4:	d9000517 	ldw	r4,20(sp)
    32c8:	d8000e15 	stw	zero,56(sp)
    32cc:	213fffc4 	addi	r4,r4,-1
    32d0:	d9000515 	stw	r4,20(sp)
    32d4:	b42dc83a 	sub	r22,r22,r16
    32d8:	b5bfffc4 	addi	r22,r22,-1
    32dc:	b0026f16 	blt	r22,zero,3c9c <_dtoa_r+0xc78>
    32e0:	d8000815 	stw	zero,32(sp)
    32e4:	d9c00517 	ldw	r7,20(sp)
    32e8:	38026416 	blt	r7,zero,3c7c <_dtoa_r+0xc58>
    32ec:	b1ed883a 	add	r22,r22,r7
    32f0:	d9c00d15 	stw	r7,52(sp)
    32f4:	d8000a15 	stw	zero,40(sp)
    32f8:	d9800317 	ldw	r6,12(sp)
    32fc:	00800244 	movi	r2,9
    3300:	11811436 	bltu	r2,r6,3754 <_dtoa_r+0x730>
    3304:	00800144 	movi	r2,5
    3308:	1184e10e 	bge	r2,r6,4690 <_dtoa_r+0x166c>
    330c:	31bfff04 	addi	r6,r6,-4
    3310:	d9800315 	stw	r6,12(sp)
    3314:	0023883a 	mov	r17,zero
    3318:	d9800317 	ldw	r6,12(sp)
    331c:	008000c4 	movi	r2,3
    3320:	30836726 	beq	r6,r2,40c0 <_dtoa_r+0x109c>
    3324:	1183410e 	bge	r2,r6,402c <_dtoa_r+0x1008>
    3328:	d9c00317 	ldw	r7,12(sp)
    332c:	00800104 	movi	r2,4
    3330:	38827c26 	beq	r7,r2,3d24 <_dtoa_r+0xd00>
    3334:	00800144 	movi	r2,5
    3338:	3884c41e 	bne	r7,r2,464c <_dtoa_r+0x1628>
    333c:	00800044 	movi	r2,1
    3340:	d8800b15 	stw	r2,44(sp)
    3344:	d8c00517 	ldw	r3,20(sp)
    3348:	d9002217 	ldw	r4,136(sp)
    334c:	1907883a 	add	r3,r3,r4
    3350:	19800044 	addi	r6,r3,1
    3354:	d8c00c15 	stw	r3,48(sp)
    3358:	d9800615 	stw	r6,24(sp)
    335c:	0183a40e 	bge	zero,r6,41f0 <_dtoa_r+0x11cc>
    3360:	d9800617 	ldw	r6,24(sp)
    3364:	3021883a 	mov	r16,r6
    3368:	e0001115 	stw	zero,68(fp)
    336c:	008005c4 	movi	r2,23
    3370:	1184c92e 	bgeu	r2,r6,4698 <_dtoa_r+0x1674>
    3374:	00c00044 	movi	r3,1
    3378:	00800104 	movi	r2,4
    337c:	1085883a 	add	r2,r2,r2
    3380:	11000504 	addi	r4,r2,20
    3384:	180b883a 	mov	r5,r3
    3388:	18c00044 	addi	r3,r3,1
    338c:	313ffb2e 	bgeu	r6,r4,337c <__alt_data_end+0xfffe3f7c>
    3390:	e1401115 	stw	r5,68(fp)
    3394:	e009883a 	mov	r4,fp
    3398:	00060b80 	call	60b8 <_Balloc>
    339c:	d8800715 	stw	r2,28(sp)
    33a0:	e0801015 	stw	r2,64(fp)
    33a4:	00800384 	movi	r2,14
    33a8:	1400f736 	bltu	r2,r16,3788 <_dtoa_r+0x764>
    33ac:	8800f626 	beq	r17,zero,3788 <_dtoa_r+0x764>
    33b0:	d9c00517 	ldw	r7,20(sp)
    33b4:	01c39a0e 	bge	zero,r7,4220 <_dtoa_r+0x11fc>
    33b8:	388003cc 	andi	r2,r7,15
    33bc:	100490fa 	slli	r2,r2,3
    33c0:	382bd13a 	srai	r21,r7,4
    33c4:	00c00074 	movhi	r3,1
    33c8:	18ffc004 	addi	r3,r3,-256
    33cc:	1885883a 	add	r2,r3,r2
    33d0:	a8c0040c 	andi	r3,r21,16
    33d4:	12400017 	ldw	r9,0(r2)
    33d8:	12000117 	ldw	r8,4(r2)
    33dc:	18037926 	beq	r3,zero,41c4 <_dtoa_r+0x11a0>
    33e0:	00800074 	movhi	r2,1
    33e4:	10bfb604 	addi	r2,r2,-296
    33e8:	11800817 	ldw	r6,32(r2)
    33ec:	11c00917 	ldw	r7,36(r2)
    33f0:	9009883a 	mov	r4,r18
    33f4:	980b883a 	mov	r5,r19
    33f8:	da001715 	stw	r8,92(sp)
    33fc:	da401615 	stw	r9,88(sp)
    3400:	000b6fc0 	call	b6fc <__divdf3>
    3404:	da001717 	ldw	r8,92(sp)
    3408:	da401617 	ldw	r9,88(sp)
    340c:	ad4003cc 	andi	r21,r21,15
    3410:	040000c4 	movi	r16,3
    3414:	1023883a 	mov	r17,r2
    3418:	1829883a 	mov	r20,r3
    341c:	a8001126 	beq	r21,zero,3464 <_dtoa_r+0x440>
    3420:	05c00074 	movhi	r23,1
    3424:	bdffb604 	addi	r23,r23,-296
    3428:	4805883a 	mov	r2,r9
    342c:	4007883a 	mov	r3,r8
    3430:	a980004c 	andi	r6,r21,1
    3434:	1009883a 	mov	r4,r2
    3438:	a82bd07a 	srai	r21,r21,1
    343c:	180b883a 	mov	r5,r3
    3440:	30000426 	beq	r6,zero,3454 <_dtoa_r+0x430>
    3444:	b9800017 	ldw	r6,0(r23)
    3448:	b9c00117 	ldw	r7,4(r23)
    344c:	84000044 	addi	r16,r16,1
    3450:	000c3240 	call	c324 <__muldf3>
    3454:	bdc00204 	addi	r23,r23,8
    3458:	a83ff51e 	bne	r21,zero,3430 <__alt_data_end+0xfffe4030>
    345c:	1013883a 	mov	r9,r2
    3460:	1811883a 	mov	r8,r3
    3464:	480d883a 	mov	r6,r9
    3468:	400f883a 	mov	r7,r8
    346c:	8809883a 	mov	r4,r17
    3470:	a00b883a 	mov	r5,r20
    3474:	000b6fc0 	call	b6fc <__divdf3>
    3478:	d8800f15 	stw	r2,60(sp)
    347c:	d8c01015 	stw	r3,64(sp)
    3480:	d8c00e17 	ldw	r3,56(sp)
    3484:	18000626 	beq	r3,zero,34a0 <_dtoa_r+0x47c>
    3488:	d9000f17 	ldw	r4,60(sp)
    348c:	d9401017 	ldw	r5,64(sp)
    3490:	000d883a 	mov	r6,zero
    3494:	01cffc34 	movhi	r7,16368
    3498:	000c2300 	call	c230 <__ledf2>
    349c:	10040b16 	blt	r2,zero,44cc <_dtoa_r+0x14a8>
    34a0:	8009883a 	mov	r4,r16
    34a4:	000d50c0 	call	d50c <__floatsidf>
    34a8:	d9800f17 	ldw	r6,60(sp)
    34ac:	d9c01017 	ldw	r7,64(sp)
    34b0:	1009883a 	mov	r4,r2
    34b4:	180b883a 	mov	r5,r3
    34b8:	000c3240 	call	c324 <__muldf3>
    34bc:	000d883a 	mov	r6,zero
    34c0:	01d00734 	movhi	r7,16412
    34c4:	1009883a 	mov	r4,r2
    34c8:	180b883a 	mov	r5,r3
    34cc:	000ae500 	call	ae50 <__adddf3>
    34d0:	1021883a 	mov	r16,r2
    34d4:	d8800617 	ldw	r2,24(sp)
    34d8:	047f3034 	movhi	r17,64704
    34dc:	1c63883a 	add	r17,r3,r17
    34e0:	10031826 	beq	r2,zero,4144 <_dtoa_r+0x1120>
    34e4:	d8c00517 	ldw	r3,20(sp)
    34e8:	db000617 	ldw	r12,24(sp)
    34ec:	d8c01315 	stw	r3,76(sp)
    34f0:	d9000b17 	ldw	r4,44(sp)
    34f4:	20038f26 	beq	r4,zero,4334 <_dtoa_r+0x1310>
    34f8:	60bfffc4 	addi	r2,r12,-1
    34fc:	100490fa 	slli	r2,r2,3
    3500:	00c00074 	movhi	r3,1
    3504:	18ffc004 	addi	r3,r3,-256
    3508:	1885883a 	add	r2,r3,r2
    350c:	11800017 	ldw	r6,0(r2)
    3510:	11c00117 	ldw	r7,4(r2)
    3514:	d8800717 	ldw	r2,28(sp)
    3518:	0009883a 	mov	r4,zero
    351c:	014ff834 	movhi	r5,16352
    3520:	db001615 	stw	r12,88(sp)
    3524:	15c00044 	addi	r23,r2,1
    3528:	000b6fc0 	call	b6fc <__divdf3>
    352c:	800d883a 	mov	r6,r16
    3530:	880f883a 	mov	r7,r17
    3534:	1009883a 	mov	r4,r2
    3538:	180b883a 	mov	r5,r3
    353c:	000cb900 	call	cb90 <__subdf3>
    3540:	d9401017 	ldw	r5,64(sp)
    3544:	d9000f17 	ldw	r4,60(sp)
    3548:	102b883a 	mov	r21,r2
    354c:	d8c01215 	stw	r3,72(sp)
    3550:	000d48c0 	call	d48c <__fixdfsi>
    3554:	1009883a 	mov	r4,r2
    3558:	1029883a 	mov	r20,r2
    355c:	000d50c0 	call	d50c <__floatsidf>
    3560:	d9000f17 	ldw	r4,60(sp)
    3564:	d9401017 	ldw	r5,64(sp)
    3568:	100d883a 	mov	r6,r2
    356c:	180f883a 	mov	r7,r3
    3570:	000cb900 	call	cb90 <__subdf3>
    3574:	1823883a 	mov	r17,r3
    3578:	d8c00717 	ldw	r3,28(sp)
    357c:	d9401217 	ldw	r5,72(sp)
    3580:	a2000c04 	addi	r8,r20,48
    3584:	1021883a 	mov	r16,r2
    3588:	1a000005 	stb	r8,0(r3)
    358c:	800d883a 	mov	r6,r16
    3590:	880f883a 	mov	r7,r17
    3594:	a809883a 	mov	r4,r21
    3598:	4029883a 	mov	r20,r8
    359c:	000c1540 	call	c154 <__gedf2>
    35a0:	00841d16 	blt	zero,r2,4618 <_dtoa_r+0x15f4>
    35a4:	800d883a 	mov	r6,r16
    35a8:	880f883a 	mov	r7,r17
    35ac:	0009883a 	mov	r4,zero
    35b0:	014ffc34 	movhi	r5,16368
    35b4:	000cb900 	call	cb90 <__subdf3>
    35b8:	d9401217 	ldw	r5,72(sp)
    35bc:	100d883a 	mov	r6,r2
    35c0:	180f883a 	mov	r7,r3
    35c4:	a809883a 	mov	r4,r21
    35c8:	000c1540 	call	c154 <__gedf2>
    35cc:	db001617 	ldw	r12,88(sp)
    35d0:	00840e16 	blt	zero,r2,460c <_dtoa_r+0x15e8>
    35d4:	00800044 	movi	r2,1
    35d8:	13006b0e 	bge	r2,r12,3788 <_dtoa_r+0x764>
    35dc:	d9000717 	ldw	r4,28(sp)
    35e0:	dd800f15 	stw	r22,60(sp)
    35e4:	dcc01015 	stw	r19,64(sp)
    35e8:	2319883a 	add	r12,r4,r12
    35ec:	dcc01217 	ldw	r19,72(sp)
    35f0:	602d883a 	mov	r22,r12
    35f4:	dc801215 	stw	r18,72(sp)
    35f8:	b825883a 	mov	r18,r23
    35fc:	00000906 	br	3624 <_dtoa_r+0x600>
    3600:	000cb900 	call	cb90 <__subdf3>
    3604:	a80d883a 	mov	r6,r21
    3608:	980f883a 	mov	r7,r19
    360c:	1009883a 	mov	r4,r2
    3610:	180b883a 	mov	r5,r3
    3614:	000c2300 	call	c230 <__ledf2>
    3618:	1003e816 	blt	r2,zero,45bc <_dtoa_r+0x1598>
    361c:	b825883a 	mov	r18,r23
    3620:	bd83e926 	beq	r23,r22,45c8 <_dtoa_r+0x15a4>
    3624:	a809883a 	mov	r4,r21
    3628:	980b883a 	mov	r5,r19
    362c:	000d883a 	mov	r6,zero
    3630:	01d00934 	movhi	r7,16420
    3634:	000c3240 	call	c324 <__muldf3>
    3638:	000d883a 	mov	r6,zero
    363c:	01d00934 	movhi	r7,16420
    3640:	8009883a 	mov	r4,r16
    3644:	880b883a 	mov	r5,r17
    3648:	102b883a 	mov	r21,r2
    364c:	1827883a 	mov	r19,r3
    3650:	000c3240 	call	c324 <__muldf3>
    3654:	180b883a 	mov	r5,r3
    3658:	1009883a 	mov	r4,r2
    365c:	1821883a 	mov	r16,r3
    3660:	1023883a 	mov	r17,r2
    3664:	000d48c0 	call	d48c <__fixdfsi>
    3668:	1009883a 	mov	r4,r2
    366c:	1029883a 	mov	r20,r2
    3670:	000d50c0 	call	d50c <__floatsidf>
    3674:	8809883a 	mov	r4,r17
    3678:	800b883a 	mov	r5,r16
    367c:	100d883a 	mov	r6,r2
    3680:	180f883a 	mov	r7,r3
    3684:	000cb900 	call	cb90 <__subdf3>
    3688:	a5000c04 	addi	r20,r20,48
    368c:	a80d883a 	mov	r6,r21
    3690:	980f883a 	mov	r7,r19
    3694:	1009883a 	mov	r4,r2
    3698:	180b883a 	mov	r5,r3
    369c:	95000005 	stb	r20,0(r18)
    36a0:	1021883a 	mov	r16,r2
    36a4:	1823883a 	mov	r17,r3
    36a8:	000c2300 	call	c230 <__ledf2>
    36ac:	bdc00044 	addi	r23,r23,1
    36b0:	800d883a 	mov	r6,r16
    36b4:	880f883a 	mov	r7,r17
    36b8:	0009883a 	mov	r4,zero
    36bc:	014ffc34 	movhi	r5,16368
    36c0:	103fcf0e 	bge	r2,zero,3600 <__alt_data_end+0xfffe4200>
    36c4:	d8c01317 	ldw	r3,76(sp)
    36c8:	d8c00515 	stw	r3,20(sp)
    36cc:	d9400917 	ldw	r5,36(sp)
    36d0:	e009883a 	mov	r4,fp
    36d4:	00061600 	call	6160 <_Bfree>
    36d8:	d9000517 	ldw	r4,20(sp)
    36dc:	d9802317 	ldw	r6,140(sp)
    36e0:	d9c02517 	ldw	r7,148(sp)
    36e4:	b8000005 	stb	zero,0(r23)
    36e8:	20800044 	addi	r2,r4,1
    36ec:	30800015 	stw	r2,0(r6)
    36f0:	3802aa26 	beq	r7,zero,419c <_dtoa_r+0x1178>
    36f4:	3dc00015 	stw	r23,0(r7)
    36f8:	d8800717 	ldw	r2,28(sp)
    36fc:	003e7906 	br	30e4 <__alt_data_end+0xfffe3ce4>
    3700:	00800434 	movhi	r2,16
    3704:	10bfffc4 	addi	r2,r2,-1
    3708:	88a2703a 	and	r17,r17,r2
    370c:	883e851e 	bne	r17,zero,3124 <__alt_data_end+0xfffe3d24>
    3710:	00800074 	movhi	r2,1
    3714:	10bfa104 	addi	r2,r2,-380
    3718:	003e8406 	br	312c <__alt_data_end+0xfffe3d2c>
    371c:	10c00204 	addi	r3,r2,8
    3720:	003e8706 	br	3140 <__alt_data_end+0xfffe3d40>
    3724:	01400434 	movhi	r5,16
    3728:	297fffc4 	addi	r5,r5,-1
    372c:	994a703a 	and	r5,r19,r5
    3730:	9009883a 	mov	r4,r18
    3734:	843f0044 	addi	r16,r16,-1023
    3738:	294ffc34 	orhi	r5,r5,16368
    373c:	dd800217 	ldw	r22,8(sp)
    3740:	d8001115 	stw	zero,68(sp)
    3744:	003ea506 	br	31dc <__alt_data_end+0xfffe3ddc>
    3748:	00800074 	movhi	r2,1
    374c:	10bf9804 	addi	r2,r2,-416
    3750:	003e6406 	br	30e4 <__alt_data_end+0xfffe3ce4>
    3754:	e0001115 	stw	zero,68(fp)
    3758:	000b883a 	mov	r5,zero
    375c:	e009883a 	mov	r4,fp
    3760:	00060b80 	call	60b8 <_Balloc>
    3764:	01bfffc4 	movi	r6,-1
    3768:	01c00044 	movi	r7,1
    376c:	d8800715 	stw	r2,28(sp)
    3770:	d9800c15 	stw	r6,48(sp)
    3774:	e0801015 	stw	r2,64(fp)
    3778:	d8000315 	stw	zero,12(sp)
    377c:	d9c00b15 	stw	r7,44(sp)
    3780:	d9800615 	stw	r6,24(sp)
    3784:	d8002215 	stw	zero,136(sp)
    3788:	d8800117 	ldw	r2,4(sp)
    378c:	10008916 	blt	r2,zero,39b4 <_dtoa_r+0x990>
    3790:	d9000517 	ldw	r4,20(sp)
    3794:	00c00384 	movi	r3,14
    3798:	19008616 	blt	r3,r4,39b4 <_dtoa_r+0x990>
    379c:	200490fa 	slli	r2,r4,3
    37a0:	00c00074 	movhi	r3,1
    37a4:	d9802217 	ldw	r6,136(sp)
    37a8:	18ffc004 	addi	r3,r3,-256
    37ac:	1885883a 	add	r2,r3,r2
    37b0:	14000017 	ldw	r16,0(r2)
    37b4:	14400117 	ldw	r17,4(r2)
    37b8:	30016316 	blt	r6,zero,3d48 <_dtoa_r+0xd24>
    37bc:	800d883a 	mov	r6,r16
    37c0:	880f883a 	mov	r7,r17
    37c4:	9009883a 	mov	r4,r18
    37c8:	980b883a 	mov	r5,r19
    37cc:	000b6fc0 	call	b6fc <__divdf3>
    37d0:	180b883a 	mov	r5,r3
    37d4:	1009883a 	mov	r4,r2
    37d8:	000d48c0 	call	d48c <__fixdfsi>
    37dc:	1009883a 	mov	r4,r2
    37e0:	102b883a 	mov	r21,r2
    37e4:	000d50c0 	call	d50c <__floatsidf>
    37e8:	800d883a 	mov	r6,r16
    37ec:	880f883a 	mov	r7,r17
    37f0:	1009883a 	mov	r4,r2
    37f4:	180b883a 	mov	r5,r3
    37f8:	000c3240 	call	c324 <__muldf3>
    37fc:	100d883a 	mov	r6,r2
    3800:	180f883a 	mov	r7,r3
    3804:	9009883a 	mov	r4,r18
    3808:	980b883a 	mov	r5,r19
    380c:	000cb900 	call	cb90 <__subdf3>
    3810:	d9c00717 	ldw	r7,28(sp)
    3814:	1009883a 	mov	r4,r2
    3818:	a8800c04 	addi	r2,r21,48
    381c:	38800005 	stb	r2,0(r7)
    3820:	3dc00044 	addi	r23,r7,1
    3824:	d9c00617 	ldw	r7,24(sp)
    3828:	01800044 	movi	r6,1
    382c:	180b883a 	mov	r5,r3
    3830:	2005883a 	mov	r2,r4
    3834:	39803826 	beq	r7,r6,3918 <_dtoa_r+0x8f4>
    3838:	000d883a 	mov	r6,zero
    383c:	01d00934 	movhi	r7,16420
    3840:	000c3240 	call	c324 <__muldf3>
    3844:	000d883a 	mov	r6,zero
    3848:	000f883a 	mov	r7,zero
    384c:	1009883a 	mov	r4,r2
    3850:	180b883a 	mov	r5,r3
    3854:	1025883a 	mov	r18,r2
    3858:	1827883a 	mov	r19,r3
    385c:	000c0cc0 	call	c0cc <__eqdf2>
    3860:	103f9a26 	beq	r2,zero,36cc <__alt_data_end+0xfffe42cc>
    3864:	d9c00617 	ldw	r7,24(sp)
    3868:	d8c00717 	ldw	r3,28(sp)
    386c:	b829883a 	mov	r20,r23
    3870:	38bfffc4 	addi	r2,r7,-1
    3874:	18ad883a 	add	r22,r3,r2
    3878:	00000a06 	br	38a4 <_dtoa_r+0x880>
    387c:	000c3240 	call	c324 <__muldf3>
    3880:	000d883a 	mov	r6,zero
    3884:	000f883a 	mov	r7,zero
    3888:	1009883a 	mov	r4,r2
    388c:	180b883a 	mov	r5,r3
    3890:	1025883a 	mov	r18,r2
    3894:	1827883a 	mov	r19,r3
    3898:	b829883a 	mov	r20,r23
    389c:	000c0cc0 	call	c0cc <__eqdf2>
    38a0:	103f8a26 	beq	r2,zero,36cc <__alt_data_end+0xfffe42cc>
    38a4:	800d883a 	mov	r6,r16
    38a8:	880f883a 	mov	r7,r17
    38ac:	9009883a 	mov	r4,r18
    38b0:	980b883a 	mov	r5,r19
    38b4:	000b6fc0 	call	b6fc <__divdf3>
    38b8:	180b883a 	mov	r5,r3
    38bc:	1009883a 	mov	r4,r2
    38c0:	000d48c0 	call	d48c <__fixdfsi>
    38c4:	1009883a 	mov	r4,r2
    38c8:	102b883a 	mov	r21,r2
    38cc:	000d50c0 	call	d50c <__floatsidf>
    38d0:	800d883a 	mov	r6,r16
    38d4:	880f883a 	mov	r7,r17
    38d8:	1009883a 	mov	r4,r2
    38dc:	180b883a 	mov	r5,r3
    38e0:	000c3240 	call	c324 <__muldf3>
    38e4:	100d883a 	mov	r6,r2
    38e8:	180f883a 	mov	r7,r3
    38ec:	9009883a 	mov	r4,r18
    38f0:	980b883a 	mov	r5,r19
    38f4:	000cb900 	call	cb90 <__subdf3>
    38f8:	aa000c04 	addi	r8,r21,48
    38fc:	a2000005 	stb	r8,0(r20)
    3900:	000d883a 	mov	r6,zero
    3904:	01d00934 	movhi	r7,16420
    3908:	1009883a 	mov	r4,r2
    390c:	180b883a 	mov	r5,r3
    3910:	a5c00044 	addi	r23,r20,1
    3914:	b53fd91e 	bne	r22,r20,387c <__alt_data_end+0xfffe447c>
    3918:	100d883a 	mov	r6,r2
    391c:	180f883a 	mov	r7,r3
    3920:	1009883a 	mov	r4,r2
    3924:	180b883a 	mov	r5,r3
    3928:	000ae500 	call	ae50 <__adddf3>
    392c:	100d883a 	mov	r6,r2
    3930:	180f883a 	mov	r7,r3
    3934:	8009883a 	mov	r4,r16
    3938:	880b883a 	mov	r5,r17
    393c:	1027883a 	mov	r19,r2
    3940:	1825883a 	mov	r18,r3
    3944:	000c2300 	call	c230 <__ledf2>
    3948:	10000816 	blt	r2,zero,396c <_dtoa_r+0x948>
    394c:	980d883a 	mov	r6,r19
    3950:	900f883a 	mov	r7,r18
    3954:	8009883a 	mov	r4,r16
    3958:	880b883a 	mov	r5,r17
    395c:	000c0cc0 	call	c0cc <__eqdf2>
    3960:	103f5a1e 	bne	r2,zero,36cc <__alt_data_end+0xfffe42cc>
    3964:	ad40004c 	andi	r21,r21,1
    3968:	a83f5826 	beq	r21,zero,36cc <__alt_data_end+0xfffe42cc>
    396c:	bd3fffc3 	ldbu	r20,-1(r23)
    3970:	b8bfffc4 	addi	r2,r23,-1
    3974:	1007883a 	mov	r3,r2
    3978:	01400e44 	movi	r5,57
    397c:	d9800717 	ldw	r6,28(sp)
    3980:	00000506 	br	3998 <_dtoa_r+0x974>
    3984:	18ffffc4 	addi	r3,r3,-1
    3988:	11824726 	beq	r2,r6,42a8 <_dtoa_r+0x1284>
    398c:	1d000003 	ldbu	r20,0(r3)
    3990:	102f883a 	mov	r23,r2
    3994:	10bfffc4 	addi	r2,r2,-1
    3998:	a1003fcc 	andi	r4,r20,255
    399c:	2100201c 	xori	r4,r4,128
    39a0:	213fe004 	addi	r4,r4,-128
    39a4:	217ff726 	beq	r4,r5,3984 <__alt_data_end+0xfffe4584>
    39a8:	a2000044 	addi	r8,r20,1
    39ac:	12000005 	stb	r8,0(r2)
    39b0:	003f4606 	br	36cc <__alt_data_end+0xfffe42cc>
    39b4:	d9000b17 	ldw	r4,44(sp)
    39b8:	2000c826 	beq	r4,zero,3cdc <_dtoa_r+0xcb8>
    39bc:	d9800317 	ldw	r6,12(sp)
    39c0:	00c00044 	movi	r3,1
    39c4:	1980f90e 	bge	r3,r6,3dac <_dtoa_r+0xd88>
    39c8:	d8800617 	ldw	r2,24(sp)
    39cc:	d8c00a17 	ldw	r3,40(sp)
    39d0:	157fffc4 	addi	r21,r2,-1
    39d4:	1d41f316 	blt	r3,r21,41a4 <_dtoa_r+0x1180>
    39d8:	1d6bc83a 	sub	r21,r3,r21
    39dc:	d9c00617 	ldw	r7,24(sp)
    39e0:	3802aa16 	blt	r7,zero,448c <_dtoa_r+0x1468>
    39e4:	dd000817 	ldw	r20,32(sp)
    39e8:	d8800617 	ldw	r2,24(sp)
    39ec:	d8c00817 	ldw	r3,32(sp)
    39f0:	01400044 	movi	r5,1
    39f4:	e009883a 	mov	r4,fp
    39f8:	1887883a 	add	r3,r3,r2
    39fc:	d8c00815 	stw	r3,32(sp)
    3a00:	b0ad883a 	add	r22,r22,r2
    3a04:	00064ec0 	call	64ec <__i2b>
    3a08:	1023883a 	mov	r17,r2
    3a0c:	a0000826 	beq	r20,zero,3a30 <_dtoa_r+0xa0c>
    3a10:	0580070e 	bge	zero,r22,3a30 <_dtoa_r+0xa0c>
    3a14:	a005883a 	mov	r2,r20
    3a18:	b500b916 	blt	r22,r20,3d00 <_dtoa_r+0xcdc>
    3a1c:	d9000817 	ldw	r4,32(sp)
    3a20:	a0a9c83a 	sub	r20,r20,r2
    3a24:	b0adc83a 	sub	r22,r22,r2
    3a28:	2089c83a 	sub	r4,r4,r2
    3a2c:	d9000815 	stw	r4,32(sp)
    3a30:	d9800a17 	ldw	r6,40(sp)
    3a34:	0181810e 	bge	zero,r6,403c <_dtoa_r+0x1018>
    3a38:	d9c00b17 	ldw	r7,44(sp)
    3a3c:	3800b326 	beq	r7,zero,3d0c <_dtoa_r+0xce8>
    3a40:	a800b226 	beq	r21,zero,3d0c <_dtoa_r+0xce8>
    3a44:	880b883a 	mov	r5,r17
    3a48:	a80d883a 	mov	r6,r21
    3a4c:	e009883a 	mov	r4,fp
    3a50:	00067b40 	call	67b4 <__pow5mult>
    3a54:	d9800917 	ldw	r6,36(sp)
    3a58:	100b883a 	mov	r5,r2
    3a5c:	e009883a 	mov	r4,fp
    3a60:	1023883a 	mov	r17,r2
    3a64:	00065280 	call	6528 <__multiply>
    3a68:	1021883a 	mov	r16,r2
    3a6c:	d8800a17 	ldw	r2,40(sp)
    3a70:	d9400917 	ldw	r5,36(sp)
    3a74:	e009883a 	mov	r4,fp
    3a78:	1545c83a 	sub	r2,r2,r21
    3a7c:	d8800a15 	stw	r2,40(sp)
    3a80:	00061600 	call	6160 <_Bfree>
    3a84:	d8c00a17 	ldw	r3,40(sp)
    3a88:	18009f1e 	bne	r3,zero,3d08 <_dtoa_r+0xce4>
    3a8c:	05c00044 	movi	r23,1
    3a90:	e009883a 	mov	r4,fp
    3a94:	b80b883a 	mov	r5,r23
    3a98:	00064ec0 	call	64ec <__i2b>
    3a9c:	d9000d17 	ldw	r4,52(sp)
    3aa0:	102b883a 	mov	r21,r2
    3aa4:	2000ce26 	beq	r4,zero,3de0 <_dtoa_r+0xdbc>
    3aa8:	200d883a 	mov	r6,r4
    3aac:	100b883a 	mov	r5,r2
    3ab0:	e009883a 	mov	r4,fp
    3ab4:	00067b40 	call	67b4 <__pow5mult>
    3ab8:	d9800317 	ldw	r6,12(sp)
    3abc:	102b883a 	mov	r21,r2
    3ac0:	b981810e 	bge	r23,r6,40c8 <_dtoa_r+0x10a4>
    3ac4:	0027883a 	mov	r19,zero
    3ac8:	a8800417 	ldw	r2,16(r21)
    3acc:	05c00804 	movi	r23,32
    3ad0:	10800104 	addi	r2,r2,4
    3ad4:	1085883a 	add	r2,r2,r2
    3ad8:	1085883a 	add	r2,r2,r2
    3adc:	a885883a 	add	r2,r21,r2
    3ae0:	11000017 	ldw	r4,0(r2)
    3ae4:	00063d40 	call	63d4 <__hi0bits>
    3ae8:	b885c83a 	sub	r2,r23,r2
    3aec:	1585883a 	add	r2,r2,r22
    3af0:	108007cc 	andi	r2,r2,31
    3af4:	1000b326 	beq	r2,zero,3dc4 <_dtoa_r+0xda0>
    3af8:	00c00804 	movi	r3,32
    3afc:	1887c83a 	sub	r3,r3,r2
    3b00:	01000104 	movi	r4,4
    3b04:	20c2cd0e 	bge	r4,r3,463c <_dtoa_r+0x1618>
    3b08:	00c00704 	movi	r3,28
    3b0c:	1885c83a 	sub	r2,r3,r2
    3b10:	d8c00817 	ldw	r3,32(sp)
    3b14:	a0a9883a 	add	r20,r20,r2
    3b18:	b0ad883a 	add	r22,r22,r2
    3b1c:	1887883a 	add	r3,r3,r2
    3b20:	d8c00815 	stw	r3,32(sp)
    3b24:	d9800817 	ldw	r6,32(sp)
    3b28:	0180040e 	bge	zero,r6,3b3c <_dtoa_r+0xb18>
    3b2c:	800b883a 	mov	r5,r16
    3b30:	e009883a 	mov	r4,fp
    3b34:	00068f40 	call	68f4 <__lshift>
    3b38:	1021883a 	mov	r16,r2
    3b3c:	0580050e 	bge	zero,r22,3b54 <_dtoa_r+0xb30>
    3b40:	a80b883a 	mov	r5,r21
    3b44:	b00d883a 	mov	r6,r22
    3b48:	e009883a 	mov	r4,fp
    3b4c:	00068f40 	call	68f4 <__lshift>
    3b50:	102b883a 	mov	r21,r2
    3b54:	d9c00e17 	ldw	r7,56(sp)
    3b58:	3801211e 	bne	r7,zero,3fe0 <_dtoa_r+0xfbc>
    3b5c:	d9800617 	ldw	r6,24(sp)
    3b60:	0181380e 	bge	zero,r6,4044 <_dtoa_r+0x1020>
    3b64:	d8c00b17 	ldw	r3,44(sp)
    3b68:	1800ab1e 	bne	r3,zero,3e18 <_dtoa_r+0xdf4>
    3b6c:	dc800717 	ldw	r18,28(sp)
    3b70:	dcc00617 	ldw	r19,24(sp)
    3b74:	9029883a 	mov	r20,r18
    3b78:	00000206 	br	3b84 <_dtoa_r+0xb60>
    3b7c:	00061880 	call	6188 <__multadd>
    3b80:	1021883a 	mov	r16,r2
    3b84:	a80b883a 	mov	r5,r21
    3b88:	8009883a 	mov	r4,r16
    3b8c:	0002dfc0 	call	2dfc <quorem>
    3b90:	10800c04 	addi	r2,r2,48
    3b94:	90800005 	stb	r2,0(r18)
    3b98:	94800044 	addi	r18,r18,1
    3b9c:	9507c83a 	sub	r3,r18,r20
    3ba0:	000f883a 	mov	r7,zero
    3ba4:	01800284 	movi	r6,10
    3ba8:	800b883a 	mov	r5,r16
    3bac:	e009883a 	mov	r4,fp
    3bb0:	1cfff216 	blt	r3,r19,3b7c <__alt_data_end+0xfffe477c>
    3bb4:	1011883a 	mov	r8,r2
    3bb8:	d8800617 	ldw	r2,24(sp)
    3bbc:	0082370e 	bge	zero,r2,449c <_dtoa_r+0x1478>
    3bc0:	d9000717 	ldw	r4,28(sp)
    3bc4:	0025883a 	mov	r18,zero
    3bc8:	20af883a 	add	r23,r4,r2
    3bcc:	01800044 	movi	r6,1
    3bd0:	800b883a 	mov	r5,r16
    3bd4:	e009883a 	mov	r4,fp
    3bd8:	da001715 	stw	r8,92(sp)
    3bdc:	00068f40 	call	68f4 <__lshift>
    3be0:	a80b883a 	mov	r5,r21
    3be4:	1009883a 	mov	r4,r2
    3be8:	d8800915 	stw	r2,36(sp)
    3bec:	0006a3c0 	call	6a3c <__mcmp>
    3bf0:	da001717 	ldw	r8,92(sp)
    3bf4:	0081800e 	bge	zero,r2,41f8 <_dtoa_r+0x11d4>
    3bf8:	b93fffc3 	ldbu	r4,-1(r23)
    3bfc:	b8bfffc4 	addi	r2,r23,-1
    3c00:	1007883a 	mov	r3,r2
    3c04:	01800e44 	movi	r6,57
    3c08:	d9c00717 	ldw	r7,28(sp)
    3c0c:	00000506 	br	3c24 <_dtoa_r+0xc00>
    3c10:	18ffffc4 	addi	r3,r3,-1
    3c14:	11c12326 	beq	r2,r7,40a4 <_dtoa_r+0x1080>
    3c18:	19000003 	ldbu	r4,0(r3)
    3c1c:	102f883a 	mov	r23,r2
    3c20:	10bfffc4 	addi	r2,r2,-1
    3c24:	21403fcc 	andi	r5,r4,255
    3c28:	2940201c 	xori	r5,r5,128
    3c2c:	297fe004 	addi	r5,r5,-128
    3c30:	29bff726 	beq	r5,r6,3c10 <__alt_data_end+0xfffe4810>
    3c34:	21000044 	addi	r4,r4,1
    3c38:	11000005 	stb	r4,0(r2)
    3c3c:	a80b883a 	mov	r5,r21
    3c40:	e009883a 	mov	r4,fp
    3c44:	00061600 	call	6160 <_Bfree>
    3c48:	883ea026 	beq	r17,zero,36cc <__alt_data_end+0xfffe42cc>
    3c4c:	90000426 	beq	r18,zero,3c60 <_dtoa_r+0xc3c>
    3c50:	94400326 	beq	r18,r17,3c60 <_dtoa_r+0xc3c>
    3c54:	900b883a 	mov	r5,r18
    3c58:	e009883a 	mov	r4,fp
    3c5c:	00061600 	call	6160 <_Bfree>
    3c60:	880b883a 	mov	r5,r17
    3c64:	e009883a 	mov	r4,fp
    3c68:	00061600 	call	6160 <_Bfree>
    3c6c:	003e9706 	br	36cc <__alt_data_end+0xfffe42cc>
    3c70:	01800044 	movi	r6,1
    3c74:	d9800e15 	stw	r6,56(sp)
    3c78:	003d9606 	br	32d4 <__alt_data_end+0xfffe3ed4>
    3c7c:	d8800817 	ldw	r2,32(sp)
    3c80:	d8c00517 	ldw	r3,20(sp)
    3c84:	d8000d15 	stw	zero,52(sp)
    3c88:	10c5c83a 	sub	r2,r2,r3
    3c8c:	00c9c83a 	sub	r4,zero,r3
    3c90:	d8800815 	stw	r2,32(sp)
    3c94:	d9000a15 	stw	r4,40(sp)
    3c98:	003d9706 	br	32f8 <__alt_data_end+0xfffe3ef8>
    3c9c:	05adc83a 	sub	r22,zero,r22
    3ca0:	dd800815 	stw	r22,32(sp)
    3ca4:	002d883a 	mov	r22,zero
    3ca8:	003d8e06 	br	32e4 <__alt_data_end+0xfffe3ee4>
    3cac:	d9000517 	ldw	r4,20(sp)
    3cb0:	000d50c0 	call	d50c <__floatsidf>
    3cb4:	100d883a 	mov	r6,r2
    3cb8:	180f883a 	mov	r7,r3
    3cbc:	a009883a 	mov	r4,r20
    3cc0:	880b883a 	mov	r5,r17
    3cc4:	000c0cc0 	call	c0cc <__eqdf2>
    3cc8:	103d7126 	beq	r2,zero,3290 <__alt_data_end+0xfffe3e90>
    3ccc:	d9c00517 	ldw	r7,20(sp)
    3cd0:	39ffffc4 	addi	r7,r7,-1
    3cd4:	d9c00515 	stw	r7,20(sp)
    3cd8:	003d6d06 	br	3290 <__alt_data_end+0xfffe3e90>
    3cdc:	dd400a17 	ldw	r21,40(sp)
    3ce0:	dd000817 	ldw	r20,32(sp)
    3ce4:	0023883a 	mov	r17,zero
    3ce8:	003f4806 	br	3a0c <__alt_data_end+0xfffe460c>
    3cec:	10e3c83a 	sub	r17,r2,r3
    3cf0:	9448983a 	sll	r4,r18,r17
    3cf4:	003d3206 	br	31c0 <__alt_data_end+0xfffe3dc0>
    3cf8:	d8000e15 	stw	zero,56(sp)
    3cfc:	003d7506 	br	32d4 <__alt_data_end+0xfffe3ed4>
    3d00:	b005883a 	mov	r2,r22
    3d04:	003f4506 	br	3a1c <__alt_data_end+0xfffe461c>
    3d08:	dc000915 	stw	r16,36(sp)
    3d0c:	d9800a17 	ldw	r6,40(sp)
    3d10:	d9400917 	ldw	r5,36(sp)
    3d14:	e009883a 	mov	r4,fp
    3d18:	00067b40 	call	67b4 <__pow5mult>
    3d1c:	1021883a 	mov	r16,r2
    3d20:	003f5a06 	br	3a8c <__alt_data_end+0xfffe468c>
    3d24:	01c00044 	movi	r7,1
    3d28:	d9c00b15 	stw	r7,44(sp)
    3d2c:	d8802217 	ldw	r2,136(sp)
    3d30:	0081280e 	bge	zero,r2,41d4 <_dtoa_r+0x11b0>
    3d34:	100d883a 	mov	r6,r2
    3d38:	1021883a 	mov	r16,r2
    3d3c:	d8800c15 	stw	r2,48(sp)
    3d40:	d8800615 	stw	r2,24(sp)
    3d44:	003d8806 	br	3368 <__alt_data_end+0xfffe3f68>
    3d48:	d8800617 	ldw	r2,24(sp)
    3d4c:	00be9b16 	blt	zero,r2,37bc <__alt_data_end+0xfffe43bc>
    3d50:	10010f1e 	bne	r2,zero,4190 <_dtoa_r+0x116c>
    3d54:	880b883a 	mov	r5,r17
    3d58:	000d883a 	mov	r6,zero
    3d5c:	01d00534 	movhi	r7,16404
    3d60:	8009883a 	mov	r4,r16
    3d64:	000c3240 	call	c324 <__muldf3>
    3d68:	900d883a 	mov	r6,r18
    3d6c:	980f883a 	mov	r7,r19
    3d70:	1009883a 	mov	r4,r2
    3d74:	180b883a 	mov	r5,r3
    3d78:	000c1540 	call	c154 <__gedf2>
    3d7c:	002b883a 	mov	r21,zero
    3d80:	0023883a 	mov	r17,zero
    3d84:	1000bf16 	blt	r2,zero,4084 <_dtoa_r+0x1060>
    3d88:	d9802217 	ldw	r6,136(sp)
    3d8c:	ddc00717 	ldw	r23,28(sp)
    3d90:	018c303a 	nor	r6,zero,r6
    3d94:	d9800515 	stw	r6,20(sp)
    3d98:	a80b883a 	mov	r5,r21
    3d9c:	e009883a 	mov	r4,fp
    3da0:	00061600 	call	6160 <_Bfree>
    3da4:	883e4926 	beq	r17,zero,36cc <__alt_data_end+0xfffe42cc>
    3da8:	003fad06 	br	3c60 <__alt_data_end+0xfffe4860>
    3dac:	d9c01117 	ldw	r7,68(sp)
    3db0:	3801bc26 	beq	r7,zero,44a4 <_dtoa_r+0x1480>
    3db4:	10810cc4 	addi	r2,r2,1075
    3db8:	dd400a17 	ldw	r21,40(sp)
    3dbc:	dd000817 	ldw	r20,32(sp)
    3dc0:	003f0a06 	br	39ec <__alt_data_end+0xfffe45ec>
    3dc4:	00800704 	movi	r2,28
    3dc8:	d9000817 	ldw	r4,32(sp)
    3dcc:	a0a9883a 	add	r20,r20,r2
    3dd0:	b0ad883a 	add	r22,r22,r2
    3dd4:	2089883a 	add	r4,r4,r2
    3dd8:	d9000815 	stw	r4,32(sp)
    3ddc:	003f5106 	br	3b24 <__alt_data_end+0xfffe4724>
    3de0:	d8c00317 	ldw	r3,12(sp)
    3de4:	b8c1fc0e 	bge	r23,r3,45d8 <_dtoa_r+0x15b4>
    3de8:	0027883a 	mov	r19,zero
    3dec:	b805883a 	mov	r2,r23
    3df0:	003f3e06 	br	3aec <__alt_data_end+0xfffe46ec>
    3df4:	880b883a 	mov	r5,r17
    3df8:	e009883a 	mov	r4,fp
    3dfc:	000f883a 	mov	r7,zero
    3e00:	01800284 	movi	r6,10
    3e04:	00061880 	call	6188 <__multadd>
    3e08:	d9000c17 	ldw	r4,48(sp)
    3e0c:	1023883a 	mov	r17,r2
    3e10:	0102040e 	bge	zero,r4,4624 <_dtoa_r+0x1600>
    3e14:	d9000615 	stw	r4,24(sp)
    3e18:	0500050e 	bge	zero,r20,3e30 <_dtoa_r+0xe0c>
    3e1c:	880b883a 	mov	r5,r17
    3e20:	a00d883a 	mov	r6,r20
    3e24:	e009883a 	mov	r4,fp
    3e28:	00068f40 	call	68f4 <__lshift>
    3e2c:	1023883a 	mov	r17,r2
    3e30:	9801241e 	bne	r19,zero,42c4 <_dtoa_r+0x12a0>
    3e34:	8829883a 	mov	r20,r17
    3e38:	d9000617 	ldw	r4,24(sp)
    3e3c:	dcc00717 	ldw	r19,28(sp)
    3e40:	9480004c 	andi	r18,r18,1
    3e44:	20bfffc4 	addi	r2,r4,-1
    3e48:	9885883a 	add	r2,r19,r2
    3e4c:	d8800415 	stw	r2,16(sp)
    3e50:	dc800615 	stw	r18,24(sp)
    3e54:	a80b883a 	mov	r5,r21
    3e58:	8009883a 	mov	r4,r16
    3e5c:	0002dfc0 	call	2dfc <quorem>
    3e60:	880b883a 	mov	r5,r17
    3e64:	8009883a 	mov	r4,r16
    3e68:	102f883a 	mov	r23,r2
    3e6c:	0006a3c0 	call	6a3c <__mcmp>
    3e70:	a80b883a 	mov	r5,r21
    3e74:	a00d883a 	mov	r6,r20
    3e78:	e009883a 	mov	r4,fp
    3e7c:	102d883a 	mov	r22,r2
    3e80:	0006a9c0 	call	6a9c <__mdiff>
    3e84:	1007883a 	mov	r3,r2
    3e88:	10800317 	ldw	r2,12(r2)
    3e8c:	bc800c04 	addi	r18,r23,48
    3e90:	180b883a 	mov	r5,r3
    3e94:	10004e1e 	bne	r2,zero,3fd0 <_dtoa_r+0xfac>
    3e98:	8009883a 	mov	r4,r16
    3e9c:	d8c01615 	stw	r3,88(sp)
    3ea0:	0006a3c0 	call	6a3c <__mcmp>
    3ea4:	d8c01617 	ldw	r3,88(sp)
    3ea8:	e009883a 	mov	r4,fp
    3eac:	d8801615 	stw	r2,88(sp)
    3eb0:	180b883a 	mov	r5,r3
    3eb4:	00061600 	call	6160 <_Bfree>
    3eb8:	d8801617 	ldw	r2,88(sp)
    3ebc:	1000041e 	bne	r2,zero,3ed0 <_dtoa_r+0xeac>
    3ec0:	d9800317 	ldw	r6,12(sp)
    3ec4:	3000021e 	bne	r6,zero,3ed0 <_dtoa_r+0xeac>
    3ec8:	d8c00617 	ldw	r3,24(sp)
    3ecc:	18003726 	beq	r3,zero,3fac <_dtoa_r+0xf88>
    3ed0:	b0002016 	blt	r22,zero,3f54 <_dtoa_r+0xf30>
    3ed4:	b000041e 	bne	r22,zero,3ee8 <_dtoa_r+0xec4>
    3ed8:	d9000317 	ldw	r4,12(sp)
    3edc:	2000021e 	bne	r4,zero,3ee8 <_dtoa_r+0xec4>
    3ee0:	d8c00617 	ldw	r3,24(sp)
    3ee4:	18001b26 	beq	r3,zero,3f54 <_dtoa_r+0xf30>
    3ee8:	00810716 	blt	zero,r2,4308 <_dtoa_r+0x12e4>
    3eec:	d8c00417 	ldw	r3,16(sp)
    3ef0:	9d800044 	addi	r22,r19,1
    3ef4:	9c800005 	stb	r18,0(r19)
    3ef8:	b02f883a 	mov	r23,r22
    3efc:	98c10626 	beq	r19,r3,4318 <_dtoa_r+0x12f4>
    3f00:	800b883a 	mov	r5,r16
    3f04:	000f883a 	mov	r7,zero
    3f08:	01800284 	movi	r6,10
    3f0c:	e009883a 	mov	r4,fp
    3f10:	00061880 	call	6188 <__multadd>
    3f14:	1021883a 	mov	r16,r2
    3f18:	000f883a 	mov	r7,zero
    3f1c:	01800284 	movi	r6,10
    3f20:	880b883a 	mov	r5,r17
    3f24:	e009883a 	mov	r4,fp
    3f28:	8d002526 	beq	r17,r20,3fc0 <_dtoa_r+0xf9c>
    3f2c:	00061880 	call	6188 <__multadd>
    3f30:	a00b883a 	mov	r5,r20
    3f34:	000f883a 	mov	r7,zero
    3f38:	01800284 	movi	r6,10
    3f3c:	e009883a 	mov	r4,fp
    3f40:	1023883a 	mov	r17,r2
    3f44:	00061880 	call	6188 <__multadd>
    3f48:	1029883a 	mov	r20,r2
    3f4c:	b027883a 	mov	r19,r22
    3f50:	003fc006 	br	3e54 <__alt_data_end+0xfffe4a54>
    3f54:	9011883a 	mov	r8,r18
    3f58:	00800e0e 	bge	zero,r2,3f94 <_dtoa_r+0xf70>
    3f5c:	800b883a 	mov	r5,r16
    3f60:	01800044 	movi	r6,1
    3f64:	e009883a 	mov	r4,fp
    3f68:	da001715 	stw	r8,92(sp)
    3f6c:	00068f40 	call	68f4 <__lshift>
    3f70:	a80b883a 	mov	r5,r21
    3f74:	1009883a 	mov	r4,r2
    3f78:	1021883a 	mov	r16,r2
    3f7c:	0006a3c0 	call	6a3c <__mcmp>
    3f80:	da001717 	ldw	r8,92(sp)
    3f84:	0081960e 	bge	zero,r2,45e0 <_dtoa_r+0x15bc>
    3f88:	00800e44 	movi	r2,57
    3f8c:	40817026 	beq	r8,r2,4550 <_dtoa_r+0x152c>
    3f90:	ba000c44 	addi	r8,r23,49
    3f94:	8825883a 	mov	r18,r17
    3f98:	9dc00044 	addi	r23,r19,1
    3f9c:	9a000005 	stb	r8,0(r19)
    3fa0:	a023883a 	mov	r17,r20
    3fa4:	dc000915 	stw	r16,36(sp)
    3fa8:	003f2406 	br	3c3c <__alt_data_end+0xfffe483c>
    3fac:	00800e44 	movi	r2,57
    3fb0:	9011883a 	mov	r8,r18
    3fb4:	90816626 	beq	r18,r2,4550 <_dtoa_r+0x152c>
    3fb8:	05bff516 	blt	zero,r22,3f90 <__alt_data_end+0xfffe4b90>
    3fbc:	003ff506 	br	3f94 <__alt_data_end+0xfffe4b94>
    3fc0:	00061880 	call	6188 <__multadd>
    3fc4:	1023883a 	mov	r17,r2
    3fc8:	1029883a 	mov	r20,r2
    3fcc:	003fdf06 	br	3f4c <__alt_data_end+0xfffe4b4c>
    3fd0:	e009883a 	mov	r4,fp
    3fd4:	00061600 	call	6160 <_Bfree>
    3fd8:	00800044 	movi	r2,1
    3fdc:	003fbc06 	br	3ed0 <__alt_data_end+0xfffe4ad0>
    3fe0:	a80b883a 	mov	r5,r21
    3fe4:	8009883a 	mov	r4,r16
    3fe8:	0006a3c0 	call	6a3c <__mcmp>
    3fec:	103edb0e 	bge	r2,zero,3b5c <__alt_data_end+0xfffe475c>
    3ff0:	800b883a 	mov	r5,r16
    3ff4:	000f883a 	mov	r7,zero
    3ff8:	01800284 	movi	r6,10
    3ffc:	e009883a 	mov	r4,fp
    4000:	00061880 	call	6188 <__multadd>
    4004:	1021883a 	mov	r16,r2
    4008:	d8800517 	ldw	r2,20(sp)
    400c:	d8c00b17 	ldw	r3,44(sp)
    4010:	10bfffc4 	addi	r2,r2,-1
    4014:	d8800515 	stw	r2,20(sp)
    4018:	183f761e 	bne	r3,zero,3df4 <__alt_data_end+0xfffe49f4>
    401c:	d9000c17 	ldw	r4,48(sp)
    4020:	0101730e 	bge	zero,r4,45f0 <_dtoa_r+0x15cc>
    4024:	d9000615 	stw	r4,24(sp)
    4028:	003ed006 	br	3b6c <__alt_data_end+0xfffe476c>
    402c:	00800084 	movi	r2,2
    4030:	3081861e 	bne	r6,r2,464c <_dtoa_r+0x1628>
    4034:	d8000b15 	stw	zero,44(sp)
    4038:	003f3c06 	br	3d2c <__alt_data_end+0xfffe492c>
    403c:	dc000917 	ldw	r16,36(sp)
    4040:	003e9206 	br	3a8c <__alt_data_end+0xfffe468c>
    4044:	d9c00317 	ldw	r7,12(sp)
    4048:	00800084 	movi	r2,2
    404c:	11fec50e 	bge	r2,r7,3b64 <__alt_data_end+0xfffe4764>
    4050:	d9000617 	ldw	r4,24(sp)
    4054:	20013c1e 	bne	r4,zero,4548 <_dtoa_r+0x1524>
    4058:	a80b883a 	mov	r5,r21
    405c:	000f883a 	mov	r7,zero
    4060:	01800144 	movi	r6,5
    4064:	e009883a 	mov	r4,fp
    4068:	00061880 	call	6188 <__multadd>
    406c:	100b883a 	mov	r5,r2
    4070:	8009883a 	mov	r4,r16
    4074:	102b883a 	mov	r21,r2
    4078:	0006a3c0 	call	6a3c <__mcmp>
    407c:	dc000915 	stw	r16,36(sp)
    4080:	00bf410e 	bge	zero,r2,3d88 <__alt_data_end+0xfffe4988>
    4084:	d9c00717 	ldw	r7,28(sp)
    4088:	00800c44 	movi	r2,49
    408c:	38800005 	stb	r2,0(r7)
    4090:	d8800517 	ldw	r2,20(sp)
    4094:	3dc00044 	addi	r23,r7,1
    4098:	10800044 	addi	r2,r2,1
    409c:	d8800515 	stw	r2,20(sp)
    40a0:	003f3d06 	br	3d98 <__alt_data_end+0xfffe4998>
    40a4:	d9800517 	ldw	r6,20(sp)
    40a8:	d9c00717 	ldw	r7,28(sp)
    40ac:	00800c44 	movi	r2,49
    40b0:	31800044 	addi	r6,r6,1
    40b4:	d9800515 	stw	r6,20(sp)
    40b8:	38800005 	stb	r2,0(r7)
    40bc:	003edf06 	br	3c3c <__alt_data_end+0xfffe483c>
    40c0:	d8000b15 	stw	zero,44(sp)
    40c4:	003c9f06 	br	3344 <__alt_data_end+0xfffe3f44>
    40c8:	903e7e1e 	bne	r18,zero,3ac4 <__alt_data_end+0xfffe46c4>
    40cc:	00800434 	movhi	r2,16
    40d0:	10bfffc4 	addi	r2,r2,-1
    40d4:	9884703a 	and	r2,r19,r2
    40d8:	1000ea1e 	bne	r2,zero,4484 <_dtoa_r+0x1460>
    40dc:	9cdffc2c 	andhi	r19,r19,32752
    40e0:	9800e826 	beq	r19,zero,4484 <_dtoa_r+0x1460>
    40e4:	d9c00817 	ldw	r7,32(sp)
    40e8:	b5800044 	addi	r22,r22,1
    40ec:	04c00044 	movi	r19,1
    40f0:	39c00044 	addi	r7,r7,1
    40f4:	d9c00815 	stw	r7,32(sp)
    40f8:	d8800d17 	ldw	r2,52(sp)
    40fc:	103e721e 	bne	r2,zero,3ac8 <__alt_data_end+0xfffe46c8>
    4100:	00800044 	movi	r2,1
    4104:	003e7906 	br	3aec <__alt_data_end+0xfffe46ec>
    4108:	8009883a 	mov	r4,r16
    410c:	000d50c0 	call	d50c <__floatsidf>
    4110:	d9800f17 	ldw	r6,60(sp)
    4114:	d9c01017 	ldw	r7,64(sp)
    4118:	1009883a 	mov	r4,r2
    411c:	180b883a 	mov	r5,r3
    4120:	000c3240 	call	c324 <__muldf3>
    4124:	000d883a 	mov	r6,zero
    4128:	01d00734 	movhi	r7,16412
    412c:	1009883a 	mov	r4,r2
    4130:	180b883a 	mov	r5,r3
    4134:	000ae500 	call	ae50 <__adddf3>
    4138:	047f3034 	movhi	r17,64704
    413c:	1021883a 	mov	r16,r2
    4140:	1c63883a 	add	r17,r3,r17
    4144:	d9000f17 	ldw	r4,60(sp)
    4148:	d9401017 	ldw	r5,64(sp)
    414c:	000d883a 	mov	r6,zero
    4150:	01d00534 	movhi	r7,16404
    4154:	000cb900 	call	cb90 <__subdf3>
    4158:	800d883a 	mov	r6,r16
    415c:	880f883a 	mov	r7,r17
    4160:	1009883a 	mov	r4,r2
    4164:	180b883a 	mov	r5,r3
    4168:	102b883a 	mov	r21,r2
    416c:	1829883a 	mov	r20,r3
    4170:	000c1540 	call	c154 <__gedf2>
    4174:	00806c16 	blt	zero,r2,4328 <_dtoa_r+0x1304>
    4178:	89e0003c 	xorhi	r7,r17,32768
    417c:	800d883a 	mov	r6,r16
    4180:	a809883a 	mov	r4,r21
    4184:	a00b883a 	mov	r5,r20
    4188:	000c2300 	call	c230 <__ledf2>
    418c:	103d7e0e 	bge	r2,zero,3788 <__alt_data_end+0xfffe4388>
    4190:	002b883a 	mov	r21,zero
    4194:	0023883a 	mov	r17,zero
    4198:	003efb06 	br	3d88 <__alt_data_end+0xfffe4988>
    419c:	d8800717 	ldw	r2,28(sp)
    41a0:	003bd006 	br	30e4 <__alt_data_end+0xfffe3ce4>
    41a4:	d9000a17 	ldw	r4,40(sp)
    41a8:	d9800d17 	ldw	r6,52(sp)
    41ac:	dd400a15 	stw	r21,40(sp)
    41b0:	a905c83a 	sub	r2,r21,r4
    41b4:	308d883a 	add	r6,r6,r2
    41b8:	d9800d15 	stw	r6,52(sp)
    41bc:	002b883a 	mov	r21,zero
    41c0:	003e0606 	br	39dc <__alt_data_end+0xfffe45dc>
    41c4:	9023883a 	mov	r17,r18
    41c8:	9829883a 	mov	r20,r19
    41cc:	04000084 	movi	r16,2
    41d0:	003c9206 	br	341c <__alt_data_end+0xfffe401c>
    41d4:	04000044 	movi	r16,1
    41d8:	dc000c15 	stw	r16,48(sp)
    41dc:	dc000615 	stw	r16,24(sp)
    41e0:	dc002215 	stw	r16,136(sp)
    41e4:	e0001115 	stw	zero,68(fp)
    41e8:	000b883a 	mov	r5,zero
    41ec:	003c6906 	br	3394 <__alt_data_end+0xfffe3f94>
    41f0:	3021883a 	mov	r16,r6
    41f4:	003ffb06 	br	41e4 <__alt_data_end+0xfffe4de4>
    41f8:	1000021e 	bne	r2,zero,4204 <_dtoa_r+0x11e0>
    41fc:	4200004c 	andi	r8,r8,1
    4200:	403e7d1e 	bne	r8,zero,3bf8 <__alt_data_end+0xfffe47f8>
    4204:	01000c04 	movi	r4,48
    4208:	00000106 	br	4210 <_dtoa_r+0x11ec>
    420c:	102f883a 	mov	r23,r2
    4210:	b8bfffc4 	addi	r2,r23,-1
    4214:	10c00007 	ldb	r3,0(r2)
    4218:	193ffc26 	beq	r3,r4,420c <__alt_data_end+0xfffe4e0c>
    421c:	003e8706 	br	3c3c <__alt_data_end+0xfffe483c>
    4220:	d8800517 	ldw	r2,20(sp)
    4224:	00a3c83a 	sub	r17,zero,r2
    4228:	8800a426 	beq	r17,zero,44bc <_dtoa_r+0x1498>
    422c:	888003cc 	andi	r2,r17,15
    4230:	100490fa 	slli	r2,r2,3
    4234:	00c00074 	movhi	r3,1
    4238:	18ffc004 	addi	r3,r3,-256
    423c:	1885883a 	add	r2,r3,r2
    4240:	11800017 	ldw	r6,0(r2)
    4244:	11c00117 	ldw	r7,4(r2)
    4248:	9009883a 	mov	r4,r18
    424c:	980b883a 	mov	r5,r19
    4250:	8823d13a 	srai	r17,r17,4
    4254:	000c3240 	call	c324 <__muldf3>
    4258:	d8800f15 	stw	r2,60(sp)
    425c:	d8c01015 	stw	r3,64(sp)
    4260:	8800e826 	beq	r17,zero,4604 <_dtoa_r+0x15e0>
    4264:	05000074 	movhi	r20,1
    4268:	a53fb604 	addi	r20,r20,-296
    426c:	04000084 	movi	r16,2
    4270:	8980004c 	andi	r6,r17,1
    4274:	1009883a 	mov	r4,r2
    4278:	8823d07a 	srai	r17,r17,1
    427c:	180b883a 	mov	r5,r3
    4280:	30000426 	beq	r6,zero,4294 <_dtoa_r+0x1270>
    4284:	a1800017 	ldw	r6,0(r20)
    4288:	a1c00117 	ldw	r7,4(r20)
    428c:	84000044 	addi	r16,r16,1
    4290:	000c3240 	call	c324 <__muldf3>
    4294:	a5000204 	addi	r20,r20,8
    4298:	883ff51e 	bne	r17,zero,4270 <__alt_data_end+0xfffe4e70>
    429c:	d8800f15 	stw	r2,60(sp)
    42a0:	d8c01015 	stw	r3,64(sp)
    42a4:	003c7606 	br	3480 <__alt_data_end+0xfffe4080>
    42a8:	00c00c04 	movi	r3,48
    42ac:	10c00005 	stb	r3,0(r2)
    42b0:	d8c00517 	ldw	r3,20(sp)
    42b4:	bd3fffc3 	ldbu	r20,-1(r23)
    42b8:	18c00044 	addi	r3,r3,1
    42bc:	d8c00515 	stw	r3,20(sp)
    42c0:	003db906 	br	39a8 <__alt_data_end+0xfffe45a8>
    42c4:	89400117 	ldw	r5,4(r17)
    42c8:	e009883a 	mov	r4,fp
    42cc:	00060b80 	call	60b8 <_Balloc>
    42d0:	89800417 	ldw	r6,16(r17)
    42d4:	89400304 	addi	r5,r17,12
    42d8:	11000304 	addi	r4,r2,12
    42dc:	31800084 	addi	r6,r6,2
    42e0:	318d883a 	add	r6,r6,r6
    42e4:	318d883a 	add	r6,r6,r6
    42e8:	1027883a 	mov	r19,r2
    42ec:	0005e480 	call	5e48 <memcpy>
    42f0:	01800044 	movi	r6,1
    42f4:	980b883a 	mov	r5,r19
    42f8:	e009883a 	mov	r4,fp
    42fc:	00068f40 	call	68f4 <__lshift>
    4300:	1029883a 	mov	r20,r2
    4304:	003ecc06 	br	3e38 <__alt_data_end+0xfffe4a38>
    4308:	00800e44 	movi	r2,57
    430c:	90809026 	beq	r18,r2,4550 <_dtoa_r+0x152c>
    4310:	92000044 	addi	r8,r18,1
    4314:	003f1f06 	br	3f94 <__alt_data_end+0xfffe4b94>
    4318:	9011883a 	mov	r8,r18
    431c:	8825883a 	mov	r18,r17
    4320:	a023883a 	mov	r17,r20
    4324:	003e2906 	br	3bcc <__alt_data_end+0xfffe47cc>
    4328:	002b883a 	mov	r21,zero
    432c:	0023883a 	mov	r17,zero
    4330:	003f5406 	br	4084 <__alt_data_end+0xfffe4c84>
    4334:	61bfffc4 	addi	r6,r12,-1
    4338:	300490fa 	slli	r2,r6,3
    433c:	00c00074 	movhi	r3,1
    4340:	18ffc004 	addi	r3,r3,-256
    4344:	1885883a 	add	r2,r3,r2
    4348:	11000017 	ldw	r4,0(r2)
    434c:	11400117 	ldw	r5,4(r2)
    4350:	d8800717 	ldw	r2,28(sp)
    4354:	880f883a 	mov	r7,r17
    4358:	d9801215 	stw	r6,72(sp)
    435c:	800d883a 	mov	r6,r16
    4360:	db001615 	stw	r12,88(sp)
    4364:	15c00044 	addi	r23,r2,1
    4368:	000c3240 	call	c324 <__muldf3>
    436c:	d9401017 	ldw	r5,64(sp)
    4370:	d9000f17 	ldw	r4,60(sp)
    4374:	d8c01515 	stw	r3,84(sp)
    4378:	d8801415 	stw	r2,80(sp)
    437c:	000d48c0 	call	d48c <__fixdfsi>
    4380:	1009883a 	mov	r4,r2
    4384:	1021883a 	mov	r16,r2
    4388:	000d50c0 	call	d50c <__floatsidf>
    438c:	d9000f17 	ldw	r4,60(sp)
    4390:	d9401017 	ldw	r5,64(sp)
    4394:	100d883a 	mov	r6,r2
    4398:	180f883a 	mov	r7,r3
    439c:	000cb900 	call	cb90 <__subdf3>
    43a0:	1829883a 	mov	r20,r3
    43a4:	d8c00717 	ldw	r3,28(sp)
    43a8:	84000c04 	addi	r16,r16,48
    43ac:	1023883a 	mov	r17,r2
    43b0:	1c000005 	stb	r16,0(r3)
    43b4:	db001617 	ldw	r12,88(sp)
    43b8:	00800044 	movi	r2,1
    43bc:	60802226 	beq	r12,r2,4448 <_dtoa_r+0x1424>
    43c0:	d9c00717 	ldw	r7,28(sp)
    43c4:	8805883a 	mov	r2,r17
    43c8:	b82b883a 	mov	r21,r23
    43cc:	3b19883a 	add	r12,r7,r12
    43d0:	6023883a 	mov	r17,r12
    43d4:	a007883a 	mov	r3,r20
    43d8:	dc800f15 	stw	r18,60(sp)
    43dc:	000d883a 	mov	r6,zero
    43e0:	01d00934 	movhi	r7,16420
    43e4:	1009883a 	mov	r4,r2
    43e8:	180b883a 	mov	r5,r3
    43ec:	000c3240 	call	c324 <__muldf3>
    43f0:	180b883a 	mov	r5,r3
    43f4:	1009883a 	mov	r4,r2
    43f8:	1829883a 	mov	r20,r3
    43fc:	1025883a 	mov	r18,r2
    4400:	000d48c0 	call	d48c <__fixdfsi>
    4404:	1009883a 	mov	r4,r2
    4408:	1021883a 	mov	r16,r2
    440c:	000d50c0 	call	d50c <__floatsidf>
    4410:	100d883a 	mov	r6,r2
    4414:	180f883a 	mov	r7,r3
    4418:	9009883a 	mov	r4,r18
    441c:	a00b883a 	mov	r5,r20
    4420:	84000c04 	addi	r16,r16,48
    4424:	000cb900 	call	cb90 <__subdf3>
    4428:	ad400044 	addi	r21,r21,1
    442c:	ac3fffc5 	stb	r16,-1(r21)
    4430:	ac7fea1e 	bne	r21,r17,43dc <__alt_data_end+0xfffe4fdc>
    4434:	1023883a 	mov	r17,r2
    4438:	d8801217 	ldw	r2,72(sp)
    443c:	dc800f17 	ldw	r18,60(sp)
    4440:	1829883a 	mov	r20,r3
    4444:	b8af883a 	add	r23,r23,r2
    4448:	d9001417 	ldw	r4,80(sp)
    444c:	d9401517 	ldw	r5,84(sp)
    4450:	000d883a 	mov	r6,zero
    4454:	01cff834 	movhi	r7,16352
    4458:	000ae500 	call	ae50 <__adddf3>
    445c:	880d883a 	mov	r6,r17
    4460:	a00f883a 	mov	r7,r20
    4464:	1009883a 	mov	r4,r2
    4468:	180b883a 	mov	r5,r3
    446c:	000c2300 	call	c230 <__ledf2>
    4470:	10003e0e 	bge	r2,zero,456c <_dtoa_r+0x1548>
    4474:	d9001317 	ldw	r4,76(sp)
    4478:	bd3fffc3 	ldbu	r20,-1(r23)
    447c:	d9000515 	stw	r4,20(sp)
    4480:	003d3b06 	br	3970 <__alt_data_end+0xfffe4570>
    4484:	0027883a 	mov	r19,zero
    4488:	003f1b06 	br	40f8 <__alt_data_end+0xfffe4cf8>
    448c:	d8800817 	ldw	r2,32(sp)
    4490:	11e9c83a 	sub	r20,r2,r7
    4494:	0005883a 	mov	r2,zero
    4498:	003d5406 	br	39ec <__alt_data_end+0xfffe45ec>
    449c:	00800044 	movi	r2,1
    44a0:	003dc706 	br	3bc0 <__alt_data_end+0xfffe47c0>
    44a4:	d8c00217 	ldw	r3,8(sp)
    44a8:	00800d84 	movi	r2,54
    44ac:	dd400a17 	ldw	r21,40(sp)
    44b0:	10c5c83a 	sub	r2,r2,r3
    44b4:	dd000817 	ldw	r20,32(sp)
    44b8:	003d4c06 	br	39ec <__alt_data_end+0xfffe45ec>
    44bc:	dc800f15 	stw	r18,60(sp)
    44c0:	dcc01015 	stw	r19,64(sp)
    44c4:	04000084 	movi	r16,2
    44c8:	003bed06 	br	3480 <__alt_data_end+0xfffe4080>
    44cc:	d9000617 	ldw	r4,24(sp)
    44d0:	203f0d26 	beq	r4,zero,4108 <__alt_data_end+0xfffe4d08>
    44d4:	d9800c17 	ldw	r6,48(sp)
    44d8:	01bcab0e 	bge	zero,r6,3788 <__alt_data_end+0xfffe4388>
    44dc:	d9401017 	ldw	r5,64(sp)
    44e0:	d9000f17 	ldw	r4,60(sp)
    44e4:	000d883a 	mov	r6,zero
    44e8:	01d00934 	movhi	r7,16420
    44ec:	000c3240 	call	c324 <__muldf3>
    44f0:	81000044 	addi	r4,r16,1
    44f4:	d8800f15 	stw	r2,60(sp)
    44f8:	d8c01015 	stw	r3,64(sp)
    44fc:	000d50c0 	call	d50c <__floatsidf>
    4500:	d9800f17 	ldw	r6,60(sp)
    4504:	d9c01017 	ldw	r7,64(sp)
    4508:	1009883a 	mov	r4,r2
    450c:	180b883a 	mov	r5,r3
    4510:	000c3240 	call	c324 <__muldf3>
    4514:	01d00734 	movhi	r7,16412
    4518:	000d883a 	mov	r6,zero
    451c:	1009883a 	mov	r4,r2
    4520:	180b883a 	mov	r5,r3
    4524:	000ae500 	call	ae50 <__adddf3>
    4528:	d9c00517 	ldw	r7,20(sp)
    452c:	047f3034 	movhi	r17,64704
    4530:	1021883a 	mov	r16,r2
    4534:	39ffffc4 	addi	r7,r7,-1
    4538:	d9c01315 	stw	r7,76(sp)
    453c:	1c63883a 	add	r17,r3,r17
    4540:	db000c17 	ldw	r12,48(sp)
    4544:	003bea06 	br	34f0 <__alt_data_end+0xfffe40f0>
    4548:	dc000915 	stw	r16,36(sp)
    454c:	003e0e06 	br	3d88 <__alt_data_end+0xfffe4988>
    4550:	01000e44 	movi	r4,57
    4554:	8825883a 	mov	r18,r17
    4558:	9dc00044 	addi	r23,r19,1
    455c:	99000005 	stb	r4,0(r19)
    4560:	a023883a 	mov	r17,r20
    4564:	dc000915 	stw	r16,36(sp)
    4568:	003da406 	br	3bfc <__alt_data_end+0xfffe47fc>
    456c:	d9801417 	ldw	r6,80(sp)
    4570:	d9c01517 	ldw	r7,84(sp)
    4574:	0009883a 	mov	r4,zero
    4578:	014ff834 	movhi	r5,16352
    457c:	000cb900 	call	cb90 <__subdf3>
    4580:	880d883a 	mov	r6,r17
    4584:	a00f883a 	mov	r7,r20
    4588:	1009883a 	mov	r4,r2
    458c:	180b883a 	mov	r5,r3
    4590:	000c1540 	call	c154 <__gedf2>
    4594:	00bc7c0e 	bge	zero,r2,3788 <__alt_data_end+0xfffe4388>
    4598:	01000c04 	movi	r4,48
    459c:	00000106 	br	45a4 <_dtoa_r+0x1580>
    45a0:	102f883a 	mov	r23,r2
    45a4:	b8bfffc4 	addi	r2,r23,-1
    45a8:	10c00007 	ldb	r3,0(r2)
    45ac:	193ffc26 	beq	r3,r4,45a0 <__alt_data_end+0xfffe51a0>
    45b0:	d9801317 	ldw	r6,76(sp)
    45b4:	d9800515 	stw	r6,20(sp)
    45b8:	003c4406 	br	36cc <__alt_data_end+0xfffe42cc>
    45bc:	d9801317 	ldw	r6,76(sp)
    45c0:	d9800515 	stw	r6,20(sp)
    45c4:	003cea06 	br	3970 <__alt_data_end+0xfffe4570>
    45c8:	dd800f17 	ldw	r22,60(sp)
    45cc:	dcc01017 	ldw	r19,64(sp)
    45d0:	dc801217 	ldw	r18,72(sp)
    45d4:	003c6c06 	br	3788 <__alt_data_end+0xfffe4388>
    45d8:	903e031e 	bne	r18,zero,3de8 <__alt_data_end+0xfffe49e8>
    45dc:	003ebb06 	br	40cc <__alt_data_end+0xfffe4ccc>
    45e0:	103e6c1e 	bne	r2,zero,3f94 <__alt_data_end+0xfffe4b94>
    45e4:	4080004c 	andi	r2,r8,1
    45e8:	103e6a26 	beq	r2,zero,3f94 <__alt_data_end+0xfffe4b94>
    45ec:	003e6606 	br	3f88 <__alt_data_end+0xfffe4b88>
    45f0:	d8c00317 	ldw	r3,12(sp)
    45f4:	00800084 	movi	r2,2
    45f8:	10c02916 	blt	r2,r3,46a0 <_dtoa_r+0x167c>
    45fc:	d9000c17 	ldw	r4,48(sp)
    4600:	003e8806 	br	4024 <__alt_data_end+0xfffe4c24>
    4604:	04000084 	movi	r16,2
    4608:	003b9d06 	br	3480 <__alt_data_end+0xfffe4080>
    460c:	d9001317 	ldw	r4,76(sp)
    4610:	d9000515 	stw	r4,20(sp)
    4614:	003cd606 	br	3970 <__alt_data_end+0xfffe4570>
    4618:	d8801317 	ldw	r2,76(sp)
    461c:	d8800515 	stw	r2,20(sp)
    4620:	003c2a06 	br	36cc <__alt_data_end+0xfffe42cc>
    4624:	d9800317 	ldw	r6,12(sp)
    4628:	00800084 	movi	r2,2
    462c:	11801516 	blt	r2,r6,4684 <_dtoa_r+0x1660>
    4630:	d9c00c17 	ldw	r7,48(sp)
    4634:	d9c00615 	stw	r7,24(sp)
    4638:	003df706 	br	3e18 <__alt_data_end+0xfffe4a18>
    463c:	193d3926 	beq	r3,r4,3b24 <__alt_data_end+0xfffe4724>
    4640:	00c00f04 	movi	r3,60
    4644:	1885c83a 	sub	r2,r3,r2
    4648:	003ddf06 	br	3dc8 <__alt_data_end+0xfffe49c8>
    464c:	e009883a 	mov	r4,fp
    4650:	e0001115 	stw	zero,68(fp)
    4654:	000b883a 	mov	r5,zero
    4658:	00060b80 	call	60b8 <_Balloc>
    465c:	d8800715 	stw	r2,28(sp)
    4660:	d8c00717 	ldw	r3,28(sp)
    4664:	00bfffc4 	movi	r2,-1
    4668:	01000044 	movi	r4,1
    466c:	d8800c15 	stw	r2,48(sp)
    4670:	e0c01015 	stw	r3,64(fp)
    4674:	d9000b15 	stw	r4,44(sp)
    4678:	d8800615 	stw	r2,24(sp)
    467c:	d8002215 	stw	zero,136(sp)
    4680:	003c4106 	br	3788 <__alt_data_end+0xfffe4388>
    4684:	d8c00c17 	ldw	r3,48(sp)
    4688:	d8c00615 	stw	r3,24(sp)
    468c:	003e7006 	br	4050 <__alt_data_end+0xfffe4c50>
    4690:	04400044 	movi	r17,1
    4694:	003b2006 	br	3318 <__alt_data_end+0xfffe3f18>
    4698:	000b883a 	mov	r5,zero
    469c:	003b3d06 	br	3394 <__alt_data_end+0xfffe3f94>
    46a0:	d8800c17 	ldw	r2,48(sp)
    46a4:	d8800615 	stw	r2,24(sp)
    46a8:	003e6906 	br	4050 <__alt_data_end+0xfffe4c50>

000046ac <__sflush_r>:
    46ac:	2880030b 	ldhu	r2,12(r5)
    46b0:	defffb04 	addi	sp,sp,-20
    46b4:	dcc00315 	stw	r19,12(sp)
    46b8:	dc400115 	stw	r17,4(sp)
    46bc:	dfc00415 	stw	ra,16(sp)
    46c0:	dc800215 	stw	r18,8(sp)
    46c4:	dc000015 	stw	r16,0(sp)
    46c8:	10c0020c 	andi	r3,r2,8
    46cc:	2823883a 	mov	r17,r5
    46d0:	2027883a 	mov	r19,r4
    46d4:	1800311e 	bne	r3,zero,479c <__sflush_r+0xf0>
    46d8:	28c00117 	ldw	r3,4(r5)
    46dc:	10820014 	ori	r2,r2,2048
    46e0:	2880030d 	sth	r2,12(r5)
    46e4:	00c04b0e 	bge	zero,r3,4814 <__sflush_r+0x168>
    46e8:	8a000a17 	ldw	r8,40(r17)
    46ec:	40002326 	beq	r8,zero,477c <__sflush_r+0xd0>
    46f0:	9c000017 	ldw	r16,0(r19)
    46f4:	10c4000c 	andi	r3,r2,4096
    46f8:	98000015 	stw	zero,0(r19)
    46fc:	18004826 	beq	r3,zero,4820 <__sflush_r+0x174>
    4700:	89801417 	ldw	r6,80(r17)
    4704:	10c0010c 	andi	r3,r2,4
    4708:	18000626 	beq	r3,zero,4724 <__sflush_r+0x78>
    470c:	88c00117 	ldw	r3,4(r17)
    4710:	88800c17 	ldw	r2,48(r17)
    4714:	30cdc83a 	sub	r6,r6,r3
    4718:	10000226 	beq	r2,zero,4724 <__sflush_r+0x78>
    471c:	88800f17 	ldw	r2,60(r17)
    4720:	308dc83a 	sub	r6,r6,r2
    4724:	89400717 	ldw	r5,28(r17)
    4728:	000f883a 	mov	r7,zero
    472c:	9809883a 	mov	r4,r19
    4730:	403ee83a 	callr	r8
    4734:	00ffffc4 	movi	r3,-1
    4738:	10c04426 	beq	r2,r3,484c <__sflush_r+0x1a0>
    473c:	88c0030b 	ldhu	r3,12(r17)
    4740:	89000417 	ldw	r4,16(r17)
    4744:	88000115 	stw	zero,4(r17)
    4748:	197dffcc 	andi	r5,r3,63487
    474c:	8940030d 	sth	r5,12(r17)
    4750:	89000015 	stw	r4,0(r17)
    4754:	18c4000c 	andi	r3,r3,4096
    4758:	18002c1e 	bne	r3,zero,480c <__sflush_r+0x160>
    475c:	89400c17 	ldw	r5,48(r17)
    4760:	9c000015 	stw	r16,0(r19)
    4764:	28000526 	beq	r5,zero,477c <__sflush_r+0xd0>
    4768:	88801004 	addi	r2,r17,64
    476c:	28800226 	beq	r5,r2,4778 <__sflush_r+0xcc>
    4770:	9809883a 	mov	r4,r19
    4774:	0004e280 	call	4e28 <_free_r>
    4778:	88000c15 	stw	zero,48(r17)
    477c:	0005883a 	mov	r2,zero
    4780:	dfc00417 	ldw	ra,16(sp)
    4784:	dcc00317 	ldw	r19,12(sp)
    4788:	dc800217 	ldw	r18,8(sp)
    478c:	dc400117 	ldw	r17,4(sp)
    4790:	dc000017 	ldw	r16,0(sp)
    4794:	dec00504 	addi	sp,sp,20
    4798:	f800283a 	ret
    479c:	2c800417 	ldw	r18,16(r5)
    47a0:	903ff626 	beq	r18,zero,477c <__alt_data_end+0xfffe537c>
    47a4:	2c000017 	ldw	r16,0(r5)
    47a8:	108000cc 	andi	r2,r2,3
    47ac:	2c800015 	stw	r18,0(r5)
    47b0:	84a1c83a 	sub	r16,r16,r18
    47b4:	1000131e 	bne	r2,zero,4804 <__sflush_r+0x158>
    47b8:	28800517 	ldw	r2,20(r5)
    47bc:	88800215 	stw	r2,8(r17)
    47c0:	04000316 	blt	zero,r16,47d0 <__sflush_r+0x124>
    47c4:	003fed06 	br	477c <__alt_data_end+0xfffe537c>
    47c8:	90a5883a 	add	r18,r18,r2
    47cc:	043feb0e 	bge	zero,r16,477c <__alt_data_end+0xfffe537c>
    47d0:	88800917 	ldw	r2,36(r17)
    47d4:	89400717 	ldw	r5,28(r17)
    47d8:	800f883a 	mov	r7,r16
    47dc:	900d883a 	mov	r6,r18
    47e0:	9809883a 	mov	r4,r19
    47e4:	103ee83a 	callr	r2
    47e8:	80a1c83a 	sub	r16,r16,r2
    47ec:	00bff616 	blt	zero,r2,47c8 <__alt_data_end+0xfffe53c8>
    47f0:	88c0030b 	ldhu	r3,12(r17)
    47f4:	00bfffc4 	movi	r2,-1
    47f8:	18c01014 	ori	r3,r3,64
    47fc:	88c0030d 	sth	r3,12(r17)
    4800:	003fdf06 	br	4780 <__alt_data_end+0xfffe5380>
    4804:	0005883a 	mov	r2,zero
    4808:	003fec06 	br	47bc <__alt_data_end+0xfffe53bc>
    480c:	88801415 	stw	r2,80(r17)
    4810:	003fd206 	br	475c <__alt_data_end+0xfffe535c>
    4814:	28c00f17 	ldw	r3,60(r5)
    4818:	00ffb316 	blt	zero,r3,46e8 <__alt_data_end+0xfffe52e8>
    481c:	003fd706 	br	477c <__alt_data_end+0xfffe537c>
    4820:	89400717 	ldw	r5,28(r17)
    4824:	000d883a 	mov	r6,zero
    4828:	01c00044 	movi	r7,1
    482c:	9809883a 	mov	r4,r19
    4830:	403ee83a 	callr	r8
    4834:	100d883a 	mov	r6,r2
    4838:	00bfffc4 	movi	r2,-1
    483c:	30801426 	beq	r6,r2,4890 <__sflush_r+0x1e4>
    4840:	8880030b 	ldhu	r2,12(r17)
    4844:	8a000a17 	ldw	r8,40(r17)
    4848:	003fae06 	br	4704 <__alt_data_end+0xfffe5304>
    484c:	98c00017 	ldw	r3,0(r19)
    4850:	183fba26 	beq	r3,zero,473c <__alt_data_end+0xfffe533c>
    4854:	01000744 	movi	r4,29
    4858:	19000626 	beq	r3,r4,4874 <__sflush_r+0x1c8>
    485c:	01000584 	movi	r4,22
    4860:	19000426 	beq	r3,r4,4874 <__sflush_r+0x1c8>
    4864:	88c0030b 	ldhu	r3,12(r17)
    4868:	18c01014 	ori	r3,r3,64
    486c:	88c0030d 	sth	r3,12(r17)
    4870:	003fc306 	br	4780 <__alt_data_end+0xfffe5380>
    4874:	8880030b 	ldhu	r2,12(r17)
    4878:	88c00417 	ldw	r3,16(r17)
    487c:	88000115 	stw	zero,4(r17)
    4880:	10bdffcc 	andi	r2,r2,63487
    4884:	8880030d 	sth	r2,12(r17)
    4888:	88c00015 	stw	r3,0(r17)
    488c:	003fb306 	br	475c <__alt_data_end+0xfffe535c>
    4890:	98800017 	ldw	r2,0(r19)
    4894:	103fea26 	beq	r2,zero,4840 <__alt_data_end+0xfffe5440>
    4898:	00c00744 	movi	r3,29
    489c:	10c00226 	beq	r2,r3,48a8 <__sflush_r+0x1fc>
    48a0:	00c00584 	movi	r3,22
    48a4:	10c0031e 	bne	r2,r3,48b4 <__sflush_r+0x208>
    48a8:	9c000015 	stw	r16,0(r19)
    48ac:	0005883a 	mov	r2,zero
    48b0:	003fb306 	br	4780 <__alt_data_end+0xfffe5380>
    48b4:	88c0030b 	ldhu	r3,12(r17)
    48b8:	3005883a 	mov	r2,r6
    48bc:	18c01014 	ori	r3,r3,64
    48c0:	88c0030d 	sth	r3,12(r17)
    48c4:	003fae06 	br	4780 <__alt_data_end+0xfffe5380>

000048c8 <_fflush_r>:
    48c8:	defffd04 	addi	sp,sp,-12
    48cc:	dc000115 	stw	r16,4(sp)
    48d0:	dfc00215 	stw	ra,8(sp)
    48d4:	2021883a 	mov	r16,r4
    48d8:	20000226 	beq	r4,zero,48e4 <_fflush_r+0x1c>
    48dc:	20800e17 	ldw	r2,56(r4)
    48e0:	10000c26 	beq	r2,zero,4914 <_fflush_r+0x4c>
    48e4:	2880030f 	ldh	r2,12(r5)
    48e8:	1000051e 	bne	r2,zero,4900 <_fflush_r+0x38>
    48ec:	0005883a 	mov	r2,zero
    48f0:	dfc00217 	ldw	ra,8(sp)
    48f4:	dc000117 	ldw	r16,4(sp)
    48f8:	dec00304 	addi	sp,sp,12
    48fc:	f800283a 	ret
    4900:	8009883a 	mov	r4,r16
    4904:	dfc00217 	ldw	ra,8(sp)
    4908:	dc000117 	ldw	r16,4(sp)
    490c:	dec00304 	addi	sp,sp,12
    4910:	00046ac1 	jmpi	46ac <__sflush_r>
    4914:	d9400015 	stw	r5,0(sp)
    4918:	0004cb40 	call	4cb4 <__sinit>
    491c:	d9400017 	ldw	r5,0(sp)
    4920:	003ff006 	br	48e4 <__alt_data_end+0xfffe54e4>

00004924 <fflush>:
    4924:	20000526 	beq	r4,zero,493c <fflush+0x18>
    4928:	00800074 	movhi	r2,1
    492c:	1086f304 	addi	r2,r2,7116
    4930:	200b883a 	mov	r5,r4
    4934:	11000017 	ldw	r4,0(r2)
    4938:	00048c81 	jmpi	48c8 <_fflush_r>
    493c:	00800074 	movhi	r2,1
    4940:	1086f204 	addi	r2,r2,7112
    4944:	11000017 	ldw	r4,0(r2)
    4948:	01400034 	movhi	r5,0
    494c:	29523204 	addi	r5,r5,18632
    4950:	00051fc1 	jmpi	51fc <_fwalk_reent>

00004954 <__fp_unlock>:
    4954:	0005883a 	mov	r2,zero
    4958:	f800283a 	ret

0000495c <_cleanup_r>:
    495c:	01400074 	movhi	r5,1
    4960:	29635c04 	addi	r5,r5,-29328
    4964:	00051fc1 	jmpi	51fc <_fwalk_reent>

00004968 <__sinit.part.1>:
    4968:	defff704 	addi	sp,sp,-36
    496c:	00c00034 	movhi	r3,0
    4970:	dfc00815 	stw	ra,32(sp)
    4974:	ddc00715 	stw	r23,28(sp)
    4978:	dd800615 	stw	r22,24(sp)
    497c:	dd400515 	stw	r21,20(sp)
    4980:	dd000415 	stw	r20,16(sp)
    4984:	dcc00315 	stw	r19,12(sp)
    4988:	dc800215 	stw	r18,8(sp)
    498c:	dc400115 	stw	r17,4(sp)
    4990:	dc000015 	stw	r16,0(sp)
    4994:	18d25704 	addi	r3,r3,18780
    4998:	24000117 	ldw	r16,4(r4)
    499c:	20c00f15 	stw	r3,60(r4)
    49a0:	2080bb04 	addi	r2,r4,748
    49a4:	00c000c4 	movi	r3,3
    49a8:	20c0b915 	stw	r3,740(r4)
    49ac:	2080ba15 	stw	r2,744(r4)
    49b0:	2000b815 	stw	zero,736(r4)
    49b4:	05c00204 	movi	r23,8
    49b8:	00800104 	movi	r2,4
    49bc:	2025883a 	mov	r18,r4
    49c0:	b80d883a 	mov	r6,r23
    49c4:	81001704 	addi	r4,r16,92
    49c8:	000b883a 	mov	r5,zero
    49cc:	80000015 	stw	zero,0(r16)
    49d0:	80000115 	stw	zero,4(r16)
    49d4:	80000215 	stw	zero,8(r16)
    49d8:	8080030d 	sth	r2,12(r16)
    49dc:	80001915 	stw	zero,100(r16)
    49e0:	8000038d 	sth	zero,14(r16)
    49e4:	80000415 	stw	zero,16(r16)
    49e8:	80000515 	stw	zero,20(r16)
    49ec:	80000615 	stw	zero,24(r16)
    49f0:	0005f900 	call	5f90 <memset>
    49f4:	05800034 	movhi	r22,0
    49f8:	94400217 	ldw	r17,8(r18)
    49fc:	05400034 	movhi	r21,0
    4a00:	05000034 	movhi	r20,0
    4a04:	04c00034 	movhi	r19,0
    4a08:	b59c8e04 	addi	r22,r22,29240
    4a0c:	ad5ca504 	addi	r21,r21,29332
    4a10:	a51cc404 	addi	r20,r20,29456
    4a14:	9cdcdb04 	addi	r19,r19,29548
    4a18:	85800815 	stw	r22,32(r16)
    4a1c:	85400915 	stw	r21,36(r16)
    4a20:	85000a15 	stw	r20,40(r16)
    4a24:	84c00b15 	stw	r19,44(r16)
    4a28:	84000715 	stw	r16,28(r16)
    4a2c:	00800284 	movi	r2,10
    4a30:	8880030d 	sth	r2,12(r17)
    4a34:	00800044 	movi	r2,1
    4a38:	b80d883a 	mov	r6,r23
    4a3c:	89001704 	addi	r4,r17,92
    4a40:	000b883a 	mov	r5,zero
    4a44:	88000015 	stw	zero,0(r17)
    4a48:	88000115 	stw	zero,4(r17)
    4a4c:	88000215 	stw	zero,8(r17)
    4a50:	88001915 	stw	zero,100(r17)
    4a54:	8880038d 	sth	r2,14(r17)
    4a58:	88000415 	stw	zero,16(r17)
    4a5c:	88000515 	stw	zero,20(r17)
    4a60:	88000615 	stw	zero,24(r17)
    4a64:	0005f900 	call	5f90 <memset>
    4a68:	94000317 	ldw	r16,12(r18)
    4a6c:	00800484 	movi	r2,18
    4a70:	8c400715 	stw	r17,28(r17)
    4a74:	8d800815 	stw	r22,32(r17)
    4a78:	8d400915 	stw	r21,36(r17)
    4a7c:	8d000a15 	stw	r20,40(r17)
    4a80:	8cc00b15 	stw	r19,44(r17)
    4a84:	8080030d 	sth	r2,12(r16)
    4a88:	00800084 	movi	r2,2
    4a8c:	80000015 	stw	zero,0(r16)
    4a90:	80000115 	stw	zero,4(r16)
    4a94:	80000215 	stw	zero,8(r16)
    4a98:	80001915 	stw	zero,100(r16)
    4a9c:	8080038d 	sth	r2,14(r16)
    4aa0:	80000415 	stw	zero,16(r16)
    4aa4:	80000515 	stw	zero,20(r16)
    4aa8:	80000615 	stw	zero,24(r16)
    4aac:	b80d883a 	mov	r6,r23
    4ab0:	000b883a 	mov	r5,zero
    4ab4:	81001704 	addi	r4,r16,92
    4ab8:	0005f900 	call	5f90 <memset>
    4abc:	00800044 	movi	r2,1
    4ac0:	84000715 	stw	r16,28(r16)
    4ac4:	85800815 	stw	r22,32(r16)
    4ac8:	85400915 	stw	r21,36(r16)
    4acc:	85000a15 	stw	r20,40(r16)
    4ad0:	84c00b15 	stw	r19,44(r16)
    4ad4:	90800e15 	stw	r2,56(r18)
    4ad8:	dfc00817 	ldw	ra,32(sp)
    4adc:	ddc00717 	ldw	r23,28(sp)
    4ae0:	dd800617 	ldw	r22,24(sp)
    4ae4:	dd400517 	ldw	r21,20(sp)
    4ae8:	dd000417 	ldw	r20,16(sp)
    4aec:	dcc00317 	ldw	r19,12(sp)
    4af0:	dc800217 	ldw	r18,8(sp)
    4af4:	dc400117 	ldw	r17,4(sp)
    4af8:	dc000017 	ldw	r16,0(sp)
    4afc:	dec00904 	addi	sp,sp,36
    4b00:	f800283a 	ret

00004b04 <__fp_lock>:
    4b04:	0005883a 	mov	r2,zero
    4b08:	f800283a 	ret

00004b0c <__sfmoreglue>:
    4b0c:	defffc04 	addi	sp,sp,-16
    4b10:	dc800215 	stw	r18,8(sp)
    4b14:	2825883a 	mov	r18,r5
    4b18:	dc000015 	stw	r16,0(sp)
    4b1c:	01401a04 	movi	r5,104
    4b20:	2021883a 	mov	r16,r4
    4b24:	913fffc4 	addi	r4,r18,-1
    4b28:	dfc00315 	stw	ra,12(sp)
    4b2c:	dc400115 	stw	r17,4(sp)
    4b30:	000ae280 	call	ae28 <__mulsi3>
    4b34:	8009883a 	mov	r4,r16
    4b38:	11401d04 	addi	r5,r2,116
    4b3c:	1023883a 	mov	r17,r2
    4b40:	00055580 	call	5558 <_malloc_r>
    4b44:	1021883a 	mov	r16,r2
    4b48:	10000726 	beq	r2,zero,4b68 <__sfmoreglue+0x5c>
    4b4c:	11000304 	addi	r4,r2,12
    4b50:	10000015 	stw	zero,0(r2)
    4b54:	14800115 	stw	r18,4(r2)
    4b58:	11000215 	stw	r4,8(r2)
    4b5c:	89801a04 	addi	r6,r17,104
    4b60:	000b883a 	mov	r5,zero
    4b64:	0005f900 	call	5f90 <memset>
    4b68:	8005883a 	mov	r2,r16
    4b6c:	dfc00317 	ldw	ra,12(sp)
    4b70:	dc800217 	ldw	r18,8(sp)
    4b74:	dc400117 	ldw	r17,4(sp)
    4b78:	dc000017 	ldw	r16,0(sp)
    4b7c:	dec00404 	addi	sp,sp,16
    4b80:	f800283a 	ret

00004b84 <__sfp>:
    4b84:	defffb04 	addi	sp,sp,-20
    4b88:	dc000015 	stw	r16,0(sp)
    4b8c:	04000074 	movhi	r16,1
    4b90:	8406f204 	addi	r16,r16,7112
    4b94:	dcc00315 	stw	r19,12(sp)
    4b98:	2027883a 	mov	r19,r4
    4b9c:	81000017 	ldw	r4,0(r16)
    4ba0:	dfc00415 	stw	ra,16(sp)
    4ba4:	dc800215 	stw	r18,8(sp)
    4ba8:	20800e17 	ldw	r2,56(r4)
    4bac:	dc400115 	stw	r17,4(sp)
    4bb0:	1000021e 	bne	r2,zero,4bbc <__sfp+0x38>
    4bb4:	00049680 	call	4968 <__sinit.part.1>
    4bb8:	81000017 	ldw	r4,0(r16)
    4bbc:	2480b804 	addi	r18,r4,736
    4bc0:	047fffc4 	movi	r17,-1
    4bc4:	91000117 	ldw	r4,4(r18)
    4bc8:	94000217 	ldw	r16,8(r18)
    4bcc:	213fffc4 	addi	r4,r4,-1
    4bd0:	20000a16 	blt	r4,zero,4bfc <__sfp+0x78>
    4bd4:	8080030f 	ldh	r2,12(r16)
    4bd8:	10000c26 	beq	r2,zero,4c0c <__sfp+0x88>
    4bdc:	80c01d04 	addi	r3,r16,116
    4be0:	00000206 	br	4bec <__sfp+0x68>
    4be4:	18bfe60f 	ldh	r2,-104(r3)
    4be8:	10000826 	beq	r2,zero,4c0c <__sfp+0x88>
    4bec:	213fffc4 	addi	r4,r4,-1
    4bf0:	1c3ffd04 	addi	r16,r3,-12
    4bf4:	18c01a04 	addi	r3,r3,104
    4bf8:	247ffa1e 	bne	r4,r17,4be4 <__alt_data_end+0xfffe57e4>
    4bfc:	90800017 	ldw	r2,0(r18)
    4c00:	10001d26 	beq	r2,zero,4c78 <__sfp+0xf4>
    4c04:	1025883a 	mov	r18,r2
    4c08:	003fee06 	br	4bc4 <__alt_data_end+0xfffe57c4>
    4c0c:	00bfffc4 	movi	r2,-1
    4c10:	8080038d 	sth	r2,14(r16)
    4c14:	00800044 	movi	r2,1
    4c18:	8080030d 	sth	r2,12(r16)
    4c1c:	80001915 	stw	zero,100(r16)
    4c20:	80000015 	stw	zero,0(r16)
    4c24:	80000215 	stw	zero,8(r16)
    4c28:	80000115 	stw	zero,4(r16)
    4c2c:	80000415 	stw	zero,16(r16)
    4c30:	80000515 	stw	zero,20(r16)
    4c34:	80000615 	stw	zero,24(r16)
    4c38:	01800204 	movi	r6,8
    4c3c:	000b883a 	mov	r5,zero
    4c40:	81001704 	addi	r4,r16,92
    4c44:	0005f900 	call	5f90 <memset>
    4c48:	8005883a 	mov	r2,r16
    4c4c:	80000c15 	stw	zero,48(r16)
    4c50:	80000d15 	stw	zero,52(r16)
    4c54:	80001115 	stw	zero,68(r16)
    4c58:	80001215 	stw	zero,72(r16)
    4c5c:	dfc00417 	ldw	ra,16(sp)
    4c60:	dcc00317 	ldw	r19,12(sp)
    4c64:	dc800217 	ldw	r18,8(sp)
    4c68:	dc400117 	ldw	r17,4(sp)
    4c6c:	dc000017 	ldw	r16,0(sp)
    4c70:	dec00504 	addi	sp,sp,20
    4c74:	f800283a 	ret
    4c78:	01400104 	movi	r5,4
    4c7c:	9809883a 	mov	r4,r19
    4c80:	0004b0c0 	call	4b0c <__sfmoreglue>
    4c84:	90800015 	stw	r2,0(r18)
    4c88:	103fde1e 	bne	r2,zero,4c04 <__alt_data_end+0xfffe5804>
    4c8c:	00800304 	movi	r2,12
    4c90:	98800015 	stw	r2,0(r19)
    4c94:	0005883a 	mov	r2,zero
    4c98:	003ff006 	br	4c5c <__alt_data_end+0xfffe585c>

00004c9c <_cleanup>:
    4c9c:	00800074 	movhi	r2,1
    4ca0:	1086f204 	addi	r2,r2,7112
    4ca4:	11000017 	ldw	r4,0(r2)
    4ca8:	01400074 	movhi	r5,1
    4cac:	29635c04 	addi	r5,r5,-29328
    4cb0:	00051fc1 	jmpi	51fc <_fwalk_reent>

00004cb4 <__sinit>:
    4cb4:	20800e17 	ldw	r2,56(r4)
    4cb8:	10000126 	beq	r2,zero,4cc0 <__sinit+0xc>
    4cbc:	f800283a 	ret
    4cc0:	00049681 	jmpi	4968 <__sinit.part.1>

00004cc4 <__sfp_lock_acquire>:
    4cc4:	f800283a 	ret

00004cc8 <__sfp_lock_release>:
    4cc8:	f800283a 	ret

00004ccc <__sinit_lock_acquire>:
    4ccc:	f800283a 	ret

00004cd0 <__sinit_lock_release>:
    4cd0:	f800283a 	ret

00004cd4 <__fp_lock_all>:
    4cd4:	00800074 	movhi	r2,1
    4cd8:	1086f304 	addi	r2,r2,7116
    4cdc:	11000017 	ldw	r4,0(r2)
    4ce0:	01400034 	movhi	r5,0
    4ce4:	2952c104 	addi	r5,r5,19204
    4ce8:	00051381 	jmpi	5138 <_fwalk>

00004cec <__fp_unlock_all>:
    4cec:	00800074 	movhi	r2,1
    4cf0:	1086f304 	addi	r2,r2,7116
    4cf4:	11000017 	ldw	r4,0(r2)
    4cf8:	01400034 	movhi	r5,0
    4cfc:	29525504 	addi	r5,r5,18772
    4d00:	00051381 	jmpi	5138 <_fwalk>

00004d04 <_malloc_trim_r>:
    4d04:	defffb04 	addi	sp,sp,-20
    4d08:	dcc00315 	stw	r19,12(sp)
    4d0c:	04c00074 	movhi	r19,1
    4d10:	dc800215 	stw	r18,8(sp)
    4d14:	dc400115 	stw	r17,4(sp)
    4d18:	dc000015 	stw	r16,0(sp)
    4d1c:	dfc00415 	stw	ra,16(sp)
    4d20:	2821883a 	mov	r16,r5
    4d24:	9cc16e04 	addi	r19,r19,1464
    4d28:	2025883a 	mov	r18,r4
    4d2c:	000df300 	call	df30 <__malloc_lock>
    4d30:	98800217 	ldw	r2,8(r19)
    4d34:	14400117 	ldw	r17,4(r2)
    4d38:	00bfff04 	movi	r2,-4
    4d3c:	88a2703a 	and	r17,r17,r2
    4d40:	8c21c83a 	sub	r16,r17,r16
    4d44:	8403fbc4 	addi	r16,r16,4079
    4d48:	8020d33a 	srli	r16,r16,12
    4d4c:	0083ffc4 	movi	r2,4095
    4d50:	843fffc4 	addi	r16,r16,-1
    4d54:	8020933a 	slli	r16,r16,12
    4d58:	1400060e 	bge	r2,r16,4d74 <_malloc_trim_r+0x70>
    4d5c:	000b883a 	mov	r5,zero
    4d60:	9009883a 	mov	r4,r18
    4d64:	00071e40 	call	71e4 <_sbrk_r>
    4d68:	98c00217 	ldw	r3,8(r19)
    4d6c:	1c47883a 	add	r3,r3,r17
    4d70:	10c00a26 	beq	r2,r3,4d9c <_malloc_trim_r+0x98>
    4d74:	9009883a 	mov	r4,r18
    4d78:	000df540 	call	df54 <__malloc_unlock>
    4d7c:	0005883a 	mov	r2,zero
    4d80:	dfc00417 	ldw	ra,16(sp)
    4d84:	dcc00317 	ldw	r19,12(sp)
    4d88:	dc800217 	ldw	r18,8(sp)
    4d8c:	dc400117 	ldw	r17,4(sp)
    4d90:	dc000017 	ldw	r16,0(sp)
    4d94:	dec00504 	addi	sp,sp,20
    4d98:	f800283a 	ret
    4d9c:	040bc83a 	sub	r5,zero,r16
    4da0:	9009883a 	mov	r4,r18
    4da4:	00071e40 	call	71e4 <_sbrk_r>
    4da8:	00ffffc4 	movi	r3,-1
    4dac:	10c00d26 	beq	r2,r3,4de4 <_malloc_trim_r+0xe0>
    4db0:	00c00074 	movhi	r3,1
    4db4:	18cdcf04 	addi	r3,r3,14140
    4db8:	18800017 	ldw	r2,0(r3)
    4dbc:	99000217 	ldw	r4,8(r19)
    4dc0:	8c23c83a 	sub	r17,r17,r16
    4dc4:	8c400054 	ori	r17,r17,1
    4dc8:	1421c83a 	sub	r16,r2,r16
    4dcc:	24400115 	stw	r17,4(r4)
    4dd0:	9009883a 	mov	r4,r18
    4dd4:	1c000015 	stw	r16,0(r3)
    4dd8:	000df540 	call	df54 <__malloc_unlock>
    4ddc:	00800044 	movi	r2,1
    4de0:	003fe706 	br	4d80 <__alt_data_end+0xfffe5980>
    4de4:	000b883a 	mov	r5,zero
    4de8:	9009883a 	mov	r4,r18
    4dec:	00071e40 	call	71e4 <_sbrk_r>
    4df0:	99000217 	ldw	r4,8(r19)
    4df4:	014003c4 	movi	r5,15
    4df8:	1107c83a 	sub	r3,r2,r4
    4dfc:	28ffdd0e 	bge	r5,r3,4d74 <__alt_data_end+0xfffe5974>
    4e00:	01400074 	movhi	r5,1
    4e04:	2946f504 	addi	r5,r5,7124
    4e08:	29400017 	ldw	r5,0(r5)
    4e0c:	18c00054 	ori	r3,r3,1
    4e10:	20c00115 	stw	r3,4(r4)
    4e14:	00c00074 	movhi	r3,1
    4e18:	1145c83a 	sub	r2,r2,r5
    4e1c:	18cdcf04 	addi	r3,r3,14140
    4e20:	18800015 	stw	r2,0(r3)
    4e24:	003fd306 	br	4d74 <__alt_data_end+0xfffe5974>

00004e28 <_free_r>:
    4e28:	28004126 	beq	r5,zero,4f30 <_free_r+0x108>
    4e2c:	defffd04 	addi	sp,sp,-12
    4e30:	dc400115 	stw	r17,4(sp)
    4e34:	dc000015 	stw	r16,0(sp)
    4e38:	2023883a 	mov	r17,r4
    4e3c:	2821883a 	mov	r16,r5
    4e40:	dfc00215 	stw	ra,8(sp)
    4e44:	000df300 	call	df30 <__malloc_lock>
    4e48:	81ffff17 	ldw	r7,-4(r16)
    4e4c:	00bfff84 	movi	r2,-2
    4e50:	01000074 	movhi	r4,1
    4e54:	81bffe04 	addi	r6,r16,-8
    4e58:	3884703a 	and	r2,r7,r2
    4e5c:	21016e04 	addi	r4,r4,1464
    4e60:	308b883a 	add	r5,r6,r2
    4e64:	2a400117 	ldw	r9,4(r5)
    4e68:	22000217 	ldw	r8,8(r4)
    4e6c:	00ffff04 	movi	r3,-4
    4e70:	48c6703a 	and	r3,r9,r3
    4e74:	2a005726 	beq	r5,r8,4fd4 <_free_r+0x1ac>
    4e78:	28c00115 	stw	r3,4(r5)
    4e7c:	39c0004c 	andi	r7,r7,1
    4e80:	3800091e 	bne	r7,zero,4ea8 <_free_r+0x80>
    4e84:	823ffe17 	ldw	r8,-8(r16)
    4e88:	22400204 	addi	r9,r4,8
    4e8c:	320dc83a 	sub	r6,r6,r8
    4e90:	31c00217 	ldw	r7,8(r6)
    4e94:	1205883a 	add	r2,r2,r8
    4e98:	3a406526 	beq	r7,r9,5030 <_free_r+0x208>
    4e9c:	32000317 	ldw	r8,12(r6)
    4ea0:	3a000315 	stw	r8,12(r7)
    4ea4:	41c00215 	stw	r7,8(r8)
    4ea8:	28cf883a 	add	r7,r5,r3
    4eac:	39c00117 	ldw	r7,4(r7)
    4eb0:	39c0004c 	andi	r7,r7,1
    4eb4:	38003a26 	beq	r7,zero,4fa0 <_free_r+0x178>
    4eb8:	10c00054 	ori	r3,r2,1
    4ebc:	30c00115 	stw	r3,4(r6)
    4ec0:	3087883a 	add	r3,r6,r2
    4ec4:	18800015 	stw	r2,0(r3)
    4ec8:	00c07fc4 	movi	r3,511
    4ecc:	18801936 	bltu	r3,r2,4f34 <_free_r+0x10c>
    4ed0:	1004d0fa 	srli	r2,r2,3
    4ed4:	01c00044 	movi	r7,1
    4ed8:	21400117 	ldw	r5,4(r4)
    4edc:	10c00044 	addi	r3,r2,1
    4ee0:	18c7883a 	add	r3,r3,r3
    4ee4:	1005d0ba 	srai	r2,r2,2
    4ee8:	18c7883a 	add	r3,r3,r3
    4eec:	18c7883a 	add	r3,r3,r3
    4ef0:	1907883a 	add	r3,r3,r4
    4ef4:	3884983a 	sll	r2,r7,r2
    4ef8:	19c00017 	ldw	r7,0(r3)
    4efc:	1a3ffe04 	addi	r8,r3,-8
    4f00:	1144b03a 	or	r2,r2,r5
    4f04:	32000315 	stw	r8,12(r6)
    4f08:	31c00215 	stw	r7,8(r6)
    4f0c:	20800115 	stw	r2,4(r4)
    4f10:	19800015 	stw	r6,0(r3)
    4f14:	39800315 	stw	r6,12(r7)
    4f18:	8809883a 	mov	r4,r17
    4f1c:	dfc00217 	ldw	ra,8(sp)
    4f20:	dc400117 	ldw	r17,4(sp)
    4f24:	dc000017 	ldw	r16,0(sp)
    4f28:	dec00304 	addi	sp,sp,12
    4f2c:	000df541 	jmpi	df54 <__malloc_unlock>
    4f30:	f800283a 	ret
    4f34:	100ad27a 	srli	r5,r2,9
    4f38:	00c00104 	movi	r3,4
    4f3c:	19404a36 	bltu	r3,r5,5068 <_free_r+0x240>
    4f40:	100ad1ba 	srli	r5,r2,6
    4f44:	28c00e44 	addi	r3,r5,57
    4f48:	18c7883a 	add	r3,r3,r3
    4f4c:	29400e04 	addi	r5,r5,56
    4f50:	18c7883a 	add	r3,r3,r3
    4f54:	18c7883a 	add	r3,r3,r3
    4f58:	1909883a 	add	r4,r3,r4
    4f5c:	20c00017 	ldw	r3,0(r4)
    4f60:	01c00074 	movhi	r7,1
    4f64:	213ffe04 	addi	r4,r4,-8
    4f68:	39c16e04 	addi	r7,r7,1464
    4f6c:	20c04426 	beq	r4,r3,5080 <_free_r+0x258>
    4f70:	01ffff04 	movi	r7,-4
    4f74:	19400117 	ldw	r5,4(r3)
    4f78:	29ca703a 	and	r5,r5,r7
    4f7c:	1140022e 	bgeu	r2,r5,4f88 <_free_r+0x160>
    4f80:	18c00217 	ldw	r3,8(r3)
    4f84:	20fffb1e 	bne	r4,r3,4f74 <__alt_data_end+0xfffe5b74>
    4f88:	19000317 	ldw	r4,12(r3)
    4f8c:	31000315 	stw	r4,12(r6)
    4f90:	30c00215 	stw	r3,8(r6)
    4f94:	21800215 	stw	r6,8(r4)
    4f98:	19800315 	stw	r6,12(r3)
    4f9c:	003fde06 	br	4f18 <__alt_data_end+0xfffe5b18>
    4fa0:	29c00217 	ldw	r7,8(r5)
    4fa4:	10c5883a 	add	r2,r2,r3
    4fa8:	00c00074 	movhi	r3,1
    4fac:	18c17004 	addi	r3,r3,1472
    4fb0:	38c03b26 	beq	r7,r3,50a0 <_free_r+0x278>
    4fb4:	2a000317 	ldw	r8,12(r5)
    4fb8:	11400054 	ori	r5,r2,1
    4fbc:	3087883a 	add	r3,r6,r2
    4fc0:	3a000315 	stw	r8,12(r7)
    4fc4:	41c00215 	stw	r7,8(r8)
    4fc8:	31400115 	stw	r5,4(r6)
    4fcc:	18800015 	stw	r2,0(r3)
    4fd0:	003fbd06 	br	4ec8 <__alt_data_end+0xfffe5ac8>
    4fd4:	39c0004c 	andi	r7,r7,1
    4fd8:	10c5883a 	add	r2,r2,r3
    4fdc:	3800071e 	bne	r7,zero,4ffc <_free_r+0x1d4>
    4fe0:	81fffe17 	ldw	r7,-8(r16)
    4fe4:	31cdc83a 	sub	r6,r6,r7
    4fe8:	30c00317 	ldw	r3,12(r6)
    4fec:	31400217 	ldw	r5,8(r6)
    4ff0:	11c5883a 	add	r2,r2,r7
    4ff4:	28c00315 	stw	r3,12(r5)
    4ff8:	19400215 	stw	r5,8(r3)
    4ffc:	10c00054 	ori	r3,r2,1
    5000:	30c00115 	stw	r3,4(r6)
    5004:	00c00074 	movhi	r3,1
    5008:	18c6f604 	addi	r3,r3,7128
    500c:	18c00017 	ldw	r3,0(r3)
    5010:	21800215 	stw	r6,8(r4)
    5014:	10ffc036 	bltu	r2,r3,4f18 <__alt_data_end+0xfffe5b18>
    5018:	00800074 	movhi	r2,1
    501c:	108dc704 	addi	r2,r2,14108
    5020:	11400017 	ldw	r5,0(r2)
    5024:	8809883a 	mov	r4,r17
    5028:	0004d040 	call	4d04 <_malloc_trim_r>
    502c:	003fba06 	br	4f18 <__alt_data_end+0xfffe5b18>
    5030:	28c9883a 	add	r4,r5,r3
    5034:	21000117 	ldw	r4,4(r4)
    5038:	2100004c 	andi	r4,r4,1
    503c:	2000391e 	bne	r4,zero,5124 <_free_r+0x2fc>
    5040:	29c00217 	ldw	r7,8(r5)
    5044:	29000317 	ldw	r4,12(r5)
    5048:	1885883a 	add	r2,r3,r2
    504c:	10c00054 	ori	r3,r2,1
    5050:	39000315 	stw	r4,12(r7)
    5054:	21c00215 	stw	r7,8(r4)
    5058:	30c00115 	stw	r3,4(r6)
    505c:	308d883a 	add	r6,r6,r2
    5060:	30800015 	stw	r2,0(r6)
    5064:	003fac06 	br	4f18 <__alt_data_end+0xfffe5b18>
    5068:	00c00504 	movi	r3,20
    506c:	19401536 	bltu	r3,r5,50c4 <_free_r+0x29c>
    5070:	28c01704 	addi	r3,r5,92
    5074:	18c7883a 	add	r3,r3,r3
    5078:	294016c4 	addi	r5,r5,91
    507c:	003fb406 	br	4f50 <__alt_data_end+0xfffe5b50>
    5080:	280bd0ba 	srai	r5,r5,2
    5084:	00c00044 	movi	r3,1
    5088:	38800117 	ldw	r2,4(r7)
    508c:	194a983a 	sll	r5,r3,r5
    5090:	2007883a 	mov	r3,r4
    5094:	2884b03a 	or	r2,r5,r2
    5098:	38800115 	stw	r2,4(r7)
    509c:	003fbb06 	br	4f8c <__alt_data_end+0xfffe5b8c>
    50a0:	21800515 	stw	r6,20(r4)
    50a4:	21800415 	stw	r6,16(r4)
    50a8:	10c00054 	ori	r3,r2,1
    50ac:	31c00315 	stw	r7,12(r6)
    50b0:	31c00215 	stw	r7,8(r6)
    50b4:	30c00115 	stw	r3,4(r6)
    50b8:	308d883a 	add	r6,r6,r2
    50bc:	30800015 	stw	r2,0(r6)
    50c0:	003f9506 	br	4f18 <__alt_data_end+0xfffe5b18>
    50c4:	00c01504 	movi	r3,84
    50c8:	19400536 	bltu	r3,r5,50e0 <_free_r+0x2b8>
    50cc:	100ad33a 	srli	r5,r2,12
    50d0:	28c01bc4 	addi	r3,r5,111
    50d4:	18c7883a 	add	r3,r3,r3
    50d8:	29401b84 	addi	r5,r5,110
    50dc:	003f9c06 	br	4f50 <__alt_data_end+0xfffe5b50>
    50e0:	00c05504 	movi	r3,340
    50e4:	19400536 	bltu	r3,r5,50fc <_free_r+0x2d4>
    50e8:	100ad3fa 	srli	r5,r2,15
    50ec:	28c01e04 	addi	r3,r5,120
    50f0:	18c7883a 	add	r3,r3,r3
    50f4:	29401dc4 	addi	r5,r5,119
    50f8:	003f9506 	br	4f50 <__alt_data_end+0xfffe5b50>
    50fc:	00c15504 	movi	r3,1364
    5100:	19400536 	bltu	r3,r5,5118 <_free_r+0x2f0>
    5104:	100ad4ba 	srli	r5,r2,18
    5108:	28c01f44 	addi	r3,r5,125
    510c:	18c7883a 	add	r3,r3,r3
    5110:	29401f04 	addi	r5,r5,124
    5114:	003f8e06 	br	4f50 <__alt_data_end+0xfffe5b50>
    5118:	00c03f84 	movi	r3,254
    511c:	01401f84 	movi	r5,126
    5120:	003f8b06 	br	4f50 <__alt_data_end+0xfffe5b50>
    5124:	10c00054 	ori	r3,r2,1
    5128:	30c00115 	stw	r3,4(r6)
    512c:	308d883a 	add	r6,r6,r2
    5130:	30800015 	stw	r2,0(r6)
    5134:	003f7806 	br	4f18 <__alt_data_end+0xfffe5b18>

00005138 <_fwalk>:
    5138:	defff704 	addi	sp,sp,-36
    513c:	dd000415 	stw	r20,16(sp)
    5140:	dfc00815 	stw	ra,32(sp)
    5144:	ddc00715 	stw	r23,28(sp)
    5148:	dd800615 	stw	r22,24(sp)
    514c:	dd400515 	stw	r21,20(sp)
    5150:	dcc00315 	stw	r19,12(sp)
    5154:	dc800215 	stw	r18,8(sp)
    5158:	dc400115 	stw	r17,4(sp)
    515c:	dc000015 	stw	r16,0(sp)
    5160:	2500b804 	addi	r20,r4,736
    5164:	a0002326 	beq	r20,zero,51f4 <_fwalk+0xbc>
    5168:	282b883a 	mov	r21,r5
    516c:	002f883a 	mov	r23,zero
    5170:	05800044 	movi	r22,1
    5174:	04ffffc4 	movi	r19,-1
    5178:	a4400117 	ldw	r17,4(r20)
    517c:	a4800217 	ldw	r18,8(r20)
    5180:	8c7fffc4 	addi	r17,r17,-1
    5184:	88000d16 	blt	r17,zero,51bc <_fwalk+0x84>
    5188:	94000304 	addi	r16,r18,12
    518c:	94800384 	addi	r18,r18,14
    5190:	8080000b 	ldhu	r2,0(r16)
    5194:	8c7fffc4 	addi	r17,r17,-1
    5198:	813ffd04 	addi	r4,r16,-12
    519c:	b080042e 	bgeu	r22,r2,51b0 <_fwalk+0x78>
    51a0:	9080000f 	ldh	r2,0(r18)
    51a4:	14c00226 	beq	r2,r19,51b0 <_fwalk+0x78>
    51a8:	a83ee83a 	callr	r21
    51ac:	b8aeb03a 	or	r23,r23,r2
    51b0:	84001a04 	addi	r16,r16,104
    51b4:	94801a04 	addi	r18,r18,104
    51b8:	8cfff51e 	bne	r17,r19,5190 <__alt_data_end+0xfffe5d90>
    51bc:	a5000017 	ldw	r20,0(r20)
    51c0:	a03fed1e 	bne	r20,zero,5178 <__alt_data_end+0xfffe5d78>
    51c4:	b805883a 	mov	r2,r23
    51c8:	dfc00817 	ldw	ra,32(sp)
    51cc:	ddc00717 	ldw	r23,28(sp)
    51d0:	dd800617 	ldw	r22,24(sp)
    51d4:	dd400517 	ldw	r21,20(sp)
    51d8:	dd000417 	ldw	r20,16(sp)
    51dc:	dcc00317 	ldw	r19,12(sp)
    51e0:	dc800217 	ldw	r18,8(sp)
    51e4:	dc400117 	ldw	r17,4(sp)
    51e8:	dc000017 	ldw	r16,0(sp)
    51ec:	dec00904 	addi	sp,sp,36
    51f0:	f800283a 	ret
    51f4:	002f883a 	mov	r23,zero
    51f8:	003ff206 	br	51c4 <__alt_data_end+0xfffe5dc4>

000051fc <_fwalk_reent>:
    51fc:	defff704 	addi	sp,sp,-36
    5200:	dd000415 	stw	r20,16(sp)
    5204:	dfc00815 	stw	ra,32(sp)
    5208:	ddc00715 	stw	r23,28(sp)
    520c:	dd800615 	stw	r22,24(sp)
    5210:	dd400515 	stw	r21,20(sp)
    5214:	dcc00315 	stw	r19,12(sp)
    5218:	dc800215 	stw	r18,8(sp)
    521c:	dc400115 	stw	r17,4(sp)
    5220:	dc000015 	stw	r16,0(sp)
    5224:	2500b804 	addi	r20,r4,736
    5228:	a0002326 	beq	r20,zero,52b8 <_fwalk_reent+0xbc>
    522c:	282b883a 	mov	r21,r5
    5230:	2027883a 	mov	r19,r4
    5234:	002f883a 	mov	r23,zero
    5238:	05800044 	movi	r22,1
    523c:	04bfffc4 	movi	r18,-1
    5240:	a4400117 	ldw	r17,4(r20)
    5244:	a4000217 	ldw	r16,8(r20)
    5248:	8c7fffc4 	addi	r17,r17,-1
    524c:	88000c16 	blt	r17,zero,5280 <_fwalk_reent+0x84>
    5250:	84000304 	addi	r16,r16,12
    5254:	8080000b 	ldhu	r2,0(r16)
    5258:	8c7fffc4 	addi	r17,r17,-1
    525c:	817ffd04 	addi	r5,r16,-12
    5260:	b080052e 	bgeu	r22,r2,5278 <_fwalk_reent+0x7c>
    5264:	8080008f 	ldh	r2,2(r16)
    5268:	9809883a 	mov	r4,r19
    526c:	14800226 	beq	r2,r18,5278 <_fwalk_reent+0x7c>
    5270:	a83ee83a 	callr	r21
    5274:	b8aeb03a 	or	r23,r23,r2
    5278:	84001a04 	addi	r16,r16,104
    527c:	8cbff51e 	bne	r17,r18,5254 <__alt_data_end+0xfffe5e54>
    5280:	a5000017 	ldw	r20,0(r20)
    5284:	a03fee1e 	bne	r20,zero,5240 <__alt_data_end+0xfffe5e40>
    5288:	b805883a 	mov	r2,r23
    528c:	dfc00817 	ldw	ra,32(sp)
    5290:	ddc00717 	ldw	r23,28(sp)
    5294:	dd800617 	ldw	r22,24(sp)
    5298:	dd400517 	ldw	r21,20(sp)
    529c:	dd000417 	ldw	r20,16(sp)
    52a0:	dcc00317 	ldw	r19,12(sp)
    52a4:	dc800217 	ldw	r18,8(sp)
    52a8:	dc400117 	ldw	r17,4(sp)
    52ac:	dc000017 	ldw	r16,0(sp)
    52b0:	dec00904 	addi	sp,sp,36
    52b4:	f800283a 	ret
    52b8:	002f883a 	mov	r23,zero
    52bc:	003ff206 	br	5288 <__alt_data_end+0xfffe5e88>

000052c0 <_setlocale_r>:
    52c0:	30001b26 	beq	r6,zero,5330 <_setlocale_r+0x70>
    52c4:	01400074 	movhi	r5,1
    52c8:	defffe04 	addi	sp,sp,-8
    52cc:	297fa604 	addi	r5,r5,-360
    52d0:	3009883a 	mov	r4,r6
    52d4:	dc000015 	stw	r16,0(sp)
    52d8:	dfc00115 	stw	ra,4(sp)
    52dc:	3021883a 	mov	r16,r6
    52e0:	00073740 	call	7374 <strcmp>
    52e4:	1000061e 	bne	r2,zero,5300 <_setlocale_r+0x40>
    52e8:	00800074 	movhi	r2,1
    52ec:	10bfa504 	addi	r2,r2,-364
    52f0:	dfc00117 	ldw	ra,4(sp)
    52f4:	dc000017 	ldw	r16,0(sp)
    52f8:	dec00204 	addi	sp,sp,8
    52fc:	f800283a 	ret
    5300:	01400074 	movhi	r5,1
    5304:	297fa504 	addi	r5,r5,-364
    5308:	8009883a 	mov	r4,r16
    530c:	00073740 	call	7374 <strcmp>
    5310:	103ff526 	beq	r2,zero,52e8 <__alt_data_end+0xfffe5ee8>
    5314:	01400074 	movhi	r5,1
    5318:	297f9004 	addi	r5,r5,-448
    531c:	8009883a 	mov	r4,r16
    5320:	00073740 	call	7374 <strcmp>
    5324:	103ff026 	beq	r2,zero,52e8 <__alt_data_end+0xfffe5ee8>
    5328:	0005883a 	mov	r2,zero
    532c:	003ff006 	br	52f0 <__alt_data_end+0xfffe5ef0>
    5330:	00800074 	movhi	r2,1
    5334:	10bfa504 	addi	r2,r2,-364
    5338:	f800283a 	ret

0000533c <__locale_charset>:
    533c:	00800074 	movhi	r2,1
    5340:	10815804 	addi	r2,r2,1376
    5344:	f800283a 	ret

00005348 <__locale_mb_cur_max>:
    5348:	00800074 	movhi	r2,1
    534c:	1086f404 	addi	r2,r2,7120
    5350:	10800017 	ldw	r2,0(r2)
    5354:	f800283a 	ret

00005358 <__locale_msgcharset>:
    5358:	00800074 	movhi	r2,1
    535c:	10815004 	addi	r2,r2,1344
    5360:	f800283a 	ret

00005364 <__locale_cjk_lang>:
    5364:	0005883a 	mov	r2,zero
    5368:	f800283a 	ret

0000536c <_localeconv_r>:
    536c:	00800074 	movhi	r2,1
    5370:	10816004 	addi	r2,r2,1408
    5374:	f800283a 	ret

00005378 <setlocale>:
    5378:	00800074 	movhi	r2,1
    537c:	1086f304 	addi	r2,r2,7116
    5380:	280d883a 	mov	r6,r5
    5384:	200b883a 	mov	r5,r4
    5388:	11000017 	ldw	r4,0(r2)
    538c:	00052c01 	jmpi	52c0 <_setlocale_r>

00005390 <localeconv>:
    5390:	00800074 	movhi	r2,1
    5394:	10816004 	addi	r2,r2,1408
    5398:	f800283a 	ret

0000539c <__smakebuf_r>:
    539c:	2880030b 	ldhu	r2,12(r5)
    53a0:	10c0008c 	andi	r3,r2,2
    53a4:	1800411e 	bne	r3,zero,54ac <__smakebuf_r+0x110>
    53a8:	deffec04 	addi	sp,sp,-80
    53ac:	dc000f15 	stw	r16,60(sp)
    53b0:	2821883a 	mov	r16,r5
    53b4:	2940038f 	ldh	r5,14(r5)
    53b8:	dc401015 	stw	r17,64(sp)
    53bc:	dfc01315 	stw	ra,76(sp)
    53c0:	dcc01215 	stw	r19,72(sp)
    53c4:	dc801115 	stw	r18,68(sp)
    53c8:	2023883a 	mov	r17,r4
    53cc:	28001c16 	blt	r5,zero,5440 <__smakebuf_r+0xa4>
    53d0:	d80d883a 	mov	r6,sp
    53d4:	000907c0 	call	907c <_fstat_r>
    53d8:	10001816 	blt	r2,zero,543c <__smakebuf_r+0xa0>
    53dc:	d8800117 	ldw	r2,4(sp)
    53e0:	00e00014 	movui	r3,32768
    53e4:	10bc000c 	andi	r2,r2,61440
    53e8:	14c80020 	cmpeqi	r19,r2,8192
    53ec:	10c03726 	beq	r2,r3,54cc <__smakebuf_r+0x130>
    53f0:	80c0030b 	ldhu	r3,12(r16)
    53f4:	18c20014 	ori	r3,r3,2048
    53f8:	80c0030d 	sth	r3,12(r16)
    53fc:	00c80004 	movi	r3,8192
    5400:	10c0521e 	bne	r2,r3,554c <__smakebuf_r+0x1b0>
    5404:	8140038f 	ldh	r5,14(r16)
    5408:	8809883a 	mov	r4,r17
    540c:	00095a00 	call	95a0 <_isatty_r>
    5410:	10004c26 	beq	r2,zero,5544 <__smakebuf_r+0x1a8>
    5414:	8080030b 	ldhu	r2,12(r16)
    5418:	80c010c4 	addi	r3,r16,67
    541c:	80c00015 	stw	r3,0(r16)
    5420:	10800054 	ori	r2,r2,1
    5424:	8080030d 	sth	r2,12(r16)
    5428:	00800044 	movi	r2,1
    542c:	80c00415 	stw	r3,16(r16)
    5430:	80800515 	stw	r2,20(r16)
    5434:	04810004 	movi	r18,1024
    5438:	00000706 	br	5458 <__smakebuf_r+0xbc>
    543c:	8080030b 	ldhu	r2,12(r16)
    5440:	10c0200c 	andi	r3,r2,128
    5444:	18001f1e 	bne	r3,zero,54c4 <__smakebuf_r+0x128>
    5448:	04810004 	movi	r18,1024
    544c:	10820014 	ori	r2,r2,2048
    5450:	8080030d 	sth	r2,12(r16)
    5454:	0027883a 	mov	r19,zero
    5458:	900b883a 	mov	r5,r18
    545c:	8809883a 	mov	r4,r17
    5460:	00055580 	call	5558 <_malloc_r>
    5464:	10002c26 	beq	r2,zero,5518 <__smakebuf_r+0x17c>
    5468:	80c0030b 	ldhu	r3,12(r16)
    546c:	01000034 	movhi	r4,0
    5470:	21125704 	addi	r4,r4,18780
    5474:	89000f15 	stw	r4,60(r17)
    5478:	18c02014 	ori	r3,r3,128
    547c:	80c0030d 	sth	r3,12(r16)
    5480:	80800015 	stw	r2,0(r16)
    5484:	80800415 	stw	r2,16(r16)
    5488:	84800515 	stw	r18,20(r16)
    548c:	98001a1e 	bne	r19,zero,54f8 <__smakebuf_r+0x15c>
    5490:	dfc01317 	ldw	ra,76(sp)
    5494:	dcc01217 	ldw	r19,72(sp)
    5498:	dc801117 	ldw	r18,68(sp)
    549c:	dc401017 	ldw	r17,64(sp)
    54a0:	dc000f17 	ldw	r16,60(sp)
    54a4:	dec01404 	addi	sp,sp,80
    54a8:	f800283a 	ret
    54ac:	288010c4 	addi	r2,r5,67
    54b0:	28800015 	stw	r2,0(r5)
    54b4:	28800415 	stw	r2,16(r5)
    54b8:	00800044 	movi	r2,1
    54bc:	28800515 	stw	r2,20(r5)
    54c0:	f800283a 	ret
    54c4:	04801004 	movi	r18,64
    54c8:	003fe006 	br	544c <__alt_data_end+0xfffe604c>
    54cc:	81000a17 	ldw	r4,40(r16)
    54d0:	00c00034 	movhi	r3,0
    54d4:	18dcc404 	addi	r3,r3,29456
    54d8:	20ffc51e 	bne	r4,r3,53f0 <__alt_data_end+0xfffe5ff0>
    54dc:	8080030b 	ldhu	r2,12(r16)
    54e0:	04810004 	movi	r18,1024
    54e4:	84801315 	stw	r18,76(r16)
    54e8:	1484b03a 	or	r2,r2,r18
    54ec:	8080030d 	sth	r2,12(r16)
    54f0:	0027883a 	mov	r19,zero
    54f4:	003fd806 	br	5458 <__alt_data_end+0xfffe6058>
    54f8:	8140038f 	ldh	r5,14(r16)
    54fc:	8809883a 	mov	r4,r17
    5500:	00095a00 	call	95a0 <_isatty_r>
    5504:	103fe226 	beq	r2,zero,5490 <__alt_data_end+0xfffe6090>
    5508:	8080030b 	ldhu	r2,12(r16)
    550c:	10800054 	ori	r2,r2,1
    5510:	8080030d 	sth	r2,12(r16)
    5514:	003fde06 	br	5490 <__alt_data_end+0xfffe6090>
    5518:	8080030b 	ldhu	r2,12(r16)
    551c:	10c0800c 	andi	r3,r2,512
    5520:	183fdb1e 	bne	r3,zero,5490 <__alt_data_end+0xfffe6090>
    5524:	10800094 	ori	r2,r2,2
    5528:	80c010c4 	addi	r3,r16,67
    552c:	8080030d 	sth	r2,12(r16)
    5530:	00800044 	movi	r2,1
    5534:	80c00015 	stw	r3,0(r16)
    5538:	80c00415 	stw	r3,16(r16)
    553c:	80800515 	stw	r2,20(r16)
    5540:	003fd306 	br	5490 <__alt_data_end+0xfffe6090>
    5544:	04810004 	movi	r18,1024
    5548:	003fc306 	br	5458 <__alt_data_end+0xfffe6058>
    554c:	0027883a 	mov	r19,zero
    5550:	04810004 	movi	r18,1024
    5554:	003fc006 	br	5458 <__alt_data_end+0xfffe6058>

00005558 <_malloc_r>:
    5558:	defff504 	addi	sp,sp,-44
    555c:	dc800315 	stw	r18,12(sp)
    5560:	dfc00a15 	stw	ra,40(sp)
    5564:	df000915 	stw	fp,36(sp)
    5568:	ddc00815 	stw	r23,32(sp)
    556c:	dd800715 	stw	r22,28(sp)
    5570:	dd400615 	stw	r21,24(sp)
    5574:	dd000515 	stw	r20,20(sp)
    5578:	dcc00415 	stw	r19,16(sp)
    557c:	dc400215 	stw	r17,8(sp)
    5580:	dc000115 	stw	r16,4(sp)
    5584:	288002c4 	addi	r2,r5,11
    5588:	00c00584 	movi	r3,22
    558c:	2025883a 	mov	r18,r4
    5590:	18807f2e 	bgeu	r3,r2,5790 <_malloc_r+0x238>
    5594:	047ffe04 	movi	r17,-8
    5598:	1462703a 	and	r17,r2,r17
    559c:	8800a316 	blt	r17,zero,582c <_malloc_r+0x2d4>
    55a0:	8940a236 	bltu	r17,r5,582c <_malloc_r+0x2d4>
    55a4:	000df300 	call	df30 <__malloc_lock>
    55a8:	00807dc4 	movi	r2,503
    55ac:	1441e92e 	bgeu	r2,r17,5d54 <_malloc_r+0x7fc>
    55b0:	8804d27a 	srli	r2,r17,9
    55b4:	1000a126 	beq	r2,zero,583c <_malloc_r+0x2e4>
    55b8:	00c00104 	movi	r3,4
    55bc:	18811e36 	bltu	r3,r2,5a38 <_malloc_r+0x4e0>
    55c0:	8804d1ba 	srli	r2,r17,6
    55c4:	12000e44 	addi	r8,r2,57
    55c8:	11c00e04 	addi	r7,r2,56
    55cc:	4209883a 	add	r4,r8,r8
    55d0:	04c00074 	movhi	r19,1
    55d4:	2109883a 	add	r4,r4,r4
    55d8:	9cc16e04 	addi	r19,r19,1464
    55dc:	2109883a 	add	r4,r4,r4
    55e0:	9909883a 	add	r4,r19,r4
    55e4:	24000117 	ldw	r16,4(r4)
    55e8:	213ffe04 	addi	r4,r4,-8
    55ec:	24009726 	beq	r4,r16,584c <_malloc_r+0x2f4>
    55f0:	80800117 	ldw	r2,4(r16)
    55f4:	01bfff04 	movi	r6,-4
    55f8:	014003c4 	movi	r5,15
    55fc:	1184703a 	and	r2,r2,r6
    5600:	1447c83a 	sub	r3,r2,r17
    5604:	28c00716 	blt	r5,r3,5624 <_malloc_r+0xcc>
    5608:	1800920e 	bge	r3,zero,5854 <_malloc_r+0x2fc>
    560c:	84000317 	ldw	r16,12(r16)
    5610:	24008e26 	beq	r4,r16,584c <_malloc_r+0x2f4>
    5614:	80800117 	ldw	r2,4(r16)
    5618:	1184703a 	and	r2,r2,r6
    561c:	1447c83a 	sub	r3,r2,r17
    5620:	28fff90e 	bge	r5,r3,5608 <__alt_data_end+0xfffe6208>
    5624:	3809883a 	mov	r4,r7
    5628:	01800074 	movhi	r6,1
    562c:	9c000417 	ldw	r16,16(r19)
    5630:	31816e04 	addi	r6,r6,1464
    5634:	32000204 	addi	r8,r6,8
    5638:	82013426 	beq	r16,r8,5b0c <_malloc_r+0x5b4>
    563c:	80c00117 	ldw	r3,4(r16)
    5640:	00bfff04 	movi	r2,-4
    5644:	188e703a 	and	r7,r3,r2
    5648:	3c45c83a 	sub	r2,r7,r17
    564c:	00c003c4 	movi	r3,15
    5650:	18811f16 	blt	r3,r2,5ad0 <_malloc_r+0x578>
    5654:	32000515 	stw	r8,20(r6)
    5658:	32000415 	stw	r8,16(r6)
    565c:	10007f0e 	bge	r2,zero,585c <_malloc_r+0x304>
    5660:	00807fc4 	movi	r2,511
    5664:	11c0fd36 	bltu	r2,r7,5a5c <_malloc_r+0x504>
    5668:	3806d0fa 	srli	r3,r7,3
    566c:	01c00044 	movi	r7,1
    5670:	30800117 	ldw	r2,4(r6)
    5674:	19400044 	addi	r5,r3,1
    5678:	294b883a 	add	r5,r5,r5
    567c:	1807d0ba 	srai	r3,r3,2
    5680:	294b883a 	add	r5,r5,r5
    5684:	294b883a 	add	r5,r5,r5
    5688:	298b883a 	add	r5,r5,r6
    568c:	38c6983a 	sll	r3,r7,r3
    5690:	29c00017 	ldw	r7,0(r5)
    5694:	2a7ffe04 	addi	r9,r5,-8
    5698:	1886b03a 	or	r3,r3,r2
    569c:	82400315 	stw	r9,12(r16)
    56a0:	81c00215 	stw	r7,8(r16)
    56a4:	30c00115 	stw	r3,4(r6)
    56a8:	2c000015 	stw	r16,0(r5)
    56ac:	3c000315 	stw	r16,12(r7)
    56b0:	2005d0ba 	srai	r2,r4,2
    56b4:	01400044 	movi	r5,1
    56b8:	288a983a 	sll	r5,r5,r2
    56bc:	19406f36 	bltu	r3,r5,587c <_malloc_r+0x324>
    56c0:	28c4703a 	and	r2,r5,r3
    56c4:	10000a1e 	bne	r2,zero,56f0 <_malloc_r+0x198>
    56c8:	00bfff04 	movi	r2,-4
    56cc:	294b883a 	add	r5,r5,r5
    56d0:	2088703a 	and	r4,r4,r2
    56d4:	28c4703a 	and	r2,r5,r3
    56d8:	21000104 	addi	r4,r4,4
    56dc:	1000041e 	bne	r2,zero,56f0 <_malloc_r+0x198>
    56e0:	294b883a 	add	r5,r5,r5
    56e4:	28c4703a 	and	r2,r5,r3
    56e8:	21000104 	addi	r4,r4,4
    56ec:	103ffc26 	beq	r2,zero,56e0 <__alt_data_end+0xfffe62e0>
    56f0:	02bfff04 	movi	r10,-4
    56f4:	024003c4 	movi	r9,15
    56f8:	21800044 	addi	r6,r4,1
    56fc:	318d883a 	add	r6,r6,r6
    5700:	318d883a 	add	r6,r6,r6
    5704:	318d883a 	add	r6,r6,r6
    5708:	998d883a 	add	r6,r19,r6
    570c:	333ffe04 	addi	r12,r6,-8
    5710:	2017883a 	mov	r11,r4
    5714:	31800104 	addi	r6,r6,4
    5718:	34000017 	ldw	r16,0(r6)
    571c:	31fffd04 	addi	r7,r6,-12
    5720:	81c0041e 	bne	r16,r7,5734 <_malloc_r+0x1dc>
    5724:	0000fb06 	br	5b14 <_malloc_r+0x5bc>
    5728:	1801030e 	bge	r3,zero,5b38 <_malloc_r+0x5e0>
    572c:	84000317 	ldw	r16,12(r16)
    5730:	81c0f826 	beq	r16,r7,5b14 <_malloc_r+0x5bc>
    5734:	80800117 	ldw	r2,4(r16)
    5738:	1284703a 	and	r2,r2,r10
    573c:	1447c83a 	sub	r3,r2,r17
    5740:	48fff90e 	bge	r9,r3,5728 <__alt_data_end+0xfffe6328>
    5744:	80800317 	ldw	r2,12(r16)
    5748:	81000217 	ldw	r4,8(r16)
    574c:	89400054 	ori	r5,r17,1
    5750:	81400115 	stw	r5,4(r16)
    5754:	20800315 	stw	r2,12(r4)
    5758:	11000215 	stw	r4,8(r2)
    575c:	8463883a 	add	r17,r16,r17
    5760:	9c400515 	stw	r17,20(r19)
    5764:	9c400415 	stw	r17,16(r19)
    5768:	18800054 	ori	r2,r3,1
    576c:	88800115 	stw	r2,4(r17)
    5770:	8a000315 	stw	r8,12(r17)
    5774:	8a000215 	stw	r8,8(r17)
    5778:	88e3883a 	add	r17,r17,r3
    577c:	88c00015 	stw	r3,0(r17)
    5780:	9009883a 	mov	r4,r18
    5784:	000df540 	call	df54 <__malloc_unlock>
    5788:	80800204 	addi	r2,r16,8
    578c:	00001b06 	br	57fc <_malloc_r+0x2a4>
    5790:	04400404 	movi	r17,16
    5794:	89402536 	bltu	r17,r5,582c <_malloc_r+0x2d4>
    5798:	000df300 	call	df30 <__malloc_lock>
    579c:	00800184 	movi	r2,6
    57a0:	01000084 	movi	r4,2
    57a4:	04c00074 	movhi	r19,1
    57a8:	1085883a 	add	r2,r2,r2
    57ac:	9cc16e04 	addi	r19,r19,1464
    57b0:	1085883a 	add	r2,r2,r2
    57b4:	9885883a 	add	r2,r19,r2
    57b8:	14000117 	ldw	r16,4(r2)
    57bc:	10fffe04 	addi	r3,r2,-8
    57c0:	80c0d926 	beq	r16,r3,5b28 <_malloc_r+0x5d0>
    57c4:	80c00117 	ldw	r3,4(r16)
    57c8:	81000317 	ldw	r4,12(r16)
    57cc:	00bfff04 	movi	r2,-4
    57d0:	1884703a 	and	r2,r3,r2
    57d4:	81400217 	ldw	r5,8(r16)
    57d8:	8085883a 	add	r2,r16,r2
    57dc:	10c00117 	ldw	r3,4(r2)
    57e0:	29000315 	stw	r4,12(r5)
    57e4:	21400215 	stw	r5,8(r4)
    57e8:	18c00054 	ori	r3,r3,1
    57ec:	10c00115 	stw	r3,4(r2)
    57f0:	9009883a 	mov	r4,r18
    57f4:	000df540 	call	df54 <__malloc_unlock>
    57f8:	80800204 	addi	r2,r16,8
    57fc:	dfc00a17 	ldw	ra,40(sp)
    5800:	df000917 	ldw	fp,36(sp)
    5804:	ddc00817 	ldw	r23,32(sp)
    5808:	dd800717 	ldw	r22,28(sp)
    580c:	dd400617 	ldw	r21,24(sp)
    5810:	dd000517 	ldw	r20,20(sp)
    5814:	dcc00417 	ldw	r19,16(sp)
    5818:	dc800317 	ldw	r18,12(sp)
    581c:	dc400217 	ldw	r17,8(sp)
    5820:	dc000117 	ldw	r16,4(sp)
    5824:	dec00b04 	addi	sp,sp,44
    5828:	f800283a 	ret
    582c:	00800304 	movi	r2,12
    5830:	90800015 	stw	r2,0(r18)
    5834:	0005883a 	mov	r2,zero
    5838:	003ff006 	br	57fc <__alt_data_end+0xfffe63fc>
    583c:	01002004 	movi	r4,128
    5840:	02001004 	movi	r8,64
    5844:	01c00fc4 	movi	r7,63
    5848:	003f6106 	br	55d0 <__alt_data_end+0xfffe61d0>
    584c:	4009883a 	mov	r4,r8
    5850:	003f7506 	br	5628 <__alt_data_end+0xfffe6228>
    5854:	81000317 	ldw	r4,12(r16)
    5858:	003fde06 	br	57d4 <__alt_data_end+0xfffe63d4>
    585c:	81c5883a 	add	r2,r16,r7
    5860:	11400117 	ldw	r5,4(r2)
    5864:	9009883a 	mov	r4,r18
    5868:	29400054 	ori	r5,r5,1
    586c:	11400115 	stw	r5,4(r2)
    5870:	000df540 	call	df54 <__malloc_unlock>
    5874:	80800204 	addi	r2,r16,8
    5878:	003fe006 	br	57fc <__alt_data_end+0xfffe63fc>
    587c:	9c000217 	ldw	r16,8(r19)
    5880:	00bfff04 	movi	r2,-4
    5884:	85800117 	ldw	r22,4(r16)
    5888:	b0ac703a 	and	r22,r22,r2
    588c:	b4400336 	bltu	r22,r17,589c <_malloc_r+0x344>
    5890:	b445c83a 	sub	r2,r22,r17
    5894:	00c003c4 	movi	r3,15
    5898:	18805d16 	blt	r3,r2,5a10 <_malloc_r+0x4b8>
    589c:	05c00074 	movhi	r23,1
    58a0:	00800074 	movhi	r2,1
    58a4:	108dc704 	addi	r2,r2,14108
    58a8:	bdc6f504 	addi	r23,r23,7124
    58ac:	15400017 	ldw	r21,0(r2)
    58b0:	b8c00017 	ldw	r3,0(r23)
    58b4:	00bfffc4 	movi	r2,-1
    58b8:	858d883a 	add	r6,r16,r22
    58bc:	8d6b883a 	add	r21,r17,r21
    58c0:	1880ea26 	beq	r3,r2,5c6c <_malloc_r+0x714>
    58c4:	ad4403c4 	addi	r21,r21,4111
    58c8:	00bc0004 	movi	r2,-4096
    58cc:	a8aa703a 	and	r21,r21,r2
    58d0:	a80b883a 	mov	r5,r21
    58d4:	9009883a 	mov	r4,r18
    58d8:	d9800015 	stw	r6,0(sp)
    58dc:	00071e40 	call	71e4 <_sbrk_r>
    58e0:	1029883a 	mov	r20,r2
    58e4:	00bfffc4 	movi	r2,-1
    58e8:	d9800017 	ldw	r6,0(sp)
    58ec:	a080e826 	beq	r20,r2,5c90 <_malloc_r+0x738>
    58f0:	a180a636 	bltu	r20,r6,5b8c <_malloc_r+0x634>
    58f4:	07000074 	movhi	fp,1
    58f8:	e70dcf04 	addi	fp,fp,14140
    58fc:	e0800017 	ldw	r2,0(fp)
    5900:	a887883a 	add	r3,r21,r2
    5904:	e0c00015 	stw	r3,0(fp)
    5908:	3500e626 	beq	r6,r20,5ca4 <_malloc_r+0x74c>
    590c:	b9000017 	ldw	r4,0(r23)
    5910:	00bfffc4 	movi	r2,-1
    5914:	2080ee26 	beq	r4,r2,5cd0 <_malloc_r+0x778>
    5918:	a185c83a 	sub	r2,r20,r6
    591c:	10c5883a 	add	r2,r2,r3
    5920:	e0800015 	stw	r2,0(fp)
    5924:	a0c001cc 	andi	r3,r20,7
    5928:	1800bc26 	beq	r3,zero,5c1c <_malloc_r+0x6c4>
    592c:	a0e9c83a 	sub	r20,r20,r3
    5930:	00840204 	movi	r2,4104
    5934:	a5000204 	addi	r20,r20,8
    5938:	10c7c83a 	sub	r3,r2,r3
    593c:	a545883a 	add	r2,r20,r21
    5940:	1083ffcc 	andi	r2,r2,4095
    5944:	18abc83a 	sub	r21,r3,r2
    5948:	a80b883a 	mov	r5,r21
    594c:	9009883a 	mov	r4,r18
    5950:	00071e40 	call	71e4 <_sbrk_r>
    5954:	00ffffc4 	movi	r3,-1
    5958:	10c0e126 	beq	r2,r3,5ce0 <_malloc_r+0x788>
    595c:	1505c83a 	sub	r2,r2,r20
    5960:	1545883a 	add	r2,r2,r21
    5964:	10800054 	ori	r2,r2,1
    5968:	e0c00017 	ldw	r3,0(fp)
    596c:	9d000215 	stw	r20,8(r19)
    5970:	a0800115 	stw	r2,4(r20)
    5974:	a8c7883a 	add	r3,r21,r3
    5978:	e0c00015 	stw	r3,0(fp)
    597c:	84c00e26 	beq	r16,r19,59b8 <_malloc_r+0x460>
    5980:	018003c4 	movi	r6,15
    5984:	3580a72e 	bgeu	r6,r22,5c24 <_malloc_r+0x6cc>
    5988:	81400117 	ldw	r5,4(r16)
    598c:	013ffe04 	movi	r4,-8
    5990:	b0bffd04 	addi	r2,r22,-12
    5994:	1104703a 	and	r2,r2,r4
    5998:	2900004c 	andi	r4,r5,1
    599c:	2088b03a 	or	r4,r4,r2
    59a0:	81000115 	stw	r4,4(r16)
    59a4:	01400144 	movi	r5,5
    59a8:	8089883a 	add	r4,r16,r2
    59ac:	21400115 	stw	r5,4(r4)
    59b0:	21400215 	stw	r5,8(r4)
    59b4:	3080cd36 	bltu	r6,r2,5cec <_malloc_r+0x794>
    59b8:	00800074 	movhi	r2,1
    59bc:	108dc604 	addi	r2,r2,14104
    59c0:	11000017 	ldw	r4,0(r2)
    59c4:	20c0012e 	bgeu	r4,r3,59cc <_malloc_r+0x474>
    59c8:	10c00015 	stw	r3,0(r2)
    59cc:	00800074 	movhi	r2,1
    59d0:	108dc504 	addi	r2,r2,14100
    59d4:	11000017 	ldw	r4,0(r2)
    59d8:	9c000217 	ldw	r16,8(r19)
    59dc:	20c0012e 	bgeu	r4,r3,59e4 <_malloc_r+0x48c>
    59e0:	10c00015 	stw	r3,0(r2)
    59e4:	80c00117 	ldw	r3,4(r16)
    59e8:	00bfff04 	movi	r2,-4
    59ec:	1886703a 	and	r3,r3,r2
    59f0:	1c45c83a 	sub	r2,r3,r17
    59f4:	1c400236 	bltu	r3,r17,5a00 <_malloc_r+0x4a8>
    59f8:	00c003c4 	movi	r3,15
    59fc:	18800416 	blt	r3,r2,5a10 <_malloc_r+0x4b8>
    5a00:	9009883a 	mov	r4,r18
    5a04:	000df540 	call	df54 <__malloc_unlock>
    5a08:	0005883a 	mov	r2,zero
    5a0c:	003f7b06 	br	57fc <__alt_data_end+0xfffe63fc>
    5a10:	88c00054 	ori	r3,r17,1
    5a14:	80c00115 	stw	r3,4(r16)
    5a18:	8463883a 	add	r17,r16,r17
    5a1c:	10800054 	ori	r2,r2,1
    5a20:	9c400215 	stw	r17,8(r19)
    5a24:	88800115 	stw	r2,4(r17)
    5a28:	9009883a 	mov	r4,r18
    5a2c:	000df540 	call	df54 <__malloc_unlock>
    5a30:	80800204 	addi	r2,r16,8
    5a34:	003f7106 	br	57fc <__alt_data_end+0xfffe63fc>
    5a38:	00c00504 	movi	r3,20
    5a3c:	18804a2e 	bgeu	r3,r2,5b68 <_malloc_r+0x610>
    5a40:	00c01504 	movi	r3,84
    5a44:	18806e36 	bltu	r3,r2,5c00 <_malloc_r+0x6a8>
    5a48:	8804d33a 	srli	r2,r17,12
    5a4c:	12001bc4 	addi	r8,r2,111
    5a50:	11c01b84 	addi	r7,r2,110
    5a54:	4209883a 	add	r4,r8,r8
    5a58:	003edd06 	br	55d0 <__alt_data_end+0xfffe61d0>
    5a5c:	3804d27a 	srli	r2,r7,9
    5a60:	00c00104 	movi	r3,4
    5a64:	1880442e 	bgeu	r3,r2,5b78 <_malloc_r+0x620>
    5a68:	00c00504 	movi	r3,20
    5a6c:	18808136 	bltu	r3,r2,5c74 <_malloc_r+0x71c>
    5a70:	11401704 	addi	r5,r2,92
    5a74:	10c016c4 	addi	r3,r2,91
    5a78:	294b883a 	add	r5,r5,r5
    5a7c:	294b883a 	add	r5,r5,r5
    5a80:	294b883a 	add	r5,r5,r5
    5a84:	994b883a 	add	r5,r19,r5
    5a88:	28800017 	ldw	r2,0(r5)
    5a8c:	01800074 	movhi	r6,1
    5a90:	297ffe04 	addi	r5,r5,-8
    5a94:	31816e04 	addi	r6,r6,1464
    5a98:	28806526 	beq	r5,r2,5c30 <_malloc_r+0x6d8>
    5a9c:	01bfff04 	movi	r6,-4
    5aa0:	10c00117 	ldw	r3,4(r2)
    5aa4:	1986703a 	and	r3,r3,r6
    5aa8:	38c0022e 	bgeu	r7,r3,5ab4 <_malloc_r+0x55c>
    5aac:	10800217 	ldw	r2,8(r2)
    5ab0:	28bffb1e 	bne	r5,r2,5aa0 <__alt_data_end+0xfffe66a0>
    5ab4:	11400317 	ldw	r5,12(r2)
    5ab8:	98c00117 	ldw	r3,4(r19)
    5abc:	81400315 	stw	r5,12(r16)
    5ac0:	80800215 	stw	r2,8(r16)
    5ac4:	2c000215 	stw	r16,8(r5)
    5ac8:	14000315 	stw	r16,12(r2)
    5acc:	003ef806 	br	56b0 <__alt_data_end+0xfffe62b0>
    5ad0:	88c00054 	ori	r3,r17,1
    5ad4:	80c00115 	stw	r3,4(r16)
    5ad8:	8463883a 	add	r17,r16,r17
    5adc:	34400515 	stw	r17,20(r6)
    5ae0:	34400415 	stw	r17,16(r6)
    5ae4:	10c00054 	ori	r3,r2,1
    5ae8:	8a000315 	stw	r8,12(r17)
    5aec:	8a000215 	stw	r8,8(r17)
    5af0:	88c00115 	stw	r3,4(r17)
    5af4:	88a3883a 	add	r17,r17,r2
    5af8:	88800015 	stw	r2,0(r17)
    5afc:	9009883a 	mov	r4,r18
    5b00:	000df540 	call	df54 <__malloc_unlock>
    5b04:	80800204 	addi	r2,r16,8
    5b08:	003f3c06 	br	57fc <__alt_data_end+0xfffe63fc>
    5b0c:	30c00117 	ldw	r3,4(r6)
    5b10:	003ee706 	br	56b0 <__alt_data_end+0xfffe62b0>
    5b14:	5ac00044 	addi	r11,r11,1
    5b18:	588000cc 	andi	r2,r11,3
    5b1c:	31800204 	addi	r6,r6,8
    5b20:	103efd1e 	bne	r2,zero,5718 <__alt_data_end+0xfffe6318>
    5b24:	00002406 	br	5bb8 <_malloc_r+0x660>
    5b28:	14000317 	ldw	r16,12(r2)
    5b2c:	143f251e 	bne	r2,r16,57c4 <__alt_data_end+0xfffe63c4>
    5b30:	21000084 	addi	r4,r4,2
    5b34:	003ebc06 	br	5628 <__alt_data_end+0xfffe6228>
    5b38:	8085883a 	add	r2,r16,r2
    5b3c:	10c00117 	ldw	r3,4(r2)
    5b40:	81000317 	ldw	r4,12(r16)
    5b44:	81400217 	ldw	r5,8(r16)
    5b48:	18c00054 	ori	r3,r3,1
    5b4c:	10c00115 	stw	r3,4(r2)
    5b50:	29000315 	stw	r4,12(r5)
    5b54:	21400215 	stw	r5,8(r4)
    5b58:	9009883a 	mov	r4,r18
    5b5c:	000df540 	call	df54 <__malloc_unlock>
    5b60:	80800204 	addi	r2,r16,8
    5b64:	003f2506 	br	57fc <__alt_data_end+0xfffe63fc>
    5b68:	12001704 	addi	r8,r2,92
    5b6c:	11c016c4 	addi	r7,r2,91
    5b70:	4209883a 	add	r4,r8,r8
    5b74:	003e9606 	br	55d0 <__alt_data_end+0xfffe61d0>
    5b78:	3804d1ba 	srli	r2,r7,6
    5b7c:	11400e44 	addi	r5,r2,57
    5b80:	10c00e04 	addi	r3,r2,56
    5b84:	294b883a 	add	r5,r5,r5
    5b88:	003fbc06 	br	5a7c <__alt_data_end+0xfffe667c>
    5b8c:	84ff5926 	beq	r16,r19,58f4 <__alt_data_end+0xfffe64f4>
    5b90:	00800074 	movhi	r2,1
    5b94:	10816e04 	addi	r2,r2,1464
    5b98:	14000217 	ldw	r16,8(r2)
    5b9c:	00bfff04 	movi	r2,-4
    5ba0:	80c00117 	ldw	r3,4(r16)
    5ba4:	1886703a 	and	r3,r3,r2
    5ba8:	003f9106 	br	59f0 <__alt_data_end+0xfffe65f0>
    5bac:	60800217 	ldw	r2,8(r12)
    5bb0:	213fffc4 	addi	r4,r4,-1
    5bb4:	1300651e 	bne	r2,r12,5d4c <_malloc_r+0x7f4>
    5bb8:	208000cc 	andi	r2,r4,3
    5bbc:	633ffe04 	addi	r12,r12,-8
    5bc0:	103ffa1e 	bne	r2,zero,5bac <__alt_data_end+0xfffe67ac>
    5bc4:	98800117 	ldw	r2,4(r19)
    5bc8:	0146303a 	nor	r3,zero,r5
    5bcc:	1884703a 	and	r2,r3,r2
    5bd0:	98800115 	stw	r2,4(r19)
    5bd4:	294b883a 	add	r5,r5,r5
    5bd8:	117f2836 	bltu	r2,r5,587c <__alt_data_end+0xfffe647c>
    5bdc:	283f2726 	beq	r5,zero,587c <__alt_data_end+0xfffe647c>
    5be0:	2886703a 	and	r3,r5,r2
    5be4:	5809883a 	mov	r4,r11
    5be8:	183ec31e 	bne	r3,zero,56f8 <__alt_data_end+0xfffe62f8>
    5bec:	294b883a 	add	r5,r5,r5
    5bf0:	2886703a 	and	r3,r5,r2
    5bf4:	21000104 	addi	r4,r4,4
    5bf8:	183ffc26 	beq	r3,zero,5bec <__alt_data_end+0xfffe67ec>
    5bfc:	003ebe06 	br	56f8 <__alt_data_end+0xfffe62f8>
    5c00:	00c05504 	movi	r3,340
    5c04:	18801236 	bltu	r3,r2,5c50 <_malloc_r+0x6f8>
    5c08:	8804d3fa 	srli	r2,r17,15
    5c0c:	12001e04 	addi	r8,r2,120
    5c10:	11c01dc4 	addi	r7,r2,119
    5c14:	4209883a 	add	r4,r8,r8
    5c18:	003e6d06 	br	55d0 <__alt_data_end+0xfffe61d0>
    5c1c:	00c40004 	movi	r3,4096
    5c20:	003f4606 	br	593c <__alt_data_end+0xfffe653c>
    5c24:	00800044 	movi	r2,1
    5c28:	a0800115 	stw	r2,4(r20)
    5c2c:	003f7406 	br	5a00 <__alt_data_end+0xfffe6600>
    5c30:	1805d0ba 	srai	r2,r3,2
    5c34:	01c00044 	movi	r7,1
    5c38:	30c00117 	ldw	r3,4(r6)
    5c3c:	388e983a 	sll	r7,r7,r2
    5c40:	2805883a 	mov	r2,r5
    5c44:	38c6b03a 	or	r3,r7,r3
    5c48:	30c00115 	stw	r3,4(r6)
    5c4c:	003f9b06 	br	5abc <__alt_data_end+0xfffe66bc>
    5c50:	00c15504 	movi	r3,1364
    5c54:	18801a36 	bltu	r3,r2,5cc0 <_malloc_r+0x768>
    5c58:	8804d4ba 	srli	r2,r17,18
    5c5c:	12001f44 	addi	r8,r2,125
    5c60:	11c01f04 	addi	r7,r2,124
    5c64:	4209883a 	add	r4,r8,r8
    5c68:	003e5906 	br	55d0 <__alt_data_end+0xfffe61d0>
    5c6c:	ad400404 	addi	r21,r21,16
    5c70:	003f1706 	br	58d0 <__alt_data_end+0xfffe64d0>
    5c74:	00c01504 	movi	r3,84
    5c78:	18802336 	bltu	r3,r2,5d08 <_malloc_r+0x7b0>
    5c7c:	3804d33a 	srli	r2,r7,12
    5c80:	11401bc4 	addi	r5,r2,111
    5c84:	10c01b84 	addi	r3,r2,110
    5c88:	294b883a 	add	r5,r5,r5
    5c8c:	003f7b06 	br	5a7c <__alt_data_end+0xfffe667c>
    5c90:	9c000217 	ldw	r16,8(r19)
    5c94:	00bfff04 	movi	r2,-4
    5c98:	80c00117 	ldw	r3,4(r16)
    5c9c:	1886703a 	and	r3,r3,r2
    5ca0:	003f5306 	br	59f0 <__alt_data_end+0xfffe65f0>
    5ca4:	3083ffcc 	andi	r2,r6,4095
    5ca8:	103f181e 	bne	r2,zero,590c <__alt_data_end+0xfffe650c>
    5cac:	99000217 	ldw	r4,8(r19)
    5cb0:	b545883a 	add	r2,r22,r21
    5cb4:	10800054 	ori	r2,r2,1
    5cb8:	20800115 	stw	r2,4(r4)
    5cbc:	003f3e06 	br	59b8 <__alt_data_end+0xfffe65b8>
    5cc0:	01003f84 	movi	r4,254
    5cc4:	02001fc4 	movi	r8,127
    5cc8:	01c01f84 	movi	r7,126
    5ccc:	003e4006 	br	55d0 <__alt_data_end+0xfffe61d0>
    5cd0:	00800074 	movhi	r2,1
    5cd4:	1086f504 	addi	r2,r2,7124
    5cd8:	15000015 	stw	r20,0(r2)
    5cdc:	003f1106 	br	5924 <__alt_data_end+0xfffe6524>
    5ce0:	00800044 	movi	r2,1
    5ce4:	002b883a 	mov	r21,zero
    5ce8:	003f1f06 	br	5968 <__alt_data_end+0xfffe6568>
    5cec:	81400204 	addi	r5,r16,8
    5cf0:	9009883a 	mov	r4,r18
    5cf4:	0004e280 	call	4e28 <_free_r>
    5cf8:	00800074 	movhi	r2,1
    5cfc:	108dcf04 	addi	r2,r2,14140
    5d00:	10c00017 	ldw	r3,0(r2)
    5d04:	003f2c06 	br	59b8 <__alt_data_end+0xfffe65b8>
    5d08:	00c05504 	movi	r3,340
    5d0c:	18800536 	bltu	r3,r2,5d24 <_malloc_r+0x7cc>
    5d10:	3804d3fa 	srli	r2,r7,15
    5d14:	11401e04 	addi	r5,r2,120
    5d18:	10c01dc4 	addi	r3,r2,119
    5d1c:	294b883a 	add	r5,r5,r5
    5d20:	003f5606 	br	5a7c <__alt_data_end+0xfffe667c>
    5d24:	00c15504 	movi	r3,1364
    5d28:	18800536 	bltu	r3,r2,5d40 <_malloc_r+0x7e8>
    5d2c:	3804d4ba 	srli	r2,r7,18
    5d30:	11401f44 	addi	r5,r2,125
    5d34:	10c01f04 	addi	r3,r2,124
    5d38:	294b883a 	add	r5,r5,r5
    5d3c:	003f4f06 	br	5a7c <__alt_data_end+0xfffe667c>
    5d40:	01403f84 	movi	r5,254
    5d44:	00c01f84 	movi	r3,126
    5d48:	003f4c06 	br	5a7c <__alt_data_end+0xfffe667c>
    5d4c:	98800117 	ldw	r2,4(r19)
    5d50:	003fa006 	br	5bd4 <__alt_data_end+0xfffe67d4>
    5d54:	8808d0fa 	srli	r4,r17,3
    5d58:	20800044 	addi	r2,r4,1
    5d5c:	1085883a 	add	r2,r2,r2
    5d60:	003e9006 	br	57a4 <__alt_data_end+0xfffe63a4>

00005d64 <memchr>:
    5d64:	208000cc 	andi	r2,r4,3
    5d68:	280f883a 	mov	r7,r5
    5d6c:	10003426 	beq	r2,zero,5e40 <memchr+0xdc>
    5d70:	30bfffc4 	addi	r2,r6,-1
    5d74:	30001a26 	beq	r6,zero,5de0 <memchr+0x7c>
    5d78:	20c00003 	ldbu	r3,0(r4)
    5d7c:	29803fcc 	andi	r6,r5,255
    5d80:	30c0051e 	bne	r6,r3,5d98 <memchr+0x34>
    5d84:	00001806 	br	5de8 <memchr+0x84>
    5d88:	10001526 	beq	r2,zero,5de0 <memchr+0x7c>
    5d8c:	20c00003 	ldbu	r3,0(r4)
    5d90:	10bfffc4 	addi	r2,r2,-1
    5d94:	30c01426 	beq	r6,r3,5de8 <memchr+0x84>
    5d98:	21000044 	addi	r4,r4,1
    5d9c:	20c000cc 	andi	r3,r4,3
    5da0:	183ff91e 	bne	r3,zero,5d88 <__alt_data_end+0xfffe6988>
    5da4:	020000c4 	movi	r8,3
    5da8:	40801136 	bltu	r8,r2,5df0 <memchr+0x8c>
    5dac:	10000c26 	beq	r2,zero,5de0 <memchr+0x7c>
    5db0:	20c00003 	ldbu	r3,0(r4)
    5db4:	29403fcc 	andi	r5,r5,255
    5db8:	28c00b26 	beq	r5,r3,5de8 <memchr+0x84>
    5dbc:	20c00044 	addi	r3,r4,1
    5dc0:	39803fcc 	andi	r6,r7,255
    5dc4:	2089883a 	add	r4,r4,r2
    5dc8:	00000306 	br	5dd8 <memchr+0x74>
    5dcc:	18c00044 	addi	r3,r3,1
    5dd0:	197fffc3 	ldbu	r5,-1(r3)
    5dd4:	31400526 	beq	r6,r5,5dec <memchr+0x88>
    5dd8:	1805883a 	mov	r2,r3
    5ddc:	20fffb1e 	bne	r4,r3,5dcc <__alt_data_end+0xfffe69cc>
    5de0:	0005883a 	mov	r2,zero
    5de4:	f800283a 	ret
    5de8:	2005883a 	mov	r2,r4
    5dec:	f800283a 	ret
    5df0:	28c03fcc 	andi	r3,r5,255
    5df4:	1812923a 	slli	r9,r3,8
    5df8:	02ffbff4 	movhi	r11,65279
    5dfc:	02a02074 	movhi	r10,32897
    5e00:	48d2b03a 	or	r9,r9,r3
    5e04:	4806943a 	slli	r3,r9,16
    5e08:	5affbfc4 	addi	r11,r11,-257
    5e0c:	52a02004 	addi	r10,r10,-32640
    5e10:	48d2b03a 	or	r9,r9,r3
    5e14:	20c00017 	ldw	r3,0(r4)
    5e18:	48c6f03a 	xor	r3,r9,r3
    5e1c:	1acd883a 	add	r6,r3,r11
    5e20:	00c6303a 	nor	r3,zero,r3
    5e24:	30c6703a 	and	r3,r6,r3
    5e28:	1a86703a 	and	r3,r3,r10
    5e2c:	183fe01e 	bne	r3,zero,5db0 <__alt_data_end+0xfffe69b0>
    5e30:	10bfff04 	addi	r2,r2,-4
    5e34:	21000104 	addi	r4,r4,4
    5e38:	40bff636 	bltu	r8,r2,5e14 <__alt_data_end+0xfffe6a14>
    5e3c:	003fdb06 	br	5dac <__alt_data_end+0xfffe69ac>
    5e40:	3005883a 	mov	r2,r6
    5e44:	003fd706 	br	5da4 <__alt_data_end+0xfffe69a4>

00005e48 <memcpy>:
    5e48:	defffd04 	addi	sp,sp,-12
    5e4c:	dfc00215 	stw	ra,8(sp)
    5e50:	dc400115 	stw	r17,4(sp)
    5e54:	dc000015 	stw	r16,0(sp)
    5e58:	00c003c4 	movi	r3,15
    5e5c:	2005883a 	mov	r2,r4
    5e60:	1980452e 	bgeu	r3,r6,5f78 <memcpy+0x130>
    5e64:	2906b03a 	or	r3,r5,r4
    5e68:	18c000cc 	andi	r3,r3,3
    5e6c:	1800441e 	bne	r3,zero,5f80 <memcpy+0x138>
    5e70:	347ffc04 	addi	r17,r6,-16
    5e74:	8822d13a 	srli	r17,r17,4
    5e78:	28c00104 	addi	r3,r5,4
    5e7c:	23400104 	addi	r13,r4,4
    5e80:	8820913a 	slli	r16,r17,4
    5e84:	2b000204 	addi	r12,r5,8
    5e88:	22c00204 	addi	r11,r4,8
    5e8c:	84000504 	addi	r16,r16,20
    5e90:	2a800304 	addi	r10,r5,12
    5e94:	22400304 	addi	r9,r4,12
    5e98:	2c21883a 	add	r16,r5,r16
    5e9c:	2811883a 	mov	r8,r5
    5ea0:	200f883a 	mov	r7,r4
    5ea4:	41000017 	ldw	r4,0(r8)
    5ea8:	1fc00017 	ldw	ra,0(r3)
    5eac:	63c00017 	ldw	r15,0(r12)
    5eb0:	39000015 	stw	r4,0(r7)
    5eb4:	53800017 	ldw	r14,0(r10)
    5eb8:	6fc00015 	stw	ra,0(r13)
    5ebc:	5bc00015 	stw	r15,0(r11)
    5ec0:	4b800015 	stw	r14,0(r9)
    5ec4:	18c00404 	addi	r3,r3,16
    5ec8:	39c00404 	addi	r7,r7,16
    5ecc:	42000404 	addi	r8,r8,16
    5ed0:	6b400404 	addi	r13,r13,16
    5ed4:	63000404 	addi	r12,r12,16
    5ed8:	5ac00404 	addi	r11,r11,16
    5edc:	52800404 	addi	r10,r10,16
    5ee0:	4a400404 	addi	r9,r9,16
    5ee4:	1c3fef1e 	bne	r3,r16,5ea4 <__alt_data_end+0xfffe6aa4>
    5ee8:	89c00044 	addi	r7,r17,1
    5eec:	380e913a 	slli	r7,r7,4
    5ef0:	310003cc 	andi	r4,r6,15
    5ef4:	02c000c4 	movi	r11,3
    5ef8:	11c7883a 	add	r3,r2,r7
    5efc:	29cb883a 	add	r5,r5,r7
    5f00:	5900212e 	bgeu	r11,r4,5f88 <memcpy+0x140>
    5f04:	1813883a 	mov	r9,r3
    5f08:	2811883a 	mov	r8,r5
    5f0c:	200f883a 	mov	r7,r4
    5f10:	42800017 	ldw	r10,0(r8)
    5f14:	4a400104 	addi	r9,r9,4
    5f18:	39ffff04 	addi	r7,r7,-4
    5f1c:	4abfff15 	stw	r10,-4(r9)
    5f20:	42000104 	addi	r8,r8,4
    5f24:	59fffa36 	bltu	r11,r7,5f10 <__alt_data_end+0xfffe6b10>
    5f28:	213fff04 	addi	r4,r4,-4
    5f2c:	2008d0ba 	srli	r4,r4,2
    5f30:	318000cc 	andi	r6,r6,3
    5f34:	21000044 	addi	r4,r4,1
    5f38:	2109883a 	add	r4,r4,r4
    5f3c:	2109883a 	add	r4,r4,r4
    5f40:	1907883a 	add	r3,r3,r4
    5f44:	290b883a 	add	r5,r5,r4
    5f48:	30000626 	beq	r6,zero,5f64 <memcpy+0x11c>
    5f4c:	198d883a 	add	r6,r3,r6
    5f50:	29c00003 	ldbu	r7,0(r5)
    5f54:	18c00044 	addi	r3,r3,1
    5f58:	29400044 	addi	r5,r5,1
    5f5c:	19ffffc5 	stb	r7,-1(r3)
    5f60:	19bffb1e 	bne	r3,r6,5f50 <__alt_data_end+0xfffe6b50>
    5f64:	dfc00217 	ldw	ra,8(sp)
    5f68:	dc400117 	ldw	r17,4(sp)
    5f6c:	dc000017 	ldw	r16,0(sp)
    5f70:	dec00304 	addi	sp,sp,12
    5f74:	f800283a 	ret
    5f78:	2007883a 	mov	r3,r4
    5f7c:	003ff206 	br	5f48 <__alt_data_end+0xfffe6b48>
    5f80:	2007883a 	mov	r3,r4
    5f84:	003ff106 	br	5f4c <__alt_data_end+0xfffe6b4c>
    5f88:	200d883a 	mov	r6,r4
    5f8c:	003fee06 	br	5f48 <__alt_data_end+0xfffe6b48>

00005f90 <memset>:
    5f90:	20c000cc 	andi	r3,r4,3
    5f94:	2005883a 	mov	r2,r4
    5f98:	18004426 	beq	r3,zero,60ac <memset+0x11c>
    5f9c:	31ffffc4 	addi	r7,r6,-1
    5fa0:	30004026 	beq	r6,zero,60a4 <memset+0x114>
    5fa4:	2813883a 	mov	r9,r5
    5fa8:	200d883a 	mov	r6,r4
    5fac:	2007883a 	mov	r3,r4
    5fb0:	00000406 	br	5fc4 <memset+0x34>
    5fb4:	3a3fffc4 	addi	r8,r7,-1
    5fb8:	31800044 	addi	r6,r6,1
    5fbc:	38003926 	beq	r7,zero,60a4 <memset+0x114>
    5fc0:	400f883a 	mov	r7,r8
    5fc4:	18c00044 	addi	r3,r3,1
    5fc8:	32400005 	stb	r9,0(r6)
    5fcc:	1a0000cc 	andi	r8,r3,3
    5fd0:	403ff81e 	bne	r8,zero,5fb4 <__alt_data_end+0xfffe6bb4>
    5fd4:	010000c4 	movi	r4,3
    5fd8:	21c02d2e 	bgeu	r4,r7,6090 <memset+0x100>
    5fdc:	29003fcc 	andi	r4,r5,255
    5fe0:	200c923a 	slli	r6,r4,8
    5fe4:	3108b03a 	or	r4,r6,r4
    5fe8:	200c943a 	slli	r6,r4,16
    5fec:	218cb03a 	or	r6,r4,r6
    5ff0:	010003c4 	movi	r4,15
    5ff4:	21c0182e 	bgeu	r4,r7,6058 <memset+0xc8>
    5ff8:	3b3ffc04 	addi	r12,r7,-16
    5ffc:	6018d13a 	srli	r12,r12,4
    6000:	1a000104 	addi	r8,r3,4
    6004:	1ac00204 	addi	r11,r3,8
    6008:	6008913a 	slli	r4,r12,4
    600c:	1a800304 	addi	r10,r3,12
    6010:	1813883a 	mov	r9,r3
    6014:	21000504 	addi	r4,r4,20
    6018:	1909883a 	add	r4,r3,r4
    601c:	49800015 	stw	r6,0(r9)
    6020:	41800015 	stw	r6,0(r8)
    6024:	59800015 	stw	r6,0(r11)
    6028:	51800015 	stw	r6,0(r10)
    602c:	42000404 	addi	r8,r8,16
    6030:	4a400404 	addi	r9,r9,16
    6034:	5ac00404 	addi	r11,r11,16
    6038:	52800404 	addi	r10,r10,16
    603c:	413ff71e 	bne	r8,r4,601c <__alt_data_end+0xfffe6c1c>
    6040:	63000044 	addi	r12,r12,1
    6044:	6018913a 	slli	r12,r12,4
    6048:	39c003cc 	andi	r7,r7,15
    604c:	010000c4 	movi	r4,3
    6050:	1b07883a 	add	r3,r3,r12
    6054:	21c00e2e 	bgeu	r4,r7,6090 <memset+0x100>
    6058:	1813883a 	mov	r9,r3
    605c:	3811883a 	mov	r8,r7
    6060:	010000c4 	movi	r4,3
    6064:	49800015 	stw	r6,0(r9)
    6068:	423fff04 	addi	r8,r8,-4
    606c:	4a400104 	addi	r9,r9,4
    6070:	223ffc36 	bltu	r4,r8,6064 <__alt_data_end+0xfffe6c64>
    6074:	393fff04 	addi	r4,r7,-4
    6078:	2008d0ba 	srli	r4,r4,2
    607c:	39c000cc 	andi	r7,r7,3
    6080:	21000044 	addi	r4,r4,1
    6084:	2109883a 	add	r4,r4,r4
    6088:	2109883a 	add	r4,r4,r4
    608c:	1907883a 	add	r3,r3,r4
    6090:	38000526 	beq	r7,zero,60a8 <memset+0x118>
    6094:	19cf883a 	add	r7,r3,r7
    6098:	19400005 	stb	r5,0(r3)
    609c:	18c00044 	addi	r3,r3,1
    60a0:	38fffd1e 	bne	r7,r3,6098 <__alt_data_end+0xfffe6c98>
    60a4:	f800283a 	ret
    60a8:	f800283a 	ret
    60ac:	2007883a 	mov	r3,r4
    60b0:	300f883a 	mov	r7,r6
    60b4:	003fc706 	br	5fd4 <__alt_data_end+0xfffe6bd4>

000060b8 <_Balloc>:
    60b8:	20801317 	ldw	r2,76(r4)
    60bc:	defffc04 	addi	sp,sp,-16
    60c0:	dc400115 	stw	r17,4(sp)
    60c4:	dc000015 	stw	r16,0(sp)
    60c8:	dfc00315 	stw	ra,12(sp)
    60cc:	dc800215 	stw	r18,8(sp)
    60d0:	2023883a 	mov	r17,r4
    60d4:	2821883a 	mov	r16,r5
    60d8:	10000f26 	beq	r2,zero,6118 <_Balloc+0x60>
    60dc:	8407883a 	add	r3,r16,r16
    60e0:	18c7883a 	add	r3,r3,r3
    60e4:	10c7883a 	add	r3,r2,r3
    60e8:	18800017 	ldw	r2,0(r3)
    60ec:	10001126 	beq	r2,zero,6134 <_Balloc+0x7c>
    60f0:	11000017 	ldw	r4,0(r2)
    60f4:	19000015 	stw	r4,0(r3)
    60f8:	10000415 	stw	zero,16(r2)
    60fc:	10000315 	stw	zero,12(r2)
    6100:	dfc00317 	ldw	ra,12(sp)
    6104:	dc800217 	ldw	r18,8(sp)
    6108:	dc400117 	ldw	r17,4(sp)
    610c:	dc000017 	ldw	r16,0(sp)
    6110:	dec00404 	addi	sp,sp,16
    6114:	f800283a 	ret
    6118:	01800844 	movi	r6,33
    611c:	01400104 	movi	r5,4
    6120:	0008c940 	call	8c94 <_calloc_r>
    6124:	88801315 	stw	r2,76(r17)
    6128:	103fec1e 	bne	r2,zero,60dc <__alt_data_end+0xfffe6cdc>
    612c:	0005883a 	mov	r2,zero
    6130:	003ff306 	br	6100 <__alt_data_end+0xfffe6d00>
    6134:	01400044 	movi	r5,1
    6138:	2c24983a 	sll	r18,r5,r16
    613c:	8809883a 	mov	r4,r17
    6140:	91800144 	addi	r6,r18,5
    6144:	318d883a 	add	r6,r6,r6
    6148:	318d883a 	add	r6,r6,r6
    614c:	0008c940 	call	8c94 <_calloc_r>
    6150:	103ff626 	beq	r2,zero,612c <__alt_data_end+0xfffe6d2c>
    6154:	14000115 	stw	r16,4(r2)
    6158:	14800215 	stw	r18,8(r2)
    615c:	003fe606 	br	60f8 <__alt_data_end+0xfffe6cf8>

00006160 <_Bfree>:
    6160:	28000826 	beq	r5,zero,6184 <_Bfree+0x24>
    6164:	28c00117 	ldw	r3,4(r5)
    6168:	20801317 	ldw	r2,76(r4)
    616c:	18c7883a 	add	r3,r3,r3
    6170:	18c7883a 	add	r3,r3,r3
    6174:	10c5883a 	add	r2,r2,r3
    6178:	10c00017 	ldw	r3,0(r2)
    617c:	28c00015 	stw	r3,0(r5)
    6180:	11400015 	stw	r5,0(r2)
    6184:	f800283a 	ret

00006188 <__multadd>:
    6188:	defff704 	addi	sp,sp,-36
    618c:	dc800215 	stw	r18,8(sp)
    6190:	2c800417 	ldw	r18,16(r5)
    6194:	dd800615 	stw	r22,24(sp)
    6198:	dd400515 	stw	r21,20(sp)
    619c:	dd000415 	stw	r20,16(sp)
    61a0:	dcc00315 	stw	r19,12(sp)
    61a4:	dc400115 	stw	r17,4(sp)
    61a8:	dc000015 	stw	r16,0(sp)
    61ac:	dfc00815 	stw	ra,32(sp)
    61b0:	ddc00715 	stw	r23,28(sp)
    61b4:	2827883a 	mov	r19,r5
    61b8:	2029883a 	mov	r20,r4
    61bc:	3023883a 	mov	r17,r6
    61c0:	3821883a 	mov	r16,r7
    61c4:	2d400504 	addi	r21,r5,20
    61c8:	002d883a 	mov	r22,zero
    61cc:	adc00017 	ldw	r23,0(r21)
    61d0:	880b883a 	mov	r5,r17
    61d4:	ad400104 	addi	r21,r21,4
    61d8:	b93fffcc 	andi	r4,r23,65535
    61dc:	000ae280 	call	ae28 <__mulsi3>
    61e0:	b808d43a 	srli	r4,r23,16
    61e4:	880b883a 	mov	r5,r17
    61e8:	1421883a 	add	r16,r2,r16
    61ec:	000ae280 	call	ae28 <__mulsi3>
    61f0:	800ed43a 	srli	r7,r16,16
    61f4:	80ffffcc 	andi	r3,r16,65535
    61f8:	b5800044 	addi	r22,r22,1
    61fc:	11c5883a 	add	r2,r2,r7
    6200:	100e943a 	slli	r7,r2,16
    6204:	1020d43a 	srli	r16,r2,16
    6208:	38c7883a 	add	r3,r7,r3
    620c:	a8ffff15 	stw	r3,-4(r21)
    6210:	b4bfee16 	blt	r22,r18,61cc <__alt_data_end+0xfffe6dcc>
    6214:	80000926 	beq	r16,zero,623c <__multadd+0xb4>
    6218:	98800217 	ldw	r2,8(r19)
    621c:	9080130e 	bge	r18,r2,626c <__multadd+0xe4>
    6220:	90800144 	addi	r2,r18,5
    6224:	1085883a 	add	r2,r2,r2
    6228:	1085883a 	add	r2,r2,r2
    622c:	9885883a 	add	r2,r19,r2
    6230:	14000015 	stw	r16,0(r2)
    6234:	94800044 	addi	r18,r18,1
    6238:	9c800415 	stw	r18,16(r19)
    623c:	9805883a 	mov	r2,r19
    6240:	dfc00817 	ldw	ra,32(sp)
    6244:	ddc00717 	ldw	r23,28(sp)
    6248:	dd800617 	ldw	r22,24(sp)
    624c:	dd400517 	ldw	r21,20(sp)
    6250:	dd000417 	ldw	r20,16(sp)
    6254:	dcc00317 	ldw	r19,12(sp)
    6258:	dc800217 	ldw	r18,8(sp)
    625c:	dc400117 	ldw	r17,4(sp)
    6260:	dc000017 	ldw	r16,0(sp)
    6264:	dec00904 	addi	sp,sp,36
    6268:	f800283a 	ret
    626c:	99400117 	ldw	r5,4(r19)
    6270:	a009883a 	mov	r4,r20
    6274:	29400044 	addi	r5,r5,1
    6278:	00060b80 	call	60b8 <_Balloc>
    627c:	99800417 	ldw	r6,16(r19)
    6280:	99400304 	addi	r5,r19,12
    6284:	11000304 	addi	r4,r2,12
    6288:	31800084 	addi	r6,r6,2
    628c:	318d883a 	add	r6,r6,r6
    6290:	318d883a 	add	r6,r6,r6
    6294:	1023883a 	mov	r17,r2
    6298:	0005e480 	call	5e48 <memcpy>
    629c:	98000a26 	beq	r19,zero,62c8 <__multadd+0x140>
    62a0:	98c00117 	ldw	r3,4(r19)
    62a4:	a0801317 	ldw	r2,76(r20)
    62a8:	18c7883a 	add	r3,r3,r3
    62ac:	18c7883a 	add	r3,r3,r3
    62b0:	10c5883a 	add	r2,r2,r3
    62b4:	10c00017 	ldw	r3,0(r2)
    62b8:	98c00015 	stw	r3,0(r19)
    62bc:	14c00015 	stw	r19,0(r2)
    62c0:	8827883a 	mov	r19,r17
    62c4:	003fd606 	br	6220 <__alt_data_end+0xfffe6e20>
    62c8:	8827883a 	mov	r19,r17
    62cc:	003fd406 	br	6220 <__alt_data_end+0xfffe6e20>

000062d0 <__s2b>:
    62d0:	defff904 	addi	sp,sp,-28
    62d4:	dc400115 	stw	r17,4(sp)
    62d8:	dc000015 	stw	r16,0(sp)
    62dc:	2023883a 	mov	r17,r4
    62e0:	2821883a 	mov	r16,r5
    62e4:	39000204 	addi	r4,r7,8
    62e8:	01400244 	movi	r5,9
    62ec:	dcc00315 	stw	r19,12(sp)
    62f0:	dc800215 	stw	r18,8(sp)
    62f4:	dfc00615 	stw	ra,24(sp)
    62f8:	dd400515 	stw	r21,20(sp)
    62fc:	dd000415 	stw	r20,16(sp)
    6300:	3825883a 	mov	r18,r7
    6304:	3027883a 	mov	r19,r6
    6308:	000ac740 	call	ac74 <__divsi3>
    630c:	00c00044 	movi	r3,1
    6310:	000b883a 	mov	r5,zero
    6314:	1880030e 	bge	r3,r2,6324 <__s2b+0x54>
    6318:	18c7883a 	add	r3,r3,r3
    631c:	29400044 	addi	r5,r5,1
    6320:	18bffd16 	blt	r3,r2,6318 <__alt_data_end+0xfffe6f18>
    6324:	8809883a 	mov	r4,r17
    6328:	00060b80 	call	60b8 <_Balloc>
    632c:	d8c00717 	ldw	r3,28(sp)
    6330:	10c00515 	stw	r3,20(r2)
    6334:	00c00044 	movi	r3,1
    6338:	10c00415 	stw	r3,16(r2)
    633c:	00c00244 	movi	r3,9
    6340:	1cc0210e 	bge	r3,r19,63c8 <__s2b+0xf8>
    6344:	80eb883a 	add	r21,r16,r3
    6348:	a829883a 	mov	r20,r21
    634c:	84e1883a 	add	r16,r16,r19
    6350:	a1c00007 	ldb	r7,0(r20)
    6354:	01800284 	movi	r6,10
    6358:	a5000044 	addi	r20,r20,1
    635c:	100b883a 	mov	r5,r2
    6360:	39fff404 	addi	r7,r7,-48
    6364:	8809883a 	mov	r4,r17
    6368:	00061880 	call	6188 <__multadd>
    636c:	a43ff81e 	bne	r20,r16,6350 <__alt_data_end+0xfffe6f50>
    6370:	ace1883a 	add	r16,r21,r19
    6374:	843ffe04 	addi	r16,r16,-8
    6378:	9c800a0e 	bge	r19,r18,63a4 <__s2b+0xd4>
    637c:	94e5c83a 	sub	r18,r18,r19
    6380:	84a5883a 	add	r18,r16,r18
    6384:	81c00007 	ldb	r7,0(r16)
    6388:	01800284 	movi	r6,10
    638c:	84000044 	addi	r16,r16,1
    6390:	100b883a 	mov	r5,r2
    6394:	39fff404 	addi	r7,r7,-48
    6398:	8809883a 	mov	r4,r17
    639c:	00061880 	call	6188 <__multadd>
    63a0:	84bff81e 	bne	r16,r18,6384 <__alt_data_end+0xfffe6f84>
    63a4:	dfc00617 	ldw	ra,24(sp)
    63a8:	dd400517 	ldw	r21,20(sp)
    63ac:	dd000417 	ldw	r20,16(sp)
    63b0:	dcc00317 	ldw	r19,12(sp)
    63b4:	dc800217 	ldw	r18,8(sp)
    63b8:	dc400117 	ldw	r17,4(sp)
    63bc:	dc000017 	ldw	r16,0(sp)
    63c0:	dec00704 	addi	sp,sp,28
    63c4:	f800283a 	ret
    63c8:	84000284 	addi	r16,r16,10
    63cc:	1827883a 	mov	r19,r3
    63d0:	003fe906 	br	6378 <__alt_data_end+0xfffe6f78>

000063d4 <__hi0bits>:
    63d4:	20bfffec 	andhi	r2,r4,65535
    63d8:	1000141e 	bne	r2,zero,642c <__hi0bits+0x58>
    63dc:	2008943a 	slli	r4,r4,16
    63e0:	00800404 	movi	r2,16
    63e4:	20ffc02c 	andhi	r3,r4,65280
    63e8:	1800021e 	bne	r3,zero,63f4 <__hi0bits+0x20>
    63ec:	2008923a 	slli	r4,r4,8
    63f0:	10800204 	addi	r2,r2,8
    63f4:	20fc002c 	andhi	r3,r4,61440
    63f8:	1800021e 	bne	r3,zero,6404 <__hi0bits+0x30>
    63fc:	2008913a 	slli	r4,r4,4
    6400:	10800104 	addi	r2,r2,4
    6404:	20f0002c 	andhi	r3,r4,49152
    6408:	1800031e 	bne	r3,zero,6418 <__hi0bits+0x44>
    640c:	2109883a 	add	r4,r4,r4
    6410:	10800084 	addi	r2,r2,2
    6414:	2109883a 	add	r4,r4,r4
    6418:	20000316 	blt	r4,zero,6428 <__hi0bits+0x54>
    641c:	2110002c 	andhi	r4,r4,16384
    6420:	2000041e 	bne	r4,zero,6434 <__hi0bits+0x60>
    6424:	00800804 	movi	r2,32
    6428:	f800283a 	ret
    642c:	0005883a 	mov	r2,zero
    6430:	003fec06 	br	63e4 <__alt_data_end+0xfffe6fe4>
    6434:	10800044 	addi	r2,r2,1
    6438:	f800283a 	ret

0000643c <__lo0bits>:
    643c:	20c00017 	ldw	r3,0(r4)
    6440:	188001cc 	andi	r2,r3,7
    6444:	10000826 	beq	r2,zero,6468 <__lo0bits+0x2c>
    6448:	1880004c 	andi	r2,r3,1
    644c:	1000211e 	bne	r2,zero,64d4 <__lo0bits+0x98>
    6450:	1880008c 	andi	r2,r3,2
    6454:	1000211e 	bne	r2,zero,64dc <__lo0bits+0xa0>
    6458:	1806d0ba 	srli	r3,r3,2
    645c:	00800084 	movi	r2,2
    6460:	20c00015 	stw	r3,0(r4)
    6464:	f800283a 	ret
    6468:	18bfffcc 	andi	r2,r3,65535
    646c:	10001326 	beq	r2,zero,64bc <__lo0bits+0x80>
    6470:	0005883a 	mov	r2,zero
    6474:	19403fcc 	andi	r5,r3,255
    6478:	2800021e 	bne	r5,zero,6484 <__lo0bits+0x48>
    647c:	1806d23a 	srli	r3,r3,8
    6480:	10800204 	addi	r2,r2,8
    6484:	194003cc 	andi	r5,r3,15
    6488:	2800021e 	bne	r5,zero,6494 <__lo0bits+0x58>
    648c:	1806d13a 	srli	r3,r3,4
    6490:	10800104 	addi	r2,r2,4
    6494:	194000cc 	andi	r5,r3,3
    6498:	2800021e 	bne	r5,zero,64a4 <__lo0bits+0x68>
    649c:	1806d0ba 	srli	r3,r3,2
    64a0:	10800084 	addi	r2,r2,2
    64a4:	1940004c 	andi	r5,r3,1
    64a8:	2800081e 	bne	r5,zero,64cc <__lo0bits+0x90>
    64ac:	1806d07a 	srli	r3,r3,1
    64b0:	1800051e 	bne	r3,zero,64c8 <__lo0bits+0x8c>
    64b4:	00800804 	movi	r2,32
    64b8:	f800283a 	ret
    64bc:	1806d43a 	srli	r3,r3,16
    64c0:	00800404 	movi	r2,16
    64c4:	003feb06 	br	6474 <__alt_data_end+0xfffe7074>
    64c8:	10800044 	addi	r2,r2,1
    64cc:	20c00015 	stw	r3,0(r4)
    64d0:	f800283a 	ret
    64d4:	0005883a 	mov	r2,zero
    64d8:	f800283a 	ret
    64dc:	1806d07a 	srli	r3,r3,1
    64e0:	00800044 	movi	r2,1
    64e4:	20c00015 	stw	r3,0(r4)
    64e8:	f800283a 	ret

000064ec <__i2b>:
    64ec:	defffd04 	addi	sp,sp,-12
    64f0:	dc000015 	stw	r16,0(sp)
    64f4:	04000044 	movi	r16,1
    64f8:	dc400115 	stw	r17,4(sp)
    64fc:	2823883a 	mov	r17,r5
    6500:	800b883a 	mov	r5,r16
    6504:	dfc00215 	stw	ra,8(sp)
    6508:	00060b80 	call	60b8 <_Balloc>
    650c:	14400515 	stw	r17,20(r2)
    6510:	14000415 	stw	r16,16(r2)
    6514:	dfc00217 	ldw	ra,8(sp)
    6518:	dc400117 	ldw	r17,4(sp)
    651c:	dc000017 	ldw	r16,0(sp)
    6520:	dec00304 	addi	sp,sp,12
    6524:	f800283a 	ret

00006528 <__multiply>:
    6528:	deffef04 	addi	sp,sp,-68
    652c:	dc400815 	stw	r17,32(sp)
    6530:	dc000715 	stw	r16,28(sp)
    6534:	34400417 	ldw	r17,16(r6)
    6538:	2c000417 	ldw	r16,16(r5)
    653c:	dd800d15 	stw	r22,52(sp)
    6540:	dc800915 	stw	r18,36(sp)
    6544:	dfc01015 	stw	ra,64(sp)
    6548:	df000f15 	stw	fp,60(sp)
    654c:	ddc00e15 	stw	r23,56(sp)
    6550:	dd400c15 	stw	r21,48(sp)
    6554:	dd000b15 	stw	r20,44(sp)
    6558:	dcc00a15 	stw	r19,40(sp)
    655c:	2825883a 	mov	r18,r5
    6560:	302d883a 	mov	r22,r6
    6564:	8440050e 	bge	r16,r17,657c <__multiply+0x54>
    6568:	8007883a 	mov	r3,r16
    656c:	3025883a 	mov	r18,r6
    6570:	8821883a 	mov	r16,r17
    6574:	282d883a 	mov	r22,r5
    6578:	1823883a 	mov	r17,r3
    657c:	90800217 	ldw	r2,8(r18)
    6580:	8447883a 	add	r3,r16,r17
    6584:	d8c00215 	stw	r3,8(sp)
    6588:	91400117 	ldw	r5,4(r18)
    658c:	10c0010e 	bge	r2,r3,6594 <__multiply+0x6c>
    6590:	29400044 	addi	r5,r5,1
    6594:	00060b80 	call	60b8 <_Balloc>
    6598:	d8c00217 	ldw	r3,8(sp)
    659c:	d8800615 	stw	r2,24(sp)
    65a0:	18eb883a 	add	r21,r3,r3
    65a4:	ad6b883a 	add	r21,r21,r21
    65a8:	10c00504 	addi	r3,r2,20
    65ac:	1d6b883a 	add	r21,r3,r21
    65b0:	d8c00115 	stw	r3,4(sp)
    65b4:	dd400315 	stw	r21,12(sp)
    65b8:	1805883a 	mov	r2,r3
    65bc:	1d40042e 	bgeu	r3,r21,65d0 <__multiply+0xa8>
    65c0:	d8c00317 	ldw	r3,12(sp)
    65c4:	10000015 	stw	zero,0(r2)
    65c8:	10800104 	addi	r2,r2,4
    65cc:	10fffc36 	bltu	r2,r3,65c0 <__alt_data_end+0xfffe71c0>
    65d0:	8c63883a 	add	r17,r17,r17
    65d4:	b5800504 	addi	r22,r22,20
    65d8:	8c63883a 	add	r17,r17,r17
    65dc:	94800504 	addi	r18,r18,20
    65e0:	8421883a 	add	r16,r16,r16
    65e4:	b463883a 	add	r17,r22,r17
    65e8:	8421883a 	add	r16,r16,r16
    65ec:	dd800015 	stw	r22,0(sp)
    65f0:	dc800415 	stw	r18,16(sp)
    65f4:	dc400515 	stw	r17,20(sp)
    65f8:	9429883a 	add	r20,r18,r16
    65fc:	b4404f2e 	bgeu	r22,r17,673c <__multiply+0x214>
    6600:	d8c00017 	ldw	r3,0(sp)
    6604:	1c800017 	ldw	r18,0(r3)
    6608:	947fffcc 	andi	r17,r18,65535
    660c:	88001e26 	beq	r17,zero,6688 <__multiply+0x160>
    6610:	dd800117 	ldw	r22,4(sp)
    6614:	dd400417 	ldw	r21,16(sp)
    6618:	0027883a 	mov	r19,zero
    661c:	ac800017 	ldw	r18,0(r21)
    6620:	b4000017 	ldw	r16,0(r22)
    6624:	880b883a 	mov	r5,r17
    6628:	913fffcc 	andi	r4,r18,65535
    662c:	000ae280 	call	ae28 <__mulsi3>
    6630:	9008d43a 	srli	r4,r18,16
    6634:	84bfffcc 	andi	r18,r16,65535
    6638:	1485883a 	add	r2,r2,r18
    663c:	14e5883a 	add	r18,r2,r19
    6640:	8020d43a 	srli	r16,r16,16
    6644:	9026d43a 	srli	r19,r18,16
    6648:	880b883a 	mov	r5,r17
    664c:	000ae280 	call	ae28 <__mulsi3>
    6650:	1405883a 	add	r2,r2,r16
    6654:	14e1883a 	add	r16,r2,r19
    6658:	90ffffcc 	andi	r3,r18,65535
    665c:	8024943a 	slli	r18,r16,16
    6660:	ad400104 	addi	r21,r21,4
    6664:	b005883a 	mov	r2,r22
    6668:	90c6b03a 	or	r3,r18,r3
    666c:	b0c00015 	stw	r3,0(r22)
    6670:	8026d43a 	srli	r19,r16,16
    6674:	b5800104 	addi	r22,r22,4
    6678:	ad3fe836 	bltu	r21,r20,661c <__alt_data_end+0xfffe721c>
    667c:	d8c00017 	ldw	r3,0(sp)
    6680:	14c00115 	stw	r19,4(r2)
    6684:	1c800017 	ldw	r18,0(r3)
    6688:	9024d43a 	srli	r18,r18,16
    668c:	90002226 	beq	r18,zero,6718 <__multiply+0x1f0>
    6690:	d8c00117 	ldw	r3,4(sp)
    6694:	dd800417 	ldw	r22,16(sp)
    6698:	002f883a 	mov	r23,zero
    669c:	1f000017 	ldw	fp,0(r3)
    66a0:	1823883a 	mov	r17,r3
    66a4:	182b883a 	mov	r21,r3
    66a8:	e021883a 	mov	r16,fp
    66ac:	00000106 	br	66b4 <__multiply+0x18c>
    66b0:	982b883a 	mov	r21,r19
    66b4:	b100000b 	ldhu	r4,0(r22)
    66b8:	8020d43a 	srli	r16,r16,16
    66bc:	900b883a 	mov	r5,r18
    66c0:	000ae280 	call	ae28 <__mulsi3>
    66c4:	1405883a 	add	r2,r2,r16
    66c8:	15ef883a 	add	r23,r2,r23
    66cc:	b804943a 	slli	r2,r23,16
    66d0:	e0ffffcc 	andi	r3,fp,65535
    66d4:	8c400104 	addi	r17,r17,4
    66d8:	10c6b03a 	or	r3,r2,r3
    66dc:	88ffff15 	stw	r3,-4(r17)
    66e0:	b5800104 	addi	r22,r22,4
    66e4:	b13fff17 	ldw	r4,-4(r22)
    66e8:	acc00104 	addi	r19,r21,4
    66ec:	900b883a 	mov	r5,r18
    66f0:	2008d43a 	srli	r4,r4,16
    66f4:	9c000017 	ldw	r16,0(r19)
    66f8:	000ae280 	call	ae28 <__mulsi3>
    66fc:	b806d43a 	srli	r3,r23,16
    6700:	813fffcc 	andi	r4,r16,65535
    6704:	1105883a 	add	r2,r2,r4
    6708:	10f9883a 	add	fp,r2,r3
    670c:	e02ed43a 	srli	r23,fp,16
    6710:	b53fe736 	bltu	r22,r20,66b0 <__alt_data_end+0xfffe72b0>
    6714:	af000115 	stw	fp,4(r21)
    6718:	d8c00017 	ldw	r3,0(sp)
    671c:	d9000517 	ldw	r4,20(sp)
    6720:	18c00104 	addi	r3,r3,4
    6724:	d8c00015 	stw	r3,0(sp)
    6728:	d8c00117 	ldw	r3,4(sp)
    672c:	18c00104 	addi	r3,r3,4
    6730:	d8c00115 	stw	r3,4(sp)
    6734:	d8c00017 	ldw	r3,0(sp)
    6738:	193fb136 	bltu	r3,r4,6600 <__alt_data_end+0xfffe7200>
    673c:	d8c00217 	ldw	r3,8(sp)
    6740:	00c00c0e 	bge	zero,r3,6774 <__multiply+0x24c>
    6744:	d8c00317 	ldw	r3,12(sp)
    6748:	18bfff17 	ldw	r2,-4(r3)
    674c:	1d7fff04 	addi	r21,r3,-4
    6750:	10000326 	beq	r2,zero,6760 <__multiply+0x238>
    6754:	00000706 	br	6774 <__multiply+0x24c>
    6758:	a8800017 	ldw	r2,0(r21)
    675c:	1000051e 	bne	r2,zero,6774 <__multiply+0x24c>
    6760:	d8c00217 	ldw	r3,8(sp)
    6764:	ad7fff04 	addi	r21,r21,-4
    6768:	18ffffc4 	addi	r3,r3,-1
    676c:	d8c00215 	stw	r3,8(sp)
    6770:	183ff91e 	bne	r3,zero,6758 <__alt_data_end+0xfffe7358>
    6774:	d8c00617 	ldw	r3,24(sp)
    6778:	d9000217 	ldw	r4,8(sp)
    677c:	1805883a 	mov	r2,r3
    6780:	19000415 	stw	r4,16(r3)
    6784:	dfc01017 	ldw	ra,64(sp)
    6788:	df000f17 	ldw	fp,60(sp)
    678c:	ddc00e17 	ldw	r23,56(sp)
    6790:	dd800d17 	ldw	r22,52(sp)
    6794:	dd400c17 	ldw	r21,48(sp)
    6798:	dd000b17 	ldw	r20,44(sp)
    679c:	dcc00a17 	ldw	r19,40(sp)
    67a0:	dc800917 	ldw	r18,36(sp)
    67a4:	dc400817 	ldw	r17,32(sp)
    67a8:	dc000717 	ldw	r16,28(sp)
    67ac:	dec01104 	addi	sp,sp,68
    67b0:	f800283a 	ret

000067b4 <__pow5mult>:
    67b4:	defffa04 	addi	sp,sp,-24
    67b8:	dcc00315 	stw	r19,12(sp)
    67bc:	dc000015 	stw	r16,0(sp)
    67c0:	dfc00515 	stw	ra,20(sp)
    67c4:	dd000415 	stw	r20,16(sp)
    67c8:	dc800215 	stw	r18,8(sp)
    67cc:	dc400115 	stw	r17,4(sp)
    67d0:	308000cc 	andi	r2,r6,3
    67d4:	3021883a 	mov	r16,r6
    67d8:	2027883a 	mov	r19,r4
    67dc:	10002f1e 	bne	r2,zero,689c <__pow5mult+0xe8>
    67e0:	2825883a 	mov	r18,r5
    67e4:	8021d0ba 	srai	r16,r16,2
    67e8:	80001a26 	beq	r16,zero,6854 <__pow5mult+0xa0>
    67ec:	9c401217 	ldw	r17,72(r19)
    67f0:	8800061e 	bne	r17,zero,680c <__pow5mult+0x58>
    67f4:	00003406 	br	68c8 <__pow5mult+0x114>
    67f8:	8021d07a 	srai	r16,r16,1
    67fc:	80001526 	beq	r16,zero,6854 <__pow5mult+0xa0>
    6800:	88800017 	ldw	r2,0(r17)
    6804:	10001c26 	beq	r2,zero,6878 <__pow5mult+0xc4>
    6808:	1023883a 	mov	r17,r2
    680c:	8080004c 	andi	r2,r16,1
    6810:	103ff926 	beq	r2,zero,67f8 <__alt_data_end+0xfffe73f8>
    6814:	880d883a 	mov	r6,r17
    6818:	900b883a 	mov	r5,r18
    681c:	9809883a 	mov	r4,r19
    6820:	00065280 	call	6528 <__multiply>
    6824:	90001b26 	beq	r18,zero,6894 <__pow5mult+0xe0>
    6828:	91000117 	ldw	r4,4(r18)
    682c:	98c01317 	ldw	r3,76(r19)
    6830:	8021d07a 	srai	r16,r16,1
    6834:	2109883a 	add	r4,r4,r4
    6838:	2109883a 	add	r4,r4,r4
    683c:	1907883a 	add	r3,r3,r4
    6840:	19000017 	ldw	r4,0(r3)
    6844:	91000015 	stw	r4,0(r18)
    6848:	1c800015 	stw	r18,0(r3)
    684c:	1025883a 	mov	r18,r2
    6850:	803feb1e 	bne	r16,zero,6800 <__alt_data_end+0xfffe7400>
    6854:	9005883a 	mov	r2,r18
    6858:	dfc00517 	ldw	ra,20(sp)
    685c:	dd000417 	ldw	r20,16(sp)
    6860:	dcc00317 	ldw	r19,12(sp)
    6864:	dc800217 	ldw	r18,8(sp)
    6868:	dc400117 	ldw	r17,4(sp)
    686c:	dc000017 	ldw	r16,0(sp)
    6870:	dec00604 	addi	sp,sp,24
    6874:	f800283a 	ret
    6878:	880d883a 	mov	r6,r17
    687c:	880b883a 	mov	r5,r17
    6880:	9809883a 	mov	r4,r19
    6884:	00065280 	call	6528 <__multiply>
    6888:	88800015 	stw	r2,0(r17)
    688c:	10000015 	stw	zero,0(r2)
    6890:	003fdd06 	br	6808 <__alt_data_end+0xfffe7408>
    6894:	1025883a 	mov	r18,r2
    6898:	003fd706 	br	67f8 <__alt_data_end+0xfffe73f8>
    689c:	10bfffc4 	addi	r2,r2,-1
    68a0:	1085883a 	add	r2,r2,r2
    68a4:	00c00074 	movhi	r3,1
    68a8:	18ffa904 	addi	r3,r3,-348
    68ac:	1085883a 	add	r2,r2,r2
    68b0:	1885883a 	add	r2,r3,r2
    68b4:	11800017 	ldw	r6,0(r2)
    68b8:	000f883a 	mov	r7,zero
    68bc:	00061880 	call	6188 <__multadd>
    68c0:	1025883a 	mov	r18,r2
    68c4:	003fc706 	br	67e4 <__alt_data_end+0xfffe73e4>
    68c8:	05000044 	movi	r20,1
    68cc:	a00b883a 	mov	r5,r20
    68d0:	9809883a 	mov	r4,r19
    68d4:	00060b80 	call	60b8 <_Balloc>
    68d8:	1023883a 	mov	r17,r2
    68dc:	00809c44 	movi	r2,625
    68e0:	88800515 	stw	r2,20(r17)
    68e4:	8d000415 	stw	r20,16(r17)
    68e8:	9c401215 	stw	r17,72(r19)
    68ec:	88000015 	stw	zero,0(r17)
    68f0:	003fc606 	br	680c <__alt_data_end+0xfffe740c>

000068f4 <__lshift>:
    68f4:	defff904 	addi	sp,sp,-28
    68f8:	dd400515 	stw	r21,20(sp)
    68fc:	dcc00315 	stw	r19,12(sp)
    6900:	302bd17a 	srai	r21,r6,5
    6904:	2cc00417 	ldw	r19,16(r5)
    6908:	28800217 	ldw	r2,8(r5)
    690c:	dd000415 	stw	r20,16(sp)
    6910:	ace7883a 	add	r19,r21,r19
    6914:	dc800215 	stw	r18,8(sp)
    6918:	dc400115 	stw	r17,4(sp)
    691c:	dc000015 	stw	r16,0(sp)
    6920:	dfc00615 	stw	ra,24(sp)
    6924:	9c000044 	addi	r16,r19,1
    6928:	2823883a 	mov	r17,r5
    692c:	3029883a 	mov	r20,r6
    6930:	2025883a 	mov	r18,r4
    6934:	29400117 	ldw	r5,4(r5)
    6938:	1400030e 	bge	r2,r16,6948 <__lshift+0x54>
    693c:	1085883a 	add	r2,r2,r2
    6940:	29400044 	addi	r5,r5,1
    6944:	143ffd16 	blt	r2,r16,693c <__alt_data_end+0xfffe753c>
    6948:	9009883a 	mov	r4,r18
    694c:	00060b80 	call	60b8 <_Balloc>
    6950:	10c00504 	addi	r3,r2,20
    6954:	0540070e 	bge	zero,r21,6974 <__lshift+0x80>
    6958:	ad6b883a 	add	r21,r21,r21
    695c:	ad6b883a 	add	r21,r21,r21
    6960:	1809883a 	mov	r4,r3
    6964:	1d47883a 	add	r3,r3,r21
    6968:	20000015 	stw	zero,0(r4)
    696c:	21000104 	addi	r4,r4,4
    6970:	193ffd1e 	bne	r3,r4,6968 <__alt_data_end+0xfffe7568>
    6974:	8a000417 	ldw	r8,16(r17)
    6978:	89000504 	addi	r4,r17,20
    697c:	a18007cc 	andi	r6,r20,31
    6980:	4211883a 	add	r8,r8,r8
    6984:	4211883a 	add	r8,r8,r8
    6988:	2211883a 	add	r8,r4,r8
    698c:	30002326 	beq	r6,zero,6a1c <__lshift+0x128>
    6990:	02400804 	movi	r9,32
    6994:	4993c83a 	sub	r9,r9,r6
    6998:	000b883a 	mov	r5,zero
    699c:	21c00017 	ldw	r7,0(r4)
    69a0:	1815883a 	mov	r10,r3
    69a4:	18c00104 	addi	r3,r3,4
    69a8:	398e983a 	sll	r7,r7,r6
    69ac:	21000104 	addi	r4,r4,4
    69b0:	394ab03a 	or	r5,r7,r5
    69b4:	197fff15 	stw	r5,-4(r3)
    69b8:	217fff17 	ldw	r5,-4(r4)
    69bc:	2a4ad83a 	srl	r5,r5,r9
    69c0:	223ff636 	bltu	r4,r8,699c <__alt_data_end+0xfffe759c>
    69c4:	51400115 	stw	r5,4(r10)
    69c8:	28001a1e 	bne	r5,zero,6a34 <__lshift+0x140>
    69cc:	843fffc4 	addi	r16,r16,-1
    69d0:	14000415 	stw	r16,16(r2)
    69d4:	88000826 	beq	r17,zero,69f8 <__lshift+0x104>
    69d8:	89000117 	ldw	r4,4(r17)
    69dc:	90c01317 	ldw	r3,76(r18)
    69e0:	2109883a 	add	r4,r4,r4
    69e4:	2109883a 	add	r4,r4,r4
    69e8:	1907883a 	add	r3,r3,r4
    69ec:	19000017 	ldw	r4,0(r3)
    69f0:	89000015 	stw	r4,0(r17)
    69f4:	1c400015 	stw	r17,0(r3)
    69f8:	dfc00617 	ldw	ra,24(sp)
    69fc:	dd400517 	ldw	r21,20(sp)
    6a00:	dd000417 	ldw	r20,16(sp)
    6a04:	dcc00317 	ldw	r19,12(sp)
    6a08:	dc800217 	ldw	r18,8(sp)
    6a0c:	dc400117 	ldw	r17,4(sp)
    6a10:	dc000017 	ldw	r16,0(sp)
    6a14:	dec00704 	addi	sp,sp,28
    6a18:	f800283a 	ret
    6a1c:	21400017 	ldw	r5,0(r4)
    6a20:	18c00104 	addi	r3,r3,4
    6a24:	21000104 	addi	r4,r4,4
    6a28:	197fff15 	stw	r5,-4(r3)
    6a2c:	223ffb36 	bltu	r4,r8,6a1c <__alt_data_end+0xfffe761c>
    6a30:	003fe606 	br	69cc <__alt_data_end+0xfffe75cc>
    6a34:	9c000084 	addi	r16,r19,2
    6a38:	003fe406 	br	69cc <__alt_data_end+0xfffe75cc>

00006a3c <__mcmp>:
    6a3c:	20800417 	ldw	r2,16(r4)
    6a40:	28c00417 	ldw	r3,16(r5)
    6a44:	10c5c83a 	sub	r2,r2,r3
    6a48:	1000111e 	bne	r2,zero,6a90 <__mcmp+0x54>
    6a4c:	18c7883a 	add	r3,r3,r3
    6a50:	18c7883a 	add	r3,r3,r3
    6a54:	21000504 	addi	r4,r4,20
    6a58:	29400504 	addi	r5,r5,20
    6a5c:	20c5883a 	add	r2,r4,r3
    6a60:	28cb883a 	add	r5,r5,r3
    6a64:	00000106 	br	6a6c <__mcmp+0x30>
    6a68:	20800a2e 	bgeu	r4,r2,6a94 <__mcmp+0x58>
    6a6c:	10bfff04 	addi	r2,r2,-4
    6a70:	297fff04 	addi	r5,r5,-4
    6a74:	11800017 	ldw	r6,0(r2)
    6a78:	28c00017 	ldw	r3,0(r5)
    6a7c:	30fffa26 	beq	r6,r3,6a68 <__alt_data_end+0xfffe7668>
    6a80:	30c00236 	bltu	r6,r3,6a8c <__mcmp+0x50>
    6a84:	00800044 	movi	r2,1
    6a88:	f800283a 	ret
    6a8c:	00bfffc4 	movi	r2,-1
    6a90:	f800283a 	ret
    6a94:	0005883a 	mov	r2,zero
    6a98:	f800283a 	ret

00006a9c <__mdiff>:
    6a9c:	28c00417 	ldw	r3,16(r5)
    6aa0:	30800417 	ldw	r2,16(r6)
    6aa4:	defffa04 	addi	sp,sp,-24
    6aa8:	dcc00315 	stw	r19,12(sp)
    6aac:	dc800215 	stw	r18,8(sp)
    6ab0:	dfc00515 	stw	ra,20(sp)
    6ab4:	dd000415 	stw	r20,16(sp)
    6ab8:	dc400115 	stw	r17,4(sp)
    6abc:	dc000015 	stw	r16,0(sp)
    6ac0:	1887c83a 	sub	r3,r3,r2
    6ac4:	2825883a 	mov	r18,r5
    6ac8:	3027883a 	mov	r19,r6
    6acc:	1800141e 	bne	r3,zero,6b20 <__mdiff+0x84>
    6ad0:	1085883a 	add	r2,r2,r2
    6ad4:	1085883a 	add	r2,r2,r2
    6ad8:	2a000504 	addi	r8,r5,20
    6adc:	34000504 	addi	r16,r6,20
    6ae0:	4087883a 	add	r3,r8,r2
    6ae4:	8085883a 	add	r2,r16,r2
    6ae8:	00000106 	br	6af0 <__mdiff+0x54>
    6aec:	40c0592e 	bgeu	r8,r3,6c54 <__mdiff+0x1b8>
    6af0:	18ffff04 	addi	r3,r3,-4
    6af4:	10bfff04 	addi	r2,r2,-4
    6af8:	19c00017 	ldw	r7,0(r3)
    6afc:	11400017 	ldw	r5,0(r2)
    6b00:	397ffa26 	beq	r7,r5,6aec <__alt_data_end+0xfffe76ec>
    6b04:	3940592e 	bgeu	r7,r5,6c6c <__mdiff+0x1d0>
    6b08:	9005883a 	mov	r2,r18
    6b0c:	4023883a 	mov	r17,r8
    6b10:	9825883a 	mov	r18,r19
    6b14:	05000044 	movi	r20,1
    6b18:	1027883a 	mov	r19,r2
    6b1c:	00000406 	br	6b30 <__mdiff+0x94>
    6b20:	18005616 	blt	r3,zero,6c7c <__mdiff+0x1e0>
    6b24:	34400504 	addi	r17,r6,20
    6b28:	2c000504 	addi	r16,r5,20
    6b2c:	0029883a 	mov	r20,zero
    6b30:	91400117 	ldw	r5,4(r18)
    6b34:	00060b80 	call	60b8 <_Balloc>
    6b38:	92400417 	ldw	r9,16(r18)
    6b3c:	9b000417 	ldw	r12,16(r19)
    6b40:	12c00504 	addi	r11,r2,20
    6b44:	4a51883a 	add	r8,r9,r9
    6b48:	6319883a 	add	r12,r12,r12
    6b4c:	4211883a 	add	r8,r8,r8
    6b50:	6319883a 	add	r12,r12,r12
    6b54:	15000315 	stw	r20,12(r2)
    6b58:	8211883a 	add	r8,r16,r8
    6b5c:	8b19883a 	add	r12,r17,r12
    6b60:	0007883a 	mov	r3,zero
    6b64:	81400017 	ldw	r5,0(r16)
    6b68:	89c00017 	ldw	r7,0(r17)
    6b6c:	59800104 	addi	r6,r11,4
    6b70:	293fffcc 	andi	r4,r5,65535
    6b74:	20c7883a 	add	r3,r4,r3
    6b78:	393fffcc 	andi	r4,r7,65535
    6b7c:	1909c83a 	sub	r4,r3,r4
    6b80:	280ad43a 	srli	r5,r5,16
    6b84:	380ed43a 	srli	r7,r7,16
    6b88:	2007d43a 	srai	r3,r4,16
    6b8c:	213fffcc 	andi	r4,r4,65535
    6b90:	29cbc83a 	sub	r5,r5,r7
    6b94:	28c7883a 	add	r3,r5,r3
    6b98:	180a943a 	slli	r5,r3,16
    6b9c:	8c400104 	addi	r17,r17,4
    6ba0:	84000104 	addi	r16,r16,4
    6ba4:	2908b03a 	or	r4,r5,r4
    6ba8:	59000015 	stw	r4,0(r11)
    6bac:	1807d43a 	srai	r3,r3,16
    6bb0:	3015883a 	mov	r10,r6
    6bb4:	3017883a 	mov	r11,r6
    6bb8:	8b3fea36 	bltu	r17,r12,6b64 <__alt_data_end+0xfffe7764>
    6bbc:	8200162e 	bgeu	r16,r8,6c18 <__mdiff+0x17c>
    6bc0:	8017883a 	mov	r11,r16
    6bc4:	59400017 	ldw	r5,0(r11)
    6bc8:	31800104 	addi	r6,r6,4
    6bcc:	5ac00104 	addi	r11,r11,4
    6bd0:	293fffcc 	andi	r4,r5,65535
    6bd4:	20c7883a 	add	r3,r4,r3
    6bd8:	280ed43a 	srli	r7,r5,16
    6bdc:	180bd43a 	srai	r5,r3,16
    6be0:	193fffcc 	andi	r4,r3,65535
    6be4:	3947883a 	add	r3,r7,r5
    6be8:	180a943a 	slli	r5,r3,16
    6bec:	1807d43a 	srai	r3,r3,16
    6bf0:	2908b03a 	or	r4,r5,r4
    6bf4:	313fff15 	stw	r4,-4(r6)
    6bf8:	5a3ff236 	bltu	r11,r8,6bc4 <__alt_data_end+0xfffe77c4>
    6bfc:	0406303a 	nor	r3,zero,r16
    6c00:	1a07883a 	add	r3,r3,r8
    6c04:	1806d0ba 	srli	r3,r3,2
    6c08:	18c00044 	addi	r3,r3,1
    6c0c:	18c7883a 	add	r3,r3,r3
    6c10:	18c7883a 	add	r3,r3,r3
    6c14:	50d5883a 	add	r10,r10,r3
    6c18:	50ffff04 	addi	r3,r10,-4
    6c1c:	2000041e 	bne	r4,zero,6c30 <__mdiff+0x194>
    6c20:	18ffff04 	addi	r3,r3,-4
    6c24:	19000017 	ldw	r4,0(r3)
    6c28:	4a7fffc4 	addi	r9,r9,-1
    6c2c:	203ffc26 	beq	r4,zero,6c20 <__alt_data_end+0xfffe7820>
    6c30:	12400415 	stw	r9,16(r2)
    6c34:	dfc00517 	ldw	ra,20(sp)
    6c38:	dd000417 	ldw	r20,16(sp)
    6c3c:	dcc00317 	ldw	r19,12(sp)
    6c40:	dc800217 	ldw	r18,8(sp)
    6c44:	dc400117 	ldw	r17,4(sp)
    6c48:	dc000017 	ldw	r16,0(sp)
    6c4c:	dec00604 	addi	sp,sp,24
    6c50:	f800283a 	ret
    6c54:	000b883a 	mov	r5,zero
    6c58:	00060b80 	call	60b8 <_Balloc>
    6c5c:	00c00044 	movi	r3,1
    6c60:	10c00415 	stw	r3,16(r2)
    6c64:	10000515 	stw	zero,20(r2)
    6c68:	003ff206 	br	6c34 <__alt_data_end+0xfffe7834>
    6c6c:	8023883a 	mov	r17,r16
    6c70:	0029883a 	mov	r20,zero
    6c74:	4021883a 	mov	r16,r8
    6c78:	003fad06 	br	6b30 <__alt_data_end+0xfffe7730>
    6c7c:	9005883a 	mov	r2,r18
    6c80:	94400504 	addi	r17,r18,20
    6c84:	9c000504 	addi	r16,r19,20
    6c88:	9825883a 	mov	r18,r19
    6c8c:	05000044 	movi	r20,1
    6c90:	1027883a 	mov	r19,r2
    6c94:	003fa606 	br	6b30 <__alt_data_end+0xfffe7730>

00006c98 <__ulp>:
    6c98:	295ffc2c 	andhi	r5,r5,32752
    6c9c:	00bf3034 	movhi	r2,64704
    6ca0:	2887883a 	add	r3,r5,r2
    6ca4:	00c0020e 	bge	zero,r3,6cb0 <__ulp+0x18>
    6ca8:	0005883a 	mov	r2,zero
    6cac:	f800283a 	ret
    6cb0:	00c7c83a 	sub	r3,zero,r3
    6cb4:	1807d53a 	srai	r3,r3,20
    6cb8:	008004c4 	movi	r2,19
    6cbc:	10c00b0e 	bge	r2,r3,6cec <__ulp+0x54>
    6cc0:	18bffb04 	addi	r2,r3,-20
    6cc4:	01000784 	movi	r4,30
    6cc8:	0007883a 	mov	r3,zero
    6ccc:	20800516 	blt	r4,r2,6ce4 <__ulp+0x4c>
    6cd0:	010007c4 	movi	r4,31
    6cd4:	2089c83a 	sub	r4,r4,r2
    6cd8:	00800044 	movi	r2,1
    6cdc:	1104983a 	sll	r2,r2,r4
    6ce0:	f800283a 	ret
    6ce4:	00800044 	movi	r2,1
    6ce8:	f800283a 	ret
    6cec:	01400234 	movhi	r5,8
    6cf0:	28c7d83a 	sra	r3,r5,r3
    6cf4:	0005883a 	mov	r2,zero
    6cf8:	f800283a 	ret

00006cfc <__b2d>:
    6cfc:	defffa04 	addi	sp,sp,-24
    6d00:	dc000015 	stw	r16,0(sp)
    6d04:	24000417 	ldw	r16,16(r4)
    6d08:	dc400115 	stw	r17,4(sp)
    6d0c:	24400504 	addi	r17,r4,20
    6d10:	8421883a 	add	r16,r16,r16
    6d14:	8421883a 	add	r16,r16,r16
    6d18:	8c21883a 	add	r16,r17,r16
    6d1c:	dc800215 	stw	r18,8(sp)
    6d20:	84bfff17 	ldw	r18,-4(r16)
    6d24:	dd000415 	stw	r20,16(sp)
    6d28:	dcc00315 	stw	r19,12(sp)
    6d2c:	9009883a 	mov	r4,r18
    6d30:	2829883a 	mov	r20,r5
    6d34:	dfc00515 	stw	ra,20(sp)
    6d38:	00063d40 	call	63d4 <__hi0bits>
    6d3c:	00c00804 	movi	r3,32
    6d40:	1889c83a 	sub	r4,r3,r2
    6d44:	a1000015 	stw	r4,0(r20)
    6d48:	01000284 	movi	r4,10
    6d4c:	84ffff04 	addi	r19,r16,-4
    6d50:	20801216 	blt	r4,r2,6d9c <__b2d+0xa0>
    6d54:	018002c4 	movi	r6,11
    6d58:	308dc83a 	sub	r6,r6,r2
    6d5c:	9186d83a 	srl	r3,r18,r6
    6d60:	18cffc34 	orhi	r3,r3,16368
    6d64:	8cc0212e 	bgeu	r17,r19,6dec <__b2d+0xf0>
    6d68:	813ffe17 	ldw	r4,-8(r16)
    6d6c:	218cd83a 	srl	r6,r4,r6
    6d70:	10800544 	addi	r2,r2,21
    6d74:	9084983a 	sll	r2,r18,r2
    6d78:	1184b03a 	or	r2,r2,r6
    6d7c:	dfc00517 	ldw	ra,20(sp)
    6d80:	dd000417 	ldw	r20,16(sp)
    6d84:	dcc00317 	ldw	r19,12(sp)
    6d88:	dc800217 	ldw	r18,8(sp)
    6d8c:	dc400117 	ldw	r17,4(sp)
    6d90:	dc000017 	ldw	r16,0(sp)
    6d94:	dec00604 	addi	sp,sp,24
    6d98:	f800283a 	ret
    6d9c:	8cc00f2e 	bgeu	r17,r19,6ddc <__b2d+0xe0>
    6da0:	117ffd44 	addi	r5,r2,-11
    6da4:	80bffe17 	ldw	r2,-8(r16)
    6da8:	28000e26 	beq	r5,zero,6de4 <__b2d+0xe8>
    6dac:	1949c83a 	sub	r4,r3,r5
    6db0:	9164983a 	sll	r18,r18,r5
    6db4:	1106d83a 	srl	r3,r2,r4
    6db8:	81bffe04 	addi	r6,r16,-8
    6dbc:	948ffc34 	orhi	r18,r18,16368
    6dc0:	90c6b03a 	or	r3,r18,r3
    6dc4:	89800e2e 	bgeu	r17,r6,6e00 <__b2d+0x104>
    6dc8:	81bffd17 	ldw	r6,-12(r16)
    6dcc:	1144983a 	sll	r2,r2,r5
    6dd0:	310ad83a 	srl	r5,r6,r4
    6dd4:	2884b03a 	or	r2,r5,r2
    6dd8:	003fe806 	br	6d7c <__alt_data_end+0xfffe797c>
    6ddc:	10bffd44 	addi	r2,r2,-11
    6de0:	1000041e 	bne	r2,zero,6df4 <__b2d+0xf8>
    6de4:	90cffc34 	orhi	r3,r18,16368
    6de8:	003fe406 	br	6d7c <__alt_data_end+0xfffe797c>
    6dec:	000d883a 	mov	r6,zero
    6df0:	003fdf06 	br	6d70 <__alt_data_end+0xfffe7970>
    6df4:	90a4983a 	sll	r18,r18,r2
    6df8:	0005883a 	mov	r2,zero
    6dfc:	003ff906 	br	6de4 <__alt_data_end+0xfffe79e4>
    6e00:	1144983a 	sll	r2,r2,r5
    6e04:	003fdd06 	br	6d7c <__alt_data_end+0xfffe797c>

00006e08 <__d2b>:
    6e08:	defff804 	addi	sp,sp,-32
    6e0c:	dc000215 	stw	r16,8(sp)
    6e10:	3021883a 	mov	r16,r6
    6e14:	dc400315 	stw	r17,12(sp)
    6e18:	8022907a 	slli	r17,r16,1
    6e1c:	dd000615 	stw	r20,24(sp)
    6e20:	2829883a 	mov	r20,r5
    6e24:	01400044 	movi	r5,1
    6e28:	dcc00515 	stw	r19,20(sp)
    6e2c:	dc800415 	stw	r18,16(sp)
    6e30:	dfc00715 	stw	ra,28(sp)
    6e34:	3825883a 	mov	r18,r7
    6e38:	8822d57a 	srli	r17,r17,21
    6e3c:	00060b80 	call	60b8 <_Balloc>
    6e40:	1027883a 	mov	r19,r2
    6e44:	00800434 	movhi	r2,16
    6e48:	10bfffc4 	addi	r2,r2,-1
    6e4c:	808c703a 	and	r6,r16,r2
    6e50:	88000126 	beq	r17,zero,6e58 <__d2b+0x50>
    6e54:	31800434 	orhi	r6,r6,16
    6e58:	d9800015 	stw	r6,0(sp)
    6e5c:	a0002426 	beq	r20,zero,6ef0 <__d2b+0xe8>
    6e60:	d9000104 	addi	r4,sp,4
    6e64:	dd000115 	stw	r20,4(sp)
    6e68:	000643c0 	call	643c <__lo0bits>
    6e6c:	d8c00017 	ldw	r3,0(sp)
    6e70:	10002f1e 	bne	r2,zero,6f30 <__d2b+0x128>
    6e74:	d9000117 	ldw	r4,4(sp)
    6e78:	99000515 	stw	r4,20(r19)
    6e7c:	1821003a 	cmpeq	r16,r3,zero
    6e80:	01000084 	movi	r4,2
    6e84:	2421c83a 	sub	r16,r4,r16
    6e88:	98c00615 	stw	r3,24(r19)
    6e8c:	9c000415 	stw	r16,16(r19)
    6e90:	88001f1e 	bne	r17,zero,6f10 <__d2b+0x108>
    6e94:	10bef384 	addi	r2,r2,-1074
    6e98:	90800015 	stw	r2,0(r18)
    6e9c:	00900034 	movhi	r2,16384
    6ea0:	10bfffc4 	addi	r2,r2,-1
    6ea4:	8085883a 	add	r2,r16,r2
    6ea8:	1085883a 	add	r2,r2,r2
    6eac:	1085883a 	add	r2,r2,r2
    6eb0:	9885883a 	add	r2,r19,r2
    6eb4:	11000517 	ldw	r4,20(r2)
    6eb8:	8020917a 	slli	r16,r16,5
    6ebc:	00063d40 	call	63d4 <__hi0bits>
    6ec0:	d8c00817 	ldw	r3,32(sp)
    6ec4:	8085c83a 	sub	r2,r16,r2
    6ec8:	18800015 	stw	r2,0(r3)
    6ecc:	9805883a 	mov	r2,r19
    6ed0:	dfc00717 	ldw	ra,28(sp)
    6ed4:	dd000617 	ldw	r20,24(sp)
    6ed8:	dcc00517 	ldw	r19,20(sp)
    6edc:	dc800417 	ldw	r18,16(sp)
    6ee0:	dc400317 	ldw	r17,12(sp)
    6ee4:	dc000217 	ldw	r16,8(sp)
    6ee8:	dec00804 	addi	sp,sp,32
    6eec:	f800283a 	ret
    6ef0:	d809883a 	mov	r4,sp
    6ef4:	000643c0 	call	643c <__lo0bits>
    6ef8:	d8c00017 	ldw	r3,0(sp)
    6efc:	04000044 	movi	r16,1
    6f00:	9c000415 	stw	r16,16(r19)
    6f04:	98c00515 	stw	r3,20(r19)
    6f08:	10800804 	addi	r2,r2,32
    6f0c:	883fe126 	beq	r17,zero,6e94 <__alt_data_end+0xfffe7a94>
    6f10:	00c00d44 	movi	r3,53
    6f14:	8c7ef344 	addi	r17,r17,-1075
    6f18:	88a3883a 	add	r17,r17,r2
    6f1c:	1885c83a 	sub	r2,r3,r2
    6f20:	d8c00817 	ldw	r3,32(sp)
    6f24:	94400015 	stw	r17,0(r18)
    6f28:	18800015 	stw	r2,0(r3)
    6f2c:	003fe706 	br	6ecc <__alt_data_end+0xfffe7acc>
    6f30:	01000804 	movi	r4,32
    6f34:	2089c83a 	sub	r4,r4,r2
    6f38:	1908983a 	sll	r4,r3,r4
    6f3c:	d9400117 	ldw	r5,4(sp)
    6f40:	1886d83a 	srl	r3,r3,r2
    6f44:	2148b03a 	or	r4,r4,r5
    6f48:	99000515 	stw	r4,20(r19)
    6f4c:	d8c00015 	stw	r3,0(sp)
    6f50:	003fca06 	br	6e7c <__alt_data_end+0xfffe7a7c>

00006f54 <__ratio>:
    6f54:	defff904 	addi	sp,sp,-28
    6f58:	dc400315 	stw	r17,12(sp)
    6f5c:	2823883a 	mov	r17,r5
    6f60:	d9400104 	addi	r5,sp,4
    6f64:	dfc00615 	stw	ra,24(sp)
    6f68:	dcc00515 	stw	r19,20(sp)
    6f6c:	dc800415 	stw	r18,16(sp)
    6f70:	2027883a 	mov	r19,r4
    6f74:	dc000215 	stw	r16,8(sp)
    6f78:	0006cfc0 	call	6cfc <__b2d>
    6f7c:	d80b883a 	mov	r5,sp
    6f80:	8809883a 	mov	r4,r17
    6f84:	1025883a 	mov	r18,r2
    6f88:	1821883a 	mov	r16,r3
    6f8c:	0006cfc0 	call	6cfc <__b2d>
    6f90:	8a000417 	ldw	r8,16(r17)
    6f94:	99000417 	ldw	r4,16(r19)
    6f98:	d9400117 	ldw	r5,4(sp)
    6f9c:	2209c83a 	sub	r4,r4,r8
    6fa0:	2010917a 	slli	r8,r4,5
    6fa4:	d9000017 	ldw	r4,0(sp)
    6fa8:	2909c83a 	sub	r4,r5,r4
    6fac:	4109883a 	add	r4,r8,r4
    6fb0:	01000e0e 	bge	zero,r4,6fec <__ratio+0x98>
    6fb4:	2008953a 	slli	r4,r4,20
    6fb8:	2421883a 	add	r16,r4,r16
    6fbc:	100d883a 	mov	r6,r2
    6fc0:	180f883a 	mov	r7,r3
    6fc4:	9009883a 	mov	r4,r18
    6fc8:	800b883a 	mov	r5,r16
    6fcc:	000b6fc0 	call	b6fc <__divdf3>
    6fd0:	dfc00617 	ldw	ra,24(sp)
    6fd4:	dcc00517 	ldw	r19,20(sp)
    6fd8:	dc800417 	ldw	r18,16(sp)
    6fdc:	dc400317 	ldw	r17,12(sp)
    6fe0:	dc000217 	ldw	r16,8(sp)
    6fe4:	dec00704 	addi	sp,sp,28
    6fe8:	f800283a 	ret
    6fec:	2008953a 	slli	r4,r4,20
    6ff0:	1907c83a 	sub	r3,r3,r4
    6ff4:	003ff106 	br	6fbc <__alt_data_end+0xfffe7bbc>

00006ff8 <_mprec_log10>:
    6ff8:	defffe04 	addi	sp,sp,-8
    6ffc:	dc000015 	stw	r16,0(sp)
    7000:	dfc00115 	stw	ra,4(sp)
    7004:	008005c4 	movi	r2,23
    7008:	2021883a 	mov	r16,r4
    700c:	11000d0e 	bge	r2,r4,7044 <_mprec_log10+0x4c>
    7010:	0005883a 	mov	r2,zero
    7014:	00cffc34 	movhi	r3,16368
    7018:	843fffc4 	addi	r16,r16,-1
    701c:	000d883a 	mov	r6,zero
    7020:	01d00934 	movhi	r7,16420
    7024:	1009883a 	mov	r4,r2
    7028:	180b883a 	mov	r5,r3
    702c:	000c3240 	call	c324 <__muldf3>
    7030:	803ff91e 	bne	r16,zero,7018 <__alt_data_end+0xfffe7c18>
    7034:	dfc00117 	ldw	ra,4(sp)
    7038:	dc000017 	ldw	r16,0(sp)
    703c:	dec00204 	addi	sp,sp,8
    7040:	f800283a 	ret
    7044:	202090fa 	slli	r16,r4,3
    7048:	00800074 	movhi	r2,1
    704c:	10bfc004 	addi	r2,r2,-256
    7050:	1421883a 	add	r16,r2,r16
    7054:	80800017 	ldw	r2,0(r16)
    7058:	80c00117 	ldw	r3,4(r16)
    705c:	dfc00117 	ldw	ra,4(sp)
    7060:	dc000017 	ldw	r16,0(sp)
    7064:	dec00204 	addi	sp,sp,8
    7068:	f800283a 	ret

0000706c <__copybits>:
    706c:	297fffc4 	addi	r5,r5,-1
    7070:	280fd17a 	srai	r7,r5,5
    7074:	30c00417 	ldw	r3,16(r6)
    7078:	30800504 	addi	r2,r6,20
    707c:	39c00044 	addi	r7,r7,1
    7080:	18c7883a 	add	r3,r3,r3
    7084:	39cf883a 	add	r7,r7,r7
    7088:	18c7883a 	add	r3,r3,r3
    708c:	39cf883a 	add	r7,r7,r7
    7090:	10c7883a 	add	r3,r2,r3
    7094:	21cf883a 	add	r7,r4,r7
    7098:	10c00d2e 	bgeu	r2,r3,70d0 <__copybits+0x64>
    709c:	200b883a 	mov	r5,r4
    70a0:	12000017 	ldw	r8,0(r2)
    70a4:	29400104 	addi	r5,r5,4
    70a8:	10800104 	addi	r2,r2,4
    70ac:	2a3fff15 	stw	r8,-4(r5)
    70b0:	10fffb36 	bltu	r2,r3,70a0 <__alt_data_end+0xfffe7ca0>
    70b4:	1985c83a 	sub	r2,r3,r6
    70b8:	10bffac4 	addi	r2,r2,-21
    70bc:	1004d0ba 	srli	r2,r2,2
    70c0:	10800044 	addi	r2,r2,1
    70c4:	1085883a 	add	r2,r2,r2
    70c8:	1085883a 	add	r2,r2,r2
    70cc:	2089883a 	add	r4,r4,r2
    70d0:	21c0032e 	bgeu	r4,r7,70e0 <__copybits+0x74>
    70d4:	20000015 	stw	zero,0(r4)
    70d8:	21000104 	addi	r4,r4,4
    70dc:	21fffd36 	bltu	r4,r7,70d4 <__alt_data_end+0xfffe7cd4>
    70e0:	f800283a 	ret

000070e4 <__any_on>:
    70e4:	20c00417 	ldw	r3,16(r4)
    70e8:	2805d17a 	srai	r2,r5,5
    70ec:	21000504 	addi	r4,r4,20
    70f0:	18800d0e 	bge	r3,r2,7128 <__any_on+0x44>
    70f4:	18c7883a 	add	r3,r3,r3
    70f8:	18c7883a 	add	r3,r3,r3
    70fc:	20c7883a 	add	r3,r4,r3
    7100:	20c0192e 	bgeu	r4,r3,7168 <__any_on+0x84>
    7104:	18bfff17 	ldw	r2,-4(r3)
    7108:	18ffff04 	addi	r3,r3,-4
    710c:	1000041e 	bne	r2,zero,7120 <__any_on+0x3c>
    7110:	20c0142e 	bgeu	r4,r3,7164 <__any_on+0x80>
    7114:	18ffff04 	addi	r3,r3,-4
    7118:	19400017 	ldw	r5,0(r3)
    711c:	283ffc26 	beq	r5,zero,7110 <__alt_data_end+0xfffe7d10>
    7120:	00800044 	movi	r2,1
    7124:	f800283a 	ret
    7128:	10c00a0e 	bge	r2,r3,7154 <__any_on+0x70>
    712c:	1085883a 	add	r2,r2,r2
    7130:	1085883a 	add	r2,r2,r2
    7134:	294007cc 	andi	r5,r5,31
    7138:	2087883a 	add	r3,r4,r2
    713c:	283ff026 	beq	r5,zero,7100 <__alt_data_end+0xfffe7d00>
    7140:	19800017 	ldw	r6,0(r3)
    7144:	3144d83a 	srl	r2,r6,r5
    7148:	114a983a 	sll	r5,r2,r5
    714c:	317ff41e 	bne	r6,r5,7120 <__alt_data_end+0xfffe7d20>
    7150:	003feb06 	br	7100 <__alt_data_end+0xfffe7d00>
    7154:	1085883a 	add	r2,r2,r2
    7158:	1085883a 	add	r2,r2,r2
    715c:	2087883a 	add	r3,r4,r2
    7160:	003fe706 	br	7100 <__alt_data_end+0xfffe7d00>
    7164:	f800283a 	ret
    7168:	0005883a 	mov	r2,zero
    716c:	f800283a 	ret

00007170 <__fpclassifyd>:
    7170:	00a00034 	movhi	r2,32768
    7174:	10bfffc4 	addi	r2,r2,-1
    7178:	2884703a 	and	r2,r5,r2
    717c:	10000726 	beq	r2,zero,719c <__fpclassifyd+0x2c>
    7180:	00fffc34 	movhi	r3,65520
    7184:	019ff834 	movhi	r6,32736
    7188:	28c7883a 	add	r3,r5,r3
    718c:	31bfffc4 	addi	r6,r6,-1
    7190:	30c00536 	bltu	r6,r3,71a8 <__fpclassifyd+0x38>
    7194:	00800104 	movi	r2,4
    7198:	f800283a 	ret
    719c:	2000021e 	bne	r4,zero,71a8 <__fpclassifyd+0x38>
    71a0:	00800084 	movi	r2,2
    71a4:	f800283a 	ret
    71a8:	00dffc34 	movhi	r3,32752
    71ac:	019ff834 	movhi	r6,32736
    71b0:	28cb883a 	add	r5,r5,r3
    71b4:	31bfffc4 	addi	r6,r6,-1
    71b8:	317ff62e 	bgeu	r6,r5,7194 <__alt_data_end+0xfffe7d94>
    71bc:	01400434 	movhi	r5,16
    71c0:	297fffc4 	addi	r5,r5,-1
    71c4:	28800236 	bltu	r5,r2,71d0 <__fpclassifyd+0x60>
    71c8:	008000c4 	movi	r2,3
    71cc:	f800283a 	ret
    71d0:	10c00226 	beq	r2,r3,71dc <__fpclassifyd+0x6c>
    71d4:	0005883a 	mov	r2,zero
    71d8:	f800283a 	ret
    71dc:	2005003a 	cmpeq	r2,r4,zero
    71e0:	f800283a 	ret

000071e4 <_sbrk_r>:
    71e4:	defffd04 	addi	sp,sp,-12
    71e8:	dc000015 	stw	r16,0(sp)
    71ec:	04000074 	movhi	r16,1
    71f0:	dc400115 	stw	r17,4(sp)
    71f4:	840dc804 	addi	r16,r16,14112
    71f8:	2023883a 	mov	r17,r4
    71fc:	2809883a 	mov	r4,r5
    7200:	dfc00215 	stw	ra,8(sp)
    7204:	80000015 	stw	zero,0(r16)
    7208:	000e13c0 	call	e13c <sbrk>
    720c:	00ffffc4 	movi	r3,-1
    7210:	10c00526 	beq	r2,r3,7228 <_sbrk_r+0x44>
    7214:	dfc00217 	ldw	ra,8(sp)
    7218:	dc400117 	ldw	r17,4(sp)
    721c:	dc000017 	ldw	r16,0(sp)
    7220:	dec00304 	addi	sp,sp,12
    7224:	f800283a 	ret
    7228:	80c00017 	ldw	r3,0(r16)
    722c:	183ff926 	beq	r3,zero,7214 <__alt_data_end+0xfffe7e14>
    7230:	88c00015 	stw	r3,0(r17)
    7234:	003ff706 	br	7214 <__alt_data_end+0xfffe7e14>

00007238 <__sread>:
    7238:	defffe04 	addi	sp,sp,-8
    723c:	dc000015 	stw	r16,0(sp)
    7240:	2821883a 	mov	r16,r5
    7244:	2940038f 	ldh	r5,14(r5)
    7248:	dfc00115 	stw	ra,4(sp)
    724c:	00097b00 	call	97b0 <_read_r>
    7250:	10000716 	blt	r2,zero,7270 <__sread+0x38>
    7254:	80c01417 	ldw	r3,80(r16)
    7258:	1887883a 	add	r3,r3,r2
    725c:	80c01415 	stw	r3,80(r16)
    7260:	dfc00117 	ldw	ra,4(sp)
    7264:	dc000017 	ldw	r16,0(sp)
    7268:	dec00204 	addi	sp,sp,8
    726c:	f800283a 	ret
    7270:	80c0030b 	ldhu	r3,12(r16)
    7274:	18fbffcc 	andi	r3,r3,61439
    7278:	80c0030d 	sth	r3,12(r16)
    727c:	dfc00117 	ldw	ra,4(sp)
    7280:	dc000017 	ldw	r16,0(sp)
    7284:	dec00204 	addi	sp,sp,8
    7288:	f800283a 	ret

0000728c <__seofread>:
    728c:	0005883a 	mov	r2,zero
    7290:	f800283a 	ret

00007294 <__swrite>:
    7294:	2880030b 	ldhu	r2,12(r5)
    7298:	defffb04 	addi	sp,sp,-20
    729c:	dcc00315 	stw	r19,12(sp)
    72a0:	dc800215 	stw	r18,8(sp)
    72a4:	dc400115 	stw	r17,4(sp)
    72a8:	dc000015 	stw	r16,0(sp)
    72ac:	dfc00415 	stw	ra,16(sp)
    72b0:	10c0400c 	andi	r3,r2,256
    72b4:	2821883a 	mov	r16,r5
    72b8:	2023883a 	mov	r17,r4
    72bc:	3025883a 	mov	r18,r6
    72c0:	3827883a 	mov	r19,r7
    72c4:	18000526 	beq	r3,zero,72dc <__swrite+0x48>
    72c8:	2940038f 	ldh	r5,14(r5)
    72cc:	01c00084 	movi	r7,2
    72d0:	000d883a 	mov	r6,zero
    72d4:	00095f40 	call	95f4 <_lseek_r>
    72d8:	8080030b 	ldhu	r2,12(r16)
    72dc:	8140038f 	ldh	r5,14(r16)
    72e0:	10bbffcc 	andi	r2,r2,61439
    72e4:	980f883a 	mov	r7,r19
    72e8:	900d883a 	mov	r6,r18
    72ec:	8809883a 	mov	r4,r17
    72f0:	8080030d 	sth	r2,12(r16)
    72f4:	dfc00417 	ldw	ra,16(sp)
    72f8:	dcc00317 	ldw	r19,12(sp)
    72fc:	dc800217 	ldw	r18,8(sp)
    7300:	dc400117 	ldw	r17,4(sp)
    7304:	dc000017 	ldw	r16,0(sp)
    7308:	dec00504 	addi	sp,sp,20
    730c:	0008be01 	jmpi	8be0 <_write_r>

00007310 <__sseek>:
    7310:	defffe04 	addi	sp,sp,-8
    7314:	dc000015 	stw	r16,0(sp)
    7318:	2821883a 	mov	r16,r5
    731c:	2940038f 	ldh	r5,14(r5)
    7320:	dfc00115 	stw	ra,4(sp)
    7324:	00095f40 	call	95f4 <_lseek_r>
    7328:	00ffffc4 	movi	r3,-1
    732c:	10c00826 	beq	r2,r3,7350 <__sseek+0x40>
    7330:	80c0030b 	ldhu	r3,12(r16)
    7334:	80801415 	stw	r2,80(r16)
    7338:	18c40014 	ori	r3,r3,4096
    733c:	80c0030d 	sth	r3,12(r16)
    7340:	dfc00117 	ldw	ra,4(sp)
    7344:	dc000017 	ldw	r16,0(sp)
    7348:	dec00204 	addi	sp,sp,8
    734c:	f800283a 	ret
    7350:	80c0030b 	ldhu	r3,12(r16)
    7354:	18fbffcc 	andi	r3,r3,61439
    7358:	80c0030d 	sth	r3,12(r16)
    735c:	dfc00117 	ldw	ra,4(sp)
    7360:	dc000017 	ldw	r16,0(sp)
    7364:	dec00204 	addi	sp,sp,8
    7368:	f800283a 	ret

0000736c <__sclose>:
    736c:	2940038f 	ldh	r5,14(r5)
    7370:	0008c401 	jmpi	8c40 <_close_r>

00007374 <strcmp>:
    7374:	2144b03a 	or	r2,r4,r5
    7378:	108000cc 	andi	r2,r2,3
    737c:	1000171e 	bne	r2,zero,73dc <strcmp+0x68>
    7380:	20800017 	ldw	r2,0(r4)
    7384:	28c00017 	ldw	r3,0(r5)
    7388:	10c0141e 	bne	r2,r3,73dc <strcmp+0x68>
    738c:	027fbff4 	movhi	r9,65279
    7390:	4a7fbfc4 	addi	r9,r9,-257
    7394:	0086303a 	nor	r3,zero,r2
    7398:	02202074 	movhi	r8,32897
    739c:	1245883a 	add	r2,r2,r9
    73a0:	42202004 	addi	r8,r8,-32640
    73a4:	10c4703a 	and	r2,r2,r3
    73a8:	1204703a 	and	r2,r2,r8
    73ac:	10000226 	beq	r2,zero,73b8 <strcmp+0x44>
    73b0:	00002306 	br	7440 <strcmp+0xcc>
    73b4:	1000221e 	bne	r2,zero,7440 <strcmp+0xcc>
    73b8:	21000104 	addi	r4,r4,4
    73bc:	20c00017 	ldw	r3,0(r4)
    73c0:	29400104 	addi	r5,r5,4
    73c4:	29800017 	ldw	r6,0(r5)
    73c8:	1a4f883a 	add	r7,r3,r9
    73cc:	00c4303a 	nor	r2,zero,r3
    73d0:	3884703a 	and	r2,r7,r2
    73d4:	1204703a 	and	r2,r2,r8
    73d8:	19bff626 	beq	r3,r6,73b4 <__alt_data_end+0xfffe7fb4>
    73dc:	20800003 	ldbu	r2,0(r4)
    73e0:	10c03fcc 	andi	r3,r2,255
    73e4:	18c0201c 	xori	r3,r3,128
    73e8:	18ffe004 	addi	r3,r3,-128
    73ec:	18000c26 	beq	r3,zero,7420 <strcmp+0xac>
    73f0:	29800007 	ldb	r6,0(r5)
    73f4:	19800326 	beq	r3,r6,7404 <strcmp+0x90>
    73f8:	00001306 	br	7448 <strcmp+0xd4>
    73fc:	29800007 	ldb	r6,0(r5)
    7400:	11800b1e 	bne	r2,r6,7430 <strcmp+0xbc>
    7404:	21000044 	addi	r4,r4,1
    7408:	20c00003 	ldbu	r3,0(r4)
    740c:	29400044 	addi	r5,r5,1
    7410:	18803fcc 	andi	r2,r3,255
    7414:	1080201c 	xori	r2,r2,128
    7418:	10bfe004 	addi	r2,r2,-128
    741c:	103ff71e 	bne	r2,zero,73fc <__alt_data_end+0xfffe7ffc>
    7420:	0007883a 	mov	r3,zero
    7424:	28800003 	ldbu	r2,0(r5)
    7428:	1885c83a 	sub	r2,r3,r2
    742c:	f800283a 	ret
    7430:	28800003 	ldbu	r2,0(r5)
    7434:	18c03fcc 	andi	r3,r3,255
    7438:	1885c83a 	sub	r2,r3,r2
    743c:	f800283a 	ret
    7440:	0005883a 	mov	r2,zero
    7444:	f800283a 	ret
    7448:	10c03fcc 	andi	r3,r2,255
    744c:	003ff506 	br	7424 <__alt_data_end+0xfffe8024>

00007450 <strlen>:
    7450:	208000cc 	andi	r2,r4,3
    7454:	10002026 	beq	r2,zero,74d8 <strlen+0x88>
    7458:	20800007 	ldb	r2,0(r4)
    745c:	10002026 	beq	r2,zero,74e0 <strlen+0x90>
    7460:	2005883a 	mov	r2,r4
    7464:	00000206 	br	7470 <strlen+0x20>
    7468:	10c00007 	ldb	r3,0(r2)
    746c:	18001826 	beq	r3,zero,74d0 <strlen+0x80>
    7470:	10800044 	addi	r2,r2,1
    7474:	10c000cc 	andi	r3,r2,3
    7478:	183ffb1e 	bne	r3,zero,7468 <__alt_data_end+0xfffe8068>
    747c:	10c00017 	ldw	r3,0(r2)
    7480:	01ffbff4 	movhi	r7,65279
    7484:	39ffbfc4 	addi	r7,r7,-257
    7488:	00ca303a 	nor	r5,zero,r3
    748c:	01a02074 	movhi	r6,32897
    7490:	19c7883a 	add	r3,r3,r7
    7494:	31a02004 	addi	r6,r6,-32640
    7498:	1946703a 	and	r3,r3,r5
    749c:	1986703a 	and	r3,r3,r6
    74a0:	1800091e 	bne	r3,zero,74c8 <strlen+0x78>
    74a4:	10800104 	addi	r2,r2,4
    74a8:	10c00017 	ldw	r3,0(r2)
    74ac:	19cb883a 	add	r5,r3,r7
    74b0:	00c6303a 	nor	r3,zero,r3
    74b4:	28c6703a 	and	r3,r5,r3
    74b8:	1986703a 	and	r3,r3,r6
    74bc:	183ff926 	beq	r3,zero,74a4 <__alt_data_end+0xfffe80a4>
    74c0:	00000106 	br	74c8 <strlen+0x78>
    74c4:	10800044 	addi	r2,r2,1
    74c8:	10c00007 	ldb	r3,0(r2)
    74cc:	183ffd1e 	bne	r3,zero,74c4 <__alt_data_end+0xfffe80c4>
    74d0:	1105c83a 	sub	r2,r2,r4
    74d4:	f800283a 	ret
    74d8:	2005883a 	mov	r2,r4
    74dc:	003fe706 	br	747c <__alt_data_end+0xfffe807c>
    74e0:	0005883a 	mov	r2,zero
    74e4:	f800283a 	ret

000074e8 <__sprint_r.part.0>:
    74e8:	28801917 	ldw	r2,100(r5)
    74ec:	defff604 	addi	sp,sp,-40
    74f0:	dd400515 	stw	r21,20(sp)
    74f4:	dfc00915 	stw	ra,36(sp)
    74f8:	df000815 	stw	fp,32(sp)
    74fc:	ddc00715 	stw	r23,28(sp)
    7500:	dd800615 	stw	r22,24(sp)
    7504:	dd000415 	stw	r20,16(sp)
    7508:	dcc00315 	stw	r19,12(sp)
    750c:	dc800215 	stw	r18,8(sp)
    7510:	dc400115 	stw	r17,4(sp)
    7514:	dc000015 	stw	r16,0(sp)
    7518:	1088000c 	andi	r2,r2,8192
    751c:	302b883a 	mov	r21,r6
    7520:	10002e26 	beq	r2,zero,75dc <__sprint_r.part.0+0xf4>
    7524:	30800217 	ldw	r2,8(r6)
    7528:	35800017 	ldw	r22,0(r6)
    752c:	10002926 	beq	r2,zero,75d4 <__sprint_r.part.0+0xec>
    7530:	2827883a 	mov	r19,r5
    7534:	2029883a 	mov	r20,r4
    7538:	b5c00104 	addi	r23,r22,4
    753c:	04bfffc4 	movi	r18,-1
    7540:	bc400017 	ldw	r17,0(r23)
    7544:	b4000017 	ldw	r16,0(r22)
    7548:	0039883a 	mov	fp,zero
    754c:	8822d0ba 	srli	r17,r17,2
    7550:	8800031e 	bne	r17,zero,7560 <__sprint_r.part.0+0x78>
    7554:	00001806 	br	75b8 <__sprint_r.part.0+0xd0>
    7558:	84000104 	addi	r16,r16,4
    755c:	8f001526 	beq	r17,fp,75b4 <__sprint_r.part.0+0xcc>
    7560:	81400017 	ldw	r5,0(r16)
    7564:	980d883a 	mov	r6,r19
    7568:	a009883a 	mov	r4,r20
    756c:	0008fd80 	call	8fd8 <_fputwc_r>
    7570:	e7000044 	addi	fp,fp,1
    7574:	14bff81e 	bne	r2,r18,7558 <__alt_data_end+0xfffe8158>
    7578:	9005883a 	mov	r2,r18
    757c:	a8000215 	stw	zero,8(r21)
    7580:	a8000115 	stw	zero,4(r21)
    7584:	dfc00917 	ldw	ra,36(sp)
    7588:	df000817 	ldw	fp,32(sp)
    758c:	ddc00717 	ldw	r23,28(sp)
    7590:	dd800617 	ldw	r22,24(sp)
    7594:	dd400517 	ldw	r21,20(sp)
    7598:	dd000417 	ldw	r20,16(sp)
    759c:	dcc00317 	ldw	r19,12(sp)
    75a0:	dc800217 	ldw	r18,8(sp)
    75a4:	dc400117 	ldw	r17,4(sp)
    75a8:	dc000017 	ldw	r16,0(sp)
    75ac:	dec00a04 	addi	sp,sp,40
    75b0:	f800283a 	ret
    75b4:	a8800217 	ldw	r2,8(r21)
    75b8:	8c63883a 	add	r17,r17,r17
    75bc:	8c63883a 	add	r17,r17,r17
    75c0:	1445c83a 	sub	r2,r2,r17
    75c4:	a8800215 	stw	r2,8(r21)
    75c8:	b5800204 	addi	r22,r22,8
    75cc:	bdc00204 	addi	r23,r23,8
    75d0:	103fdb1e 	bne	r2,zero,7540 <__alt_data_end+0xfffe8140>
    75d4:	0005883a 	mov	r2,zero
    75d8:	003fe806 	br	757c <__alt_data_end+0xfffe817c>
    75dc:	00090d80 	call	90d8 <__sfvwrite_r>
    75e0:	003fe606 	br	757c <__alt_data_end+0xfffe817c>

000075e4 <__sprint_r>:
    75e4:	30c00217 	ldw	r3,8(r6)
    75e8:	18000126 	beq	r3,zero,75f0 <__sprint_r+0xc>
    75ec:	00074e81 	jmpi	74e8 <__sprint_r.part.0>
    75f0:	30000115 	stw	zero,4(r6)
    75f4:	0005883a 	mov	r2,zero
    75f8:	f800283a 	ret

000075fc <___vfiprintf_internal_r>:
    75fc:	deffca04 	addi	sp,sp,-216
    7600:	dd403115 	stw	r21,196(sp)
    7604:	dfc03515 	stw	ra,212(sp)
    7608:	df003415 	stw	fp,208(sp)
    760c:	ddc03315 	stw	r23,204(sp)
    7610:	dd803215 	stw	r22,200(sp)
    7614:	dd003015 	stw	r20,192(sp)
    7618:	dcc02f15 	stw	r19,188(sp)
    761c:	dc802e15 	stw	r18,184(sp)
    7620:	dc402d15 	stw	r17,180(sp)
    7624:	dc002c15 	stw	r16,176(sp)
    7628:	d9002115 	stw	r4,132(sp)
    762c:	d9402015 	stw	r5,128(sp)
    7630:	d9c02215 	stw	r7,136(sp)
    7634:	302b883a 	mov	r21,r6
    7638:	20000226 	beq	r4,zero,7644 <___vfiprintf_internal_r+0x48>
    763c:	20800e17 	ldw	r2,56(r4)
    7640:	1000cf26 	beq	r2,zero,7980 <___vfiprintf_internal_r+0x384>
    7644:	d8c02017 	ldw	r3,128(sp)
    7648:	1880030b 	ldhu	r2,12(r3)
    764c:	10c8000c 	andi	r3,r2,8192
    7650:	1800071e 	bne	r3,zero,7670 <___vfiprintf_internal_r+0x74>
    7654:	d9402017 	ldw	r5,128(sp)
    7658:	00f7ffc4 	movi	r3,-8193
    765c:	10880014 	ori	r2,r2,8192
    7660:	29001917 	ldw	r4,100(r5)
    7664:	2880030d 	sth	r2,12(r5)
    7668:	20c6703a 	and	r3,r4,r3
    766c:	28c01915 	stw	r3,100(r5)
    7670:	10c0020c 	andi	r3,r2,8
    7674:	1800a526 	beq	r3,zero,790c <___vfiprintf_internal_r+0x310>
    7678:	d9002017 	ldw	r4,128(sp)
    767c:	20c00417 	ldw	r3,16(r4)
    7680:	1800a226 	beq	r3,zero,790c <___vfiprintf_internal_r+0x310>
    7684:	1080068c 	andi	r2,r2,26
    7688:	00c00284 	movi	r3,10
    768c:	10c0a826 	beq	r2,r3,7930 <___vfiprintf_internal_r+0x334>
    7690:	d9001a04 	addi	r4,sp,104
    7694:	d94019c4 	addi	r5,sp,103
    7698:	04800074 	movhi	r18,1
    769c:	2145c83a 	sub	r2,r4,r5
    76a0:	94bff204 	addi	r18,r18,-56
    76a4:	d9001e15 	stw	r4,120(sp)
    76a8:	d9401f15 	stw	r5,124(sp)
    76ac:	dec01a15 	stw	sp,104(sp)
    76b0:	d8001c15 	stw	zero,112(sp)
    76b4:	d8001b15 	stw	zero,108(sp)
    76b8:	d811883a 	mov	r8,sp
    76bc:	d8002615 	stw	zero,152(sp)
    76c0:	d8002415 	stw	zero,144(sp)
    76c4:	d8802815 	stw	r2,160(sp)
    76c8:	a82d883a 	mov	r22,r21
    76cc:	b0800007 	ldb	r2,0(r22)
    76d0:	10040d26 	beq	r2,zero,8708 <___vfiprintf_internal_r+0x110c>
    76d4:	00c00944 	movi	r3,37
    76d8:	b029883a 	mov	r20,r22
    76dc:	10c0021e 	bne	r2,r3,76e8 <___vfiprintf_internal_r+0xec>
    76e0:	00001606 	br	773c <___vfiprintf_internal_r+0x140>
    76e4:	10c00326 	beq	r2,r3,76f4 <___vfiprintf_internal_r+0xf8>
    76e8:	a5000044 	addi	r20,r20,1
    76ec:	a0800007 	ldb	r2,0(r20)
    76f0:	103ffc1e 	bne	r2,zero,76e4 <__alt_data_end+0xfffe82e4>
    76f4:	a5a1c83a 	sub	r16,r20,r22
    76f8:	80001026 	beq	r16,zero,773c <___vfiprintf_internal_r+0x140>
    76fc:	d8c01c17 	ldw	r3,112(sp)
    7700:	d8801b17 	ldw	r2,108(sp)
    7704:	45800015 	stw	r22,0(r8)
    7708:	80c7883a 	add	r3,r16,r3
    770c:	10800044 	addi	r2,r2,1
    7710:	44000115 	stw	r16,4(r8)
    7714:	d8c01c15 	stw	r3,112(sp)
    7718:	d8801b15 	stw	r2,108(sp)
    771c:	010001c4 	movi	r4,7
    7720:	2080750e 	bge	r4,r2,78f8 <___vfiprintf_internal_r+0x2fc>
    7724:	1803951e 	bne	r3,zero,857c <___vfiprintf_internal_r+0xf80>
    7728:	d8c02417 	ldw	r3,144(sp)
    772c:	d8001b15 	stw	zero,108(sp)
    7730:	d811883a 	mov	r8,sp
    7734:	1c07883a 	add	r3,r3,r16
    7738:	d8c02415 	stw	r3,144(sp)
    773c:	a0800007 	ldb	r2,0(r20)
    7740:	1002e026 	beq	r2,zero,82c4 <___vfiprintf_internal_r+0xcc8>
    7744:	a5800044 	addi	r22,r20,1
    7748:	a0c00047 	ldb	r3,1(r20)
    774c:	d8001d85 	stb	zero,118(sp)
    7750:	0027883a 	mov	r19,zero
    7754:	d8002305 	stb	zero,140(sp)
    7758:	043fffc4 	movi	r16,-1
    775c:	d8002515 	stw	zero,148(sp)
    7760:	0023883a 	mov	r17,zero
    7764:	05001604 	movi	r20,88
    7768:	05400244 	movi	r21,9
    776c:	402f883a 	mov	r23,r8
    7770:	b5800044 	addi	r22,r22,1
    7774:	18bff804 	addi	r2,r3,-32
    7778:	a0827736 	bltu	r20,r2,8158 <___vfiprintf_internal_r+0xb5c>
    777c:	100490ba 	slli	r2,r2,2
    7780:	01000034 	movhi	r4,0
    7784:	211de504 	addi	r4,r4,30612
    7788:	1105883a 	add	r2,r2,r4
    778c:	10800017 	ldw	r2,0(r2)
    7790:	1000683a 	jmp	r2
    7794:	00007e58 	cmpnei	zero,zero,505
    7798:	00008158 	cmpnei	zero,zero,517
    779c:	00008158 	cmpnei	zero,zero,517
    77a0:	00007e74 	movhi	zero,505
    77a4:	00008158 	cmpnei	zero,zero,517
    77a8:	00008158 	cmpnei	zero,zero,517
    77ac:	00008158 	cmpnei	zero,zero,517
    77b0:	00008158 	cmpnei	zero,zero,517
    77b4:	00008158 	cmpnei	zero,zero,517
    77b8:	00008158 	cmpnei	zero,zero,517
    77bc:	0000807c 	xorhi	zero,zero,513
    77c0:	000080a0 	cmpeqi	zero,zero,514
    77c4:	00008158 	cmpnei	zero,zero,517
    77c8:	00007998 	cmpnei	zero,zero,486
    77cc:	000080b4 	movhi	zero,514
    77d0:	00008158 	cmpnei	zero,zero,517
    77d4:	00007e80 	call	7e8 <dec2ToHex+0xbc>
    77d8:	00007e8c 	andi	zero,zero,506
    77dc:	00007e8c 	andi	zero,zero,506
    77e0:	00007e8c 	andi	zero,zero,506
    77e4:	00007e8c 	andi	zero,zero,506
    77e8:	00007e8c 	andi	zero,zero,506
    77ec:	00007e8c 	andi	zero,zero,506
    77f0:	00007e8c 	andi	zero,zero,506
    77f4:	00007e8c 	andi	zero,zero,506
    77f8:	00007e8c 	andi	zero,zero,506
    77fc:	00008158 	cmpnei	zero,zero,517
    7800:	00008158 	cmpnei	zero,zero,517
    7804:	00008158 	cmpnei	zero,zero,517
    7808:	00008158 	cmpnei	zero,zero,517
    780c:	00008158 	cmpnei	zero,zero,517
    7810:	00008158 	cmpnei	zero,zero,517
    7814:	00008158 	cmpnei	zero,zero,517
    7818:	00008158 	cmpnei	zero,zero,517
    781c:	00008158 	cmpnei	zero,zero,517
    7820:	00008158 	cmpnei	zero,zero,517
    7824:	00007ecc 	andi	zero,zero,507
    7828:	00008158 	cmpnei	zero,zero,517
    782c:	00008158 	cmpnei	zero,zero,517
    7830:	00008158 	cmpnei	zero,zero,517
    7834:	00008158 	cmpnei	zero,zero,517
    7838:	00008158 	cmpnei	zero,zero,517
    783c:	00008158 	cmpnei	zero,zero,517
    7840:	00008158 	cmpnei	zero,zero,517
    7844:	00008158 	cmpnei	zero,zero,517
    7848:	00008158 	cmpnei	zero,zero,517
    784c:	00008158 	cmpnei	zero,zero,517
    7850:	00007f08 	cmpgei	zero,zero,508
    7854:	00008158 	cmpnei	zero,zero,517
    7858:	00008158 	cmpnei	zero,zero,517
    785c:	00008158 	cmpnei	zero,zero,517
    7860:	00008158 	cmpnei	zero,zero,517
    7864:	00008158 	cmpnei	zero,zero,517
    7868:	00007f64 	muli	zero,zero,509
    786c:	00008158 	cmpnei	zero,zero,517
    7870:	00008158 	cmpnei	zero,zero,517
    7874:	00007fd8 	cmpnei	zero,zero,511
    7878:	00008158 	cmpnei	zero,zero,517
    787c:	00008158 	cmpnei	zero,zero,517
    7880:	00008158 	cmpnei	zero,zero,517
    7884:	00008158 	cmpnei	zero,zero,517
    7888:	00008158 	cmpnei	zero,zero,517
    788c:	00008158 	cmpnei	zero,zero,517
    7890:	00008158 	cmpnei	zero,zero,517
    7894:	00008158 	cmpnei	zero,zero,517
    7898:	00008158 	cmpnei	zero,zero,517
    789c:	00008158 	cmpnei	zero,zero,517
    78a0:	00007d80 	call	7d8 <dec2ToHex+0xac>
    78a4:	00007db0 	cmpltui	zero,zero,502
    78a8:	00008158 	cmpnei	zero,zero,517
    78ac:	00008158 	cmpnei	zero,zero,517
    78b0:	00008158 	cmpnei	zero,zero,517
    78b4:	00008100 	call	810 <dec2ToHex+0xe4>
    78b8:	00007db0 	cmpltui	zero,zero,502
    78bc:	00008158 	cmpnei	zero,zero,517
    78c0:	00008158 	cmpnei	zero,zero,517
    78c4:	00007c58 	cmpnei	zero,zero,497
    78c8:	00008158 	cmpnei	zero,zero,517
    78cc:	00007c6c 	andhi	zero,zero,497
    78d0:	00007ca4 	muli	zero,zero,498
    78d4:	000079a4 	muli	zero,zero,486
    78d8:	00007c4c 	andi	zero,zero,497
    78dc:	00008158 	cmpnei	zero,zero,517
    78e0:	00008018 	cmpnei	zero,zero,512
    78e4:	00008158 	cmpnei	zero,zero,517
    78e8:	00008064 	muli	zero,zero,513
    78ec:	00008158 	cmpnei	zero,zero,517
    78f0:	00008158 	cmpnei	zero,zero,517
    78f4:	00007d28 	cmpgeui	zero,zero,500
    78f8:	42000204 	addi	r8,r8,8
    78fc:	d8c02417 	ldw	r3,144(sp)
    7900:	1c07883a 	add	r3,r3,r16
    7904:	d8c02415 	stw	r3,144(sp)
    7908:	003f8c06 	br	773c <__alt_data_end+0xfffe833c>
    790c:	d9402017 	ldw	r5,128(sp)
    7910:	d9002117 	ldw	r4,132(sp)
    7914:	0002ca80 	call	2ca8 <__swsetup_r>
    7918:	1003c11e 	bne	r2,zero,8820 <___vfiprintf_internal_r+0x1224>
    791c:	d9402017 	ldw	r5,128(sp)
    7920:	00c00284 	movi	r3,10
    7924:	2880030b 	ldhu	r2,12(r5)
    7928:	1080068c 	andi	r2,r2,26
    792c:	10ff581e 	bne	r2,r3,7690 <__alt_data_end+0xfffe8290>
    7930:	d8c02017 	ldw	r3,128(sp)
    7934:	1880038f 	ldh	r2,14(r3)
    7938:	103f5516 	blt	r2,zero,7690 <__alt_data_end+0xfffe8290>
    793c:	d9c02217 	ldw	r7,136(sp)
    7940:	d9002117 	ldw	r4,132(sp)
    7944:	a80d883a 	mov	r6,r21
    7948:	180b883a 	mov	r5,r3
    794c:	0008b240 	call	8b24 <__sbprintf>
    7950:	dfc03517 	ldw	ra,212(sp)
    7954:	df003417 	ldw	fp,208(sp)
    7958:	ddc03317 	ldw	r23,204(sp)
    795c:	dd803217 	ldw	r22,200(sp)
    7960:	dd403117 	ldw	r21,196(sp)
    7964:	dd003017 	ldw	r20,192(sp)
    7968:	dcc02f17 	ldw	r19,188(sp)
    796c:	dc802e17 	ldw	r18,184(sp)
    7970:	dc402d17 	ldw	r17,180(sp)
    7974:	dc002c17 	ldw	r16,176(sp)
    7978:	dec03604 	addi	sp,sp,216
    797c:	f800283a 	ret
    7980:	0004cb40 	call	4cb4 <__sinit>
    7984:	003f2f06 	br	7644 <__alt_data_end+0xfffe8244>
    7988:	d8c02517 	ldw	r3,148(sp)
    798c:	d8802215 	stw	r2,136(sp)
    7990:	00c7c83a 	sub	r3,zero,r3
    7994:	d8c02515 	stw	r3,148(sp)
    7998:	8c400114 	ori	r17,r17,4
    799c:	b0c00007 	ldb	r3,0(r22)
    79a0:	003f7306 	br	7770 <__alt_data_end+0xfffe8370>
    79a4:	00800c04 	movi	r2,48
    79a8:	d9402217 	ldw	r5,136(sp)
    79ac:	d8801d05 	stb	r2,116(sp)
    79b0:	00801e04 	movi	r2,120
    79b4:	d8801d45 	stb	r2,117(sp)
    79b8:	d8001d85 	stb	zero,118(sp)
    79bc:	b811883a 	mov	r8,r23
    79c0:	28c00104 	addi	r3,r5,4
    79c4:	2cc00017 	ldw	r19,0(r5)
    79c8:	0029883a 	mov	r20,zero
    79cc:	88800094 	ori	r2,r17,2
    79d0:	80032516 	blt	r16,zero,8668 <___vfiprintf_internal_r+0x106c>
    79d4:	00bfdfc4 	movi	r2,-129
    79d8:	88a2703a 	and	r17,r17,r2
    79dc:	d8c02215 	stw	r3,136(sp)
    79e0:	8c400094 	ori	r17,r17,2
    79e4:	98032a1e 	bne	r19,zero,8690 <___vfiprintf_internal_r+0x1094>
    79e8:	00800074 	movhi	r2,1
    79ec:	10bf9104 	addi	r2,r2,-444
    79f0:	d8802615 	stw	r2,152(sp)
    79f4:	002b883a 	mov	r21,zero
    79f8:	8001741e 	bne	r16,zero,7fcc <___vfiprintf_internal_r+0x9d0>
    79fc:	0021883a 	mov	r16,zero
    7a00:	0029883a 	mov	r20,zero
    7a04:	ddc01a04 	addi	r23,sp,104
    7a08:	8027883a 	mov	r19,r16
    7a0c:	8500010e 	bge	r16,r20,7a14 <___vfiprintf_internal_r+0x418>
    7a10:	a027883a 	mov	r19,r20
    7a14:	ad403fcc 	andi	r21,r21,255
    7a18:	ad40201c 	xori	r21,r21,128
    7a1c:	ad7fe004 	addi	r21,r21,-128
    7a20:	a8000126 	beq	r21,zero,7a28 <___vfiprintf_internal_r+0x42c>
    7a24:	9cc00044 	addi	r19,r19,1
    7a28:	89c0008c 	andi	r7,r17,2
    7a2c:	38000126 	beq	r7,zero,7a34 <___vfiprintf_internal_r+0x438>
    7a30:	9cc00084 	addi	r19,r19,2
    7a34:	88c0210c 	andi	r3,r17,132
    7a38:	1801dd1e 	bne	r3,zero,81b0 <___vfiprintf_internal_r+0xbb4>
    7a3c:	d9402517 	ldw	r5,148(sp)
    7a40:	2cebc83a 	sub	r21,r5,r19
    7a44:	0541da0e 	bge	zero,r21,81b0 <___vfiprintf_internal_r+0xbb4>
    7a48:	07000404 	movi	fp,16
    7a4c:	d8801c17 	ldw	r2,112(sp)
    7a50:	e543be0e 	bge	fp,r21,894c <___vfiprintf_internal_r+0x1350>
    7a54:	01400074 	movhi	r5,1
    7a58:	297ff604 	addi	r5,r5,-40
    7a5c:	dc002715 	stw	r16,156(sp)
    7a60:	d9801b17 	ldw	r6,108(sp)
    7a64:	a821883a 	mov	r16,r21
    7a68:	d9402315 	stw	r5,140(sp)
    7a6c:	028001c4 	movi	r10,7
    7a70:	d9c02915 	stw	r7,164(sp)
    7a74:	182b883a 	mov	r21,r3
    7a78:	00000506 	br	7a90 <___vfiprintf_internal_r+0x494>
    7a7c:	31000084 	addi	r4,r6,2
    7a80:	42000204 	addi	r8,r8,8
    7a84:	180d883a 	mov	r6,r3
    7a88:	843ffc04 	addi	r16,r16,-16
    7a8c:	e4000f0e 	bge	fp,r16,7acc <___vfiprintf_internal_r+0x4d0>
    7a90:	01000074 	movhi	r4,1
    7a94:	10800404 	addi	r2,r2,16
    7a98:	30c00044 	addi	r3,r6,1
    7a9c:	213ff604 	addi	r4,r4,-40
    7aa0:	41000015 	stw	r4,0(r8)
    7aa4:	47000115 	stw	fp,4(r8)
    7aa8:	d8801c15 	stw	r2,112(sp)
    7aac:	d8c01b15 	stw	r3,108(sp)
    7ab0:	50fff20e 	bge	r10,r3,7a7c <__alt_data_end+0xfffe867c>
    7ab4:	1001b21e 	bne	r2,zero,8180 <___vfiprintf_internal_r+0xb84>
    7ab8:	843ffc04 	addi	r16,r16,-16
    7abc:	000d883a 	mov	r6,zero
    7ac0:	01000044 	movi	r4,1
    7ac4:	d811883a 	mov	r8,sp
    7ac8:	e43ff116 	blt	fp,r16,7a90 <__alt_data_end+0xfffe8690>
    7acc:	a807883a 	mov	r3,r21
    7ad0:	d9c02917 	ldw	r7,164(sp)
    7ad4:	802b883a 	mov	r21,r16
    7ad8:	dc002717 	ldw	r16,156(sp)
    7adc:	d9402317 	ldw	r5,140(sp)
    7ae0:	a885883a 	add	r2,r21,r2
    7ae4:	45400115 	stw	r21,4(r8)
    7ae8:	41400015 	stw	r5,0(r8)
    7aec:	d8801c15 	stw	r2,112(sp)
    7af0:	d9001b15 	stw	r4,108(sp)
    7af4:	014001c4 	movi	r5,7
    7af8:	29026216 	blt	r5,r4,8484 <___vfiprintf_internal_r+0xe88>
    7afc:	d9801d87 	ldb	r6,118(sp)
    7b00:	42000204 	addi	r8,r8,8
    7b04:	21400044 	addi	r5,r4,1
    7b08:	3001ae1e 	bne	r6,zero,81c4 <___vfiprintf_internal_r+0xbc8>
    7b0c:	3801bb26 	beq	r7,zero,81fc <___vfiprintf_internal_r+0xc00>
    7b10:	d9001d04 	addi	r4,sp,116
    7b14:	10800084 	addi	r2,r2,2
    7b18:	41000015 	stw	r4,0(r8)
    7b1c:	01000084 	movi	r4,2
    7b20:	41000115 	stw	r4,4(r8)
    7b24:	d8801c15 	stw	r2,112(sp)
    7b28:	d9401b15 	stw	r5,108(sp)
    7b2c:	010001c4 	movi	r4,7
    7b30:	2142680e 	bge	r4,r5,84d4 <___vfiprintf_internal_r+0xed8>
    7b34:	1002b11e 	bne	r2,zero,85fc <___vfiprintf_internal_r+0x1000>
    7b38:	01802004 	movi	r6,128
    7b3c:	01400044 	movi	r5,1
    7b40:	0009883a 	mov	r4,zero
    7b44:	d811883a 	mov	r8,sp
    7b48:	1981ae1e 	bne	r3,r6,8204 <___vfiprintf_internal_r+0xc08>
    7b4c:	d8c02517 	ldw	r3,148(sp)
    7b50:	1cf9c83a 	sub	fp,r3,r19
    7b54:	0701ab0e 	bge	zero,fp,8204 <___vfiprintf_internal_r+0xc08>
    7b58:	05400404 	movi	r21,16
    7b5c:	af03a90e 	bge	r21,fp,8a04 <___vfiprintf_internal_r+0x1408>
    7b60:	01400074 	movhi	r5,1
    7b64:	297ff204 	addi	r5,r5,-56
    7b68:	d9402315 	stw	r5,140(sp)
    7b6c:	01c001c4 	movi	r7,7
    7b70:	00000506 	br	7b88 <___vfiprintf_internal_r+0x58c>
    7b74:	21800084 	addi	r6,r4,2
    7b78:	42000204 	addi	r8,r8,8
    7b7c:	1809883a 	mov	r4,r3
    7b80:	e73ffc04 	addi	fp,fp,-16
    7b84:	af000d0e 	bge	r21,fp,7bbc <___vfiprintf_internal_r+0x5c0>
    7b88:	10800404 	addi	r2,r2,16
    7b8c:	20c00044 	addi	r3,r4,1
    7b90:	44800015 	stw	r18,0(r8)
    7b94:	45400115 	stw	r21,4(r8)
    7b98:	d8801c15 	stw	r2,112(sp)
    7b9c:	d8c01b15 	stw	r3,108(sp)
    7ba0:	38fff40e 	bge	r7,r3,7b74 <__alt_data_end+0xfffe8774>
    7ba4:	10022b1e 	bne	r2,zero,8454 <___vfiprintf_internal_r+0xe58>
    7ba8:	e73ffc04 	addi	fp,fp,-16
    7bac:	01800044 	movi	r6,1
    7bb0:	0009883a 	mov	r4,zero
    7bb4:	d811883a 	mov	r8,sp
    7bb8:	af3ff316 	blt	r21,fp,7b88 <__alt_data_end+0xfffe8788>
    7bbc:	d8c02317 	ldw	r3,140(sp)
    7bc0:	1705883a 	add	r2,r2,fp
    7bc4:	47000115 	stw	fp,4(r8)
    7bc8:	40c00015 	stw	r3,0(r8)
    7bcc:	d8801c15 	stw	r2,112(sp)
    7bd0:	d9801b15 	stw	r6,108(sp)
    7bd4:	00c001c4 	movi	r3,7
    7bd8:	19829416 	blt	r3,r6,862c <___vfiprintf_internal_r+0x1030>
    7bdc:	8521c83a 	sub	r16,r16,r20
    7be0:	42000204 	addi	r8,r8,8
    7be4:	31400044 	addi	r5,r6,1
    7be8:	3009883a 	mov	r4,r6
    7bec:	04018716 	blt	zero,r16,820c <___vfiprintf_internal_r+0xc10>
    7bf0:	a085883a 	add	r2,r20,r2
    7bf4:	45c00015 	stw	r23,0(r8)
    7bf8:	45000115 	stw	r20,4(r8)
    7bfc:	d8801c15 	stw	r2,112(sp)
    7c00:	d9401b15 	stw	r5,108(sp)
    7c04:	00c001c4 	movi	r3,7
    7c08:	1941c20e 	bge	r3,r5,8314 <___vfiprintf_internal_r+0xd18>
    7c0c:	1002531e 	bne	r2,zero,855c <___vfiprintf_internal_r+0xf60>
    7c10:	d8001b15 	stw	zero,108(sp)
    7c14:	8c40010c 	andi	r17,r17,4
    7c18:	88023226 	beq	r17,zero,84e4 <___vfiprintf_internal_r+0xee8>
    7c1c:	d9002517 	ldw	r4,148(sp)
    7c20:	24e3c83a 	sub	r17,r4,r19
    7c24:	04432916 	blt	zero,r17,88cc <___vfiprintf_internal_r+0x12d0>
    7c28:	d8802517 	ldw	r2,148(sp)
    7c2c:	14c0010e 	bge	r2,r19,7c34 <___vfiprintf_internal_r+0x638>
    7c30:	9805883a 	mov	r2,r19
    7c34:	d8c02417 	ldw	r3,144(sp)
    7c38:	1887883a 	add	r3,r3,r2
    7c3c:	d8c02415 	stw	r3,144(sp)
    7c40:	d8001b15 	stw	zero,108(sp)
    7c44:	d811883a 	mov	r8,sp
    7c48:	003ea006 	br	76cc <__alt_data_end+0xfffe82cc>
    7c4c:	8c400814 	ori	r17,r17,32
    7c50:	b0c00007 	ldb	r3,0(r22)
    7c54:	003ec606 	br	7770 <__alt_data_end+0xfffe8370>
    7c58:	b0c00007 	ldb	r3,0(r22)
    7c5c:	00801b04 	movi	r2,108
    7c60:	18832026 	beq	r3,r2,88e4 <___vfiprintf_internal_r+0x12e8>
    7c64:	8c400414 	ori	r17,r17,16
    7c68:	003ec106 	br	7770 <__alt_data_end+0xfffe8370>
    7c6c:	9cc03fcc 	andi	r19,r19,255
    7c70:	b811883a 	mov	r8,r23
    7c74:	9803981e 	bne	r19,zero,8ad8 <___vfiprintf_internal_r+0x14dc>
    7c78:	8880080c 	andi	r2,r17,32
    7c7c:	1002be26 	beq	r2,zero,8778 <___vfiprintf_internal_r+0x117c>
    7c80:	d9002217 	ldw	r4,136(sp)
    7c84:	d9402417 	ldw	r5,144(sp)
    7c88:	20800017 	ldw	r2,0(r4)
    7c8c:	2807d7fa 	srai	r3,r5,31
    7c90:	21000104 	addi	r4,r4,4
    7c94:	d9002215 	stw	r4,136(sp)
    7c98:	11400015 	stw	r5,0(r2)
    7c9c:	10c00115 	stw	r3,4(r2)
    7ca0:	003e8a06 	br	76cc <__alt_data_end+0xfffe82cc>
    7ca4:	9cc03fcc 	andi	r19,r19,255
    7ca8:	b811883a 	mov	r8,r23
    7cac:	9803871e 	bne	r19,zero,8acc <___vfiprintf_internal_r+0x14d0>
    7cb0:	8880080c 	andi	r2,r17,32
    7cb4:	10009a26 	beq	r2,zero,7f20 <___vfiprintf_internal_r+0x924>
    7cb8:	d9002217 	ldw	r4,136(sp)
    7cbc:	d8001d85 	stb	zero,118(sp)
    7cc0:	20800204 	addi	r2,r4,8
    7cc4:	24c00017 	ldw	r19,0(r4)
    7cc8:	25000117 	ldw	r20,4(r4)
    7ccc:	8002a416 	blt	r16,zero,8760 <___vfiprintf_internal_r+0x1164>
    7cd0:	013fdfc4 	movi	r4,-129
    7cd4:	9d06b03a 	or	r3,r19,r20
    7cd8:	d8802215 	stw	r2,136(sp)
    7cdc:	8922703a 	and	r17,r17,r4
    7ce0:	18009b26 	beq	r3,zero,7f50 <___vfiprintf_internal_r+0x954>
    7ce4:	002b883a 	mov	r21,zero
    7ce8:	ddc01a04 	addi	r23,sp,104
    7cec:	9806d0fa 	srli	r3,r19,3
    7cf0:	a008977a 	slli	r4,r20,29
    7cf4:	a028d0fa 	srli	r20,r20,3
    7cf8:	9cc001cc 	andi	r19,r19,7
    7cfc:	98800c04 	addi	r2,r19,48
    7d00:	bdffffc4 	addi	r23,r23,-1
    7d04:	20e6b03a 	or	r19,r4,r3
    7d08:	b8800005 	stb	r2,0(r23)
    7d0c:	9d06b03a 	or	r3,r19,r20
    7d10:	183ff61e 	bne	r3,zero,7cec <__alt_data_end+0xfffe88ec>
    7d14:	88c0004c 	andi	r3,r17,1
    7d18:	18021f1e 	bne	r3,zero,8598 <___vfiprintf_internal_r+0xf9c>
    7d1c:	d9401e17 	ldw	r5,120(sp)
    7d20:	2de9c83a 	sub	r20,r5,r23
    7d24:	003f3806 	br	7a08 <__alt_data_end+0xfffe8608>
    7d28:	9cc03fcc 	andi	r19,r19,255
    7d2c:	b811883a 	mov	r8,r23
    7d30:	98034f1e 	bne	r19,zero,8a70 <___vfiprintf_internal_r+0x1474>
    7d34:	00800074 	movhi	r2,1
    7d38:	10bf9104 	addi	r2,r2,-444
    7d3c:	d8802615 	stw	r2,152(sp)
    7d40:	8880080c 	andi	r2,r17,32
    7d44:	1000ac26 	beq	r2,zero,7ff8 <___vfiprintf_internal_r+0x9fc>
    7d48:	d9002217 	ldw	r4,136(sp)
    7d4c:	24c00017 	ldw	r19,0(r4)
    7d50:	25000117 	ldw	r20,4(r4)
    7d54:	21000204 	addi	r4,r4,8
    7d58:	d9002215 	stw	r4,136(sp)
    7d5c:	8880004c 	andi	r2,r17,1
    7d60:	1001e726 	beq	r2,zero,8500 <___vfiprintf_internal_r+0xf04>
    7d64:	9d04b03a 	or	r2,r19,r20
    7d68:	10025c1e 	bne	r2,zero,86dc <___vfiprintf_internal_r+0x10e0>
    7d6c:	d8001d85 	stb	zero,118(sp)
    7d70:	80024416 	blt	r16,zero,8684 <___vfiprintf_internal_r+0x1088>
    7d74:	00bfdfc4 	movi	r2,-129
    7d78:	88a2703a 	and	r17,r17,r2
    7d7c:	003f1d06 	br	79f4 <__alt_data_end+0xfffe85f4>
    7d80:	d8c02217 	ldw	r3,136(sp)
    7d84:	04c00044 	movi	r19,1
    7d88:	b811883a 	mov	r8,r23
    7d8c:	18800017 	ldw	r2,0(r3)
    7d90:	18c00104 	addi	r3,r3,4
    7d94:	d8001d85 	stb	zero,118(sp)
    7d98:	d8801005 	stb	r2,64(sp)
    7d9c:	d8c02215 	stw	r3,136(sp)
    7da0:	9829883a 	mov	r20,r19
    7da4:	ddc01004 	addi	r23,sp,64
    7da8:	0021883a 	mov	r16,zero
    7dac:	003f1e06 	br	7a28 <__alt_data_end+0xfffe8628>
    7db0:	9cc03fcc 	andi	r19,r19,255
    7db4:	b811883a 	mov	r8,r23
    7db8:	9803331e 	bne	r19,zero,8a88 <___vfiprintf_internal_r+0x148c>
    7dbc:	8880080c 	andi	r2,r17,32
    7dc0:	10004826 	beq	r2,zero,7ee4 <___vfiprintf_internal_r+0x8e8>
    7dc4:	d9002217 	ldw	r4,136(sp)
    7dc8:	20800117 	ldw	r2,4(r4)
    7dcc:	24c00017 	ldw	r19,0(r4)
    7dd0:	21000204 	addi	r4,r4,8
    7dd4:	d9002215 	stw	r4,136(sp)
    7dd8:	1029883a 	mov	r20,r2
    7ddc:	10024c16 	blt	r2,zero,8710 <___vfiprintf_internal_r+0x1114>
    7de0:	dd401d83 	ldbu	r21,118(sp)
    7de4:	80007116 	blt	r16,zero,7fac <___vfiprintf_internal_r+0x9b0>
    7de8:	00ffdfc4 	movi	r3,-129
    7dec:	9d04b03a 	or	r2,r19,r20
    7df0:	88e2703a 	and	r17,r17,r3
    7df4:	1000d126 	beq	r2,zero,813c <___vfiprintf_internal_r+0xb40>
    7df8:	a0023526 	beq	r20,zero,86d0 <___vfiprintf_internal_r+0x10d4>
    7dfc:	ddc01a04 	addi	r23,sp,104
    7e00:	4039883a 	mov	fp,r8
    7e04:	9809883a 	mov	r4,r19
    7e08:	a00b883a 	mov	r5,r20
    7e0c:	01800284 	movi	r6,10
    7e10:	000f883a 	mov	r7,zero
    7e14:	000a6b00 	call	a6b0 <__umoddi3>
    7e18:	10800c04 	addi	r2,r2,48
    7e1c:	bdffffc4 	addi	r23,r23,-1
    7e20:	9809883a 	mov	r4,r19
    7e24:	a00b883a 	mov	r5,r20
    7e28:	b8800005 	stb	r2,0(r23)
    7e2c:	01800284 	movi	r6,10
    7e30:	000f883a 	mov	r7,zero
    7e34:	000a0b40 	call	a0b4 <__udivdi3>
    7e38:	1027883a 	mov	r19,r2
    7e3c:	10c4b03a 	or	r2,r2,r3
    7e40:	1829883a 	mov	r20,r3
    7e44:	103fef1e 	bne	r2,zero,7e04 <__alt_data_end+0xfffe8a04>
    7e48:	d9001e17 	ldw	r4,120(sp)
    7e4c:	e011883a 	mov	r8,fp
    7e50:	25e9c83a 	sub	r20,r4,r23
    7e54:	003eec06 	br	7a08 <__alt_data_end+0xfffe8608>
    7e58:	d8802307 	ldb	r2,140(sp)
    7e5c:	1002361e 	bne	r2,zero,8738 <___vfiprintf_internal_r+0x113c>
    7e60:	00c00804 	movi	r3,32
    7e64:	d8c02305 	stb	r3,140(sp)
    7e68:	04c00044 	movi	r19,1
    7e6c:	b0c00007 	ldb	r3,0(r22)
    7e70:	003e3f06 	br	7770 <__alt_data_end+0xfffe8370>
    7e74:	8c400054 	ori	r17,r17,1
    7e78:	b0c00007 	ldb	r3,0(r22)
    7e7c:	003e3c06 	br	7770 <__alt_data_end+0xfffe8370>
    7e80:	8c402014 	ori	r17,r17,128
    7e84:	b0c00007 	ldb	r3,0(r22)
    7e88:	003e3906 	br	7770 <__alt_data_end+0xfffe8370>
    7e8c:	dc002715 	stw	r16,156(sp)
    7e90:	d8002515 	stw	zero,148(sp)
    7e94:	1f3ff404 	addi	fp,r3,-48
    7e98:	0009883a 	mov	r4,zero
    7e9c:	b021883a 	mov	r16,r22
    7ea0:	01400284 	movi	r5,10
    7ea4:	000ae280 	call	ae28 <__mulsi3>
    7ea8:	80c00007 	ldb	r3,0(r16)
    7eac:	e089883a 	add	r4,fp,r2
    7eb0:	b5800044 	addi	r22,r22,1
    7eb4:	1f3ff404 	addi	fp,r3,-48
    7eb8:	b021883a 	mov	r16,r22
    7ebc:	af3ff82e 	bgeu	r21,fp,7ea0 <__alt_data_end+0xfffe8aa0>
    7ec0:	d9002515 	stw	r4,148(sp)
    7ec4:	dc002717 	ldw	r16,156(sp)
    7ec8:	003e2a06 	br	7774 <__alt_data_end+0xfffe8374>
    7ecc:	9cc03fcc 	andi	r19,r19,255
    7ed0:	b811883a 	mov	r8,r23
    7ed4:	9802e91e 	bne	r19,zero,8a7c <___vfiprintf_internal_r+0x1480>
    7ed8:	8c400414 	ori	r17,r17,16
    7edc:	8880080c 	andi	r2,r17,32
    7ee0:	103fb81e 	bne	r2,zero,7dc4 <__alt_data_end+0xfffe89c4>
    7ee4:	8880040c 	andi	r2,r17,16
    7ee8:	10022e26 	beq	r2,zero,87a4 <___vfiprintf_internal_r+0x11a8>
    7eec:	d9402217 	ldw	r5,136(sp)
    7ef0:	2cc00017 	ldw	r19,0(r5)
    7ef4:	29400104 	addi	r5,r5,4
    7ef8:	d9402215 	stw	r5,136(sp)
    7efc:	9829d7fa 	srai	r20,r19,31
    7f00:	a005883a 	mov	r2,r20
    7f04:	003fb506 	br	7ddc <__alt_data_end+0xfffe89dc>
    7f08:	9cc03fcc 	andi	r19,r19,255
    7f0c:	b811883a 	mov	r8,r23
    7f10:	9802fa1e 	bne	r19,zero,8afc <___vfiprintf_internal_r+0x1500>
    7f14:	8c400414 	ori	r17,r17,16
    7f18:	8880080c 	andi	r2,r17,32
    7f1c:	103f661e 	bne	r2,zero,7cb8 <__alt_data_end+0xfffe88b8>
    7f20:	8880040c 	andi	r2,r17,16
    7f24:	10020626 	beq	r2,zero,8740 <___vfiprintf_internal_r+0x1144>
    7f28:	d9402217 	ldw	r5,136(sp)
    7f2c:	d8001d85 	stb	zero,118(sp)
    7f30:	0029883a 	mov	r20,zero
    7f34:	28800104 	addi	r2,r5,4
    7f38:	2cc00017 	ldw	r19,0(r5)
    7f3c:	80020816 	blt	r16,zero,8760 <___vfiprintf_internal_r+0x1164>
    7f40:	00ffdfc4 	movi	r3,-129
    7f44:	d8802215 	stw	r2,136(sp)
    7f48:	88e2703a 	and	r17,r17,r3
    7f4c:	983f651e 	bne	r19,zero,7ce4 <__alt_data_end+0xfffe88e4>
    7f50:	002b883a 	mov	r21,zero
    7f54:	8002cf26 	beq	r16,zero,8a94 <___vfiprintf_internal_r+0x1498>
    7f58:	0027883a 	mov	r19,zero
    7f5c:	0029883a 	mov	r20,zero
    7f60:	003f6106 	br	7ce8 <__alt_data_end+0xfffe88e8>
    7f64:	9cc03fcc 	andi	r19,r19,255
    7f68:	b811883a 	mov	r8,r23
    7f6c:	9802e01e 	bne	r19,zero,8af0 <___vfiprintf_internal_r+0x14f4>
    7f70:	8c400414 	ori	r17,r17,16
    7f74:	8880080c 	andi	r2,r17,32
    7f78:	1000641e 	bne	r2,zero,810c <___vfiprintf_internal_r+0xb10>
    7f7c:	8880040c 	andi	r2,r17,16
    7f80:	1001c81e 	bne	r2,zero,86a4 <___vfiprintf_internal_r+0x10a8>
    7f84:	8880100c 	andi	r2,r17,64
    7f88:	d8001d85 	stb	zero,118(sp)
    7f8c:	1002281e 	bne	r2,zero,8830 <___vfiprintf_internal_r+0x1234>
    7f90:	d9002217 	ldw	r4,136(sp)
    7f94:	0029883a 	mov	r20,zero
    7f98:	20800104 	addi	r2,r4,4
    7f9c:	24c00017 	ldw	r19,0(r4)
    7fa0:	8001c60e 	bge	r16,zero,86bc <___vfiprintf_internal_r+0x10c0>
    7fa4:	d8802215 	stw	r2,136(sp)
    7fa8:	002b883a 	mov	r21,zero
    7fac:	9d04b03a 	or	r2,r19,r20
    7fb0:	103f911e 	bne	r2,zero,7df8 <__alt_data_end+0xfffe89f8>
    7fb4:	00800044 	movi	r2,1
    7fb8:	10803fcc 	andi	r2,r2,255
    7fbc:	00c00044 	movi	r3,1
    7fc0:	10c05f26 	beq	r2,r3,8140 <___vfiprintf_internal_r+0xb44>
    7fc4:	00c00084 	movi	r3,2
    7fc8:	10ffe31e 	bne	r2,r3,7f58 <__alt_data_end+0xfffe8b58>
    7fcc:	0027883a 	mov	r19,zero
    7fd0:	0029883a 	mov	r20,zero
    7fd4:	00015106 	br	851c <___vfiprintf_internal_r+0xf20>
    7fd8:	9cc03fcc 	andi	r19,r19,255
    7fdc:	b811883a 	mov	r8,r23
    7fe0:	9802c01e 	bne	r19,zero,8ae4 <___vfiprintf_internal_r+0x14e8>
    7fe4:	01400074 	movhi	r5,1
    7fe8:	297f8c04 	addi	r5,r5,-464
    7fec:	d9402615 	stw	r5,152(sp)
    7ff0:	8880080c 	andi	r2,r17,32
    7ff4:	103f541e 	bne	r2,zero,7d48 <__alt_data_end+0xfffe8948>
    7ff8:	8880040c 	andi	r2,r17,16
    7ffc:	1001f226 	beq	r2,zero,87c8 <___vfiprintf_internal_r+0x11cc>
    8000:	d9402217 	ldw	r5,136(sp)
    8004:	0029883a 	mov	r20,zero
    8008:	2cc00017 	ldw	r19,0(r5)
    800c:	29400104 	addi	r5,r5,4
    8010:	d9402215 	stw	r5,136(sp)
    8014:	003f5106 	br	7d5c <__alt_data_end+0xfffe895c>
    8018:	d8c02217 	ldw	r3,136(sp)
    801c:	b811883a 	mov	r8,r23
    8020:	d8001d85 	stb	zero,118(sp)
    8024:	1dc00017 	ldw	r23,0(r3)
    8028:	1f000104 	addi	fp,r3,4
    802c:	b8025926 	beq	r23,zero,8994 <___vfiprintf_internal_r+0x1398>
    8030:	80023316 	blt	r16,zero,8900 <___vfiprintf_internal_r+0x1304>
    8034:	800d883a 	mov	r6,r16
    8038:	000b883a 	mov	r5,zero
    803c:	b809883a 	mov	r4,r23
    8040:	da002a15 	stw	r8,168(sp)
    8044:	0005d640 	call	5d64 <memchr>
    8048:	da002a17 	ldw	r8,168(sp)
    804c:	10026826 	beq	r2,zero,89f0 <___vfiprintf_internal_r+0x13f4>
    8050:	15e9c83a 	sub	r20,r2,r23
    8054:	dd401d83 	ldbu	r21,118(sp)
    8058:	df002215 	stw	fp,136(sp)
    805c:	0021883a 	mov	r16,zero
    8060:	003e6906 	br	7a08 <__alt_data_end+0xfffe8608>
    8064:	9cc03fcc 	andi	r19,r19,255
    8068:	b811883a 	mov	r8,r23
    806c:	983fc126 	beq	r19,zero,7f74 <__alt_data_end+0xfffe8b74>
    8070:	d8c02303 	ldbu	r3,140(sp)
    8074:	d8c01d85 	stb	r3,118(sp)
    8078:	003fbe06 	br	7f74 <__alt_data_end+0xfffe8b74>
    807c:	d9002217 	ldw	r4,136(sp)
    8080:	d9402217 	ldw	r5,136(sp)
    8084:	21000017 	ldw	r4,0(r4)
    8088:	28800104 	addi	r2,r5,4
    808c:	d9002515 	stw	r4,148(sp)
    8090:	203e3d16 	blt	r4,zero,7988 <__alt_data_end+0xfffe8588>
    8094:	d8802215 	stw	r2,136(sp)
    8098:	b0c00007 	ldb	r3,0(r22)
    809c:	003db406 	br	7770 <__alt_data_end+0xfffe8370>
    80a0:	00c00ac4 	movi	r3,43
    80a4:	d8c02305 	stb	r3,140(sp)
    80a8:	04c00044 	movi	r19,1
    80ac:	b0c00007 	ldb	r3,0(r22)
    80b0:	003daf06 	br	7770 <__alt_data_end+0xfffe8370>
    80b4:	b0c00007 	ldb	r3,0(r22)
    80b8:	01000a84 	movi	r4,42
    80bc:	b4000044 	addi	r16,r22,1
    80c0:	19025e26 	beq	r3,r4,8a3c <___vfiprintf_internal_r+0x1440>
    80c4:	1f3ff404 	addi	fp,r3,-48
    80c8:	0009883a 	mov	r4,zero
    80cc:	af025236 	bltu	r21,fp,8a18 <___vfiprintf_internal_r+0x141c>
    80d0:	01400284 	movi	r5,10
    80d4:	000ae280 	call	ae28 <__mulsi3>
    80d8:	80c00007 	ldb	r3,0(r16)
    80dc:	1709883a 	add	r4,r2,fp
    80e0:	85800044 	addi	r22,r16,1
    80e4:	1f3ff404 	addi	fp,r3,-48
    80e8:	b021883a 	mov	r16,r22
    80ec:	af3ff82e 	bgeu	r21,fp,80d0 <__alt_data_end+0xfffe8cd0>
    80f0:	2021883a 	mov	r16,r4
    80f4:	203d9f0e 	bge	r4,zero,7774 <__alt_data_end+0xfffe8374>
    80f8:	043fffc4 	movi	r16,-1
    80fc:	003d9d06 	br	7774 <__alt_data_end+0xfffe8374>
    8100:	8c401014 	ori	r17,r17,64
    8104:	b0c00007 	ldb	r3,0(r22)
    8108:	003d9906 	br	7770 <__alt_data_end+0xfffe8370>
    810c:	d9002217 	ldw	r4,136(sp)
    8110:	d8001d85 	stb	zero,118(sp)
    8114:	20c00204 	addi	r3,r4,8
    8118:	24c00017 	ldw	r19,0(r4)
    811c:	25000117 	ldw	r20,4(r4)
    8120:	8001e716 	blt	r16,zero,88c0 <___vfiprintf_internal_r+0x12c4>
    8124:	013fdfc4 	movi	r4,-129
    8128:	9d04b03a 	or	r2,r19,r20
    812c:	d8c02215 	stw	r3,136(sp)
    8130:	8922703a 	and	r17,r17,r4
    8134:	002b883a 	mov	r21,zero
    8138:	103f2f1e 	bne	r2,zero,7df8 <__alt_data_end+0xfffe89f8>
    813c:	803e2f26 	beq	r16,zero,79fc <__alt_data_end+0xfffe85fc>
    8140:	0027883a 	mov	r19,zero
    8144:	9cc00c04 	addi	r19,r19,48
    8148:	dcc019c5 	stb	r19,103(sp)
    814c:	dd002817 	ldw	r20,160(sp)
    8150:	ddc019c4 	addi	r23,sp,103
    8154:	003e2c06 	br	7a08 <__alt_data_end+0xfffe8608>
    8158:	9cc03fcc 	andi	r19,r19,255
    815c:	b811883a 	mov	r8,r23
    8160:	9802571e 	bne	r19,zero,8ac0 <___vfiprintf_internal_r+0x14c4>
    8164:	18005726 	beq	r3,zero,82c4 <___vfiprintf_internal_r+0xcc8>
    8168:	04c00044 	movi	r19,1
    816c:	d8c01005 	stb	r3,64(sp)
    8170:	d8001d85 	stb	zero,118(sp)
    8174:	9829883a 	mov	r20,r19
    8178:	ddc01004 	addi	r23,sp,64
    817c:	003f0a06 	br	7da8 <__alt_data_end+0xfffe89a8>
    8180:	d9402017 	ldw	r5,128(sp)
    8184:	d9002117 	ldw	r4,132(sp)
    8188:	d9801a04 	addi	r6,sp,104
    818c:	da802a15 	stw	r10,168(sp)
    8190:	00074e80 	call	74e8 <__sprint_r.part.0>
    8194:	da802a17 	ldw	r10,168(sp)
    8198:	1000501e 	bne	r2,zero,82dc <___vfiprintf_internal_r+0xce0>
    819c:	d9801b17 	ldw	r6,108(sp)
    81a0:	d8801c17 	ldw	r2,112(sp)
    81a4:	d811883a 	mov	r8,sp
    81a8:	31000044 	addi	r4,r6,1
    81ac:	003e3606 	br	7a88 <__alt_data_end+0xfffe8688>
    81b0:	d9001b17 	ldw	r4,108(sp)
    81b4:	d8801c17 	ldw	r2,112(sp)
    81b8:	21400044 	addi	r5,r4,1
    81bc:	d9801d87 	ldb	r6,118(sp)
    81c0:	303e5226 	beq	r6,zero,7b0c <__alt_data_end+0xfffe870c>
    81c4:	01800044 	movi	r6,1
    81c8:	d9001d84 	addi	r4,sp,118
    81cc:	1185883a 	add	r2,r2,r6
    81d0:	41000015 	stw	r4,0(r8)
    81d4:	41800115 	stw	r6,4(r8)
    81d8:	d8801c15 	stw	r2,112(sp)
    81dc:	d9401b15 	stw	r5,108(sp)
    81e0:	010001c4 	movi	r4,7
    81e4:	2140b00e 	bge	r4,r5,84a8 <___vfiprintf_internal_r+0xeac>
    81e8:	1000f61e 	bne	r2,zero,85c4 <___vfiprintf_internal_r+0xfc8>
    81ec:	3800b31e 	bne	r7,zero,84bc <___vfiprintf_internal_r+0xec0>
    81f0:	0009883a 	mov	r4,zero
    81f4:	300b883a 	mov	r5,r6
    81f8:	d811883a 	mov	r8,sp
    81fc:	01802004 	movi	r6,128
    8200:	19be5226 	beq	r3,r6,7b4c <__alt_data_end+0xfffe874c>
    8204:	8521c83a 	sub	r16,r16,r20
    8208:	043e790e 	bge	zero,r16,7bf0 <__alt_data_end+0xfffe87f0>
    820c:	05400404 	movi	r21,16
    8210:	ac01b00e 	bge	r21,r16,88d4 <___vfiprintf_internal_r+0x12d8>
    8214:	01400074 	movhi	r5,1
    8218:	297ff204 	addi	r5,r5,-56
    821c:	d9402315 	stw	r5,140(sp)
    8220:	070001c4 	movi	fp,7
    8224:	00000506 	br	823c <___vfiprintf_internal_r+0xc40>
    8228:	21400084 	addi	r5,r4,2
    822c:	42000204 	addi	r8,r8,8
    8230:	1809883a 	mov	r4,r3
    8234:	843ffc04 	addi	r16,r16,-16
    8238:	ac000d0e 	bge	r21,r16,8270 <___vfiprintf_internal_r+0xc74>
    823c:	10800404 	addi	r2,r2,16
    8240:	20c00044 	addi	r3,r4,1
    8244:	44800015 	stw	r18,0(r8)
    8248:	45400115 	stw	r21,4(r8)
    824c:	d8801c15 	stw	r2,112(sp)
    8250:	d8c01b15 	stw	r3,108(sp)
    8254:	e0fff40e 	bge	fp,r3,8228 <__alt_data_end+0xfffe8e28>
    8258:	1000101e 	bne	r2,zero,829c <___vfiprintf_internal_r+0xca0>
    825c:	843ffc04 	addi	r16,r16,-16
    8260:	01400044 	movi	r5,1
    8264:	0009883a 	mov	r4,zero
    8268:	d811883a 	mov	r8,sp
    826c:	ac3ff316 	blt	r21,r16,823c <__alt_data_end+0xfffe8e3c>
    8270:	d8c02317 	ldw	r3,140(sp)
    8274:	1405883a 	add	r2,r2,r16
    8278:	44000115 	stw	r16,4(r8)
    827c:	40c00015 	stw	r3,0(r8)
    8280:	d8801c15 	stw	r2,112(sp)
    8284:	d9401b15 	stw	r5,108(sp)
    8288:	00c001c4 	movi	r3,7
    828c:	19401916 	blt	r3,r5,82f4 <___vfiprintf_internal_r+0xcf8>
    8290:	42000204 	addi	r8,r8,8
    8294:	29400044 	addi	r5,r5,1
    8298:	003e5506 	br	7bf0 <__alt_data_end+0xfffe87f0>
    829c:	d9402017 	ldw	r5,128(sp)
    82a0:	d9002117 	ldw	r4,132(sp)
    82a4:	d9801a04 	addi	r6,sp,104
    82a8:	00074e80 	call	74e8 <__sprint_r.part.0>
    82ac:	10000b1e 	bne	r2,zero,82dc <___vfiprintf_internal_r+0xce0>
    82b0:	d9001b17 	ldw	r4,108(sp)
    82b4:	d8801c17 	ldw	r2,112(sp)
    82b8:	d811883a 	mov	r8,sp
    82bc:	21400044 	addi	r5,r4,1
    82c0:	003fdc06 	br	8234 <__alt_data_end+0xfffe8e34>
    82c4:	d8801c17 	ldw	r2,112(sp)
    82c8:	10000426 	beq	r2,zero,82dc <___vfiprintf_internal_r+0xce0>
    82cc:	d9402017 	ldw	r5,128(sp)
    82d0:	d9002117 	ldw	r4,132(sp)
    82d4:	d9801a04 	addi	r6,sp,104
    82d8:	00074e80 	call	74e8 <__sprint_r.part.0>
    82dc:	d9402017 	ldw	r5,128(sp)
    82e0:	2880030b 	ldhu	r2,12(r5)
    82e4:	1080100c 	andi	r2,r2,64
    82e8:	10014d1e 	bne	r2,zero,8820 <___vfiprintf_internal_r+0x1224>
    82ec:	d8802417 	ldw	r2,144(sp)
    82f0:	003d9706 	br	7950 <__alt_data_end+0xfffe8550>
    82f4:	1000d21e 	bne	r2,zero,8640 <___vfiprintf_internal_r+0x1044>
    82f8:	00c00044 	movi	r3,1
    82fc:	a005883a 	mov	r2,r20
    8300:	ddc00015 	stw	r23,0(sp)
    8304:	dd000115 	stw	r20,4(sp)
    8308:	dd001c15 	stw	r20,112(sp)
    830c:	d8c01b15 	stw	r3,108(sp)
    8310:	d811883a 	mov	r8,sp
    8314:	42000204 	addi	r8,r8,8
    8318:	8c40010c 	andi	r17,r17,4
    831c:	88004026 	beq	r17,zero,8420 <___vfiprintf_internal_r+0xe24>
    8320:	d9002517 	ldw	r4,148(sp)
    8324:	24e3c83a 	sub	r17,r4,r19
    8328:	04403d0e 	bge	zero,r17,8420 <___vfiprintf_internal_r+0xe24>
    832c:	04000404 	movi	r16,16
    8330:	8441a90e 	bge	r16,r17,89d8 <___vfiprintf_internal_r+0x13dc>
    8334:	00c00074 	movhi	r3,1
    8338:	18fff604 	addi	r3,r3,-40
    833c:	d9001b17 	ldw	r4,108(sp)
    8340:	d8c02315 	stw	r3,140(sp)
    8344:	050001c4 	movi	r20,7
    8348:	dd402117 	ldw	r21,132(sp)
    834c:	ddc02017 	ldw	r23,128(sp)
    8350:	00000506 	br	8368 <___vfiprintf_internal_r+0xd6c>
    8354:	21400084 	addi	r5,r4,2
    8358:	42000204 	addi	r8,r8,8
    835c:	1809883a 	mov	r4,r3
    8360:	8c7ffc04 	addi	r17,r17,-16
    8364:	84400f0e 	bge	r16,r17,83a4 <___vfiprintf_internal_r+0xda8>
    8368:	01400074 	movhi	r5,1
    836c:	10800404 	addi	r2,r2,16
    8370:	20c00044 	addi	r3,r4,1
    8374:	297ff604 	addi	r5,r5,-40
    8378:	41400015 	stw	r5,0(r8)
    837c:	44000115 	stw	r16,4(r8)
    8380:	d8801c15 	stw	r2,112(sp)
    8384:	d8c01b15 	stw	r3,108(sp)
    8388:	a0fff20e 	bge	r20,r3,8354 <__alt_data_end+0xfffe8f54>
    838c:	1000141e 	bne	r2,zero,83e0 <___vfiprintf_internal_r+0xde4>
    8390:	8c7ffc04 	addi	r17,r17,-16
    8394:	01400044 	movi	r5,1
    8398:	0009883a 	mov	r4,zero
    839c:	d811883a 	mov	r8,sp
    83a0:	847ff116 	blt	r16,r17,8368 <__alt_data_end+0xfffe8f68>
    83a4:	d8c02317 	ldw	r3,140(sp)
    83a8:	1445883a 	add	r2,r2,r17
    83ac:	44400115 	stw	r17,4(r8)
    83b0:	40c00015 	stw	r3,0(r8)
    83b4:	d8801c15 	stw	r2,112(sp)
    83b8:	d9401b15 	stw	r5,108(sp)
    83bc:	00c001c4 	movi	r3,7
    83c0:	1940170e 	bge	r3,r5,8420 <___vfiprintf_internal_r+0xe24>
    83c4:	1000101e 	bne	r2,zero,8408 <___vfiprintf_internal_r+0xe0c>
    83c8:	d8802517 	ldw	r2,148(sp)
    83cc:	14c11616 	blt	r2,r19,8828 <___vfiprintf_internal_r+0x122c>
    83d0:	d9002417 	ldw	r4,144(sp)
    83d4:	2089883a 	add	r4,r4,r2
    83d8:	d9002415 	stw	r4,144(sp)
    83dc:	003e1806 	br	7c40 <__alt_data_end+0xfffe8840>
    83e0:	d9801a04 	addi	r6,sp,104
    83e4:	b80b883a 	mov	r5,r23
    83e8:	a809883a 	mov	r4,r21
    83ec:	00074e80 	call	74e8 <__sprint_r.part.0>
    83f0:	103fba1e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    83f4:	d9001b17 	ldw	r4,108(sp)
    83f8:	d8801c17 	ldw	r2,112(sp)
    83fc:	d811883a 	mov	r8,sp
    8400:	21400044 	addi	r5,r4,1
    8404:	003fd606 	br	8360 <__alt_data_end+0xfffe8f60>
    8408:	d9402017 	ldw	r5,128(sp)
    840c:	d9002117 	ldw	r4,132(sp)
    8410:	d9801a04 	addi	r6,sp,104
    8414:	00074e80 	call	74e8 <__sprint_r.part.0>
    8418:	103fb01e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    841c:	d8801c17 	ldw	r2,112(sp)
    8420:	d8c02517 	ldw	r3,148(sp)
    8424:	1cc0010e 	bge	r3,r19,842c <___vfiprintf_internal_r+0xe30>
    8428:	9807883a 	mov	r3,r19
    842c:	d9002417 	ldw	r4,144(sp)
    8430:	20c9883a 	add	r4,r4,r3
    8434:	d9002415 	stw	r4,144(sp)
    8438:	103e0126 	beq	r2,zero,7c40 <__alt_data_end+0xfffe8840>
    843c:	d9402017 	ldw	r5,128(sp)
    8440:	d9002117 	ldw	r4,132(sp)
    8444:	d9801a04 	addi	r6,sp,104
    8448:	00074e80 	call	74e8 <__sprint_r.part.0>
    844c:	103dfc26 	beq	r2,zero,7c40 <__alt_data_end+0xfffe8840>
    8450:	003fa206 	br	82dc <__alt_data_end+0xfffe8edc>
    8454:	d9402017 	ldw	r5,128(sp)
    8458:	d9002117 	ldw	r4,132(sp)
    845c:	d9801a04 	addi	r6,sp,104
    8460:	d9c02b15 	stw	r7,172(sp)
    8464:	00074e80 	call	74e8 <__sprint_r.part.0>
    8468:	d9c02b17 	ldw	r7,172(sp)
    846c:	103f9b1e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    8470:	d9001b17 	ldw	r4,108(sp)
    8474:	d8801c17 	ldw	r2,112(sp)
    8478:	d811883a 	mov	r8,sp
    847c:	21800044 	addi	r6,r4,1
    8480:	003dbf06 	br	7b80 <__alt_data_end+0xfffe8780>
    8484:	1000d81e 	bne	r2,zero,87e8 <___vfiprintf_internal_r+0x11ec>
    8488:	d9001d87 	ldb	r4,118(sp)
    848c:	20000a26 	beq	r4,zero,84b8 <___vfiprintf_internal_r+0xebc>
    8490:	00800044 	movi	r2,1
    8494:	d9001d84 	addi	r4,sp,118
    8498:	100b883a 	mov	r5,r2
    849c:	d9000015 	stw	r4,0(sp)
    84a0:	d8800115 	stw	r2,4(sp)
    84a4:	d811883a 	mov	r8,sp
    84a8:	2809883a 	mov	r4,r5
    84ac:	42000204 	addi	r8,r8,8
    84b0:	29400044 	addi	r5,r5,1
    84b4:	003d9506 	br	7b0c <__alt_data_end+0xfffe870c>
    84b8:	3800fd26 	beq	r7,zero,88b0 <___vfiprintf_internal_r+0x12b4>
    84bc:	00800084 	movi	r2,2
    84c0:	d9001d04 	addi	r4,sp,116
    84c4:	d9000015 	stw	r4,0(sp)
    84c8:	d8800115 	stw	r2,4(sp)
    84cc:	01400044 	movi	r5,1
    84d0:	d811883a 	mov	r8,sp
    84d4:	2809883a 	mov	r4,r5
    84d8:	42000204 	addi	r8,r8,8
    84dc:	29400044 	addi	r5,r5,1
    84e0:	003f4606 	br	81fc <__alt_data_end+0xfffe8dfc>
    84e4:	d8802517 	ldw	r2,148(sp)
    84e8:	14c0010e 	bge	r2,r19,84f0 <___vfiprintf_internal_r+0xef4>
    84ec:	9805883a 	mov	r2,r19
    84f0:	d9402417 	ldw	r5,144(sp)
    84f4:	288b883a 	add	r5,r5,r2
    84f8:	d9402415 	stw	r5,144(sp)
    84fc:	003dd006 	br	7c40 <__alt_data_end+0xfffe8840>
    8500:	d8001d85 	stb	zero,118(sp)
    8504:	80005d16 	blt	r16,zero,867c <___vfiprintf_internal_r+0x1080>
    8508:	00ffdfc4 	movi	r3,-129
    850c:	9d04b03a 	or	r2,r19,r20
    8510:	88e2703a 	and	r17,r17,r3
    8514:	103d3726 	beq	r2,zero,79f4 <__alt_data_end+0xfffe85f4>
    8518:	002b883a 	mov	r21,zero
    851c:	d9002617 	ldw	r4,152(sp)
    8520:	ddc01a04 	addi	r23,sp,104
    8524:	988003cc 	andi	r2,r19,15
    8528:	a006973a 	slli	r3,r20,28
    852c:	2085883a 	add	r2,r4,r2
    8530:	9826d13a 	srli	r19,r19,4
    8534:	10800003 	ldbu	r2,0(r2)
    8538:	a028d13a 	srli	r20,r20,4
    853c:	bdffffc4 	addi	r23,r23,-1
    8540:	1ce6b03a 	or	r19,r3,r19
    8544:	b8800005 	stb	r2,0(r23)
    8548:	9d04b03a 	or	r2,r19,r20
    854c:	103ff51e 	bne	r2,zero,8524 <__alt_data_end+0xfffe9124>
    8550:	d8801e17 	ldw	r2,120(sp)
    8554:	15e9c83a 	sub	r20,r2,r23
    8558:	003d2b06 	br	7a08 <__alt_data_end+0xfffe8608>
    855c:	d9402017 	ldw	r5,128(sp)
    8560:	d9002117 	ldw	r4,132(sp)
    8564:	d9801a04 	addi	r6,sp,104
    8568:	00074e80 	call	74e8 <__sprint_r.part.0>
    856c:	103f5b1e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    8570:	d8801c17 	ldw	r2,112(sp)
    8574:	d811883a 	mov	r8,sp
    8578:	003f6706 	br	8318 <__alt_data_end+0xfffe8f18>
    857c:	d9402017 	ldw	r5,128(sp)
    8580:	d9002117 	ldw	r4,132(sp)
    8584:	d9801a04 	addi	r6,sp,104
    8588:	00074e80 	call	74e8 <__sprint_r.part.0>
    858c:	103f531e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    8590:	d811883a 	mov	r8,sp
    8594:	003cd906 	br	78fc <__alt_data_end+0xfffe84fc>
    8598:	10803fcc 	andi	r2,r2,255
    859c:	1080201c 	xori	r2,r2,128
    85a0:	10bfe004 	addi	r2,r2,-128
    85a4:	00c00c04 	movi	r3,48
    85a8:	10ffe926 	beq	r2,r3,8550 <__alt_data_end+0xfffe9150>
    85ac:	b8ffffc5 	stb	r3,-1(r23)
    85b0:	d8c01e17 	ldw	r3,120(sp)
    85b4:	b8bfffc4 	addi	r2,r23,-1
    85b8:	102f883a 	mov	r23,r2
    85bc:	18a9c83a 	sub	r20,r3,r2
    85c0:	003d1106 	br	7a08 <__alt_data_end+0xfffe8608>
    85c4:	d9402017 	ldw	r5,128(sp)
    85c8:	d9002117 	ldw	r4,132(sp)
    85cc:	d9801a04 	addi	r6,sp,104
    85d0:	d8c02a15 	stw	r3,168(sp)
    85d4:	d9c02b15 	stw	r7,172(sp)
    85d8:	00074e80 	call	74e8 <__sprint_r.part.0>
    85dc:	d8c02a17 	ldw	r3,168(sp)
    85e0:	d9c02b17 	ldw	r7,172(sp)
    85e4:	103f3d1e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    85e8:	d9001b17 	ldw	r4,108(sp)
    85ec:	d8801c17 	ldw	r2,112(sp)
    85f0:	d811883a 	mov	r8,sp
    85f4:	21400044 	addi	r5,r4,1
    85f8:	003d4406 	br	7b0c <__alt_data_end+0xfffe870c>
    85fc:	d9402017 	ldw	r5,128(sp)
    8600:	d9002117 	ldw	r4,132(sp)
    8604:	d9801a04 	addi	r6,sp,104
    8608:	d8c02a15 	stw	r3,168(sp)
    860c:	00074e80 	call	74e8 <__sprint_r.part.0>
    8610:	d8c02a17 	ldw	r3,168(sp)
    8614:	103f311e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    8618:	d9001b17 	ldw	r4,108(sp)
    861c:	d8801c17 	ldw	r2,112(sp)
    8620:	d811883a 	mov	r8,sp
    8624:	21400044 	addi	r5,r4,1
    8628:	003ef406 	br	81fc <__alt_data_end+0xfffe8dfc>
    862c:	1000bd1e 	bne	r2,zero,8924 <___vfiprintf_internal_r+0x1328>
    8630:	01400044 	movi	r5,1
    8634:	0009883a 	mov	r4,zero
    8638:	d811883a 	mov	r8,sp
    863c:	003ef106 	br	8204 <__alt_data_end+0xfffe8e04>
    8640:	d9402017 	ldw	r5,128(sp)
    8644:	d9002117 	ldw	r4,132(sp)
    8648:	d9801a04 	addi	r6,sp,104
    864c:	00074e80 	call	74e8 <__sprint_r.part.0>
    8650:	103f221e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    8654:	d9401b17 	ldw	r5,108(sp)
    8658:	d8801c17 	ldw	r2,112(sp)
    865c:	d811883a 	mov	r8,sp
    8660:	29400044 	addi	r5,r5,1
    8664:	003d6206 	br	7bf0 <__alt_data_end+0xfffe87f0>
    8668:	01400074 	movhi	r5,1
    866c:	297f9104 	addi	r5,r5,-444
    8670:	d9402615 	stw	r5,152(sp)
    8674:	d8c02215 	stw	r3,136(sp)
    8678:	1023883a 	mov	r17,r2
    867c:	9d04b03a 	or	r2,r19,r20
    8680:	103fa51e 	bne	r2,zero,8518 <__alt_data_end+0xfffe9118>
    8684:	002b883a 	mov	r21,zero
    8688:	00800084 	movi	r2,2
    868c:	003e4a06 	br	7fb8 <__alt_data_end+0xfffe8bb8>
    8690:	01400074 	movhi	r5,1
    8694:	297f9104 	addi	r5,r5,-444
    8698:	002b883a 	mov	r21,zero
    869c:	d9402615 	stw	r5,152(sp)
    86a0:	003f9e06 	br	851c <__alt_data_end+0xfffe911c>
    86a4:	d9402217 	ldw	r5,136(sp)
    86a8:	d8001d85 	stb	zero,118(sp)
    86ac:	0029883a 	mov	r20,zero
    86b0:	28800104 	addi	r2,r5,4
    86b4:	2cc00017 	ldw	r19,0(r5)
    86b8:	803e3a16 	blt	r16,zero,7fa4 <__alt_data_end+0xfffe8ba4>
    86bc:	00ffdfc4 	movi	r3,-129
    86c0:	d8802215 	stw	r2,136(sp)
    86c4:	88e2703a 	and	r17,r17,r3
    86c8:	002b883a 	mov	r21,zero
    86cc:	983e9b26 	beq	r19,zero,813c <__alt_data_end+0xfffe8d3c>
    86d0:	00800244 	movi	r2,9
    86d4:	14fdc936 	bltu	r2,r19,7dfc <__alt_data_end+0xfffe89fc>
    86d8:	003e9a06 	br	8144 <__alt_data_end+0xfffe8d44>
    86dc:	00800c04 	movi	r2,48
    86e0:	d8c01d45 	stb	r3,117(sp)
    86e4:	d8801d05 	stb	r2,116(sp)
    86e8:	d8001d85 	stb	zero,118(sp)
    86ec:	88c00094 	ori	r3,r17,2
    86f0:	80009c16 	blt	r16,zero,8964 <___vfiprintf_internal_r+0x1368>
    86f4:	00bfdfc4 	movi	r2,-129
    86f8:	88a2703a 	and	r17,r17,r2
    86fc:	8c400094 	ori	r17,r17,2
    8700:	002b883a 	mov	r21,zero
    8704:	003f8506 	br	851c <__alt_data_end+0xfffe911c>
    8708:	b029883a 	mov	r20,r22
    870c:	003c0b06 	br	773c <__alt_data_end+0xfffe833c>
    8710:	04e7c83a 	sub	r19,zero,r19
    8714:	05400b44 	movi	r21,45
    8718:	9804c03a 	cmpne	r2,r19,zero
    871c:	0529c83a 	sub	r20,zero,r20
    8720:	dd401d85 	stb	r21,118(sp)
    8724:	a0a9c83a 	sub	r20,r20,r2
    8728:	80009716 	blt	r16,zero,8988 <___vfiprintf_internal_r+0x138c>
    872c:	00bfdfc4 	movi	r2,-129
    8730:	88a2703a 	and	r17,r17,r2
    8734:	003db006 	br	7df8 <__alt_data_end+0xfffe89f8>
    8738:	b0c00007 	ldb	r3,0(r22)
    873c:	003c0c06 	br	7770 <__alt_data_end+0xfffe8370>
    8740:	8880100c 	andi	r2,r17,64
    8744:	d8001d85 	stb	zero,118(sp)
    8748:	1000461e 	bne	r2,zero,8864 <___vfiprintf_internal_r+0x1268>
    874c:	d9002217 	ldw	r4,136(sp)
    8750:	0029883a 	mov	r20,zero
    8754:	20800104 	addi	r2,r4,4
    8758:	24c00017 	ldw	r19,0(r4)
    875c:	803df80e 	bge	r16,zero,7f40 <__alt_data_end+0xfffe8b40>
    8760:	9d06b03a 	or	r3,r19,r20
    8764:	d8802215 	stw	r2,136(sp)
    8768:	183d5e1e 	bne	r3,zero,7ce4 <__alt_data_end+0xfffe88e4>
    876c:	002b883a 	mov	r21,zero
    8770:	0005883a 	mov	r2,zero
    8774:	003e1006 	br	7fb8 <__alt_data_end+0xfffe8bb8>
    8778:	8880040c 	andi	r2,r17,16
    877c:	1000321e 	bne	r2,zero,8848 <___vfiprintf_internal_r+0x124c>
    8780:	8c40100c 	andi	r17,r17,64
    8784:	88008d26 	beq	r17,zero,89bc <___vfiprintf_internal_r+0x13c0>
    8788:	d9402217 	ldw	r5,136(sp)
    878c:	d8c02417 	ldw	r3,144(sp)
    8790:	28800017 	ldw	r2,0(r5)
    8794:	29400104 	addi	r5,r5,4
    8798:	d9402215 	stw	r5,136(sp)
    879c:	10c0000d 	sth	r3,0(r2)
    87a0:	003bca06 	br	76cc <__alt_data_end+0xfffe82cc>
    87a4:	8880100c 	andi	r2,r17,64
    87a8:	10003a26 	beq	r2,zero,8894 <___vfiprintf_internal_r+0x1298>
    87ac:	d8802217 	ldw	r2,136(sp)
    87b0:	14c0000f 	ldh	r19,0(r2)
    87b4:	10800104 	addi	r2,r2,4
    87b8:	d8802215 	stw	r2,136(sp)
    87bc:	9829d7fa 	srai	r20,r19,31
    87c0:	a005883a 	mov	r2,r20
    87c4:	003d8506 	br	7ddc <__alt_data_end+0xfffe89dc>
    87c8:	8880100c 	andi	r2,r17,64
    87cc:	10002b26 	beq	r2,zero,887c <___vfiprintf_internal_r+0x1280>
    87d0:	d8802217 	ldw	r2,136(sp)
    87d4:	0029883a 	mov	r20,zero
    87d8:	14c0000b 	ldhu	r19,0(r2)
    87dc:	10800104 	addi	r2,r2,4
    87e0:	d8802215 	stw	r2,136(sp)
    87e4:	003d5d06 	br	7d5c <__alt_data_end+0xfffe895c>
    87e8:	d9402017 	ldw	r5,128(sp)
    87ec:	d9002117 	ldw	r4,132(sp)
    87f0:	d9801a04 	addi	r6,sp,104
    87f4:	d8c02a15 	stw	r3,168(sp)
    87f8:	d9c02b15 	stw	r7,172(sp)
    87fc:	00074e80 	call	74e8 <__sprint_r.part.0>
    8800:	d8c02a17 	ldw	r3,168(sp)
    8804:	d9c02b17 	ldw	r7,172(sp)
    8808:	103eb41e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    880c:	d9001b17 	ldw	r4,108(sp)
    8810:	d8801c17 	ldw	r2,112(sp)
    8814:	d811883a 	mov	r8,sp
    8818:	21400044 	addi	r5,r4,1
    881c:	003e6706 	br	81bc <__alt_data_end+0xfffe8dbc>
    8820:	00bfffc4 	movi	r2,-1
    8824:	003c4a06 	br	7950 <__alt_data_end+0xfffe8550>
    8828:	9805883a 	mov	r2,r19
    882c:	003ee806 	br	83d0 <__alt_data_end+0xfffe8fd0>
    8830:	d8c02217 	ldw	r3,136(sp)
    8834:	0029883a 	mov	r20,zero
    8838:	18800104 	addi	r2,r3,4
    883c:	1cc0000b 	ldhu	r19,0(r3)
    8840:	803f9e0e 	bge	r16,zero,86bc <__alt_data_end+0xfffe92bc>
    8844:	003dd706 	br	7fa4 <__alt_data_end+0xfffe8ba4>
    8848:	d8c02217 	ldw	r3,136(sp)
    884c:	d9002417 	ldw	r4,144(sp)
    8850:	18800017 	ldw	r2,0(r3)
    8854:	18c00104 	addi	r3,r3,4
    8858:	d8c02215 	stw	r3,136(sp)
    885c:	11000015 	stw	r4,0(r2)
    8860:	003b9a06 	br	76cc <__alt_data_end+0xfffe82cc>
    8864:	d8c02217 	ldw	r3,136(sp)
    8868:	0029883a 	mov	r20,zero
    886c:	18800104 	addi	r2,r3,4
    8870:	1cc0000b 	ldhu	r19,0(r3)
    8874:	803db20e 	bge	r16,zero,7f40 <__alt_data_end+0xfffe8b40>
    8878:	003fb906 	br	8760 <__alt_data_end+0xfffe9360>
    887c:	d9002217 	ldw	r4,136(sp)
    8880:	0029883a 	mov	r20,zero
    8884:	24c00017 	ldw	r19,0(r4)
    8888:	21000104 	addi	r4,r4,4
    888c:	d9002215 	stw	r4,136(sp)
    8890:	003d3206 	br	7d5c <__alt_data_end+0xfffe895c>
    8894:	d8c02217 	ldw	r3,136(sp)
    8898:	1cc00017 	ldw	r19,0(r3)
    889c:	18c00104 	addi	r3,r3,4
    88a0:	d8c02215 	stw	r3,136(sp)
    88a4:	9829d7fa 	srai	r20,r19,31
    88a8:	a005883a 	mov	r2,r20
    88ac:	003d4b06 	br	7ddc <__alt_data_end+0xfffe89dc>
    88b0:	0009883a 	mov	r4,zero
    88b4:	01400044 	movi	r5,1
    88b8:	d811883a 	mov	r8,sp
    88bc:	003e4f06 	br	81fc <__alt_data_end+0xfffe8dfc>
    88c0:	d8c02215 	stw	r3,136(sp)
    88c4:	002b883a 	mov	r21,zero
    88c8:	003db806 	br	7fac <__alt_data_end+0xfffe8bac>
    88cc:	d811883a 	mov	r8,sp
    88d0:	003e9606 	br	832c <__alt_data_end+0xfffe8f2c>
    88d4:	01000074 	movhi	r4,1
    88d8:	213ff204 	addi	r4,r4,-56
    88dc:	d9002315 	stw	r4,140(sp)
    88e0:	003e6306 	br	8270 <__alt_data_end+0xfffe8e70>
    88e4:	b0c00043 	ldbu	r3,1(r22)
    88e8:	8c400814 	ori	r17,r17,32
    88ec:	b5800044 	addi	r22,r22,1
    88f0:	18c03fcc 	andi	r3,r3,255
    88f4:	18c0201c 	xori	r3,r3,128
    88f8:	18ffe004 	addi	r3,r3,-128
    88fc:	003b9c06 	br	7770 <__alt_data_end+0xfffe8370>
    8900:	b809883a 	mov	r4,r23
    8904:	da002a15 	stw	r8,168(sp)
    8908:	00074500 	call	7450 <strlen>
    890c:	1029883a 	mov	r20,r2
    8910:	dd401d83 	ldbu	r21,118(sp)
    8914:	df002215 	stw	fp,136(sp)
    8918:	0021883a 	mov	r16,zero
    891c:	da002a17 	ldw	r8,168(sp)
    8920:	003c3906 	br	7a08 <__alt_data_end+0xfffe8608>
    8924:	d9402017 	ldw	r5,128(sp)
    8928:	d9002117 	ldw	r4,132(sp)
    892c:	d9801a04 	addi	r6,sp,104
    8930:	00074e80 	call	74e8 <__sprint_r.part.0>
    8934:	103e691e 	bne	r2,zero,82dc <__alt_data_end+0xfffe8edc>
    8938:	d9001b17 	ldw	r4,108(sp)
    893c:	d8801c17 	ldw	r2,112(sp)
    8940:	d811883a 	mov	r8,sp
    8944:	21400044 	addi	r5,r4,1
    8948:	003e2e06 	br	8204 <__alt_data_end+0xfffe8e04>
    894c:	01000074 	movhi	r4,1
    8950:	213ff604 	addi	r4,r4,-40
    8954:	d9002315 	stw	r4,140(sp)
    8958:	d9001b17 	ldw	r4,108(sp)
    895c:	21000044 	addi	r4,r4,1
    8960:	003c5e06 	br	7adc <__alt_data_end+0xfffe86dc>
    8964:	002b883a 	mov	r21,zero
    8968:	00800084 	movi	r2,2
    896c:	10803fcc 	andi	r2,r2,255
    8970:	01000044 	movi	r4,1
    8974:	11002b26 	beq	r2,r4,8a24 <___vfiprintf_internal_r+0x1428>
    8978:	01000084 	movi	r4,2
    897c:	11002b1e 	bne	r2,r4,8a2c <___vfiprintf_internal_r+0x1430>
    8980:	1823883a 	mov	r17,r3
    8984:	003ee506 	br	851c <__alt_data_end+0xfffe911c>
    8988:	8807883a 	mov	r3,r17
    898c:	00800044 	movi	r2,1
    8990:	003ff606 	br	896c <__alt_data_end+0xfffe956c>
    8994:	00800184 	movi	r2,6
    8998:	1400012e 	bgeu	r2,r16,89a0 <___vfiprintf_internal_r+0x13a4>
    899c:	1021883a 	mov	r16,r2
    89a0:	8029883a 	mov	r20,r16
    89a4:	8027883a 	mov	r19,r16
    89a8:	80002216 	blt	r16,zero,8a34 <___vfiprintf_internal_r+0x1438>
    89ac:	05c00074 	movhi	r23,1
    89b0:	df002215 	stw	fp,136(sp)
    89b4:	bdff9604 	addi	r23,r23,-424
    89b8:	003cfb06 	br	7da8 <__alt_data_end+0xfffe89a8>
    89bc:	d9002217 	ldw	r4,136(sp)
    89c0:	d9402417 	ldw	r5,144(sp)
    89c4:	20800017 	ldw	r2,0(r4)
    89c8:	21000104 	addi	r4,r4,4
    89cc:	d9002215 	stw	r4,136(sp)
    89d0:	11400015 	stw	r5,0(r2)
    89d4:	003b3d06 	br	76cc <__alt_data_end+0xfffe82cc>
    89d8:	01400074 	movhi	r5,1
    89dc:	297ff604 	addi	r5,r5,-40
    89e0:	d9402315 	stw	r5,140(sp)
    89e4:	d9401b17 	ldw	r5,108(sp)
    89e8:	29400044 	addi	r5,r5,1
    89ec:	003e6d06 	br	83a4 <__alt_data_end+0xfffe8fa4>
    89f0:	8029883a 	mov	r20,r16
    89f4:	dd401d83 	ldbu	r21,118(sp)
    89f8:	df002215 	stw	fp,136(sp)
    89fc:	0021883a 	mov	r16,zero
    8a00:	003c0106 	br	7a08 <__alt_data_end+0xfffe8608>
    8a04:	00c00074 	movhi	r3,1
    8a08:	18fff204 	addi	r3,r3,-56
    8a0c:	d8c02315 	stw	r3,140(sp)
    8a10:	280d883a 	mov	r6,r5
    8a14:	003c6906 	br	7bbc <__alt_data_end+0xfffe87bc>
    8a18:	802d883a 	mov	r22,r16
    8a1c:	0021883a 	mov	r16,zero
    8a20:	003b5406 	br	7774 <__alt_data_end+0xfffe8374>
    8a24:	1823883a 	mov	r17,r3
    8a28:	003cf306 	br	7df8 <__alt_data_end+0xfffe89f8>
    8a2c:	1823883a 	mov	r17,r3
    8a30:	003cad06 	br	7ce8 <__alt_data_end+0xfffe88e8>
    8a34:	0027883a 	mov	r19,zero
    8a38:	003fdc06 	br	89ac <__alt_data_end+0xfffe95ac>
    8a3c:	d9402217 	ldw	r5,136(sp)
    8a40:	8005883a 	mov	r2,r16
    8a44:	b0c00043 	ldbu	r3,1(r22)
    8a48:	2c000017 	ldw	r16,0(r5)
    8a4c:	29000104 	addi	r4,r5,4
    8a50:	d9002215 	stw	r4,136(sp)
    8a54:	102d883a 	mov	r22,r2
    8a58:	803fa50e 	bge	r16,zero,88f0 <__alt_data_end+0xfffe94f0>
    8a5c:	18c03fcc 	andi	r3,r3,255
    8a60:	18c0201c 	xori	r3,r3,128
    8a64:	043fffc4 	movi	r16,-1
    8a68:	18ffe004 	addi	r3,r3,-128
    8a6c:	003b4006 	br	7770 <__alt_data_end+0xfffe8370>
    8a70:	d9402303 	ldbu	r5,140(sp)
    8a74:	d9401d85 	stb	r5,118(sp)
    8a78:	003cae06 	br	7d34 <__alt_data_end+0xfffe8934>
    8a7c:	d8c02303 	ldbu	r3,140(sp)
    8a80:	d8c01d85 	stb	r3,118(sp)
    8a84:	003d1406 	br	7ed8 <__alt_data_end+0xfffe8ad8>
    8a88:	d8c02303 	ldbu	r3,140(sp)
    8a8c:	d8c01d85 	stb	r3,118(sp)
    8a90:	003cca06 	br	7dbc <__alt_data_end+0xfffe89bc>
    8a94:	8880004c 	andi	r2,r17,1
    8a98:	002b883a 	mov	r21,zero
    8a9c:	10000526 	beq	r2,zero,8ab4 <___vfiprintf_internal_r+0x14b8>
    8aa0:	00800c04 	movi	r2,48
    8aa4:	d88019c5 	stb	r2,103(sp)
    8aa8:	dd002817 	ldw	r20,160(sp)
    8aac:	ddc019c4 	addi	r23,sp,103
    8ab0:	003bd506 	br	7a08 <__alt_data_end+0xfffe8608>
    8ab4:	0029883a 	mov	r20,zero
    8ab8:	ddc01a04 	addi	r23,sp,104
    8abc:	003bd206 	br	7a08 <__alt_data_end+0xfffe8608>
    8ac0:	d9002303 	ldbu	r4,140(sp)
    8ac4:	d9001d85 	stb	r4,118(sp)
    8ac8:	003da606 	br	8164 <__alt_data_end+0xfffe8d64>
    8acc:	d8c02303 	ldbu	r3,140(sp)
    8ad0:	d8c01d85 	stb	r3,118(sp)
    8ad4:	003c7606 	br	7cb0 <__alt_data_end+0xfffe88b0>
    8ad8:	d8c02303 	ldbu	r3,140(sp)
    8adc:	d8c01d85 	stb	r3,118(sp)
    8ae0:	003c6506 	br	7c78 <__alt_data_end+0xfffe8878>
    8ae4:	d9002303 	ldbu	r4,140(sp)
    8ae8:	d9001d85 	stb	r4,118(sp)
    8aec:	003d3d06 	br	7fe4 <__alt_data_end+0xfffe8be4>
    8af0:	d8c02303 	ldbu	r3,140(sp)
    8af4:	d8c01d85 	stb	r3,118(sp)
    8af8:	003d1d06 	br	7f70 <__alt_data_end+0xfffe8b70>
    8afc:	d8c02303 	ldbu	r3,140(sp)
    8b00:	d8c01d85 	stb	r3,118(sp)
    8b04:	003d0306 	br	7f14 <__alt_data_end+0xfffe8b14>

00008b08 <__vfiprintf_internal>:
    8b08:	00800074 	movhi	r2,1
    8b0c:	1086f304 	addi	r2,r2,7116
    8b10:	300f883a 	mov	r7,r6
    8b14:	280d883a 	mov	r6,r5
    8b18:	200b883a 	mov	r5,r4
    8b1c:	11000017 	ldw	r4,0(r2)
    8b20:	00075fc1 	jmpi	75fc <___vfiprintf_internal_r>

00008b24 <__sbprintf>:
    8b24:	2880030b 	ldhu	r2,12(r5)
    8b28:	2ac01917 	ldw	r11,100(r5)
    8b2c:	2a80038b 	ldhu	r10,14(r5)
    8b30:	2a400717 	ldw	r9,28(r5)
    8b34:	2a000917 	ldw	r8,36(r5)
    8b38:	defee204 	addi	sp,sp,-1144
    8b3c:	00c10004 	movi	r3,1024
    8b40:	dc011a15 	stw	r16,1128(sp)
    8b44:	10bfff4c 	andi	r2,r2,65533
    8b48:	2821883a 	mov	r16,r5
    8b4c:	d8cb883a 	add	r5,sp,r3
    8b50:	dc811c15 	stw	r18,1136(sp)
    8b54:	dc411b15 	stw	r17,1132(sp)
    8b58:	dfc11d15 	stw	ra,1140(sp)
    8b5c:	2025883a 	mov	r18,r4
    8b60:	d881030d 	sth	r2,1036(sp)
    8b64:	dac11915 	stw	r11,1124(sp)
    8b68:	da81038d 	sth	r10,1038(sp)
    8b6c:	da410715 	stw	r9,1052(sp)
    8b70:	da010915 	stw	r8,1060(sp)
    8b74:	dec10015 	stw	sp,1024(sp)
    8b78:	dec10415 	stw	sp,1040(sp)
    8b7c:	d8c10215 	stw	r3,1032(sp)
    8b80:	d8c10515 	stw	r3,1044(sp)
    8b84:	d8010615 	stw	zero,1048(sp)
    8b88:	00075fc0 	call	75fc <___vfiprintf_internal_r>
    8b8c:	1023883a 	mov	r17,r2
    8b90:	10000416 	blt	r2,zero,8ba4 <__sbprintf+0x80>
    8b94:	d9410004 	addi	r5,sp,1024
    8b98:	9009883a 	mov	r4,r18
    8b9c:	00048c80 	call	48c8 <_fflush_r>
    8ba0:	10000d1e 	bne	r2,zero,8bd8 <__sbprintf+0xb4>
    8ba4:	d881030b 	ldhu	r2,1036(sp)
    8ba8:	1080100c 	andi	r2,r2,64
    8bac:	10000326 	beq	r2,zero,8bbc <__sbprintf+0x98>
    8bb0:	8080030b 	ldhu	r2,12(r16)
    8bb4:	10801014 	ori	r2,r2,64
    8bb8:	8080030d 	sth	r2,12(r16)
    8bbc:	8805883a 	mov	r2,r17
    8bc0:	dfc11d17 	ldw	ra,1140(sp)
    8bc4:	dc811c17 	ldw	r18,1136(sp)
    8bc8:	dc411b17 	ldw	r17,1132(sp)
    8bcc:	dc011a17 	ldw	r16,1128(sp)
    8bd0:	dec11e04 	addi	sp,sp,1144
    8bd4:	f800283a 	ret
    8bd8:	047fffc4 	movi	r17,-1
    8bdc:	003ff106 	br	8ba4 <__alt_data_end+0xfffe97a4>

00008be0 <_write_r>:
    8be0:	defffd04 	addi	sp,sp,-12
    8be4:	2805883a 	mov	r2,r5
    8be8:	dc000015 	stw	r16,0(sp)
    8bec:	04000074 	movhi	r16,1
    8bf0:	dc400115 	stw	r17,4(sp)
    8bf4:	300b883a 	mov	r5,r6
    8bf8:	840dc804 	addi	r16,r16,14112
    8bfc:	2023883a 	mov	r17,r4
    8c00:	380d883a 	mov	r6,r7
    8c04:	1009883a 	mov	r4,r2
    8c08:	dfc00215 	stw	ra,8(sp)
    8c0c:	80000015 	stw	zero,0(r16)
    8c10:	000e2280 	call	e228 <write>
    8c14:	00ffffc4 	movi	r3,-1
    8c18:	10c00526 	beq	r2,r3,8c30 <_write_r+0x50>
    8c1c:	dfc00217 	ldw	ra,8(sp)
    8c20:	dc400117 	ldw	r17,4(sp)
    8c24:	dc000017 	ldw	r16,0(sp)
    8c28:	dec00304 	addi	sp,sp,12
    8c2c:	f800283a 	ret
    8c30:	80c00017 	ldw	r3,0(r16)
    8c34:	183ff926 	beq	r3,zero,8c1c <__alt_data_end+0xfffe981c>
    8c38:	88c00015 	stw	r3,0(r17)
    8c3c:	003ff706 	br	8c1c <__alt_data_end+0xfffe981c>

00008c40 <_close_r>:
    8c40:	defffd04 	addi	sp,sp,-12
    8c44:	dc000015 	stw	r16,0(sp)
    8c48:	04000074 	movhi	r16,1
    8c4c:	dc400115 	stw	r17,4(sp)
    8c50:	840dc804 	addi	r16,r16,14112
    8c54:	2023883a 	mov	r17,r4
    8c58:	2809883a 	mov	r4,r5
    8c5c:	dfc00215 	stw	ra,8(sp)
    8c60:	80000015 	stw	zero,0(r16)
    8c64:	000d7300 	call	d730 <close>
    8c68:	00ffffc4 	movi	r3,-1
    8c6c:	10c00526 	beq	r2,r3,8c84 <_close_r+0x44>
    8c70:	dfc00217 	ldw	ra,8(sp)
    8c74:	dc400117 	ldw	r17,4(sp)
    8c78:	dc000017 	ldw	r16,0(sp)
    8c7c:	dec00304 	addi	sp,sp,12
    8c80:	f800283a 	ret
    8c84:	80c00017 	ldw	r3,0(r16)
    8c88:	183ff926 	beq	r3,zero,8c70 <__alt_data_end+0xfffe9870>
    8c8c:	88c00015 	stw	r3,0(r17)
    8c90:	003ff706 	br	8c70 <__alt_data_end+0xfffe9870>

00008c94 <_calloc_r>:
    8c94:	defffe04 	addi	sp,sp,-8
    8c98:	2805883a 	mov	r2,r5
    8c9c:	dc000015 	stw	r16,0(sp)
    8ca0:	300b883a 	mov	r5,r6
    8ca4:	2021883a 	mov	r16,r4
    8ca8:	1009883a 	mov	r4,r2
    8cac:	dfc00115 	stw	ra,4(sp)
    8cb0:	000ae280 	call	ae28 <__mulsi3>
    8cb4:	100b883a 	mov	r5,r2
    8cb8:	8009883a 	mov	r4,r16
    8cbc:	00055580 	call	5558 <_malloc_r>
    8cc0:	10002926 	beq	r2,zero,8d68 <_calloc_r+0xd4>
    8cc4:	11bfff17 	ldw	r6,-4(r2)
    8cc8:	1021883a 	mov	r16,r2
    8ccc:	00bfff04 	movi	r2,-4
    8cd0:	308c703a 	and	r6,r6,r2
    8cd4:	00c00904 	movi	r3,36
    8cd8:	308d883a 	add	r6,r6,r2
    8cdc:	19801636 	bltu	r3,r6,8d38 <_calloc_r+0xa4>
    8ce0:	008004c4 	movi	r2,19
    8ce4:	11800b2e 	bgeu	r2,r6,8d14 <_calloc_r+0x80>
    8ce8:	80000015 	stw	zero,0(r16)
    8cec:	80000115 	stw	zero,4(r16)
    8cf0:	008006c4 	movi	r2,27
    8cf4:	11801a2e 	bgeu	r2,r6,8d60 <_calloc_r+0xcc>
    8cf8:	80000215 	stw	zero,8(r16)
    8cfc:	80000315 	stw	zero,12(r16)
    8d00:	30c0151e 	bne	r6,r3,8d58 <_calloc_r+0xc4>
    8d04:	80000415 	stw	zero,16(r16)
    8d08:	80800604 	addi	r2,r16,24
    8d0c:	80000515 	stw	zero,20(r16)
    8d10:	00000106 	br	8d18 <_calloc_r+0x84>
    8d14:	8005883a 	mov	r2,r16
    8d18:	10000015 	stw	zero,0(r2)
    8d1c:	10000115 	stw	zero,4(r2)
    8d20:	10000215 	stw	zero,8(r2)
    8d24:	8005883a 	mov	r2,r16
    8d28:	dfc00117 	ldw	ra,4(sp)
    8d2c:	dc000017 	ldw	r16,0(sp)
    8d30:	dec00204 	addi	sp,sp,8
    8d34:	f800283a 	ret
    8d38:	000b883a 	mov	r5,zero
    8d3c:	8009883a 	mov	r4,r16
    8d40:	0005f900 	call	5f90 <memset>
    8d44:	8005883a 	mov	r2,r16
    8d48:	dfc00117 	ldw	ra,4(sp)
    8d4c:	dc000017 	ldw	r16,0(sp)
    8d50:	dec00204 	addi	sp,sp,8
    8d54:	f800283a 	ret
    8d58:	80800404 	addi	r2,r16,16
    8d5c:	003fee06 	br	8d18 <__alt_data_end+0xfffe9918>
    8d60:	80800204 	addi	r2,r16,8
    8d64:	003fec06 	br	8d18 <__alt_data_end+0xfffe9918>
    8d68:	0005883a 	mov	r2,zero
    8d6c:	003fee06 	br	8d28 <__alt_data_end+0xfffe9928>

00008d70 <_fclose_r>:
    8d70:	28003926 	beq	r5,zero,8e58 <_fclose_r+0xe8>
    8d74:	defffc04 	addi	sp,sp,-16
    8d78:	dc400115 	stw	r17,4(sp)
    8d7c:	dc000015 	stw	r16,0(sp)
    8d80:	dfc00315 	stw	ra,12(sp)
    8d84:	dc800215 	stw	r18,8(sp)
    8d88:	2023883a 	mov	r17,r4
    8d8c:	2821883a 	mov	r16,r5
    8d90:	20000226 	beq	r4,zero,8d9c <_fclose_r+0x2c>
    8d94:	20800e17 	ldw	r2,56(r4)
    8d98:	10002726 	beq	r2,zero,8e38 <_fclose_r+0xc8>
    8d9c:	8080030f 	ldh	r2,12(r16)
    8da0:	1000071e 	bne	r2,zero,8dc0 <_fclose_r+0x50>
    8da4:	0005883a 	mov	r2,zero
    8da8:	dfc00317 	ldw	ra,12(sp)
    8dac:	dc800217 	ldw	r18,8(sp)
    8db0:	dc400117 	ldw	r17,4(sp)
    8db4:	dc000017 	ldw	r16,0(sp)
    8db8:	dec00404 	addi	sp,sp,16
    8dbc:	f800283a 	ret
    8dc0:	800b883a 	mov	r5,r16
    8dc4:	8809883a 	mov	r4,r17
    8dc8:	00046ac0 	call	46ac <__sflush_r>
    8dcc:	1025883a 	mov	r18,r2
    8dd0:	80800b17 	ldw	r2,44(r16)
    8dd4:	10000426 	beq	r2,zero,8de8 <_fclose_r+0x78>
    8dd8:	81400717 	ldw	r5,28(r16)
    8ddc:	8809883a 	mov	r4,r17
    8de0:	103ee83a 	callr	r2
    8de4:	10001616 	blt	r2,zero,8e40 <_fclose_r+0xd0>
    8de8:	8080030b 	ldhu	r2,12(r16)
    8dec:	1080200c 	andi	r2,r2,128
    8df0:	1000151e 	bne	r2,zero,8e48 <_fclose_r+0xd8>
    8df4:	81400c17 	ldw	r5,48(r16)
    8df8:	28000526 	beq	r5,zero,8e10 <_fclose_r+0xa0>
    8dfc:	80801004 	addi	r2,r16,64
    8e00:	28800226 	beq	r5,r2,8e0c <_fclose_r+0x9c>
    8e04:	8809883a 	mov	r4,r17
    8e08:	0004e280 	call	4e28 <_free_r>
    8e0c:	80000c15 	stw	zero,48(r16)
    8e10:	81401117 	ldw	r5,68(r16)
    8e14:	28000326 	beq	r5,zero,8e24 <_fclose_r+0xb4>
    8e18:	8809883a 	mov	r4,r17
    8e1c:	0004e280 	call	4e28 <_free_r>
    8e20:	80001115 	stw	zero,68(r16)
    8e24:	0004cc40 	call	4cc4 <__sfp_lock_acquire>
    8e28:	8000030d 	sth	zero,12(r16)
    8e2c:	0004cc80 	call	4cc8 <__sfp_lock_release>
    8e30:	9005883a 	mov	r2,r18
    8e34:	003fdc06 	br	8da8 <__alt_data_end+0xfffe99a8>
    8e38:	0004cb40 	call	4cb4 <__sinit>
    8e3c:	003fd706 	br	8d9c <__alt_data_end+0xfffe999c>
    8e40:	04bfffc4 	movi	r18,-1
    8e44:	003fe806 	br	8de8 <__alt_data_end+0xfffe99e8>
    8e48:	81400417 	ldw	r5,16(r16)
    8e4c:	8809883a 	mov	r4,r17
    8e50:	0004e280 	call	4e28 <_free_r>
    8e54:	003fe706 	br	8df4 <__alt_data_end+0xfffe99f4>
    8e58:	0005883a 	mov	r2,zero
    8e5c:	f800283a 	ret

00008e60 <fclose>:
    8e60:	00800074 	movhi	r2,1
    8e64:	1086f304 	addi	r2,r2,7116
    8e68:	200b883a 	mov	r5,r4
    8e6c:	11000017 	ldw	r4,0(r2)
    8e70:	0008d701 	jmpi	8d70 <_fclose_r>

00008e74 <__fputwc>:
    8e74:	defff804 	addi	sp,sp,-32
    8e78:	dcc00415 	stw	r19,16(sp)
    8e7c:	dc800315 	stw	r18,12(sp)
    8e80:	dc000115 	stw	r16,4(sp)
    8e84:	dfc00715 	stw	ra,28(sp)
    8e88:	dd400615 	stw	r21,24(sp)
    8e8c:	dd000515 	stw	r20,20(sp)
    8e90:	dc400215 	stw	r17,8(sp)
    8e94:	2027883a 	mov	r19,r4
    8e98:	2825883a 	mov	r18,r5
    8e9c:	3021883a 	mov	r16,r6
    8ea0:	00053480 	call	5348 <__locale_mb_cur_max>
    8ea4:	00c00044 	movi	r3,1
    8ea8:	10c03e26 	beq	r2,r3,8fa4 <__fputwc+0x130>
    8eac:	81c01704 	addi	r7,r16,92
    8eb0:	900d883a 	mov	r6,r18
    8eb4:	d80b883a 	mov	r5,sp
    8eb8:	9809883a 	mov	r4,r19
    8ebc:	0009ecc0 	call	9ecc <_wcrtomb_r>
    8ec0:	1029883a 	mov	r20,r2
    8ec4:	00bfffc4 	movi	r2,-1
    8ec8:	a0802026 	beq	r20,r2,8f4c <__fputwc+0xd8>
    8ecc:	d9400003 	ldbu	r5,0(sp)
    8ed0:	a0001c26 	beq	r20,zero,8f44 <__fputwc+0xd0>
    8ed4:	0023883a 	mov	r17,zero
    8ed8:	05400284 	movi	r21,10
    8edc:	00000906 	br	8f04 <__fputwc+0x90>
    8ee0:	80800017 	ldw	r2,0(r16)
    8ee4:	11400005 	stb	r5,0(r2)
    8ee8:	80c00017 	ldw	r3,0(r16)
    8eec:	18c00044 	addi	r3,r3,1
    8ef0:	80c00015 	stw	r3,0(r16)
    8ef4:	8c400044 	addi	r17,r17,1
    8ef8:	dc45883a 	add	r2,sp,r17
    8efc:	8d00112e 	bgeu	r17,r20,8f44 <__fputwc+0xd0>
    8f00:	11400003 	ldbu	r5,0(r2)
    8f04:	80c00217 	ldw	r3,8(r16)
    8f08:	18ffffc4 	addi	r3,r3,-1
    8f0c:	80c00215 	stw	r3,8(r16)
    8f10:	183ff30e 	bge	r3,zero,8ee0 <__alt_data_end+0xfffe9ae0>
    8f14:	80800617 	ldw	r2,24(r16)
    8f18:	18801916 	blt	r3,r2,8f80 <__fputwc+0x10c>
    8f1c:	80800017 	ldw	r2,0(r16)
    8f20:	11400005 	stb	r5,0(r2)
    8f24:	80800017 	ldw	r2,0(r16)
    8f28:	10c00003 	ldbu	r3,0(r2)
    8f2c:	10800044 	addi	r2,r2,1
    8f30:	1d402326 	beq	r3,r21,8fc0 <__fputwc+0x14c>
    8f34:	80800015 	stw	r2,0(r16)
    8f38:	8c400044 	addi	r17,r17,1
    8f3c:	dc45883a 	add	r2,sp,r17
    8f40:	8d3fef36 	bltu	r17,r20,8f00 <__alt_data_end+0xfffe9b00>
    8f44:	9005883a 	mov	r2,r18
    8f48:	00000406 	br	8f5c <__fputwc+0xe8>
    8f4c:	80c0030b 	ldhu	r3,12(r16)
    8f50:	a005883a 	mov	r2,r20
    8f54:	18c01014 	ori	r3,r3,64
    8f58:	80c0030d 	sth	r3,12(r16)
    8f5c:	dfc00717 	ldw	ra,28(sp)
    8f60:	dd400617 	ldw	r21,24(sp)
    8f64:	dd000517 	ldw	r20,20(sp)
    8f68:	dcc00417 	ldw	r19,16(sp)
    8f6c:	dc800317 	ldw	r18,12(sp)
    8f70:	dc400217 	ldw	r17,8(sp)
    8f74:	dc000117 	ldw	r16,4(sp)
    8f78:	dec00804 	addi	sp,sp,32
    8f7c:	f800283a 	ret
    8f80:	800d883a 	mov	r6,r16
    8f84:	29403fcc 	andi	r5,r5,255
    8f88:	9809883a 	mov	r4,r19
    8f8c:	0009d740 	call	9d74 <__swbuf_r>
    8f90:	10bfffe0 	cmpeqi	r2,r2,-1
    8f94:	10803fcc 	andi	r2,r2,255
    8f98:	103fd626 	beq	r2,zero,8ef4 <__alt_data_end+0xfffe9af4>
    8f9c:	00bfffc4 	movi	r2,-1
    8fa0:	003fee06 	br	8f5c <__alt_data_end+0xfffe9b5c>
    8fa4:	90ffffc4 	addi	r3,r18,-1
    8fa8:	01003f84 	movi	r4,254
    8fac:	20ffbf36 	bltu	r4,r3,8eac <__alt_data_end+0xfffe9aac>
    8fb0:	900b883a 	mov	r5,r18
    8fb4:	dc800005 	stb	r18,0(sp)
    8fb8:	1029883a 	mov	r20,r2
    8fbc:	003fc506 	br	8ed4 <__alt_data_end+0xfffe9ad4>
    8fc0:	800d883a 	mov	r6,r16
    8fc4:	a80b883a 	mov	r5,r21
    8fc8:	9809883a 	mov	r4,r19
    8fcc:	0009d740 	call	9d74 <__swbuf_r>
    8fd0:	10bfffe0 	cmpeqi	r2,r2,-1
    8fd4:	003fef06 	br	8f94 <__alt_data_end+0xfffe9b94>

00008fd8 <_fputwc_r>:
    8fd8:	3080030b 	ldhu	r2,12(r6)
    8fdc:	10c8000c 	andi	r3,r2,8192
    8fe0:	1800051e 	bne	r3,zero,8ff8 <_fputwc_r+0x20>
    8fe4:	30c01917 	ldw	r3,100(r6)
    8fe8:	10880014 	ori	r2,r2,8192
    8fec:	3080030d 	sth	r2,12(r6)
    8ff0:	18880014 	ori	r2,r3,8192
    8ff4:	30801915 	stw	r2,100(r6)
    8ff8:	0008e741 	jmpi	8e74 <__fputwc>

00008ffc <fputwc>:
    8ffc:	00800074 	movhi	r2,1
    9000:	defffc04 	addi	sp,sp,-16
    9004:	1086f304 	addi	r2,r2,7116
    9008:	dc000115 	stw	r16,4(sp)
    900c:	14000017 	ldw	r16,0(r2)
    9010:	dc400215 	stw	r17,8(sp)
    9014:	dfc00315 	stw	ra,12(sp)
    9018:	2023883a 	mov	r17,r4
    901c:	80000226 	beq	r16,zero,9028 <fputwc+0x2c>
    9020:	80800e17 	ldw	r2,56(r16)
    9024:	10001026 	beq	r2,zero,9068 <fputwc+0x6c>
    9028:	2880030b 	ldhu	r2,12(r5)
    902c:	10c8000c 	andi	r3,r2,8192
    9030:	1800051e 	bne	r3,zero,9048 <fputwc+0x4c>
    9034:	28c01917 	ldw	r3,100(r5)
    9038:	10880014 	ori	r2,r2,8192
    903c:	2880030d 	sth	r2,12(r5)
    9040:	18880014 	ori	r2,r3,8192
    9044:	28801915 	stw	r2,100(r5)
    9048:	280d883a 	mov	r6,r5
    904c:	8009883a 	mov	r4,r16
    9050:	880b883a 	mov	r5,r17
    9054:	dfc00317 	ldw	ra,12(sp)
    9058:	dc400217 	ldw	r17,8(sp)
    905c:	dc000117 	ldw	r16,4(sp)
    9060:	dec00404 	addi	sp,sp,16
    9064:	0008e741 	jmpi	8e74 <__fputwc>
    9068:	8009883a 	mov	r4,r16
    906c:	d9400015 	stw	r5,0(sp)
    9070:	0004cb40 	call	4cb4 <__sinit>
    9074:	d9400017 	ldw	r5,0(sp)
    9078:	003feb06 	br	9028 <__alt_data_end+0xfffe9c28>

0000907c <_fstat_r>:
    907c:	defffd04 	addi	sp,sp,-12
    9080:	2805883a 	mov	r2,r5
    9084:	dc000015 	stw	r16,0(sp)
    9088:	04000074 	movhi	r16,1
    908c:	dc400115 	stw	r17,4(sp)
    9090:	840dc804 	addi	r16,r16,14112
    9094:	2023883a 	mov	r17,r4
    9098:	300b883a 	mov	r5,r6
    909c:	1009883a 	mov	r4,r2
    90a0:	dfc00215 	stw	ra,8(sp)
    90a4:	80000015 	stw	zero,0(r16)
    90a8:	000d8700 	call	d870 <fstat>
    90ac:	00ffffc4 	movi	r3,-1
    90b0:	10c00526 	beq	r2,r3,90c8 <_fstat_r+0x4c>
    90b4:	dfc00217 	ldw	ra,8(sp)
    90b8:	dc400117 	ldw	r17,4(sp)
    90bc:	dc000017 	ldw	r16,0(sp)
    90c0:	dec00304 	addi	sp,sp,12
    90c4:	f800283a 	ret
    90c8:	80c00017 	ldw	r3,0(r16)
    90cc:	183ff926 	beq	r3,zero,90b4 <__alt_data_end+0xfffe9cb4>
    90d0:	88c00015 	stw	r3,0(r17)
    90d4:	003ff706 	br	90b4 <__alt_data_end+0xfffe9cb4>

000090d8 <__sfvwrite_r>:
    90d8:	30800217 	ldw	r2,8(r6)
    90dc:	10006726 	beq	r2,zero,927c <__sfvwrite_r+0x1a4>
    90e0:	28c0030b 	ldhu	r3,12(r5)
    90e4:	defff404 	addi	sp,sp,-48
    90e8:	dd400715 	stw	r21,28(sp)
    90ec:	dd000615 	stw	r20,24(sp)
    90f0:	dc000215 	stw	r16,8(sp)
    90f4:	dfc00b15 	stw	ra,44(sp)
    90f8:	df000a15 	stw	fp,40(sp)
    90fc:	ddc00915 	stw	r23,36(sp)
    9100:	dd800815 	stw	r22,32(sp)
    9104:	dcc00515 	stw	r19,20(sp)
    9108:	dc800415 	stw	r18,16(sp)
    910c:	dc400315 	stw	r17,12(sp)
    9110:	1880020c 	andi	r2,r3,8
    9114:	2821883a 	mov	r16,r5
    9118:	202b883a 	mov	r21,r4
    911c:	3029883a 	mov	r20,r6
    9120:	10002726 	beq	r2,zero,91c0 <__sfvwrite_r+0xe8>
    9124:	28800417 	ldw	r2,16(r5)
    9128:	10002526 	beq	r2,zero,91c0 <__sfvwrite_r+0xe8>
    912c:	1880008c 	andi	r2,r3,2
    9130:	a4400017 	ldw	r17,0(r20)
    9134:	10002a26 	beq	r2,zero,91e0 <__sfvwrite_r+0x108>
    9138:	05a00034 	movhi	r22,32768
    913c:	0027883a 	mov	r19,zero
    9140:	0025883a 	mov	r18,zero
    9144:	b5bf0004 	addi	r22,r22,-1024
    9148:	980d883a 	mov	r6,r19
    914c:	a809883a 	mov	r4,r21
    9150:	90004626 	beq	r18,zero,926c <__sfvwrite_r+0x194>
    9154:	900f883a 	mov	r7,r18
    9158:	b480022e 	bgeu	r22,r18,9164 <__sfvwrite_r+0x8c>
    915c:	01e00034 	movhi	r7,32768
    9160:	39ff0004 	addi	r7,r7,-1024
    9164:	80800917 	ldw	r2,36(r16)
    9168:	81400717 	ldw	r5,28(r16)
    916c:	103ee83a 	callr	r2
    9170:	00805a0e 	bge	zero,r2,92dc <__sfvwrite_r+0x204>
    9174:	a0c00217 	ldw	r3,8(r20)
    9178:	98a7883a 	add	r19,r19,r2
    917c:	90a5c83a 	sub	r18,r18,r2
    9180:	1885c83a 	sub	r2,r3,r2
    9184:	a0800215 	stw	r2,8(r20)
    9188:	103fef1e 	bne	r2,zero,9148 <__alt_data_end+0xfffe9d48>
    918c:	0005883a 	mov	r2,zero
    9190:	dfc00b17 	ldw	ra,44(sp)
    9194:	df000a17 	ldw	fp,40(sp)
    9198:	ddc00917 	ldw	r23,36(sp)
    919c:	dd800817 	ldw	r22,32(sp)
    91a0:	dd400717 	ldw	r21,28(sp)
    91a4:	dd000617 	ldw	r20,24(sp)
    91a8:	dcc00517 	ldw	r19,20(sp)
    91ac:	dc800417 	ldw	r18,16(sp)
    91b0:	dc400317 	ldw	r17,12(sp)
    91b4:	dc000217 	ldw	r16,8(sp)
    91b8:	dec00c04 	addi	sp,sp,48
    91bc:	f800283a 	ret
    91c0:	800b883a 	mov	r5,r16
    91c4:	a809883a 	mov	r4,r21
    91c8:	0002ca80 	call	2ca8 <__swsetup_r>
    91cc:	1000ee1e 	bne	r2,zero,9588 <__sfvwrite_r+0x4b0>
    91d0:	80c0030b 	ldhu	r3,12(r16)
    91d4:	a4400017 	ldw	r17,0(r20)
    91d8:	1880008c 	andi	r2,r3,2
    91dc:	103fd61e 	bne	r2,zero,9138 <__alt_data_end+0xfffe9d38>
    91e0:	1880004c 	andi	r2,r3,1
    91e4:	1000421e 	bne	r2,zero,92f0 <__sfvwrite_r+0x218>
    91e8:	0039883a 	mov	fp,zero
    91ec:	0025883a 	mov	r18,zero
    91f0:	90001a26 	beq	r18,zero,925c <__sfvwrite_r+0x184>
    91f4:	1880800c 	andi	r2,r3,512
    91f8:	84c00217 	ldw	r19,8(r16)
    91fc:	10002126 	beq	r2,zero,9284 <__sfvwrite_r+0x1ac>
    9200:	982f883a 	mov	r23,r19
    9204:	94c09636 	bltu	r18,r19,9460 <__sfvwrite_r+0x388>
    9208:	1881200c 	andi	r2,r3,1152
    920c:	1000a11e 	bne	r2,zero,9494 <__sfvwrite_r+0x3bc>
    9210:	81000017 	ldw	r4,0(r16)
    9214:	b80d883a 	mov	r6,r23
    9218:	e00b883a 	mov	r5,fp
    921c:	00096540 	call	9654 <memmove>
    9220:	80c00217 	ldw	r3,8(r16)
    9224:	81000017 	ldw	r4,0(r16)
    9228:	9005883a 	mov	r2,r18
    922c:	1ce7c83a 	sub	r19,r3,r19
    9230:	25cf883a 	add	r7,r4,r23
    9234:	84c00215 	stw	r19,8(r16)
    9238:	81c00015 	stw	r7,0(r16)
    923c:	a0c00217 	ldw	r3,8(r20)
    9240:	e0b9883a 	add	fp,fp,r2
    9244:	90a5c83a 	sub	r18,r18,r2
    9248:	18a7c83a 	sub	r19,r3,r2
    924c:	a4c00215 	stw	r19,8(r20)
    9250:	983fce26 	beq	r19,zero,918c <__alt_data_end+0xfffe9d8c>
    9254:	80c0030b 	ldhu	r3,12(r16)
    9258:	903fe61e 	bne	r18,zero,91f4 <__alt_data_end+0xfffe9df4>
    925c:	8f000017 	ldw	fp,0(r17)
    9260:	8c800117 	ldw	r18,4(r17)
    9264:	8c400204 	addi	r17,r17,8
    9268:	003fe106 	br	91f0 <__alt_data_end+0xfffe9df0>
    926c:	8cc00017 	ldw	r19,0(r17)
    9270:	8c800117 	ldw	r18,4(r17)
    9274:	8c400204 	addi	r17,r17,8
    9278:	003fb306 	br	9148 <__alt_data_end+0xfffe9d48>
    927c:	0005883a 	mov	r2,zero
    9280:	f800283a 	ret
    9284:	81000017 	ldw	r4,0(r16)
    9288:	80800417 	ldw	r2,16(r16)
    928c:	11005a36 	bltu	r2,r4,93f8 <__sfvwrite_r+0x320>
    9290:	85c00517 	ldw	r23,20(r16)
    9294:	95c05836 	bltu	r18,r23,93f8 <__sfvwrite_r+0x320>
    9298:	00a00034 	movhi	r2,32768
    929c:	10bfffc4 	addi	r2,r2,-1
    92a0:	9009883a 	mov	r4,r18
    92a4:	1480012e 	bgeu	r2,r18,92ac <__sfvwrite_r+0x1d4>
    92a8:	1009883a 	mov	r4,r2
    92ac:	b80b883a 	mov	r5,r23
    92b0:	000ac740 	call	ac74 <__divsi3>
    92b4:	b80b883a 	mov	r5,r23
    92b8:	1009883a 	mov	r4,r2
    92bc:	000ae280 	call	ae28 <__mulsi3>
    92c0:	81400717 	ldw	r5,28(r16)
    92c4:	80c00917 	ldw	r3,36(r16)
    92c8:	100f883a 	mov	r7,r2
    92cc:	e00d883a 	mov	r6,fp
    92d0:	a809883a 	mov	r4,r21
    92d4:	183ee83a 	callr	r3
    92d8:	00bfd816 	blt	zero,r2,923c <__alt_data_end+0xfffe9e3c>
    92dc:	8080030b 	ldhu	r2,12(r16)
    92e0:	10801014 	ori	r2,r2,64
    92e4:	8080030d 	sth	r2,12(r16)
    92e8:	00bfffc4 	movi	r2,-1
    92ec:	003fa806 	br	9190 <__alt_data_end+0xfffe9d90>
    92f0:	0027883a 	mov	r19,zero
    92f4:	0011883a 	mov	r8,zero
    92f8:	0039883a 	mov	fp,zero
    92fc:	0025883a 	mov	r18,zero
    9300:	90001f26 	beq	r18,zero,9380 <__sfvwrite_r+0x2a8>
    9304:	40005a26 	beq	r8,zero,9470 <__sfvwrite_r+0x398>
    9308:	982d883a 	mov	r22,r19
    930c:	94c0012e 	bgeu	r18,r19,9314 <__sfvwrite_r+0x23c>
    9310:	902d883a 	mov	r22,r18
    9314:	81000017 	ldw	r4,0(r16)
    9318:	80800417 	ldw	r2,16(r16)
    931c:	b02f883a 	mov	r23,r22
    9320:	81c00517 	ldw	r7,20(r16)
    9324:	1100032e 	bgeu	r2,r4,9334 <__sfvwrite_r+0x25c>
    9328:	80c00217 	ldw	r3,8(r16)
    932c:	38c7883a 	add	r3,r7,r3
    9330:	1d801816 	blt	r3,r22,9394 <__sfvwrite_r+0x2bc>
    9334:	b1c03e16 	blt	r22,r7,9430 <__sfvwrite_r+0x358>
    9338:	80800917 	ldw	r2,36(r16)
    933c:	81400717 	ldw	r5,28(r16)
    9340:	e00d883a 	mov	r6,fp
    9344:	da000115 	stw	r8,4(sp)
    9348:	a809883a 	mov	r4,r21
    934c:	103ee83a 	callr	r2
    9350:	102f883a 	mov	r23,r2
    9354:	da000117 	ldw	r8,4(sp)
    9358:	00bfe00e 	bge	zero,r2,92dc <__alt_data_end+0xfffe9edc>
    935c:	9de7c83a 	sub	r19,r19,r23
    9360:	98001f26 	beq	r19,zero,93e0 <__sfvwrite_r+0x308>
    9364:	a0800217 	ldw	r2,8(r20)
    9368:	e5f9883a 	add	fp,fp,r23
    936c:	95e5c83a 	sub	r18,r18,r23
    9370:	15efc83a 	sub	r23,r2,r23
    9374:	a5c00215 	stw	r23,8(r20)
    9378:	b83f8426 	beq	r23,zero,918c <__alt_data_end+0xfffe9d8c>
    937c:	903fe11e 	bne	r18,zero,9304 <__alt_data_end+0xfffe9f04>
    9380:	8f000017 	ldw	fp,0(r17)
    9384:	8c800117 	ldw	r18,4(r17)
    9388:	0011883a 	mov	r8,zero
    938c:	8c400204 	addi	r17,r17,8
    9390:	003fdb06 	br	9300 <__alt_data_end+0xfffe9f00>
    9394:	180d883a 	mov	r6,r3
    9398:	e00b883a 	mov	r5,fp
    939c:	da000115 	stw	r8,4(sp)
    93a0:	d8c00015 	stw	r3,0(sp)
    93a4:	00096540 	call	9654 <memmove>
    93a8:	d8c00017 	ldw	r3,0(sp)
    93ac:	80800017 	ldw	r2,0(r16)
    93b0:	800b883a 	mov	r5,r16
    93b4:	a809883a 	mov	r4,r21
    93b8:	10c5883a 	add	r2,r2,r3
    93bc:	80800015 	stw	r2,0(r16)
    93c0:	d8c00015 	stw	r3,0(sp)
    93c4:	00048c80 	call	48c8 <_fflush_r>
    93c8:	d8c00017 	ldw	r3,0(sp)
    93cc:	da000117 	ldw	r8,4(sp)
    93d0:	103fc21e 	bne	r2,zero,92dc <__alt_data_end+0xfffe9edc>
    93d4:	182f883a 	mov	r23,r3
    93d8:	9de7c83a 	sub	r19,r19,r23
    93dc:	983fe11e 	bne	r19,zero,9364 <__alt_data_end+0xfffe9f64>
    93e0:	800b883a 	mov	r5,r16
    93e4:	a809883a 	mov	r4,r21
    93e8:	00048c80 	call	48c8 <_fflush_r>
    93ec:	103fbb1e 	bne	r2,zero,92dc <__alt_data_end+0xfffe9edc>
    93f0:	0011883a 	mov	r8,zero
    93f4:	003fdb06 	br	9364 <__alt_data_end+0xfffe9f64>
    93f8:	94c0012e 	bgeu	r18,r19,9400 <__sfvwrite_r+0x328>
    93fc:	9027883a 	mov	r19,r18
    9400:	980d883a 	mov	r6,r19
    9404:	e00b883a 	mov	r5,fp
    9408:	00096540 	call	9654 <memmove>
    940c:	80800217 	ldw	r2,8(r16)
    9410:	80c00017 	ldw	r3,0(r16)
    9414:	14c5c83a 	sub	r2,r2,r19
    9418:	1cc7883a 	add	r3,r3,r19
    941c:	80800215 	stw	r2,8(r16)
    9420:	80c00015 	stw	r3,0(r16)
    9424:	10004326 	beq	r2,zero,9534 <__sfvwrite_r+0x45c>
    9428:	9805883a 	mov	r2,r19
    942c:	003f8306 	br	923c <__alt_data_end+0xfffe9e3c>
    9430:	b00d883a 	mov	r6,r22
    9434:	e00b883a 	mov	r5,fp
    9438:	da000115 	stw	r8,4(sp)
    943c:	00096540 	call	9654 <memmove>
    9440:	80800217 	ldw	r2,8(r16)
    9444:	80c00017 	ldw	r3,0(r16)
    9448:	da000117 	ldw	r8,4(sp)
    944c:	1585c83a 	sub	r2,r2,r22
    9450:	1dad883a 	add	r22,r3,r22
    9454:	80800215 	stw	r2,8(r16)
    9458:	85800015 	stw	r22,0(r16)
    945c:	003fbf06 	br	935c <__alt_data_end+0xfffe9f5c>
    9460:	81000017 	ldw	r4,0(r16)
    9464:	9027883a 	mov	r19,r18
    9468:	902f883a 	mov	r23,r18
    946c:	003f6906 	br	9214 <__alt_data_end+0xfffe9e14>
    9470:	900d883a 	mov	r6,r18
    9474:	01400284 	movi	r5,10
    9478:	e009883a 	mov	r4,fp
    947c:	0005d640 	call	5d64 <memchr>
    9480:	10003e26 	beq	r2,zero,957c <__sfvwrite_r+0x4a4>
    9484:	10800044 	addi	r2,r2,1
    9488:	1727c83a 	sub	r19,r2,fp
    948c:	02000044 	movi	r8,1
    9490:	003f9d06 	br	9308 <__alt_data_end+0xfffe9f08>
    9494:	80800517 	ldw	r2,20(r16)
    9498:	81400417 	ldw	r5,16(r16)
    949c:	81c00017 	ldw	r7,0(r16)
    94a0:	10a7883a 	add	r19,r2,r2
    94a4:	9885883a 	add	r2,r19,r2
    94a8:	1026d7fa 	srli	r19,r2,31
    94ac:	396dc83a 	sub	r22,r7,r5
    94b0:	b1000044 	addi	r4,r22,1
    94b4:	9885883a 	add	r2,r19,r2
    94b8:	1027d07a 	srai	r19,r2,1
    94bc:	2485883a 	add	r2,r4,r18
    94c0:	980d883a 	mov	r6,r19
    94c4:	9880022e 	bgeu	r19,r2,94d0 <__sfvwrite_r+0x3f8>
    94c8:	1027883a 	mov	r19,r2
    94cc:	100d883a 	mov	r6,r2
    94d0:	18c1000c 	andi	r3,r3,1024
    94d4:	18001c26 	beq	r3,zero,9548 <__sfvwrite_r+0x470>
    94d8:	300b883a 	mov	r5,r6
    94dc:	a809883a 	mov	r4,r21
    94e0:	00055580 	call	5558 <_malloc_r>
    94e4:	102f883a 	mov	r23,r2
    94e8:	10002926 	beq	r2,zero,9590 <__sfvwrite_r+0x4b8>
    94ec:	81400417 	ldw	r5,16(r16)
    94f0:	b00d883a 	mov	r6,r22
    94f4:	1009883a 	mov	r4,r2
    94f8:	0005e480 	call	5e48 <memcpy>
    94fc:	8080030b 	ldhu	r2,12(r16)
    9500:	00fedfc4 	movi	r3,-1153
    9504:	10c4703a 	and	r2,r2,r3
    9508:	10802014 	ori	r2,r2,128
    950c:	8080030d 	sth	r2,12(r16)
    9510:	bd89883a 	add	r4,r23,r22
    9514:	9d8fc83a 	sub	r7,r19,r22
    9518:	85c00415 	stw	r23,16(r16)
    951c:	84c00515 	stw	r19,20(r16)
    9520:	81000015 	stw	r4,0(r16)
    9524:	9027883a 	mov	r19,r18
    9528:	81c00215 	stw	r7,8(r16)
    952c:	902f883a 	mov	r23,r18
    9530:	003f3806 	br	9214 <__alt_data_end+0xfffe9e14>
    9534:	800b883a 	mov	r5,r16
    9538:	a809883a 	mov	r4,r21
    953c:	00048c80 	call	48c8 <_fflush_r>
    9540:	103fb926 	beq	r2,zero,9428 <__alt_data_end+0xfffea028>
    9544:	003f6506 	br	92dc <__alt_data_end+0xfffe9edc>
    9548:	a809883a 	mov	r4,r21
    954c:	00098100 	call	9810 <_realloc_r>
    9550:	102f883a 	mov	r23,r2
    9554:	103fee1e 	bne	r2,zero,9510 <__alt_data_end+0xfffea110>
    9558:	81400417 	ldw	r5,16(r16)
    955c:	a809883a 	mov	r4,r21
    9560:	0004e280 	call	4e28 <_free_r>
    9564:	8080030b 	ldhu	r2,12(r16)
    9568:	00ffdfc4 	movi	r3,-129
    956c:	1884703a 	and	r2,r3,r2
    9570:	00c00304 	movi	r3,12
    9574:	a8c00015 	stw	r3,0(r21)
    9578:	003f5906 	br	92e0 <__alt_data_end+0xfffe9ee0>
    957c:	94c00044 	addi	r19,r18,1
    9580:	02000044 	movi	r8,1
    9584:	003f6006 	br	9308 <__alt_data_end+0xfffe9f08>
    9588:	00bfffc4 	movi	r2,-1
    958c:	003f0006 	br	9190 <__alt_data_end+0xfffe9d90>
    9590:	00800304 	movi	r2,12
    9594:	a8800015 	stw	r2,0(r21)
    9598:	8080030b 	ldhu	r2,12(r16)
    959c:	003f5006 	br	92e0 <__alt_data_end+0xfffe9ee0>

000095a0 <_isatty_r>:
    95a0:	defffd04 	addi	sp,sp,-12
    95a4:	dc000015 	stw	r16,0(sp)
    95a8:	04000074 	movhi	r16,1
    95ac:	dc400115 	stw	r17,4(sp)
    95b0:	840dc804 	addi	r16,r16,14112
    95b4:	2023883a 	mov	r17,r4
    95b8:	2809883a 	mov	r4,r5
    95bc:	dfc00215 	stw	ra,8(sp)
    95c0:	80000015 	stw	zero,0(r16)
    95c4:	000dc040 	call	dc04 <isatty>
    95c8:	00ffffc4 	movi	r3,-1
    95cc:	10c00526 	beq	r2,r3,95e4 <_isatty_r+0x44>
    95d0:	dfc00217 	ldw	ra,8(sp)
    95d4:	dc400117 	ldw	r17,4(sp)
    95d8:	dc000017 	ldw	r16,0(sp)
    95dc:	dec00304 	addi	sp,sp,12
    95e0:	f800283a 	ret
    95e4:	80c00017 	ldw	r3,0(r16)
    95e8:	183ff926 	beq	r3,zero,95d0 <__alt_data_end+0xfffea1d0>
    95ec:	88c00015 	stw	r3,0(r17)
    95f0:	003ff706 	br	95d0 <__alt_data_end+0xfffea1d0>

000095f4 <_lseek_r>:
    95f4:	defffd04 	addi	sp,sp,-12
    95f8:	2805883a 	mov	r2,r5
    95fc:	dc000015 	stw	r16,0(sp)
    9600:	04000074 	movhi	r16,1
    9604:	dc400115 	stw	r17,4(sp)
    9608:	300b883a 	mov	r5,r6
    960c:	840dc804 	addi	r16,r16,14112
    9610:	2023883a 	mov	r17,r4
    9614:	380d883a 	mov	r6,r7
    9618:	1009883a 	mov	r4,r2
    961c:	dfc00215 	stw	ra,8(sp)
    9620:	80000015 	stw	zero,0(r16)
    9624:	000ddd80 	call	ddd8 <lseek>
    9628:	00ffffc4 	movi	r3,-1
    962c:	10c00526 	beq	r2,r3,9644 <_lseek_r+0x50>
    9630:	dfc00217 	ldw	ra,8(sp)
    9634:	dc400117 	ldw	r17,4(sp)
    9638:	dc000017 	ldw	r16,0(sp)
    963c:	dec00304 	addi	sp,sp,12
    9640:	f800283a 	ret
    9644:	80c00017 	ldw	r3,0(r16)
    9648:	183ff926 	beq	r3,zero,9630 <__alt_data_end+0xfffea230>
    964c:	88c00015 	stw	r3,0(r17)
    9650:	003ff706 	br	9630 <__alt_data_end+0xfffea230>

00009654 <memmove>:
    9654:	2005883a 	mov	r2,r4
    9658:	29000b2e 	bgeu	r5,r4,9688 <memmove+0x34>
    965c:	298f883a 	add	r7,r5,r6
    9660:	21c0092e 	bgeu	r4,r7,9688 <memmove+0x34>
    9664:	2187883a 	add	r3,r4,r6
    9668:	198bc83a 	sub	r5,r3,r6
    966c:	30004826 	beq	r6,zero,9790 <memmove+0x13c>
    9670:	39ffffc4 	addi	r7,r7,-1
    9674:	39000003 	ldbu	r4,0(r7)
    9678:	18ffffc4 	addi	r3,r3,-1
    967c:	19000005 	stb	r4,0(r3)
    9680:	28fffb1e 	bne	r5,r3,9670 <__alt_data_end+0xfffea270>
    9684:	f800283a 	ret
    9688:	00c003c4 	movi	r3,15
    968c:	1980412e 	bgeu	r3,r6,9794 <memmove+0x140>
    9690:	2886b03a 	or	r3,r5,r2
    9694:	18c000cc 	andi	r3,r3,3
    9698:	1800401e 	bne	r3,zero,979c <memmove+0x148>
    969c:	33fffc04 	addi	r15,r6,-16
    96a0:	781ed13a 	srli	r15,r15,4
    96a4:	28c00104 	addi	r3,r5,4
    96a8:	13400104 	addi	r13,r2,4
    96ac:	781c913a 	slli	r14,r15,4
    96b0:	2b000204 	addi	r12,r5,8
    96b4:	12c00204 	addi	r11,r2,8
    96b8:	73800504 	addi	r14,r14,20
    96bc:	2a800304 	addi	r10,r5,12
    96c0:	12400304 	addi	r9,r2,12
    96c4:	2b9d883a 	add	r14,r5,r14
    96c8:	2811883a 	mov	r8,r5
    96cc:	100f883a 	mov	r7,r2
    96d0:	41000017 	ldw	r4,0(r8)
    96d4:	39c00404 	addi	r7,r7,16
    96d8:	18c00404 	addi	r3,r3,16
    96dc:	393ffc15 	stw	r4,-16(r7)
    96e0:	193ffc17 	ldw	r4,-16(r3)
    96e4:	6b400404 	addi	r13,r13,16
    96e8:	5ac00404 	addi	r11,r11,16
    96ec:	693ffc15 	stw	r4,-16(r13)
    96f0:	61000017 	ldw	r4,0(r12)
    96f4:	4a400404 	addi	r9,r9,16
    96f8:	42000404 	addi	r8,r8,16
    96fc:	593ffc15 	stw	r4,-16(r11)
    9700:	51000017 	ldw	r4,0(r10)
    9704:	63000404 	addi	r12,r12,16
    9708:	52800404 	addi	r10,r10,16
    970c:	493ffc15 	stw	r4,-16(r9)
    9710:	1bbfef1e 	bne	r3,r14,96d0 <__alt_data_end+0xfffea2d0>
    9714:	79000044 	addi	r4,r15,1
    9718:	2008913a 	slli	r4,r4,4
    971c:	328003cc 	andi	r10,r6,15
    9720:	02c000c4 	movi	r11,3
    9724:	1107883a 	add	r3,r2,r4
    9728:	290b883a 	add	r5,r5,r4
    972c:	5a801e2e 	bgeu	r11,r10,97a8 <memmove+0x154>
    9730:	1813883a 	mov	r9,r3
    9734:	2811883a 	mov	r8,r5
    9738:	500f883a 	mov	r7,r10
    973c:	41000017 	ldw	r4,0(r8)
    9740:	4a400104 	addi	r9,r9,4
    9744:	39ffff04 	addi	r7,r7,-4
    9748:	493fff15 	stw	r4,-4(r9)
    974c:	42000104 	addi	r8,r8,4
    9750:	59fffa36 	bltu	r11,r7,973c <__alt_data_end+0xfffea33c>
    9754:	513fff04 	addi	r4,r10,-4
    9758:	2008d0ba 	srli	r4,r4,2
    975c:	318000cc 	andi	r6,r6,3
    9760:	21000044 	addi	r4,r4,1
    9764:	2109883a 	add	r4,r4,r4
    9768:	2109883a 	add	r4,r4,r4
    976c:	1907883a 	add	r3,r3,r4
    9770:	290b883a 	add	r5,r5,r4
    9774:	30000b26 	beq	r6,zero,97a4 <memmove+0x150>
    9778:	198d883a 	add	r6,r3,r6
    977c:	29c00003 	ldbu	r7,0(r5)
    9780:	18c00044 	addi	r3,r3,1
    9784:	29400044 	addi	r5,r5,1
    9788:	19ffffc5 	stb	r7,-1(r3)
    978c:	19bffb1e 	bne	r3,r6,977c <__alt_data_end+0xfffea37c>
    9790:	f800283a 	ret
    9794:	1007883a 	mov	r3,r2
    9798:	003ff606 	br	9774 <__alt_data_end+0xfffea374>
    979c:	1007883a 	mov	r3,r2
    97a0:	003ff506 	br	9778 <__alt_data_end+0xfffea378>
    97a4:	f800283a 	ret
    97a8:	500d883a 	mov	r6,r10
    97ac:	003ff106 	br	9774 <__alt_data_end+0xfffea374>

000097b0 <_read_r>:
    97b0:	defffd04 	addi	sp,sp,-12
    97b4:	2805883a 	mov	r2,r5
    97b8:	dc000015 	stw	r16,0(sp)
    97bc:	04000074 	movhi	r16,1
    97c0:	dc400115 	stw	r17,4(sp)
    97c4:	300b883a 	mov	r5,r6
    97c8:	840dc804 	addi	r16,r16,14112
    97cc:	2023883a 	mov	r17,r4
    97d0:	380d883a 	mov	r6,r7
    97d4:	1009883a 	mov	r4,r2
    97d8:	dfc00215 	stw	ra,8(sp)
    97dc:	80000015 	stw	zero,0(r16)
    97e0:	000dfb40 	call	dfb4 <read>
    97e4:	00ffffc4 	movi	r3,-1
    97e8:	10c00526 	beq	r2,r3,9800 <_read_r+0x50>
    97ec:	dfc00217 	ldw	ra,8(sp)
    97f0:	dc400117 	ldw	r17,4(sp)
    97f4:	dc000017 	ldw	r16,0(sp)
    97f8:	dec00304 	addi	sp,sp,12
    97fc:	f800283a 	ret
    9800:	80c00017 	ldw	r3,0(r16)
    9804:	183ff926 	beq	r3,zero,97ec <__alt_data_end+0xfffea3ec>
    9808:	88c00015 	stw	r3,0(r17)
    980c:	003ff706 	br	97ec <__alt_data_end+0xfffea3ec>

00009810 <_realloc_r>:
    9810:	defff604 	addi	sp,sp,-40
    9814:	dc800215 	stw	r18,8(sp)
    9818:	dfc00915 	stw	ra,36(sp)
    981c:	df000815 	stw	fp,32(sp)
    9820:	ddc00715 	stw	r23,28(sp)
    9824:	dd800615 	stw	r22,24(sp)
    9828:	dd400515 	stw	r21,20(sp)
    982c:	dd000415 	stw	r20,16(sp)
    9830:	dcc00315 	stw	r19,12(sp)
    9834:	dc400115 	stw	r17,4(sp)
    9838:	dc000015 	stw	r16,0(sp)
    983c:	3025883a 	mov	r18,r6
    9840:	2800b726 	beq	r5,zero,9b20 <_realloc_r+0x310>
    9844:	282b883a 	mov	r21,r5
    9848:	2029883a 	mov	r20,r4
    984c:	000df300 	call	df30 <__malloc_lock>
    9850:	a8bfff17 	ldw	r2,-4(r21)
    9854:	043fff04 	movi	r16,-4
    9858:	90c002c4 	addi	r3,r18,11
    985c:	01000584 	movi	r4,22
    9860:	acfffe04 	addi	r19,r21,-8
    9864:	1420703a 	and	r16,r2,r16
    9868:	20c0332e 	bgeu	r4,r3,9938 <_realloc_r+0x128>
    986c:	047ffe04 	movi	r17,-8
    9870:	1c62703a 	and	r17,r3,r17
    9874:	8807883a 	mov	r3,r17
    9878:	88005816 	blt	r17,zero,99dc <_realloc_r+0x1cc>
    987c:	8c805736 	bltu	r17,r18,99dc <_realloc_r+0x1cc>
    9880:	80c0300e 	bge	r16,r3,9944 <_realloc_r+0x134>
    9884:	07000074 	movhi	fp,1
    9888:	e7016e04 	addi	fp,fp,1464
    988c:	e1c00217 	ldw	r7,8(fp)
    9890:	9c09883a 	add	r4,r19,r16
    9894:	22000117 	ldw	r8,4(r4)
    9898:	21c06326 	beq	r4,r7,9a28 <_realloc_r+0x218>
    989c:	017fff84 	movi	r5,-2
    98a0:	414a703a 	and	r5,r8,r5
    98a4:	214b883a 	add	r5,r4,r5
    98a8:	29800117 	ldw	r6,4(r5)
    98ac:	3180004c 	andi	r6,r6,1
    98b0:	30003f26 	beq	r6,zero,99b0 <_realloc_r+0x1a0>
    98b4:	1080004c 	andi	r2,r2,1
    98b8:	10008326 	beq	r2,zero,9ac8 <_realloc_r+0x2b8>
    98bc:	900b883a 	mov	r5,r18
    98c0:	a009883a 	mov	r4,r20
    98c4:	00055580 	call	5558 <_malloc_r>
    98c8:	1025883a 	mov	r18,r2
    98cc:	10011e26 	beq	r2,zero,9d48 <_realloc_r+0x538>
    98d0:	a93fff17 	ldw	r4,-4(r21)
    98d4:	10fffe04 	addi	r3,r2,-8
    98d8:	00bfff84 	movi	r2,-2
    98dc:	2084703a 	and	r2,r4,r2
    98e0:	9885883a 	add	r2,r19,r2
    98e4:	1880ee26 	beq	r3,r2,9ca0 <_realloc_r+0x490>
    98e8:	81bfff04 	addi	r6,r16,-4
    98ec:	00800904 	movi	r2,36
    98f0:	1180b836 	bltu	r2,r6,9bd4 <_realloc_r+0x3c4>
    98f4:	00c004c4 	movi	r3,19
    98f8:	19809636 	bltu	r3,r6,9b54 <_realloc_r+0x344>
    98fc:	9005883a 	mov	r2,r18
    9900:	a807883a 	mov	r3,r21
    9904:	19000017 	ldw	r4,0(r3)
    9908:	11000015 	stw	r4,0(r2)
    990c:	19000117 	ldw	r4,4(r3)
    9910:	11000115 	stw	r4,4(r2)
    9914:	18c00217 	ldw	r3,8(r3)
    9918:	10c00215 	stw	r3,8(r2)
    991c:	a80b883a 	mov	r5,r21
    9920:	a009883a 	mov	r4,r20
    9924:	0004e280 	call	4e28 <_free_r>
    9928:	a009883a 	mov	r4,r20
    992c:	000df540 	call	df54 <__malloc_unlock>
    9930:	9005883a 	mov	r2,r18
    9934:	00001206 	br	9980 <_realloc_r+0x170>
    9938:	00c00404 	movi	r3,16
    993c:	1823883a 	mov	r17,r3
    9940:	003fce06 	br	987c <__alt_data_end+0xfffea47c>
    9944:	a825883a 	mov	r18,r21
    9948:	8445c83a 	sub	r2,r16,r17
    994c:	00c003c4 	movi	r3,15
    9950:	18802636 	bltu	r3,r2,99ec <_realloc_r+0x1dc>
    9954:	99800117 	ldw	r6,4(r19)
    9958:	9c07883a 	add	r3,r19,r16
    995c:	3180004c 	andi	r6,r6,1
    9960:	3420b03a 	or	r16,r6,r16
    9964:	9c000115 	stw	r16,4(r19)
    9968:	18800117 	ldw	r2,4(r3)
    996c:	10800054 	ori	r2,r2,1
    9970:	18800115 	stw	r2,4(r3)
    9974:	a009883a 	mov	r4,r20
    9978:	000df540 	call	df54 <__malloc_unlock>
    997c:	9005883a 	mov	r2,r18
    9980:	dfc00917 	ldw	ra,36(sp)
    9984:	df000817 	ldw	fp,32(sp)
    9988:	ddc00717 	ldw	r23,28(sp)
    998c:	dd800617 	ldw	r22,24(sp)
    9990:	dd400517 	ldw	r21,20(sp)
    9994:	dd000417 	ldw	r20,16(sp)
    9998:	dcc00317 	ldw	r19,12(sp)
    999c:	dc800217 	ldw	r18,8(sp)
    99a0:	dc400117 	ldw	r17,4(sp)
    99a4:	dc000017 	ldw	r16,0(sp)
    99a8:	dec00a04 	addi	sp,sp,40
    99ac:	f800283a 	ret
    99b0:	017fff04 	movi	r5,-4
    99b4:	414a703a 	and	r5,r8,r5
    99b8:	814d883a 	add	r6,r16,r5
    99bc:	30c01f16 	blt	r6,r3,9a3c <_realloc_r+0x22c>
    99c0:	20800317 	ldw	r2,12(r4)
    99c4:	20c00217 	ldw	r3,8(r4)
    99c8:	a825883a 	mov	r18,r21
    99cc:	3021883a 	mov	r16,r6
    99d0:	18800315 	stw	r2,12(r3)
    99d4:	10c00215 	stw	r3,8(r2)
    99d8:	003fdb06 	br	9948 <__alt_data_end+0xfffea548>
    99dc:	00800304 	movi	r2,12
    99e0:	a0800015 	stw	r2,0(r20)
    99e4:	0005883a 	mov	r2,zero
    99e8:	003fe506 	br	9980 <__alt_data_end+0xfffea580>
    99ec:	98c00117 	ldw	r3,4(r19)
    99f0:	9c4b883a 	add	r5,r19,r17
    99f4:	11000054 	ori	r4,r2,1
    99f8:	18c0004c 	andi	r3,r3,1
    99fc:	1c62b03a 	or	r17,r3,r17
    9a00:	9c400115 	stw	r17,4(r19)
    9a04:	29000115 	stw	r4,4(r5)
    9a08:	2885883a 	add	r2,r5,r2
    9a0c:	10c00117 	ldw	r3,4(r2)
    9a10:	29400204 	addi	r5,r5,8
    9a14:	a009883a 	mov	r4,r20
    9a18:	18c00054 	ori	r3,r3,1
    9a1c:	10c00115 	stw	r3,4(r2)
    9a20:	0004e280 	call	4e28 <_free_r>
    9a24:	003fd306 	br	9974 <__alt_data_end+0xfffea574>
    9a28:	017fff04 	movi	r5,-4
    9a2c:	414a703a 	and	r5,r8,r5
    9a30:	89800404 	addi	r6,r17,16
    9a34:	8151883a 	add	r8,r16,r5
    9a38:	4180590e 	bge	r8,r6,9ba0 <_realloc_r+0x390>
    9a3c:	1080004c 	andi	r2,r2,1
    9a40:	103f9e1e 	bne	r2,zero,98bc <__alt_data_end+0xfffea4bc>
    9a44:	adbffe17 	ldw	r22,-8(r21)
    9a48:	00bfff04 	movi	r2,-4
    9a4c:	9dadc83a 	sub	r22,r19,r22
    9a50:	b1800117 	ldw	r6,4(r22)
    9a54:	3084703a 	and	r2,r6,r2
    9a58:	20002026 	beq	r4,zero,9adc <_realloc_r+0x2cc>
    9a5c:	80af883a 	add	r23,r16,r2
    9a60:	b96f883a 	add	r23,r23,r5
    9a64:	21c05f26 	beq	r4,r7,9be4 <_realloc_r+0x3d4>
    9a68:	b8c01c16 	blt	r23,r3,9adc <_realloc_r+0x2cc>
    9a6c:	20800317 	ldw	r2,12(r4)
    9a70:	20c00217 	ldw	r3,8(r4)
    9a74:	81bfff04 	addi	r6,r16,-4
    9a78:	01000904 	movi	r4,36
    9a7c:	18800315 	stw	r2,12(r3)
    9a80:	10c00215 	stw	r3,8(r2)
    9a84:	b0c00217 	ldw	r3,8(r22)
    9a88:	b0800317 	ldw	r2,12(r22)
    9a8c:	b4800204 	addi	r18,r22,8
    9a90:	18800315 	stw	r2,12(r3)
    9a94:	10c00215 	stw	r3,8(r2)
    9a98:	21801b36 	bltu	r4,r6,9b08 <_realloc_r+0x2f8>
    9a9c:	008004c4 	movi	r2,19
    9aa0:	1180352e 	bgeu	r2,r6,9b78 <_realloc_r+0x368>
    9aa4:	a8800017 	ldw	r2,0(r21)
    9aa8:	b0800215 	stw	r2,8(r22)
    9aac:	a8800117 	ldw	r2,4(r21)
    9ab0:	b0800315 	stw	r2,12(r22)
    9ab4:	008006c4 	movi	r2,27
    9ab8:	11807f36 	bltu	r2,r6,9cb8 <_realloc_r+0x4a8>
    9abc:	b0800404 	addi	r2,r22,16
    9ac0:	ad400204 	addi	r21,r21,8
    9ac4:	00002d06 	br	9b7c <_realloc_r+0x36c>
    9ac8:	adbffe17 	ldw	r22,-8(r21)
    9acc:	00bfff04 	movi	r2,-4
    9ad0:	9dadc83a 	sub	r22,r19,r22
    9ad4:	b1000117 	ldw	r4,4(r22)
    9ad8:	2084703a 	and	r2,r4,r2
    9adc:	b03f7726 	beq	r22,zero,98bc <__alt_data_end+0xfffea4bc>
    9ae0:	80af883a 	add	r23,r16,r2
    9ae4:	b8ff7516 	blt	r23,r3,98bc <__alt_data_end+0xfffea4bc>
    9ae8:	b0800317 	ldw	r2,12(r22)
    9aec:	b0c00217 	ldw	r3,8(r22)
    9af0:	81bfff04 	addi	r6,r16,-4
    9af4:	01000904 	movi	r4,36
    9af8:	18800315 	stw	r2,12(r3)
    9afc:	10c00215 	stw	r3,8(r2)
    9b00:	b4800204 	addi	r18,r22,8
    9b04:	21bfe52e 	bgeu	r4,r6,9a9c <__alt_data_end+0xfffea69c>
    9b08:	a80b883a 	mov	r5,r21
    9b0c:	9009883a 	mov	r4,r18
    9b10:	00096540 	call	9654 <memmove>
    9b14:	b821883a 	mov	r16,r23
    9b18:	b027883a 	mov	r19,r22
    9b1c:	003f8a06 	br	9948 <__alt_data_end+0xfffea548>
    9b20:	300b883a 	mov	r5,r6
    9b24:	dfc00917 	ldw	ra,36(sp)
    9b28:	df000817 	ldw	fp,32(sp)
    9b2c:	ddc00717 	ldw	r23,28(sp)
    9b30:	dd800617 	ldw	r22,24(sp)
    9b34:	dd400517 	ldw	r21,20(sp)
    9b38:	dd000417 	ldw	r20,16(sp)
    9b3c:	dcc00317 	ldw	r19,12(sp)
    9b40:	dc800217 	ldw	r18,8(sp)
    9b44:	dc400117 	ldw	r17,4(sp)
    9b48:	dc000017 	ldw	r16,0(sp)
    9b4c:	dec00a04 	addi	sp,sp,40
    9b50:	00055581 	jmpi	5558 <_malloc_r>
    9b54:	a8c00017 	ldw	r3,0(r21)
    9b58:	90c00015 	stw	r3,0(r18)
    9b5c:	a8c00117 	ldw	r3,4(r21)
    9b60:	90c00115 	stw	r3,4(r18)
    9b64:	00c006c4 	movi	r3,27
    9b68:	19804536 	bltu	r3,r6,9c80 <_realloc_r+0x470>
    9b6c:	90800204 	addi	r2,r18,8
    9b70:	a8c00204 	addi	r3,r21,8
    9b74:	003f6306 	br	9904 <__alt_data_end+0xfffea504>
    9b78:	9005883a 	mov	r2,r18
    9b7c:	a8c00017 	ldw	r3,0(r21)
    9b80:	b821883a 	mov	r16,r23
    9b84:	b027883a 	mov	r19,r22
    9b88:	10c00015 	stw	r3,0(r2)
    9b8c:	a8c00117 	ldw	r3,4(r21)
    9b90:	10c00115 	stw	r3,4(r2)
    9b94:	a8c00217 	ldw	r3,8(r21)
    9b98:	10c00215 	stw	r3,8(r2)
    9b9c:	003f6a06 	br	9948 <__alt_data_end+0xfffea548>
    9ba0:	9c67883a 	add	r19,r19,r17
    9ba4:	4445c83a 	sub	r2,r8,r17
    9ba8:	e4c00215 	stw	r19,8(fp)
    9bac:	10800054 	ori	r2,r2,1
    9bb0:	98800115 	stw	r2,4(r19)
    9bb4:	a8bfff17 	ldw	r2,-4(r21)
    9bb8:	a009883a 	mov	r4,r20
    9bbc:	1080004c 	andi	r2,r2,1
    9bc0:	1462b03a 	or	r17,r2,r17
    9bc4:	ac7fff15 	stw	r17,-4(r21)
    9bc8:	000df540 	call	df54 <__malloc_unlock>
    9bcc:	a805883a 	mov	r2,r21
    9bd0:	003f6b06 	br	9980 <__alt_data_end+0xfffea580>
    9bd4:	a80b883a 	mov	r5,r21
    9bd8:	9009883a 	mov	r4,r18
    9bdc:	00096540 	call	9654 <memmove>
    9be0:	003f4e06 	br	991c <__alt_data_end+0xfffea51c>
    9be4:	89000404 	addi	r4,r17,16
    9be8:	b93fbc16 	blt	r23,r4,9adc <__alt_data_end+0xfffea6dc>
    9bec:	b0800317 	ldw	r2,12(r22)
    9bf0:	b0c00217 	ldw	r3,8(r22)
    9bf4:	81bfff04 	addi	r6,r16,-4
    9bf8:	01000904 	movi	r4,36
    9bfc:	18800315 	stw	r2,12(r3)
    9c00:	10c00215 	stw	r3,8(r2)
    9c04:	b4800204 	addi	r18,r22,8
    9c08:	21804336 	bltu	r4,r6,9d18 <_realloc_r+0x508>
    9c0c:	008004c4 	movi	r2,19
    9c10:	11803f2e 	bgeu	r2,r6,9d10 <_realloc_r+0x500>
    9c14:	a8800017 	ldw	r2,0(r21)
    9c18:	b0800215 	stw	r2,8(r22)
    9c1c:	a8800117 	ldw	r2,4(r21)
    9c20:	b0800315 	stw	r2,12(r22)
    9c24:	008006c4 	movi	r2,27
    9c28:	11803f36 	bltu	r2,r6,9d28 <_realloc_r+0x518>
    9c2c:	b0800404 	addi	r2,r22,16
    9c30:	ad400204 	addi	r21,r21,8
    9c34:	a8c00017 	ldw	r3,0(r21)
    9c38:	10c00015 	stw	r3,0(r2)
    9c3c:	a8c00117 	ldw	r3,4(r21)
    9c40:	10c00115 	stw	r3,4(r2)
    9c44:	a8c00217 	ldw	r3,8(r21)
    9c48:	10c00215 	stw	r3,8(r2)
    9c4c:	b447883a 	add	r3,r22,r17
    9c50:	bc45c83a 	sub	r2,r23,r17
    9c54:	e0c00215 	stw	r3,8(fp)
    9c58:	10800054 	ori	r2,r2,1
    9c5c:	18800115 	stw	r2,4(r3)
    9c60:	b0800117 	ldw	r2,4(r22)
    9c64:	a009883a 	mov	r4,r20
    9c68:	1080004c 	andi	r2,r2,1
    9c6c:	1462b03a 	or	r17,r2,r17
    9c70:	b4400115 	stw	r17,4(r22)
    9c74:	000df540 	call	df54 <__malloc_unlock>
    9c78:	9005883a 	mov	r2,r18
    9c7c:	003f4006 	br	9980 <__alt_data_end+0xfffea580>
    9c80:	a8c00217 	ldw	r3,8(r21)
    9c84:	90c00215 	stw	r3,8(r18)
    9c88:	a8c00317 	ldw	r3,12(r21)
    9c8c:	90c00315 	stw	r3,12(r18)
    9c90:	30801126 	beq	r6,r2,9cd8 <_realloc_r+0x4c8>
    9c94:	90800404 	addi	r2,r18,16
    9c98:	a8c00404 	addi	r3,r21,16
    9c9c:	003f1906 	br	9904 <__alt_data_end+0xfffea504>
    9ca0:	90ffff17 	ldw	r3,-4(r18)
    9ca4:	00bfff04 	movi	r2,-4
    9ca8:	a825883a 	mov	r18,r21
    9cac:	1884703a 	and	r2,r3,r2
    9cb0:	80a1883a 	add	r16,r16,r2
    9cb4:	003f2406 	br	9948 <__alt_data_end+0xfffea548>
    9cb8:	a8800217 	ldw	r2,8(r21)
    9cbc:	b0800415 	stw	r2,16(r22)
    9cc0:	a8800317 	ldw	r2,12(r21)
    9cc4:	b0800515 	stw	r2,20(r22)
    9cc8:	31000a26 	beq	r6,r4,9cf4 <_realloc_r+0x4e4>
    9ccc:	b0800604 	addi	r2,r22,24
    9cd0:	ad400404 	addi	r21,r21,16
    9cd4:	003fa906 	br	9b7c <__alt_data_end+0xfffea77c>
    9cd8:	a9000417 	ldw	r4,16(r21)
    9cdc:	90800604 	addi	r2,r18,24
    9ce0:	a8c00604 	addi	r3,r21,24
    9ce4:	91000415 	stw	r4,16(r18)
    9ce8:	a9000517 	ldw	r4,20(r21)
    9cec:	91000515 	stw	r4,20(r18)
    9cf0:	003f0406 	br	9904 <__alt_data_end+0xfffea504>
    9cf4:	a8c00417 	ldw	r3,16(r21)
    9cf8:	ad400604 	addi	r21,r21,24
    9cfc:	b0800804 	addi	r2,r22,32
    9d00:	b0c00615 	stw	r3,24(r22)
    9d04:	a8ffff17 	ldw	r3,-4(r21)
    9d08:	b0c00715 	stw	r3,28(r22)
    9d0c:	003f9b06 	br	9b7c <__alt_data_end+0xfffea77c>
    9d10:	9005883a 	mov	r2,r18
    9d14:	003fc706 	br	9c34 <__alt_data_end+0xfffea834>
    9d18:	a80b883a 	mov	r5,r21
    9d1c:	9009883a 	mov	r4,r18
    9d20:	00096540 	call	9654 <memmove>
    9d24:	003fc906 	br	9c4c <__alt_data_end+0xfffea84c>
    9d28:	a8800217 	ldw	r2,8(r21)
    9d2c:	b0800415 	stw	r2,16(r22)
    9d30:	a8800317 	ldw	r2,12(r21)
    9d34:	b0800515 	stw	r2,20(r22)
    9d38:	31000726 	beq	r6,r4,9d58 <_realloc_r+0x548>
    9d3c:	b0800604 	addi	r2,r22,24
    9d40:	ad400404 	addi	r21,r21,16
    9d44:	003fbb06 	br	9c34 <__alt_data_end+0xfffea834>
    9d48:	a009883a 	mov	r4,r20
    9d4c:	000df540 	call	df54 <__malloc_unlock>
    9d50:	0005883a 	mov	r2,zero
    9d54:	003f0a06 	br	9980 <__alt_data_end+0xfffea580>
    9d58:	a8c00417 	ldw	r3,16(r21)
    9d5c:	ad400604 	addi	r21,r21,24
    9d60:	b0800804 	addi	r2,r22,32
    9d64:	b0c00615 	stw	r3,24(r22)
    9d68:	a8ffff17 	ldw	r3,-4(r21)
    9d6c:	b0c00715 	stw	r3,28(r22)
    9d70:	003fb006 	br	9c34 <__alt_data_end+0xfffea834>

00009d74 <__swbuf_r>:
    9d74:	defffb04 	addi	sp,sp,-20
    9d78:	dcc00315 	stw	r19,12(sp)
    9d7c:	dc800215 	stw	r18,8(sp)
    9d80:	dc000015 	stw	r16,0(sp)
    9d84:	dfc00415 	stw	ra,16(sp)
    9d88:	dc400115 	stw	r17,4(sp)
    9d8c:	2025883a 	mov	r18,r4
    9d90:	2827883a 	mov	r19,r5
    9d94:	3021883a 	mov	r16,r6
    9d98:	20000226 	beq	r4,zero,9da4 <__swbuf_r+0x30>
    9d9c:	20800e17 	ldw	r2,56(r4)
    9da0:	10004226 	beq	r2,zero,9eac <__swbuf_r+0x138>
    9da4:	80800617 	ldw	r2,24(r16)
    9da8:	8100030b 	ldhu	r4,12(r16)
    9dac:	80800215 	stw	r2,8(r16)
    9db0:	2080020c 	andi	r2,r4,8
    9db4:	10003626 	beq	r2,zero,9e90 <__swbuf_r+0x11c>
    9db8:	80c00417 	ldw	r3,16(r16)
    9dbc:	18003426 	beq	r3,zero,9e90 <__swbuf_r+0x11c>
    9dc0:	2088000c 	andi	r2,r4,8192
    9dc4:	9c403fcc 	andi	r17,r19,255
    9dc8:	10001a26 	beq	r2,zero,9e34 <__swbuf_r+0xc0>
    9dcc:	80800017 	ldw	r2,0(r16)
    9dd0:	81000517 	ldw	r4,20(r16)
    9dd4:	10c7c83a 	sub	r3,r2,r3
    9dd8:	1900200e 	bge	r3,r4,9e5c <__swbuf_r+0xe8>
    9ddc:	18c00044 	addi	r3,r3,1
    9de0:	81000217 	ldw	r4,8(r16)
    9de4:	11400044 	addi	r5,r2,1
    9de8:	81400015 	stw	r5,0(r16)
    9dec:	213fffc4 	addi	r4,r4,-1
    9df0:	81000215 	stw	r4,8(r16)
    9df4:	14c00005 	stb	r19,0(r2)
    9df8:	80800517 	ldw	r2,20(r16)
    9dfc:	10c01e26 	beq	r2,r3,9e78 <__swbuf_r+0x104>
    9e00:	8080030b 	ldhu	r2,12(r16)
    9e04:	1080004c 	andi	r2,r2,1
    9e08:	10000226 	beq	r2,zero,9e14 <__swbuf_r+0xa0>
    9e0c:	00800284 	movi	r2,10
    9e10:	88801926 	beq	r17,r2,9e78 <__swbuf_r+0x104>
    9e14:	8805883a 	mov	r2,r17
    9e18:	dfc00417 	ldw	ra,16(sp)
    9e1c:	dcc00317 	ldw	r19,12(sp)
    9e20:	dc800217 	ldw	r18,8(sp)
    9e24:	dc400117 	ldw	r17,4(sp)
    9e28:	dc000017 	ldw	r16,0(sp)
    9e2c:	dec00504 	addi	sp,sp,20
    9e30:	f800283a 	ret
    9e34:	81401917 	ldw	r5,100(r16)
    9e38:	00b7ffc4 	movi	r2,-8193
    9e3c:	21080014 	ori	r4,r4,8192
    9e40:	2884703a 	and	r2,r5,r2
    9e44:	80801915 	stw	r2,100(r16)
    9e48:	80800017 	ldw	r2,0(r16)
    9e4c:	8100030d 	sth	r4,12(r16)
    9e50:	81000517 	ldw	r4,20(r16)
    9e54:	10c7c83a 	sub	r3,r2,r3
    9e58:	193fe016 	blt	r3,r4,9ddc <__alt_data_end+0xfffea9dc>
    9e5c:	800b883a 	mov	r5,r16
    9e60:	9009883a 	mov	r4,r18
    9e64:	00048c80 	call	48c8 <_fflush_r>
    9e68:	1000071e 	bne	r2,zero,9e88 <__swbuf_r+0x114>
    9e6c:	80800017 	ldw	r2,0(r16)
    9e70:	00c00044 	movi	r3,1
    9e74:	003fda06 	br	9de0 <__alt_data_end+0xfffea9e0>
    9e78:	800b883a 	mov	r5,r16
    9e7c:	9009883a 	mov	r4,r18
    9e80:	00048c80 	call	48c8 <_fflush_r>
    9e84:	103fe326 	beq	r2,zero,9e14 <__alt_data_end+0xfffeaa14>
    9e88:	00bfffc4 	movi	r2,-1
    9e8c:	003fe206 	br	9e18 <__alt_data_end+0xfffeaa18>
    9e90:	800b883a 	mov	r5,r16
    9e94:	9009883a 	mov	r4,r18
    9e98:	0002ca80 	call	2ca8 <__swsetup_r>
    9e9c:	103ffa1e 	bne	r2,zero,9e88 <__alt_data_end+0xfffeaa88>
    9ea0:	8100030b 	ldhu	r4,12(r16)
    9ea4:	80c00417 	ldw	r3,16(r16)
    9ea8:	003fc506 	br	9dc0 <__alt_data_end+0xfffea9c0>
    9eac:	0004cb40 	call	4cb4 <__sinit>
    9eb0:	003fbc06 	br	9da4 <__alt_data_end+0xfffea9a4>

00009eb4 <__swbuf>:
    9eb4:	00800074 	movhi	r2,1
    9eb8:	1086f304 	addi	r2,r2,7116
    9ebc:	280d883a 	mov	r6,r5
    9ec0:	200b883a 	mov	r5,r4
    9ec4:	11000017 	ldw	r4,0(r2)
    9ec8:	0009d741 	jmpi	9d74 <__swbuf_r>

00009ecc <_wcrtomb_r>:
    9ecc:	defff604 	addi	sp,sp,-40
    9ed0:	00800074 	movhi	r2,1
    9ed4:	dc800815 	stw	r18,32(sp)
    9ed8:	dc400715 	stw	r17,28(sp)
    9edc:	dc000615 	stw	r16,24(sp)
    9ee0:	1086f704 	addi	r2,r2,7132
    9ee4:	dfc00915 	stw	ra,36(sp)
    9ee8:	2021883a 	mov	r16,r4
    9eec:	3823883a 	mov	r17,r7
    9ef0:	14800017 	ldw	r18,0(r2)
    9ef4:	28001426 	beq	r5,zero,9f48 <_wcrtomb_r+0x7c>
    9ef8:	d9400415 	stw	r5,16(sp)
    9efc:	d9800515 	stw	r6,20(sp)
    9f00:	000533c0 	call	533c <__locale_charset>
    9f04:	d9800517 	ldw	r6,20(sp)
    9f08:	d9400417 	ldw	r5,16(sp)
    9f0c:	100f883a 	mov	r7,r2
    9f10:	dc400015 	stw	r17,0(sp)
    9f14:	8009883a 	mov	r4,r16
    9f18:	903ee83a 	callr	r18
    9f1c:	00ffffc4 	movi	r3,-1
    9f20:	10c0031e 	bne	r2,r3,9f30 <_wcrtomb_r+0x64>
    9f24:	88000015 	stw	zero,0(r17)
    9f28:	00c02284 	movi	r3,138
    9f2c:	80c00015 	stw	r3,0(r16)
    9f30:	dfc00917 	ldw	ra,36(sp)
    9f34:	dc800817 	ldw	r18,32(sp)
    9f38:	dc400717 	ldw	r17,28(sp)
    9f3c:	dc000617 	ldw	r16,24(sp)
    9f40:	dec00a04 	addi	sp,sp,40
    9f44:	f800283a 	ret
    9f48:	000533c0 	call	533c <__locale_charset>
    9f4c:	100f883a 	mov	r7,r2
    9f50:	dc400015 	stw	r17,0(sp)
    9f54:	000d883a 	mov	r6,zero
    9f58:	d9400104 	addi	r5,sp,4
    9f5c:	8009883a 	mov	r4,r16
    9f60:	903ee83a 	callr	r18
    9f64:	003fed06 	br	9f1c <__alt_data_end+0xfffeab1c>

00009f68 <wcrtomb>:
    9f68:	defff604 	addi	sp,sp,-40
    9f6c:	00800074 	movhi	r2,1
    9f70:	dc800615 	stw	r18,24(sp)
    9f74:	dc400515 	stw	r17,20(sp)
    9f78:	1086f304 	addi	r2,r2,7116
    9f7c:	dfc00915 	stw	ra,36(sp)
    9f80:	dd000815 	stw	r20,32(sp)
    9f84:	dcc00715 	stw	r19,28(sp)
    9f88:	dc000415 	stw	r16,16(sp)
    9f8c:	3025883a 	mov	r18,r6
    9f90:	14400017 	ldw	r17,0(r2)
    9f94:	20001926 	beq	r4,zero,9ffc <wcrtomb+0x94>
    9f98:	00800074 	movhi	r2,1
    9f9c:	1086f704 	addi	r2,r2,7132
    9fa0:	15000017 	ldw	r20,0(r2)
    9fa4:	2021883a 	mov	r16,r4
    9fa8:	2827883a 	mov	r19,r5
    9fac:	000533c0 	call	533c <__locale_charset>
    9fb0:	100f883a 	mov	r7,r2
    9fb4:	dc800015 	stw	r18,0(sp)
    9fb8:	980d883a 	mov	r6,r19
    9fbc:	800b883a 	mov	r5,r16
    9fc0:	8809883a 	mov	r4,r17
    9fc4:	a03ee83a 	callr	r20
    9fc8:	00ffffc4 	movi	r3,-1
    9fcc:	10c0031e 	bne	r2,r3,9fdc <wcrtomb+0x74>
    9fd0:	90000015 	stw	zero,0(r18)
    9fd4:	00c02284 	movi	r3,138
    9fd8:	88c00015 	stw	r3,0(r17)
    9fdc:	dfc00917 	ldw	ra,36(sp)
    9fe0:	dd000817 	ldw	r20,32(sp)
    9fe4:	dcc00717 	ldw	r19,28(sp)
    9fe8:	dc800617 	ldw	r18,24(sp)
    9fec:	dc400517 	ldw	r17,20(sp)
    9ff0:	dc000417 	ldw	r16,16(sp)
    9ff4:	dec00a04 	addi	sp,sp,40
    9ff8:	f800283a 	ret
    9ffc:	00800074 	movhi	r2,1
    a000:	1086f704 	addi	r2,r2,7132
    a004:	14000017 	ldw	r16,0(r2)
    a008:	000533c0 	call	533c <__locale_charset>
    a00c:	100f883a 	mov	r7,r2
    a010:	dc800015 	stw	r18,0(sp)
    a014:	000d883a 	mov	r6,zero
    a018:	d9400104 	addi	r5,sp,4
    a01c:	8809883a 	mov	r4,r17
    a020:	803ee83a 	callr	r16
    a024:	003fe806 	br	9fc8 <__alt_data_end+0xfffeabc8>

0000a028 <__ascii_wctomb>:
    a028:	28000526 	beq	r5,zero,a040 <__ascii_wctomb+0x18>
    a02c:	00803fc4 	movi	r2,255
    a030:	11800536 	bltu	r2,r6,a048 <__ascii_wctomb+0x20>
    a034:	29800005 	stb	r6,0(r5)
    a038:	00800044 	movi	r2,1
    a03c:	f800283a 	ret
    a040:	0005883a 	mov	r2,zero
    a044:	f800283a 	ret
    a048:	00802284 	movi	r2,138
    a04c:	20800015 	stw	r2,0(r4)
    a050:	00bfffc4 	movi	r2,-1
    a054:	f800283a 	ret

0000a058 <_wctomb_r>:
    a058:	00800074 	movhi	r2,1
    a05c:	defff904 	addi	sp,sp,-28
    a060:	1086f704 	addi	r2,r2,7132
    a064:	dfc00615 	stw	ra,24(sp)
    a068:	dc400515 	stw	r17,20(sp)
    a06c:	dc000415 	stw	r16,16(sp)
    a070:	3823883a 	mov	r17,r7
    a074:	14000017 	ldw	r16,0(r2)
    a078:	d9000115 	stw	r4,4(sp)
    a07c:	d9400215 	stw	r5,8(sp)
    a080:	d9800315 	stw	r6,12(sp)
    a084:	000533c0 	call	533c <__locale_charset>
    a088:	d9800317 	ldw	r6,12(sp)
    a08c:	d9400217 	ldw	r5,8(sp)
    a090:	d9000117 	ldw	r4,4(sp)
    a094:	100f883a 	mov	r7,r2
    a098:	dc400015 	stw	r17,0(sp)
    a09c:	803ee83a 	callr	r16
    a0a0:	dfc00617 	ldw	ra,24(sp)
    a0a4:	dc400517 	ldw	r17,20(sp)
    a0a8:	dc000417 	ldw	r16,16(sp)
    a0ac:	dec00704 	addi	sp,sp,28
    a0b0:	f800283a 	ret

0000a0b4 <__udivdi3>:
    a0b4:	defff404 	addi	sp,sp,-48
    a0b8:	dcc00515 	stw	r19,20(sp)
    a0bc:	dc000215 	stw	r16,8(sp)
    a0c0:	dfc00b15 	stw	ra,44(sp)
    a0c4:	df000a15 	stw	fp,40(sp)
    a0c8:	ddc00915 	stw	r23,36(sp)
    a0cc:	dd800815 	stw	r22,32(sp)
    a0d0:	dd400715 	stw	r21,28(sp)
    a0d4:	dd000615 	stw	r20,24(sp)
    a0d8:	dc800415 	stw	r18,16(sp)
    a0dc:	dc400315 	stw	r17,12(sp)
    a0e0:	2027883a 	mov	r19,r4
    a0e4:	2821883a 	mov	r16,r5
    a0e8:	3800461e 	bne	r7,zero,a204 <__udivdi3+0x150>
    a0ec:	3023883a 	mov	r17,r6
    a0f0:	2025883a 	mov	r18,r4
    a0f4:	2980572e 	bgeu	r5,r6,a254 <__udivdi3+0x1a0>
    a0f8:	00bfffd4 	movui	r2,65535
    a0fc:	282d883a 	mov	r22,r5
    a100:	1180b236 	bltu	r2,r6,a3cc <__udivdi3+0x318>
    a104:	00803fc4 	movi	r2,255
    a108:	1185803a 	cmpltu	r2,r2,r6
    a10c:	100490fa 	slli	r2,r2,3
    a110:	3086d83a 	srl	r3,r6,r2
    a114:	01000074 	movhi	r4,1
    a118:	213ffa04 	addi	r4,r4,-24
    a11c:	20c7883a 	add	r3,r4,r3
    a120:	18c00003 	ldbu	r3,0(r3)
    a124:	1885883a 	add	r2,r3,r2
    a128:	00c00804 	movi	r3,32
    a12c:	1887c83a 	sub	r3,r3,r2
    a130:	18000526 	beq	r3,zero,a148 <__udivdi3+0x94>
    a134:	80e0983a 	sll	r16,r16,r3
    a138:	9884d83a 	srl	r2,r19,r2
    a13c:	30e2983a 	sll	r17,r6,r3
    a140:	98e4983a 	sll	r18,r19,r3
    a144:	142cb03a 	or	r22,r2,r16
    a148:	882ad43a 	srli	r21,r17,16
    a14c:	b009883a 	mov	r4,r22
    a150:	8d3fffcc 	andi	r20,r17,65535
    a154:	a80b883a 	mov	r5,r21
    a158:	000add00 	call	add0 <__umodsi3>
    a15c:	b009883a 	mov	r4,r22
    a160:	a80b883a 	mov	r5,r21
    a164:	1027883a 	mov	r19,r2
    a168:	000ad6c0 	call	ad6c <__udivsi3>
    a16c:	100b883a 	mov	r5,r2
    a170:	a009883a 	mov	r4,r20
    a174:	102d883a 	mov	r22,r2
    a178:	000ae280 	call	ae28 <__mulsi3>
    a17c:	9826943a 	slli	r19,r19,16
    a180:	9006d43a 	srli	r3,r18,16
    a184:	1cc6b03a 	or	r3,r3,r19
    a188:	1880052e 	bgeu	r3,r2,a1a0 <__udivdi3+0xec>
    a18c:	1c47883a 	add	r3,r3,r17
    a190:	b13fffc4 	addi	r4,r22,-1
    a194:	1c400136 	bltu	r3,r17,a19c <__udivdi3+0xe8>
    a198:	18814236 	bltu	r3,r2,a6a4 <__udivdi3+0x5f0>
    a19c:	202d883a 	mov	r22,r4
    a1a0:	18a1c83a 	sub	r16,r3,r2
    a1a4:	8009883a 	mov	r4,r16
    a1a8:	a80b883a 	mov	r5,r21
    a1ac:	000add00 	call	add0 <__umodsi3>
    a1b0:	1027883a 	mov	r19,r2
    a1b4:	8009883a 	mov	r4,r16
    a1b8:	a80b883a 	mov	r5,r21
    a1bc:	9826943a 	slli	r19,r19,16
    a1c0:	000ad6c0 	call	ad6c <__udivsi3>
    a1c4:	100b883a 	mov	r5,r2
    a1c8:	a009883a 	mov	r4,r20
    a1cc:	94bfffcc 	andi	r18,r18,65535
    a1d0:	1021883a 	mov	r16,r2
    a1d4:	94e4b03a 	or	r18,r18,r19
    a1d8:	000ae280 	call	ae28 <__mulsi3>
    a1dc:	9080052e 	bgeu	r18,r2,a1f4 <__udivdi3+0x140>
    a1e0:	8ca5883a 	add	r18,r17,r18
    a1e4:	80ffffc4 	addi	r3,r16,-1
    a1e8:	94410c36 	bltu	r18,r17,a61c <__udivdi3+0x568>
    a1ec:	90810b2e 	bgeu	r18,r2,a61c <__udivdi3+0x568>
    a1f0:	843fff84 	addi	r16,r16,-2
    a1f4:	b004943a 	slli	r2,r22,16
    a1f8:	0007883a 	mov	r3,zero
    a1fc:	1404b03a 	or	r2,r2,r16
    a200:	00005e06 	br	a37c <__udivdi3+0x2c8>
    a204:	29c05b36 	bltu	r5,r7,a374 <__udivdi3+0x2c0>
    a208:	00bfffd4 	movui	r2,65535
    a20c:	11c0672e 	bgeu	r2,r7,a3ac <__udivdi3+0x2f8>
    a210:	00804034 	movhi	r2,256
    a214:	10bfffc4 	addi	r2,r2,-1
    a218:	11c10a36 	bltu	r2,r7,a644 <__udivdi3+0x590>
    a21c:	00800404 	movi	r2,16
    a220:	3886d83a 	srl	r3,r7,r2
    a224:	01000074 	movhi	r4,1
    a228:	213ffa04 	addi	r4,r4,-24
    a22c:	20c7883a 	add	r3,r4,r3
    a230:	18c00003 	ldbu	r3,0(r3)
    a234:	05c00804 	movi	r23,32
    a238:	1885883a 	add	r2,r3,r2
    a23c:	b8afc83a 	sub	r23,r23,r2
    a240:	b800671e 	bne	r23,zero,a3e0 <__udivdi3+0x32c>
    a244:	3c010536 	bltu	r7,r16,a65c <__udivdi3+0x5a8>
    a248:	9985403a 	cmpgeu	r2,r19,r6
    a24c:	0007883a 	mov	r3,zero
    a250:	00004a06 	br	a37c <__udivdi3+0x2c8>
    a254:	3000041e 	bne	r6,zero,a268 <__udivdi3+0x1b4>
    a258:	000b883a 	mov	r5,zero
    a25c:	01000044 	movi	r4,1
    a260:	000ad6c0 	call	ad6c <__udivsi3>
    a264:	1023883a 	mov	r17,r2
    a268:	00bfffd4 	movui	r2,65535
    a26c:	1440532e 	bgeu	r2,r17,a3bc <__udivdi3+0x308>
    a270:	00804034 	movhi	r2,256
    a274:	10bfffc4 	addi	r2,r2,-1
    a278:	1440f436 	bltu	r2,r17,a64c <__udivdi3+0x598>
    a27c:	00800404 	movi	r2,16
    a280:	8886d83a 	srl	r3,r17,r2
    a284:	01000074 	movhi	r4,1
    a288:	213ffa04 	addi	r4,r4,-24
    a28c:	20c7883a 	add	r3,r4,r3
    a290:	18c00003 	ldbu	r3,0(r3)
    a294:	1885883a 	add	r2,r3,r2
    a298:	00c00804 	movi	r3,32
    a29c:	1887c83a 	sub	r3,r3,r2
    a2a0:	1800a51e 	bne	r3,zero,a538 <__udivdi3+0x484>
    a2a4:	882ad43a 	srli	r21,r17,16
    a2a8:	8461c83a 	sub	r16,r16,r17
    a2ac:	8d3fffcc 	andi	r20,r17,65535
    a2b0:	00c00044 	movi	r3,1
    a2b4:	a80b883a 	mov	r5,r21
    a2b8:	8009883a 	mov	r4,r16
    a2bc:	d8c00115 	stw	r3,4(sp)
    a2c0:	000add00 	call	add0 <__umodsi3>
    a2c4:	a80b883a 	mov	r5,r21
    a2c8:	8009883a 	mov	r4,r16
    a2cc:	1027883a 	mov	r19,r2
    a2d0:	000ad6c0 	call	ad6c <__udivsi3>
    a2d4:	a00b883a 	mov	r5,r20
    a2d8:	1009883a 	mov	r4,r2
    a2dc:	102d883a 	mov	r22,r2
    a2e0:	000ae280 	call	ae28 <__mulsi3>
    a2e4:	9826943a 	slli	r19,r19,16
    a2e8:	900ed43a 	srli	r7,r18,16
    a2ec:	d8c00117 	ldw	r3,4(sp)
    a2f0:	3cceb03a 	or	r7,r7,r19
    a2f4:	3880052e 	bgeu	r7,r2,a30c <__udivdi3+0x258>
    a2f8:	3c4f883a 	add	r7,r7,r17
    a2fc:	b13fffc4 	addi	r4,r22,-1
    a300:	3c400136 	bltu	r7,r17,a308 <__udivdi3+0x254>
    a304:	3880e436 	bltu	r7,r2,a698 <__udivdi3+0x5e4>
    a308:	202d883a 	mov	r22,r4
    a30c:	38a1c83a 	sub	r16,r7,r2
    a310:	8009883a 	mov	r4,r16
    a314:	a80b883a 	mov	r5,r21
    a318:	d8c00115 	stw	r3,4(sp)
    a31c:	000add00 	call	add0 <__umodsi3>
    a320:	1027883a 	mov	r19,r2
    a324:	8009883a 	mov	r4,r16
    a328:	a80b883a 	mov	r5,r21
    a32c:	9826943a 	slli	r19,r19,16
    a330:	000ad6c0 	call	ad6c <__udivsi3>
    a334:	a00b883a 	mov	r5,r20
    a338:	1009883a 	mov	r4,r2
    a33c:	94bfffcc 	andi	r18,r18,65535
    a340:	1021883a 	mov	r16,r2
    a344:	94e4b03a 	or	r18,r18,r19
    a348:	000ae280 	call	ae28 <__mulsi3>
    a34c:	d8c00117 	ldw	r3,4(sp)
    a350:	9080052e 	bgeu	r18,r2,a368 <__udivdi3+0x2b4>
    a354:	8ca5883a 	add	r18,r17,r18
    a358:	813fffc4 	addi	r4,r16,-1
    a35c:	9440ad36 	bltu	r18,r17,a614 <__udivdi3+0x560>
    a360:	9080ac2e 	bgeu	r18,r2,a614 <__udivdi3+0x560>
    a364:	843fff84 	addi	r16,r16,-2
    a368:	b004943a 	slli	r2,r22,16
    a36c:	1404b03a 	or	r2,r2,r16
    a370:	00000206 	br	a37c <__udivdi3+0x2c8>
    a374:	0007883a 	mov	r3,zero
    a378:	0005883a 	mov	r2,zero
    a37c:	dfc00b17 	ldw	ra,44(sp)
    a380:	df000a17 	ldw	fp,40(sp)
    a384:	ddc00917 	ldw	r23,36(sp)
    a388:	dd800817 	ldw	r22,32(sp)
    a38c:	dd400717 	ldw	r21,28(sp)
    a390:	dd000617 	ldw	r20,24(sp)
    a394:	dcc00517 	ldw	r19,20(sp)
    a398:	dc800417 	ldw	r18,16(sp)
    a39c:	dc400317 	ldw	r17,12(sp)
    a3a0:	dc000217 	ldw	r16,8(sp)
    a3a4:	dec00c04 	addi	sp,sp,48
    a3a8:	f800283a 	ret
    a3ac:	00803fc4 	movi	r2,255
    a3b0:	11c5803a 	cmpltu	r2,r2,r7
    a3b4:	100490fa 	slli	r2,r2,3
    a3b8:	003f9906 	br	a220 <__alt_data_end+0xfffeae20>
    a3bc:	00803fc4 	movi	r2,255
    a3c0:	1445803a 	cmpltu	r2,r2,r17
    a3c4:	100490fa 	slli	r2,r2,3
    a3c8:	003fad06 	br	a280 <__alt_data_end+0xfffeae80>
    a3cc:	00804034 	movhi	r2,256
    a3d0:	10bfffc4 	addi	r2,r2,-1
    a3d4:	11809f36 	bltu	r2,r6,a654 <__udivdi3+0x5a0>
    a3d8:	00800404 	movi	r2,16
    a3dc:	003f4c06 	br	a110 <__alt_data_end+0xfffead10>
    a3e0:	3dce983a 	sll	r7,r7,r23
    a3e4:	30b8d83a 	srl	fp,r6,r2
    a3e8:	80a2d83a 	srl	r17,r16,r2
    a3ec:	35cc983a 	sll	r6,r6,r23
    a3f0:	3f38b03a 	or	fp,r7,fp
    a3f4:	e024d43a 	srli	r18,fp,16
    a3f8:	9884d83a 	srl	r2,r19,r2
    a3fc:	85e0983a 	sll	r16,r16,r23
    a400:	8809883a 	mov	r4,r17
    a404:	900b883a 	mov	r5,r18
    a408:	d9800015 	stw	r6,0(sp)
    a40c:	1420b03a 	or	r16,r2,r16
    a410:	000add00 	call	add0 <__umodsi3>
    a414:	900b883a 	mov	r5,r18
    a418:	8809883a 	mov	r4,r17
    a41c:	1029883a 	mov	r20,r2
    a420:	e5bfffcc 	andi	r22,fp,65535
    a424:	000ad6c0 	call	ad6c <__udivsi3>
    a428:	100b883a 	mov	r5,r2
    a42c:	b009883a 	mov	r4,r22
    a430:	102b883a 	mov	r21,r2
    a434:	000ae280 	call	ae28 <__mulsi3>
    a438:	a028943a 	slli	r20,r20,16
    a43c:	8006d43a 	srli	r3,r16,16
    a440:	1d06b03a 	or	r3,r3,r20
    a444:	1880042e 	bgeu	r3,r2,a458 <__udivdi3+0x3a4>
    a448:	1f07883a 	add	r3,r3,fp
    a44c:	a93fffc4 	addi	r4,r21,-1
    a450:	1f00892e 	bgeu	r3,fp,a678 <__udivdi3+0x5c4>
    a454:	202b883a 	mov	r21,r4
    a458:	18a3c83a 	sub	r17,r3,r2
    a45c:	8809883a 	mov	r4,r17
    a460:	900b883a 	mov	r5,r18
    a464:	000add00 	call	add0 <__umodsi3>
    a468:	1029883a 	mov	r20,r2
    a46c:	8809883a 	mov	r4,r17
    a470:	900b883a 	mov	r5,r18
    a474:	a028943a 	slli	r20,r20,16
    a478:	000ad6c0 	call	ad6c <__udivsi3>
    a47c:	100b883a 	mov	r5,r2
    a480:	b009883a 	mov	r4,r22
    a484:	843fffcc 	andi	r16,r16,65535
    a488:	1023883a 	mov	r17,r2
    a48c:	8520b03a 	or	r16,r16,r20
    a490:	000ae280 	call	ae28 <__mulsi3>
    a494:	8080042e 	bgeu	r16,r2,a4a8 <__udivdi3+0x3f4>
    a498:	8721883a 	add	r16,r16,fp
    a49c:	88ffffc4 	addi	r3,r17,-1
    a4a0:	8700712e 	bgeu	r16,fp,a668 <__udivdi3+0x5b4>
    a4a4:	1823883a 	mov	r17,r3
    a4a8:	a80e943a 	slli	r7,r21,16
    a4ac:	d8c00017 	ldw	r3,0(sp)
    a4b0:	80a1c83a 	sub	r16,r16,r2
    a4b4:	3c64b03a 	or	r18,r7,r17
    a4b8:	1d3fffcc 	andi	r20,r3,65535
    a4bc:	9022d43a 	srli	r17,r18,16
    a4c0:	95bfffcc 	andi	r22,r18,65535
    a4c4:	a00b883a 	mov	r5,r20
    a4c8:	b009883a 	mov	r4,r22
    a4cc:	182ad43a 	srli	r21,r3,16
    a4d0:	000ae280 	call	ae28 <__mulsi3>
    a4d4:	a00b883a 	mov	r5,r20
    a4d8:	8809883a 	mov	r4,r17
    a4dc:	1039883a 	mov	fp,r2
    a4e0:	000ae280 	call	ae28 <__mulsi3>
    a4e4:	8809883a 	mov	r4,r17
    a4e8:	a80b883a 	mov	r5,r21
    a4ec:	1029883a 	mov	r20,r2
    a4f0:	000ae280 	call	ae28 <__mulsi3>
    a4f4:	a80b883a 	mov	r5,r21
    a4f8:	b009883a 	mov	r4,r22
    a4fc:	1023883a 	mov	r17,r2
    a500:	000ae280 	call	ae28 <__mulsi3>
    a504:	e006d43a 	srli	r3,fp,16
    a508:	1505883a 	add	r2,r2,r20
    a50c:	1887883a 	add	r3,r3,r2
    a510:	1d00022e 	bgeu	r3,r20,a51c <__udivdi3+0x468>
    a514:	00800074 	movhi	r2,1
    a518:	88a3883a 	add	r17,r17,r2
    a51c:	1804d43a 	srli	r2,r3,16
    a520:	1463883a 	add	r17,r2,r17
    a524:	84404436 	bltu	r16,r17,a638 <__udivdi3+0x584>
    a528:	84403e26 	beq	r16,r17,a624 <__udivdi3+0x570>
    a52c:	9005883a 	mov	r2,r18
    a530:	0007883a 	mov	r3,zero
    a534:	003f9106 	br	a37c <__alt_data_end+0xfffeaf7c>
    a538:	88e2983a 	sll	r17,r17,r3
    a53c:	80aed83a 	srl	r23,r16,r2
    a540:	80e0983a 	sll	r16,r16,r3
    a544:	882ad43a 	srli	r21,r17,16
    a548:	9884d83a 	srl	r2,r19,r2
    a54c:	b809883a 	mov	r4,r23
    a550:	a80b883a 	mov	r5,r21
    a554:	98e4983a 	sll	r18,r19,r3
    a558:	142cb03a 	or	r22,r2,r16
    a55c:	000add00 	call	add0 <__umodsi3>
    a560:	b809883a 	mov	r4,r23
    a564:	a80b883a 	mov	r5,r21
    a568:	1027883a 	mov	r19,r2
    a56c:	8d3fffcc 	andi	r20,r17,65535
    a570:	000ad6c0 	call	ad6c <__udivsi3>
    a574:	a009883a 	mov	r4,r20
    a578:	100b883a 	mov	r5,r2
    a57c:	102f883a 	mov	r23,r2
    a580:	000ae280 	call	ae28 <__mulsi3>
    a584:	9826943a 	slli	r19,r19,16
    a588:	b008d43a 	srli	r4,r22,16
    a58c:	24c8b03a 	or	r4,r4,r19
    a590:	2080062e 	bgeu	r4,r2,a5ac <__udivdi3+0x4f8>
    a594:	2449883a 	add	r4,r4,r17
    a598:	b8ffffc4 	addi	r3,r23,-1
    a59c:	24403c36 	bltu	r4,r17,a690 <__udivdi3+0x5dc>
    a5a0:	20803b2e 	bgeu	r4,r2,a690 <__udivdi3+0x5dc>
    a5a4:	bdffff84 	addi	r23,r23,-2
    a5a8:	2449883a 	add	r4,r4,r17
    a5ac:	20a1c83a 	sub	r16,r4,r2
    a5b0:	a80b883a 	mov	r5,r21
    a5b4:	8009883a 	mov	r4,r16
    a5b8:	000add00 	call	add0 <__umodsi3>
    a5bc:	a80b883a 	mov	r5,r21
    a5c0:	8009883a 	mov	r4,r16
    a5c4:	1027883a 	mov	r19,r2
    a5c8:	000ad6c0 	call	ad6c <__udivsi3>
    a5cc:	a009883a 	mov	r4,r20
    a5d0:	100b883a 	mov	r5,r2
    a5d4:	9826943a 	slli	r19,r19,16
    a5d8:	1039883a 	mov	fp,r2
    a5dc:	000ae280 	call	ae28 <__mulsi3>
    a5e0:	b13fffcc 	andi	r4,r22,65535
    a5e4:	24c8b03a 	or	r4,r4,r19
    a5e8:	2080062e 	bgeu	r4,r2,a604 <__udivdi3+0x550>
    a5ec:	2449883a 	add	r4,r4,r17
    a5f0:	e0ffffc4 	addi	r3,fp,-1
    a5f4:	24402436 	bltu	r4,r17,a688 <__udivdi3+0x5d4>
    a5f8:	2080232e 	bgeu	r4,r2,a688 <__udivdi3+0x5d4>
    a5fc:	e73fff84 	addi	fp,fp,-2
    a600:	2449883a 	add	r4,r4,r17
    a604:	b82e943a 	slli	r23,r23,16
    a608:	20a1c83a 	sub	r16,r4,r2
    a60c:	bf06b03a 	or	r3,r23,fp
    a610:	003f2806 	br	a2b4 <__alt_data_end+0xfffeaeb4>
    a614:	2021883a 	mov	r16,r4
    a618:	003f5306 	br	a368 <__alt_data_end+0xfffeaf68>
    a61c:	1821883a 	mov	r16,r3
    a620:	003ef406 	br	a1f4 <__alt_data_end+0xfffeadf4>
    a624:	1806943a 	slli	r3,r3,16
    a628:	9de6983a 	sll	r19,r19,r23
    a62c:	e73fffcc 	andi	fp,fp,65535
    a630:	1f07883a 	add	r3,r3,fp
    a634:	98ffbd2e 	bgeu	r19,r3,a52c <__alt_data_end+0xfffeb12c>
    a638:	90bfffc4 	addi	r2,r18,-1
    a63c:	0007883a 	mov	r3,zero
    a640:	003f4e06 	br	a37c <__alt_data_end+0xfffeaf7c>
    a644:	00800604 	movi	r2,24
    a648:	003ef506 	br	a220 <__alt_data_end+0xfffeae20>
    a64c:	00800604 	movi	r2,24
    a650:	003f0b06 	br	a280 <__alt_data_end+0xfffeae80>
    a654:	00800604 	movi	r2,24
    a658:	003ead06 	br	a110 <__alt_data_end+0xfffead10>
    a65c:	0007883a 	mov	r3,zero
    a660:	00800044 	movi	r2,1
    a664:	003f4506 	br	a37c <__alt_data_end+0xfffeaf7c>
    a668:	80bf8e2e 	bgeu	r16,r2,a4a4 <__alt_data_end+0xfffeb0a4>
    a66c:	8c7fff84 	addi	r17,r17,-2
    a670:	8721883a 	add	r16,r16,fp
    a674:	003f8c06 	br	a4a8 <__alt_data_end+0xfffeb0a8>
    a678:	18bf762e 	bgeu	r3,r2,a454 <__alt_data_end+0xfffeb054>
    a67c:	ad7fff84 	addi	r21,r21,-2
    a680:	1f07883a 	add	r3,r3,fp
    a684:	003f7406 	br	a458 <__alt_data_end+0xfffeb058>
    a688:	1839883a 	mov	fp,r3
    a68c:	003fdd06 	br	a604 <__alt_data_end+0xfffeb204>
    a690:	182f883a 	mov	r23,r3
    a694:	003fc506 	br	a5ac <__alt_data_end+0xfffeb1ac>
    a698:	b5bfff84 	addi	r22,r22,-2
    a69c:	3c4f883a 	add	r7,r7,r17
    a6a0:	003f1a06 	br	a30c <__alt_data_end+0xfffeaf0c>
    a6a4:	b5bfff84 	addi	r22,r22,-2
    a6a8:	1c47883a 	add	r3,r3,r17
    a6ac:	003ebc06 	br	a1a0 <__alt_data_end+0xfffeada0>

0000a6b0 <__umoddi3>:
    a6b0:	defff304 	addi	sp,sp,-52
    a6b4:	df000b15 	stw	fp,44(sp)
    a6b8:	dc400415 	stw	r17,16(sp)
    a6bc:	dc000315 	stw	r16,12(sp)
    a6c0:	dfc00c15 	stw	ra,48(sp)
    a6c4:	ddc00a15 	stw	r23,40(sp)
    a6c8:	dd800915 	stw	r22,36(sp)
    a6cc:	dd400815 	stw	r21,32(sp)
    a6d0:	dd000715 	stw	r20,28(sp)
    a6d4:	dcc00615 	stw	r19,24(sp)
    a6d8:	dc800515 	stw	r18,20(sp)
    a6dc:	2021883a 	mov	r16,r4
    a6e0:	2823883a 	mov	r17,r5
    a6e4:	2839883a 	mov	fp,r5
    a6e8:	3800401e 	bne	r7,zero,a7ec <__umoddi3+0x13c>
    a6ec:	3027883a 	mov	r19,r6
    a6f0:	2029883a 	mov	r20,r4
    a6f4:	2980552e 	bgeu	r5,r6,a84c <__umoddi3+0x19c>
    a6f8:	00bfffd4 	movui	r2,65535
    a6fc:	1180a236 	bltu	r2,r6,a988 <__umoddi3+0x2d8>
    a700:	01003fc4 	movi	r4,255
    a704:	2189803a 	cmpltu	r4,r4,r6
    a708:	200890fa 	slli	r4,r4,3
    a70c:	3104d83a 	srl	r2,r6,r4
    a710:	00c00074 	movhi	r3,1
    a714:	18fffa04 	addi	r3,r3,-24
    a718:	1885883a 	add	r2,r3,r2
    a71c:	10c00003 	ldbu	r3,0(r2)
    a720:	00800804 	movi	r2,32
    a724:	1909883a 	add	r4,r3,r4
    a728:	1125c83a 	sub	r18,r2,r4
    a72c:	90000526 	beq	r18,zero,a744 <__umoddi3+0x94>
    a730:	8ca2983a 	sll	r17,r17,r18
    a734:	8108d83a 	srl	r4,r16,r4
    a738:	34a6983a 	sll	r19,r6,r18
    a73c:	84a8983a 	sll	r20,r16,r18
    a740:	2478b03a 	or	fp,r4,r17
    a744:	982cd43a 	srli	r22,r19,16
    a748:	e009883a 	mov	r4,fp
    a74c:	9dffffcc 	andi	r23,r19,65535
    a750:	b00b883a 	mov	r5,r22
    a754:	000add00 	call	add0 <__umodsi3>
    a758:	b00b883a 	mov	r5,r22
    a75c:	e009883a 	mov	r4,fp
    a760:	102b883a 	mov	r21,r2
    a764:	000ad6c0 	call	ad6c <__udivsi3>
    a768:	100b883a 	mov	r5,r2
    a76c:	b809883a 	mov	r4,r23
    a770:	000ae280 	call	ae28 <__mulsi3>
    a774:	a82a943a 	slli	r21,r21,16
    a778:	a006d43a 	srli	r3,r20,16
    a77c:	1d46b03a 	or	r3,r3,r21
    a780:	1880032e 	bgeu	r3,r2,a790 <__umoddi3+0xe0>
    a784:	1cc7883a 	add	r3,r3,r19
    a788:	1cc00136 	bltu	r3,r19,a790 <__umoddi3+0xe0>
    a78c:	18813136 	bltu	r3,r2,ac54 <__umoddi3+0x5a4>
    a790:	18a1c83a 	sub	r16,r3,r2
    a794:	b00b883a 	mov	r5,r22
    a798:	8009883a 	mov	r4,r16
    a79c:	000add00 	call	add0 <__umodsi3>
    a7a0:	b00b883a 	mov	r5,r22
    a7a4:	8009883a 	mov	r4,r16
    a7a8:	1023883a 	mov	r17,r2
    a7ac:	000ad6c0 	call	ad6c <__udivsi3>
    a7b0:	100b883a 	mov	r5,r2
    a7b4:	b809883a 	mov	r4,r23
    a7b8:	8822943a 	slli	r17,r17,16
    a7bc:	000ae280 	call	ae28 <__mulsi3>
    a7c0:	a0ffffcc 	andi	r3,r20,65535
    a7c4:	1c46b03a 	or	r3,r3,r17
    a7c8:	1880042e 	bgeu	r3,r2,a7dc <__umoddi3+0x12c>
    a7cc:	1cc7883a 	add	r3,r3,r19
    a7d0:	1cc00236 	bltu	r3,r19,a7dc <__umoddi3+0x12c>
    a7d4:	1880012e 	bgeu	r3,r2,a7dc <__umoddi3+0x12c>
    a7d8:	1cc7883a 	add	r3,r3,r19
    a7dc:	1885c83a 	sub	r2,r3,r2
    a7e0:	1484d83a 	srl	r2,r2,r18
    a7e4:	0007883a 	mov	r3,zero
    a7e8:	00005306 	br	a938 <__umoddi3+0x288>
    a7ec:	29c05036 	bltu	r5,r7,a930 <__umoddi3+0x280>
    a7f0:	00bfffd4 	movui	r2,65535
    a7f4:	11c05c2e 	bgeu	r2,r7,a968 <__umoddi3+0x2b8>
    a7f8:	00804034 	movhi	r2,256
    a7fc:	10bfffc4 	addi	r2,r2,-1
    a800:	11c10636 	bltu	r2,r7,ac1c <__umoddi3+0x56c>
    a804:	01000404 	movi	r4,16
    a808:	3904d83a 	srl	r2,r7,r4
    a80c:	00c00074 	movhi	r3,1
    a810:	18fffa04 	addi	r3,r3,-24
    a814:	1885883a 	add	r2,r3,r2
    a818:	14c00003 	ldbu	r19,0(r2)
    a81c:	00c00804 	movi	r3,32
    a820:	9927883a 	add	r19,r19,r4
    a824:	1ce9c83a 	sub	r20,r3,r19
    a828:	a0005c1e 	bne	r20,zero,a99c <__umoddi3+0x2ec>
    a82c:	3c400136 	bltu	r7,r17,a834 <__umoddi3+0x184>
    a830:	81810a36 	bltu	r16,r6,ac5c <__umoddi3+0x5ac>
    a834:	8185c83a 	sub	r2,r16,r6
    a838:	89e3c83a 	sub	r17,r17,r7
    a83c:	8089803a 	cmpltu	r4,r16,r2
    a840:	8939c83a 	sub	fp,r17,r4
    a844:	e007883a 	mov	r3,fp
    a848:	00003b06 	br	a938 <__umoddi3+0x288>
    a84c:	3000041e 	bne	r6,zero,a860 <__umoddi3+0x1b0>
    a850:	000b883a 	mov	r5,zero
    a854:	01000044 	movi	r4,1
    a858:	000ad6c0 	call	ad6c <__udivsi3>
    a85c:	1027883a 	mov	r19,r2
    a860:	00bfffd4 	movui	r2,65535
    a864:	14c0442e 	bgeu	r2,r19,a978 <__umoddi3+0x2c8>
    a868:	00804034 	movhi	r2,256
    a86c:	10bfffc4 	addi	r2,r2,-1
    a870:	14c0ec36 	bltu	r2,r19,ac24 <__umoddi3+0x574>
    a874:	00800404 	movi	r2,16
    a878:	9886d83a 	srl	r3,r19,r2
    a87c:	01000074 	movhi	r4,1
    a880:	213ffa04 	addi	r4,r4,-24
    a884:	20c7883a 	add	r3,r4,r3
    a888:	18c00003 	ldbu	r3,0(r3)
    a88c:	1887883a 	add	r3,r3,r2
    a890:	00800804 	movi	r2,32
    a894:	10e5c83a 	sub	r18,r2,r3
    a898:	9000ab1e 	bne	r18,zero,ab48 <__umoddi3+0x498>
    a89c:	982cd43a 	srli	r22,r19,16
    a8a0:	8ce3c83a 	sub	r17,r17,r19
    a8a4:	9dffffcc 	andi	r23,r19,65535
    a8a8:	b00b883a 	mov	r5,r22
    a8ac:	8809883a 	mov	r4,r17
    a8b0:	000add00 	call	add0 <__umodsi3>
    a8b4:	b00b883a 	mov	r5,r22
    a8b8:	8809883a 	mov	r4,r17
    a8bc:	102b883a 	mov	r21,r2
    a8c0:	000ad6c0 	call	ad6c <__udivsi3>
    a8c4:	b80b883a 	mov	r5,r23
    a8c8:	1009883a 	mov	r4,r2
    a8cc:	000ae280 	call	ae28 <__mulsi3>
    a8d0:	a82a943a 	slli	r21,r21,16
    a8d4:	a006d43a 	srli	r3,r20,16
    a8d8:	1d46b03a 	or	r3,r3,r21
    a8dc:	1880042e 	bgeu	r3,r2,a8f0 <__umoddi3+0x240>
    a8e0:	1cc7883a 	add	r3,r3,r19
    a8e4:	1cc00236 	bltu	r3,r19,a8f0 <__umoddi3+0x240>
    a8e8:	1880012e 	bgeu	r3,r2,a8f0 <__umoddi3+0x240>
    a8ec:	1cc7883a 	add	r3,r3,r19
    a8f0:	18a1c83a 	sub	r16,r3,r2
    a8f4:	b00b883a 	mov	r5,r22
    a8f8:	8009883a 	mov	r4,r16
    a8fc:	000add00 	call	add0 <__umodsi3>
    a900:	1023883a 	mov	r17,r2
    a904:	b00b883a 	mov	r5,r22
    a908:	8009883a 	mov	r4,r16
    a90c:	000ad6c0 	call	ad6c <__udivsi3>
    a910:	8822943a 	slli	r17,r17,16
    a914:	b80b883a 	mov	r5,r23
    a918:	1009883a 	mov	r4,r2
    a91c:	000ae280 	call	ae28 <__mulsi3>
    a920:	a53fffcc 	andi	r20,r20,65535
    a924:	a446b03a 	or	r3,r20,r17
    a928:	18bfac2e 	bgeu	r3,r2,a7dc <__alt_data_end+0xfffeb3dc>
    a92c:	003fa706 	br	a7cc <__alt_data_end+0xfffeb3cc>
    a930:	2005883a 	mov	r2,r4
    a934:	2807883a 	mov	r3,r5
    a938:	dfc00c17 	ldw	ra,48(sp)
    a93c:	df000b17 	ldw	fp,44(sp)
    a940:	ddc00a17 	ldw	r23,40(sp)
    a944:	dd800917 	ldw	r22,36(sp)
    a948:	dd400817 	ldw	r21,32(sp)
    a94c:	dd000717 	ldw	r20,28(sp)
    a950:	dcc00617 	ldw	r19,24(sp)
    a954:	dc800517 	ldw	r18,20(sp)
    a958:	dc400417 	ldw	r17,16(sp)
    a95c:	dc000317 	ldw	r16,12(sp)
    a960:	dec00d04 	addi	sp,sp,52
    a964:	f800283a 	ret
    a968:	04c03fc4 	movi	r19,255
    a96c:	99c9803a 	cmpltu	r4,r19,r7
    a970:	200890fa 	slli	r4,r4,3
    a974:	003fa406 	br	a808 <__alt_data_end+0xfffeb408>
    a978:	00803fc4 	movi	r2,255
    a97c:	14c5803a 	cmpltu	r2,r2,r19
    a980:	100490fa 	slli	r2,r2,3
    a984:	003fbc06 	br	a878 <__alt_data_end+0xfffeb478>
    a988:	00804034 	movhi	r2,256
    a98c:	10bfffc4 	addi	r2,r2,-1
    a990:	1180a636 	bltu	r2,r6,ac2c <__umoddi3+0x57c>
    a994:	01000404 	movi	r4,16
    a998:	003f5c06 	br	a70c <__alt_data_end+0xfffeb30c>
    a99c:	3d0e983a 	sll	r7,r7,r20
    a9a0:	34ead83a 	srl	r21,r6,r19
    a9a4:	8cc6d83a 	srl	r3,r17,r19
    a9a8:	8d10983a 	sll	r8,r17,r20
    a9ac:	3d6ab03a 	or	r21,r7,r21
    a9b0:	a82cd43a 	srli	r22,r21,16
    a9b4:	84e2d83a 	srl	r17,r16,r19
    a9b8:	1809883a 	mov	r4,r3
    a9bc:	b00b883a 	mov	r5,r22
    a9c0:	8a22b03a 	or	r17,r17,r8
    a9c4:	3524983a 	sll	r18,r6,r20
    a9c8:	dc400015 	stw	r17,0(sp)
    a9cc:	d8c00115 	stw	r3,4(sp)
    a9d0:	000add00 	call	add0 <__umodsi3>
    a9d4:	d8c00117 	ldw	r3,4(sp)
    a9d8:	b00b883a 	mov	r5,r22
    a9dc:	1039883a 	mov	fp,r2
    a9e0:	1809883a 	mov	r4,r3
    a9e4:	000ad6c0 	call	ad6c <__udivsi3>
    a9e8:	adffffcc 	andi	r23,r21,65535
    a9ec:	100b883a 	mov	r5,r2
    a9f0:	b809883a 	mov	r4,r23
    a9f4:	1023883a 	mov	r17,r2
    a9f8:	000ae280 	call	ae28 <__mulsi3>
    a9fc:	d9400017 	ldw	r5,0(sp)
    aa00:	e008943a 	slli	r4,fp,16
    aa04:	8520983a 	sll	r16,r16,r20
    aa08:	2806d43a 	srli	r3,r5,16
    aa0c:	1906b03a 	or	r3,r3,r4
    aa10:	1880042e 	bgeu	r3,r2,aa24 <__umoddi3+0x374>
    aa14:	1d47883a 	add	r3,r3,r21
    aa18:	893fffc4 	addi	r4,r17,-1
    aa1c:	1d40892e 	bgeu	r3,r21,ac44 <__umoddi3+0x594>
    aa20:	2023883a 	mov	r17,r4
    aa24:	18b9c83a 	sub	fp,r3,r2
    aa28:	b00b883a 	mov	r5,r22
    aa2c:	e009883a 	mov	r4,fp
    aa30:	000add00 	call	add0 <__umodsi3>
    aa34:	b00b883a 	mov	r5,r22
    aa38:	e009883a 	mov	r4,fp
    aa3c:	d8800215 	stw	r2,8(sp)
    aa40:	000ad6c0 	call	ad6c <__udivsi3>
    aa44:	100b883a 	mov	r5,r2
    aa48:	b809883a 	mov	r4,r23
    aa4c:	102d883a 	mov	r22,r2
    aa50:	000ae280 	call	ae28 <__mulsi3>
    aa54:	d9800217 	ldw	r6,8(sp)
    aa58:	d8c00017 	ldw	r3,0(sp)
    aa5c:	300c943a 	slli	r6,r6,16
    aa60:	1a3fffcc 	andi	r8,r3,65535
    aa64:	4190b03a 	or	r8,r8,r6
    aa68:	4080042e 	bgeu	r8,r2,aa7c <__umoddi3+0x3cc>
    aa6c:	4551883a 	add	r8,r8,r21
    aa70:	b0ffffc4 	addi	r3,r22,-1
    aa74:	45406f2e 	bgeu	r8,r21,ac34 <__umoddi3+0x584>
    aa78:	182d883a 	mov	r22,r3
    aa7c:	880e943a 	slli	r7,r17,16
    aa80:	9006d43a 	srli	r3,r18,16
    aa84:	91bfffcc 	andi	r6,r18,65535
    aa88:	3dacb03a 	or	r22,r7,r22
    aa8c:	b02ed43a 	srli	r23,r22,16
    aa90:	b5bfffcc 	andi	r22,r22,65535
    aa94:	300b883a 	mov	r5,r6
    aa98:	b009883a 	mov	r4,r22
    aa9c:	40a3c83a 	sub	r17,r8,r2
    aaa0:	d8c00115 	stw	r3,4(sp)
    aaa4:	d9800215 	stw	r6,8(sp)
    aaa8:	000ae280 	call	ae28 <__mulsi3>
    aaac:	d9800217 	ldw	r6,8(sp)
    aab0:	b809883a 	mov	r4,r23
    aab4:	1039883a 	mov	fp,r2
    aab8:	300b883a 	mov	r5,r6
    aabc:	000ae280 	call	ae28 <__mulsi3>
    aac0:	d8c00117 	ldw	r3,4(sp)
    aac4:	b809883a 	mov	r4,r23
    aac8:	d8800215 	stw	r2,8(sp)
    aacc:	180b883a 	mov	r5,r3
    aad0:	000ae280 	call	ae28 <__mulsi3>
    aad4:	d8c00117 	ldw	r3,4(sp)
    aad8:	b009883a 	mov	r4,r22
    aadc:	102f883a 	mov	r23,r2
    aae0:	180b883a 	mov	r5,r3
    aae4:	000ae280 	call	ae28 <__mulsi3>
    aae8:	d9800217 	ldw	r6,8(sp)
    aaec:	e006d43a 	srli	r3,fp,16
    aaf0:	1185883a 	add	r2,r2,r6
    aaf4:	1885883a 	add	r2,r3,r2
    aaf8:	1180022e 	bgeu	r2,r6,ab04 <__umoddi3+0x454>
    aafc:	00c00074 	movhi	r3,1
    ab00:	b8ef883a 	add	r23,r23,r3
    ab04:	1006d43a 	srli	r3,r2,16
    ab08:	1004943a 	slli	r2,r2,16
    ab0c:	e73fffcc 	andi	fp,fp,65535
    ab10:	1dc7883a 	add	r3,r3,r23
    ab14:	1739883a 	add	fp,r2,fp
    ab18:	88c03a36 	bltu	r17,r3,ac04 <__umoddi3+0x554>
    ab1c:	88c05126 	beq	r17,r3,ac64 <__umoddi3+0x5b4>
    ab20:	88c9c83a 	sub	r4,r17,r3
    ab24:	e00f883a 	mov	r7,fp
    ab28:	81cfc83a 	sub	r7,r16,r7
    ab2c:	81c7803a 	cmpltu	r3,r16,r7
    ab30:	20c7c83a 	sub	r3,r4,r3
    ab34:	1cc4983a 	sll	r2,r3,r19
    ab38:	3d0ed83a 	srl	r7,r7,r20
    ab3c:	1d06d83a 	srl	r3,r3,r20
    ab40:	11c4b03a 	or	r2,r2,r7
    ab44:	003f7c06 	br	a938 <__alt_data_end+0xfffeb538>
    ab48:	9ca6983a 	sll	r19,r19,r18
    ab4c:	88f8d83a 	srl	fp,r17,r3
    ab50:	80c4d83a 	srl	r2,r16,r3
    ab54:	982cd43a 	srli	r22,r19,16
    ab58:	8ca2983a 	sll	r17,r17,r18
    ab5c:	e009883a 	mov	r4,fp
    ab60:	b00b883a 	mov	r5,r22
    ab64:	146ab03a 	or	r21,r2,r17
    ab68:	000add00 	call	add0 <__umodsi3>
    ab6c:	b00b883a 	mov	r5,r22
    ab70:	e009883a 	mov	r4,fp
    ab74:	1029883a 	mov	r20,r2
    ab78:	9dffffcc 	andi	r23,r19,65535
    ab7c:	000ad6c0 	call	ad6c <__udivsi3>
    ab80:	b809883a 	mov	r4,r23
    ab84:	100b883a 	mov	r5,r2
    ab88:	000ae280 	call	ae28 <__mulsi3>
    ab8c:	a008943a 	slli	r4,r20,16
    ab90:	a806d43a 	srli	r3,r21,16
    ab94:	84a8983a 	sll	r20,r16,r18
    ab98:	1906b03a 	or	r3,r3,r4
    ab9c:	1880042e 	bgeu	r3,r2,abb0 <__umoddi3+0x500>
    aba0:	1cc7883a 	add	r3,r3,r19
    aba4:	1cc00236 	bltu	r3,r19,abb0 <__umoddi3+0x500>
    aba8:	1880012e 	bgeu	r3,r2,abb0 <__umoddi3+0x500>
    abac:	1cc7883a 	add	r3,r3,r19
    abb0:	18a3c83a 	sub	r17,r3,r2
    abb4:	b00b883a 	mov	r5,r22
    abb8:	8809883a 	mov	r4,r17
    abbc:	000add00 	call	add0 <__umodsi3>
    abc0:	b00b883a 	mov	r5,r22
    abc4:	8809883a 	mov	r4,r17
    abc8:	1021883a 	mov	r16,r2
    abcc:	000ad6c0 	call	ad6c <__udivsi3>
    abd0:	100b883a 	mov	r5,r2
    abd4:	b809883a 	mov	r4,r23
    abd8:	8020943a 	slli	r16,r16,16
    abdc:	000ae280 	call	ae28 <__mulsi3>
    abe0:	a8ffffcc 	andi	r3,r21,65535
    abe4:	1c06b03a 	or	r3,r3,r16
    abe8:	1880042e 	bgeu	r3,r2,abfc <__umoddi3+0x54c>
    abec:	1cc7883a 	add	r3,r3,r19
    abf0:	1cc00236 	bltu	r3,r19,abfc <__umoddi3+0x54c>
    abf4:	1880012e 	bgeu	r3,r2,abfc <__umoddi3+0x54c>
    abf8:	1cc7883a 	add	r3,r3,r19
    abfc:	18a3c83a 	sub	r17,r3,r2
    ac00:	003f2906 	br	a8a8 <__alt_data_end+0xfffeb4a8>
    ac04:	e48fc83a 	sub	r7,fp,r18
    ac08:	1d49c83a 	sub	r4,r3,r21
    ac0c:	e1f9803a 	cmpltu	fp,fp,r7
    ac10:	2739c83a 	sub	fp,r4,fp
    ac14:	8f09c83a 	sub	r4,r17,fp
    ac18:	003fc306 	br	ab28 <__alt_data_end+0xfffeb728>
    ac1c:	01000604 	movi	r4,24
    ac20:	003ef906 	br	a808 <__alt_data_end+0xfffeb408>
    ac24:	00800604 	movi	r2,24
    ac28:	003f1306 	br	a878 <__alt_data_end+0xfffeb478>
    ac2c:	01000604 	movi	r4,24
    ac30:	003eb606 	br	a70c <__alt_data_end+0xfffeb30c>
    ac34:	40bf902e 	bgeu	r8,r2,aa78 <__alt_data_end+0xfffeb678>
    ac38:	b5bfff84 	addi	r22,r22,-2
    ac3c:	4551883a 	add	r8,r8,r21
    ac40:	003f8e06 	br	aa7c <__alt_data_end+0xfffeb67c>
    ac44:	18bf762e 	bgeu	r3,r2,aa20 <__alt_data_end+0xfffeb620>
    ac48:	8c7fff84 	addi	r17,r17,-2
    ac4c:	1d47883a 	add	r3,r3,r21
    ac50:	003f7406 	br	aa24 <__alt_data_end+0xfffeb624>
    ac54:	1cc7883a 	add	r3,r3,r19
    ac58:	003ecd06 	br	a790 <__alt_data_end+0xfffeb390>
    ac5c:	8005883a 	mov	r2,r16
    ac60:	003ef806 	br	a844 <__alt_data_end+0xfffeb444>
    ac64:	873fe736 	bltu	r16,fp,ac04 <__alt_data_end+0xfffeb804>
    ac68:	e00f883a 	mov	r7,fp
    ac6c:	0009883a 	mov	r4,zero
    ac70:	003fad06 	br	ab28 <__alt_data_end+0xfffeb728>

0000ac74 <__divsi3>:
    ac74:	20001b16 	blt	r4,zero,ace4 <__divsi3+0x70>
    ac78:	000f883a 	mov	r7,zero
    ac7c:	28001616 	blt	r5,zero,acd8 <__divsi3+0x64>
    ac80:	200d883a 	mov	r6,r4
    ac84:	29001a2e 	bgeu	r5,r4,acf0 <__divsi3+0x7c>
    ac88:	00800804 	movi	r2,32
    ac8c:	00c00044 	movi	r3,1
    ac90:	00000106 	br	ac98 <__divsi3+0x24>
    ac94:	10000d26 	beq	r2,zero,accc <__divsi3+0x58>
    ac98:	294b883a 	add	r5,r5,r5
    ac9c:	10bfffc4 	addi	r2,r2,-1
    aca0:	18c7883a 	add	r3,r3,r3
    aca4:	293ffb36 	bltu	r5,r4,ac94 <__alt_data_end+0xfffeb894>
    aca8:	0005883a 	mov	r2,zero
    acac:	18000726 	beq	r3,zero,accc <__divsi3+0x58>
    acb0:	0005883a 	mov	r2,zero
    acb4:	31400236 	bltu	r6,r5,acc0 <__divsi3+0x4c>
    acb8:	314dc83a 	sub	r6,r6,r5
    acbc:	10c4b03a 	or	r2,r2,r3
    acc0:	1806d07a 	srli	r3,r3,1
    acc4:	280ad07a 	srli	r5,r5,1
    acc8:	183ffa1e 	bne	r3,zero,acb4 <__alt_data_end+0xfffeb8b4>
    accc:	38000126 	beq	r7,zero,acd4 <__divsi3+0x60>
    acd0:	0085c83a 	sub	r2,zero,r2
    acd4:	f800283a 	ret
    acd8:	014bc83a 	sub	r5,zero,r5
    acdc:	39c0005c 	xori	r7,r7,1
    ace0:	003fe706 	br	ac80 <__alt_data_end+0xfffeb880>
    ace4:	0109c83a 	sub	r4,zero,r4
    ace8:	01c00044 	movi	r7,1
    acec:	003fe306 	br	ac7c <__alt_data_end+0xfffeb87c>
    acf0:	00c00044 	movi	r3,1
    acf4:	003fee06 	br	acb0 <__alt_data_end+0xfffeb8b0>

0000acf8 <__modsi3>:
    acf8:	20001716 	blt	r4,zero,ad58 <__modsi3+0x60>
    acfc:	000f883a 	mov	r7,zero
    ad00:	2005883a 	mov	r2,r4
    ad04:	28001216 	blt	r5,zero,ad50 <__modsi3+0x58>
    ad08:	2900162e 	bgeu	r5,r4,ad64 <__modsi3+0x6c>
    ad0c:	01800804 	movi	r6,32
    ad10:	00c00044 	movi	r3,1
    ad14:	00000106 	br	ad1c <__modsi3+0x24>
    ad18:	30000a26 	beq	r6,zero,ad44 <__modsi3+0x4c>
    ad1c:	294b883a 	add	r5,r5,r5
    ad20:	31bfffc4 	addi	r6,r6,-1
    ad24:	18c7883a 	add	r3,r3,r3
    ad28:	293ffb36 	bltu	r5,r4,ad18 <__alt_data_end+0xfffeb918>
    ad2c:	18000526 	beq	r3,zero,ad44 <__modsi3+0x4c>
    ad30:	1806d07a 	srli	r3,r3,1
    ad34:	11400136 	bltu	r2,r5,ad3c <__modsi3+0x44>
    ad38:	1145c83a 	sub	r2,r2,r5
    ad3c:	280ad07a 	srli	r5,r5,1
    ad40:	183ffb1e 	bne	r3,zero,ad30 <__alt_data_end+0xfffeb930>
    ad44:	38000126 	beq	r7,zero,ad4c <__modsi3+0x54>
    ad48:	0085c83a 	sub	r2,zero,r2
    ad4c:	f800283a 	ret
    ad50:	014bc83a 	sub	r5,zero,r5
    ad54:	003fec06 	br	ad08 <__alt_data_end+0xfffeb908>
    ad58:	0109c83a 	sub	r4,zero,r4
    ad5c:	01c00044 	movi	r7,1
    ad60:	003fe706 	br	ad00 <__alt_data_end+0xfffeb900>
    ad64:	00c00044 	movi	r3,1
    ad68:	003ff106 	br	ad30 <__alt_data_end+0xfffeb930>

0000ad6c <__udivsi3>:
    ad6c:	200d883a 	mov	r6,r4
    ad70:	2900152e 	bgeu	r5,r4,adc8 <__udivsi3+0x5c>
    ad74:	28001416 	blt	r5,zero,adc8 <__udivsi3+0x5c>
    ad78:	00800804 	movi	r2,32
    ad7c:	00c00044 	movi	r3,1
    ad80:	00000206 	br	ad8c <__udivsi3+0x20>
    ad84:	10000e26 	beq	r2,zero,adc0 <__udivsi3+0x54>
    ad88:	28000516 	blt	r5,zero,ada0 <__udivsi3+0x34>
    ad8c:	294b883a 	add	r5,r5,r5
    ad90:	10bfffc4 	addi	r2,r2,-1
    ad94:	18c7883a 	add	r3,r3,r3
    ad98:	293ffa36 	bltu	r5,r4,ad84 <__alt_data_end+0xfffeb984>
    ad9c:	18000826 	beq	r3,zero,adc0 <__udivsi3+0x54>
    ada0:	0005883a 	mov	r2,zero
    ada4:	31400236 	bltu	r6,r5,adb0 <__udivsi3+0x44>
    ada8:	314dc83a 	sub	r6,r6,r5
    adac:	10c4b03a 	or	r2,r2,r3
    adb0:	1806d07a 	srli	r3,r3,1
    adb4:	280ad07a 	srli	r5,r5,1
    adb8:	183ffa1e 	bne	r3,zero,ada4 <__alt_data_end+0xfffeb9a4>
    adbc:	f800283a 	ret
    adc0:	0005883a 	mov	r2,zero
    adc4:	f800283a 	ret
    adc8:	00c00044 	movi	r3,1
    adcc:	003ff406 	br	ada0 <__alt_data_end+0xfffeb9a0>

0000add0 <__umodsi3>:
    add0:	2005883a 	mov	r2,r4
    add4:	2900122e 	bgeu	r5,r4,ae20 <__umodsi3+0x50>
    add8:	28001116 	blt	r5,zero,ae20 <__umodsi3+0x50>
    addc:	01800804 	movi	r6,32
    ade0:	00c00044 	movi	r3,1
    ade4:	00000206 	br	adf0 <__umodsi3+0x20>
    ade8:	30000c26 	beq	r6,zero,ae1c <__umodsi3+0x4c>
    adec:	28000516 	blt	r5,zero,ae04 <__umodsi3+0x34>
    adf0:	294b883a 	add	r5,r5,r5
    adf4:	31bfffc4 	addi	r6,r6,-1
    adf8:	18c7883a 	add	r3,r3,r3
    adfc:	293ffa36 	bltu	r5,r4,ade8 <__alt_data_end+0xfffeb9e8>
    ae00:	18000626 	beq	r3,zero,ae1c <__umodsi3+0x4c>
    ae04:	1806d07a 	srli	r3,r3,1
    ae08:	11400136 	bltu	r2,r5,ae10 <__umodsi3+0x40>
    ae0c:	1145c83a 	sub	r2,r2,r5
    ae10:	280ad07a 	srli	r5,r5,1
    ae14:	183ffb1e 	bne	r3,zero,ae04 <__alt_data_end+0xfffeba04>
    ae18:	f800283a 	ret
    ae1c:	f800283a 	ret
    ae20:	00c00044 	movi	r3,1
    ae24:	003ff706 	br	ae04 <__alt_data_end+0xfffeba04>

0000ae28 <__mulsi3>:
    ae28:	0005883a 	mov	r2,zero
    ae2c:	20000726 	beq	r4,zero,ae4c <__mulsi3+0x24>
    ae30:	20c0004c 	andi	r3,r4,1
    ae34:	2008d07a 	srli	r4,r4,1
    ae38:	18000126 	beq	r3,zero,ae40 <__mulsi3+0x18>
    ae3c:	1145883a 	add	r2,r2,r5
    ae40:	294b883a 	add	r5,r5,r5
    ae44:	203ffa1e 	bne	r4,zero,ae30 <__alt_data_end+0xfffeba30>
    ae48:	f800283a 	ret
    ae4c:	f800283a 	ret

0000ae50 <__adddf3>:
    ae50:	02c00434 	movhi	r11,16
    ae54:	5affffc4 	addi	r11,r11,-1
    ae58:	2806d7fa 	srli	r3,r5,31
    ae5c:	2ad4703a 	and	r10,r5,r11
    ae60:	3ad2703a 	and	r9,r7,r11
    ae64:	3804d53a 	srli	r2,r7,20
    ae68:	3018d77a 	srli	r12,r6,29
    ae6c:	280ad53a 	srli	r5,r5,20
    ae70:	501490fa 	slli	r10,r10,3
    ae74:	2010d77a 	srli	r8,r4,29
    ae78:	481290fa 	slli	r9,r9,3
    ae7c:	380ed7fa 	srli	r7,r7,31
    ae80:	defffb04 	addi	sp,sp,-20
    ae84:	dc800215 	stw	r18,8(sp)
    ae88:	dc400115 	stw	r17,4(sp)
    ae8c:	dc000015 	stw	r16,0(sp)
    ae90:	dfc00415 	stw	ra,16(sp)
    ae94:	dcc00315 	stw	r19,12(sp)
    ae98:	1c803fcc 	andi	r18,r3,255
    ae9c:	2c01ffcc 	andi	r16,r5,2047
    aea0:	5210b03a 	or	r8,r10,r8
    aea4:	202290fa 	slli	r17,r4,3
    aea8:	1081ffcc 	andi	r2,r2,2047
    aeac:	4b12b03a 	or	r9,r9,r12
    aeb0:	300c90fa 	slli	r6,r6,3
    aeb4:	91c07526 	beq	r18,r7,b08c <__adddf3+0x23c>
    aeb8:	8087c83a 	sub	r3,r16,r2
    aebc:	00c0ab0e 	bge	zero,r3,b16c <__adddf3+0x31c>
    aec0:	10002a1e 	bne	r2,zero,af6c <__adddf3+0x11c>
    aec4:	4984b03a 	or	r2,r9,r6
    aec8:	1000961e 	bne	r2,zero,b124 <__adddf3+0x2d4>
    aecc:	888001cc 	andi	r2,r17,7
    aed0:	10000726 	beq	r2,zero,aef0 <__adddf3+0xa0>
    aed4:	888003cc 	andi	r2,r17,15
    aed8:	00c00104 	movi	r3,4
    aedc:	10c00426 	beq	r2,r3,aef0 <__adddf3+0xa0>
    aee0:	88c7883a 	add	r3,r17,r3
    aee4:	1c63803a 	cmpltu	r17,r3,r17
    aee8:	4451883a 	add	r8,r8,r17
    aeec:	1823883a 	mov	r17,r3
    aef0:	4080202c 	andhi	r2,r8,128
    aef4:	10005926 	beq	r2,zero,b05c <__adddf3+0x20c>
    aef8:	84000044 	addi	r16,r16,1
    aefc:	0081ffc4 	movi	r2,2047
    af00:	8080ba26 	beq	r16,r2,b1ec <__adddf3+0x39c>
    af04:	00bfe034 	movhi	r2,65408
    af08:	10bfffc4 	addi	r2,r2,-1
    af0c:	4090703a 	and	r8,r8,r2
    af10:	4004977a 	slli	r2,r8,29
    af14:	4010927a 	slli	r8,r8,9
    af18:	8822d0fa 	srli	r17,r17,3
    af1c:	8401ffcc 	andi	r16,r16,2047
    af20:	4010d33a 	srli	r8,r8,12
    af24:	9007883a 	mov	r3,r18
    af28:	1444b03a 	or	r2,r2,r17
    af2c:	8401ffcc 	andi	r16,r16,2047
    af30:	8020953a 	slli	r16,r16,20
    af34:	18c03fcc 	andi	r3,r3,255
    af38:	01000434 	movhi	r4,16
    af3c:	213fffc4 	addi	r4,r4,-1
    af40:	180697fa 	slli	r3,r3,31
    af44:	4110703a 	and	r8,r8,r4
    af48:	4410b03a 	or	r8,r8,r16
    af4c:	40c6b03a 	or	r3,r8,r3
    af50:	dfc00417 	ldw	ra,16(sp)
    af54:	dcc00317 	ldw	r19,12(sp)
    af58:	dc800217 	ldw	r18,8(sp)
    af5c:	dc400117 	ldw	r17,4(sp)
    af60:	dc000017 	ldw	r16,0(sp)
    af64:	dec00504 	addi	sp,sp,20
    af68:	f800283a 	ret
    af6c:	0081ffc4 	movi	r2,2047
    af70:	80bfd626 	beq	r16,r2,aecc <__alt_data_end+0xfffebacc>
    af74:	4a402034 	orhi	r9,r9,128
    af78:	00800e04 	movi	r2,56
    af7c:	10c09f16 	blt	r2,r3,b1fc <__adddf3+0x3ac>
    af80:	008007c4 	movi	r2,31
    af84:	10c0c216 	blt	r2,r3,b290 <__adddf3+0x440>
    af88:	00800804 	movi	r2,32
    af8c:	10c5c83a 	sub	r2,r2,r3
    af90:	488a983a 	sll	r5,r9,r2
    af94:	30c8d83a 	srl	r4,r6,r3
    af98:	3084983a 	sll	r2,r6,r2
    af9c:	48c6d83a 	srl	r3,r9,r3
    afa0:	290cb03a 	or	r6,r5,r4
    afa4:	1004c03a 	cmpne	r2,r2,zero
    afa8:	308cb03a 	or	r6,r6,r2
    afac:	898dc83a 	sub	r6,r17,r6
    afb0:	89a3803a 	cmpltu	r17,r17,r6
    afb4:	40d1c83a 	sub	r8,r8,r3
    afb8:	4451c83a 	sub	r8,r8,r17
    afbc:	3023883a 	mov	r17,r6
    afc0:	4080202c 	andhi	r2,r8,128
    afc4:	10002326 	beq	r2,zero,b054 <__adddf3+0x204>
    afc8:	04c02034 	movhi	r19,128
    afcc:	9cffffc4 	addi	r19,r19,-1
    afd0:	44e6703a 	and	r19,r8,r19
    afd4:	98007626 	beq	r19,zero,b1b0 <__adddf3+0x360>
    afd8:	9809883a 	mov	r4,r19
    afdc:	000d6900 	call	d690 <__clzsi2>
    afe0:	10fffe04 	addi	r3,r2,-8
    afe4:	010007c4 	movi	r4,31
    afe8:	20c07716 	blt	r4,r3,b1c8 <__adddf3+0x378>
    afec:	00800804 	movi	r2,32
    aff0:	10c5c83a 	sub	r2,r2,r3
    aff4:	8884d83a 	srl	r2,r17,r2
    aff8:	98d0983a 	sll	r8,r19,r3
    affc:	88e2983a 	sll	r17,r17,r3
    b000:	1204b03a 	or	r2,r2,r8
    b004:	1c007416 	blt	r3,r16,b1d8 <__adddf3+0x388>
    b008:	1c21c83a 	sub	r16,r3,r16
    b00c:	82000044 	addi	r8,r16,1
    b010:	00c007c4 	movi	r3,31
    b014:	1a009116 	blt	r3,r8,b25c <__adddf3+0x40c>
    b018:	00c00804 	movi	r3,32
    b01c:	1a07c83a 	sub	r3,r3,r8
    b020:	8a08d83a 	srl	r4,r17,r8
    b024:	88e2983a 	sll	r17,r17,r3
    b028:	10c6983a 	sll	r3,r2,r3
    b02c:	1210d83a 	srl	r8,r2,r8
    b030:	8804c03a 	cmpne	r2,r17,zero
    b034:	1906b03a 	or	r3,r3,r4
    b038:	18a2b03a 	or	r17,r3,r2
    b03c:	0021883a 	mov	r16,zero
    b040:	003fa206 	br	aecc <__alt_data_end+0xfffebacc>
    b044:	1890b03a 	or	r8,r3,r2
    b048:	40017d26 	beq	r8,zero,b640 <__adddf3+0x7f0>
    b04c:	1011883a 	mov	r8,r2
    b050:	1823883a 	mov	r17,r3
    b054:	888001cc 	andi	r2,r17,7
    b058:	103f9e1e 	bne	r2,zero,aed4 <__alt_data_end+0xfffebad4>
    b05c:	4004977a 	slli	r2,r8,29
    b060:	8822d0fa 	srli	r17,r17,3
    b064:	4010d0fa 	srli	r8,r8,3
    b068:	9007883a 	mov	r3,r18
    b06c:	1444b03a 	or	r2,r2,r17
    b070:	0101ffc4 	movi	r4,2047
    b074:	81002426 	beq	r16,r4,b108 <__adddf3+0x2b8>
    b078:	8120703a 	and	r16,r16,r4
    b07c:	01000434 	movhi	r4,16
    b080:	213fffc4 	addi	r4,r4,-1
    b084:	4110703a 	and	r8,r8,r4
    b088:	003fa806 	br	af2c <__alt_data_end+0xfffebb2c>
    b08c:	8089c83a 	sub	r4,r16,r2
    b090:	01005e0e 	bge	zero,r4,b20c <__adddf3+0x3bc>
    b094:	10002b26 	beq	r2,zero,b144 <__adddf3+0x2f4>
    b098:	0081ffc4 	movi	r2,2047
    b09c:	80bf8b26 	beq	r16,r2,aecc <__alt_data_end+0xfffebacc>
    b0a0:	4a402034 	orhi	r9,r9,128
    b0a4:	00800e04 	movi	r2,56
    b0a8:	1100a40e 	bge	r2,r4,b33c <__adddf3+0x4ec>
    b0ac:	498cb03a 	or	r6,r9,r6
    b0b0:	300ac03a 	cmpne	r5,r6,zero
    b0b4:	0013883a 	mov	r9,zero
    b0b8:	2c4b883a 	add	r5,r5,r17
    b0bc:	2c63803a 	cmpltu	r17,r5,r17
    b0c0:	4a11883a 	add	r8,r9,r8
    b0c4:	8a11883a 	add	r8,r17,r8
    b0c8:	2823883a 	mov	r17,r5
    b0cc:	4080202c 	andhi	r2,r8,128
    b0d0:	103fe026 	beq	r2,zero,b054 <__alt_data_end+0xfffebc54>
    b0d4:	84000044 	addi	r16,r16,1
    b0d8:	0081ffc4 	movi	r2,2047
    b0dc:	8080d226 	beq	r16,r2,b428 <__adddf3+0x5d8>
    b0e0:	00bfe034 	movhi	r2,65408
    b0e4:	10bfffc4 	addi	r2,r2,-1
    b0e8:	4090703a 	and	r8,r8,r2
    b0ec:	880ad07a 	srli	r5,r17,1
    b0f0:	400897fa 	slli	r4,r8,31
    b0f4:	88c0004c 	andi	r3,r17,1
    b0f8:	28e2b03a 	or	r17,r5,r3
    b0fc:	4010d07a 	srli	r8,r8,1
    b100:	2462b03a 	or	r17,r4,r17
    b104:	003f7106 	br	aecc <__alt_data_end+0xfffebacc>
    b108:	4088b03a 	or	r4,r8,r2
    b10c:	20014526 	beq	r4,zero,b624 <__adddf3+0x7d4>
    b110:	01000434 	movhi	r4,16
    b114:	42000234 	orhi	r8,r8,8
    b118:	213fffc4 	addi	r4,r4,-1
    b11c:	4110703a 	and	r8,r8,r4
    b120:	003f8206 	br	af2c <__alt_data_end+0xfffebb2c>
    b124:	18ffffc4 	addi	r3,r3,-1
    b128:	1800491e 	bne	r3,zero,b250 <__adddf3+0x400>
    b12c:	898bc83a 	sub	r5,r17,r6
    b130:	8963803a 	cmpltu	r17,r17,r5
    b134:	4251c83a 	sub	r8,r8,r9
    b138:	4451c83a 	sub	r8,r8,r17
    b13c:	2823883a 	mov	r17,r5
    b140:	003f9f06 	br	afc0 <__alt_data_end+0xfffebbc0>
    b144:	4984b03a 	or	r2,r9,r6
    b148:	103f6026 	beq	r2,zero,aecc <__alt_data_end+0xfffebacc>
    b14c:	213fffc4 	addi	r4,r4,-1
    b150:	2000931e 	bne	r4,zero,b3a0 <__adddf3+0x550>
    b154:	898d883a 	add	r6,r17,r6
    b158:	3463803a 	cmpltu	r17,r6,r17
    b15c:	4251883a 	add	r8,r8,r9
    b160:	8a11883a 	add	r8,r17,r8
    b164:	3023883a 	mov	r17,r6
    b168:	003fd806 	br	b0cc <__alt_data_end+0xfffebccc>
    b16c:	1800541e 	bne	r3,zero,b2c0 <__adddf3+0x470>
    b170:	80800044 	addi	r2,r16,1
    b174:	1081ffcc 	andi	r2,r2,2047
    b178:	00c00044 	movi	r3,1
    b17c:	1880a00e 	bge	r3,r2,b400 <__adddf3+0x5b0>
    b180:	8989c83a 	sub	r4,r17,r6
    b184:	8905803a 	cmpltu	r2,r17,r4
    b188:	4267c83a 	sub	r19,r8,r9
    b18c:	98a7c83a 	sub	r19,r19,r2
    b190:	9880202c 	andhi	r2,r19,128
    b194:	10006326 	beq	r2,zero,b324 <__adddf3+0x4d4>
    b198:	3463c83a 	sub	r17,r6,r17
    b19c:	4a07c83a 	sub	r3,r9,r8
    b1a0:	344d803a 	cmpltu	r6,r6,r17
    b1a4:	19a7c83a 	sub	r19,r3,r6
    b1a8:	3825883a 	mov	r18,r7
    b1ac:	983f8a1e 	bne	r19,zero,afd8 <__alt_data_end+0xfffebbd8>
    b1b0:	8809883a 	mov	r4,r17
    b1b4:	000d6900 	call	d690 <__clzsi2>
    b1b8:	10800804 	addi	r2,r2,32
    b1bc:	10fffe04 	addi	r3,r2,-8
    b1c0:	010007c4 	movi	r4,31
    b1c4:	20ff890e 	bge	r4,r3,afec <__alt_data_end+0xfffebbec>
    b1c8:	10bff604 	addi	r2,r2,-40
    b1cc:	8884983a 	sll	r2,r17,r2
    b1d0:	0023883a 	mov	r17,zero
    b1d4:	1c3f8c0e 	bge	r3,r16,b008 <__alt_data_end+0xfffebc08>
    b1d8:	023fe034 	movhi	r8,65408
    b1dc:	423fffc4 	addi	r8,r8,-1
    b1e0:	80e1c83a 	sub	r16,r16,r3
    b1e4:	1210703a 	and	r8,r2,r8
    b1e8:	003f3806 	br	aecc <__alt_data_end+0xfffebacc>
    b1ec:	9007883a 	mov	r3,r18
    b1f0:	0011883a 	mov	r8,zero
    b1f4:	0005883a 	mov	r2,zero
    b1f8:	003f4c06 	br	af2c <__alt_data_end+0xfffebb2c>
    b1fc:	498cb03a 	or	r6,r9,r6
    b200:	300cc03a 	cmpne	r6,r6,zero
    b204:	0007883a 	mov	r3,zero
    b208:	003f6806 	br	afac <__alt_data_end+0xfffebbac>
    b20c:	20009c1e 	bne	r4,zero,b480 <__adddf3+0x630>
    b210:	80800044 	addi	r2,r16,1
    b214:	1141ffcc 	andi	r5,r2,2047
    b218:	01000044 	movi	r4,1
    b21c:	2140670e 	bge	r4,r5,b3bc <__adddf3+0x56c>
    b220:	0101ffc4 	movi	r4,2047
    b224:	11007f26 	beq	r2,r4,b424 <__adddf3+0x5d4>
    b228:	898d883a 	add	r6,r17,r6
    b22c:	4247883a 	add	r3,r8,r9
    b230:	3451803a 	cmpltu	r8,r6,r17
    b234:	40d1883a 	add	r8,r8,r3
    b238:	402297fa 	slli	r17,r8,31
    b23c:	300cd07a 	srli	r6,r6,1
    b240:	4010d07a 	srli	r8,r8,1
    b244:	1021883a 	mov	r16,r2
    b248:	89a2b03a 	or	r17,r17,r6
    b24c:	003f1f06 	br	aecc <__alt_data_end+0xfffebacc>
    b250:	0081ffc4 	movi	r2,2047
    b254:	80bf481e 	bne	r16,r2,af78 <__alt_data_end+0xfffebb78>
    b258:	003f1c06 	br	aecc <__alt_data_end+0xfffebacc>
    b25c:	843ff844 	addi	r16,r16,-31
    b260:	01000804 	movi	r4,32
    b264:	1406d83a 	srl	r3,r2,r16
    b268:	41005026 	beq	r8,r4,b3ac <__adddf3+0x55c>
    b26c:	01001004 	movi	r4,64
    b270:	2211c83a 	sub	r8,r4,r8
    b274:	1204983a 	sll	r2,r2,r8
    b278:	88a2b03a 	or	r17,r17,r2
    b27c:	8822c03a 	cmpne	r17,r17,zero
    b280:	1c62b03a 	or	r17,r3,r17
    b284:	0011883a 	mov	r8,zero
    b288:	0021883a 	mov	r16,zero
    b28c:	003f7106 	br	b054 <__alt_data_end+0xfffebc54>
    b290:	193ff804 	addi	r4,r3,-32
    b294:	00800804 	movi	r2,32
    b298:	4908d83a 	srl	r4,r9,r4
    b29c:	18804526 	beq	r3,r2,b3b4 <__adddf3+0x564>
    b2a0:	00801004 	movi	r2,64
    b2a4:	10c5c83a 	sub	r2,r2,r3
    b2a8:	4886983a 	sll	r3,r9,r2
    b2ac:	198cb03a 	or	r6,r3,r6
    b2b0:	300cc03a 	cmpne	r6,r6,zero
    b2b4:	218cb03a 	or	r6,r4,r6
    b2b8:	0007883a 	mov	r3,zero
    b2bc:	003f3b06 	br	afac <__alt_data_end+0xfffebbac>
    b2c0:	80002a26 	beq	r16,zero,b36c <__adddf3+0x51c>
    b2c4:	0101ffc4 	movi	r4,2047
    b2c8:	11006826 	beq	r2,r4,b46c <__adddf3+0x61c>
    b2cc:	00c7c83a 	sub	r3,zero,r3
    b2d0:	42002034 	orhi	r8,r8,128
    b2d4:	01000e04 	movi	r4,56
    b2d8:	20c07c16 	blt	r4,r3,b4cc <__adddf3+0x67c>
    b2dc:	010007c4 	movi	r4,31
    b2e0:	20c0da16 	blt	r4,r3,b64c <__adddf3+0x7fc>
    b2e4:	01000804 	movi	r4,32
    b2e8:	20c9c83a 	sub	r4,r4,r3
    b2ec:	4114983a 	sll	r10,r8,r4
    b2f0:	88cad83a 	srl	r5,r17,r3
    b2f4:	8908983a 	sll	r4,r17,r4
    b2f8:	40c6d83a 	srl	r3,r8,r3
    b2fc:	5162b03a 	or	r17,r10,r5
    b300:	2008c03a 	cmpne	r4,r4,zero
    b304:	8922b03a 	or	r17,r17,r4
    b308:	3463c83a 	sub	r17,r6,r17
    b30c:	48c7c83a 	sub	r3,r9,r3
    b310:	344d803a 	cmpltu	r6,r6,r17
    b314:	1991c83a 	sub	r8,r3,r6
    b318:	1021883a 	mov	r16,r2
    b31c:	3825883a 	mov	r18,r7
    b320:	003f2706 	br	afc0 <__alt_data_end+0xfffebbc0>
    b324:	24d0b03a 	or	r8,r4,r19
    b328:	40001b1e 	bne	r8,zero,b398 <__adddf3+0x548>
    b32c:	0005883a 	mov	r2,zero
    b330:	0007883a 	mov	r3,zero
    b334:	0021883a 	mov	r16,zero
    b338:	003f4d06 	br	b070 <__alt_data_end+0xfffebc70>
    b33c:	008007c4 	movi	r2,31
    b340:	11003c16 	blt	r2,r4,b434 <__adddf3+0x5e4>
    b344:	00800804 	movi	r2,32
    b348:	1105c83a 	sub	r2,r2,r4
    b34c:	488e983a 	sll	r7,r9,r2
    b350:	310ad83a 	srl	r5,r6,r4
    b354:	3084983a 	sll	r2,r6,r2
    b358:	4912d83a 	srl	r9,r9,r4
    b35c:	394ab03a 	or	r5,r7,r5
    b360:	1004c03a 	cmpne	r2,r2,zero
    b364:	288ab03a 	or	r5,r5,r2
    b368:	003f5306 	br	b0b8 <__alt_data_end+0xfffebcb8>
    b36c:	4448b03a 	or	r4,r8,r17
    b370:	20003e26 	beq	r4,zero,b46c <__adddf3+0x61c>
    b374:	00c6303a 	nor	r3,zero,r3
    b378:	18003a1e 	bne	r3,zero,b464 <__adddf3+0x614>
    b37c:	3463c83a 	sub	r17,r6,r17
    b380:	4a07c83a 	sub	r3,r9,r8
    b384:	344d803a 	cmpltu	r6,r6,r17
    b388:	1991c83a 	sub	r8,r3,r6
    b38c:	1021883a 	mov	r16,r2
    b390:	3825883a 	mov	r18,r7
    b394:	003f0a06 	br	afc0 <__alt_data_end+0xfffebbc0>
    b398:	2023883a 	mov	r17,r4
    b39c:	003f0d06 	br	afd4 <__alt_data_end+0xfffebbd4>
    b3a0:	0081ffc4 	movi	r2,2047
    b3a4:	80bf3f1e 	bne	r16,r2,b0a4 <__alt_data_end+0xfffebca4>
    b3a8:	003ec806 	br	aecc <__alt_data_end+0xfffebacc>
    b3ac:	0005883a 	mov	r2,zero
    b3b0:	003fb106 	br	b278 <__alt_data_end+0xfffebe78>
    b3b4:	0007883a 	mov	r3,zero
    b3b8:	003fbc06 	br	b2ac <__alt_data_end+0xfffebeac>
    b3bc:	4444b03a 	or	r2,r8,r17
    b3c0:	8000871e 	bne	r16,zero,b5e0 <__adddf3+0x790>
    b3c4:	1000ba26 	beq	r2,zero,b6b0 <__adddf3+0x860>
    b3c8:	4984b03a 	or	r2,r9,r6
    b3cc:	103ebf26 	beq	r2,zero,aecc <__alt_data_end+0xfffebacc>
    b3d0:	8985883a 	add	r2,r17,r6
    b3d4:	4247883a 	add	r3,r8,r9
    b3d8:	1451803a 	cmpltu	r8,r2,r17
    b3dc:	40d1883a 	add	r8,r8,r3
    b3e0:	40c0202c 	andhi	r3,r8,128
    b3e4:	1023883a 	mov	r17,r2
    b3e8:	183f1a26 	beq	r3,zero,b054 <__alt_data_end+0xfffebc54>
    b3ec:	00bfe034 	movhi	r2,65408
    b3f0:	10bfffc4 	addi	r2,r2,-1
    b3f4:	2021883a 	mov	r16,r4
    b3f8:	4090703a 	and	r8,r8,r2
    b3fc:	003eb306 	br	aecc <__alt_data_end+0xfffebacc>
    b400:	4444b03a 	or	r2,r8,r17
    b404:	8000291e 	bne	r16,zero,b4ac <__adddf3+0x65c>
    b408:	10004b1e 	bne	r2,zero,b538 <__adddf3+0x6e8>
    b40c:	4990b03a 	or	r8,r9,r6
    b410:	40008b26 	beq	r8,zero,b640 <__adddf3+0x7f0>
    b414:	4811883a 	mov	r8,r9
    b418:	3023883a 	mov	r17,r6
    b41c:	3825883a 	mov	r18,r7
    b420:	003eaa06 	br	aecc <__alt_data_end+0xfffebacc>
    b424:	1021883a 	mov	r16,r2
    b428:	0011883a 	mov	r8,zero
    b42c:	0005883a 	mov	r2,zero
    b430:	003f0f06 	br	b070 <__alt_data_end+0xfffebc70>
    b434:	217ff804 	addi	r5,r4,-32
    b438:	00800804 	movi	r2,32
    b43c:	494ad83a 	srl	r5,r9,r5
    b440:	20807d26 	beq	r4,r2,b638 <__adddf3+0x7e8>
    b444:	00801004 	movi	r2,64
    b448:	1109c83a 	sub	r4,r2,r4
    b44c:	4912983a 	sll	r9,r9,r4
    b450:	498cb03a 	or	r6,r9,r6
    b454:	300cc03a 	cmpne	r6,r6,zero
    b458:	298ab03a 	or	r5,r5,r6
    b45c:	0013883a 	mov	r9,zero
    b460:	003f1506 	br	b0b8 <__alt_data_end+0xfffebcb8>
    b464:	0101ffc4 	movi	r4,2047
    b468:	113f9a1e 	bne	r2,r4,b2d4 <__alt_data_end+0xfffebed4>
    b46c:	4811883a 	mov	r8,r9
    b470:	3023883a 	mov	r17,r6
    b474:	1021883a 	mov	r16,r2
    b478:	3825883a 	mov	r18,r7
    b47c:	003e9306 	br	aecc <__alt_data_end+0xfffebacc>
    b480:	8000161e 	bne	r16,zero,b4dc <__adddf3+0x68c>
    b484:	444ab03a 	or	r5,r8,r17
    b488:	28005126 	beq	r5,zero,b5d0 <__adddf3+0x780>
    b48c:	0108303a 	nor	r4,zero,r4
    b490:	20004d1e 	bne	r4,zero,b5c8 <__adddf3+0x778>
    b494:	89a3883a 	add	r17,r17,r6
    b498:	4253883a 	add	r9,r8,r9
    b49c:	898d803a 	cmpltu	r6,r17,r6
    b4a0:	3251883a 	add	r8,r6,r9
    b4a4:	1021883a 	mov	r16,r2
    b4a8:	003f0806 	br	b0cc <__alt_data_end+0xfffebccc>
    b4ac:	1000301e 	bne	r2,zero,b570 <__adddf3+0x720>
    b4b0:	4984b03a 	or	r2,r9,r6
    b4b4:	10007126 	beq	r2,zero,b67c <__adddf3+0x82c>
    b4b8:	4811883a 	mov	r8,r9
    b4bc:	3023883a 	mov	r17,r6
    b4c0:	3825883a 	mov	r18,r7
    b4c4:	0401ffc4 	movi	r16,2047
    b4c8:	003e8006 	br	aecc <__alt_data_end+0xfffebacc>
    b4cc:	4462b03a 	or	r17,r8,r17
    b4d0:	8822c03a 	cmpne	r17,r17,zero
    b4d4:	0007883a 	mov	r3,zero
    b4d8:	003f8b06 	br	b308 <__alt_data_end+0xfffebf08>
    b4dc:	0141ffc4 	movi	r5,2047
    b4e0:	11403b26 	beq	r2,r5,b5d0 <__adddf3+0x780>
    b4e4:	0109c83a 	sub	r4,zero,r4
    b4e8:	42002034 	orhi	r8,r8,128
    b4ec:	01400e04 	movi	r5,56
    b4f0:	29006716 	blt	r5,r4,b690 <__adddf3+0x840>
    b4f4:	014007c4 	movi	r5,31
    b4f8:	29007016 	blt	r5,r4,b6bc <__adddf3+0x86c>
    b4fc:	01400804 	movi	r5,32
    b500:	290bc83a 	sub	r5,r5,r4
    b504:	4154983a 	sll	r10,r8,r5
    b508:	890ed83a 	srl	r7,r17,r4
    b50c:	894a983a 	sll	r5,r17,r5
    b510:	4108d83a 	srl	r4,r8,r4
    b514:	51e2b03a 	or	r17,r10,r7
    b518:	280ac03a 	cmpne	r5,r5,zero
    b51c:	8962b03a 	or	r17,r17,r5
    b520:	89a3883a 	add	r17,r17,r6
    b524:	2253883a 	add	r9,r4,r9
    b528:	898d803a 	cmpltu	r6,r17,r6
    b52c:	3251883a 	add	r8,r6,r9
    b530:	1021883a 	mov	r16,r2
    b534:	003ee506 	br	b0cc <__alt_data_end+0xfffebccc>
    b538:	4984b03a 	or	r2,r9,r6
    b53c:	103e6326 	beq	r2,zero,aecc <__alt_data_end+0xfffebacc>
    b540:	8987c83a 	sub	r3,r17,r6
    b544:	88c9803a 	cmpltu	r4,r17,r3
    b548:	4245c83a 	sub	r2,r8,r9
    b54c:	1105c83a 	sub	r2,r2,r4
    b550:	1100202c 	andhi	r4,r2,128
    b554:	203ebb26 	beq	r4,zero,b044 <__alt_data_end+0xfffebc44>
    b558:	3463c83a 	sub	r17,r6,r17
    b55c:	4a07c83a 	sub	r3,r9,r8
    b560:	344d803a 	cmpltu	r6,r6,r17
    b564:	1991c83a 	sub	r8,r3,r6
    b568:	3825883a 	mov	r18,r7
    b56c:	003e5706 	br	aecc <__alt_data_end+0xfffebacc>
    b570:	4984b03a 	or	r2,r9,r6
    b574:	10002e26 	beq	r2,zero,b630 <__adddf3+0x7e0>
    b578:	4004d0fa 	srli	r2,r8,3
    b57c:	8822d0fa 	srli	r17,r17,3
    b580:	4010977a 	slli	r8,r8,29
    b584:	10c0022c 	andhi	r3,r2,8
    b588:	4462b03a 	or	r17,r8,r17
    b58c:	18000826 	beq	r3,zero,b5b0 <__adddf3+0x760>
    b590:	4808d0fa 	srli	r4,r9,3
    b594:	20c0022c 	andhi	r3,r4,8
    b598:	1800051e 	bne	r3,zero,b5b0 <__adddf3+0x760>
    b59c:	300cd0fa 	srli	r6,r6,3
    b5a0:	4806977a 	slli	r3,r9,29
    b5a4:	2005883a 	mov	r2,r4
    b5a8:	3825883a 	mov	r18,r7
    b5ac:	19a2b03a 	or	r17,r3,r6
    b5b0:	8810d77a 	srli	r8,r17,29
    b5b4:	100490fa 	slli	r2,r2,3
    b5b8:	882290fa 	slli	r17,r17,3
    b5bc:	0401ffc4 	movi	r16,2047
    b5c0:	4090b03a 	or	r8,r8,r2
    b5c4:	003e4106 	br	aecc <__alt_data_end+0xfffebacc>
    b5c8:	0141ffc4 	movi	r5,2047
    b5cc:	117fc71e 	bne	r2,r5,b4ec <__alt_data_end+0xfffec0ec>
    b5d0:	4811883a 	mov	r8,r9
    b5d4:	3023883a 	mov	r17,r6
    b5d8:	1021883a 	mov	r16,r2
    b5dc:	003e3b06 	br	aecc <__alt_data_end+0xfffebacc>
    b5e0:	10002f26 	beq	r2,zero,b6a0 <__adddf3+0x850>
    b5e4:	4984b03a 	or	r2,r9,r6
    b5e8:	10001126 	beq	r2,zero,b630 <__adddf3+0x7e0>
    b5ec:	4004d0fa 	srli	r2,r8,3
    b5f0:	8822d0fa 	srli	r17,r17,3
    b5f4:	4010977a 	slli	r8,r8,29
    b5f8:	10c0022c 	andhi	r3,r2,8
    b5fc:	4462b03a 	or	r17,r8,r17
    b600:	183feb26 	beq	r3,zero,b5b0 <__alt_data_end+0xfffec1b0>
    b604:	4808d0fa 	srli	r4,r9,3
    b608:	20c0022c 	andhi	r3,r4,8
    b60c:	183fe81e 	bne	r3,zero,b5b0 <__alt_data_end+0xfffec1b0>
    b610:	300cd0fa 	srli	r6,r6,3
    b614:	4806977a 	slli	r3,r9,29
    b618:	2005883a 	mov	r2,r4
    b61c:	19a2b03a 	or	r17,r3,r6
    b620:	003fe306 	br	b5b0 <__alt_data_end+0xfffec1b0>
    b624:	0011883a 	mov	r8,zero
    b628:	0005883a 	mov	r2,zero
    b62c:	003e3f06 	br	af2c <__alt_data_end+0xfffebb2c>
    b630:	0401ffc4 	movi	r16,2047
    b634:	003e2506 	br	aecc <__alt_data_end+0xfffebacc>
    b638:	0013883a 	mov	r9,zero
    b63c:	003f8406 	br	b450 <__alt_data_end+0xfffec050>
    b640:	0005883a 	mov	r2,zero
    b644:	0007883a 	mov	r3,zero
    b648:	003e8906 	br	b070 <__alt_data_end+0xfffebc70>
    b64c:	197ff804 	addi	r5,r3,-32
    b650:	01000804 	movi	r4,32
    b654:	414ad83a 	srl	r5,r8,r5
    b658:	19002426 	beq	r3,r4,b6ec <__adddf3+0x89c>
    b65c:	01001004 	movi	r4,64
    b660:	20c7c83a 	sub	r3,r4,r3
    b664:	40c6983a 	sll	r3,r8,r3
    b668:	1c46b03a 	or	r3,r3,r17
    b66c:	1806c03a 	cmpne	r3,r3,zero
    b670:	28e2b03a 	or	r17,r5,r3
    b674:	0007883a 	mov	r3,zero
    b678:	003f2306 	br	b308 <__alt_data_end+0xfffebf08>
    b67c:	0007883a 	mov	r3,zero
    b680:	5811883a 	mov	r8,r11
    b684:	00bfffc4 	movi	r2,-1
    b688:	0401ffc4 	movi	r16,2047
    b68c:	003e7806 	br	b070 <__alt_data_end+0xfffebc70>
    b690:	4462b03a 	or	r17,r8,r17
    b694:	8822c03a 	cmpne	r17,r17,zero
    b698:	0009883a 	mov	r4,zero
    b69c:	003fa006 	br	b520 <__alt_data_end+0xfffec120>
    b6a0:	4811883a 	mov	r8,r9
    b6a4:	3023883a 	mov	r17,r6
    b6a8:	0401ffc4 	movi	r16,2047
    b6ac:	003e0706 	br	aecc <__alt_data_end+0xfffebacc>
    b6b0:	4811883a 	mov	r8,r9
    b6b4:	3023883a 	mov	r17,r6
    b6b8:	003e0406 	br	aecc <__alt_data_end+0xfffebacc>
    b6bc:	21fff804 	addi	r7,r4,-32
    b6c0:	01400804 	movi	r5,32
    b6c4:	41ced83a 	srl	r7,r8,r7
    b6c8:	21400a26 	beq	r4,r5,b6f4 <__adddf3+0x8a4>
    b6cc:	01401004 	movi	r5,64
    b6d0:	2909c83a 	sub	r4,r5,r4
    b6d4:	4108983a 	sll	r4,r8,r4
    b6d8:	2448b03a 	or	r4,r4,r17
    b6dc:	2008c03a 	cmpne	r4,r4,zero
    b6e0:	3922b03a 	or	r17,r7,r4
    b6e4:	0009883a 	mov	r4,zero
    b6e8:	003f8d06 	br	b520 <__alt_data_end+0xfffec120>
    b6ec:	0007883a 	mov	r3,zero
    b6f0:	003fdd06 	br	b668 <__alt_data_end+0xfffec268>
    b6f4:	0009883a 	mov	r4,zero
    b6f8:	003ff706 	br	b6d8 <__alt_data_end+0xfffec2d8>

0000b6fc <__divdf3>:
    b6fc:	defff004 	addi	sp,sp,-64
    b700:	dc800815 	stw	r18,32(sp)
    b704:	2824d53a 	srli	r18,r5,20
    b708:	dd800c15 	stw	r22,48(sp)
    b70c:	282cd7fa 	srli	r22,r5,31
    b710:	dc000615 	stw	r16,24(sp)
    b714:	04000434 	movhi	r16,16
    b718:	843fffc4 	addi	r16,r16,-1
    b71c:	dfc00f15 	stw	ra,60(sp)
    b720:	df000e15 	stw	fp,56(sp)
    b724:	ddc00d15 	stw	r23,52(sp)
    b728:	dd400b15 	stw	r21,44(sp)
    b72c:	dd000a15 	stw	r20,40(sp)
    b730:	dcc00915 	stw	r19,36(sp)
    b734:	dc400715 	stw	r17,28(sp)
    b738:	9481ffcc 	andi	r18,r18,2047
    b73c:	2c20703a 	and	r16,r5,r16
    b740:	b2003fcc 	andi	r8,r22,255
    b744:	90006126 	beq	r18,zero,b8cc <__divdf3+0x1d0>
    b748:	0081ffc4 	movi	r2,2047
    b74c:	202b883a 	mov	r21,r4
    b750:	90803726 	beq	r18,r2,b830 <__divdf3+0x134>
    b754:	80800434 	orhi	r2,r16,16
    b758:	100490fa 	slli	r2,r2,3
    b75c:	2020d77a 	srli	r16,r4,29
    b760:	202a90fa 	slli	r21,r4,3
    b764:	94bf0044 	addi	r18,r18,-1023
    b768:	80a0b03a 	or	r16,r16,r2
    b76c:	0013883a 	mov	r9,zero
    b770:	000b883a 	mov	r5,zero
    b774:	3806d53a 	srli	r3,r7,20
    b778:	382ed7fa 	srli	r23,r7,31
    b77c:	04400434 	movhi	r17,16
    b780:	8c7fffc4 	addi	r17,r17,-1
    b784:	18c1ffcc 	andi	r3,r3,2047
    b788:	3029883a 	mov	r20,r6
    b78c:	3c62703a 	and	r17,r7,r17
    b790:	bf003fcc 	andi	fp,r23,255
    b794:	18006e26 	beq	r3,zero,b950 <__divdf3+0x254>
    b798:	0081ffc4 	movi	r2,2047
    b79c:	18806626 	beq	r3,r2,b938 <__divdf3+0x23c>
    b7a0:	88800434 	orhi	r2,r17,16
    b7a4:	100490fa 	slli	r2,r2,3
    b7a8:	3022d77a 	srli	r17,r6,29
    b7ac:	302890fa 	slli	r20,r6,3
    b7b0:	18ff0044 	addi	r3,r3,-1023
    b7b4:	88a2b03a 	or	r17,r17,r2
    b7b8:	000f883a 	mov	r7,zero
    b7bc:	b5e6f03a 	xor	r19,r22,r23
    b7c0:	3a4cb03a 	or	r6,r7,r9
    b7c4:	008003c4 	movi	r2,15
    b7c8:	9809883a 	mov	r4,r19
    b7cc:	90c7c83a 	sub	r3,r18,r3
    b7d0:	9cc03fcc 	andi	r19,r19,255
    b7d4:	11809636 	bltu	r2,r6,ba30 <__divdf3+0x334>
    b7d8:	300c90ba 	slli	r6,r6,2
    b7dc:	00800074 	movhi	r2,1
    b7e0:	10adfc04 	addi	r2,r2,-18448
    b7e4:	308d883a 	add	r6,r6,r2
    b7e8:	30800017 	ldw	r2,0(r6)
    b7ec:	1000683a 	jmp	r2
    b7f0:	0000ba30 	cmpltui	zero,zero,744
    b7f4:	0000b868 	cmpgeui	zero,zero,737
    b7f8:	0000ba20 	cmpeqi	zero,zero,744
    b7fc:	0000b85c 	xori	zero,zero,737
    b800:	0000ba20 	cmpeqi	zero,zero,744
    b804:	0000b9f4 	movhi	zero,743
    b808:	0000ba20 	cmpeqi	zero,zero,744
    b80c:	0000b85c 	xori	zero,zero,737
    b810:	0000b868 	cmpgeui	zero,zero,737
    b814:	0000b868 	cmpgeui	zero,zero,737
    b818:	0000b9f4 	movhi	zero,743
    b81c:	0000b85c 	xori	zero,zero,737
    b820:	0000b84c 	andi	zero,zero,737
    b824:	0000b84c 	andi	zero,zero,737
    b828:	0000b84c 	andi	zero,zero,737
    b82c:	0000bdb8 	rdprs	zero,zero,758
    b830:	2404b03a 	or	r2,r4,r16
    b834:	10006c1e 	bne	r2,zero,b9e8 <__divdf3+0x2ec>
    b838:	02400204 	movi	r9,8
    b83c:	0021883a 	mov	r16,zero
    b840:	002b883a 	mov	r21,zero
    b844:	01400084 	movi	r5,2
    b848:	003fca06 	br	b774 <__alt_data_end+0xfffec374>
    b84c:	8023883a 	mov	r17,r16
    b850:	a829883a 	mov	r20,r21
    b854:	4039883a 	mov	fp,r8
    b858:	280f883a 	mov	r7,r5
    b85c:	00800084 	movi	r2,2
    b860:	3881601e 	bne	r7,r2,bde4 <__divdf3+0x6e8>
    b864:	e027883a 	mov	r19,fp
    b868:	9900004c 	andi	r4,r19,1
    b86c:	0081ffc4 	movi	r2,2047
    b870:	0021883a 	mov	r16,zero
    b874:	002b883a 	mov	r21,zero
    b878:	1004953a 	slli	r2,r2,20
    b87c:	20c03fcc 	andi	r3,r4,255
    b880:	01400434 	movhi	r5,16
    b884:	297fffc4 	addi	r5,r5,-1
    b888:	180697fa 	slli	r3,r3,31
    b88c:	8160703a 	and	r16,r16,r5
    b890:	80a0b03a 	or	r16,r16,r2
    b894:	80c6b03a 	or	r3,r16,r3
    b898:	a805883a 	mov	r2,r21
    b89c:	dfc00f17 	ldw	ra,60(sp)
    b8a0:	df000e17 	ldw	fp,56(sp)
    b8a4:	ddc00d17 	ldw	r23,52(sp)
    b8a8:	dd800c17 	ldw	r22,48(sp)
    b8ac:	dd400b17 	ldw	r21,44(sp)
    b8b0:	dd000a17 	ldw	r20,40(sp)
    b8b4:	dcc00917 	ldw	r19,36(sp)
    b8b8:	dc800817 	ldw	r18,32(sp)
    b8bc:	dc400717 	ldw	r17,28(sp)
    b8c0:	dc000617 	ldw	r16,24(sp)
    b8c4:	dec01004 	addi	sp,sp,64
    b8c8:	f800283a 	ret
    b8cc:	2404b03a 	or	r2,r4,r16
    b8d0:	2023883a 	mov	r17,r4
    b8d4:	10003f26 	beq	r2,zero,b9d4 <__divdf3+0x2d8>
    b8d8:	80015e26 	beq	r16,zero,be54 <__divdf3+0x758>
    b8dc:	8009883a 	mov	r4,r16
    b8e0:	d9800215 	stw	r6,8(sp)
    b8e4:	d9c00515 	stw	r7,20(sp)
    b8e8:	da000415 	stw	r8,16(sp)
    b8ec:	000d6900 	call	d690 <__clzsi2>
    b8f0:	d9800217 	ldw	r6,8(sp)
    b8f4:	d9c00517 	ldw	r7,20(sp)
    b8f8:	da000417 	ldw	r8,16(sp)
    b8fc:	113ffd44 	addi	r4,r2,-11
    b900:	00c00704 	movi	r3,28
    b904:	19014f16 	blt	r3,r4,be44 <__divdf3+0x748>
    b908:	00c00744 	movi	r3,29
    b90c:	157ffe04 	addi	r21,r2,-8
    b910:	1907c83a 	sub	r3,r3,r4
    b914:	8560983a 	sll	r16,r16,r21
    b918:	88c6d83a 	srl	r3,r17,r3
    b91c:	8d6a983a 	sll	r21,r17,r21
    b920:	1c20b03a 	or	r16,r3,r16
    b924:	1080fcc4 	addi	r2,r2,1011
    b928:	00a5c83a 	sub	r18,zero,r2
    b92c:	0013883a 	mov	r9,zero
    b930:	000b883a 	mov	r5,zero
    b934:	003f8f06 	br	b774 <__alt_data_end+0xfffec374>
    b938:	3444b03a 	or	r2,r6,r17
    b93c:	1000231e 	bne	r2,zero,b9cc <__divdf3+0x2d0>
    b940:	0023883a 	mov	r17,zero
    b944:	0029883a 	mov	r20,zero
    b948:	01c00084 	movi	r7,2
    b94c:	003f9b06 	br	b7bc <__alt_data_end+0xfffec3bc>
    b950:	3444b03a 	or	r2,r6,r17
    b954:	10001926 	beq	r2,zero,b9bc <__divdf3+0x2c0>
    b958:	88014b26 	beq	r17,zero,be88 <__divdf3+0x78c>
    b95c:	8809883a 	mov	r4,r17
    b960:	d9400115 	stw	r5,4(sp)
    b964:	d9800215 	stw	r6,8(sp)
    b968:	da000415 	stw	r8,16(sp)
    b96c:	da400315 	stw	r9,12(sp)
    b970:	000d6900 	call	d690 <__clzsi2>
    b974:	d9400117 	ldw	r5,4(sp)
    b978:	d9800217 	ldw	r6,8(sp)
    b97c:	da000417 	ldw	r8,16(sp)
    b980:	da400317 	ldw	r9,12(sp)
    b984:	113ffd44 	addi	r4,r2,-11
    b988:	00c00704 	movi	r3,28
    b98c:	19013a16 	blt	r3,r4,be78 <__divdf3+0x77c>
    b990:	00c00744 	movi	r3,29
    b994:	153ffe04 	addi	r20,r2,-8
    b998:	1907c83a 	sub	r3,r3,r4
    b99c:	8d22983a 	sll	r17,r17,r20
    b9a0:	30c6d83a 	srl	r3,r6,r3
    b9a4:	3528983a 	sll	r20,r6,r20
    b9a8:	1c62b03a 	or	r17,r3,r17
    b9ac:	1080fcc4 	addi	r2,r2,1011
    b9b0:	0087c83a 	sub	r3,zero,r2
    b9b4:	000f883a 	mov	r7,zero
    b9b8:	003f8006 	br	b7bc <__alt_data_end+0xfffec3bc>
    b9bc:	0023883a 	mov	r17,zero
    b9c0:	0029883a 	mov	r20,zero
    b9c4:	01c00044 	movi	r7,1
    b9c8:	003f7c06 	br	b7bc <__alt_data_end+0xfffec3bc>
    b9cc:	01c000c4 	movi	r7,3
    b9d0:	003f7a06 	br	b7bc <__alt_data_end+0xfffec3bc>
    b9d4:	02400104 	movi	r9,4
    b9d8:	0021883a 	mov	r16,zero
    b9dc:	002b883a 	mov	r21,zero
    b9e0:	01400044 	movi	r5,1
    b9e4:	003f6306 	br	b774 <__alt_data_end+0xfffec374>
    b9e8:	02400304 	movi	r9,12
    b9ec:	014000c4 	movi	r5,3
    b9f0:	003f6006 	br	b774 <__alt_data_end+0xfffec374>
    b9f4:	04000434 	movhi	r16,16
    b9f8:	0009883a 	mov	r4,zero
    b9fc:	843fffc4 	addi	r16,r16,-1
    ba00:	057fffc4 	movi	r21,-1
    ba04:	0081ffc4 	movi	r2,2047
    ba08:	003f9b06 	br	b878 <__alt_data_end+0xfffec478>
    ba0c:	00c00044 	movi	r3,1
    ba10:	1887c83a 	sub	r3,r3,r2
    ba14:	01000e04 	movi	r4,56
    ba18:	20c1530e 	bge	r4,r3,bf68 <__divdf3+0x86c>
    ba1c:	9900004c 	andi	r4,r19,1
    ba20:	0005883a 	mov	r2,zero
    ba24:	0021883a 	mov	r16,zero
    ba28:	002b883a 	mov	r21,zero
    ba2c:	003f9206 	br	b878 <__alt_data_end+0xfffec478>
    ba30:	8c012e36 	bltu	r17,r16,beec <__divdf3+0x7f0>
    ba34:	84412c26 	beq	r16,r17,bee8 <__divdf3+0x7ec>
    ba38:	a82f883a 	mov	r23,r21
    ba3c:	18ffffc4 	addi	r3,r3,-1
    ba40:	002b883a 	mov	r21,zero
    ba44:	a004d63a 	srli	r2,r20,24
    ba48:	8822923a 	slli	r17,r17,8
    ba4c:	a028923a 	slli	r20,r20,8
    ba50:	8009883a 	mov	r4,r16
    ba54:	88acb03a 	or	r22,r17,r2
    ba58:	dd000015 	stw	r20,0(sp)
    ba5c:	b028d43a 	srli	r20,r22,16
    ba60:	d8c00215 	stw	r3,8(sp)
    ba64:	b4bfffcc 	andi	r18,r22,65535
    ba68:	a00b883a 	mov	r5,r20
    ba6c:	000ad6c0 	call	ad6c <__udivsi3>
    ba70:	100b883a 	mov	r5,r2
    ba74:	9009883a 	mov	r4,r18
    ba78:	1023883a 	mov	r17,r2
    ba7c:	000ae280 	call	ae28 <__mulsi3>
    ba80:	8009883a 	mov	r4,r16
    ba84:	a00b883a 	mov	r5,r20
    ba88:	1039883a 	mov	fp,r2
    ba8c:	000add00 	call	add0 <__umodsi3>
    ba90:	1004943a 	slli	r2,r2,16
    ba94:	b808d43a 	srli	r4,r23,16
    ba98:	d8c00217 	ldw	r3,8(sp)
    ba9c:	2084b03a 	or	r2,r4,r2
    baa0:	1700062e 	bgeu	r2,fp,babc <__divdf3+0x3c0>
    baa4:	1585883a 	add	r2,r2,r22
    baa8:	893fffc4 	addi	r4,r17,-1
    baac:	15811d36 	bltu	r2,r22,bf24 <__divdf3+0x828>
    bab0:	17011c2e 	bgeu	r2,fp,bf24 <__divdf3+0x828>
    bab4:	8c7fff84 	addi	r17,r17,-2
    bab8:	1585883a 	add	r2,r2,r22
    babc:	1739c83a 	sub	fp,r2,fp
    bac0:	a00b883a 	mov	r5,r20
    bac4:	e009883a 	mov	r4,fp
    bac8:	d8c00215 	stw	r3,8(sp)
    bacc:	000ad6c0 	call	ad6c <__udivsi3>
    bad0:	100b883a 	mov	r5,r2
    bad4:	9009883a 	mov	r4,r18
    bad8:	1021883a 	mov	r16,r2
    badc:	000ae280 	call	ae28 <__mulsi3>
    bae0:	a00b883a 	mov	r5,r20
    bae4:	e009883a 	mov	r4,fp
    bae8:	d8800415 	stw	r2,16(sp)
    baec:	000add00 	call	add0 <__umodsi3>
    baf0:	1004943a 	slli	r2,r2,16
    baf4:	da000417 	ldw	r8,16(sp)
    baf8:	bdffffcc 	andi	r23,r23,65535
    bafc:	b884b03a 	or	r2,r23,r2
    bb00:	d8c00217 	ldw	r3,8(sp)
    bb04:	1200062e 	bgeu	r2,r8,bb20 <__divdf3+0x424>
    bb08:	1585883a 	add	r2,r2,r22
    bb0c:	813fffc4 	addi	r4,r16,-1
    bb10:	15810236 	bltu	r2,r22,bf1c <__divdf3+0x820>
    bb14:	1201012e 	bgeu	r2,r8,bf1c <__divdf3+0x820>
    bb18:	843fff84 	addi	r16,r16,-2
    bb1c:	1585883a 	add	r2,r2,r22
    bb20:	8822943a 	slli	r17,r17,16
    bb24:	d9800017 	ldw	r6,0(sp)
    bb28:	1211c83a 	sub	r8,r2,r8
    bb2c:	8c22b03a 	or	r17,r17,r16
    bb30:	373fffcc 	andi	fp,r6,65535
    bb34:	8abfffcc 	andi	r10,r17,65535
    bb38:	8820d43a 	srli	r16,r17,16
    bb3c:	5009883a 	mov	r4,r10
    bb40:	e00b883a 	mov	r5,fp
    bb44:	302ed43a 	srli	r23,r6,16
    bb48:	d8c00215 	stw	r3,8(sp)
    bb4c:	da000415 	stw	r8,16(sp)
    bb50:	da800115 	stw	r10,4(sp)
    bb54:	000ae280 	call	ae28 <__mulsi3>
    bb58:	800b883a 	mov	r5,r16
    bb5c:	e009883a 	mov	r4,fp
    bb60:	d8800515 	stw	r2,20(sp)
    bb64:	000ae280 	call	ae28 <__mulsi3>
    bb68:	8009883a 	mov	r4,r16
    bb6c:	b80b883a 	mov	r5,r23
    bb70:	d8800315 	stw	r2,12(sp)
    bb74:	000ae280 	call	ae28 <__mulsi3>
    bb78:	da800117 	ldw	r10,4(sp)
    bb7c:	b80b883a 	mov	r5,r23
    bb80:	1021883a 	mov	r16,r2
    bb84:	5009883a 	mov	r4,r10
    bb88:	000ae280 	call	ae28 <__mulsi3>
    bb8c:	d9c00517 	ldw	r7,20(sp)
    bb90:	da400317 	ldw	r9,12(sp)
    bb94:	d8c00217 	ldw	r3,8(sp)
    bb98:	3808d43a 	srli	r4,r7,16
    bb9c:	1245883a 	add	r2,r2,r9
    bba0:	da000417 	ldw	r8,16(sp)
    bba4:	2085883a 	add	r2,r4,r2
    bba8:	1240022e 	bgeu	r2,r9,bbb4 <__divdf3+0x4b8>
    bbac:	01000074 	movhi	r4,1
    bbb0:	8121883a 	add	r16,r16,r4
    bbb4:	1008d43a 	srli	r4,r2,16
    bbb8:	1004943a 	slli	r2,r2,16
    bbbc:	39ffffcc 	andi	r7,r7,65535
    bbc0:	2409883a 	add	r4,r4,r16
    bbc4:	11c5883a 	add	r2,r2,r7
    bbc8:	4100bb36 	bltu	r8,r4,beb8 <__divdf3+0x7bc>
    bbcc:	4100d726 	beq	r8,r4,bf2c <__divdf3+0x830>
    bbd0:	4109c83a 	sub	r4,r8,r4
    bbd4:	a8a1c83a 	sub	r16,r21,r2
    bbd8:	ac2b803a 	cmpltu	r21,r21,r16
    bbdc:	256bc83a 	sub	r21,r4,r21
    bbe0:	b540d926 	beq	r22,r21,bf48 <__divdf3+0x84c>
    bbe4:	a00b883a 	mov	r5,r20
    bbe8:	a809883a 	mov	r4,r21
    bbec:	d8c00215 	stw	r3,8(sp)
    bbf0:	000ad6c0 	call	ad6c <__udivsi3>
    bbf4:	100b883a 	mov	r5,r2
    bbf8:	9009883a 	mov	r4,r18
    bbfc:	d8800515 	stw	r2,20(sp)
    bc00:	000ae280 	call	ae28 <__mulsi3>
    bc04:	a809883a 	mov	r4,r21
    bc08:	a00b883a 	mov	r5,r20
    bc0c:	d8800415 	stw	r2,16(sp)
    bc10:	000add00 	call	add0 <__umodsi3>
    bc14:	1004943a 	slli	r2,r2,16
    bc18:	8008d43a 	srli	r4,r16,16
    bc1c:	da000417 	ldw	r8,16(sp)
    bc20:	d8c00217 	ldw	r3,8(sp)
    bc24:	2084b03a 	or	r2,r4,r2
    bc28:	d9c00517 	ldw	r7,20(sp)
    bc2c:	1200062e 	bgeu	r2,r8,bc48 <__divdf3+0x54c>
    bc30:	1585883a 	add	r2,r2,r22
    bc34:	393fffc4 	addi	r4,r7,-1
    bc38:	1580c536 	bltu	r2,r22,bf50 <__divdf3+0x854>
    bc3c:	1200c42e 	bgeu	r2,r8,bf50 <__divdf3+0x854>
    bc40:	39ffff84 	addi	r7,r7,-2
    bc44:	1585883a 	add	r2,r2,r22
    bc48:	122bc83a 	sub	r21,r2,r8
    bc4c:	a00b883a 	mov	r5,r20
    bc50:	a809883a 	mov	r4,r21
    bc54:	d8c00215 	stw	r3,8(sp)
    bc58:	d9c00515 	stw	r7,20(sp)
    bc5c:	000ad6c0 	call	ad6c <__udivsi3>
    bc60:	9009883a 	mov	r4,r18
    bc64:	100b883a 	mov	r5,r2
    bc68:	d8800415 	stw	r2,16(sp)
    bc6c:	000ae280 	call	ae28 <__mulsi3>
    bc70:	a809883a 	mov	r4,r21
    bc74:	a00b883a 	mov	r5,r20
    bc78:	1025883a 	mov	r18,r2
    bc7c:	000add00 	call	add0 <__umodsi3>
    bc80:	1004943a 	slli	r2,r2,16
    bc84:	813fffcc 	andi	r4,r16,65535
    bc88:	d8c00217 	ldw	r3,8(sp)
    bc8c:	20a0b03a 	or	r16,r4,r2
    bc90:	d9c00517 	ldw	r7,20(sp)
    bc94:	da000417 	ldw	r8,16(sp)
    bc98:	8480062e 	bgeu	r16,r18,bcb4 <__divdf3+0x5b8>
    bc9c:	85a1883a 	add	r16,r16,r22
    bca0:	40bfffc4 	addi	r2,r8,-1
    bca4:	8580ac36 	bltu	r16,r22,bf58 <__divdf3+0x85c>
    bca8:	8480ab2e 	bgeu	r16,r18,bf58 <__divdf3+0x85c>
    bcac:	423fff84 	addi	r8,r8,-2
    bcb0:	85a1883a 	add	r16,r16,r22
    bcb4:	3804943a 	slli	r2,r7,16
    bcb8:	84a1c83a 	sub	r16,r16,r18
    bcbc:	e009883a 	mov	r4,fp
    bcc0:	1228b03a 	or	r20,r2,r8
    bcc4:	a1ffffcc 	andi	r7,r20,65535
    bcc8:	a024d43a 	srli	r18,r20,16
    bccc:	380b883a 	mov	r5,r7
    bcd0:	d8c00215 	stw	r3,8(sp)
    bcd4:	d9c00515 	stw	r7,20(sp)
    bcd8:	000ae280 	call	ae28 <__mulsi3>
    bcdc:	900b883a 	mov	r5,r18
    bce0:	e009883a 	mov	r4,fp
    bce4:	102b883a 	mov	r21,r2
    bce8:	000ae280 	call	ae28 <__mulsi3>
    bcec:	900b883a 	mov	r5,r18
    bcf0:	b809883a 	mov	r4,r23
    bcf4:	1039883a 	mov	fp,r2
    bcf8:	000ae280 	call	ae28 <__mulsi3>
    bcfc:	d9c00517 	ldw	r7,20(sp)
    bd00:	b80b883a 	mov	r5,r23
    bd04:	1025883a 	mov	r18,r2
    bd08:	3809883a 	mov	r4,r7
    bd0c:	000ae280 	call	ae28 <__mulsi3>
    bd10:	a808d43a 	srli	r4,r21,16
    bd14:	1705883a 	add	r2,r2,fp
    bd18:	d8c00217 	ldw	r3,8(sp)
    bd1c:	2085883a 	add	r2,r4,r2
    bd20:	1700022e 	bgeu	r2,fp,bd2c <__divdf3+0x630>
    bd24:	01000074 	movhi	r4,1
    bd28:	9125883a 	add	r18,r18,r4
    bd2c:	1008d43a 	srli	r4,r2,16
    bd30:	1004943a 	slli	r2,r2,16
    bd34:	ad7fffcc 	andi	r21,r21,65535
    bd38:	2489883a 	add	r4,r4,r18
    bd3c:	1545883a 	add	r2,r2,r21
    bd40:	81003836 	bltu	r16,r4,be24 <__divdf3+0x728>
    bd44:	81003626 	beq	r16,r4,be20 <__divdf3+0x724>
    bd48:	a5000054 	ori	r20,r20,1
    bd4c:	1880ffc4 	addi	r2,r3,1023
    bd50:	00bf2e0e 	bge	zero,r2,ba0c <__alt_data_end+0xfffec60c>
    bd54:	a10001cc 	andi	r4,r20,7
    bd58:	20000726 	beq	r4,zero,bd78 <__divdf3+0x67c>
    bd5c:	a10003cc 	andi	r4,r20,15
    bd60:	01400104 	movi	r5,4
    bd64:	21400426 	beq	r4,r5,bd78 <__divdf3+0x67c>
    bd68:	a149883a 	add	r4,r20,r5
    bd6c:	2529803a 	cmpltu	r20,r4,r20
    bd70:	8d23883a 	add	r17,r17,r20
    bd74:	2029883a 	mov	r20,r4
    bd78:	8900402c 	andhi	r4,r17,256
    bd7c:	20000426 	beq	r4,zero,bd90 <__divdf3+0x694>
    bd80:	18810004 	addi	r2,r3,1024
    bd84:	00ffc034 	movhi	r3,65280
    bd88:	18ffffc4 	addi	r3,r3,-1
    bd8c:	88e2703a 	and	r17,r17,r3
    bd90:	00c1ff84 	movi	r3,2046
    bd94:	18beb416 	blt	r3,r2,b868 <__alt_data_end+0xfffec468>
    bd98:	a028d0fa 	srli	r20,r20,3
    bd9c:	882a977a 	slli	r21,r17,29
    bda0:	8820927a 	slli	r16,r17,9
    bda4:	1081ffcc 	andi	r2,r2,2047
    bda8:	ad2ab03a 	or	r21,r21,r20
    bdac:	8020d33a 	srli	r16,r16,12
    bdb0:	9900004c 	andi	r4,r19,1
    bdb4:	003eb006 	br	b878 <__alt_data_end+0xfffec478>
    bdb8:	8080022c 	andhi	r2,r16,8
    bdbc:	10001226 	beq	r2,zero,be08 <__divdf3+0x70c>
    bdc0:	8880022c 	andhi	r2,r17,8
    bdc4:	1000101e 	bne	r2,zero,be08 <__divdf3+0x70c>
    bdc8:	00800434 	movhi	r2,16
    bdcc:	8c000234 	orhi	r16,r17,8
    bdd0:	10bfffc4 	addi	r2,r2,-1
    bdd4:	b809883a 	mov	r4,r23
    bdd8:	80a0703a 	and	r16,r16,r2
    bddc:	a02b883a 	mov	r21,r20
    bde0:	003f0806 	br	ba04 <__alt_data_end+0xfffec604>
    bde4:	008000c4 	movi	r2,3
    bde8:	3880b126 	beq	r7,r2,c0b0 <__divdf3+0x9b4>
    bdec:	00800044 	movi	r2,1
    bdf0:	38805b1e 	bne	r7,r2,bf60 <__divdf3+0x864>
    bdf4:	e009883a 	mov	r4,fp
    bdf8:	0005883a 	mov	r2,zero
    bdfc:	0021883a 	mov	r16,zero
    be00:	002b883a 	mov	r21,zero
    be04:	003e9c06 	br	b878 <__alt_data_end+0xfffec478>
    be08:	00800434 	movhi	r2,16
    be0c:	84000234 	orhi	r16,r16,8
    be10:	10bfffc4 	addi	r2,r2,-1
    be14:	b009883a 	mov	r4,r22
    be18:	80a0703a 	and	r16,r16,r2
    be1c:	003ef906 	br	ba04 <__alt_data_end+0xfffec604>
    be20:	103fca26 	beq	r2,zero,bd4c <__alt_data_end+0xfffec94c>
    be24:	b421883a 	add	r16,r22,r16
    be28:	a17fffc4 	addi	r5,r20,-1
    be2c:	8580422e 	bgeu	r16,r22,bf38 <__divdf3+0x83c>
    be30:	2829883a 	mov	r20,r5
    be34:	813fc41e 	bne	r16,r4,bd48 <__alt_data_end+0xfffec948>
    be38:	d9800017 	ldw	r6,0(sp)
    be3c:	30bfc21e 	bne	r6,r2,bd48 <__alt_data_end+0xfffec948>
    be40:	003fc206 	br	bd4c <__alt_data_end+0xfffec94c>
    be44:	143ff604 	addi	r16,r2,-40
    be48:	8c20983a 	sll	r16,r17,r16
    be4c:	002b883a 	mov	r21,zero
    be50:	003eb406 	br	b924 <__alt_data_end+0xfffec524>
    be54:	d9800215 	stw	r6,8(sp)
    be58:	d9c00515 	stw	r7,20(sp)
    be5c:	da000415 	stw	r8,16(sp)
    be60:	000d6900 	call	d690 <__clzsi2>
    be64:	10800804 	addi	r2,r2,32
    be68:	da000417 	ldw	r8,16(sp)
    be6c:	d9c00517 	ldw	r7,20(sp)
    be70:	d9800217 	ldw	r6,8(sp)
    be74:	003ea106 	br	b8fc <__alt_data_end+0xfffec4fc>
    be78:	147ff604 	addi	r17,r2,-40
    be7c:	3462983a 	sll	r17,r6,r17
    be80:	0029883a 	mov	r20,zero
    be84:	003ec906 	br	b9ac <__alt_data_end+0xfffec5ac>
    be88:	3009883a 	mov	r4,r6
    be8c:	d9400115 	stw	r5,4(sp)
    be90:	d9800215 	stw	r6,8(sp)
    be94:	da000415 	stw	r8,16(sp)
    be98:	da400315 	stw	r9,12(sp)
    be9c:	000d6900 	call	d690 <__clzsi2>
    bea0:	10800804 	addi	r2,r2,32
    bea4:	da400317 	ldw	r9,12(sp)
    bea8:	da000417 	ldw	r8,16(sp)
    beac:	d9800217 	ldw	r6,8(sp)
    beb0:	d9400117 	ldw	r5,4(sp)
    beb4:	003eb306 	br	b984 <__alt_data_end+0xfffec584>
    beb8:	d9800017 	ldw	r6,0(sp)
    bebc:	a9ab883a 	add	r21,r21,r6
    bec0:	a98b803a 	cmpltu	r5,r21,r6
    bec4:	2d8b883a 	add	r5,r5,r22
    bec8:	2a11883a 	add	r8,r5,r8
    becc:	897fffc4 	addi	r5,r17,-1
    bed0:	b2000c2e 	bgeu	r22,r8,bf04 <__divdf3+0x808>
    bed4:	41003f36 	bltu	r8,r4,bfd4 <__divdf3+0x8d8>
    bed8:	22006c26 	beq	r4,r8,c08c <__divdf3+0x990>
    bedc:	4109c83a 	sub	r4,r8,r4
    bee0:	2823883a 	mov	r17,r5
    bee4:	003f3b06 	br	bbd4 <__alt_data_end+0xfffec7d4>
    bee8:	ad3ed336 	bltu	r21,r20,ba38 <__alt_data_end+0xfffec638>
    beec:	a804d07a 	srli	r2,r21,1
    bef0:	802e97fa 	slli	r23,r16,31
    bef4:	a82a97fa 	slli	r21,r21,31
    bef8:	8020d07a 	srli	r16,r16,1
    befc:	b8aeb03a 	or	r23,r23,r2
    bf00:	003ed006 	br	ba44 <__alt_data_end+0xfffec644>
    bf04:	b23ff51e 	bne	r22,r8,bedc <__alt_data_end+0xfffecadc>
    bf08:	d9800017 	ldw	r6,0(sp)
    bf0c:	a9bff12e 	bgeu	r21,r6,bed4 <__alt_data_end+0xfffecad4>
    bf10:	b109c83a 	sub	r4,r22,r4
    bf14:	2823883a 	mov	r17,r5
    bf18:	003f2e06 	br	bbd4 <__alt_data_end+0xfffec7d4>
    bf1c:	2021883a 	mov	r16,r4
    bf20:	003eff06 	br	bb20 <__alt_data_end+0xfffec720>
    bf24:	2023883a 	mov	r17,r4
    bf28:	003ee406 	br	babc <__alt_data_end+0xfffec6bc>
    bf2c:	a8bfe236 	bltu	r21,r2,beb8 <__alt_data_end+0xfffecab8>
    bf30:	0009883a 	mov	r4,zero
    bf34:	003f2706 	br	bbd4 <__alt_data_end+0xfffec7d4>
    bf38:	81002d36 	bltu	r16,r4,bff0 <__divdf3+0x8f4>
    bf3c:	24005626 	beq	r4,r16,c098 <__divdf3+0x99c>
    bf40:	2829883a 	mov	r20,r5
    bf44:	003f8006 	br	bd48 <__alt_data_end+0xfffec948>
    bf48:	053fffc4 	movi	r20,-1
    bf4c:	003f7f06 	br	bd4c <__alt_data_end+0xfffec94c>
    bf50:	200f883a 	mov	r7,r4
    bf54:	003f3c06 	br	bc48 <__alt_data_end+0xfffec848>
    bf58:	1011883a 	mov	r8,r2
    bf5c:	003f5506 	br	bcb4 <__alt_data_end+0xfffec8b4>
    bf60:	e027883a 	mov	r19,fp
    bf64:	003f7906 	br	bd4c <__alt_data_end+0xfffec94c>
    bf68:	010007c4 	movi	r4,31
    bf6c:	20c02816 	blt	r4,r3,c010 <__divdf3+0x914>
    bf70:	00800804 	movi	r2,32
    bf74:	10c5c83a 	sub	r2,r2,r3
    bf78:	888a983a 	sll	r5,r17,r2
    bf7c:	a0c8d83a 	srl	r4,r20,r3
    bf80:	a084983a 	sll	r2,r20,r2
    bf84:	88e2d83a 	srl	r17,r17,r3
    bf88:	2906b03a 	or	r3,r5,r4
    bf8c:	1004c03a 	cmpne	r2,r2,zero
    bf90:	1886b03a 	or	r3,r3,r2
    bf94:	188001cc 	andi	r2,r3,7
    bf98:	10000726 	beq	r2,zero,bfb8 <__divdf3+0x8bc>
    bf9c:	188003cc 	andi	r2,r3,15
    bfa0:	01000104 	movi	r4,4
    bfa4:	11000426 	beq	r2,r4,bfb8 <__divdf3+0x8bc>
    bfa8:	1805883a 	mov	r2,r3
    bfac:	10c00104 	addi	r3,r2,4
    bfb0:	1885803a 	cmpltu	r2,r3,r2
    bfb4:	88a3883a 	add	r17,r17,r2
    bfb8:	8880202c 	andhi	r2,r17,128
    bfbc:	10002926 	beq	r2,zero,c064 <__divdf3+0x968>
    bfc0:	9900004c 	andi	r4,r19,1
    bfc4:	00800044 	movi	r2,1
    bfc8:	0021883a 	mov	r16,zero
    bfcc:	002b883a 	mov	r21,zero
    bfd0:	003e2906 	br	b878 <__alt_data_end+0xfffec478>
    bfd4:	d9800017 	ldw	r6,0(sp)
    bfd8:	8c7fff84 	addi	r17,r17,-2
    bfdc:	a9ab883a 	add	r21,r21,r6
    bfe0:	a98b803a 	cmpltu	r5,r21,r6
    bfe4:	2d8b883a 	add	r5,r5,r22
    bfe8:	2a11883a 	add	r8,r5,r8
    bfec:	003ef806 	br	bbd0 <__alt_data_end+0xfffec7d0>
    bff0:	d9800017 	ldw	r6,0(sp)
    bff4:	318f883a 	add	r7,r6,r6
    bff8:	398b803a 	cmpltu	r5,r7,r6
    bffc:	2d8d883a 	add	r6,r5,r22
    c000:	81a1883a 	add	r16,r16,r6
    c004:	a17fff84 	addi	r5,r20,-2
    c008:	d9c00015 	stw	r7,0(sp)
    c00c:	003f8806 	br	be30 <__alt_data_end+0xfffeca30>
    c010:	013ff844 	movi	r4,-31
    c014:	2085c83a 	sub	r2,r4,r2
    c018:	8888d83a 	srl	r4,r17,r2
    c01c:	00800804 	movi	r2,32
    c020:	18802126 	beq	r3,r2,c0a8 <__divdf3+0x9ac>
    c024:	04001004 	movi	r16,64
    c028:	80c7c83a 	sub	r3,r16,r3
    c02c:	88e0983a 	sll	r16,r17,r3
    c030:	8504b03a 	or	r2,r16,r20
    c034:	1004c03a 	cmpne	r2,r2,zero
    c038:	2084b03a 	or	r2,r4,r2
    c03c:	144001cc 	andi	r17,r2,7
    c040:	88000d1e 	bne	r17,zero,c078 <__divdf3+0x97c>
    c044:	0021883a 	mov	r16,zero
    c048:	102ad0fa 	srli	r21,r2,3
    c04c:	9900004c 	andi	r4,r19,1
    c050:	0005883a 	mov	r2,zero
    c054:	ac6ab03a 	or	r21,r21,r17
    c058:	003e0706 	br	b878 <__alt_data_end+0xfffec478>
    c05c:	1007883a 	mov	r3,r2
    c060:	0023883a 	mov	r17,zero
    c064:	8820927a 	slli	r16,r17,9
    c068:	1805883a 	mov	r2,r3
    c06c:	8822977a 	slli	r17,r17,29
    c070:	8020d33a 	srli	r16,r16,12
    c074:	003ff406 	br	c048 <__alt_data_end+0xfffecc48>
    c078:	10c003cc 	andi	r3,r2,15
    c07c:	01000104 	movi	r4,4
    c080:	193ff626 	beq	r3,r4,c05c <__alt_data_end+0xfffecc5c>
    c084:	0023883a 	mov	r17,zero
    c088:	003fc806 	br	bfac <__alt_data_end+0xfffecbac>
    c08c:	a8bfd136 	bltu	r21,r2,bfd4 <__alt_data_end+0xfffecbd4>
    c090:	2823883a 	mov	r17,r5
    c094:	003fa606 	br	bf30 <__alt_data_end+0xfffecb30>
    c098:	d9800017 	ldw	r6,0(sp)
    c09c:	30bfd436 	bltu	r6,r2,bff0 <__alt_data_end+0xfffecbf0>
    c0a0:	2829883a 	mov	r20,r5
    c0a4:	003f6406 	br	be38 <__alt_data_end+0xfffeca38>
    c0a8:	0021883a 	mov	r16,zero
    c0ac:	003fe006 	br	c030 <__alt_data_end+0xfffecc30>
    c0b0:	00800434 	movhi	r2,16
    c0b4:	8c000234 	orhi	r16,r17,8
    c0b8:	10bfffc4 	addi	r2,r2,-1
    c0bc:	e009883a 	mov	r4,fp
    c0c0:	80a0703a 	and	r16,r16,r2
    c0c4:	a02b883a 	mov	r21,r20
    c0c8:	003e4e06 	br	ba04 <__alt_data_end+0xfffec604>

0000c0cc <__eqdf2>:
    c0cc:	2804d53a 	srli	r2,r5,20
    c0d0:	3806d53a 	srli	r3,r7,20
    c0d4:	02000434 	movhi	r8,16
    c0d8:	423fffc4 	addi	r8,r8,-1
    c0dc:	1081ffcc 	andi	r2,r2,2047
    c0e0:	0281ffc4 	movi	r10,2047
    c0e4:	2a12703a 	and	r9,r5,r8
    c0e8:	18c1ffcc 	andi	r3,r3,2047
    c0ec:	3a10703a 	and	r8,r7,r8
    c0f0:	280ad7fa 	srli	r5,r5,31
    c0f4:	380ed7fa 	srli	r7,r7,31
    c0f8:	12801026 	beq	r2,r10,c13c <__eqdf2+0x70>
    c0fc:	0281ffc4 	movi	r10,2047
    c100:	1a800a26 	beq	r3,r10,c12c <__eqdf2+0x60>
    c104:	10c00226 	beq	r2,r3,c110 <__eqdf2+0x44>
    c108:	00800044 	movi	r2,1
    c10c:	f800283a 	ret
    c110:	4a3ffd1e 	bne	r9,r8,c108 <__alt_data_end+0xfffecd08>
    c114:	21bffc1e 	bne	r4,r6,c108 <__alt_data_end+0xfffecd08>
    c118:	29c00c26 	beq	r5,r7,c14c <__eqdf2+0x80>
    c11c:	103ffa1e 	bne	r2,zero,c108 <__alt_data_end+0xfffecd08>
    c120:	2244b03a 	or	r2,r4,r9
    c124:	1004c03a 	cmpne	r2,r2,zero
    c128:	f800283a 	ret
    c12c:	3214b03a 	or	r10,r6,r8
    c130:	503ff426 	beq	r10,zero,c104 <__alt_data_end+0xfffecd04>
    c134:	00800044 	movi	r2,1
    c138:	f800283a 	ret
    c13c:	2254b03a 	or	r10,r4,r9
    c140:	503fee26 	beq	r10,zero,c0fc <__alt_data_end+0xfffeccfc>
    c144:	00800044 	movi	r2,1
    c148:	f800283a 	ret
    c14c:	0005883a 	mov	r2,zero
    c150:	f800283a 	ret

0000c154 <__gedf2>:
    c154:	2804d53a 	srli	r2,r5,20
    c158:	3806d53a 	srli	r3,r7,20
    c15c:	02000434 	movhi	r8,16
    c160:	423fffc4 	addi	r8,r8,-1
    c164:	1081ffcc 	andi	r2,r2,2047
    c168:	0241ffc4 	movi	r9,2047
    c16c:	2a14703a 	and	r10,r5,r8
    c170:	18c1ffcc 	andi	r3,r3,2047
    c174:	3a10703a 	and	r8,r7,r8
    c178:	280ad7fa 	srli	r5,r5,31
    c17c:	380ed7fa 	srli	r7,r7,31
    c180:	12401d26 	beq	r2,r9,c1f8 <__gedf2+0xa4>
    c184:	0241ffc4 	movi	r9,2047
    c188:	1a401226 	beq	r3,r9,c1d4 <__gedf2+0x80>
    c18c:	1000081e 	bne	r2,zero,c1b0 <__gedf2+0x5c>
    c190:	2296b03a 	or	r11,r4,r10
    c194:	5813003a 	cmpeq	r9,r11,zero
    c198:	1800091e 	bne	r3,zero,c1c0 <__gedf2+0x6c>
    c19c:	3218b03a 	or	r12,r6,r8
    c1a0:	6000071e 	bne	r12,zero,c1c0 <__gedf2+0x6c>
    c1a4:	0005883a 	mov	r2,zero
    c1a8:	5800101e 	bne	r11,zero,c1ec <__gedf2+0x98>
    c1ac:	f800283a 	ret
    c1b0:	18000c1e 	bne	r3,zero,c1e4 <__gedf2+0x90>
    c1b4:	3212b03a 	or	r9,r6,r8
    c1b8:	48000c26 	beq	r9,zero,c1ec <__gedf2+0x98>
    c1bc:	0013883a 	mov	r9,zero
    c1c0:	39c03fcc 	andi	r7,r7,255
    c1c4:	48000826 	beq	r9,zero,c1e8 <__gedf2+0x94>
    c1c8:	38000926 	beq	r7,zero,c1f0 <__gedf2+0x9c>
    c1cc:	00800044 	movi	r2,1
    c1d0:	f800283a 	ret
    c1d4:	3212b03a 	or	r9,r6,r8
    c1d8:	483fec26 	beq	r9,zero,c18c <__alt_data_end+0xfffecd8c>
    c1dc:	00bfff84 	movi	r2,-2
    c1e0:	f800283a 	ret
    c1e4:	39c03fcc 	andi	r7,r7,255
    c1e8:	29c00626 	beq	r5,r7,c204 <__gedf2+0xb0>
    c1ec:	283ff726 	beq	r5,zero,c1cc <__alt_data_end+0xfffecdcc>
    c1f0:	00bfffc4 	movi	r2,-1
    c1f4:	f800283a 	ret
    c1f8:	2292b03a 	or	r9,r4,r10
    c1fc:	483fe126 	beq	r9,zero,c184 <__alt_data_end+0xfffecd84>
    c200:	003ff606 	br	c1dc <__alt_data_end+0xfffecddc>
    c204:	18bff916 	blt	r3,r2,c1ec <__alt_data_end+0xfffecdec>
    c208:	10c00316 	blt	r2,r3,c218 <__gedf2+0xc4>
    c20c:	42bff736 	bltu	r8,r10,c1ec <__alt_data_end+0xfffecdec>
    c210:	52000326 	beq	r10,r8,c220 <__gedf2+0xcc>
    c214:	5200042e 	bgeu	r10,r8,c228 <__gedf2+0xd4>
    c218:	283fec1e 	bne	r5,zero,c1cc <__alt_data_end+0xfffecdcc>
    c21c:	003ff406 	br	c1f0 <__alt_data_end+0xfffecdf0>
    c220:	313ff236 	bltu	r6,r4,c1ec <__alt_data_end+0xfffecdec>
    c224:	21bffc36 	bltu	r4,r6,c218 <__alt_data_end+0xfffece18>
    c228:	0005883a 	mov	r2,zero
    c22c:	f800283a 	ret

0000c230 <__ledf2>:
    c230:	2804d53a 	srli	r2,r5,20
    c234:	3810d53a 	srli	r8,r7,20
    c238:	00c00434 	movhi	r3,16
    c23c:	18ffffc4 	addi	r3,r3,-1
    c240:	1081ffcc 	andi	r2,r2,2047
    c244:	0241ffc4 	movi	r9,2047
    c248:	28d4703a 	and	r10,r5,r3
    c24c:	4201ffcc 	andi	r8,r8,2047
    c250:	38c6703a 	and	r3,r7,r3
    c254:	280ad7fa 	srli	r5,r5,31
    c258:	380ed7fa 	srli	r7,r7,31
    c25c:	12401f26 	beq	r2,r9,c2dc <__ledf2+0xac>
    c260:	0241ffc4 	movi	r9,2047
    c264:	42401426 	beq	r8,r9,c2b8 <__ledf2+0x88>
    c268:	1000091e 	bne	r2,zero,c290 <__ledf2+0x60>
    c26c:	2296b03a 	or	r11,r4,r10
    c270:	5813003a 	cmpeq	r9,r11,zero
    c274:	29403fcc 	andi	r5,r5,255
    c278:	40000a1e 	bne	r8,zero,c2a4 <__ledf2+0x74>
    c27c:	30d8b03a 	or	r12,r6,r3
    c280:	6000081e 	bne	r12,zero,c2a4 <__ledf2+0x74>
    c284:	0005883a 	mov	r2,zero
    c288:	5800111e 	bne	r11,zero,c2d0 <__ledf2+0xa0>
    c28c:	f800283a 	ret
    c290:	29403fcc 	andi	r5,r5,255
    c294:	40000c1e 	bne	r8,zero,c2c8 <__ledf2+0x98>
    c298:	30d2b03a 	or	r9,r6,r3
    c29c:	48000c26 	beq	r9,zero,c2d0 <__ledf2+0xa0>
    c2a0:	0013883a 	mov	r9,zero
    c2a4:	39c03fcc 	andi	r7,r7,255
    c2a8:	48000826 	beq	r9,zero,c2cc <__ledf2+0x9c>
    c2ac:	38001126 	beq	r7,zero,c2f4 <__ledf2+0xc4>
    c2b0:	00800044 	movi	r2,1
    c2b4:	f800283a 	ret
    c2b8:	30d2b03a 	or	r9,r6,r3
    c2bc:	483fea26 	beq	r9,zero,c268 <__alt_data_end+0xfffece68>
    c2c0:	00800084 	movi	r2,2
    c2c4:	f800283a 	ret
    c2c8:	39c03fcc 	andi	r7,r7,255
    c2cc:	39400726 	beq	r7,r5,c2ec <__ledf2+0xbc>
    c2d0:	2800081e 	bne	r5,zero,c2f4 <__ledf2+0xc4>
    c2d4:	00800044 	movi	r2,1
    c2d8:	f800283a 	ret
    c2dc:	2292b03a 	or	r9,r4,r10
    c2e0:	483fdf26 	beq	r9,zero,c260 <__alt_data_end+0xfffece60>
    c2e4:	00800084 	movi	r2,2
    c2e8:	f800283a 	ret
    c2ec:	4080030e 	bge	r8,r2,c2fc <__ledf2+0xcc>
    c2f0:	383fef26 	beq	r7,zero,c2b0 <__alt_data_end+0xfffeceb0>
    c2f4:	00bfffc4 	movi	r2,-1
    c2f8:	f800283a 	ret
    c2fc:	123feb16 	blt	r2,r8,c2ac <__alt_data_end+0xfffeceac>
    c300:	1abff336 	bltu	r3,r10,c2d0 <__alt_data_end+0xfffeced0>
    c304:	50c00326 	beq	r10,r3,c314 <__ledf2+0xe4>
    c308:	50c0042e 	bgeu	r10,r3,c31c <__ledf2+0xec>
    c30c:	283fe81e 	bne	r5,zero,c2b0 <__alt_data_end+0xfffeceb0>
    c310:	003ff806 	br	c2f4 <__alt_data_end+0xfffecef4>
    c314:	313fee36 	bltu	r6,r4,c2d0 <__alt_data_end+0xfffeced0>
    c318:	21bffc36 	bltu	r4,r6,c30c <__alt_data_end+0xfffecf0c>
    c31c:	0005883a 	mov	r2,zero
    c320:	f800283a 	ret

0000c324 <__muldf3>:
    c324:	deffee04 	addi	sp,sp,-72
    c328:	dd000c15 	stw	r20,48(sp)
    c32c:	2828d53a 	srli	r20,r5,20
    c330:	ddc00f15 	stw	r23,60(sp)
    c334:	282ed7fa 	srli	r23,r5,31
    c338:	dc000815 	stw	r16,32(sp)
    c33c:	04000434 	movhi	r16,16
    c340:	dcc00b15 	stw	r19,44(sp)
    c344:	843fffc4 	addi	r16,r16,-1
    c348:	dfc01115 	stw	ra,68(sp)
    c34c:	df001015 	stw	fp,64(sp)
    c350:	dd800e15 	stw	r22,56(sp)
    c354:	dd400d15 	stw	r21,52(sp)
    c358:	dc800a15 	stw	r18,40(sp)
    c35c:	dc400915 	stw	r17,36(sp)
    c360:	a501ffcc 	andi	r20,r20,2047
    c364:	2c20703a 	and	r16,r5,r16
    c368:	b827883a 	mov	r19,r23
    c36c:	ba403fcc 	andi	r9,r23,255
    c370:	a0006026 	beq	r20,zero,c4f4 <__muldf3+0x1d0>
    c374:	0081ffc4 	movi	r2,2047
    c378:	202d883a 	mov	r22,r4
    c37c:	a0803626 	beq	r20,r2,c458 <__muldf3+0x134>
    c380:	84000434 	orhi	r16,r16,16
    c384:	200ad77a 	srli	r5,r4,29
    c388:	800490fa 	slli	r2,r16,3
    c38c:	202c90fa 	slli	r22,r4,3
    c390:	a53f0044 	addi	r20,r20,-1023
    c394:	28a0b03a 	or	r16,r5,r2
    c398:	002b883a 	mov	r21,zero
    c39c:	000b883a 	mov	r5,zero
    c3a0:	3804d53a 	srli	r2,r7,20
    c3a4:	3838d7fa 	srli	fp,r7,31
    c3a8:	04400434 	movhi	r17,16
    c3ac:	8c7fffc4 	addi	r17,r17,-1
    c3b0:	1081ffcc 	andi	r2,r2,2047
    c3b4:	3025883a 	mov	r18,r6
    c3b8:	3c62703a 	and	r17,r7,r17
    c3bc:	e2803fcc 	andi	r10,fp,255
    c3c0:	10006d26 	beq	r2,zero,c578 <__muldf3+0x254>
    c3c4:	00c1ffc4 	movi	r3,2047
    c3c8:	10c06526 	beq	r2,r3,c560 <__muldf3+0x23c>
    c3cc:	8c400434 	orhi	r17,r17,16
    c3d0:	300ed77a 	srli	r7,r6,29
    c3d4:	880690fa 	slli	r3,r17,3
    c3d8:	302490fa 	slli	r18,r6,3
    c3dc:	10bf0044 	addi	r2,r2,-1023
    c3e0:	38e2b03a 	or	r17,r7,r3
    c3e4:	000f883a 	mov	r7,zero
    c3e8:	a087883a 	add	r3,r20,r2
    c3ec:	010003c4 	movi	r4,15
    c3f0:	3d44b03a 	or	r2,r7,r21
    c3f4:	e5ccf03a 	xor	r6,fp,r23
    c3f8:	1a000044 	addi	r8,r3,1
    c3fc:	20809b36 	bltu	r4,r2,c66c <__muldf3+0x348>
    c400:	100490ba 	slli	r2,r2,2
    c404:	01000074 	movhi	r4,1
    c408:	21310604 	addi	r4,r4,-15336
    c40c:	1105883a 	add	r2,r2,r4
    c410:	10800017 	ldw	r2,0(r2)
    c414:	1000683a 	jmp	r2
    c418:	0000c66c 	andhi	zero,zero,793
    c41c:	0000c478 	rdprs	zero,zero,785
    c420:	0000c478 	rdprs	zero,zero,785
    c424:	0000c474 	movhi	zero,785
    c428:	0000c648 	cmpgei	zero,zero,793
    c42c:	0000c648 	cmpgei	zero,zero,793
    c430:	0000c630 	cmpltui	zero,zero,792
    c434:	0000c474 	movhi	zero,785
    c438:	0000c648 	cmpgei	zero,zero,793
    c43c:	0000c630 	cmpltui	zero,zero,792
    c440:	0000c648 	cmpgei	zero,zero,793
    c444:	0000c474 	movhi	zero,785
    c448:	0000c658 	cmpnei	zero,zero,793
    c44c:	0000c658 	cmpnei	zero,zero,793
    c450:	0000c658 	cmpnei	zero,zero,793
    c454:	0000c9b8 	rdprs	zero,zero,806
    c458:	2404b03a 	or	r2,r4,r16
    c45c:	1000711e 	bne	r2,zero,c624 <__muldf3+0x300>
    c460:	05400204 	movi	r21,8
    c464:	0021883a 	mov	r16,zero
    c468:	002d883a 	mov	r22,zero
    c46c:	01400084 	movi	r5,2
    c470:	003fcb06 	br	c3a0 <__alt_data_end+0xfffecfa0>
    c474:	500d883a 	mov	r6,r10
    c478:	00800084 	movi	r2,2
    c47c:	38805926 	beq	r7,r2,c5e4 <__muldf3+0x2c0>
    c480:	008000c4 	movi	r2,3
    c484:	3881bb26 	beq	r7,r2,cb74 <__muldf3+0x850>
    c488:	00800044 	movi	r2,1
    c48c:	3881961e 	bne	r7,r2,cae8 <__muldf3+0x7c4>
    c490:	3027883a 	mov	r19,r6
    c494:	0005883a 	mov	r2,zero
    c498:	0021883a 	mov	r16,zero
    c49c:	002d883a 	mov	r22,zero
    c4a0:	1004953a 	slli	r2,r2,20
    c4a4:	98c03fcc 	andi	r3,r19,255
    c4a8:	04400434 	movhi	r17,16
    c4ac:	8c7fffc4 	addi	r17,r17,-1
    c4b0:	180697fa 	slli	r3,r3,31
    c4b4:	8460703a 	and	r16,r16,r17
    c4b8:	80a0b03a 	or	r16,r16,r2
    c4bc:	80c6b03a 	or	r3,r16,r3
    c4c0:	b005883a 	mov	r2,r22
    c4c4:	dfc01117 	ldw	ra,68(sp)
    c4c8:	df001017 	ldw	fp,64(sp)
    c4cc:	ddc00f17 	ldw	r23,60(sp)
    c4d0:	dd800e17 	ldw	r22,56(sp)
    c4d4:	dd400d17 	ldw	r21,52(sp)
    c4d8:	dd000c17 	ldw	r20,48(sp)
    c4dc:	dcc00b17 	ldw	r19,44(sp)
    c4e0:	dc800a17 	ldw	r18,40(sp)
    c4e4:	dc400917 	ldw	r17,36(sp)
    c4e8:	dc000817 	ldw	r16,32(sp)
    c4ec:	dec01204 	addi	sp,sp,72
    c4f0:	f800283a 	ret
    c4f4:	2404b03a 	or	r2,r4,r16
    c4f8:	202b883a 	mov	r21,r4
    c4fc:	10004426 	beq	r2,zero,c610 <__muldf3+0x2ec>
    c500:	80015126 	beq	r16,zero,ca48 <__muldf3+0x724>
    c504:	8009883a 	mov	r4,r16
    c508:	d9800715 	stw	r6,28(sp)
    c50c:	d9c00215 	stw	r7,8(sp)
    c510:	da400415 	stw	r9,16(sp)
    c514:	000d6900 	call	d690 <__clzsi2>
    c518:	d9800717 	ldw	r6,28(sp)
    c51c:	d9c00217 	ldw	r7,8(sp)
    c520:	da400417 	ldw	r9,16(sp)
    c524:	113ffd44 	addi	r4,r2,-11
    c528:	00c00704 	movi	r3,28
    c52c:	19014216 	blt	r3,r4,ca38 <__muldf3+0x714>
    c530:	00c00744 	movi	r3,29
    c534:	15bffe04 	addi	r22,r2,-8
    c538:	1907c83a 	sub	r3,r3,r4
    c53c:	85a0983a 	sll	r16,r16,r22
    c540:	a8c6d83a 	srl	r3,r21,r3
    c544:	adac983a 	sll	r22,r21,r22
    c548:	1c20b03a 	or	r16,r3,r16
    c54c:	1080fcc4 	addi	r2,r2,1011
    c550:	00a9c83a 	sub	r20,zero,r2
    c554:	002b883a 	mov	r21,zero
    c558:	000b883a 	mov	r5,zero
    c55c:	003f9006 	br	c3a0 <__alt_data_end+0xfffecfa0>
    c560:	3446b03a 	or	r3,r6,r17
    c564:	1800281e 	bne	r3,zero,c608 <__muldf3+0x2e4>
    c568:	0023883a 	mov	r17,zero
    c56c:	0025883a 	mov	r18,zero
    c570:	01c00084 	movi	r7,2
    c574:	003f9c06 	br	c3e8 <__alt_data_end+0xfffecfe8>
    c578:	3446b03a 	or	r3,r6,r17
    c57c:	18001e26 	beq	r3,zero,c5f8 <__muldf3+0x2d4>
    c580:	88012126 	beq	r17,zero,ca08 <__muldf3+0x6e4>
    c584:	8809883a 	mov	r4,r17
    c588:	d9400215 	stw	r5,8(sp)
    c58c:	d9800715 	stw	r6,28(sp)
    c590:	da400415 	stw	r9,16(sp)
    c594:	da800315 	stw	r10,12(sp)
    c598:	000d6900 	call	d690 <__clzsi2>
    c59c:	d9400217 	ldw	r5,8(sp)
    c5a0:	d9800717 	ldw	r6,28(sp)
    c5a4:	da400417 	ldw	r9,16(sp)
    c5a8:	da800317 	ldw	r10,12(sp)
    c5ac:	113ffd44 	addi	r4,r2,-11
    c5b0:	00c00704 	movi	r3,28
    c5b4:	19011016 	blt	r3,r4,c9f8 <__muldf3+0x6d4>
    c5b8:	00c00744 	movi	r3,29
    c5bc:	14bffe04 	addi	r18,r2,-8
    c5c0:	1907c83a 	sub	r3,r3,r4
    c5c4:	8ca2983a 	sll	r17,r17,r18
    c5c8:	30c6d83a 	srl	r3,r6,r3
    c5cc:	34a4983a 	sll	r18,r6,r18
    c5d0:	1c62b03a 	or	r17,r3,r17
    c5d4:	1080fcc4 	addi	r2,r2,1011
    c5d8:	0085c83a 	sub	r2,zero,r2
    c5dc:	000f883a 	mov	r7,zero
    c5e0:	003f8106 	br	c3e8 <__alt_data_end+0xfffecfe8>
    c5e4:	3027883a 	mov	r19,r6
    c5e8:	0081ffc4 	movi	r2,2047
    c5ec:	0021883a 	mov	r16,zero
    c5f0:	002d883a 	mov	r22,zero
    c5f4:	003faa06 	br	c4a0 <__alt_data_end+0xfffed0a0>
    c5f8:	0023883a 	mov	r17,zero
    c5fc:	0025883a 	mov	r18,zero
    c600:	01c00044 	movi	r7,1
    c604:	003f7806 	br	c3e8 <__alt_data_end+0xfffecfe8>
    c608:	01c000c4 	movi	r7,3
    c60c:	003f7606 	br	c3e8 <__alt_data_end+0xfffecfe8>
    c610:	05400104 	movi	r21,4
    c614:	0021883a 	mov	r16,zero
    c618:	002d883a 	mov	r22,zero
    c61c:	01400044 	movi	r5,1
    c620:	003f5f06 	br	c3a0 <__alt_data_end+0xfffecfa0>
    c624:	05400304 	movi	r21,12
    c628:	014000c4 	movi	r5,3
    c62c:	003f5c06 	br	c3a0 <__alt_data_end+0xfffecfa0>
    c630:	04000434 	movhi	r16,16
    c634:	0027883a 	mov	r19,zero
    c638:	843fffc4 	addi	r16,r16,-1
    c63c:	05bfffc4 	movi	r22,-1
    c640:	0081ffc4 	movi	r2,2047
    c644:	003f9606 	br	c4a0 <__alt_data_end+0xfffed0a0>
    c648:	8023883a 	mov	r17,r16
    c64c:	b025883a 	mov	r18,r22
    c650:	280f883a 	mov	r7,r5
    c654:	003f8806 	br	c478 <__alt_data_end+0xfffed078>
    c658:	8023883a 	mov	r17,r16
    c65c:	b025883a 	mov	r18,r22
    c660:	480d883a 	mov	r6,r9
    c664:	280f883a 	mov	r7,r5
    c668:	003f8306 	br	c478 <__alt_data_end+0xfffed078>
    c66c:	b026d43a 	srli	r19,r22,16
    c670:	902ed43a 	srli	r23,r18,16
    c674:	b5bfffcc 	andi	r22,r22,65535
    c678:	94bfffcc 	andi	r18,r18,65535
    c67c:	b00b883a 	mov	r5,r22
    c680:	9009883a 	mov	r4,r18
    c684:	d8c00515 	stw	r3,20(sp)
    c688:	d9800715 	stw	r6,28(sp)
    c68c:	da000615 	stw	r8,24(sp)
    c690:	000ae280 	call	ae28 <__mulsi3>
    c694:	980b883a 	mov	r5,r19
    c698:	9009883a 	mov	r4,r18
    c69c:	1029883a 	mov	r20,r2
    c6a0:	000ae280 	call	ae28 <__mulsi3>
    c6a4:	b80b883a 	mov	r5,r23
    c6a8:	9809883a 	mov	r4,r19
    c6ac:	102b883a 	mov	r21,r2
    c6b0:	000ae280 	call	ae28 <__mulsi3>
    c6b4:	b809883a 	mov	r4,r23
    c6b8:	b00b883a 	mov	r5,r22
    c6bc:	1039883a 	mov	fp,r2
    c6c0:	000ae280 	call	ae28 <__mulsi3>
    c6c4:	a008d43a 	srli	r4,r20,16
    c6c8:	1545883a 	add	r2,r2,r21
    c6cc:	d8c00517 	ldw	r3,20(sp)
    c6d0:	2085883a 	add	r2,r4,r2
    c6d4:	d9800717 	ldw	r6,28(sp)
    c6d8:	da000617 	ldw	r8,24(sp)
    c6dc:	1540022e 	bgeu	r2,r21,c6e8 <__muldf3+0x3c4>
    c6e0:	01000074 	movhi	r4,1
    c6e4:	e139883a 	add	fp,fp,r4
    c6e8:	100e943a 	slli	r7,r2,16
    c6ec:	1004d43a 	srli	r2,r2,16
    c6f0:	882ad43a 	srli	r21,r17,16
    c6f4:	a53fffcc 	andi	r20,r20,65535
    c6f8:	8c7fffcc 	andi	r17,r17,65535
    c6fc:	3d29883a 	add	r20,r7,r20
    c700:	b00b883a 	mov	r5,r22
    c704:	8809883a 	mov	r4,r17
    c708:	d8c00515 	stw	r3,20(sp)
    c70c:	d9800715 	stw	r6,28(sp)
    c710:	da000615 	stw	r8,24(sp)
    c714:	dd000115 	stw	r20,4(sp)
    c718:	d8800015 	stw	r2,0(sp)
    c71c:	000ae280 	call	ae28 <__mulsi3>
    c720:	980b883a 	mov	r5,r19
    c724:	8809883a 	mov	r4,r17
    c728:	d8800215 	stw	r2,8(sp)
    c72c:	000ae280 	call	ae28 <__mulsi3>
    c730:	9809883a 	mov	r4,r19
    c734:	a80b883a 	mov	r5,r21
    c738:	1029883a 	mov	r20,r2
    c73c:	000ae280 	call	ae28 <__mulsi3>
    c740:	b00b883a 	mov	r5,r22
    c744:	a809883a 	mov	r4,r21
    c748:	d8800415 	stw	r2,16(sp)
    c74c:	000ae280 	call	ae28 <__mulsi3>
    c750:	d9c00217 	ldw	r7,8(sp)
    c754:	1505883a 	add	r2,r2,r20
    c758:	d8c00517 	ldw	r3,20(sp)
    c75c:	3826d43a 	srli	r19,r7,16
    c760:	d9800717 	ldw	r6,28(sp)
    c764:	da000617 	ldw	r8,24(sp)
    c768:	9885883a 	add	r2,r19,r2
    c76c:	da400417 	ldw	r9,16(sp)
    c770:	1500022e 	bgeu	r2,r20,c77c <__muldf3+0x458>
    c774:	01000074 	movhi	r4,1
    c778:	4913883a 	add	r9,r9,r4
    c77c:	1028d43a 	srli	r20,r2,16
    c780:	1004943a 	slli	r2,r2,16
    c784:	802cd43a 	srli	r22,r16,16
    c788:	843fffcc 	andi	r16,r16,65535
    c78c:	3cffffcc 	andi	r19,r7,65535
    c790:	9009883a 	mov	r4,r18
    c794:	800b883a 	mov	r5,r16
    c798:	a269883a 	add	r20,r20,r9
    c79c:	d8c00515 	stw	r3,20(sp)
    c7a0:	d9800715 	stw	r6,28(sp)
    c7a4:	da000615 	stw	r8,24(sp)
    c7a8:	14e7883a 	add	r19,r2,r19
    c7ac:	000ae280 	call	ae28 <__mulsi3>
    c7b0:	9009883a 	mov	r4,r18
    c7b4:	b00b883a 	mov	r5,r22
    c7b8:	d8800315 	stw	r2,12(sp)
    c7bc:	000ae280 	call	ae28 <__mulsi3>
    c7c0:	b809883a 	mov	r4,r23
    c7c4:	b00b883a 	mov	r5,r22
    c7c8:	d8800215 	stw	r2,8(sp)
    c7cc:	000ae280 	call	ae28 <__mulsi3>
    c7d0:	b80b883a 	mov	r5,r23
    c7d4:	8009883a 	mov	r4,r16
    c7d8:	d8800415 	stw	r2,16(sp)
    c7dc:	000ae280 	call	ae28 <__mulsi3>
    c7e0:	da800317 	ldw	r10,12(sp)
    c7e4:	d9c00217 	ldw	r7,8(sp)
    c7e8:	d9000017 	ldw	r4,0(sp)
    c7ec:	502ed43a 	srli	r23,r10,16
    c7f0:	11c5883a 	add	r2,r2,r7
    c7f4:	24e5883a 	add	r18,r4,r19
    c7f8:	b885883a 	add	r2,r23,r2
    c7fc:	d8c00517 	ldw	r3,20(sp)
    c800:	d9800717 	ldw	r6,28(sp)
    c804:	da000617 	ldw	r8,24(sp)
    c808:	da400417 	ldw	r9,16(sp)
    c80c:	11c0022e 	bgeu	r2,r7,c818 <__muldf3+0x4f4>
    c810:	01000074 	movhi	r4,1
    c814:	4913883a 	add	r9,r9,r4
    c818:	100ed43a 	srli	r7,r2,16
    c81c:	1004943a 	slli	r2,r2,16
    c820:	55ffffcc 	andi	r23,r10,65535
    c824:	3a53883a 	add	r9,r7,r9
    c828:	8809883a 	mov	r4,r17
    c82c:	800b883a 	mov	r5,r16
    c830:	d8c00515 	stw	r3,20(sp)
    c834:	d9800715 	stw	r6,28(sp)
    c838:	da000615 	stw	r8,24(sp)
    c83c:	da400415 	stw	r9,16(sp)
    c840:	15ef883a 	add	r23,r2,r23
    c844:	000ae280 	call	ae28 <__mulsi3>
    c848:	8809883a 	mov	r4,r17
    c84c:	b00b883a 	mov	r5,r22
    c850:	d8800215 	stw	r2,8(sp)
    c854:	000ae280 	call	ae28 <__mulsi3>
    c858:	b00b883a 	mov	r5,r22
    c85c:	a809883a 	mov	r4,r21
    c860:	d8800315 	stw	r2,12(sp)
    c864:	000ae280 	call	ae28 <__mulsi3>
    c868:	8009883a 	mov	r4,r16
    c86c:	a80b883a 	mov	r5,r21
    c870:	1023883a 	mov	r17,r2
    c874:	000ae280 	call	ae28 <__mulsi3>
    c878:	d9c00217 	ldw	r7,8(sp)
    c87c:	da800317 	ldw	r10,12(sp)
    c880:	d8c00517 	ldw	r3,20(sp)
    c884:	3808d43a 	srli	r4,r7,16
    c888:	1285883a 	add	r2,r2,r10
    c88c:	d9800717 	ldw	r6,28(sp)
    c890:	2085883a 	add	r2,r4,r2
    c894:	da000617 	ldw	r8,24(sp)
    c898:	da400417 	ldw	r9,16(sp)
    c89c:	1280022e 	bgeu	r2,r10,c8a8 <__muldf3+0x584>
    c8a0:	01000074 	movhi	r4,1
    c8a4:	8923883a 	add	r17,r17,r4
    c8a8:	1008943a 	slli	r4,r2,16
    c8ac:	39ffffcc 	andi	r7,r7,65535
    c8b0:	e4b9883a 	add	fp,fp,r18
    c8b4:	21cf883a 	add	r7,r4,r7
    c8b8:	e4e7803a 	cmpltu	r19,fp,r19
    c8bc:	3d0f883a 	add	r7,r7,r20
    c8c0:	bf39883a 	add	fp,r23,fp
    c8c4:	99c9883a 	add	r4,r19,r7
    c8c8:	e5ef803a 	cmpltu	r23,fp,r23
    c8cc:	490b883a 	add	r5,r9,r4
    c8d0:	1004d43a 	srli	r2,r2,16
    c8d4:	b965883a 	add	r18,r23,r5
    c8d8:	24c9803a 	cmpltu	r4,r4,r19
    c8dc:	3d29803a 	cmpltu	r20,r7,r20
    c8e0:	a128b03a 	or	r20,r20,r4
    c8e4:	95ef803a 	cmpltu	r23,r18,r23
    c8e8:	2a53803a 	cmpltu	r9,r5,r9
    c8ec:	a0a9883a 	add	r20,r20,r2
    c8f0:	4deeb03a 	or	r23,r9,r23
    c8f4:	a5ef883a 	add	r23,r20,r23
    c8f8:	bc63883a 	add	r17,r23,r17
    c8fc:	e004927a 	slli	r2,fp,9
    c900:	d9000117 	ldw	r4,4(sp)
    c904:	882e927a 	slli	r23,r17,9
    c908:	9022d5fa 	srli	r17,r18,23
    c90c:	e038d5fa 	srli	fp,fp,23
    c910:	1104b03a 	or	r2,r2,r4
    c914:	9024927a 	slli	r18,r18,9
    c918:	1004c03a 	cmpne	r2,r2,zero
    c91c:	bc62b03a 	or	r17,r23,r17
    c920:	1738b03a 	or	fp,r2,fp
    c924:	8880402c 	andhi	r2,r17,256
    c928:	e4a4b03a 	or	r18,fp,r18
    c92c:	10000726 	beq	r2,zero,c94c <__muldf3+0x628>
    c930:	9006d07a 	srli	r3,r18,1
    c934:	880497fa 	slli	r2,r17,31
    c938:	9480004c 	andi	r18,r18,1
    c93c:	8822d07a 	srli	r17,r17,1
    c940:	1ca4b03a 	or	r18,r3,r18
    c944:	14a4b03a 	or	r18,r2,r18
    c948:	4007883a 	mov	r3,r8
    c94c:	1880ffc4 	addi	r2,r3,1023
    c950:	0080460e 	bge	zero,r2,ca6c <__muldf3+0x748>
    c954:	910001cc 	andi	r4,r18,7
    c958:	20000726 	beq	r4,zero,c978 <__muldf3+0x654>
    c95c:	910003cc 	andi	r4,r18,15
    c960:	01400104 	movi	r5,4
    c964:	21400426 	beq	r4,r5,c978 <__muldf3+0x654>
    c968:	9149883a 	add	r4,r18,r5
    c96c:	24a5803a 	cmpltu	r18,r4,r18
    c970:	8ca3883a 	add	r17,r17,r18
    c974:	2025883a 	mov	r18,r4
    c978:	8900402c 	andhi	r4,r17,256
    c97c:	20000426 	beq	r4,zero,c990 <__muldf3+0x66c>
    c980:	18810004 	addi	r2,r3,1024
    c984:	00ffc034 	movhi	r3,65280
    c988:	18ffffc4 	addi	r3,r3,-1
    c98c:	88e2703a 	and	r17,r17,r3
    c990:	00c1ff84 	movi	r3,2046
    c994:	18bf1316 	blt	r3,r2,c5e4 <__alt_data_end+0xfffed1e4>
    c998:	882c977a 	slli	r22,r17,29
    c99c:	9024d0fa 	srli	r18,r18,3
    c9a0:	8822927a 	slli	r17,r17,9
    c9a4:	1081ffcc 	andi	r2,r2,2047
    c9a8:	b4acb03a 	or	r22,r22,r18
    c9ac:	8820d33a 	srli	r16,r17,12
    c9b0:	3027883a 	mov	r19,r6
    c9b4:	003eba06 	br	c4a0 <__alt_data_end+0xfffed0a0>
    c9b8:	8080022c 	andhi	r2,r16,8
    c9bc:	10000926 	beq	r2,zero,c9e4 <__muldf3+0x6c0>
    c9c0:	8880022c 	andhi	r2,r17,8
    c9c4:	1000071e 	bne	r2,zero,c9e4 <__muldf3+0x6c0>
    c9c8:	00800434 	movhi	r2,16
    c9cc:	8c000234 	orhi	r16,r17,8
    c9d0:	10bfffc4 	addi	r2,r2,-1
    c9d4:	e027883a 	mov	r19,fp
    c9d8:	80a0703a 	and	r16,r16,r2
    c9dc:	902d883a 	mov	r22,r18
    c9e0:	003f1706 	br	c640 <__alt_data_end+0xfffed240>
    c9e4:	00800434 	movhi	r2,16
    c9e8:	84000234 	orhi	r16,r16,8
    c9ec:	10bfffc4 	addi	r2,r2,-1
    c9f0:	80a0703a 	and	r16,r16,r2
    c9f4:	003f1206 	br	c640 <__alt_data_end+0xfffed240>
    c9f8:	147ff604 	addi	r17,r2,-40
    c9fc:	3462983a 	sll	r17,r6,r17
    ca00:	0025883a 	mov	r18,zero
    ca04:	003ef306 	br	c5d4 <__alt_data_end+0xfffed1d4>
    ca08:	3009883a 	mov	r4,r6
    ca0c:	d9400215 	stw	r5,8(sp)
    ca10:	d9800715 	stw	r6,28(sp)
    ca14:	da400415 	stw	r9,16(sp)
    ca18:	da800315 	stw	r10,12(sp)
    ca1c:	000d6900 	call	d690 <__clzsi2>
    ca20:	10800804 	addi	r2,r2,32
    ca24:	da800317 	ldw	r10,12(sp)
    ca28:	da400417 	ldw	r9,16(sp)
    ca2c:	d9800717 	ldw	r6,28(sp)
    ca30:	d9400217 	ldw	r5,8(sp)
    ca34:	003edd06 	br	c5ac <__alt_data_end+0xfffed1ac>
    ca38:	143ff604 	addi	r16,r2,-40
    ca3c:	ac20983a 	sll	r16,r21,r16
    ca40:	002d883a 	mov	r22,zero
    ca44:	003ec106 	br	c54c <__alt_data_end+0xfffed14c>
    ca48:	d9800715 	stw	r6,28(sp)
    ca4c:	d9c00215 	stw	r7,8(sp)
    ca50:	da400415 	stw	r9,16(sp)
    ca54:	000d6900 	call	d690 <__clzsi2>
    ca58:	10800804 	addi	r2,r2,32
    ca5c:	da400417 	ldw	r9,16(sp)
    ca60:	d9c00217 	ldw	r7,8(sp)
    ca64:	d9800717 	ldw	r6,28(sp)
    ca68:	003eae06 	br	c524 <__alt_data_end+0xfffed124>
    ca6c:	00c00044 	movi	r3,1
    ca70:	1887c83a 	sub	r3,r3,r2
    ca74:	01000e04 	movi	r4,56
    ca78:	20fe8516 	blt	r4,r3,c490 <__alt_data_end+0xfffed090>
    ca7c:	010007c4 	movi	r4,31
    ca80:	20c01b16 	blt	r4,r3,caf0 <__muldf3+0x7cc>
    ca84:	00800804 	movi	r2,32
    ca88:	10c5c83a 	sub	r2,r2,r3
    ca8c:	888a983a 	sll	r5,r17,r2
    ca90:	90c8d83a 	srl	r4,r18,r3
    ca94:	9084983a 	sll	r2,r18,r2
    ca98:	88e2d83a 	srl	r17,r17,r3
    ca9c:	2906b03a 	or	r3,r5,r4
    caa0:	1004c03a 	cmpne	r2,r2,zero
    caa4:	1886b03a 	or	r3,r3,r2
    caa8:	188001cc 	andi	r2,r3,7
    caac:	10000726 	beq	r2,zero,cacc <__muldf3+0x7a8>
    cab0:	188003cc 	andi	r2,r3,15
    cab4:	01000104 	movi	r4,4
    cab8:	11000426 	beq	r2,r4,cacc <__muldf3+0x7a8>
    cabc:	1805883a 	mov	r2,r3
    cac0:	10c00104 	addi	r3,r2,4
    cac4:	1885803a 	cmpltu	r2,r3,r2
    cac8:	88a3883a 	add	r17,r17,r2
    cacc:	8880202c 	andhi	r2,r17,128
    cad0:	10001c26 	beq	r2,zero,cb44 <__muldf3+0x820>
    cad4:	3027883a 	mov	r19,r6
    cad8:	00800044 	movi	r2,1
    cadc:	0021883a 	mov	r16,zero
    cae0:	002d883a 	mov	r22,zero
    cae4:	003e6e06 	br	c4a0 <__alt_data_end+0xfffed0a0>
    cae8:	4007883a 	mov	r3,r8
    caec:	003f9706 	br	c94c <__alt_data_end+0xfffed54c>
    caf0:	017ff844 	movi	r5,-31
    caf4:	2885c83a 	sub	r2,r5,r2
    caf8:	888ad83a 	srl	r5,r17,r2
    cafc:	00800804 	movi	r2,32
    cb00:	18801a26 	beq	r3,r2,cb6c <__muldf3+0x848>
    cb04:	01001004 	movi	r4,64
    cb08:	20c7c83a 	sub	r3,r4,r3
    cb0c:	88e2983a 	sll	r17,r17,r3
    cb10:	8ca4b03a 	or	r18,r17,r18
    cb14:	9004c03a 	cmpne	r2,r18,zero
    cb18:	2884b03a 	or	r2,r5,r2
    cb1c:	144001cc 	andi	r17,r2,7
    cb20:	88000d1e 	bne	r17,zero,cb58 <__muldf3+0x834>
    cb24:	0021883a 	mov	r16,zero
    cb28:	102cd0fa 	srli	r22,r2,3
    cb2c:	3027883a 	mov	r19,r6
    cb30:	0005883a 	mov	r2,zero
    cb34:	b46cb03a 	or	r22,r22,r17
    cb38:	003e5906 	br	c4a0 <__alt_data_end+0xfffed0a0>
    cb3c:	1007883a 	mov	r3,r2
    cb40:	0023883a 	mov	r17,zero
    cb44:	8820927a 	slli	r16,r17,9
    cb48:	1805883a 	mov	r2,r3
    cb4c:	8822977a 	slli	r17,r17,29
    cb50:	8020d33a 	srli	r16,r16,12
    cb54:	003ff406 	br	cb28 <__alt_data_end+0xfffed728>
    cb58:	10c003cc 	andi	r3,r2,15
    cb5c:	01000104 	movi	r4,4
    cb60:	193ff626 	beq	r3,r4,cb3c <__alt_data_end+0xfffed73c>
    cb64:	0023883a 	mov	r17,zero
    cb68:	003fd506 	br	cac0 <__alt_data_end+0xfffed6c0>
    cb6c:	0023883a 	mov	r17,zero
    cb70:	003fe706 	br	cb10 <__alt_data_end+0xfffed710>
    cb74:	00800434 	movhi	r2,16
    cb78:	8c000234 	orhi	r16,r17,8
    cb7c:	10bfffc4 	addi	r2,r2,-1
    cb80:	3027883a 	mov	r19,r6
    cb84:	80a0703a 	and	r16,r16,r2
    cb88:	902d883a 	mov	r22,r18
    cb8c:	003eac06 	br	c640 <__alt_data_end+0xfffed240>

0000cb90 <__subdf3>:
    cb90:	02000434 	movhi	r8,16
    cb94:	423fffc4 	addi	r8,r8,-1
    cb98:	defffb04 	addi	sp,sp,-20
    cb9c:	2a14703a 	and	r10,r5,r8
    cba0:	3812d53a 	srli	r9,r7,20
    cba4:	3a10703a 	and	r8,r7,r8
    cba8:	2006d77a 	srli	r3,r4,29
    cbac:	3004d77a 	srli	r2,r6,29
    cbb0:	dc000015 	stw	r16,0(sp)
    cbb4:	501490fa 	slli	r10,r10,3
    cbb8:	2820d53a 	srli	r16,r5,20
    cbbc:	401090fa 	slli	r8,r8,3
    cbc0:	dc800215 	stw	r18,8(sp)
    cbc4:	dc400115 	stw	r17,4(sp)
    cbc8:	dfc00415 	stw	ra,16(sp)
    cbcc:	202290fa 	slli	r17,r4,3
    cbd0:	dcc00315 	stw	r19,12(sp)
    cbd4:	4a41ffcc 	andi	r9,r9,2047
    cbd8:	0101ffc4 	movi	r4,2047
    cbdc:	2824d7fa 	srli	r18,r5,31
    cbe0:	8401ffcc 	andi	r16,r16,2047
    cbe4:	50c6b03a 	or	r3,r10,r3
    cbe8:	380ed7fa 	srli	r7,r7,31
    cbec:	408ab03a 	or	r5,r8,r2
    cbf0:	300c90fa 	slli	r6,r6,3
    cbf4:	49009626 	beq	r9,r4,ce50 <__subdf3+0x2c0>
    cbf8:	39c0005c 	xori	r7,r7,1
    cbfc:	8245c83a 	sub	r2,r16,r9
    cc00:	3c807426 	beq	r7,r18,cdd4 <__subdf3+0x244>
    cc04:	0080af0e 	bge	zero,r2,cec4 <__subdf3+0x334>
    cc08:	48002a1e 	bne	r9,zero,ccb4 <__subdf3+0x124>
    cc0c:	2988b03a 	or	r4,r5,r6
    cc10:	20009a1e 	bne	r4,zero,ce7c <__subdf3+0x2ec>
    cc14:	888001cc 	andi	r2,r17,7
    cc18:	10000726 	beq	r2,zero,cc38 <__subdf3+0xa8>
    cc1c:	888003cc 	andi	r2,r17,15
    cc20:	01000104 	movi	r4,4
    cc24:	11000426 	beq	r2,r4,cc38 <__subdf3+0xa8>
    cc28:	890b883a 	add	r5,r17,r4
    cc2c:	2c63803a 	cmpltu	r17,r5,r17
    cc30:	1c47883a 	add	r3,r3,r17
    cc34:	2823883a 	mov	r17,r5
    cc38:	1880202c 	andhi	r2,r3,128
    cc3c:	10005926 	beq	r2,zero,cda4 <__subdf3+0x214>
    cc40:	84000044 	addi	r16,r16,1
    cc44:	0081ffc4 	movi	r2,2047
    cc48:	8080be26 	beq	r16,r2,cf44 <__subdf3+0x3b4>
    cc4c:	017fe034 	movhi	r5,65408
    cc50:	297fffc4 	addi	r5,r5,-1
    cc54:	1946703a 	and	r3,r3,r5
    cc58:	1804977a 	slli	r2,r3,29
    cc5c:	1806927a 	slli	r3,r3,9
    cc60:	8822d0fa 	srli	r17,r17,3
    cc64:	8401ffcc 	andi	r16,r16,2047
    cc68:	180ad33a 	srli	r5,r3,12
    cc6c:	9100004c 	andi	r4,r18,1
    cc70:	1444b03a 	or	r2,r2,r17
    cc74:	80c1ffcc 	andi	r3,r16,2047
    cc78:	1820953a 	slli	r16,r3,20
    cc7c:	20c03fcc 	andi	r3,r4,255
    cc80:	180897fa 	slli	r4,r3,31
    cc84:	00c00434 	movhi	r3,16
    cc88:	18ffffc4 	addi	r3,r3,-1
    cc8c:	28c6703a 	and	r3,r5,r3
    cc90:	1c06b03a 	or	r3,r3,r16
    cc94:	1906b03a 	or	r3,r3,r4
    cc98:	dfc00417 	ldw	ra,16(sp)
    cc9c:	dcc00317 	ldw	r19,12(sp)
    cca0:	dc800217 	ldw	r18,8(sp)
    cca4:	dc400117 	ldw	r17,4(sp)
    cca8:	dc000017 	ldw	r16,0(sp)
    ccac:	dec00504 	addi	sp,sp,20
    ccb0:	f800283a 	ret
    ccb4:	0101ffc4 	movi	r4,2047
    ccb8:	813fd626 	beq	r16,r4,cc14 <__alt_data_end+0xfffed814>
    ccbc:	29402034 	orhi	r5,r5,128
    ccc0:	01000e04 	movi	r4,56
    ccc4:	2080a316 	blt	r4,r2,cf54 <__subdf3+0x3c4>
    ccc8:	010007c4 	movi	r4,31
    cccc:	2080c616 	blt	r4,r2,cfe8 <__subdf3+0x458>
    ccd0:	01000804 	movi	r4,32
    ccd4:	2089c83a 	sub	r4,r4,r2
    ccd8:	2910983a 	sll	r8,r5,r4
    ccdc:	308ed83a 	srl	r7,r6,r2
    cce0:	3108983a 	sll	r4,r6,r4
    cce4:	2884d83a 	srl	r2,r5,r2
    cce8:	41ccb03a 	or	r6,r8,r7
    ccec:	2008c03a 	cmpne	r4,r4,zero
    ccf0:	310cb03a 	or	r6,r6,r4
    ccf4:	898dc83a 	sub	r6,r17,r6
    ccf8:	89a3803a 	cmpltu	r17,r17,r6
    ccfc:	1887c83a 	sub	r3,r3,r2
    cd00:	1c47c83a 	sub	r3,r3,r17
    cd04:	3023883a 	mov	r17,r6
    cd08:	1880202c 	andhi	r2,r3,128
    cd0c:	10002326 	beq	r2,zero,cd9c <__subdf3+0x20c>
    cd10:	04c02034 	movhi	r19,128
    cd14:	9cffffc4 	addi	r19,r19,-1
    cd18:	1ce6703a 	and	r19,r3,r19
    cd1c:	98007a26 	beq	r19,zero,cf08 <__subdf3+0x378>
    cd20:	9809883a 	mov	r4,r19
    cd24:	000d6900 	call	d690 <__clzsi2>
    cd28:	113ffe04 	addi	r4,r2,-8
    cd2c:	00c007c4 	movi	r3,31
    cd30:	19007b16 	blt	r3,r4,cf20 <__subdf3+0x390>
    cd34:	00800804 	movi	r2,32
    cd38:	1105c83a 	sub	r2,r2,r4
    cd3c:	8884d83a 	srl	r2,r17,r2
    cd40:	9906983a 	sll	r3,r19,r4
    cd44:	8922983a 	sll	r17,r17,r4
    cd48:	10c4b03a 	or	r2,r2,r3
    cd4c:	24007816 	blt	r4,r16,cf30 <__subdf3+0x3a0>
    cd50:	2421c83a 	sub	r16,r4,r16
    cd54:	80c00044 	addi	r3,r16,1
    cd58:	010007c4 	movi	r4,31
    cd5c:	20c09516 	blt	r4,r3,cfb4 <__subdf3+0x424>
    cd60:	01400804 	movi	r5,32
    cd64:	28cbc83a 	sub	r5,r5,r3
    cd68:	88c8d83a 	srl	r4,r17,r3
    cd6c:	8962983a 	sll	r17,r17,r5
    cd70:	114a983a 	sll	r5,r2,r5
    cd74:	10c6d83a 	srl	r3,r2,r3
    cd78:	8804c03a 	cmpne	r2,r17,zero
    cd7c:	290ab03a 	or	r5,r5,r4
    cd80:	28a2b03a 	or	r17,r5,r2
    cd84:	0021883a 	mov	r16,zero
    cd88:	003fa206 	br	cc14 <__alt_data_end+0xfffed814>
    cd8c:	2090b03a 	or	r8,r4,r2
    cd90:	40018e26 	beq	r8,zero,d3cc <__subdf3+0x83c>
    cd94:	1007883a 	mov	r3,r2
    cd98:	2023883a 	mov	r17,r4
    cd9c:	888001cc 	andi	r2,r17,7
    cda0:	103f9e1e 	bne	r2,zero,cc1c <__alt_data_end+0xfffed81c>
    cda4:	1804977a 	slli	r2,r3,29
    cda8:	8822d0fa 	srli	r17,r17,3
    cdac:	1810d0fa 	srli	r8,r3,3
    cdb0:	9100004c 	andi	r4,r18,1
    cdb4:	1444b03a 	or	r2,r2,r17
    cdb8:	00c1ffc4 	movi	r3,2047
    cdbc:	80c02826 	beq	r16,r3,ce60 <__subdf3+0x2d0>
    cdc0:	01400434 	movhi	r5,16
    cdc4:	297fffc4 	addi	r5,r5,-1
    cdc8:	80e0703a 	and	r16,r16,r3
    cdcc:	414a703a 	and	r5,r8,r5
    cdd0:	003fa806 	br	cc74 <__alt_data_end+0xfffed874>
    cdd4:	0080630e 	bge	zero,r2,cf64 <__subdf3+0x3d4>
    cdd8:	48003026 	beq	r9,zero,ce9c <__subdf3+0x30c>
    cddc:	0101ffc4 	movi	r4,2047
    cde0:	813f8c26 	beq	r16,r4,cc14 <__alt_data_end+0xfffed814>
    cde4:	29402034 	orhi	r5,r5,128
    cde8:	01000e04 	movi	r4,56
    cdec:	2080a90e 	bge	r4,r2,d094 <__subdf3+0x504>
    cdf0:	298cb03a 	or	r6,r5,r6
    cdf4:	3012c03a 	cmpne	r9,r6,zero
    cdf8:	0005883a 	mov	r2,zero
    cdfc:	4c53883a 	add	r9,r9,r17
    ce00:	4c63803a 	cmpltu	r17,r9,r17
    ce04:	10c7883a 	add	r3,r2,r3
    ce08:	88c7883a 	add	r3,r17,r3
    ce0c:	4823883a 	mov	r17,r9
    ce10:	1880202c 	andhi	r2,r3,128
    ce14:	1000d026 	beq	r2,zero,d158 <__subdf3+0x5c8>
    ce18:	84000044 	addi	r16,r16,1
    ce1c:	0081ffc4 	movi	r2,2047
    ce20:	8080fe26 	beq	r16,r2,d21c <__subdf3+0x68c>
    ce24:	00bfe034 	movhi	r2,65408
    ce28:	10bfffc4 	addi	r2,r2,-1
    ce2c:	1886703a 	and	r3,r3,r2
    ce30:	880ad07a 	srli	r5,r17,1
    ce34:	180497fa 	slli	r2,r3,31
    ce38:	8900004c 	andi	r4,r17,1
    ce3c:	2922b03a 	or	r17,r5,r4
    ce40:	1806d07a 	srli	r3,r3,1
    ce44:	1462b03a 	or	r17,r2,r17
    ce48:	3825883a 	mov	r18,r7
    ce4c:	003f7106 	br	cc14 <__alt_data_end+0xfffed814>
    ce50:	2984b03a 	or	r2,r5,r6
    ce54:	103f6826 	beq	r2,zero,cbf8 <__alt_data_end+0xfffed7f8>
    ce58:	39c03fcc 	andi	r7,r7,255
    ce5c:	003f6706 	br	cbfc <__alt_data_end+0xfffed7fc>
    ce60:	4086b03a 	or	r3,r8,r2
    ce64:	18015226 	beq	r3,zero,d3b0 <__subdf3+0x820>
    ce68:	00c00434 	movhi	r3,16
    ce6c:	41400234 	orhi	r5,r8,8
    ce70:	18ffffc4 	addi	r3,r3,-1
    ce74:	28ca703a 	and	r5,r5,r3
    ce78:	003f7e06 	br	cc74 <__alt_data_end+0xfffed874>
    ce7c:	10bfffc4 	addi	r2,r2,-1
    ce80:	1000491e 	bne	r2,zero,cfa8 <__subdf3+0x418>
    ce84:	898fc83a 	sub	r7,r17,r6
    ce88:	89e3803a 	cmpltu	r17,r17,r7
    ce8c:	1947c83a 	sub	r3,r3,r5
    ce90:	1c47c83a 	sub	r3,r3,r17
    ce94:	3823883a 	mov	r17,r7
    ce98:	003f9b06 	br	cd08 <__alt_data_end+0xfffed908>
    ce9c:	2988b03a 	or	r4,r5,r6
    cea0:	203f5c26 	beq	r4,zero,cc14 <__alt_data_end+0xfffed814>
    cea4:	10bfffc4 	addi	r2,r2,-1
    cea8:	1000931e 	bne	r2,zero,d0f8 <__subdf3+0x568>
    ceac:	898d883a 	add	r6,r17,r6
    ceb0:	3463803a 	cmpltu	r17,r6,r17
    ceb4:	1947883a 	add	r3,r3,r5
    ceb8:	88c7883a 	add	r3,r17,r3
    cebc:	3023883a 	mov	r17,r6
    cec0:	003fd306 	br	ce10 <__alt_data_end+0xfffeda10>
    cec4:	1000541e 	bne	r2,zero,d018 <__subdf3+0x488>
    cec8:	80800044 	addi	r2,r16,1
    cecc:	1081ffcc 	andi	r2,r2,2047
    ced0:	01000044 	movi	r4,1
    ced4:	2080a20e 	bge	r4,r2,d160 <__subdf3+0x5d0>
    ced8:	8989c83a 	sub	r4,r17,r6
    cedc:	8905803a 	cmpltu	r2,r17,r4
    cee0:	1967c83a 	sub	r19,r3,r5
    cee4:	98a7c83a 	sub	r19,r19,r2
    cee8:	9880202c 	andhi	r2,r19,128
    ceec:	10006326 	beq	r2,zero,d07c <__subdf3+0x4ec>
    cef0:	3463c83a 	sub	r17,r6,r17
    cef4:	28c7c83a 	sub	r3,r5,r3
    cef8:	344d803a 	cmpltu	r6,r6,r17
    cefc:	19a7c83a 	sub	r19,r3,r6
    cf00:	3825883a 	mov	r18,r7
    cf04:	983f861e 	bne	r19,zero,cd20 <__alt_data_end+0xfffed920>
    cf08:	8809883a 	mov	r4,r17
    cf0c:	000d6900 	call	d690 <__clzsi2>
    cf10:	10800804 	addi	r2,r2,32
    cf14:	113ffe04 	addi	r4,r2,-8
    cf18:	00c007c4 	movi	r3,31
    cf1c:	193f850e 	bge	r3,r4,cd34 <__alt_data_end+0xfffed934>
    cf20:	10bff604 	addi	r2,r2,-40
    cf24:	8884983a 	sll	r2,r17,r2
    cf28:	0023883a 	mov	r17,zero
    cf2c:	243f880e 	bge	r4,r16,cd50 <__alt_data_end+0xfffed950>
    cf30:	00ffe034 	movhi	r3,65408
    cf34:	18ffffc4 	addi	r3,r3,-1
    cf38:	8121c83a 	sub	r16,r16,r4
    cf3c:	10c6703a 	and	r3,r2,r3
    cf40:	003f3406 	br	cc14 <__alt_data_end+0xfffed814>
    cf44:	9100004c 	andi	r4,r18,1
    cf48:	000b883a 	mov	r5,zero
    cf4c:	0005883a 	mov	r2,zero
    cf50:	003f4806 	br	cc74 <__alt_data_end+0xfffed874>
    cf54:	298cb03a 	or	r6,r5,r6
    cf58:	300cc03a 	cmpne	r6,r6,zero
    cf5c:	0005883a 	mov	r2,zero
    cf60:	003f6406 	br	ccf4 <__alt_data_end+0xfffed8f4>
    cf64:	10009a1e 	bne	r2,zero,d1d0 <__subdf3+0x640>
    cf68:	82400044 	addi	r9,r16,1
    cf6c:	4881ffcc 	andi	r2,r9,2047
    cf70:	02800044 	movi	r10,1
    cf74:	5080670e 	bge	r10,r2,d114 <__subdf3+0x584>
    cf78:	0081ffc4 	movi	r2,2047
    cf7c:	4880af26 	beq	r9,r2,d23c <__subdf3+0x6ac>
    cf80:	898d883a 	add	r6,r17,r6
    cf84:	1945883a 	add	r2,r3,r5
    cf88:	3447803a 	cmpltu	r3,r6,r17
    cf8c:	1887883a 	add	r3,r3,r2
    cf90:	182297fa 	slli	r17,r3,31
    cf94:	300cd07a 	srli	r6,r6,1
    cf98:	1806d07a 	srli	r3,r3,1
    cf9c:	4821883a 	mov	r16,r9
    cfa0:	89a2b03a 	or	r17,r17,r6
    cfa4:	003f1b06 	br	cc14 <__alt_data_end+0xfffed814>
    cfa8:	0101ffc4 	movi	r4,2047
    cfac:	813f441e 	bne	r16,r4,ccc0 <__alt_data_end+0xfffed8c0>
    cfb0:	003f1806 	br	cc14 <__alt_data_end+0xfffed814>
    cfb4:	843ff844 	addi	r16,r16,-31
    cfb8:	01400804 	movi	r5,32
    cfbc:	1408d83a 	srl	r4,r2,r16
    cfc0:	19405026 	beq	r3,r5,d104 <__subdf3+0x574>
    cfc4:	01401004 	movi	r5,64
    cfc8:	28c7c83a 	sub	r3,r5,r3
    cfcc:	10c4983a 	sll	r2,r2,r3
    cfd0:	88a2b03a 	or	r17,r17,r2
    cfd4:	8822c03a 	cmpne	r17,r17,zero
    cfd8:	2462b03a 	or	r17,r4,r17
    cfdc:	0007883a 	mov	r3,zero
    cfe0:	0021883a 	mov	r16,zero
    cfe4:	003f6d06 	br	cd9c <__alt_data_end+0xfffed99c>
    cfe8:	11fff804 	addi	r7,r2,-32
    cfec:	01000804 	movi	r4,32
    cff0:	29ced83a 	srl	r7,r5,r7
    cff4:	11004526 	beq	r2,r4,d10c <__subdf3+0x57c>
    cff8:	01001004 	movi	r4,64
    cffc:	2089c83a 	sub	r4,r4,r2
    d000:	2904983a 	sll	r2,r5,r4
    d004:	118cb03a 	or	r6,r2,r6
    d008:	300cc03a 	cmpne	r6,r6,zero
    d00c:	398cb03a 	or	r6,r7,r6
    d010:	0005883a 	mov	r2,zero
    d014:	003f3706 	br	ccf4 <__alt_data_end+0xfffed8f4>
    d018:	80002a26 	beq	r16,zero,d0c4 <__subdf3+0x534>
    d01c:	0101ffc4 	movi	r4,2047
    d020:	49006626 	beq	r9,r4,d1bc <__subdf3+0x62c>
    d024:	0085c83a 	sub	r2,zero,r2
    d028:	18c02034 	orhi	r3,r3,128
    d02c:	01000e04 	movi	r4,56
    d030:	20807e16 	blt	r4,r2,d22c <__subdf3+0x69c>
    d034:	010007c4 	movi	r4,31
    d038:	2080e716 	blt	r4,r2,d3d8 <__subdf3+0x848>
    d03c:	01000804 	movi	r4,32
    d040:	2089c83a 	sub	r4,r4,r2
    d044:	1914983a 	sll	r10,r3,r4
    d048:	8890d83a 	srl	r8,r17,r2
    d04c:	8908983a 	sll	r4,r17,r4
    d050:	1884d83a 	srl	r2,r3,r2
    d054:	5222b03a 	or	r17,r10,r8
    d058:	2006c03a 	cmpne	r3,r4,zero
    d05c:	88e2b03a 	or	r17,r17,r3
    d060:	3463c83a 	sub	r17,r6,r17
    d064:	2885c83a 	sub	r2,r5,r2
    d068:	344d803a 	cmpltu	r6,r6,r17
    d06c:	1187c83a 	sub	r3,r2,r6
    d070:	4821883a 	mov	r16,r9
    d074:	3825883a 	mov	r18,r7
    d078:	003f2306 	br	cd08 <__alt_data_end+0xfffed908>
    d07c:	24d0b03a 	or	r8,r4,r19
    d080:	40001b1e 	bne	r8,zero,d0f0 <__subdf3+0x560>
    d084:	0005883a 	mov	r2,zero
    d088:	0009883a 	mov	r4,zero
    d08c:	0021883a 	mov	r16,zero
    d090:	003f4906 	br	cdb8 <__alt_data_end+0xfffed9b8>
    d094:	010007c4 	movi	r4,31
    d098:	20803a16 	blt	r4,r2,d184 <__subdf3+0x5f4>
    d09c:	01000804 	movi	r4,32
    d0a0:	2089c83a 	sub	r4,r4,r2
    d0a4:	2912983a 	sll	r9,r5,r4
    d0a8:	3090d83a 	srl	r8,r6,r2
    d0ac:	3108983a 	sll	r4,r6,r4
    d0b0:	2884d83a 	srl	r2,r5,r2
    d0b4:	4a12b03a 	or	r9,r9,r8
    d0b8:	2008c03a 	cmpne	r4,r4,zero
    d0bc:	4912b03a 	or	r9,r9,r4
    d0c0:	003f4e06 	br	cdfc <__alt_data_end+0xfffed9fc>
    d0c4:	1c48b03a 	or	r4,r3,r17
    d0c8:	20003c26 	beq	r4,zero,d1bc <__subdf3+0x62c>
    d0cc:	0084303a 	nor	r2,zero,r2
    d0d0:	1000381e 	bne	r2,zero,d1b4 <__subdf3+0x624>
    d0d4:	3463c83a 	sub	r17,r6,r17
    d0d8:	28c5c83a 	sub	r2,r5,r3
    d0dc:	344d803a 	cmpltu	r6,r6,r17
    d0e0:	1187c83a 	sub	r3,r2,r6
    d0e4:	4821883a 	mov	r16,r9
    d0e8:	3825883a 	mov	r18,r7
    d0ec:	003f0606 	br	cd08 <__alt_data_end+0xfffed908>
    d0f0:	2023883a 	mov	r17,r4
    d0f4:	003f0906 	br	cd1c <__alt_data_end+0xfffed91c>
    d0f8:	0101ffc4 	movi	r4,2047
    d0fc:	813f3a1e 	bne	r16,r4,cde8 <__alt_data_end+0xfffed9e8>
    d100:	003ec406 	br	cc14 <__alt_data_end+0xfffed814>
    d104:	0005883a 	mov	r2,zero
    d108:	003fb106 	br	cfd0 <__alt_data_end+0xfffedbd0>
    d10c:	0005883a 	mov	r2,zero
    d110:	003fbc06 	br	d004 <__alt_data_end+0xfffedc04>
    d114:	1c44b03a 	or	r2,r3,r17
    d118:	80008e1e 	bne	r16,zero,d354 <__subdf3+0x7c4>
    d11c:	1000c826 	beq	r2,zero,d440 <__subdf3+0x8b0>
    d120:	2984b03a 	or	r2,r5,r6
    d124:	103ebb26 	beq	r2,zero,cc14 <__alt_data_end+0xfffed814>
    d128:	8989883a 	add	r4,r17,r6
    d12c:	1945883a 	add	r2,r3,r5
    d130:	2447803a 	cmpltu	r3,r4,r17
    d134:	1887883a 	add	r3,r3,r2
    d138:	1880202c 	andhi	r2,r3,128
    d13c:	2023883a 	mov	r17,r4
    d140:	103f1626 	beq	r2,zero,cd9c <__alt_data_end+0xfffed99c>
    d144:	00bfe034 	movhi	r2,65408
    d148:	10bfffc4 	addi	r2,r2,-1
    d14c:	5021883a 	mov	r16,r10
    d150:	1886703a 	and	r3,r3,r2
    d154:	003eaf06 	br	cc14 <__alt_data_end+0xfffed814>
    d158:	3825883a 	mov	r18,r7
    d15c:	003f0f06 	br	cd9c <__alt_data_end+0xfffed99c>
    d160:	1c44b03a 	or	r2,r3,r17
    d164:	8000251e 	bne	r16,zero,d1fc <__subdf3+0x66c>
    d168:	1000661e 	bne	r2,zero,d304 <__subdf3+0x774>
    d16c:	2990b03a 	or	r8,r5,r6
    d170:	40009626 	beq	r8,zero,d3cc <__subdf3+0x83c>
    d174:	2807883a 	mov	r3,r5
    d178:	3023883a 	mov	r17,r6
    d17c:	3825883a 	mov	r18,r7
    d180:	003ea406 	br	cc14 <__alt_data_end+0xfffed814>
    d184:	127ff804 	addi	r9,r2,-32
    d188:	01000804 	movi	r4,32
    d18c:	2a52d83a 	srl	r9,r5,r9
    d190:	11008c26 	beq	r2,r4,d3c4 <__subdf3+0x834>
    d194:	01001004 	movi	r4,64
    d198:	2085c83a 	sub	r2,r4,r2
    d19c:	2884983a 	sll	r2,r5,r2
    d1a0:	118cb03a 	or	r6,r2,r6
    d1a4:	300cc03a 	cmpne	r6,r6,zero
    d1a8:	4992b03a 	or	r9,r9,r6
    d1ac:	0005883a 	mov	r2,zero
    d1b0:	003f1206 	br	cdfc <__alt_data_end+0xfffed9fc>
    d1b4:	0101ffc4 	movi	r4,2047
    d1b8:	493f9c1e 	bne	r9,r4,d02c <__alt_data_end+0xfffedc2c>
    d1bc:	2807883a 	mov	r3,r5
    d1c0:	3023883a 	mov	r17,r6
    d1c4:	4821883a 	mov	r16,r9
    d1c8:	3825883a 	mov	r18,r7
    d1cc:	003e9106 	br	cc14 <__alt_data_end+0xfffed814>
    d1d0:	80001f1e 	bne	r16,zero,d250 <__subdf3+0x6c0>
    d1d4:	1c48b03a 	or	r4,r3,r17
    d1d8:	20005a26 	beq	r4,zero,d344 <__subdf3+0x7b4>
    d1dc:	0084303a 	nor	r2,zero,r2
    d1e0:	1000561e 	bne	r2,zero,d33c <__subdf3+0x7ac>
    d1e4:	89a3883a 	add	r17,r17,r6
    d1e8:	1945883a 	add	r2,r3,r5
    d1ec:	898d803a 	cmpltu	r6,r17,r6
    d1f0:	3087883a 	add	r3,r6,r2
    d1f4:	4821883a 	mov	r16,r9
    d1f8:	003f0506 	br	ce10 <__alt_data_end+0xfffeda10>
    d1fc:	10002b1e 	bne	r2,zero,d2ac <__subdf3+0x71c>
    d200:	2984b03a 	or	r2,r5,r6
    d204:	10008026 	beq	r2,zero,d408 <__subdf3+0x878>
    d208:	2807883a 	mov	r3,r5
    d20c:	3023883a 	mov	r17,r6
    d210:	3825883a 	mov	r18,r7
    d214:	0401ffc4 	movi	r16,2047
    d218:	003e7e06 	br	cc14 <__alt_data_end+0xfffed814>
    d21c:	3809883a 	mov	r4,r7
    d220:	0011883a 	mov	r8,zero
    d224:	0005883a 	mov	r2,zero
    d228:	003ee306 	br	cdb8 <__alt_data_end+0xfffed9b8>
    d22c:	1c62b03a 	or	r17,r3,r17
    d230:	8822c03a 	cmpne	r17,r17,zero
    d234:	0005883a 	mov	r2,zero
    d238:	003f8906 	br	d060 <__alt_data_end+0xfffedc60>
    d23c:	3809883a 	mov	r4,r7
    d240:	4821883a 	mov	r16,r9
    d244:	0011883a 	mov	r8,zero
    d248:	0005883a 	mov	r2,zero
    d24c:	003eda06 	br	cdb8 <__alt_data_end+0xfffed9b8>
    d250:	0101ffc4 	movi	r4,2047
    d254:	49003b26 	beq	r9,r4,d344 <__subdf3+0x7b4>
    d258:	0085c83a 	sub	r2,zero,r2
    d25c:	18c02034 	orhi	r3,r3,128
    d260:	01000e04 	movi	r4,56
    d264:	20806e16 	blt	r4,r2,d420 <__subdf3+0x890>
    d268:	010007c4 	movi	r4,31
    d26c:	20807716 	blt	r4,r2,d44c <__subdf3+0x8bc>
    d270:	01000804 	movi	r4,32
    d274:	2089c83a 	sub	r4,r4,r2
    d278:	1914983a 	sll	r10,r3,r4
    d27c:	8890d83a 	srl	r8,r17,r2
    d280:	8908983a 	sll	r4,r17,r4
    d284:	1884d83a 	srl	r2,r3,r2
    d288:	5222b03a 	or	r17,r10,r8
    d28c:	2006c03a 	cmpne	r3,r4,zero
    d290:	88e2b03a 	or	r17,r17,r3
    d294:	89a3883a 	add	r17,r17,r6
    d298:	1145883a 	add	r2,r2,r5
    d29c:	898d803a 	cmpltu	r6,r17,r6
    d2a0:	3087883a 	add	r3,r6,r2
    d2a4:	4821883a 	mov	r16,r9
    d2a8:	003ed906 	br	ce10 <__alt_data_end+0xfffeda10>
    d2ac:	2984b03a 	or	r2,r5,r6
    d2b0:	10004226 	beq	r2,zero,d3bc <__subdf3+0x82c>
    d2b4:	1808d0fa 	srli	r4,r3,3
    d2b8:	8822d0fa 	srli	r17,r17,3
    d2bc:	1806977a 	slli	r3,r3,29
    d2c0:	2080022c 	andhi	r2,r4,8
    d2c4:	1c62b03a 	or	r17,r3,r17
    d2c8:	10000826 	beq	r2,zero,d2ec <__subdf3+0x75c>
    d2cc:	2812d0fa 	srli	r9,r5,3
    d2d0:	4880022c 	andhi	r2,r9,8
    d2d4:	1000051e 	bne	r2,zero,d2ec <__subdf3+0x75c>
    d2d8:	300cd0fa 	srli	r6,r6,3
    d2dc:	2804977a 	slli	r2,r5,29
    d2e0:	4809883a 	mov	r4,r9
    d2e4:	3825883a 	mov	r18,r7
    d2e8:	11a2b03a 	or	r17,r2,r6
    d2ec:	8806d77a 	srli	r3,r17,29
    d2f0:	200890fa 	slli	r4,r4,3
    d2f4:	882290fa 	slli	r17,r17,3
    d2f8:	0401ffc4 	movi	r16,2047
    d2fc:	1906b03a 	or	r3,r3,r4
    d300:	003e4406 	br	cc14 <__alt_data_end+0xfffed814>
    d304:	2984b03a 	or	r2,r5,r6
    d308:	103e4226 	beq	r2,zero,cc14 <__alt_data_end+0xfffed814>
    d30c:	8989c83a 	sub	r4,r17,r6
    d310:	8911803a 	cmpltu	r8,r17,r4
    d314:	1945c83a 	sub	r2,r3,r5
    d318:	1205c83a 	sub	r2,r2,r8
    d31c:	1200202c 	andhi	r8,r2,128
    d320:	403e9a26 	beq	r8,zero,cd8c <__alt_data_end+0xfffed98c>
    d324:	3463c83a 	sub	r17,r6,r17
    d328:	28c5c83a 	sub	r2,r5,r3
    d32c:	344d803a 	cmpltu	r6,r6,r17
    d330:	1187c83a 	sub	r3,r2,r6
    d334:	3825883a 	mov	r18,r7
    d338:	003e3606 	br	cc14 <__alt_data_end+0xfffed814>
    d33c:	0101ffc4 	movi	r4,2047
    d340:	493fc71e 	bne	r9,r4,d260 <__alt_data_end+0xfffede60>
    d344:	2807883a 	mov	r3,r5
    d348:	3023883a 	mov	r17,r6
    d34c:	4821883a 	mov	r16,r9
    d350:	003e3006 	br	cc14 <__alt_data_end+0xfffed814>
    d354:	10003626 	beq	r2,zero,d430 <__subdf3+0x8a0>
    d358:	2984b03a 	or	r2,r5,r6
    d35c:	10001726 	beq	r2,zero,d3bc <__subdf3+0x82c>
    d360:	1808d0fa 	srli	r4,r3,3
    d364:	8822d0fa 	srli	r17,r17,3
    d368:	1806977a 	slli	r3,r3,29
    d36c:	2080022c 	andhi	r2,r4,8
    d370:	1c62b03a 	or	r17,r3,r17
    d374:	10000726 	beq	r2,zero,d394 <__subdf3+0x804>
    d378:	2812d0fa 	srli	r9,r5,3
    d37c:	4880022c 	andhi	r2,r9,8
    d380:	1000041e 	bne	r2,zero,d394 <__subdf3+0x804>
    d384:	300cd0fa 	srli	r6,r6,3
    d388:	2804977a 	slli	r2,r5,29
    d38c:	4809883a 	mov	r4,r9
    d390:	11a2b03a 	or	r17,r2,r6
    d394:	8806d77a 	srli	r3,r17,29
    d398:	200890fa 	slli	r4,r4,3
    d39c:	882290fa 	slli	r17,r17,3
    d3a0:	3825883a 	mov	r18,r7
    d3a4:	1906b03a 	or	r3,r3,r4
    d3a8:	0401ffc4 	movi	r16,2047
    d3ac:	003e1906 	br	cc14 <__alt_data_end+0xfffed814>
    d3b0:	000b883a 	mov	r5,zero
    d3b4:	0005883a 	mov	r2,zero
    d3b8:	003e2e06 	br	cc74 <__alt_data_end+0xfffed874>
    d3bc:	0401ffc4 	movi	r16,2047
    d3c0:	003e1406 	br	cc14 <__alt_data_end+0xfffed814>
    d3c4:	0005883a 	mov	r2,zero
    d3c8:	003f7506 	br	d1a0 <__alt_data_end+0xfffedda0>
    d3cc:	0005883a 	mov	r2,zero
    d3d0:	0009883a 	mov	r4,zero
    d3d4:	003e7806 	br	cdb8 <__alt_data_end+0xfffed9b8>
    d3d8:	123ff804 	addi	r8,r2,-32
    d3dc:	01000804 	movi	r4,32
    d3e0:	1a10d83a 	srl	r8,r3,r8
    d3e4:	11002526 	beq	r2,r4,d47c <__subdf3+0x8ec>
    d3e8:	01001004 	movi	r4,64
    d3ec:	2085c83a 	sub	r2,r4,r2
    d3f0:	1884983a 	sll	r2,r3,r2
    d3f4:	1444b03a 	or	r2,r2,r17
    d3f8:	1004c03a 	cmpne	r2,r2,zero
    d3fc:	40a2b03a 	or	r17,r8,r2
    d400:	0005883a 	mov	r2,zero
    d404:	003f1606 	br	d060 <__alt_data_end+0xfffedc60>
    d408:	02000434 	movhi	r8,16
    d40c:	0009883a 	mov	r4,zero
    d410:	423fffc4 	addi	r8,r8,-1
    d414:	00bfffc4 	movi	r2,-1
    d418:	0401ffc4 	movi	r16,2047
    d41c:	003e6606 	br	cdb8 <__alt_data_end+0xfffed9b8>
    d420:	1c62b03a 	or	r17,r3,r17
    d424:	8822c03a 	cmpne	r17,r17,zero
    d428:	0005883a 	mov	r2,zero
    d42c:	003f9906 	br	d294 <__alt_data_end+0xfffede94>
    d430:	2807883a 	mov	r3,r5
    d434:	3023883a 	mov	r17,r6
    d438:	0401ffc4 	movi	r16,2047
    d43c:	003df506 	br	cc14 <__alt_data_end+0xfffed814>
    d440:	2807883a 	mov	r3,r5
    d444:	3023883a 	mov	r17,r6
    d448:	003df206 	br	cc14 <__alt_data_end+0xfffed814>
    d44c:	123ff804 	addi	r8,r2,-32
    d450:	01000804 	movi	r4,32
    d454:	1a10d83a 	srl	r8,r3,r8
    d458:	11000a26 	beq	r2,r4,d484 <__subdf3+0x8f4>
    d45c:	01001004 	movi	r4,64
    d460:	2085c83a 	sub	r2,r4,r2
    d464:	1884983a 	sll	r2,r3,r2
    d468:	1444b03a 	or	r2,r2,r17
    d46c:	1004c03a 	cmpne	r2,r2,zero
    d470:	40a2b03a 	or	r17,r8,r2
    d474:	0005883a 	mov	r2,zero
    d478:	003f8606 	br	d294 <__alt_data_end+0xfffede94>
    d47c:	0005883a 	mov	r2,zero
    d480:	003fdc06 	br	d3f4 <__alt_data_end+0xfffedff4>
    d484:	0005883a 	mov	r2,zero
    d488:	003ff706 	br	d468 <__alt_data_end+0xfffee068>

0000d48c <__fixdfsi>:
    d48c:	280cd53a 	srli	r6,r5,20
    d490:	00c00434 	movhi	r3,16
    d494:	18ffffc4 	addi	r3,r3,-1
    d498:	3181ffcc 	andi	r6,r6,2047
    d49c:	01c0ff84 	movi	r7,1022
    d4a0:	28c6703a 	and	r3,r5,r3
    d4a4:	280ad7fa 	srli	r5,r5,31
    d4a8:	3980120e 	bge	r7,r6,d4f4 <__fixdfsi+0x68>
    d4ac:	00810744 	movi	r2,1053
    d4b0:	11800c16 	blt	r2,r6,d4e4 <__fixdfsi+0x58>
    d4b4:	00810cc4 	movi	r2,1075
    d4b8:	1185c83a 	sub	r2,r2,r6
    d4bc:	01c007c4 	movi	r7,31
    d4c0:	18c00434 	orhi	r3,r3,16
    d4c4:	38800d16 	blt	r7,r2,d4fc <__fixdfsi+0x70>
    d4c8:	31befb44 	addi	r6,r6,-1043
    d4cc:	2084d83a 	srl	r2,r4,r2
    d4d0:	1986983a 	sll	r3,r3,r6
    d4d4:	1884b03a 	or	r2,r3,r2
    d4d8:	28000726 	beq	r5,zero,d4f8 <__fixdfsi+0x6c>
    d4dc:	0085c83a 	sub	r2,zero,r2
    d4e0:	f800283a 	ret
    d4e4:	00a00034 	movhi	r2,32768
    d4e8:	10bfffc4 	addi	r2,r2,-1
    d4ec:	2885883a 	add	r2,r5,r2
    d4f0:	f800283a 	ret
    d4f4:	0005883a 	mov	r2,zero
    d4f8:	f800283a 	ret
    d4fc:	008104c4 	movi	r2,1043
    d500:	1185c83a 	sub	r2,r2,r6
    d504:	1884d83a 	srl	r2,r3,r2
    d508:	003ff306 	br	d4d8 <__alt_data_end+0xfffee0d8>

0000d50c <__floatsidf>:
    d50c:	defffd04 	addi	sp,sp,-12
    d510:	dfc00215 	stw	ra,8(sp)
    d514:	dc400115 	stw	r17,4(sp)
    d518:	dc000015 	stw	r16,0(sp)
    d51c:	20002b26 	beq	r4,zero,d5cc <__floatsidf+0xc0>
    d520:	2023883a 	mov	r17,r4
    d524:	2020d7fa 	srli	r16,r4,31
    d528:	20002d16 	blt	r4,zero,d5e0 <__floatsidf+0xd4>
    d52c:	8809883a 	mov	r4,r17
    d530:	000d6900 	call	d690 <__clzsi2>
    d534:	01410784 	movi	r5,1054
    d538:	288bc83a 	sub	r5,r5,r2
    d53c:	01010cc4 	movi	r4,1075
    d540:	2149c83a 	sub	r4,r4,r5
    d544:	00c007c4 	movi	r3,31
    d548:	1900160e 	bge	r3,r4,d5a4 <__floatsidf+0x98>
    d54c:	00c104c4 	movi	r3,1043
    d550:	1947c83a 	sub	r3,r3,r5
    d554:	88c6983a 	sll	r3,r17,r3
    d558:	00800434 	movhi	r2,16
    d55c:	10bfffc4 	addi	r2,r2,-1
    d560:	1886703a 	and	r3,r3,r2
    d564:	2941ffcc 	andi	r5,r5,2047
    d568:	800d883a 	mov	r6,r16
    d56c:	0005883a 	mov	r2,zero
    d570:	280a953a 	slli	r5,r5,20
    d574:	31803fcc 	andi	r6,r6,255
    d578:	01000434 	movhi	r4,16
    d57c:	300c97fa 	slli	r6,r6,31
    d580:	213fffc4 	addi	r4,r4,-1
    d584:	1906703a 	and	r3,r3,r4
    d588:	1946b03a 	or	r3,r3,r5
    d58c:	1986b03a 	or	r3,r3,r6
    d590:	dfc00217 	ldw	ra,8(sp)
    d594:	dc400117 	ldw	r17,4(sp)
    d598:	dc000017 	ldw	r16,0(sp)
    d59c:	dec00304 	addi	sp,sp,12
    d5a0:	f800283a 	ret
    d5a4:	00c002c4 	movi	r3,11
    d5a8:	1887c83a 	sub	r3,r3,r2
    d5ac:	88c6d83a 	srl	r3,r17,r3
    d5b0:	8904983a 	sll	r2,r17,r4
    d5b4:	01000434 	movhi	r4,16
    d5b8:	213fffc4 	addi	r4,r4,-1
    d5bc:	2941ffcc 	andi	r5,r5,2047
    d5c0:	1906703a 	and	r3,r3,r4
    d5c4:	800d883a 	mov	r6,r16
    d5c8:	003fe906 	br	d570 <__alt_data_end+0xfffee170>
    d5cc:	000d883a 	mov	r6,zero
    d5d0:	000b883a 	mov	r5,zero
    d5d4:	0007883a 	mov	r3,zero
    d5d8:	0005883a 	mov	r2,zero
    d5dc:	003fe406 	br	d570 <__alt_data_end+0xfffee170>
    d5e0:	0123c83a 	sub	r17,zero,r4
    d5e4:	003fd106 	br	d52c <__alt_data_end+0xfffee12c>

0000d5e8 <__floatunsidf>:
    d5e8:	defffe04 	addi	sp,sp,-8
    d5ec:	dc000015 	stw	r16,0(sp)
    d5f0:	dfc00115 	stw	ra,4(sp)
    d5f4:	2021883a 	mov	r16,r4
    d5f8:	20002226 	beq	r4,zero,d684 <__floatunsidf+0x9c>
    d5fc:	000d6900 	call	d690 <__clzsi2>
    d600:	01010784 	movi	r4,1054
    d604:	2089c83a 	sub	r4,r4,r2
    d608:	01810cc4 	movi	r6,1075
    d60c:	310dc83a 	sub	r6,r6,r4
    d610:	00c007c4 	movi	r3,31
    d614:	1980120e 	bge	r3,r6,d660 <__floatunsidf+0x78>
    d618:	00c104c4 	movi	r3,1043
    d61c:	1907c83a 	sub	r3,r3,r4
    d620:	80ca983a 	sll	r5,r16,r3
    d624:	00800434 	movhi	r2,16
    d628:	10bfffc4 	addi	r2,r2,-1
    d62c:	2101ffcc 	andi	r4,r4,2047
    d630:	0021883a 	mov	r16,zero
    d634:	288a703a 	and	r5,r5,r2
    d638:	2008953a 	slli	r4,r4,20
    d63c:	00c00434 	movhi	r3,16
    d640:	18ffffc4 	addi	r3,r3,-1
    d644:	28c6703a 	and	r3,r5,r3
    d648:	8005883a 	mov	r2,r16
    d64c:	1906b03a 	or	r3,r3,r4
    d650:	dfc00117 	ldw	ra,4(sp)
    d654:	dc000017 	ldw	r16,0(sp)
    d658:	dec00204 	addi	sp,sp,8
    d65c:	f800283a 	ret
    d660:	00c002c4 	movi	r3,11
    d664:	188bc83a 	sub	r5,r3,r2
    d668:	814ad83a 	srl	r5,r16,r5
    d66c:	00c00434 	movhi	r3,16
    d670:	18ffffc4 	addi	r3,r3,-1
    d674:	81a0983a 	sll	r16,r16,r6
    d678:	2101ffcc 	andi	r4,r4,2047
    d67c:	28ca703a 	and	r5,r5,r3
    d680:	003fed06 	br	d638 <__alt_data_end+0xfffee238>
    d684:	0009883a 	mov	r4,zero
    d688:	000b883a 	mov	r5,zero
    d68c:	003fea06 	br	d638 <__alt_data_end+0xfffee238>

0000d690 <__clzsi2>:
    d690:	00bfffd4 	movui	r2,65535
    d694:	11000536 	bltu	r2,r4,d6ac <__clzsi2+0x1c>
    d698:	00803fc4 	movi	r2,255
    d69c:	11000f36 	bltu	r2,r4,d6dc <__clzsi2+0x4c>
    d6a0:	00800804 	movi	r2,32
    d6a4:	0007883a 	mov	r3,zero
    d6a8:	00000506 	br	d6c0 <__clzsi2+0x30>
    d6ac:	00804034 	movhi	r2,256
    d6b0:	10bfffc4 	addi	r2,r2,-1
    d6b4:	11000c2e 	bgeu	r2,r4,d6e8 <__clzsi2+0x58>
    d6b8:	00800204 	movi	r2,8
    d6bc:	00c00604 	movi	r3,24
    d6c0:	20c8d83a 	srl	r4,r4,r3
    d6c4:	00c00074 	movhi	r3,1
    d6c8:	18fffa04 	addi	r3,r3,-24
    d6cc:	1909883a 	add	r4,r3,r4
    d6d0:	20c00003 	ldbu	r3,0(r4)
    d6d4:	10c5c83a 	sub	r2,r2,r3
    d6d8:	f800283a 	ret
    d6dc:	00800604 	movi	r2,24
    d6e0:	00c00204 	movi	r3,8
    d6e4:	003ff606 	br	d6c0 <__alt_data_end+0xfffee2c0>
    d6e8:	00800404 	movi	r2,16
    d6ec:	1007883a 	mov	r3,r2
    d6f0:	003ff306 	br	d6c0 <__alt_data_end+0xfffee2c0>

0000d6f4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d6f4:	defffe04 	addi	sp,sp,-8
    d6f8:	dfc00115 	stw	ra,4(sp)
    d6fc:	df000015 	stw	fp,0(sp)
    d700:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d704:	d0a00b17 	ldw	r2,-32724(gp)
    d708:	10000326 	beq	r2,zero,d718 <alt_get_errno+0x24>
    d70c:	d0a00b17 	ldw	r2,-32724(gp)
    d710:	103ee83a 	callr	r2
    d714:	00000106 	br	d71c <alt_get_errno+0x28>
    d718:	d0a6d604 	addi	r2,gp,-25768
}
    d71c:	e037883a 	mov	sp,fp
    d720:	dfc00117 	ldw	ra,4(sp)
    d724:	df000017 	ldw	fp,0(sp)
    d728:	dec00204 	addi	sp,sp,8
    d72c:	f800283a 	ret

0000d730 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d730:	defffb04 	addi	sp,sp,-20
    d734:	dfc00415 	stw	ra,16(sp)
    d738:	df000315 	stw	fp,12(sp)
    d73c:	df000304 	addi	fp,sp,12
    d740:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d744:	e0bfff17 	ldw	r2,-4(fp)
    d748:	10000816 	blt	r2,zero,d76c <close+0x3c>
    d74c:	01400304 	movi	r5,12
    d750:	e13fff17 	ldw	r4,-4(fp)
    d754:	000ae280 	call	ae28 <__mulsi3>
    d758:	1007883a 	mov	r3,r2
    d75c:	00800074 	movhi	r2,1
    d760:	10827a04 	addi	r2,r2,2536
    d764:	1885883a 	add	r2,r3,r2
    d768:	00000106 	br	d770 <close+0x40>
    d76c:	0005883a 	mov	r2,zero
    d770:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d774:	e0bffd17 	ldw	r2,-12(fp)
    d778:	10001926 	beq	r2,zero,d7e0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d77c:	e0bffd17 	ldw	r2,-12(fp)
    d780:	10800017 	ldw	r2,0(r2)
    d784:	10800417 	ldw	r2,16(r2)
    d788:	10000626 	beq	r2,zero,d7a4 <close+0x74>
    d78c:	e0bffd17 	ldw	r2,-12(fp)
    d790:	10800017 	ldw	r2,0(r2)
    d794:	10800417 	ldw	r2,16(r2)
    d798:	e13ffd17 	ldw	r4,-12(fp)
    d79c:	103ee83a 	callr	r2
    d7a0:	00000106 	br	d7a8 <close+0x78>
    d7a4:	0005883a 	mov	r2,zero
    d7a8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d7ac:	e13fff17 	ldw	r4,-4(fp)
    d7b0:	000e0b80 	call	e0b8 <alt_release_fd>
    if (rval < 0)
    d7b4:	e0bffe17 	ldw	r2,-8(fp)
    d7b8:	1000070e 	bge	r2,zero,d7d8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    d7bc:	000d6f40 	call	d6f4 <alt_get_errno>
    d7c0:	1007883a 	mov	r3,r2
    d7c4:	e0bffe17 	ldw	r2,-8(fp)
    d7c8:	0085c83a 	sub	r2,zero,r2
    d7cc:	18800015 	stw	r2,0(r3)
      return -1;
    d7d0:	00bfffc4 	movi	r2,-1
    d7d4:	00000706 	br	d7f4 <close+0xc4>
    }
    return 0;
    d7d8:	0005883a 	mov	r2,zero
    d7dc:	00000506 	br	d7f4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d7e0:	000d6f40 	call	d6f4 <alt_get_errno>
    d7e4:	1007883a 	mov	r3,r2
    d7e8:	00801444 	movi	r2,81
    d7ec:	18800015 	stw	r2,0(r3)
    return -1;
    d7f0:	00bfffc4 	movi	r2,-1
  }
}
    d7f4:	e037883a 	mov	sp,fp
    d7f8:	dfc00117 	ldw	ra,4(sp)
    d7fc:	df000017 	ldw	fp,0(sp)
    d800:	dec00204 	addi	sp,sp,8
    d804:	f800283a 	ret

0000d808 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d808:	defffc04 	addi	sp,sp,-16
    d80c:	df000315 	stw	fp,12(sp)
    d810:	df000304 	addi	fp,sp,12
    d814:	e13ffd15 	stw	r4,-12(fp)
    d818:	e17ffe15 	stw	r5,-8(fp)
    d81c:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d820:	e0bfff17 	ldw	r2,-4(fp)
}
    d824:	e037883a 	mov	sp,fp
    d828:	df000017 	ldw	fp,0(sp)
    d82c:	dec00104 	addi	sp,sp,4
    d830:	f800283a 	ret

0000d834 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d834:	defffe04 	addi	sp,sp,-8
    d838:	dfc00115 	stw	ra,4(sp)
    d83c:	df000015 	stw	fp,0(sp)
    d840:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d844:	d0a00b17 	ldw	r2,-32724(gp)
    d848:	10000326 	beq	r2,zero,d858 <alt_get_errno+0x24>
    d84c:	d0a00b17 	ldw	r2,-32724(gp)
    d850:	103ee83a 	callr	r2
    d854:	00000106 	br	d85c <alt_get_errno+0x28>
    d858:	d0a6d604 	addi	r2,gp,-25768
}
    d85c:	e037883a 	mov	sp,fp
    d860:	dfc00117 	ldw	ra,4(sp)
    d864:	df000017 	ldw	fp,0(sp)
    d868:	dec00204 	addi	sp,sp,8
    d86c:	f800283a 	ret

0000d870 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d870:	defffb04 	addi	sp,sp,-20
    d874:	dfc00415 	stw	ra,16(sp)
    d878:	df000315 	stw	fp,12(sp)
    d87c:	df000304 	addi	fp,sp,12
    d880:	e13ffe15 	stw	r4,-8(fp)
    d884:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d888:	e0bffe17 	ldw	r2,-8(fp)
    d88c:	10000816 	blt	r2,zero,d8b0 <fstat+0x40>
    d890:	01400304 	movi	r5,12
    d894:	e13ffe17 	ldw	r4,-8(fp)
    d898:	000ae280 	call	ae28 <__mulsi3>
    d89c:	1007883a 	mov	r3,r2
    d8a0:	00800074 	movhi	r2,1
    d8a4:	10827a04 	addi	r2,r2,2536
    d8a8:	1885883a 	add	r2,r3,r2
    d8ac:	00000106 	br	d8b4 <fstat+0x44>
    d8b0:	0005883a 	mov	r2,zero
    d8b4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d8b8:	e0bffd17 	ldw	r2,-12(fp)
    d8bc:	10001026 	beq	r2,zero,d900 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d8c0:	e0bffd17 	ldw	r2,-12(fp)
    d8c4:	10800017 	ldw	r2,0(r2)
    d8c8:	10800817 	ldw	r2,32(r2)
    d8cc:	10000726 	beq	r2,zero,d8ec <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    d8d0:	e0bffd17 	ldw	r2,-12(fp)
    d8d4:	10800017 	ldw	r2,0(r2)
    d8d8:	10800817 	ldw	r2,32(r2)
    d8dc:	e17fff17 	ldw	r5,-4(fp)
    d8e0:	e13ffd17 	ldw	r4,-12(fp)
    d8e4:	103ee83a 	callr	r2
    d8e8:	00000a06 	br	d914 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d8ec:	e0bfff17 	ldw	r2,-4(fp)
    d8f0:	00c80004 	movi	r3,8192
    d8f4:	10c00115 	stw	r3,4(r2)
      return 0;
    d8f8:	0005883a 	mov	r2,zero
    d8fc:	00000506 	br	d914 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d900:	000d8340 	call	d834 <alt_get_errno>
    d904:	1007883a 	mov	r3,r2
    d908:	00801444 	movi	r2,81
    d90c:	18800015 	stw	r2,0(r3)
    return -1;
    d910:	00bfffc4 	movi	r2,-1
  }
}
    d914:	e037883a 	mov	sp,fp
    d918:	dfc00117 	ldw	ra,4(sp)
    d91c:	df000017 	ldw	fp,0(sp)
    d920:	dec00204 	addi	sp,sp,8
    d924:	f800283a 	ret

0000d928 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    d928:	defff904 	addi	sp,sp,-28
    d92c:	dfc00615 	stw	ra,24(sp)
    d930:	df000515 	stw	fp,20(sp)
    d934:	df000504 	addi	fp,sp,20
    d938:	e13ffc15 	stw	r4,-16(fp)
    d93c:	e17ffd15 	stw	r5,-12(fp)
    d940:	e1bffe15 	stw	r6,-8(fp)
    d944:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    d948:	e0800217 	ldw	r2,8(fp)
    d94c:	d8800015 	stw	r2,0(sp)
    d950:	e1ffff17 	ldw	r7,-4(fp)
    d954:	e1bffe17 	ldw	r6,-8(fp)
    d958:	e17ffd17 	ldw	r5,-12(fp)
    d95c:	e13ffc17 	ldw	r4,-16(fp)
    d960:	000dad80 	call	dad8 <alt_iic_isr_register>
}  
    d964:	e037883a 	mov	sp,fp
    d968:	dfc00117 	ldw	ra,4(sp)
    d96c:	df000017 	ldw	fp,0(sp)
    d970:	dec00204 	addi	sp,sp,8
    d974:	f800283a 	ret

0000d978 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    d978:	defff904 	addi	sp,sp,-28
    d97c:	df000615 	stw	fp,24(sp)
    d980:	df000604 	addi	fp,sp,24
    d984:	e13ffe15 	stw	r4,-8(fp)
    d988:	e17fff15 	stw	r5,-4(fp)
    d98c:	e0bfff17 	ldw	r2,-4(fp)
    d990:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d994:	0005303a 	rdctl	r2,status
    d998:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d99c:	e0fffb17 	ldw	r3,-20(fp)
    d9a0:	00bfff84 	movi	r2,-2
    d9a4:	1884703a 	and	r2,r3,r2
    d9a8:	1001703a 	wrctl	status,r2
  
  return context;
    d9ac:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    d9b0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    d9b4:	00c00044 	movi	r3,1
    d9b8:	e0bffa17 	ldw	r2,-24(fp)
    d9bc:	1884983a 	sll	r2,r3,r2
    d9c0:	1007883a 	mov	r3,r2
    d9c4:	d0a6d717 	ldw	r2,-25764(gp)
    d9c8:	1884b03a 	or	r2,r3,r2
    d9cc:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    d9d0:	d0a6d717 	ldw	r2,-25764(gp)
    d9d4:	100170fa 	wrctl	ienable,r2
    d9d8:	e0bffc17 	ldw	r2,-16(fp)
    d9dc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d9e0:	e0bffd17 	ldw	r2,-12(fp)
    d9e4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    d9e8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    d9ec:	0001883a 	nop
}
    d9f0:	e037883a 	mov	sp,fp
    d9f4:	df000017 	ldw	fp,0(sp)
    d9f8:	dec00104 	addi	sp,sp,4
    d9fc:	f800283a 	ret

0000da00 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    da00:	defff904 	addi	sp,sp,-28
    da04:	df000615 	stw	fp,24(sp)
    da08:	df000604 	addi	fp,sp,24
    da0c:	e13ffe15 	stw	r4,-8(fp)
    da10:	e17fff15 	stw	r5,-4(fp)
    da14:	e0bfff17 	ldw	r2,-4(fp)
    da18:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    da1c:	0005303a 	rdctl	r2,status
    da20:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    da24:	e0fffb17 	ldw	r3,-20(fp)
    da28:	00bfff84 	movi	r2,-2
    da2c:	1884703a 	and	r2,r3,r2
    da30:	1001703a 	wrctl	status,r2
  
  return context;
    da34:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    da38:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    da3c:	00c00044 	movi	r3,1
    da40:	e0bffa17 	ldw	r2,-24(fp)
    da44:	1884983a 	sll	r2,r3,r2
    da48:	0084303a 	nor	r2,zero,r2
    da4c:	1007883a 	mov	r3,r2
    da50:	d0a6d717 	ldw	r2,-25764(gp)
    da54:	1884703a 	and	r2,r3,r2
    da58:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    da5c:	d0a6d717 	ldw	r2,-25764(gp)
    da60:	100170fa 	wrctl	ienable,r2
    da64:	e0bffc17 	ldw	r2,-16(fp)
    da68:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    da6c:	e0bffd17 	ldw	r2,-12(fp)
    da70:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    da74:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    da78:	0001883a 	nop
}
    da7c:	e037883a 	mov	sp,fp
    da80:	df000017 	ldw	fp,0(sp)
    da84:	dec00104 	addi	sp,sp,4
    da88:	f800283a 	ret

0000da8c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    da8c:	defffc04 	addi	sp,sp,-16
    da90:	df000315 	stw	fp,12(sp)
    da94:	df000304 	addi	fp,sp,12
    da98:	e13ffe15 	stw	r4,-8(fp)
    da9c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    daa0:	000530fa 	rdctl	r2,ienable
    daa4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    daa8:	00c00044 	movi	r3,1
    daac:	e0bfff17 	ldw	r2,-4(fp)
    dab0:	1884983a 	sll	r2,r3,r2
    dab4:	1007883a 	mov	r3,r2
    dab8:	e0bffd17 	ldw	r2,-12(fp)
    dabc:	1884703a 	and	r2,r3,r2
    dac0:	1004c03a 	cmpne	r2,r2,zero
    dac4:	10803fcc 	andi	r2,r2,255
}
    dac8:	e037883a 	mov	sp,fp
    dacc:	df000017 	ldw	fp,0(sp)
    dad0:	dec00104 	addi	sp,sp,4
    dad4:	f800283a 	ret

0000dad8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    dad8:	defff504 	addi	sp,sp,-44
    dadc:	dfc00a15 	stw	ra,40(sp)
    dae0:	df000915 	stw	fp,36(sp)
    dae4:	df000904 	addi	fp,sp,36
    dae8:	e13ffc15 	stw	r4,-16(fp)
    daec:	e17ffd15 	stw	r5,-12(fp)
    daf0:	e1bffe15 	stw	r6,-8(fp)
    daf4:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    daf8:	00bffa84 	movi	r2,-22
    dafc:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    db00:	e0bffd17 	ldw	r2,-12(fp)
    db04:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    db08:	e0bff817 	ldw	r2,-32(fp)
    db0c:	10800808 	cmpgei	r2,r2,32
    db10:	1000271e 	bne	r2,zero,dbb0 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    db14:	0005303a 	rdctl	r2,status
    db18:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    db1c:	e0fffb17 	ldw	r3,-20(fp)
    db20:	00bfff84 	movi	r2,-2
    db24:	1884703a 	and	r2,r3,r2
    db28:	1001703a 	wrctl	status,r2
  
  return context;
    db2c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    db30:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    db34:	00800074 	movhi	r2,1
    db38:	108dd904 	addi	r2,r2,14180
    db3c:	e0fff817 	ldw	r3,-32(fp)
    db40:	180690fa 	slli	r3,r3,3
    db44:	10c5883a 	add	r2,r2,r3
    db48:	e0fffe17 	ldw	r3,-8(fp)
    db4c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    db50:	00800074 	movhi	r2,1
    db54:	108dd904 	addi	r2,r2,14180
    db58:	e0fff817 	ldw	r3,-32(fp)
    db5c:	180690fa 	slli	r3,r3,3
    db60:	10c5883a 	add	r2,r2,r3
    db64:	10800104 	addi	r2,r2,4
    db68:	e0ffff17 	ldw	r3,-4(fp)
    db6c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    db70:	e0bffe17 	ldw	r2,-8(fp)
    db74:	10000526 	beq	r2,zero,db8c <alt_iic_isr_register+0xb4>
    db78:	e0bff817 	ldw	r2,-32(fp)
    db7c:	100b883a 	mov	r5,r2
    db80:	e13ffc17 	ldw	r4,-16(fp)
    db84:	000d9780 	call	d978 <alt_ic_irq_enable>
    db88:	00000406 	br	db9c <alt_iic_isr_register+0xc4>
    db8c:	e0bff817 	ldw	r2,-32(fp)
    db90:	100b883a 	mov	r5,r2
    db94:	e13ffc17 	ldw	r4,-16(fp)
    db98:	000da000 	call	da00 <alt_ic_irq_disable>
    db9c:	e0bff715 	stw	r2,-36(fp)
    dba0:	e0bffa17 	ldw	r2,-24(fp)
    dba4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dba8:	e0bff917 	ldw	r2,-28(fp)
    dbac:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    dbb0:	e0bff717 	ldw	r2,-36(fp)
}
    dbb4:	e037883a 	mov	sp,fp
    dbb8:	dfc00117 	ldw	ra,4(sp)
    dbbc:	df000017 	ldw	fp,0(sp)
    dbc0:	dec00204 	addi	sp,sp,8
    dbc4:	f800283a 	ret

0000dbc8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    dbc8:	defffe04 	addi	sp,sp,-8
    dbcc:	dfc00115 	stw	ra,4(sp)
    dbd0:	df000015 	stw	fp,0(sp)
    dbd4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dbd8:	d0a00b17 	ldw	r2,-32724(gp)
    dbdc:	10000326 	beq	r2,zero,dbec <alt_get_errno+0x24>
    dbe0:	d0a00b17 	ldw	r2,-32724(gp)
    dbe4:	103ee83a 	callr	r2
    dbe8:	00000106 	br	dbf0 <alt_get_errno+0x28>
    dbec:	d0a6d604 	addi	r2,gp,-25768
}
    dbf0:	e037883a 	mov	sp,fp
    dbf4:	dfc00117 	ldw	ra,4(sp)
    dbf8:	df000017 	ldw	fp,0(sp)
    dbfc:	dec00204 	addi	sp,sp,8
    dc00:	f800283a 	ret

0000dc04 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    dc04:	deffed04 	addi	sp,sp,-76
    dc08:	dfc01215 	stw	ra,72(sp)
    dc0c:	df001115 	stw	fp,68(sp)
    dc10:	df001104 	addi	fp,sp,68
    dc14:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dc18:	e0bfff17 	ldw	r2,-4(fp)
    dc1c:	10000816 	blt	r2,zero,dc40 <isatty+0x3c>
    dc20:	01400304 	movi	r5,12
    dc24:	e13fff17 	ldw	r4,-4(fp)
    dc28:	000ae280 	call	ae28 <__mulsi3>
    dc2c:	1007883a 	mov	r3,r2
    dc30:	00800074 	movhi	r2,1
    dc34:	10827a04 	addi	r2,r2,2536
    dc38:	1885883a 	add	r2,r3,r2
    dc3c:	00000106 	br	dc44 <isatty+0x40>
    dc40:	0005883a 	mov	r2,zero
    dc44:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    dc48:	e0bfef17 	ldw	r2,-68(fp)
    dc4c:	10000e26 	beq	r2,zero,dc88 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    dc50:	e0bfef17 	ldw	r2,-68(fp)
    dc54:	10800017 	ldw	r2,0(r2)
    dc58:	10800817 	ldw	r2,32(r2)
    dc5c:	1000021e 	bne	r2,zero,dc68 <isatty+0x64>
    {
      return 1;
    dc60:	00800044 	movi	r2,1
    dc64:	00000d06 	br	dc9c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    dc68:	e0bff004 	addi	r2,fp,-64
    dc6c:	100b883a 	mov	r5,r2
    dc70:	e13fff17 	ldw	r4,-4(fp)
    dc74:	000d8700 	call	d870 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    dc78:	e0bff117 	ldw	r2,-60(fp)
    dc7c:	10880020 	cmpeqi	r2,r2,8192
    dc80:	10803fcc 	andi	r2,r2,255
    dc84:	00000506 	br	dc9c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    dc88:	000dbc80 	call	dbc8 <alt_get_errno>
    dc8c:	1007883a 	mov	r3,r2
    dc90:	00801444 	movi	r2,81
    dc94:	18800015 	stw	r2,0(r3)
    return 0;
    dc98:	0005883a 	mov	r2,zero
  }
}
    dc9c:	e037883a 	mov	sp,fp
    dca0:	dfc00117 	ldw	ra,4(sp)
    dca4:	df000017 	ldw	fp,0(sp)
    dca8:	dec00204 	addi	sp,sp,8
    dcac:	f800283a 	ret

0000dcb0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    dcb0:	defffc04 	addi	sp,sp,-16
    dcb4:	df000315 	stw	fp,12(sp)
    dcb8:	df000304 	addi	fp,sp,12
    dcbc:	e13ffd15 	stw	r4,-12(fp)
    dcc0:	e17ffe15 	stw	r5,-8(fp)
    dcc4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    dcc8:	e0fffe17 	ldw	r3,-8(fp)
    dccc:	e0bffd17 	ldw	r2,-12(fp)
    dcd0:	18800c26 	beq	r3,r2,dd04 <alt_load_section+0x54>
  {
    while( to != end )
    dcd4:	00000806 	br	dcf8 <alt_load_section+0x48>
    {
      *to++ = *from++;
    dcd8:	e0bffe17 	ldw	r2,-8(fp)
    dcdc:	10c00104 	addi	r3,r2,4
    dce0:	e0fffe15 	stw	r3,-8(fp)
    dce4:	e0fffd17 	ldw	r3,-12(fp)
    dce8:	19000104 	addi	r4,r3,4
    dcec:	e13ffd15 	stw	r4,-12(fp)
    dcf0:	18c00017 	ldw	r3,0(r3)
    dcf4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    dcf8:	e0fffe17 	ldw	r3,-8(fp)
    dcfc:	e0bfff17 	ldw	r2,-4(fp)
    dd00:	18bff51e 	bne	r3,r2,dcd8 <__alt_data_end+0xfffee8d8>
    {
      *to++ = *from++;
    }
  }
}
    dd04:	0001883a 	nop
    dd08:	e037883a 	mov	sp,fp
    dd0c:	df000017 	ldw	fp,0(sp)
    dd10:	dec00104 	addi	sp,sp,4
    dd14:	f800283a 	ret

0000dd18 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    dd18:	defffe04 	addi	sp,sp,-8
    dd1c:	dfc00115 	stw	ra,4(sp)
    dd20:	df000015 	stw	fp,0(sp)
    dd24:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    dd28:	01800074 	movhi	r6,1
    dd2c:	31870204 	addi	r6,r6,7176
    dd30:	01400074 	movhi	r5,1
    dd34:	29404704 	addi	r5,r5,284
    dd38:	01000074 	movhi	r4,1
    dd3c:	21070204 	addi	r4,r4,7176
    dd40:	000dcb00 	call	dcb0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    dd44:	01800034 	movhi	r6,0
    dd48:	31807004 	addi	r6,r6,448
    dd4c:	01400034 	movhi	r5,0
    dd50:	29400804 	addi	r5,r5,32
    dd54:	01000034 	movhi	r4,0
    dd58:	21000804 	addi	r4,r4,32
    dd5c:	000dcb00 	call	dcb0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    dd60:	01800074 	movhi	r6,1
    dd64:	31804704 	addi	r6,r6,284
    dd68:	01400074 	movhi	r5,1
    dd6c:	297f7e04 	addi	r5,r5,-520
    dd70:	01000074 	movhi	r4,1
    dd74:	213f7e04 	addi	r4,r4,-520
    dd78:	000dcb00 	call	dcb0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    dd7c:	000f07c0 	call	f07c <alt_dcache_flush_all>
  alt_icache_flush_all();
    dd80:	000f23c0 	call	f23c <alt_icache_flush_all>
}
    dd84:	0001883a 	nop
    dd88:	e037883a 	mov	sp,fp
    dd8c:	dfc00117 	ldw	ra,4(sp)
    dd90:	df000017 	ldw	fp,0(sp)
    dd94:	dec00204 	addi	sp,sp,8
    dd98:	f800283a 	ret

0000dd9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    dd9c:	defffe04 	addi	sp,sp,-8
    dda0:	dfc00115 	stw	ra,4(sp)
    dda4:	df000015 	stw	fp,0(sp)
    dda8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ddac:	d0a00b17 	ldw	r2,-32724(gp)
    ddb0:	10000326 	beq	r2,zero,ddc0 <alt_get_errno+0x24>
    ddb4:	d0a00b17 	ldw	r2,-32724(gp)
    ddb8:	103ee83a 	callr	r2
    ddbc:	00000106 	br	ddc4 <alt_get_errno+0x28>
    ddc0:	d0a6d604 	addi	r2,gp,-25768
}
    ddc4:	e037883a 	mov	sp,fp
    ddc8:	dfc00117 	ldw	ra,4(sp)
    ddcc:	df000017 	ldw	fp,0(sp)
    ddd0:	dec00204 	addi	sp,sp,8
    ddd4:	f800283a 	ret

0000ddd8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    ddd8:	defff904 	addi	sp,sp,-28
    dddc:	dfc00615 	stw	ra,24(sp)
    dde0:	df000515 	stw	fp,20(sp)
    dde4:	df000504 	addi	fp,sp,20
    dde8:	e13ffd15 	stw	r4,-12(fp)
    ddec:	e17ffe15 	stw	r5,-8(fp)
    ddf0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    ddf4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    ddf8:	e0bffd17 	ldw	r2,-12(fp)
    ddfc:	10000816 	blt	r2,zero,de20 <lseek+0x48>
    de00:	01400304 	movi	r5,12
    de04:	e13ffd17 	ldw	r4,-12(fp)
    de08:	000ae280 	call	ae28 <__mulsi3>
    de0c:	1007883a 	mov	r3,r2
    de10:	00800074 	movhi	r2,1
    de14:	10827a04 	addi	r2,r2,2536
    de18:	1885883a 	add	r2,r3,r2
    de1c:	00000106 	br	de24 <lseek+0x4c>
    de20:	0005883a 	mov	r2,zero
    de24:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    de28:	e0bffc17 	ldw	r2,-16(fp)
    de2c:	10001026 	beq	r2,zero,de70 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    de30:	e0bffc17 	ldw	r2,-16(fp)
    de34:	10800017 	ldw	r2,0(r2)
    de38:	10800717 	ldw	r2,28(r2)
    de3c:	10000926 	beq	r2,zero,de64 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    de40:	e0bffc17 	ldw	r2,-16(fp)
    de44:	10800017 	ldw	r2,0(r2)
    de48:	10800717 	ldw	r2,28(r2)
    de4c:	e1bfff17 	ldw	r6,-4(fp)
    de50:	e17ffe17 	ldw	r5,-8(fp)
    de54:	e13ffc17 	ldw	r4,-16(fp)
    de58:	103ee83a 	callr	r2
    de5c:	e0bffb15 	stw	r2,-20(fp)
    de60:	00000506 	br	de78 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    de64:	00bfde84 	movi	r2,-134
    de68:	e0bffb15 	stw	r2,-20(fp)
    de6c:	00000206 	br	de78 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    de70:	00bfebc4 	movi	r2,-81
    de74:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    de78:	e0bffb17 	ldw	r2,-20(fp)
    de7c:	1000070e 	bge	r2,zero,de9c <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    de80:	000dd9c0 	call	dd9c <alt_get_errno>
    de84:	1007883a 	mov	r3,r2
    de88:	e0bffb17 	ldw	r2,-20(fp)
    de8c:	0085c83a 	sub	r2,zero,r2
    de90:	18800015 	stw	r2,0(r3)
    rc = -1;
    de94:	00bfffc4 	movi	r2,-1
    de98:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    de9c:	e0bffb17 	ldw	r2,-20(fp)
}
    dea0:	e037883a 	mov	sp,fp
    dea4:	dfc00117 	ldw	ra,4(sp)
    dea8:	df000017 	ldw	fp,0(sp)
    deac:	dec00204 	addi	sp,sp,8
    deb0:	f800283a 	ret

0000deb4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    deb4:	defffd04 	addi	sp,sp,-12
    deb8:	dfc00215 	stw	ra,8(sp)
    debc:	df000115 	stw	fp,4(sp)
    dec0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    dec4:	0009883a 	mov	r4,zero
    dec8:	000e35c0 	call	e35c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    decc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    ded0:	000e3940 	call	e394 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    ded4:	01800074 	movhi	r6,1
    ded8:	31803d04 	addi	r6,r6,244
    dedc:	01400074 	movhi	r5,1
    dee0:	29403d04 	addi	r5,r5,244
    dee4:	01000074 	movhi	r4,1
    dee8:	21003d04 	addi	r4,r4,244
    deec:	000f3400 	call	f340 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    def0:	000f17c0 	call	f17c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    def4:	01000074 	movhi	r4,1
    def8:	213c7704 	addi	r4,r4,-3620
    defc:	000fa640 	call	fa64 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    df00:	d0a6d817 	ldw	r2,-25760(gp)
    df04:	d0e6d917 	ldw	r3,-25756(gp)
    df08:	d126da17 	ldw	r4,-25752(gp)
    df0c:	200d883a 	mov	r6,r4
    df10:	180b883a 	mov	r5,r3
    df14:	1009883a 	mov	r4,r2
    df18:	00008300 	call	830 <main>
    df1c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    df20:	01000044 	movi	r4,1
    df24:	000d7300 	call	d730 <close>
  exit (result);
    df28:	e13fff17 	ldw	r4,-4(fp)
    df2c:	000fa780 	call	fa78 <exit>

0000df30 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    df30:	defffe04 	addi	sp,sp,-8
    df34:	df000115 	stw	fp,4(sp)
    df38:	df000104 	addi	fp,sp,4
    df3c:	e13fff15 	stw	r4,-4(fp)
}
    df40:	0001883a 	nop
    df44:	e037883a 	mov	sp,fp
    df48:	df000017 	ldw	fp,0(sp)
    df4c:	dec00104 	addi	sp,sp,4
    df50:	f800283a 	ret

0000df54 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    df54:	defffe04 	addi	sp,sp,-8
    df58:	df000115 	stw	fp,4(sp)
    df5c:	df000104 	addi	fp,sp,4
    df60:	e13fff15 	stw	r4,-4(fp)
}
    df64:	0001883a 	nop
    df68:	e037883a 	mov	sp,fp
    df6c:	df000017 	ldw	fp,0(sp)
    df70:	dec00104 	addi	sp,sp,4
    df74:	f800283a 	ret

0000df78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    df78:	defffe04 	addi	sp,sp,-8
    df7c:	dfc00115 	stw	ra,4(sp)
    df80:	df000015 	stw	fp,0(sp)
    df84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    df88:	d0a00b17 	ldw	r2,-32724(gp)
    df8c:	10000326 	beq	r2,zero,df9c <alt_get_errno+0x24>
    df90:	d0a00b17 	ldw	r2,-32724(gp)
    df94:	103ee83a 	callr	r2
    df98:	00000106 	br	dfa0 <alt_get_errno+0x28>
    df9c:	d0a6d604 	addi	r2,gp,-25768
}
    dfa0:	e037883a 	mov	sp,fp
    dfa4:	dfc00117 	ldw	ra,4(sp)
    dfa8:	df000017 	ldw	fp,0(sp)
    dfac:	dec00204 	addi	sp,sp,8
    dfb0:	f800283a 	ret

0000dfb4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    dfb4:	defff904 	addi	sp,sp,-28
    dfb8:	dfc00615 	stw	ra,24(sp)
    dfbc:	df000515 	stw	fp,20(sp)
    dfc0:	df000504 	addi	fp,sp,20
    dfc4:	e13ffd15 	stw	r4,-12(fp)
    dfc8:	e17ffe15 	stw	r5,-8(fp)
    dfcc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dfd0:	e0bffd17 	ldw	r2,-12(fp)
    dfd4:	10000816 	blt	r2,zero,dff8 <read+0x44>
    dfd8:	01400304 	movi	r5,12
    dfdc:	e13ffd17 	ldw	r4,-12(fp)
    dfe0:	000ae280 	call	ae28 <__mulsi3>
    dfe4:	1007883a 	mov	r3,r2
    dfe8:	00800074 	movhi	r2,1
    dfec:	10827a04 	addi	r2,r2,2536
    dff0:	1885883a 	add	r2,r3,r2
    dff4:	00000106 	br	dffc <read+0x48>
    dff8:	0005883a 	mov	r2,zero
    dffc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    e000:	e0bffb17 	ldw	r2,-20(fp)
    e004:	10002226 	beq	r2,zero,e090 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e008:	e0bffb17 	ldw	r2,-20(fp)
    e00c:	10800217 	ldw	r2,8(r2)
    e010:	108000cc 	andi	r2,r2,3
    e014:	10800060 	cmpeqi	r2,r2,1
    e018:	1000181e 	bne	r2,zero,e07c <read+0xc8>
        (fd->dev->read))
    e01c:	e0bffb17 	ldw	r2,-20(fp)
    e020:	10800017 	ldw	r2,0(r2)
    e024:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e028:	10001426 	beq	r2,zero,e07c <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    e02c:	e0bffb17 	ldw	r2,-20(fp)
    e030:	10800017 	ldw	r2,0(r2)
    e034:	10800517 	ldw	r2,20(r2)
    e038:	e0ffff17 	ldw	r3,-4(fp)
    e03c:	180d883a 	mov	r6,r3
    e040:	e17ffe17 	ldw	r5,-8(fp)
    e044:	e13ffb17 	ldw	r4,-20(fp)
    e048:	103ee83a 	callr	r2
    e04c:	e0bffc15 	stw	r2,-16(fp)
    e050:	e0bffc17 	ldw	r2,-16(fp)
    e054:	1000070e 	bge	r2,zero,e074 <read+0xc0>
        {
          ALT_ERRNO = -rval;
    e058:	000df780 	call	df78 <alt_get_errno>
    e05c:	1007883a 	mov	r3,r2
    e060:	e0bffc17 	ldw	r2,-16(fp)
    e064:	0085c83a 	sub	r2,zero,r2
    e068:	18800015 	stw	r2,0(r3)
          return -1;
    e06c:	00bfffc4 	movi	r2,-1
    e070:	00000c06 	br	e0a4 <read+0xf0>
        }
        return rval;
    e074:	e0bffc17 	ldw	r2,-16(fp)
    e078:	00000a06 	br	e0a4 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    e07c:	000df780 	call	df78 <alt_get_errno>
    e080:	1007883a 	mov	r3,r2
    e084:	00800344 	movi	r2,13
    e088:	18800015 	stw	r2,0(r3)
    e08c:	00000406 	br	e0a0 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    e090:	000df780 	call	df78 <alt_get_errno>
    e094:	1007883a 	mov	r3,r2
    e098:	00801444 	movi	r2,81
    e09c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    e0a0:	00bfffc4 	movi	r2,-1
}
    e0a4:	e037883a 	mov	sp,fp
    e0a8:	dfc00117 	ldw	ra,4(sp)
    e0ac:	df000017 	ldw	fp,0(sp)
    e0b0:	dec00204 	addi	sp,sp,8
    e0b4:	f800283a 	ret

0000e0b8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    e0b8:	defffc04 	addi	sp,sp,-16
    e0bc:	dfc00315 	stw	ra,12(sp)
    e0c0:	df000215 	stw	fp,8(sp)
    e0c4:	dc000115 	stw	r16,4(sp)
    e0c8:	df000204 	addi	fp,sp,8
    e0cc:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    e0d0:	e0bffe17 	ldw	r2,-8(fp)
    e0d4:	108000d0 	cmplti	r2,r2,3
    e0d8:	1000111e 	bne	r2,zero,e120 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    e0dc:	04000074 	movhi	r16,1
    e0e0:	84027a04 	addi	r16,r16,2536
    e0e4:	e0bffe17 	ldw	r2,-8(fp)
    e0e8:	01400304 	movi	r5,12
    e0ec:	1009883a 	mov	r4,r2
    e0f0:	000ae280 	call	ae28 <__mulsi3>
    e0f4:	8085883a 	add	r2,r16,r2
    e0f8:	10800204 	addi	r2,r2,8
    e0fc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    e100:	04000074 	movhi	r16,1
    e104:	84027a04 	addi	r16,r16,2536
    e108:	e0bffe17 	ldw	r2,-8(fp)
    e10c:	01400304 	movi	r5,12
    e110:	1009883a 	mov	r4,r2
    e114:	000ae280 	call	ae28 <__mulsi3>
    e118:	8085883a 	add	r2,r16,r2
    e11c:	10000015 	stw	zero,0(r2)
  }
}
    e120:	0001883a 	nop
    e124:	e6ffff04 	addi	sp,fp,-4
    e128:	dfc00217 	ldw	ra,8(sp)
    e12c:	df000117 	ldw	fp,4(sp)
    e130:	dc000017 	ldw	r16,0(sp)
    e134:	dec00304 	addi	sp,sp,12
    e138:	f800283a 	ret

0000e13c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    e13c:	defff904 	addi	sp,sp,-28
    e140:	df000615 	stw	fp,24(sp)
    e144:	df000604 	addi	fp,sp,24
    e148:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e14c:	0005303a 	rdctl	r2,status
    e150:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e154:	e0fffe17 	ldw	r3,-8(fp)
    e158:	00bfff84 	movi	r2,-2
    e15c:	1884703a 	and	r2,r3,r2
    e160:	1001703a 	wrctl	status,r2
  
  return context;
    e164:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    e168:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    e16c:	d0a00d17 	ldw	r2,-32716(gp)
    e170:	10c000c4 	addi	r3,r2,3
    e174:	00bfff04 	movi	r2,-4
    e178:	1884703a 	and	r2,r3,r2
    e17c:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    e180:	d0e00d17 	ldw	r3,-32716(gp)
    e184:	e0bfff17 	ldw	r2,-4(fp)
    e188:	1887883a 	add	r3,r3,r2
    e18c:	008000b4 	movhi	r2,2
    e190:	10bd0004 	addi	r2,r2,-3072
    e194:	10c0062e 	bgeu	r2,r3,e1b0 <sbrk+0x74>
    e198:	e0bffb17 	ldw	r2,-20(fp)
    e19c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e1a0:	e0bffa17 	ldw	r2,-24(fp)
    e1a4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    e1a8:	00bfffc4 	movi	r2,-1
    e1ac:	00000b06 	br	e1dc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    e1b0:	d0a00d17 	ldw	r2,-32716(gp)
    e1b4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    e1b8:	d0e00d17 	ldw	r3,-32716(gp)
    e1bc:	e0bfff17 	ldw	r2,-4(fp)
    e1c0:	1885883a 	add	r2,r3,r2
    e1c4:	d0a00d15 	stw	r2,-32716(gp)
    e1c8:	e0bffb17 	ldw	r2,-20(fp)
    e1cc:	e0bffc15 	stw	r2,-16(fp)
    e1d0:	e0bffc17 	ldw	r2,-16(fp)
    e1d4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    e1d8:	e0bffd17 	ldw	r2,-12(fp)
} 
    e1dc:	e037883a 	mov	sp,fp
    e1e0:	df000017 	ldw	fp,0(sp)
    e1e4:	dec00104 	addi	sp,sp,4
    e1e8:	f800283a 	ret

0000e1ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e1ec:	defffe04 	addi	sp,sp,-8
    e1f0:	dfc00115 	stw	ra,4(sp)
    e1f4:	df000015 	stw	fp,0(sp)
    e1f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e1fc:	d0a00b17 	ldw	r2,-32724(gp)
    e200:	10000326 	beq	r2,zero,e210 <alt_get_errno+0x24>
    e204:	d0a00b17 	ldw	r2,-32724(gp)
    e208:	103ee83a 	callr	r2
    e20c:	00000106 	br	e214 <alt_get_errno+0x28>
    e210:	d0a6d604 	addi	r2,gp,-25768
}
    e214:	e037883a 	mov	sp,fp
    e218:	dfc00117 	ldw	ra,4(sp)
    e21c:	df000017 	ldw	fp,0(sp)
    e220:	dec00204 	addi	sp,sp,8
    e224:	f800283a 	ret

0000e228 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    e228:	defff904 	addi	sp,sp,-28
    e22c:	dfc00615 	stw	ra,24(sp)
    e230:	df000515 	stw	fp,20(sp)
    e234:	df000504 	addi	fp,sp,20
    e238:	e13ffd15 	stw	r4,-12(fp)
    e23c:	e17ffe15 	stw	r5,-8(fp)
    e240:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e244:	e0bffd17 	ldw	r2,-12(fp)
    e248:	10000816 	blt	r2,zero,e26c <write+0x44>
    e24c:	01400304 	movi	r5,12
    e250:	e13ffd17 	ldw	r4,-12(fp)
    e254:	000ae280 	call	ae28 <__mulsi3>
    e258:	1007883a 	mov	r3,r2
    e25c:	00800074 	movhi	r2,1
    e260:	10827a04 	addi	r2,r2,2536
    e264:	1885883a 	add	r2,r3,r2
    e268:	00000106 	br	e270 <write+0x48>
    e26c:	0005883a 	mov	r2,zero
    e270:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    e274:	e0bffb17 	ldw	r2,-20(fp)
    e278:	10002126 	beq	r2,zero,e300 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    e27c:	e0bffb17 	ldw	r2,-20(fp)
    e280:	10800217 	ldw	r2,8(r2)
    e284:	108000cc 	andi	r2,r2,3
    e288:	10001826 	beq	r2,zero,e2ec <write+0xc4>
    e28c:	e0bffb17 	ldw	r2,-20(fp)
    e290:	10800017 	ldw	r2,0(r2)
    e294:	10800617 	ldw	r2,24(r2)
    e298:	10001426 	beq	r2,zero,e2ec <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    e29c:	e0bffb17 	ldw	r2,-20(fp)
    e2a0:	10800017 	ldw	r2,0(r2)
    e2a4:	10800617 	ldw	r2,24(r2)
    e2a8:	e0ffff17 	ldw	r3,-4(fp)
    e2ac:	180d883a 	mov	r6,r3
    e2b0:	e17ffe17 	ldw	r5,-8(fp)
    e2b4:	e13ffb17 	ldw	r4,-20(fp)
    e2b8:	103ee83a 	callr	r2
    e2bc:	e0bffc15 	stw	r2,-16(fp)
    e2c0:	e0bffc17 	ldw	r2,-16(fp)
    e2c4:	1000070e 	bge	r2,zero,e2e4 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    e2c8:	000e1ec0 	call	e1ec <alt_get_errno>
    e2cc:	1007883a 	mov	r3,r2
    e2d0:	e0bffc17 	ldw	r2,-16(fp)
    e2d4:	0085c83a 	sub	r2,zero,r2
    e2d8:	18800015 	stw	r2,0(r3)
        return -1;
    e2dc:	00bfffc4 	movi	r2,-1
    e2e0:	00000c06 	br	e314 <write+0xec>
      }
      return rval;
    e2e4:	e0bffc17 	ldw	r2,-16(fp)
    e2e8:	00000a06 	br	e314 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    e2ec:	000e1ec0 	call	e1ec <alt_get_errno>
    e2f0:	1007883a 	mov	r3,r2
    e2f4:	00800344 	movi	r2,13
    e2f8:	18800015 	stw	r2,0(r3)
    e2fc:	00000406 	br	e310 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    e300:	000e1ec0 	call	e1ec <alt_get_errno>
    e304:	1007883a 	mov	r3,r2
    e308:	00801444 	movi	r2,81
    e30c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    e310:	00bfffc4 	movi	r2,-1
}
    e314:	e037883a 	mov	sp,fp
    e318:	dfc00117 	ldw	ra,4(sp)
    e31c:	df000017 	ldw	fp,0(sp)
    e320:	dec00204 	addi	sp,sp,8
    e324:	f800283a 	ret

0000e328 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    e328:	defffd04 	addi	sp,sp,-12
    e32c:	dfc00215 	stw	ra,8(sp)
    e330:	df000115 	stw	fp,4(sp)
    e334:	df000104 	addi	fp,sp,4
    e338:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    e33c:	d1600804 	addi	r5,gp,-32736
    e340:	e13fff17 	ldw	r4,-4(fp)
    e344:	000f0d80 	call	f0d8 <alt_dev_llist_insert>
}
    e348:	e037883a 	mov	sp,fp
    e34c:	dfc00117 	ldw	ra,4(sp)
    e350:	df000017 	ldw	fp,0(sp)
    e354:	dec00204 	addi	sp,sp,8
    e358:	f800283a 	ret

0000e35c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    e35c:	defffd04 	addi	sp,sp,-12
    e360:	dfc00215 	stw	ra,8(sp)
    e364:	df000115 	stw	fp,4(sp)
    e368:	df000104 	addi	fp,sp,4
    e36c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
    e370:	000f7e40 	call	f7e4 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    e374:	00800044 	movi	r2,1
    e378:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    e37c:	0001883a 	nop
    e380:	e037883a 	mov	sp,fp
    e384:	dfc00117 	ldw	ra,4(sp)
    e388:	df000017 	ldw	fp,0(sp)
    e38c:	dec00204 	addi	sp,sp,8
    e390:	f800283a 	ret

0000e394 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    e394:	defffe04 	addi	sp,sp,-8
    e398:	dfc00115 	stw	ra,4(sp)
    e39c:	df000015 	stw	fp,0(sp)
    e3a0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    e3a4:	01c0fa04 	movi	r7,1000
    e3a8:	01800184 	movi	r6,6
    e3ac:	000b883a 	mov	r5,zero
    e3b0:	010000b4 	movhi	r4,2
    e3b4:	21040004 	addi	r4,r4,4096
    e3b8:	000eed40 	call	eed4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    e3bc:	01800144 	movi	r6,5
    e3c0:	000b883a 	mov	r5,zero
    e3c4:	01000074 	movhi	r4,1
    e3c8:	2102e404 	addi	r4,r4,2960
    e3cc:	000e5580 	call	e558 <altera_avalon_jtag_uart_init>
    e3d0:	01000074 	movhi	r4,1
    e3d4:	2102da04 	addi	r4,r4,2920
    e3d8:	000e3280 	call	e328 <alt_dev_reg>
}
    e3dc:	0001883a 	nop
    e3e0:	e037883a 	mov	sp,fp
    e3e4:	dfc00117 	ldw	ra,4(sp)
    e3e8:	df000017 	ldw	fp,0(sp)
    e3ec:	dec00204 	addi	sp,sp,8
    e3f0:	f800283a 	ret

0000e3f4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    e3f4:	defffa04 	addi	sp,sp,-24
    e3f8:	dfc00515 	stw	ra,20(sp)
    e3fc:	df000415 	stw	fp,16(sp)
    e400:	df000404 	addi	fp,sp,16
    e404:	e13ffd15 	stw	r4,-12(fp)
    e408:	e17ffe15 	stw	r5,-8(fp)
    e40c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e410:	e0bffd17 	ldw	r2,-12(fp)
    e414:	10800017 	ldw	r2,0(r2)
    e418:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e41c:	e0bffc17 	ldw	r2,-16(fp)
    e420:	10c00a04 	addi	r3,r2,40
    e424:	e0bffd17 	ldw	r2,-12(fp)
    e428:	10800217 	ldw	r2,8(r2)
    e42c:	100f883a 	mov	r7,r2
    e430:	e1bfff17 	ldw	r6,-4(fp)
    e434:	e17ffe17 	ldw	r5,-8(fp)
    e438:	1809883a 	mov	r4,r3
    e43c:	000ea1c0 	call	ea1c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    e440:	e037883a 	mov	sp,fp
    e444:	dfc00117 	ldw	ra,4(sp)
    e448:	df000017 	ldw	fp,0(sp)
    e44c:	dec00204 	addi	sp,sp,8
    e450:	f800283a 	ret

0000e454 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e454:	defffa04 	addi	sp,sp,-24
    e458:	dfc00515 	stw	ra,20(sp)
    e45c:	df000415 	stw	fp,16(sp)
    e460:	df000404 	addi	fp,sp,16
    e464:	e13ffd15 	stw	r4,-12(fp)
    e468:	e17ffe15 	stw	r5,-8(fp)
    e46c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e470:	e0bffd17 	ldw	r2,-12(fp)
    e474:	10800017 	ldw	r2,0(r2)
    e478:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e47c:	e0bffc17 	ldw	r2,-16(fp)
    e480:	10c00a04 	addi	r3,r2,40
    e484:	e0bffd17 	ldw	r2,-12(fp)
    e488:	10800217 	ldw	r2,8(r2)
    e48c:	100f883a 	mov	r7,r2
    e490:	e1bfff17 	ldw	r6,-4(fp)
    e494:	e17ffe17 	ldw	r5,-8(fp)
    e498:	1809883a 	mov	r4,r3
    e49c:	000ec380 	call	ec38 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e4a0:	e037883a 	mov	sp,fp
    e4a4:	dfc00117 	ldw	ra,4(sp)
    e4a8:	df000017 	ldw	fp,0(sp)
    e4ac:	dec00204 	addi	sp,sp,8
    e4b0:	f800283a 	ret

0000e4b4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e4b4:	defffc04 	addi	sp,sp,-16
    e4b8:	dfc00315 	stw	ra,12(sp)
    e4bc:	df000215 	stw	fp,8(sp)
    e4c0:	df000204 	addi	fp,sp,8
    e4c4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e4c8:	e0bfff17 	ldw	r2,-4(fp)
    e4cc:	10800017 	ldw	r2,0(r2)
    e4d0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e4d4:	e0bffe17 	ldw	r2,-8(fp)
    e4d8:	10c00a04 	addi	r3,r2,40
    e4dc:	e0bfff17 	ldw	r2,-4(fp)
    e4e0:	10800217 	ldw	r2,8(r2)
    e4e4:	100b883a 	mov	r5,r2
    e4e8:	1809883a 	mov	r4,r3
    e4ec:	000e8c40 	call	e8c4 <altera_avalon_jtag_uart_close>
}
    e4f0:	e037883a 	mov	sp,fp
    e4f4:	dfc00117 	ldw	ra,4(sp)
    e4f8:	df000017 	ldw	fp,0(sp)
    e4fc:	dec00204 	addi	sp,sp,8
    e500:	f800283a 	ret

0000e504 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e504:	defffa04 	addi	sp,sp,-24
    e508:	dfc00515 	stw	ra,20(sp)
    e50c:	df000415 	stw	fp,16(sp)
    e510:	df000404 	addi	fp,sp,16
    e514:	e13ffd15 	stw	r4,-12(fp)
    e518:	e17ffe15 	stw	r5,-8(fp)
    e51c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e520:	e0bffd17 	ldw	r2,-12(fp)
    e524:	10800017 	ldw	r2,0(r2)
    e528:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e52c:	e0bffc17 	ldw	r2,-16(fp)
    e530:	10800a04 	addi	r2,r2,40
    e534:	e1bfff17 	ldw	r6,-4(fp)
    e538:	e17ffe17 	ldw	r5,-8(fp)
    e53c:	1009883a 	mov	r4,r2
    e540:	000e92c0 	call	e92c <altera_avalon_jtag_uart_ioctl>
}
    e544:	e037883a 	mov	sp,fp
    e548:	dfc00117 	ldw	ra,4(sp)
    e54c:	df000017 	ldw	fp,0(sp)
    e550:	dec00204 	addi	sp,sp,8
    e554:	f800283a 	ret

0000e558 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e558:	defffa04 	addi	sp,sp,-24
    e55c:	dfc00515 	stw	ra,20(sp)
    e560:	df000415 	stw	fp,16(sp)
    e564:	df000404 	addi	fp,sp,16
    e568:	e13ffd15 	stw	r4,-12(fp)
    e56c:	e17ffe15 	stw	r5,-8(fp)
    e570:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e574:	e0bffd17 	ldw	r2,-12(fp)
    e578:	00c00044 	movi	r3,1
    e57c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e580:	e0bffd17 	ldw	r2,-12(fp)
    e584:	10800017 	ldw	r2,0(r2)
    e588:	10800104 	addi	r2,r2,4
    e58c:	1007883a 	mov	r3,r2
    e590:	e0bffd17 	ldw	r2,-12(fp)
    e594:	10800817 	ldw	r2,32(r2)
    e598:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    e59c:	e0bffe17 	ldw	r2,-8(fp)
    e5a0:	e0ffff17 	ldw	r3,-4(fp)
    e5a4:	d8000015 	stw	zero,0(sp)
    e5a8:	e1fffd17 	ldw	r7,-12(fp)
    e5ac:	01800074 	movhi	r6,1
    e5b0:	31b98604 	addi	r6,r6,-6632
    e5b4:	180b883a 	mov	r5,r3
    e5b8:	1009883a 	mov	r4,r2
    e5bc:	000d9280 	call	d928 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e5c0:	e0bffd17 	ldw	r2,-12(fp)
    e5c4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e5c8:	e0bffd17 	ldw	r2,-12(fp)
    e5cc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    e5d0:	d0e6db17 	ldw	r3,-25748(gp)
    e5d4:	e1fffd17 	ldw	r7,-12(fp)
    e5d8:	01800074 	movhi	r6,1
    e5dc:	31ba0904 	addi	r6,r6,-6108
    e5e0:	180b883a 	mov	r5,r3
    e5e4:	1009883a 	mov	r4,r2
    e5e8:	000ef500 	call	ef50 <alt_alarm_start>
    e5ec:	1000040e 	bge	r2,zero,e600 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e5f0:	e0fffd17 	ldw	r3,-12(fp)
    e5f4:	00a00034 	movhi	r2,32768
    e5f8:	10bfffc4 	addi	r2,r2,-1
    e5fc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e600:	0001883a 	nop
    e604:	e037883a 	mov	sp,fp
    e608:	dfc00117 	ldw	ra,4(sp)
    e60c:	df000017 	ldw	fp,0(sp)
    e610:	dec00204 	addi	sp,sp,8
    e614:	f800283a 	ret

0000e618 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e618:	defff804 	addi	sp,sp,-32
    e61c:	df000715 	stw	fp,28(sp)
    e620:	df000704 	addi	fp,sp,28
    e624:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e628:	e0bfff17 	ldw	r2,-4(fp)
    e62c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    e630:	e0bffb17 	ldw	r2,-20(fp)
    e634:	10800017 	ldw	r2,0(r2)
    e638:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e63c:	e0bffc17 	ldw	r2,-16(fp)
    e640:	10800104 	addi	r2,r2,4
    e644:	10800037 	ldwio	r2,0(r2)
    e648:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e64c:	e0bffd17 	ldw	r2,-12(fp)
    e650:	1080c00c 	andi	r2,r2,768
    e654:	10006d26 	beq	r2,zero,e80c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e658:	e0bffd17 	ldw	r2,-12(fp)
    e65c:	1080400c 	andi	r2,r2,256
    e660:	10003526 	beq	r2,zero,e738 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e664:	00800074 	movhi	r2,1
    e668:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e66c:	e0bffb17 	ldw	r2,-20(fp)
    e670:	10800a17 	ldw	r2,40(r2)
    e674:	10800044 	addi	r2,r2,1
    e678:	1081ffcc 	andi	r2,r2,2047
    e67c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    e680:	e0bffb17 	ldw	r2,-20(fp)
    e684:	10c00b17 	ldw	r3,44(r2)
    e688:	e0bffe17 	ldw	r2,-8(fp)
    e68c:	18801526 	beq	r3,r2,e6e4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e690:	e0bffc17 	ldw	r2,-16(fp)
    e694:	10800037 	ldwio	r2,0(r2)
    e698:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e69c:	e0bff917 	ldw	r2,-28(fp)
    e6a0:	10a0000c 	andi	r2,r2,32768
    e6a4:	10001126 	beq	r2,zero,e6ec <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e6a8:	e0bffb17 	ldw	r2,-20(fp)
    e6ac:	10800a17 	ldw	r2,40(r2)
    e6b0:	e0fff917 	ldw	r3,-28(fp)
    e6b4:	1809883a 	mov	r4,r3
    e6b8:	e0fffb17 	ldw	r3,-20(fp)
    e6bc:	1885883a 	add	r2,r3,r2
    e6c0:	10800e04 	addi	r2,r2,56
    e6c4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e6c8:	e0bffb17 	ldw	r2,-20(fp)
    e6cc:	10800a17 	ldw	r2,40(r2)
    e6d0:	10800044 	addi	r2,r2,1
    e6d4:	10c1ffcc 	andi	r3,r2,2047
    e6d8:	e0bffb17 	ldw	r2,-20(fp)
    e6dc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e6e0:	003fe206 	br	e66c <__alt_data_end+0xfffef26c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e6e4:	0001883a 	nop
    e6e8:	00000106 	br	e6f0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e6ec:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e6f0:	e0bff917 	ldw	r2,-28(fp)
    e6f4:	10bfffec 	andhi	r2,r2,65535
    e6f8:	10000f26 	beq	r2,zero,e738 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e6fc:	e0bffb17 	ldw	r2,-20(fp)
    e700:	10c00817 	ldw	r3,32(r2)
    e704:	00bfff84 	movi	r2,-2
    e708:	1886703a 	and	r3,r3,r2
    e70c:	e0bffb17 	ldw	r2,-20(fp)
    e710:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e714:	e0bffc17 	ldw	r2,-16(fp)
    e718:	10800104 	addi	r2,r2,4
    e71c:	1007883a 	mov	r3,r2
    e720:	e0bffb17 	ldw	r2,-20(fp)
    e724:	10800817 	ldw	r2,32(r2)
    e728:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e72c:	e0bffc17 	ldw	r2,-16(fp)
    e730:	10800104 	addi	r2,r2,4
    e734:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e738:	e0bffd17 	ldw	r2,-12(fp)
    e73c:	1080800c 	andi	r2,r2,512
    e740:	103fbe26 	beq	r2,zero,e63c <__alt_data_end+0xfffef23c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e744:	e0bffd17 	ldw	r2,-12(fp)
    e748:	1004d43a 	srli	r2,r2,16
    e74c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e750:	00001406 	br	e7a4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e754:	e0bffc17 	ldw	r2,-16(fp)
    e758:	e0fffb17 	ldw	r3,-20(fp)
    e75c:	18c00d17 	ldw	r3,52(r3)
    e760:	e13ffb17 	ldw	r4,-20(fp)
    e764:	20c7883a 	add	r3,r4,r3
    e768:	18c20e04 	addi	r3,r3,2104
    e76c:	18c00003 	ldbu	r3,0(r3)
    e770:	18c03fcc 	andi	r3,r3,255
    e774:	18c0201c 	xori	r3,r3,128
    e778:	18ffe004 	addi	r3,r3,-128
    e77c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e780:	e0bffb17 	ldw	r2,-20(fp)
    e784:	10800d17 	ldw	r2,52(r2)
    e788:	10800044 	addi	r2,r2,1
    e78c:	10c1ffcc 	andi	r3,r2,2047
    e790:	e0bffb17 	ldw	r2,-20(fp)
    e794:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e798:	e0bffa17 	ldw	r2,-24(fp)
    e79c:	10bfffc4 	addi	r2,r2,-1
    e7a0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e7a4:	e0bffa17 	ldw	r2,-24(fp)
    e7a8:	10000526 	beq	r2,zero,e7c0 <altera_avalon_jtag_uart_irq+0x1a8>
    e7ac:	e0bffb17 	ldw	r2,-20(fp)
    e7b0:	10c00d17 	ldw	r3,52(r2)
    e7b4:	e0bffb17 	ldw	r2,-20(fp)
    e7b8:	10800c17 	ldw	r2,48(r2)
    e7bc:	18bfe51e 	bne	r3,r2,e754 <__alt_data_end+0xfffef354>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e7c0:	e0bffa17 	ldw	r2,-24(fp)
    e7c4:	103f9d26 	beq	r2,zero,e63c <__alt_data_end+0xfffef23c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e7c8:	e0bffb17 	ldw	r2,-20(fp)
    e7cc:	10c00817 	ldw	r3,32(r2)
    e7d0:	00bfff44 	movi	r2,-3
    e7d4:	1886703a 	and	r3,r3,r2
    e7d8:	e0bffb17 	ldw	r2,-20(fp)
    e7dc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e7e0:	e0bffb17 	ldw	r2,-20(fp)
    e7e4:	10800017 	ldw	r2,0(r2)
    e7e8:	10800104 	addi	r2,r2,4
    e7ec:	1007883a 	mov	r3,r2
    e7f0:	e0bffb17 	ldw	r2,-20(fp)
    e7f4:	10800817 	ldw	r2,32(r2)
    e7f8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e7fc:	e0bffc17 	ldw	r2,-16(fp)
    e800:	10800104 	addi	r2,r2,4
    e804:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    e808:	003f8c06 	br	e63c <__alt_data_end+0xfffef23c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    e80c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    e810:	0001883a 	nop
    e814:	e037883a 	mov	sp,fp
    e818:	df000017 	ldw	fp,0(sp)
    e81c:	dec00104 	addi	sp,sp,4
    e820:	f800283a 	ret

0000e824 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e824:	defff804 	addi	sp,sp,-32
    e828:	df000715 	stw	fp,28(sp)
    e82c:	df000704 	addi	fp,sp,28
    e830:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e834:	e0bffb17 	ldw	r2,-20(fp)
    e838:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e83c:	e0bff917 	ldw	r2,-28(fp)
    e840:	10800017 	ldw	r2,0(r2)
    e844:	10800104 	addi	r2,r2,4
    e848:	10800037 	ldwio	r2,0(r2)
    e84c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e850:	e0bffa17 	ldw	r2,-24(fp)
    e854:	1081000c 	andi	r2,r2,1024
    e858:	10000b26 	beq	r2,zero,e888 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e85c:	e0bff917 	ldw	r2,-28(fp)
    e860:	10800017 	ldw	r2,0(r2)
    e864:	10800104 	addi	r2,r2,4
    e868:	1007883a 	mov	r3,r2
    e86c:	e0bff917 	ldw	r2,-28(fp)
    e870:	10800817 	ldw	r2,32(r2)
    e874:	10810014 	ori	r2,r2,1024
    e878:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e87c:	e0bff917 	ldw	r2,-28(fp)
    e880:	10000915 	stw	zero,36(r2)
    e884:	00000a06 	br	e8b0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e888:	e0bff917 	ldw	r2,-28(fp)
    e88c:	10c00917 	ldw	r3,36(r2)
    e890:	00a00034 	movhi	r2,32768
    e894:	10bfff04 	addi	r2,r2,-4
    e898:	10c00536 	bltu	r2,r3,e8b0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e89c:	e0bff917 	ldw	r2,-28(fp)
    e8a0:	10800917 	ldw	r2,36(r2)
    e8a4:	10c00044 	addi	r3,r2,1
    e8a8:	e0bff917 	ldw	r2,-28(fp)
    e8ac:	10c00915 	stw	r3,36(r2)
    e8b0:	d0a6db17 	ldw	r2,-25748(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e8b4:	e037883a 	mov	sp,fp
    e8b8:	df000017 	ldw	fp,0(sp)
    e8bc:	dec00104 	addi	sp,sp,4
    e8c0:	f800283a 	ret

0000e8c4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e8c4:	defffd04 	addi	sp,sp,-12
    e8c8:	df000215 	stw	fp,8(sp)
    e8cc:	df000204 	addi	fp,sp,8
    e8d0:	e13ffe15 	stw	r4,-8(fp)
    e8d4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e8d8:	00000506 	br	e8f0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e8dc:	e0bfff17 	ldw	r2,-4(fp)
    e8e0:	1090000c 	andi	r2,r2,16384
    e8e4:	10000226 	beq	r2,zero,e8f0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e8e8:	00bffd44 	movi	r2,-11
    e8ec:	00000b06 	br	e91c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e8f0:	e0bffe17 	ldw	r2,-8(fp)
    e8f4:	10c00d17 	ldw	r3,52(r2)
    e8f8:	e0bffe17 	ldw	r2,-8(fp)
    e8fc:	10800c17 	ldw	r2,48(r2)
    e900:	18800526 	beq	r3,r2,e918 <altera_avalon_jtag_uart_close+0x54>
    e904:	e0bffe17 	ldw	r2,-8(fp)
    e908:	10c00917 	ldw	r3,36(r2)
    e90c:	e0bffe17 	ldw	r2,-8(fp)
    e910:	10800117 	ldw	r2,4(r2)
    e914:	18bff136 	bltu	r3,r2,e8dc <__alt_data_end+0xfffef4dc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e918:	0005883a 	mov	r2,zero
}
    e91c:	e037883a 	mov	sp,fp
    e920:	df000017 	ldw	fp,0(sp)
    e924:	dec00104 	addi	sp,sp,4
    e928:	f800283a 	ret

0000e92c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e92c:	defffa04 	addi	sp,sp,-24
    e930:	df000515 	stw	fp,20(sp)
    e934:	df000504 	addi	fp,sp,20
    e938:	e13ffd15 	stw	r4,-12(fp)
    e93c:	e17ffe15 	stw	r5,-8(fp)
    e940:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    e944:	00bff9c4 	movi	r2,-25
    e948:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    e94c:	e0bffe17 	ldw	r2,-8(fp)
    e950:	10da8060 	cmpeqi	r3,r2,27137
    e954:	1800031e 	bne	r3,zero,e964 <altera_avalon_jtag_uart_ioctl+0x38>
    e958:	109a80a0 	cmpeqi	r2,r2,27138
    e95c:	1000181e 	bne	r2,zero,e9c0 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    e960:	00002906 	br	ea08 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e964:	e0bffd17 	ldw	r2,-12(fp)
    e968:	10c00117 	ldw	r3,4(r2)
    e96c:	00a00034 	movhi	r2,32768
    e970:	10bfffc4 	addi	r2,r2,-1
    e974:	18802126 	beq	r3,r2,e9fc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    e978:	e0bfff17 	ldw	r2,-4(fp)
    e97c:	10800017 	ldw	r2,0(r2)
    e980:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e984:	e0bffc17 	ldw	r2,-16(fp)
    e988:	10800090 	cmplti	r2,r2,2
    e98c:	1000061e 	bne	r2,zero,e9a8 <altera_avalon_jtag_uart_ioctl+0x7c>
    e990:	e0fffc17 	ldw	r3,-16(fp)
    e994:	00a00034 	movhi	r2,32768
    e998:	10bfffc4 	addi	r2,r2,-1
    e99c:	18800226 	beq	r3,r2,e9a8 <altera_avalon_jtag_uart_ioctl+0x7c>
    e9a0:	e0bffc17 	ldw	r2,-16(fp)
    e9a4:	00000206 	br	e9b0 <altera_avalon_jtag_uart_ioctl+0x84>
    e9a8:	00a00034 	movhi	r2,32768
    e9ac:	10bfff84 	addi	r2,r2,-2
    e9b0:	e0fffd17 	ldw	r3,-12(fp)
    e9b4:	18800115 	stw	r2,4(r3)
      rc = 0;
    e9b8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e9bc:	00000f06 	br	e9fc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e9c0:	e0bffd17 	ldw	r2,-12(fp)
    e9c4:	10c00117 	ldw	r3,4(r2)
    e9c8:	00a00034 	movhi	r2,32768
    e9cc:	10bfffc4 	addi	r2,r2,-1
    e9d0:	18800c26 	beq	r3,r2,ea04 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e9d4:	e0bffd17 	ldw	r2,-12(fp)
    e9d8:	10c00917 	ldw	r3,36(r2)
    e9dc:	e0bffd17 	ldw	r2,-12(fp)
    e9e0:	10800117 	ldw	r2,4(r2)
    e9e4:	1885803a 	cmpltu	r2,r3,r2
    e9e8:	10c03fcc 	andi	r3,r2,255
    e9ec:	e0bfff17 	ldw	r2,-4(fp)
    e9f0:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e9f4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e9f8:	00000206 	br	ea04 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    e9fc:	0001883a 	nop
    ea00:	00000106 	br	ea08 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    ea04:	0001883a 	nop

  default:
    break;
  }

  return rc;
    ea08:	e0bffb17 	ldw	r2,-20(fp)
}
    ea0c:	e037883a 	mov	sp,fp
    ea10:	df000017 	ldw	fp,0(sp)
    ea14:	dec00104 	addi	sp,sp,4
    ea18:	f800283a 	ret

0000ea1c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    ea1c:	defff304 	addi	sp,sp,-52
    ea20:	dfc00c15 	stw	ra,48(sp)
    ea24:	df000b15 	stw	fp,44(sp)
    ea28:	df000b04 	addi	fp,sp,44
    ea2c:	e13ffc15 	stw	r4,-16(fp)
    ea30:	e17ffd15 	stw	r5,-12(fp)
    ea34:	e1bffe15 	stw	r6,-8(fp)
    ea38:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    ea3c:	e0bffd17 	ldw	r2,-12(fp)
    ea40:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    ea44:	00004706 	br	eb64 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    ea48:	e0bffc17 	ldw	r2,-16(fp)
    ea4c:	10800a17 	ldw	r2,40(r2)
    ea50:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    ea54:	e0bffc17 	ldw	r2,-16(fp)
    ea58:	10800b17 	ldw	r2,44(r2)
    ea5c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    ea60:	e0fff717 	ldw	r3,-36(fp)
    ea64:	e0bff817 	ldw	r2,-32(fp)
    ea68:	18800536 	bltu	r3,r2,ea80 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    ea6c:	e0fff717 	ldw	r3,-36(fp)
    ea70:	e0bff817 	ldw	r2,-32(fp)
    ea74:	1885c83a 	sub	r2,r3,r2
    ea78:	e0bff615 	stw	r2,-40(fp)
    ea7c:	00000406 	br	ea90 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    ea80:	00c20004 	movi	r3,2048
    ea84:	e0bff817 	ldw	r2,-32(fp)
    ea88:	1885c83a 	sub	r2,r3,r2
    ea8c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ea90:	e0bff617 	ldw	r2,-40(fp)
    ea94:	10001e26 	beq	r2,zero,eb10 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    ea98:	e0fffe17 	ldw	r3,-8(fp)
    ea9c:	e0bff617 	ldw	r2,-40(fp)
    eaa0:	1880022e 	bgeu	r3,r2,eaac <altera_avalon_jtag_uart_read+0x90>
        n = space;
    eaa4:	e0bffe17 	ldw	r2,-8(fp)
    eaa8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    eaac:	e0bffc17 	ldw	r2,-16(fp)
    eab0:	10c00e04 	addi	r3,r2,56
    eab4:	e0bff817 	ldw	r2,-32(fp)
    eab8:	1885883a 	add	r2,r3,r2
    eabc:	e1bff617 	ldw	r6,-40(fp)
    eac0:	100b883a 	mov	r5,r2
    eac4:	e13ff517 	ldw	r4,-44(fp)
    eac8:	0005e480 	call	5e48 <memcpy>
      ptr   += n;
    eacc:	e0fff517 	ldw	r3,-44(fp)
    ead0:	e0bff617 	ldw	r2,-40(fp)
    ead4:	1885883a 	add	r2,r3,r2
    ead8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    eadc:	e0fffe17 	ldw	r3,-8(fp)
    eae0:	e0bff617 	ldw	r2,-40(fp)
    eae4:	1885c83a 	sub	r2,r3,r2
    eae8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    eaec:	e0fff817 	ldw	r3,-32(fp)
    eaf0:	e0bff617 	ldw	r2,-40(fp)
    eaf4:	1885883a 	add	r2,r3,r2
    eaf8:	10c1ffcc 	andi	r3,r2,2047
    eafc:	e0bffc17 	ldw	r2,-16(fp)
    eb00:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    eb04:	e0bffe17 	ldw	r2,-8(fp)
    eb08:	00bfcf16 	blt	zero,r2,ea48 <__alt_data_end+0xfffef648>
    eb0c:	00000106 	br	eb14 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    eb10:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    eb14:	e0fff517 	ldw	r3,-44(fp)
    eb18:	e0bffd17 	ldw	r2,-12(fp)
    eb1c:	1880141e 	bne	r3,r2,eb70 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    eb20:	e0bfff17 	ldw	r2,-4(fp)
    eb24:	1090000c 	andi	r2,r2,16384
    eb28:	1000131e 	bne	r2,zero,eb78 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    eb2c:	0001883a 	nop
    eb30:	e0bffc17 	ldw	r2,-16(fp)
    eb34:	10c00a17 	ldw	r3,40(r2)
    eb38:	e0bff717 	ldw	r2,-36(fp)
    eb3c:	1880051e 	bne	r3,r2,eb54 <altera_avalon_jtag_uart_read+0x138>
    eb40:	e0bffc17 	ldw	r2,-16(fp)
    eb44:	10c00917 	ldw	r3,36(r2)
    eb48:	e0bffc17 	ldw	r2,-16(fp)
    eb4c:	10800117 	ldw	r2,4(r2)
    eb50:	18bff736 	bltu	r3,r2,eb30 <__alt_data_end+0xfffef730>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    eb54:	e0bffc17 	ldw	r2,-16(fp)
    eb58:	10c00a17 	ldw	r3,40(r2)
    eb5c:	e0bff717 	ldw	r2,-36(fp)
    eb60:	18800726 	beq	r3,r2,eb80 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    eb64:	e0bffe17 	ldw	r2,-8(fp)
    eb68:	00bfb716 	blt	zero,r2,ea48 <__alt_data_end+0xfffef648>
    eb6c:	00000506 	br	eb84 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    eb70:	0001883a 	nop
    eb74:	00000306 	br	eb84 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    eb78:	0001883a 	nop
    eb7c:	00000106 	br	eb84 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    eb80:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    eb84:	e0fff517 	ldw	r3,-44(fp)
    eb88:	e0bffd17 	ldw	r2,-12(fp)
    eb8c:	18801826 	beq	r3,r2,ebf0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eb90:	0005303a 	rdctl	r2,status
    eb94:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb98:	e0fffb17 	ldw	r3,-20(fp)
    eb9c:	00bfff84 	movi	r2,-2
    eba0:	1884703a 	and	r2,r3,r2
    eba4:	1001703a 	wrctl	status,r2
  
  return context;
    eba8:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    ebac:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ebb0:	e0bffc17 	ldw	r2,-16(fp)
    ebb4:	10800817 	ldw	r2,32(r2)
    ebb8:	10c00054 	ori	r3,r2,1
    ebbc:	e0bffc17 	ldw	r2,-16(fp)
    ebc0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ebc4:	e0bffc17 	ldw	r2,-16(fp)
    ebc8:	10800017 	ldw	r2,0(r2)
    ebcc:	10800104 	addi	r2,r2,4
    ebd0:	1007883a 	mov	r3,r2
    ebd4:	e0bffc17 	ldw	r2,-16(fp)
    ebd8:	10800817 	ldw	r2,32(r2)
    ebdc:	18800035 	stwio	r2,0(r3)
    ebe0:	e0bffa17 	ldw	r2,-24(fp)
    ebe4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ebe8:	e0bff917 	ldw	r2,-28(fp)
    ebec:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    ebf0:	e0fff517 	ldw	r3,-44(fp)
    ebf4:	e0bffd17 	ldw	r2,-12(fp)
    ebf8:	18800426 	beq	r3,r2,ec0c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    ebfc:	e0fff517 	ldw	r3,-44(fp)
    ec00:	e0bffd17 	ldw	r2,-12(fp)
    ec04:	1885c83a 	sub	r2,r3,r2
    ec08:	00000606 	br	ec24 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    ec0c:	e0bfff17 	ldw	r2,-4(fp)
    ec10:	1090000c 	andi	r2,r2,16384
    ec14:	10000226 	beq	r2,zero,ec20 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    ec18:	00bffd44 	movi	r2,-11
    ec1c:	00000106 	br	ec24 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    ec20:	00bffec4 	movi	r2,-5
}
    ec24:	e037883a 	mov	sp,fp
    ec28:	dfc00117 	ldw	ra,4(sp)
    ec2c:	df000017 	ldw	fp,0(sp)
    ec30:	dec00204 	addi	sp,sp,8
    ec34:	f800283a 	ret

0000ec38 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    ec38:	defff304 	addi	sp,sp,-52
    ec3c:	dfc00c15 	stw	ra,48(sp)
    ec40:	df000b15 	stw	fp,44(sp)
    ec44:	df000b04 	addi	fp,sp,44
    ec48:	e13ffc15 	stw	r4,-16(fp)
    ec4c:	e17ffd15 	stw	r5,-12(fp)
    ec50:	e1bffe15 	stw	r6,-8(fp)
    ec54:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    ec58:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    ec5c:	e0bffd17 	ldw	r2,-12(fp)
    ec60:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ec64:	00003706 	br	ed44 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    ec68:	e0bffc17 	ldw	r2,-16(fp)
    ec6c:	10800c17 	ldw	r2,48(r2)
    ec70:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    ec74:	e0bffc17 	ldw	r2,-16(fp)
    ec78:	10800d17 	ldw	r2,52(r2)
    ec7c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    ec80:	e0fff917 	ldw	r3,-28(fp)
    ec84:	e0bff517 	ldw	r2,-44(fp)
    ec88:	1880062e 	bgeu	r3,r2,eca4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    ec8c:	e0fff517 	ldw	r3,-44(fp)
    ec90:	e0bff917 	ldw	r2,-28(fp)
    ec94:	1885c83a 	sub	r2,r3,r2
    ec98:	10bfffc4 	addi	r2,r2,-1
    ec9c:	e0bff615 	stw	r2,-40(fp)
    eca0:	00000b06 	br	ecd0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    eca4:	e0bff517 	ldw	r2,-44(fp)
    eca8:	10000526 	beq	r2,zero,ecc0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    ecac:	00c20004 	movi	r3,2048
    ecb0:	e0bff917 	ldw	r2,-28(fp)
    ecb4:	1885c83a 	sub	r2,r3,r2
    ecb8:	e0bff615 	stw	r2,-40(fp)
    ecbc:	00000406 	br	ecd0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    ecc0:	00c1ffc4 	movi	r3,2047
    ecc4:	e0bff917 	ldw	r2,-28(fp)
    ecc8:	1885c83a 	sub	r2,r3,r2
    eccc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ecd0:	e0bff617 	ldw	r2,-40(fp)
    ecd4:	10001e26 	beq	r2,zero,ed50 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    ecd8:	e0fffe17 	ldw	r3,-8(fp)
    ecdc:	e0bff617 	ldw	r2,-40(fp)
    ece0:	1880022e 	bgeu	r3,r2,ecec <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    ece4:	e0bffe17 	ldw	r2,-8(fp)
    ece8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    ecec:	e0bffc17 	ldw	r2,-16(fp)
    ecf0:	10c20e04 	addi	r3,r2,2104
    ecf4:	e0bff917 	ldw	r2,-28(fp)
    ecf8:	1885883a 	add	r2,r3,r2
    ecfc:	e1bff617 	ldw	r6,-40(fp)
    ed00:	e17ffd17 	ldw	r5,-12(fp)
    ed04:	1009883a 	mov	r4,r2
    ed08:	0005e480 	call	5e48 <memcpy>
      ptr   += n;
    ed0c:	e0fffd17 	ldw	r3,-12(fp)
    ed10:	e0bff617 	ldw	r2,-40(fp)
    ed14:	1885883a 	add	r2,r3,r2
    ed18:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    ed1c:	e0fffe17 	ldw	r3,-8(fp)
    ed20:	e0bff617 	ldw	r2,-40(fp)
    ed24:	1885c83a 	sub	r2,r3,r2
    ed28:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ed2c:	e0fff917 	ldw	r3,-28(fp)
    ed30:	e0bff617 	ldw	r2,-40(fp)
    ed34:	1885883a 	add	r2,r3,r2
    ed38:	10c1ffcc 	andi	r3,r2,2047
    ed3c:	e0bffc17 	ldw	r2,-16(fp)
    ed40:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ed44:	e0bffe17 	ldw	r2,-8(fp)
    ed48:	00bfc716 	blt	zero,r2,ec68 <__alt_data_end+0xfffef868>
    ed4c:	00000106 	br	ed54 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    ed50:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ed54:	0005303a 	rdctl	r2,status
    ed58:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ed5c:	e0fffb17 	ldw	r3,-20(fp)
    ed60:	00bfff84 	movi	r2,-2
    ed64:	1884703a 	and	r2,r3,r2
    ed68:	1001703a 	wrctl	status,r2
  
  return context;
    ed6c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    ed70:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ed74:	e0bffc17 	ldw	r2,-16(fp)
    ed78:	10800817 	ldw	r2,32(r2)
    ed7c:	10c00094 	ori	r3,r2,2
    ed80:	e0bffc17 	ldw	r2,-16(fp)
    ed84:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ed88:	e0bffc17 	ldw	r2,-16(fp)
    ed8c:	10800017 	ldw	r2,0(r2)
    ed90:	10800104 	addi	r2,r2,4
    ed94:	1007883a 	mov	r3,r2
    ed98:	e0bffc17 	ldw	r2,-16(fp)
    ed9c:	10800817 	ldw	r2,32(r2)
    eda0:	18800035 	stwio	r2,0(r3)
    eda4:	e0bffa17 	ldw	r2,-24(fp)
    eda8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    edac:	e0bff817 	ldw	r2,-32(fp)
    edb0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    edb4:	e0bffe17 	ldw	r2,-8(fp)
    edb8:	0080100e 	bge	zero,r2,edfc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    edbc:	e0bfff17 	ldw	r2,-4(fp)
    edc0:	1090000c 	andi	r2,r2,16384
    edc4:	1000101e 	bne	r2,zero,ee08 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    edc8:	0001883a 	nop
    edcc:	e0bffc17 	ldw	r2,-16(fp)
    edd0:	10c00d17 	ldw	r3,52(r2)
    edd4:	e0bff517 	ldw	r2,-44(fp)
    edd8:	1880051e 	bne	r3,r2,edf0 <altera_avalon_jtag_uart_write+0x1b8>
    eddc:	e0bffc17 	ldw	r2,-16(fp)
    ede0:	10c00917 	ldw	r3,36(r2)
    ede4:	e0bffc17 	ldw	r2,-16(fp)
    ede8:	10800117 	ldw	r2,4(r2)
    edec:	18bff736 	bltu	r3,r2,edcc <__alt_data_end+0xfffef9cc>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    edf0:	e0bffc17 	ldw	r2,-16(fp)
    edf4:	10800917 	ldw	r2,36(r2)
    edf8:	1000051e 	bne	r2,zero,ee10 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    edfc:	e0bffe17 	ldw	r2,-8(fp)
    ee00:	00bfd016 	blt	zero,r2,ed44 <__alt_data_end+0xfffef944>
    ee04:	00000306 	br	ee14 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    ee08:	0001883a 	nop
    ee0c:	00000106 	br	ee14 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    ee10:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    ee14:	e0fffd17 	ldw	r3,-12(fp)
    ee18:	e0bff717 	ldw	r2,-36(fp)
    ee1c:	18800426 	beq	r3,r2,ee30 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    ee20:	e0fffd17 	ldw	r3,-12(fp)
    ee24:	e0bff717 	ldw	r2,-36(fp)
    ee28:	1885c83a 	sub	r2,r3,r2
    ee2c:	00000606 	br	ee48 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    ee30:	e0bfff17 	ldw	r2,-4(fp)
    ee34:	1090000c 	andi	r2,r2,16384
    ee38:	10000226 	beq	r2,zero,ee44 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    ee3c:	00bffd44 	movi	r2,-11
    ee40:	00000106 	br	ee48 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    ee44:	00bffec4 	movi	r2,-5
}
    ee48:	e037883a 	mov	sp,fp
    ee4c:	dfc00117 	ldw	ra,4(sp)
    ee50:	df000017 	ldw	fp,0(sp)
    ee54:	dec00204 	addi	sp,sp,8
    ee58:	f800283a 	ret

0000ee5c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    ee5c:	defffa04 	addi	sp,sp,-24
    ee60:	dfc00515 	stw	ra,20(sp)
    ee64:	df000415 	stw	fp,16(sp)
    ee68:	df000404 	addi	fp,sp,16
    ee6c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    ee70:	0007883a 	mov	r3,zero
    ee74:	e0bfff17 	ldw	r2,-4(fp)
    ee78:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    ee7c:	e0bfff17 	ldw	r2,-4(fp)
    ee80:	10800104 	addi	r2,r2,4
    ee84:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ee88:	0005303a 	rdctl	r2,status
    ee8c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ee90:	e0fffd17 	ldw	r3,-12(fp)
    ee94:	00bfff84 	movi	r2,-2
    ee98:	1884703a 	and	r2,r3,r2
    ee9c:	1001703a 	wrctl	status,r2
  
  return context;
    eea0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    eea4:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
    eea8:	000f6dc0 	call	f6dc <alt_tick>
    eeac:	e0bffc17 	ldw	r2,-16(fp)
    eeb0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    eeb4:	e0bffe17 	ldw	r2,-8(fp)
    eeb8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    eebc:	0001883a 	nop
    eec0:	e037883a 	mov	sp,fp
    eec4:	dfc00117 	ldw	ra,4(sp)
    eec8:	df000017 	ldw	fp,0(sp)
    eecc:	dec00204 	addi	sp,sp,8
    eed0:	f800283a 	ret

0000eed4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    eed4:	defff804 	addi	sp,sp,-32
    eed8:	dfc00715 	stw	ra,28(sp)
    eedc:	df000615 	stw	fp,24(sp)
    eee0:	df000604 	addi	fp,sp,24
    eee4:	e13ffc15 	stw	r4,-16(fp)
    eee8:	e17ffd15 	stw	r5,-12(fp)
    eeec:	e1bffe15 	stw	r6,-8(fp)
    eef0:	e1ffff15 	stw	r7,-4(fp)
    eef4:	e0bfff17 	ldw	r2,-4(fp)
    eef8:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    eefc:	d0a6db17 	ldw	r2,-25748(gp)
    ef00:	1000021e 	bne	r2,zero,ef0c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    ef04:	e0bffb17 	ldw	r2,-20(fp)
    ef08:	d0a6db15 	stw	r2,-25748(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    ef0c:	e0bffc17 	ldw	r2,-16(fp)
    ef10:	10800104 	addi	r2,r2,4
    ef14:	00c001c4 	movi	r3,7
    ef18:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
    ef1c:	d8000015 	stw	zero,0(sp)
    ef20:	e1fffc17 	ldw	r7,-16(fp)
    ef24:	01800074 	movhi	r6,1
    ef28:	31bb9704 	addi	r6,r6,-4516
    ef2c:	e17ffe17 	ldw	r5,-8(fp)
    ef30:	e13ffd17 	ldw	r4,-12(fp)
    ef34:	000d9280 	call	d928 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
    ef38:	0001883a 	nop
    ef3c:	e037883a 	mov	sp,fp
    ef40:	dfc00117 	ldw	ra,4(sp)
    ef44:	df000017 	ldw	fp,0(sp)
    ef48:	dec00204 	addi	sp,sp,8
    ef4c:	f800283a 	ret

0000ef50 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    ef50:	defff504 	addi	sp,sp,-44
    ef54:	df000a15 	stw	fp,40(sp)
    ef58:	df000a04 	addi	fp,sp,40
    ef5c:	e13ffc15 	stw	r4,-16(fp)
    ef60:	e17ffd15 	stw	r5,-12(fp)
    ef64:	e1bffe15 	stw	r6,-8(fp)
    ef68:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    ef6c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    ef70:	d0a6db17 	ldw	r2,-25748(gp)
  
  if (alt_ticks_per_second ())
    ef74:	10003c26 	beq	r2,zero,f068 <alt_alarm_start+0x118>
  {
    if (alarm)
    ef78:	e0bffc17 	ldw	r2,-16(fp)
    ef7c:	10003826 	beq	r2,zero,f060 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    ef80:	e0bffc17 	ldw	r2,-16(fp)
    ef84:	e0fffe17 	ldw	r3,-8(fp)
    ef88:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    ef8c:	e0bffc17 	ldw	r2,-16(fp)
    ef90:	e0ffff17 	ldw	r3,-4(fp)
    ef94:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ef98:	0005303a 	rdctl	r2,status
    ef9c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    efa0:	e0fff917 	ldw	r3,-28(fp)
    efa4:	00bfff84 	movi	r2,-2
    efa8:	1884703a 	and	r2,r3,r2
    efac:	1001703a 	wrctl	status,r2
  
  return context;
    efb0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    efb4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    efb8:	d0a6dc17 	ldw	r2,-25744(gp)
      
      current_nticks = alt_nticks();
    efbc:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    efc0:	e0fffd17 	ldw	r3,-12(fp)
    efc4:	e0bff617 	ldw	r2,-40(fp)
    efc8:	1885883a 	add	r2,r3,r2
    efcc:	10c00044 	addi	r3,r2,1
    efd0:	e0bffc17 	ldw	r2,-16(fp)
    efd4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    efd8:	e0bffc17 	ldw	r2,-16(fp)
    efdc:	10c00217 	ldw	r3,8(r2)
    efe0:	e0bff617 	ldw	r2,-40(fp)
    efe4:	1880042e 	bgeu	r3,r2,eff8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    efe8:	e0bffc17 	ldw	r2,-16(fp)
    efec:	00c00044 	movi	r3,1
    eff0:	10c00405 	stb	r3,16(r2)
    eff4:	00000206 	br	f000 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    eff8:	e0bffc17 	ldw	r2,-16(fp)
    effc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    f000:	e0bffc17 	ldw	r2,-16(fp)
    f004:	d0e00e04 	addi	r3,gp,-32712
    f008:	e0fffa15 	stw	r3,-24(fp)
    f00c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f010:	e0bffb17 	ldw	r2,-20(fp)
    f014:	e0fffa17 	ldw	r3,-24(fp)
    f018:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f01c:	e0bffa17 	ldw	r2,-24(fp)
    f020:	10c00017 	ldw	r3,0(r2)
    f024:	e0bffb17 	ldw	r2,-20(fp)
    f028:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f02c:	e0bffa17 	ldw	r2,-24(fp)
    f030:	10800017 	ldw	r2,0(r2)
    f034:	e0fffb17 	ldw	r3,-20(fp)
    f038:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f03c:	e0bffa17 	ldw	r2,-24(fp)
    f040:	e0fffb17 	ldw	r3,-20(fp)
    f044:	10c00015 	stw	r3,0(r2)
    f048:	e0bff817 	ldw	r2,-32(fp)
    f04c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f050:	e0bff717 	ldw	r2,-36(fp)
    f054:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    f058:	0005883a 	mov	r2,zero
    f05c:	00000306 	br	f06c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    f060:	00bffa84 	movi	r2,-22
    f064:	00000106 	br	f06c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    f068:	00bfde84 	movi	r2,-134
  }
}
    f06c:	e037883a 	mov	sp,fp
    f070:	df000017 	ldw	fp,0(sp)
    f074:	dec00104 	addi	sp,sp,4
    f078:	f800283a 	ret

0000f07c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    f07c:	deffff04 	addi	sp,sp,-4
    f080:	df000015 	stw	fp,0(sp)
    f084:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    f088:	0001883a 	nop
    f08c:	e037883a 	mov	sp,fp
    f090:	df000017 	ldw	fp,0(sp)
    f094:	dec00104 	addi	sp,sp,4
    f098:	f800283a 	ret

0000f09c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f09c:	defffe04 	addi	sp,sp,-8
    f0a0:	dfc00115 	stw	ra,4(sp)
    f0a4:	df000015 	stw	fp,0(sp)
    f0a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f0ac:	d0a00b17 	ldw	r2,-32724(gp)
    f0b0:	10000326 	beq	r2,zero,f0c0 <alt_get_errno+0x24>
    f0b4:	d0a00b17 	ldw	r2,-32724(gp)
    f0b8:	103ee83a 	callr	r2
    f0bc:	00000106 	br	f0c4 <alt_get_errno+0x28>
    f0c0:	d0a6d604 	addi	r2,gp,-25768
}
    f0c4:	e037883a 	mov	sp,fp
    f0c8:	dfc00117 	ldw	ra,4(sp)
    f0cc:	df000017 	ldw	fp,0(sp)
    f0d0:	dec00204 	addi	sp,sp,8
    f0d4:	f800283a 	ret

0000f0d8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    f0d8:	defffa04 	addi	sp,sp,-24
    f0dc:	dfc00515 	stw	ra,20(sp)
    f0e0:	df000415 	stw	fp,16(sp)
    f0e4:	df000404 	addi	fp,sp,16
    f0e8:	e13ffe15 	stw	r4,-8(fp)
    f0ec:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    f0f0:	e0bffe17 	ldw	r2,-8(fp)
    f0f4:	10000326 	beq	r2,zero,f104 <alt_dev_llist_insert+0x2c>
    f0f8:	e0bffe17 	ldw	r2,-8(fp)
    f0fc:	10800217 	ldw	r2,8(r2)
    f100:	1000061e 	bne	r2,zero,f11c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    f104:	000f09c0 	call	f09c <alt_get_errno>
    f108:	1007883a 	mov	r3,r2
    f10c:	00800584 	movi	r2,22
    f110:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    f114:	00bffa84 	movi	r2,-22
    f118:	00001306 	br	f168 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    f11c:	e0bffe17 	ldw	r2,-8(fp)
    f120:	e0ffff17 	ldw	r3,-4(fp)
    f124:	e0fffc15 	stw	r3,-16(fp)
    f128:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f12c:	e0bffd17 	ldw	r2,-12(fp)
    f130:	e0fffc17 	ldw	r3,-16(fp)
    f134:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f138:	e0bffc17 	ldw	r2,-16(fp)
    f13c:	10c00017 	ldw	r3,0(r2)
    f140:	e0bffd17 	ldw	r2,-12(fp)
    f144:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f148:	e0bffc17 	ldw	r2,-16(fp)
    f14c:	10800017 	ldw	r2,0(r2)
    f150:	e0fffd17 	ldw	r3,-12(fp)
    f154:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f158:	e0bffc17 	ldw	r2,-16(fp)
    f15c:	e0fffd17 	ldw	r3,-12(fp)
    f160:	10c00015 	stw	r3,0(r2)

  return 0;  
    f164:	0005883a 	mov	r2,zero
}
    f168:	e037883a 	mov	sp,fp
    f16c:	dfc00117 	ldw	ra,4(sp)
    f170:	df000017 	ldw	fp,0(sp)
    f174:	dec00204 	addi	sp,sp,8
    f178:	f800283a 	ret

0000f17c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    f17c:	defffd04 	addi	sp,sp,-12
    f180:	dfc00215 	stw	ra,8(sp)
    f184:	df000115 	stw	fp,4(sp)
    f188:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f18c:	00800074 	movhi	r2,1
    f190:	10bf7d04 	addi	r2,r2,-524
    f194:	e0bfff15 	stw	r2,-4(fp)
    f198:	00000606 	br	f1b4 <_do_ctors+0x38>
        (*ctor) (); 
    f19c:	e0bfff17 	ldw	r2,-4(fp)
    f1a0:	10800017 	ldw	r2,0(r2)
    f1a4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f1a8:	e0bfff17 	ldw	r2,-4(fp)
    f1ac:	10bfff04 	addi	r2,r2,-4
    f1b0:	e0bfff15 	stw	r2,-4(fp)
    f1b4:	e0ffff17 	ldw	r3,-4(fp)
    f1b8:	00800074 	movhi	r2,1
    f1bc:	10bf7e04 	addi	r2,r2,-520
    f1c0:	18bff62e 	bgeu	r3,r2,f19c <__alt_data_end+0xfffefd9c>
        (*ctor) (); 
}
    f1c4:	0001883a 	nop
    f1c8:	e037883a 	mov	sp,fp
    f1cc:	dfc00117 	ldw	ra,4(sp)
    f1d0:	df000017 	ldw	fp,0(sp)
    f1d4:	dec00204 	addi	sp,sp,8
    f1d8:	f800283a 	ret

0000f1dc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    f1dc:	defffd04 	addi	sp,sp,-12
    f1e0:	dfc00215 	stw	ra,8(sp)
    f1e4:	df000115 	stw	fp,4(sp)
    f1e8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f1ec:	00800074 	movhi	r2,1
    f1f0:	10bf7d04 	addi	r2,r2,-524
    f1f4:	e0bfff15 	stw	r2,-4(fp)
    f1f8:	00000606 	br	f214 <_do_dtors+0x38>
        (*dtor) (); 
    f1fc:	e0bfff17 	ldw	r2,-4(fp)
    f200:	10800017 	ldw	r2,0(r2)
    f204:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f208:	e0bfff17 	ldw	r2,-4(fp)
    f20c:	10bfff04 	addi	r2,r2,-4
    f210:	e0bfff15 	stw	r2,-4(fp)
    f214:	e0ffff17 	ldw	r3,-4(fp)
    f218:	00800074 	movhi	r2,1
    f21c:	10bf7e04 	addi	r2,r2,-520
    f220:	18bff62e 	bgeu	r3,r2,f1fc <__alt_data_end+0xfffefdfc>
        (*dtor) (); 
}
    f224:	0001883a 	nop
    f228:	e037883a 	mov	sp,fp
    f22c:	dfc00117 	ldw	ra,4(sp)
    f230:	df000017 	ldw	fp,0(sp)
    f234:	dec00204 	addi	sp,sp,8
    f238:	f800283a 	ret

0000f23c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    f23c:	deffff04 	addi	sp,sp,-4
    f240:	df000015 	stw	fp,0(sp)
    f244:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    f248:	0001883a 	nop
    f24c:	e037883a 	mov	sp,fp
    f250:	df000017 	ldw	fp,0(sp)
    f254:	dec00104 	addi	sp,sp,4
    f258:	f800283a 	ret

0000f25c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    f25c:	defff804 	addi	sp,sp,-32
    f260:	dfc00715 	stw	ra,28(sp)
    f264:	df000615 	stw	fp,24(sp)
    f268:	dc000515 	stw	r16,20(sp)
    f26c:	df000604 	addi	fp,sp,24
    f270:	e13ffb15 	stw	r4,-20(fp)
    f274:	e17ffc15 	stw	r5,-16(fp)
    f278:	e1bffd15 	stw	r6,-12(fp)
    f27c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    f280:	e1bffe17 	ldw	r6,-8(fp)
    f284:	e17ffd17 	ldw	r5,-12(fp)
    f288:	e13ffc17 	ldw	r4,-16(fp)
    f28c:	000f4e40 	call	f4e4 <open>
    f290:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    f294:	e0bffa17 	ldw	r2,-24(fp)
    f298:	10002216 	blt	r2,zero,f324 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    f29c:	04000074 	movhi	r16,1
    f2a0:	84027a04 	addi	r16,r16,2536
    f2a4:	e0bffa17 	ldw	r2,-24(fp)
    f2a8:	01400304 	movi	r5,12
    f2ac:	1009883a 	mov	r4,r2
    f2b0:	000ae280 	call	ae28 <__mulsi3>
    f2b4:	8085883a 	add	r2,r16,r2
    f2b8:	10c00017 	ldw	r3,0(r2)
    f2bc:	e0bffb17 	ldw	r2,-20(fp)
    f2c0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    f2c4:	04000074 	movhi	r16,1
    f2c8:	84027a04 	addi	r16,r16,2536
    f2cc:	e0bffa17 	ldw	r2,-24(fp)
    f2d0:	01400304 	movi	r5,12
    f2d4:	1009883a 	mov	r4,r2
    f2d8:	000ae280 	call	ae28 <__mulsi3>
    f2dc:	8085883a 	add	r2,r16,r2
    f2e0:	10800104 	addi	r2,r2,4
    f2e4:	10c00017 	ldw	r3,0(r2)
    f2e8:	e0bffb17 	ldw	r2,-20(fp)
    f2ec:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f2f0:	04000074 	movhi	r16,1
    f2f4:	84027a04 	addi	r16,r16,2536
    f2f8:	e0bffa17 	ldw	r2,-24(fp)
    f2fc:	01400304 	movi	r5,12
    f300:	1009883a 	mov	r4,r2
    f304:	000ae280 	call	ae28 <__mulsi3>
    f308:	8085883a 	add	r2,r16,r2
    f30c:	10800204 	addi	r2,r2,8
    f310:	10c00017 	ldw	r3,0(r2)
    f314:	e0bffb17 	ldw	r2,-20(fp)
    f318:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    f31c:	e13ffa17 	ldw	r4,-24(fp)
    f320:	000e0b80 	call	e0b8 <alt_release_fd>
  }
} 
    f324:	0001883a 	nop
    f328:	e6ffff04 	addi	sp,fp,-4
    f32c:	dfc00217 	ldw	ra,8(sp)
    f330:	df000117 	ldw	fp,4(sp)
    f334:	dc000017 	ldw	r16,0(sp)
    f338:	dec00304 	addi	sp,sp,12
    f33c:	f800283a 	ret

0000f340 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    f340:	defffb04 	addi	sp,sp,-20
    f344:	dfc00415 	stw	ra,16(sp)
    f348:	df000315 	stw	fp,12(sp)
    f34c:	df000304 	addi	fp,sp,12
    f350:	e13ffd15 	stw	r4,-12(fp)
    f354:	e17ffe15 	stw	r5,-8(fp)
    f358:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    f35c:	01c07fc4 	movi	r7,511
    f360:	01800044 	movi	r6,1
    f364:	e17ffd17 	ldw	r5,-12(fp)
    f368:	01000074 	movhi	r4,1
    f36c:	21027d04 	addi	r4,r4,2548
    f370:	000f25c0 	call	f25c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    f374:	01c07fc4 	movi	r7,511
    f378:	000d883a 	mov	r6,zero
    f37c:	e17ffe17 	ldw	r5,-8(fp)
    f380:	01000074 	movhi	r4,1
    f384:	21027a04 	addi	r4,r4,2536
    f388:	000f25c0 	call	f25c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    f38c:	01c07fc4 	movi	r7,511
    f390:	01800044 	movi	r6,1
    f394:	e17fff17 	ldw	r5,-4(fp)
    f398:	01000074 	movhi	r4,1
    f39c:	21028004 	addi	r4,r4,2560
    f3a0:	000f25c0 	call	f25c <alt_open_fd>
}  
    f3a4:	0001883a 	nop
    f3a8:	e037883a 	mov	sp,fp
    f3ac:	dfc00117 	ldw	ra,4(sp)
    f3b0:	df000017 	ldw	fp,0(sp)
    f3b4:	dec00204 	addi	sp,sp,8
    f3b8:	f800283a 	ret

0000f3bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f3bc:	defffe04 	addi	sp,sp,-8
    f3c0:	dfc00115 	stw	ra,4(sp)
    f3c4:	df000015 	stw	fp,0(sp)
    f3c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f3cc:	d0a00b17 	ldw	r2,-32724(gp)
    f3d0:	10000326 	beq	r2,zero,f3e0 <alt_get_errno+0x24>
    f3d4:	d0a00b17 	ldw	r2,-32724(gp)
    f3d8:	103ee83a 	callr	r2
    f3dc:	00000106 	br	f3e4 <alt_get_errno+0x28>
    f3e0:	d0a6d604 	addi	r2,gp,-25768
}
    f3e4:	e037883a 	mov	sp,fp
    f3e8:	dfc00117 	ldw	ra,4(sp)
    f3ec:	df000017 	ldw	fp,0(sp)
    f3f0:	dec00204 	addi	sp,sp,8
    f3f4:	f800283a 	ret

0000f3f8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    f3f8:	defffb04 	addi	sp,sp,-20
    f3fc:	dfc00415 	stw	ra,16(sp)
    f400:	df000315 	stw	fp,12(sp)
    f404:	dc000215 	stw	r16,8(sp)
    f408:	df000304 	addi	fp,sp,12
    f40c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    f410:	e0bffe17 	ldw	r2,-8(fp)
    f414:	10800217 	ldw	r2,8(r2)
    f418:	10d00034 	orhi	r3,r2,16384
    f41c:	e0bffe17 	ldw	r2,-8(fp)
    f420:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    f424:	e03ffd15 	stw	zero,-12(fp)
    f428:	00002306 	br	f4b8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    f42c:	04000074 	movhi	r16,1
    f430:	84027a04 	addi	r16,r16,2536
    f434:	e0bffd17 	ldw	r2,-12(fp)
    f438:	01400304 	movi	r5,12
    f43c:	1009883a 	mov	r4,r2
    f440:	000ae280 	call	ae28 <__mulsi3>
    f444:	8085883a 	add	r2,r16,r2
    f448:	10c00017 	ldw	r3,0(r2)
    f44c:	e0bffe17 	ldw	r2,-8(fp)
    f450:	10800017 	ldw	r2,0(r2)
    f454:	1880151e 	bne	r3,r2,f4ac <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f458:	04000074 	movhi	r16,1
    f45c:	84027a04 	addi	r16,r16,2536
    f460:	e0bffd17 	ldw	r2,-12(fp)
    f464:	01400304 	movi	r5,12
    f468:	1009883a 	mov	r4,r2
    f46c:	000ae280 	call	ae28 <__mulsi3>
    f470:	8085883a 	add	r2,r16,r2
    f474:	10800204 	addi	r2,r2,8
    f478:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    f47c:	10000b0e 	bge	r2,zero,f4ac <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    f480:	01400304 	movi	r5,12
    f484:	e13ffd17 	ldw	r4,-12(fp)
    f488:	000ae280 	call	ae28 <__mulsi3>
    f48c:	1007883a 	mov	r3,r2
    f490:	00800074 	movhi	r2,1
    f494:	10827a04 	addi	r2,r2,2536
    f498:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f49c:	e0bffe17 	ldw	r2,-8(fp)
    f4a0:	18800226 	beq	r3,r2,f4ac <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    f4a4:	00bffcc4 	movi	r2,-13
    f4a8:	00000806 	br	f4cc <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    f4ac:	e0bffd17 	ldw	r2,-12(fp)
    f4b0:	10800044 	addi	r2,r2,1
    f4b4:	e0bffd15 	stw	r2,-12(fp)
    f4b8:	d0a00a17 	ldw	r2,-32728(gp)
    f4bc:	1007883a 	mov	r3,r2
    f4c0:	e0bffd17 	ldw	r2,-12(fp)
    f4c4:	18bfd92e 	bgeu	r3,r2,f42c <__alt_data_end+0xffff002c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    f4c8:	0005883a 	mov	r2,zero
}
    f4cc:	e6ffff04 	addi	sp,fp,-4
    f4d0:	dfc00217 	ldw	ra,8(sp)
    f4d4:	df000117 	ldw	fp,4(sp)
    f4d8:	dc000017 	ldw	r16,0(sp)
    f4dc:	dec00304 	addi	sp,sp,12
    f4e0:	f800283a 	ret

0000f4e4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    f4e4:	defff604 	addi	sp,sp,-40
    f4e8:	dfc00915 	stw	ra,36(sp)
    f4ec:	df000815 	stw	fp,32(sp)
    f4f0:	df000804 	addi	fp,sp,32
    f4f4:	e13ffd15 	stw	r4,-12(fp)
    f4f8:	e17ffe15 	stw	r5,-8(fp)
    f4fc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    f500:	00bfffc4 	movi	r2,-1
    f504:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    f508:	00bffb44 	movi	r2,-19
    f50c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    f510:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    f514:	d1600804 	addi	r5,gp,-32736
    f518:	e13ffd17 	ldw	r4,-12(fp)
    f51c:	000f8080 	call	f808 <alt_find_dev>
    f520:	e0bff815 	stw	r2,-32(fp)
    f524:	e0bff817 	ldw	r2,-32(fp)
    f528:	1000051e 	bne	r2,zero,f540 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    f52c:	e13ffd17 	ldw	r4,-12(fp)
    f530:	000f8980 	call	f898 <alt_find_file>
    f534:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    f538:	00800044 	movi	r2,1
    f53c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    f540:	e0bff817 	ldw	r2,-32(fp)
    f544:	10002b26 	beq	r2,zero,f5f4 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
    f548:	e13ff817 	ldw	r4,-32(fp)
    f54c:	000f9a00 	call	f9a0 <alt_get_fd>
    f550:	e0bff915 	stw	r2,-28(fp)
    f554:	e0bff917 	ldw	r2,-28(fp)
    f558:	1000030e 	bge	r2,zero,f568 <open+0x84>
    {
      status = index;
    f55c:	e0bff917 	ldw	r2,-28(fp)
    f560:	e0bffa15 	stw	r2,-24(fp)
    f564:	00002506 	br	f5fc <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
    f568:	01400304 	movi	r5,12
    f56c:	e13ff917 	ldw	r4,-28(fp)
    f570:	000ae280 	call	ae28 <__mulsi3>
    f574:	1007883a 	mov	r3,r2
    f578:	00800074 	movhi	r2,1
    f57c:	10827a04 	addi	r2,r2,2536
    f580:	1885883a 	add	r2,r3,r2
    f584:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f588:	e0fffe17 	ldw	r3,-8(fp)
    f58c:	00900034 	movhi	r2,16384
    f590:	10bfffc4 	addi	r2,r2,-1
    f594:	1886703a 	and	r3,r3,r2
    f598:	e0bffc17 	ldw	r2,-16(fp)
    f59c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    f5a0:	e0bffb17 	ldw	r2,-20(fp)
    f5a4:	1000051e 	bne	r2,zero,f5bc <open+0xd8>
    f5a8:	e13ffc17 	ldw	r4,-16(fp)
    f5ac:	000f3f80 	call	f3f8 <alt_file_locked>
    f5b0:	e0bffa15 	stw	r2,-24(fp)
    f5b4:	e0bffa17 	ldw	r2,-24(fp)
    f5b8:	10001016 	blt	r2,zero,f5fc <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    f5bc:	e0bff817 	ldw	r2,-32(fp)
    f5c0:	10800317 	ldw	r2,12(r2)
    f5c4:	10000826 	beq	r2,zero,f5e8 <open+0x104>
    f5c8:	e0bff817 	ldw	r2,-32(fp)
    f5cc:	10800317 	ldw	r2,12(r2)
    f5d0:	e1ffff17 	ldw	r7,-4(fp)
    f5d4:	e1bffe17 	ldw	r6,-8(fp)
    f5d8:	e17ffd17 	ldw	r5,-12(fp)
    f5dc:	e13ffc17 	ldw	r4,-16(fp)
    f5e0:	103ee83a 	callr	r2
    f5e4:	00000106 	br	f5ec <open+0x108>
    f5e8:	0005883a 	mov	r2,zero
    f5ec:	e0bffa15 	stw	r2,-24(fp)
    f5f0:	00000206 	br	f5fc <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
    f5f4:	00bffb44 	movi	r2,-19
    f5f8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    f5fc:	e0bffa17 	ldw	r2,-24(fp)
    f600:	1000090e 	bge	r2,zero,f628 <open+0x144>
  {
    alt_release_fd (index);  
    f604:	e13ff917 	ldw	r4,-28(fp)
    f608:	000e0b80 	call	e0b8 <alt_release_fd>
    ALT_ERRNO = -status;
    f60c:	000f3bc0 	call	f3bc <alt_get_errno>
    f610:	1007883a 	mov	r3,r2
    f614:	e0bffa17 	ldw	r2,-24(fp)
    f618:	0085c83a 	sub	r2,zero,r2
    f61c:	18800015 	stw	r2,0(r3)
    return -1;
    f620:	00bfffc4 	movi	r2,-1
    f624:	00000106 	br	f62c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
    f628:	e0bff917 	ldw	r2,-28(fp)
}
    f62c:	e037883a 	mov	sp,fp
    f630:	dfc00117 	ldw	ra,4(sp)
    f634:	df000017 	ldw	fp,0(sp)
    f638:	dec00204 	addi	sp,sp,8
    f63c:	f800283a 	ret

0000f640 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    f640:	defffa04 	addi	sp,sp,-24
    f644:	df000515 	stw	fp,20(sp)
    f648:	df000504 	addi	fp,sp,20
    f64c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f650:	0005303a 	rdctl	r2,status
    f654:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f658:	e0fffc17 	ldw	r3,-16(fp)
    f65c:	00bfff84 	movi	r2,-2
    f660:	1884703a 	and	r2,r3,r2
    f664:	1001703a 	wrctl	status,r2
  
  return context;
    f668:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    f66c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    f670:	e0bfff17 	ldw	r2,-4(fp)
    f674:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    f678:	e0bffd17 	ldw	r2,-12(fp)
    f67c:	10800017 	ldw	r2,0(r2)
    f680:	e0fffd17 	ldw	r3,-12(fp)
    f684:	18c00117 	ldw	r3,4(r3)
    f688:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    f68c:	e0bffd17 	ldw	r2,-12(fp)
    f690:	10800117 	ldw	r2,4(r2)
    f694:	e0fffd17 	ldw	r3,-12(fp)
    f698:	18c00017 	ldw	r3,0(r3)
    f69c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    f6a0:	e0bffd17 	ldw	r2,-12(fp)
    f6a4:	e0fffd17 	ldw	r3,-12(fp)
    f6a8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    f6ac:	e0bffd17 	ldw	r2,-12(fp)
    f6b0:	e0fffd17 	ldw	r3,-12(fp)
    f6b4:	10c00015 	stw	r3,0(r2)
    f6b8:	e0bffb17 	ldw	r2,-20(fp)
    f6bc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f6c0:	e0bffe17 	ldw	r2,-8(fp)
    f6c4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    f6c8:	0001883a 	nop
    f6cc:	e037883a 	mov	sp,fp
    f6d0:	df000017 	ldw	fp,0(sp)
    f6d4:	dec00104 	addi	sp,sp,4
    f6d8:	f800283a 	ret

0000f6dc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    f6dc:	defffb04 	addi	sp,sp,-20
    f6e0:	dfc00415 	stw	ra,16(sp)
    f6e4:	df000315 	stw	fp,12(sp)
    f6e8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    f6ec:	d0a00e17 	ldw	r2,-32712(gp)
    f6f0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    f6f4:	d0a6dc17 	ldw	r2,-25744(gp)
    f6f8:	10800044 	addi	r2,r2,1
    f6fc:	d0a6dc15 	stw	r2,-25744(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f700:	00002e06 	br	f7bc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    f704:	e0bffd17 	ldw	r2,-12(fp)
    f708:	10800017 	ldw	r2,0(r2)
    f70c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    f710:	e0bffd17 	ldw	r2,-12(fp)
    f714:	10800403 	ldbu	r2,16(r2)
    f718:	10803fcc 	andi	r2,r2,255
    f71c:	10000426 	beq	r2,zero,f730 <alt_tick+0x54>
    f720:	d0a6dc17 	ldw	r2,-25744(gp)
    f724:	1000021e 	bne	r2,zero,f730 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    f728:	e0bffd17 	ldw	r2,-12(fp)
    f72c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    f730:	e0bffd17 	ldw	r2,-12(fp)
    f734:	10800217 	ldw	r2,8(r2)
    f738:	d0e6dc17 	ldw	r3,-25744(gp)
    f73c:	18801d36 	bltu	r3,r2,f7b4 <alt_tick+0xd8>
    f740:	e0bffd17 	ldw	r2,-12(fp)
    f744:	10800403 	ldbu	r2,16(r2)
    f748:	10803fcc 	andi	r2,r2,255
    f74c:	1000191e 	bne	r2,zero,f7b4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    f750:	e0bffd17 	ldw	r2,-12(fp)
    f754:	10800317 	ldw	r2,12(r2)
    f758:	e0fffd17 	ldw	r3,-12(fp)
    f75c:	18c00517 	ldw	r3,20(r3)
    f760:	1809883a 	mov	r4,r3
    f764:	103ee83a 	callr	r2
    f768:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    f76c:	e0bfff17 	ldw	r2,-4(fp)
    f770:	1000031e 	bne	r2,zero,f780 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    f774:	e13ffd17 	ldw	r4,-12(fp)
    f778:	000f6400 	call	f640 <alt_alarm_stop>
    f77c:	00000d06 	br	f7b4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    f780:	e0bffd17 	ldw	r2,-12(fp)
    f784:	10c00217 	ldw	r3,8(r2)
    f788:	e0bfff17 	ldw	r2,-4(fp)
    f78c:	1887883a 	add	r3,r3,r2
    f790:	e0bffd17 	ldw	r2,-12(fp)
    f794:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    f798:	e0bffd17 	ldw	r2,-12(fp)
    f79c:	10c00217 	ldw	r3,8(r2)
    f7a0:	d0a6dc17 	ldw	r2,-25744(gp)
    f7a4:	1880032e 	bgeu	r3,r2,f7b4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    f7a8:	e0bffd17 	ldw	r2,-12(fp)
    f7ac:	00c00044 	movi	r3,1
    f7b0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    f7b4:	e0bffe17 	ldw	r2,-8(fp)
    f7b8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f7bc:	e0fffd17 	ldw	r3,-12(fp)
    f7c0:	d0a00e04 	addi	r2,gp,-32712
    f7c4:	18bfcf1e 	bne	r3,r2,f704 <__alt_data_end+0xffff0304>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f7c8:	0001883a 	nop
}
    f7cc:	0001883a 	nop
    f7d0:	e037883a 	mov	sp,fp
    f7d4:	dfc00117 	ldw	ra,4(sp)
    f7d8:	df000017 	ldw	fp,0(sp)
    f7dc:	dec00204 	addi	sp,sp,8
    f7e0:	f800283a 	ret

0000f7e4 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
    f7e4:	deffff04 	addi	sp,sp,-4
    f7e8:	df000015 	stw	fp,0(sp)
    f7ec:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    f7f0:	000170fa 	wrctl	ienable,zero
}
    f7f4:	0001883a 	nop
    f7f8:	e037883a 	mov	sp,fp
    f7fc:	df000017 	ldw	fp,0(sp)
    f800:	dec00104 	addi	sp,sp,4
    f804:	f800283a 	ret

0000f808 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f808:	defffa04 	addi	sp,sp,-24
    f80c:	dfc00515 	stw	ra,20(sp)
    f810:	df000415 	stw	fp,16(sp)
    f814:	df000404 	addi	fp,sp,16
    f818:	e13ffe15 	stw	r4,-8(fp)
    f81c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f820:	e0bfff17 	ldw	r2,-4(fp)
    f824:	10800017 	ldw	r2,0(r2)
    f828:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f82c:	e13ffe17 	ldw	r4,-8(fp)
    f830:	00074500 	call	7450 <strlen>
    f834:	10800044 	addi	r2,r2,1
    f838:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f83c:	00000d06 	br	f874 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f840:	e0bffc17 	ldw	r2,-16(fp)
    f844:	10800217 	ldw	r2,8(r2)
    f848:	e0fffd17 	ldw	r3,-12(fp)
    f84c:	180d883a 	mov	r6,r3
    f850:	e17ffe17 	ldw	r5,-8(fp)
    f854:	1009883a 	mov	r4,r2
    f858:	000fab00 	call	fab0 <memcmp>
    f85c:	1000021e 	bne	r2,zero,f868 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f860:	e0bffc17 	ldw	r2,-16(fp)
    f864:	00000706 	br	f884 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f868:	e0bffc17 	ldw	r2,-16(fp)
    f86c:	10800017 	ldw	r2,0(r2)
    f870:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f874:	e0fffc17 	ldw	r3,-16(fp)
    f878:	e0bfff17 	ldw	r2,-4(fp)
    f87c:	18bff01e 	bne	r3,r2,f840 <__alt_data_end+0xffff0440>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    f880:	0005883a 	mov	r2,zero
}
    f884:	e037883a 	mov	sp,fp
    f888:	dfc00117 	ldw	ra,4(sp)
    f88c:	df000017 	ldw	fp,0(sp)
    f890:	dec00204 	addi	sp,sp,8
    f894:	f800283a 	ret

0000f898 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f898:	defffb04 	addi	sp,sp,-20
    f89c:	dfc00415 	stw	ra,16(sp)
    f8a0:	df000315 	stw	fp,12(sp)
    f8a4:	df000304 	addi	fp,sp,12
    f8a8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f8ac:	d0a00617 	ldw	r2,-32744(gp)
    f8b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f8b4:	00003106 	br	f97c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    f8b8:	e0bffd17 	ldw	r2,-12(fp)
    f8bc:	10800217 	ldw	r2,8(r2)
    f8c0:	1009883a 	mov	r4,r2
    f8c4:	00074500 	call	7450 <strlen>
    f8c8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    f8cc:	e0bffd17 	ldw	r2,-12(fp)
    f8d0:	10c00217 	ldw	r3,8(r2)
    f8d4:	e0bffe17 	ldw	r2,-8(fp)
    f8d8:	10bfffc4 	addi	r2,r2,-1
    f8dc:	1885883a 	add	r2,r3,r2
    f8e0:	10800003 	ldbu	r2,0(r2)
    f8e4:	10803fcc 	andi	r2,r2,255
    f8e8:	1080201c 	xori	r2,r2,128
    f8ec:	10bfe004 	addi	r2,r2,-128
    f8f0:	10800bd8 	cmpnei	r2,r2,47
    f8f4:	1000031e 	bne	r2,zero,f904 <alt_find_file+0x6c>
    {
      len -= 1;
    f8f8:	e0bffe17 	ldw	r2,-8(fp)
    f8fc:	10bfffc4 	addi	r2,r2,-1
    f900:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f904:	e0bffe17 	ldw	r2,-8(fp)
    f908:	e0ffff17 	ldw	r3,-4(fp)
    f90c:	1885883a 	add	r2,r3,r2
    f910:	10800003 	ldbu	r2,0(r2)
    f914:	10803fcc 	andi	r2,r2,255
    f918:	1080201c 	xori	r2,r2,128
    f91c:	10bfe004 	addi	r2,r2,-128
    f920:	10800be0 	cmpeqi	r2,r2,47
    f924:	1000081e 	bne	r2,zero,f948 <alt_find_file+0xb0>
    f928:	e0bffe17 	ldw	r2,-8(fp)
    f92c:	e0ffff17 	ldw	r3,-4(fp)
    f930:	1885883a 	add	r2,r3,r2
    f934:	10800003 	ldbu	r2,0(r2)
    f938:	10803fcc 	andi	r2,r2,255
    f93c:	1080201c 	xori	r2,r2,128
    f940:	10bfe004 	addi	r2,r2,-128
    f944:	10000a1e 	bne	r2,zero,f970 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    f948:	e0bffd17 	ldw	r2,-12(fp)
    f94c:	10800217 	ldw	r2,8(r2)
    f950:	e0fffe17 	ldw	r3,-8(fp)
    f954:	180d883a 	mov	r6,r3
    f958:	e17fff17 	ldw	r5,-4(fp)
    f95c:	1009883a 	mov	r4,r2
    f960:	000fab00 	call	fab0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f964:	1000021e 	bne	r2,zero,f970 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    f968:	e0bffd17 	ldw	r2,-12(fp)
    f96c:	00000706 	br	f98c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    f970:	e0bffd17 	ldw	r2,-12(fp)
    f974:	10800017 	ldw	r2,0(r2)
    f978:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f97c:	e0fffd17 	ldw	r3,-12(fp)
    f980:	d0a00604 	addi	r2,gp,-32744
    f984:	18bfcc1e 	bne	r3,r2,f8b8 <__alt_data_end+0xffff04b8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    f988:	0005883a 	mov	r2,zero
}
    f98c:	e037883a 	mov	sp,fp
    f990:	dfc00117 	ldw	ra,4(sp)
    f994:	df000017 	ldw	fp,0(sp)
    f998:	dec00204 	addi	sp,sp,8
    f99c:	f800283a 	ret

0000f9a0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f9a0:	defffa04 	addi	sp,sp,-24
    f9a4:	dfc00515 	stw	ra,20(sp)
    f9a8:	df000415 	stw	fp,16(sp)
    f9ac:	dc000315 	stw	r16,12(sp)
    f9b0:	df000404 	addi	fp,sp,16
    f9b4:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    f9b8:	00bffa04 	movi	r2,-24
    f9bc:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f9c0:	e03ffc15 	stw	zero,-16(fp)
    f9c4:	00001d06 	br	fa3c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
    f9c8:	04000074 	movhi	r16,1
    f9cc:	84027a04 	addi	r16,r16,2536
    f9d0:	e0bffc17 	ldw	r2,-16(fp)
    f9d4:	01400304 	movi	r5,12
    f9d8:	1009883a 	mov	r4,r2
    f9dc:	000ae280 	call	ae28 <__mulsi3>
    f9e0:	8085883a 	add	r2,r16,r2
    f9e4:	10800017 	ldw	r2,0(r2)
    f9e8:	1000111e 	bne	r2,zero,fa30 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
    f9ec:	04000074 	movhi	r16,1
    f9f0:	84027a04 	addi	r16,r16,2536
    f9f4:	e0bffc17 	ldw	r2,-16(fp)
    f9f8:	01400304 	movi	r5,12
    f9fc:	1009883a 	mov	r4,r2
    fa00:	000ae280 	call	ae28 <__mulsi3>
    fa04:	8085883a 	add	r2,r16,r2
    fa08:	e0fffe17 	ldw	r3,-8(fp)
    fa0c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    fa10:	d0e00a17 	ldw	r3,-32728(gp)
    fa14:	e0bffc17 	ldw	r2,-16(fp)
    fa18:	1880020e 	bge	r3,r2,fa24 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    fa1c:	e0bffc17 	ldw	r2,-16(fp)
    fa20:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
    fa24:	e0bffc17 	ldw	r2,-16(fp)
    fa28:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    fa2c:	00000606 	br	fa48 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    fa30:	e0bffc17 	ldw	r2,-16(fp)
    fa34:	10800044 	addi	r2,r2,1
    fa38:	e0bffc15 	stw	r2,-16(fp)
    fa3c:	e0bffc17 	ldw	r2,-16(fp)
    fa40:	10800810 	cmplti	r2,r2,32
    fa44:	103fe01e 	bne	r2,zero,f9c8 <__alt_data_end+0xffff05c8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    fa48:	e0bffd17 	ldw	r2,-12(fp)
}
    fa4c:	e6ffff04 	addi	sp,fp,-4
    fa50:	dfc00217 	ldw	ra,8(sp)
    fa54:	df000117 	ldw	fp,4(sp)
    fa58:	dc000017 	ldw	r16,0(sp)
    fa5c:	dec00304 	addi	sp,sp,12
    fa60:	f800283a 	ret

0000fa64 <atexit>:
    fa64:	200b883a 	mov	r5,r4
    fa68:	000f883a 	mov	r7,zero
    fa6c:	000d883a 	mov	r6,zero
    fa70:	0009883a 	mov	r4,zero
    fa74:	000fb2c1 	jmpi	fb2c <__register_exitproc>

0000fa78 <exit>:
    fa78:	defffe04 	addi	sp,sp,-8
    fa7c:	000b883a 	mov	r5,zero
    fa80:	dc000015 	stw	r16,0(sp)
    fa84:	dfc00115 	stw	ra,4(sp)
    fa88:	2021883a 	mov	r16,r4
    fa8c:	000fc440 	call	fc44 <__call_exitprocs>
    fa90:	00800074 	movhi	r2,1
    fa94:	1086f204 	addi	r2,r2,7112
    fa98:	11000017 	ldw	r4,0(r2)
    fa9c:	20800f17 	ldw	r2,60(r4)
    faa0:	10000126 	beq	r2,zero,faa8 <exit+0x30>
    faa4:	103ee83a 	callr	r2
    faa8:	8009883a 	mov	r4,r16
    faac:	000fdc40 	call	fdc4 <_exit>

0000fab0 <memcmp>:
    fab0:	01c000c4 	movi	r7,3
    fab4:	3980192e 	bgeu	r7,r6,fb1c <memcmp+0x6c>
    fab8:	2144b03a 	or	r2,r4,r5
    fabc:	11c4703a 	and	r2,r2,r7
    fac0:	10000f26 	beq	r2,zero,fb00 <memcmp+0x50>
    fac4:	20800003 	ldbu	r2,0(r4)
    fac8:	28c00003 	ldbu	r3,0(r5)
    facc:	10c0151e 	bne	r2,r3,fb24 <memcmp+0x74>
    fad0:	31bfff84 	addi	r6,r6,-2
    fad4:	01ffffc4 	movi	r7,-1
    fad8:	00000406 	br	faec <memcmp+0x3c>
    fadc:	20800003 	ldbu	r2,0(r4)
    fae0:	28c00003 	ldbu	r3,0(r5)
    fae4:	31bfffc4 	addi	r6,r6,-1
    fae8:	10c00e1e 	bne	r2,r3,fb24 <memcmp+0x74>
    faec:	21000044 	addi	r4,r4,1
    faf0:	29400044 	addi	r5,r5,1
    faf4:	31fff91e 	bne	r6,r7,fadc <__alt_data_end+0xffff06dc>
    faf8:	0005883a 	mov	r2,zero
    fafc:	f800283a 	ret
    fb00:	20c00017 	ldw	r3,0(r4)
    fb04:	28800017 	ldw	r2,0(r5)
    fb08:	18bfee1e 	bne	r3,r2,fac4 <__alt_data_end+0xffff06c4>
    fb0c:	31bfff04 	addi	r6,r6,-4
    fb10:	21000104 	addi	r4,r4,4
    fb14:	29400104 	addi	r5,r5,4
    fb18:	39bff936 	bltu	r7,r6,fb00 <__alt_data_end+0xffff0700>
    fb1c:	303fe91e 	bne	r6,zero,fac4 <__alt_data_end+0xffff06c4>
    fb20:	003ff506 	br	faf8 <__alt_data_end+0xffff06f8>
    fb24:	10c5c83a 	sub	r2,r2,r3
    fb28:	f800283a 	ret

0000fb2c <__register_exitproc>:
    fb2c:	defffa04 	addi	sp,sp,-24
    fb30:	dc000315 	stw	r16,12(sp)
    fb34:	04000074 	movhi	r16,1
    fb38:	8406f204 	addi	r16,r16,7112
    fb3c:	80c00017 	ldw	r3,0(r16)
    fb40:	dc400415 	stw	r17,16(sp)
    fb44:	dfc00515 	stw	ra,20(sp)
    fb48:	18805217 	ldw	r2,328(r3)
    fb4c:	2023883a 	mov	r17,r4
    fb50:	10003726 	beq	r2,zero,fc30 <__register_exitproc+0x104>
    fb54:	10c00117 	ldw	r3,4(r2)
    fb58:	010007c4 	movi	r4,31
    fb5c:	20c00e16 	blt	r4,r3,fb98 <__register_exitproc+0x6c>
    fb60:	1a000044 	addi	r8,r3,1
    fb64:	8800221e 	bne	r17,zero,fbf0 <__register_exitproc+0xc4>
    fb68:	18c00084 	addi	r3,r3,2
    fb6c:	18c7883a 	add	r3,r3,r3
    fb70:	18c7883a 	add	r3,r3,r3
    fb74:	12000115 	stw	r8,4(r2)
    fb78:	10c7883a 	add	r3,r2,r3
    fb7c:	19400015 	stw	r5,0(r3)
    fb80:	0005883a 	mov	r2,zero
    fb84:	dfc00517 	ldw	ra,20(sp)
    fb88:	dc400417 	ldw	r17,16(sp)
    fb8c:	dc000317 	ldw	r16,12(sp)
    fb90:	dec00604 	addi	sp,sp,24
    fb94:	f800283a 	ret
    fb98:	00800034 	movhi	r2,0
    fb9c:	10800004 	addi	r2,r2,0
    fba0:	10002626 	beq	r2,zero,fc3c <__register_exitproc+0x110>
    fba4:	01006404 	movi	r4,400
    fba8:	d9400015 	stw	r5,0(sp)
    fbac:	d9800115 	stw	r6,4(sp)
    fbb0:	d9c00215 	stw	r7,8(sp)
    fbb4:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    fbb8:	d9400017 	ldw	r5,0(sp)
    fbbc:	d9800117 	ldw	r6,4(sp)
    fbc0:	d9c00217 	ldw	r7,8(sp)
    fbc4:	10001d26 	beq	r2,zero,fc3c <__register_exitproc+0x110>
    fbc8:	81000017 	ldw	r4,0(r16)
    fbcc:	10000115 	stw	zero,4(r2)
    fbd0:	02000044 	movi	r8,1
    fbd4:	22405217 	ldw	r9,328(r4)
    fbd8:	0007883a 	mov	r3,zero
    fbdc:	12400015 	stw	r9,0(r2)
    fbe0:	20805215 	stw	r2,328(r4)
    fbe4:	10006215 	stw	zero,392(r2)
    fbe8:	10006315 	stw	zero,396(r2)
    fbec:	883fde26 	beq	r17,zero,fb68 <__alt_data_end+0xffff0768>
    fbf0:	18c9883a 	add	r4,r3,r3
    fbf4:	2109883a 	add	r4,r4,r4
    fbf8:	1109883a 	add	r4,r2,r4
    fbfc:	21802215 	stw	r6,136(r4)
    fc00:	01800044 	movi	r6,1
    fc04:	12406217 	ldw	r9,392(r2)
    fc08:	30cc983a 	sll	r6,r6,r3
    fc0c:	4992b03a 	or	r9,r9,r6
    fc10:	12406215 	stw	r9,392(r2)
    fc14:	21c04215 	stw	r7,264(r4)
    fc18:	01000084 	movi	r4,2
    fc1c:	893fd21e 	bne	r17,r4,fb68 <__alt_data_end+0xffff0768>
    fc20:	11006317 	ldw	r4,396(r2)
    fc24:	218cb03a 	or	r6,r4,r6
    fc28:	11806315 	stw	r6,396(r2)
    fc2c:	003fce06 	br	fb68 <__alt_data_end+0xffff0768>
    fc30:	18805304 	addi	r2,r3,332
    fc34:	18805215 	stw	r2,328(r3)
    fc38:	003fc606 	br	fb54 <__alt_data_end+0xffff0754>
    fc3c:	00bfffc4 	movi	r2,-1
    fc40:	003fd006 	br	fb84 <__alt_data_end+0xffff0784>

0000fc44 <__call_exitprocs>:
    fc44:	defff504 	addi	sp,sp,-44
    fc48:	df000915 	stw	fp,36(sp)
    fc4c:	dd400615 	stw	r21,24(sp)
    fc50:	dc800315 	stw	r18,12(sp)
    fc54:	dfc00a15 	stw	ra,40(sp)
    fc58:	ddc00815 	stw	r23,32(sp)
    fc5c:	dd800715 	stw	r22,28(sp)
    fc60:	dd000515 	stw	r20,20(sp)
    fc64:	dcc00415 	stw	r19,16(sp)
    fc68:	dc400215 	stw	r17,8(sp)
    fc6c:	dc000115 	stw	r16,4(sp)
    fc70:	d9000015 	stw	r4,0(sp)
    fc74:	2839883a 	mov	fp,r5
    fc78:	04800044 	movi	r18,1
    fc7c:	057fffc4 	movi	r21,-1
    fc80:	00800074 	movhi	r2,1
    fc84:	1086f204 	addi	r2,r2,7112
    fc88:	12000017 	ldw	r8,0(r2)
    fc8c:	45005217 	ldw	r20,328(r8)
    fc90:	44c05204 	addi	r19,r8,328
    fc94:	a0001c26 	beq	r20,zero,fd08 <__call_exitprocs+0xc4>
    fc98:	a0800117 	ldw	r2,4(r20)
    fc9c:	15ffffc4 	addi	r23,r2,-1
    fca0:	b8000d16 	blt	r23,zero,fcd8 <__call_exitprocs+0x94>
    fca4:	14000044 	addi	r16,r2,1
    fca8:	8421883a 	add	r16,r16,r16
    fcac:	8421883a 	add	r16,r16,r16
    fcb0:	84402004 	addi	r17,r16,128
    fcb4:	a463883a 	add	r17,r20,r17
    fcb8:	a421883a 	add	r16,r20,r16
    fcbc:	e0001e26 	beq	fp,zero,fd38 <__call_exitprocs+0xf4>
    fcc0:	80804017 	ldw	r2,256(r16)
    fcc4:	e0801c26 	beq	fp,r2,fd38 <__call_exitprocs+0xf4>
    fcc8:	bdffffc4 	addi	r23,r23,-1
    fccc:	843fff04 	addi	r16,r16,-4
    fcd0:	8c7fff04 	addi	r17,r17,-4
    fcd4:	bd7ff91e 	bne	r23,r21,fcbc <__alt_data_end+0xffff08bc>
    fcd8:	00800034 	movhi	r2,0
    fcdc:	10800004 	addi	r2,r2,0
    fce0:	10000926 	beq	r2,zero,fd08 <__call_exitprocs+0xc4>
    fce4:	a0800117 	ldw	r2,4(r20)
    fce8:	1000301e 	bne	r2,zero,fdac <__call_exitprocs+0x168>
    fcec:	a0800017 	ldw	r2,0(r20)
    fcf0:	10003226 	beq	r2,zero,fdbc <__call_exitprocs+0x178>
    fcf4:	a009883a 	mov	r4,r20
    fcf8:	98800015 	stw	r2,0(r19)
    fcfc:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    fd00:	9d000017 	ldw	r20,0(r19)
    fd04:	a03fe41e 	bne	r20,zero,fc98 <__alt_data_end+0xffff0898>
    fd08:	dfc00a17 	ldw	ra,40(sp)
    fd0c:	df000917 	ldw	fp,36(sp)
    fd10:	ddc00817 	ldw	r23,32(sp)
    fd14:	dd800717 	ldw	r22,28(sp)
    fd18:	dd400617 	ldw	r21,24(sp)
    fd1c:	dd000517 	ldw	r20,20(sp)
    fd20:	dcc00417 	ldw	r19,16(sp)
    fd24:	dc800317 	ldw	r18,12(sp)
    fd28:	dc400217 	ldw	r17,8(sp)
    fd2c:	dc000117 	ldw	r16,4(sp)
    fd30:	dec00b04 	addi	sp,sp,44
    fd34:	f800283a 	ret
    fd38:	a0800117 	ldw	r2,4(r20)
    fd3c:	80c00017 	ldw	r3,0(r16)
    fd40:	10bfffc4 	addi	r2,r2,-1
    fd44:	15c01426 	beq	r2,r23,fd98 <__call_exitprocs+0x154>
    fd48:	80000015 	stw	zero,0(r16)
    fd4c:	183fde26 	beq	r3,zero,fcc8 <__alt_data_end+0xffff08c8>
    fd50:	95c8983a 	sll	r4,r18,r23
    fd54:	a0806217 	ldw	r2,392(r20)
    fd58:	a5800117 	ldw	r22,4(r20)
    fd5c:	2084703a 	and	r2,r4,r2
    fd60:	10000b26 	beq	r2,zero,fd90 <__call_exitprocs+0x14c>
    fd64:	a0806317 	ldw	r2,396(r20)
    fd68:	2088703a 	and	r4,r4,r2
    fd6c:	20000c1e 	bne	r4,zero,fda0 <__call_exitprocs+0x15c>
    fd70:	89400017 	ldw	r5,0(r17)
    fd74:	d9000017 	ldw	r4,0(sp)
    fd78:	183ee83a 	callr	r3
    fd7c:	a0800117 	ldw	r2,4(r20)
    fd80:	15bfbf1e 	bne	r2,r22,fc80 <__alt_data_end+0xffff0880>
    fd84:	98800017 	ldw	r2,0(r19)
    fd88:	153fcf26 	beq	r2,r20,fcc8 <__alt_data_end+0xffff08c8>
    fd8c:	003fbc06 	br	fc80 <__alt_data_end+0xffff0880>
    fd90:	183ee83a 	callr	r3
    fd94:	003ff906 	br	fd7c <__alt_data_end+0xffff097c>
    fd98:	a5c00115 	stw	r23,4(r20)
    fd9c:	003feb06 	br	fd4c <__alt_data_end+0xffff094c>
    fda0:	89000017 	ldw	r4,0(r17)
    fda4:	183ee83a 	callr	r3
    fda8:	003ff406 	br	fd7c <__alt_data_end+0xffff097c>
    fdac:	a0800017 	ldw	r2,0(r20)
    fdb0:	a027883a 	mov	r19,r20
    fdb4:	1029883a 	mov	r20,r2
    fdb8:	003fb606 	br	fc94 <__alt_data_end+0xffff0894>
    fdbc:	0005883a 	mov	r2,zero
    fdc0:	003ffb06 	br	fdb0 <__alt_data_end+0xffff09b0>

0000fdc4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    fdc4:	defffd04 	addi	sp,sp,-12
    fdc8:	df000215 	stw	fp,8(sp)
    fdcc:	df000204 	addi	fp,sp,8
    fdd0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    fdd4:	0001883a 	nop
    fdd8:	e0bfff17 	ldw	r2,-4(fp)
    fddc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    fde0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    fde4:	10000226 	beq	r2,zero,fdf0 <_exit+0x2c>
    ALT_SIM_FAIL();
    fde8:	002af070 	cmpltui	zero,zero,43969
    fdec:	00000106 	br	fdf4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    fdf0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    fdf4:	003fff06 	br	fdf4 <__alt_data_end+0xffff09f4>
