
week1_practicum2.elf:     file format elf32-littlenios2
week1_practicum2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00010364 memsz 0x00010364 flags r-x
    LOAD off    0x00011384 vaddr 0x00010384 paddr 0x00011e70 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001395c vaddr 0x0001395c paddr 0x0001395c align 2**12
         filesz 0x00000000 memsz 0x0000017c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fe5c  000001c0  000001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000368  0001001c  0001001c  0001101c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00010384  00011e70  00011384  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  0001395c  0001395c  0001395c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00013ad8  00013ad8  00012e70  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012e70  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e88  00000000  00000000  00012e98  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022c30  00000000  00000000  00013d20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008de1  00000000  00000000  00036950  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b444  00000000  00000000  0003f731  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002118  00000000  00000000  0004ab78  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000035da  00000000  00000000  0004cc90  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017833  00000000  00000000  0005026a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00067aa0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001898  00000000  00000000  00067ab0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c46a  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c46d  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c479  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c47a  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006c47b  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006c486  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006c491  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  0006c49c  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004c  00000000  00000000  0006c4a7  2**0
                  CONTENTS, READONLY
 26 .jdi          00005497  00000000  00000000  0006c4f3  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     000480a6  00000000  00000000  0007198a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
000001c0 l    d  .text	00000000 .text
0001001c l    d  .rodata	00000000 .rodata
00010384 l    d  .rwdata	00000000 .rwdata
0001395c l    d  .bss	00000000 .bss
00013ad8 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../week1_practicum2_bsp//obj/HAL/src/crt0.o
000001f8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00013964 l     O .bss	00000006 hexadecimalnum.2820
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strncat.c
00000000 l    df *ABS*	00000000 vfprintf.c
000100ca l     O .rodata	00000010 zeroes.4404
00002eec l     F .text	000000bc __sbprintf
000100da l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000030fc l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004c54 l     F .text	00000008 __fp_unlock
00004c68 l     F .text	0000019c __sinit.part.1
00004e04 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00010384 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
000107c8 l     O .rwdata	00000020 lc_ctype_charset
000107a8 l     O .rwdata	00000020 lc_message_charset
000107e8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0001010c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000770c l     F .text	000000fc __sprint_r.part.0
00010230 l     O .rodata	00000010 zeroes.4349
00008d48 l     F .text	000000bc __sbprintf
00010240 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d918 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000da2c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000da58 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0000ddec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000ded4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000dfc0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000e19c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00011e64 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000e410 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000e54c l     F .text	00000034 alt_dev_reg
00010dd0 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e83c l     F .text	0000020c altera_avalon_jtag_uart_irq
0000ea48 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000f080 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000f2c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000f480 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0000f5e0 l     F .text	0000003c alt_get_errno
0000f61c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000072f8 g     F .text	00000074 _mprec_log10
000073e4 g     F .text	0000008c __any_on
000097c4 g     F .text	00000054 _isatty_r
00010118 g     O .rodata	00000028 __mprec_tinytens
0000e0d8 g     F .text	0000007c alt_main
000139d8 g     O .bss	00000100 alt_irq
00009818 g     F .text	00000060 _lseek_r
00011e70 g       *ABS*	00000000 __flash_rwdata_start
0000c2f0 g     F .text	00000088 .hidden __eqdf2
00013ad8 g       *ABS*	00000000 __alt_heap_start
00000a24 g     F .text	0000003c printf
0000a0f0 g     F .text	0000009c _wcrtomb_r
00007610 g     F .text	0000005c __sseek
00004fb4 g     F .text	00000010 __sinit
00009f98 g     F .text	00000140 __swbuf_r
000055c0 g     F .text	0000007c _setlocale_r
00004e0c g     F .text	00000078 __sfmoreglue
0000e178 g     F .text	00000024 __malloc_unlock
00009878 g     F .text	0000015c memmove
00004f9c g     F .text	00000018 _cleanup
000063b8 g     F .text	000000a8 _Balloc
0000c378 g     F .text	000000dc .hidden __gtdf2
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
000092a0 g     F .text	0000005c _fstat_r
00013994 g     O .bss	00000004 errno
0000758c g     F .text	00000008 __seofread
000139a0 g     O .bss	00000004 alt_argv
00019e30 g       *ABS*	00000000 _gp
00010c50 g     O .rwdata	00000180 alt_fd_list
0000fa2c g     F .text	00000090 alt_find_dev
00006148 g     F .text	00000148 memcpy
00004c5c g     F .text	0000000c _cleanup_r
0000d730 g     F .text	000000dc .hidden __floatsidf
0000f564 g     F .text	0000007c alt_io_redirect
0000c454 g     F .text	000000f4 .hidden __ltdf2
0001001c g       *ABS*	00000000 __DTOR_END__
00007470 g     F .text	00000074 __fpclassifyd
00007254 g     F .text	000000a4 __ratio
00008d2c g     F .text	0000001c __vfiprintf_internal
0000ec40 g     F .text	0000021c altera_avalon_jtag_uart_read
000009f4 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000af90 g     F .text	00000064 .hidden __udivsi3
0000de28 g     F .text	000000ac isatty
00010168 g     O .rodata	000000c8 __mprec_tens
0000563c g     F .text	0000000c __locale_charset
00013990 g     O .bss	00000004 __malloc_top_pad
00011e38 g     O .rwdata	00000004 __mb_cur_max
0000566c g     F .text	0000000c _localeconv_r
000092fc g     F .text	000004c8 __sfvwrite_r
000067ec g     F .text	0000003c __i2b
000074e4 g     F .text	00000054 _sbrk_r
000099d4 g     F .text	00000060 _read_r
00011e58 g     O .rwdata	00000004 alt_max_fd
00008f94 g     F .text	000000f0 _fclose_r
00004c24 g     F .text	00000030 fflush
0001398c g     O .bss	00000004 __malloc_max_sbrked_mem
0000b074 g     F .text	000008ac .hidden __adddf3
0001396c g     O .bss	00000004 noPara1
00006ffc g     F .text	0000010c __b2d
0000a8d4 g     F .text	000005c4 .hidden __umoddi3
0000dffc g     F .text	000000dc lseek
00011e30 g     O .rwdata	00000004 _global_impure_ptr
00013970 g     O .bss	00000004 flags1
00009a34 g     F .text	00000564 _realloc_r
00013ad8 g       *ABS*	00000000 __bss_end
0000dcfc g     F .text	000000f0 alt_iic_isr_register
0000f900 g     F .text	00000108 alt_tick
0000a2d8 g     F .text	000005fc .hidden __udivdi3
000091fc g     F .text	00000024 _fputwc_r
00010140 g     O .rodata	00000028 __mprec_bigtens
000065d0 g     F .text	00000104 __s2b
0000d80c g     F .text	000000a8 .hidden __floatunsidf
00006d3c g     F .text	00000060 __mcmp
00004fd4 g     F .text	00000018 __fp_lock_all
0000dcb0 g     F .text	0000004c alt_ic_irq_enabled
0000f864 g     F .text	0000009c alt_alarm_stop
00013998 g     O .bss	00000004 alt_irq_active
000000ec g     F .exceptions	000000d4 alt_irq_handler
00010c28 g     O .rwdata	00000028 alt_dev_null
000001fc g     F .text	0000012c charToInt
0000f2a0 g     F .text	00000020 alt_dcache_flush_all
000066d4 g     F .text	00000068 __hi0bits
0000d6b0 g     F .text	00000080 .hidden __fixdfsi
00011e70 g       *ABS*	00000000 __ram_rwdata_end
00011e50 g     O .rwdata	00000008 alt_dev_list
0000e44c g     F .text	00000100 write
00010384 g       *ABS*	00000000 __ram_rodata_end
0000da94 g     F .text	000000b8 fstat
0000c454 g     F .text	000000f4 .hidden __ledf2
00006ab4 g     F .text	00000140 __pow5mult
00007820 g     F .text	0000150c ___vfiprintf_internal_r
00013984 g     O .bss	00000004 __nlocale_changed
0000aff4 g     F .text	00000058 .hidden __umodsi3
00000488 g     F .text	0000012c init_interrupt
00013ad8 g       *ABS*	00000000 end
000005b4 g     F .text	000000d4 counterInterrupt
0000e77c g     F .text	000000c0 altera_avalon_jtag_uart_init
0001001c g       *ABS*	00000000 __CTOR_LIST__
0001f400 g       *ABS*	00000000 __alt_stack_pointer
0000f0f8 g     F .text	0000007c alt_avalon_timer_sc_init
0000d8b4 g     F .text	00000064 .hidden __clzsi2
0000ee5c g     F .text	00000224 altera_avalon_jtag_uart_write
00004fc4 g     F .text	00000004 __sfp_lock_acquire
00006064 g     F .text	000000e4 memchr
00000bf4 g     F .text	000022dc ___vfprintf_internal_r
00005128 g     F .text	00000310 _free_r
00005648 g     F .text	00000010 __locale_mb_cur_max
0000fe68 g     F .text	00000180 __call_exitprocs
00013980 g     O .bss	00000004 __mlocale_changed
00011e3c g     O .rwdata	00000004 __malloc_sbrk_base
000001c0 g     F .text	0000003c _start
000139a8 g     O .bss	00000004 _alt_tick_rate
00000688 g     F .text	000000ec jtagInterrupt
00006bf4 g     F .text	00000148 __lshift
000139ac g     O .bss	00000004 _alt_nticks
0000e1d8 g     F .text	00000104 read
0000e5b8 g     F .text	00000060 alt_sys_init
0000fd50 g     F .text	00000118 __register_exitproc
00006828 g     F .text	0000028c __multiply
0000eae8 g     F .text	00000068 altera_avalon_jtag_uart_close
000008b8 g     F .text	00000104 dec2ToHex
0000b04c g     F .text	00000028 .hidden __mulsi3
00010384 g       *ABS*	00000000 __ram_rwdata_start
0001001c g       *ABS*	00000000 __ram_rodata_start
000139b0 g     O .bss	00000028 __malloc_current_mallinfo
00007108 g     F .text	0000014c __d2b
0001395c g     O .bss	00000004 intCounter
0000e618 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000fbc4 g     F .text	000000c4 alt_get_fd
00008e64 g     F .text	00000054 _close_r
0000fcd4 g     F .text	0000007c memcmp
0000e6d8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013ad8 g       *ABS*	00000000 __alt_stack_base
0000e728 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00002fa8 g     F .text	00000154 __swsetup_r
0000b920 g     F .text	000009d0 .hidden __divdf3
00004e84 g     F .text	00000118 __sfp
00000b3c g     F .text	000000b8 strncat
0000736c g     F .text	00000078 __copybits
00010820 g     O .rwdata	00000408 __malloc_av_
00004fd0 g     F .text	00000004 __sinit_lock_release
0000c548 g     F .text	0000086c .hidden __muldf3
00007538 g     F .text	00000054 __sread
0000fabc g     F .text	00000108 alt_find_file
0000f2fc g     F .text	000000a4 alt_dev_llist_insert
0000e154 g     F .text	00000024 __malloc_lock
0000e360 g     F .text	000000b0 sbrk
00004bc8 g     F .text	0000005c _fflush_r
00008eb8 g     F .text	000000dc _calloc_r
0001395c g       *ABS*	00000000 __bss_start
00006290 g     F .text	00000128 memset
000009bc g     F .text	00000038 main
000139a4 g     O .bss	00000004 alt_envp
00013988 g     O .bss	00000004 __malloc_max_total_mem
0000e678 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0000a0d8 g     F .text	00000018 __swbuf
0000766c g     F .text	00000008 __sclose
0001f400 g       *ABS*	00000000 __alt_heap_limit
00009084 g     F .text	00000014 fclose
00003324 g     F .text	00001688 _dtoa_r
00005858 g     F .text	0000080c _malloc_r
0000a24c g     F .text	00000030 __ascii_wctomb
00011e5c g     O .rwdata	00000004 alt_errno
00005438 g     F .text	000000c4 _fwalk
0000ae98 g     F .text	00000084 .hidden __divsi3
00000328 g     F .text	00000160 hex_to_7_seg
00005004 g     F .text	00000124 _malloc_trim_r
0001001c g       *ABS*	00000000 __CTOR_END__
00000a60 g     F .text	000000dc strcmp
0001001c g       *ABS*	00000000 __flash_rodata_start
0001001c g       *ABS*	00000000 __DTOR_LIST__
0000c2f0 g     F .text	00000088 .hidden __nedf2
0000e580 g     F .text	00000038 alt_irq_init
0000e2dc g     F .text	00000084 alt_release_fd
00010250 g     O .rodata	00000100 .hidden __clz_tab
0001397c g     O .bss	00000004 _PathLocale
0000fc88 g     F .text	00000014 atexit
00008e04 g     F .text	00000060 _write_r
00005678 g     F .text	00000018 setlocale
00011e34 g     O .rwdata	00000004 _impure_ptr
0001399c g     O .bss	00000004 alt_argc
000049ac g     F .text	0000021c __sflush_r
0000f400 g     F .text	00000060 _do_dtors
00005664 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006f98 g     F .text	00000064 __ulp
00004fec g     F .text	00000018 __fp_unlock_all
00011e48 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005690 g     F .text	0000000c localeconv
0000db4c g     F .text	00000050 alt_ic_isr_register
00011e70 g       *ABS*	00000000 _edata
00013ad8 g       *ABS*	00000000 _end
00013974 g     O .bss	00000004 noPara
00009098 g     F .text	00000164 __fputwc
000001c0 g       *ABS*	00000000 __ram_exceptions_end
0000eb50 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000dc24 g     F .text	0000008c alt_ic_irq_disable
00007594 g     F .text	0000007c __swrite
00011e40 g     O .rwdata	00000004 __malloc_trim_threshold
0000fa08 g     F .text	00000024 altera_nios2_qsys_irq_init
00005658 g     F .text	0000000c __locale_msgcharset
0000fc9c g     F .text	00000038 exit
00013978 g     O .bss	00000004 flags
000054fc g     F .text	000000c4 _fwalk_reent
00006d9c g     F .text	000001fc __mdiff
0000af1c g     F .text	00000074 .hidden __modsi3
0001f400 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004fc8 g     F .text	00000004 __sfp_lock_release
0000ffe8 g     F .text	00000034 _exit
0000f174 g     F .text	0000012c alt_alarm_start
0000569c g     F .text	000001bc __smakebuf_r
00007674 g     F .text	00000098 strlen
0000f708 g     F .text	0000015c open
0000c378 g     F .text	000000dc .hidden __gedf2
00011e44 g     O .rwdata	00000004 __wctomb
00007808 g     F .text	00000018 __sprint_r
0000f460 g     F .text	00000020 alt_icache_flush_all
00011e60 g     O .rwdata	00000004 alt_priority_mask
0000db9c g     F .text	00000088 alt_ic_irq_enable
00002ed0 g     F .text	0000001c __vfprintf_internal
0000a27c g     F .text	0000005c _wctomb_r
0000cdb4 g     F .text	000008fc .hidden __subdf3
0000673c g     F .text	000000b0 __lo0bits
00011e68 g     O .rwdata	00000008 alt_alarm_list
0000f3a0 g     F .text	00000060 _do_ctors
0000a18c g     F .text	000000c0 wcrtomb
0000d954 g     F .text	000000d8 close
00000774 g     F .text	00000144 write7SegDisplay
00013960 g     O .bss	00000004 runTimer
0000df3c g     F .text	00000084 alt_load
00009220 g     F .text	00000080 fputwc
00004fcc g     F .text	00000004 __sinit_lock_acquire
00006488 g     F .text	00000148 __multadd
00006460 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08407014 	ori	at,at,448
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)

00000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defff904 	addi	sp,sp,-28
  f0:	dfc00615 	stw	ra,24(sp)
  f4:	df000515 	stw	fp,20(sp)
  f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 100:	0005313a 	rdctl	r2,ipending
 104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 10c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 114:	00800044 	movi	r2,1
 118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 11c:	e0fffb17 	ldw	r3,-20(fp)
 120:	e0bffc17 	ldw	r2,-16(fp)
 124:	1884703a 	and	r2,r3,r2
 128:	10001426 	beq	r2,zero,17c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 12c:	00800074 	movhi	r2,1
 130:	108e7604 	addi	r2,r2,14808
 134:	e0fffd17 	ldw	r3,-12(fp)
 138:	180690fa 	slli	r3,r3,3
 13c:	10c5883a 	add	r2,r2,r3
 140:	10c00017 	ldw	r3,0(r2)
 144:	00800074 	movhi	r2,1
 148:	108e7604 	addi	r2,r2,14808
 14c:	e13ffd17 	ldw	r4,-12(fp)
 150:	200890fa 	slli	r4,r4,3
 154:	1105883a 	add	r2,r2,r4
 158:	10800104 	addi	r2,r2,4
 15c:	10800017 	ldw	r2,0(r2)
 160:	1009883a 	mov	r4,r2
 164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 16c:	0005313a 	rdctl	r2,ipending
 170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 174:	e0bfff17 	ldw	r2,-4(fp)
 178:	00000706 	br	198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 17c:	e0bffc17 	ldw	r2,-16(fp)
 180:	1085883a 	add	r2,r2,r2
 184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 188:	e0bffd17 	ldw	r2,-12(fp)
 18c:	10800044 	addi	r2,r2,1
 190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 194:	003fe106 	br	11c <__alt_data_end+0xfffe0d1c>

    active = alt_irq_pending ();
 198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 19c:	e0bffb17 	ldw	r2,-20(fp)
 1a0:	103fdb1e 	bne	r2,zero,110 <__alt_data_end+0xfffe0d10>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a4:	0001883a 	nop
}
 1a8:	0001883a 	nop
 1ac:	e037883a 	mov	sp,fp
 1b0:	dfc00117 	ldw	ra,4(sp)
 1b4:	df000017 	ldw	fp,0(sp)
 1b8:	dec00204 	addi	sp,sp,8
 1bc:	f800283a 	ret

Disassembly of section .text:

000001c0 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1c0:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     1c4:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
     1c8:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1cc:	d6a78c14 	ori	gp,gp,40496
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1d0:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1d4:	108e5714 	ori	r2,r2,14684

    movhi r3, %hi(__bss_end)
     1d8:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1dc:	18ceb614 	ori	r3,r3,15064

    beq r2, r3, 1f
     1e0:	10c00326 	beq	r2,r3,1f0 <_start+0x30>

0:
    stw zero, (r2)
     1e4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1e8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1ec:	10fffd36 	bltu	r2,r3,1e4 <__alt_data_end+0xfffe0de4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     1f0:	000df3c0 	call	df3c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1f4:	000e0d80 	call	e0d8 <alt_main>

000001f8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1f8:	003fff06 	br	1f8 <__alt_data_end+0xfffe0df8>

000001fc <charToInt>:

volatile int runTimer = 0;

//Convert a char hexadecimal character to its corresponding int value
int charToInt(char convert)
{
     1fc:	defffe04 	addi	sp,sp,-8
     200:	df000115 	stw	fp,4(sp)
     204:	df000104 	addi	fp,sp,4
     208:	2005883a 	mov	r2,r4
     20c:	e0bfff05 	stb	r2,-4(fp)
	switch(convert){
     210:	e0bfff07 	ldb	r2,-4(fp)
     214:	10bff404 	addi	r2,r2,-48
     218:	10c005e8 	cmpgeui	r3,r2,23
     21c:	18003d1e 	bne	r3,zero,314 <charToInt+0x118>
     220:	100690ba 	slli	r3,r2,2
     224:	00800034 	movhi	r2,0
     228:	10808e04 	addi	r2,r2,568
     22c:	1885883a 	add	r2,r3,r2
     230:	10800017 	ldw	r2,0(r2)
     234:	1000683a 	jmp	r2
     238:	00000294 	movui	zero,10
     23c:	0000029c 	xori	zero,zero,10
     240:	000002a4 	muli	zero,zero,10
     244:	000002ac 	andhi	zero,zero,10
     248:	000002b4 	movhi	zero,10
     24c:	000002bc 	xorhi	zero,zero,10
     250:	000002c4 	movi	zero,11
     254:	000002cc 	andi	zero,zero,11
     258:	000002d4 	movui	zero,11
     25c:	000002dc 	xori	zero,zero,11
     260:	00000314 	movui	zero,12
     264:	00000314 	movui	zero,12
     268:	00000314 	movui	zero,12
     26c:	00000314 	movui	zero,12
     270:	00000314 	movui	zero,12
     274:	00000314 	movui	zero,12
     278:	00000314 	movui	zero,12
     27c:	000002e4 	muli	zero,zero,11
     280:	000002ec 	andhi	zero,zero,11
     284:	000002f4 	movhi	zero,11
     288:	000002fc 	xorhi	zero,zero,11
     28c:	00000304 	movi	zero,12
     290:	0000030c 	andi	zero,zero,12
        case '0' : return 0; break;
     294:	0005883a 	mov	r2,zero
     298:	00001f06 	br	318 <charToInt+0x11c>
        case '1' : return 1; break;
     29c:	00800044 	movi	r2,1
     2a0:	00001d06 	br	318 <charToInt+0x11c>
        case '2' : return 2; break;
     2a4:	00800084 	movi	r2,2
     2a8:	00001b06 	br	318 <charToInt+0x11c>
        case '3' : return 3; break;
     2ac:	008000c4 	movi	r2,3
     2b0:	00001906 	br	318 <charToInt+0x11c>
        case '4' : return 4; break;
     2b4:	00800104 	movi	r2,4
     2b8:	00001706 	br	318 <charToInt+0x11c>
        case '5' : return 5; break;
     2bc:	00800144 	movi	r2,5
     2c0:	00001506 	br	318 <charToInt+0x11c>
        case '6' : return 6; break;
     2c4:	00800184 	movi	r2,6
     2c8:	00001306 	br	318 <charToInt+0x11c>
        case '7' : return 7; break;
     2cc:	008001c4 	movi	r2,7
     2d0:	00001106 	br	318 <charToInt+0x11c>
        case '8' : return 8; break;
     2d4:	00800204 	movi	r2,8
     2d8:	00000f06 	br	318 <charToInt+0x11c>
        case '9' : return 9; break;
     2dc:	00800244 	movi	r2,9
     2e0:	00000d06 	br	318 <charToInt+0x11c>
        case 'A' : return 10; break;
     2e4:	00800284 	movi	r2,10
     2e8:	00000b06 	br	318 <charToInt+0x11c>
        case 'B' : return 11; break;
     2ec:	008002c4 	movi	r2,11
     2f0:	00000906 	br	318 <charToInt+0x11c>
        case 'C' : return 12; break;
     2f4:	00800304 	movi	r2,12
     2f8:	00000706 	br	318 <charToInt+0x11c>
        case 'D' : return 13; break;
     2fc:	00800344 	movi	r2,13
     300:	00000506 	br	318 <charToInt+0x11c>
        case 'E' : return 14; break;
     304:	00800384 	movi	r2,14
     308:	00000306 	br	318 <charToInt+0x11c>
        case 'F' : return 15; break;
     30c:	008003c4 	movi	r2,15
     310:	00000106 	br	318 <charToInt+0x11c>
        default  : return 0;
     314:	0005883a 	mov	r2,zero
    }
}
     318:	e037883a 	mov	sp,fp
     31c:	df000017 	ldw	fp,0(sp)
     320:	dec00104 	addi	sp,sp,4
     324:	f800283a 	ret

00000328 <hex_to_7_seg>:
//Return the hex display input bits to set a certain number on the display
int hex_to_7_seg (int hex_digit ) {
     328:	defffe04 	addi	sp,sp,-8
     32c:	df000115 	stw	fp,4(sp)
     330:	df000104 	addi	fp,sp,4
     334:	e13fff15 	stw	r4,-4(fp)
    if ( hex_digit == 0x0 ) return 0x40 ;
     338:	e0bfff17 	ldw	r2,-4(fp)
     33c:	1000021e 	bne	r2,zero,348 <hex_to_7_seg+0x20>
     340:	00801004 	movi	r2,64
     344:	00004c06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x1 ) return 0x79 ;
     348:	e0bfff17 	ldw	r2,-4(fp)
     34c:	10800058 	cmpnei	r2,r2,1
     350:	1000021e 	bne	r2,zero,35c <hex_to_7_seg+0x34>
     354:	00801e44 	movi	r2,121
     358:	00004706 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x2 ) return 0x24 ;
     35c:	e0bfff17 	ldw	r2,-4(fp)
     360:	10800098 	cmpnei	r2,r2,2
     364:	1000021e 	bne	r2,zero,370 <hex_to_7_seg+0x48>
     368:	00800904 	movi	r2,36
     36c:	00004206 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x3 ) return 0x30 ;
     370:	e0bfff17 	ldw	r2,-4(fp)
     374:	108000d8 	cmpnei	r2,r2,3
     378:	1000021e 	bne	r2,zero,384 <hex_to_7_seg+0x5c>
     37c:	00800c04 	movi	r2,48
     380:	00003d06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x4 ) return 0x19 ;
     384:	e0bfff17 	ldw	r2,-4(fp)
     388:	10800118 	cmpnei	r2,r2,4
     38c:	1000021e 	bne	r2,zero,398 <hex_to_7_seg+0x70>
     390:	00800644 	movi	r2,25
     394:	00003806 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x5 ) return 0x12 ;
     398:	e0bfff17 	ldw	r2,-4(fp)
     39c:	10800158 	cmpnei	r2,r2,5
     3a0:	1000021e 	bne	r2,zero,3ac <hex_to_7_seg+0x84>
     3a4:	00800484 	movi	r2,18
     3a8:	00003306 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x6 ) return 0x02 ;
     3ac:	e0bfff17 	ldw	r2,-4(fp)
     3b0:	10800198 	cmpnei	r2,r2,6
     3b4:	1000021e 	bne	r2,zero,3c0 <hex_to_7_seg+0x98>
     3b8:	00800084 	movi	r2,2
     3bc:	00002e06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x7 ) return 0x78 ;
     3c0:	e0bfff17 	ldw	r2,-4(fp)
     3c4:	108001d8 	cmpnei	r2,r2,7
     3c8:	1000021e 	bne	r2,zero,3d4 <hex_to_7_seg+0xac>
     3cc:	00801e04 	movi	r2,120
     3d0:	00002906 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x8 ) return 0x00 ;
     3d4:	e0bfff17 	ldw	r2,-4(fp)
     3d8:	10800218 	cmpnei	r2,r2,8
     3dc:	1000021e 	bne	r2,zero,3e8 <hex_to_7_seg+0xc0>
     3e0:	0005883a 	mov	r2,zero
     3e4:	00002406 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0x9 ) return 0x18 ;
     3e8:	e0bfff17 	ldw	r2,-4(fp)
     3ec:	10800258 	cmpnei	r2,r2,9
     3f0:	1000021e 	bne	r2,zero,3fc <hex_to_7_seg+0xd4>
     3f4:	00800604 	movi	r2,24
     3f8:	00001f06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xA ) return 0x08 ;
     3fc:	e0bfff17 	ldw	r2,-4(fp)
     400:	10800298 	cmpnei	r2,r2,10
     404:	1000021e 	bne	r2,zero,410 <hex_to_7_seg+0xe8>
     408:	00800204 	movi	r2,8
     40c:	00001a06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xB ) return 0x03 ;
     410:	e0bfff17 	ldw	r2,-4(fp)
     414:	108002d8 	cmpnei	r2,r2,11
     418:	1000021e 	bne	r2,zero,424 <hex_to_7_seg+0xfc>
     41c:	008000c4 	movi	r2,3
     420:	00001506 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xC ) return 0x46 ;
     424:	e0bfff17 	ldw	r2,-4(fp)
     428:	10800318 	cmpnei	r2,r2,12
     42c:	1000021e 	bne	r2,zero,438 <hex_to_7_seg+0x110>
     430:	00801184 	movi	r2,70
     434:	00001006 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xD ) return 0x21 ;
     438:	e0bfff17 	ldw	r2,-4(fp)
     43c:	10800358 	cmpnei	r2,r2,13
     440:	1000021e 	bne	r2,zero,44c <hex_to_7_seg+0x124>
     444:	00800844 	movi	r2,33
     448:	00000b06 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xE ) return 0x06 ;
     44c:	e0bfff17 	ldw	r2,-4(fp)
     450:	10800398 	cmpnei	r2,r2,14
     454:	1000021e 	bne	r2,zero,460 <hex_to_7_seg+0x138>
     458:	00800184 	movi	r2,6
     45c:	00000606 	br	478 <hex_to_7_seg+0x150>
    if ( hex_digit == 0xF ) return 0x0E ;
     460:	e0bfff17 	ldw	r2,-4(fp)
     464:	108003d8 	cmpnei	r2,r2,15
     468:	1000021e 	bne	r2,zero,474 <hex_to_7_seg+0x14c>
     46c:	00800384 	movi	r2,14
     470:	00000106 	br	478 <hex_to_7_seg+0x150>
return 0x7F ;
     474:	00801fc4 	movi	r2,127
}
     478:	e037883a 	mov	sp,fp
     47c:	df000017 	ldw	fp,0(sp)
     480:	dec00104 	addi	sp,sp,4
     484:	f800283a 	ret

00000488 <init_interrupt>:

void init_interrupt(){
     488:	defff804 	addi	sp,sp,-32
     48c:	dfc00715 	stw	ra,28(sp)
     490:	df000615 	stw	fp,24(sp)
     494:	df000604 	addi	fp,sp,24
		/*Set interrupt for interval timer*/
		int counter	= 50000;	// 1/(50MHz) x (50000) = 1msec
     498:	00b0d414 	movui	r2,50000
     49c:	e0bffb15 	stw	r2,-20(fp)
		IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_0_BASE, counter & 0xFFFF);
     4a0:	e0bffb17 	ldw	r2,-20(fp)
     4a4:	10ffffcc 	andi	r3,r2,65535
     4a8:	008000b4 	movhi	r2,2
     4ac:	10840204 	addi	r2,r2,4104
     4b0:	10c00035 	stwio	r3,0(r2)
		IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_0_BASE, (counter >> 16) & 0xFFFF);
     4b4:	e0bffb17 	ldw	r2,-20(fp)
     4b8:	1004d43a 	srli	r2,r2,16
     4bc:	1007883a 	mov	r3,r2
     4c0:	008000b4 	movhi	r2,2
     4c4:	10840304 	addi	r2,r2,4108
     4c8:	10c00035 	stwio	r3,0(r2)

		//Set control register bits
		IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_0_BASE, 0x7);
     4cc:	00c001c4 	movi	r3,7
     4d0:	008000b4 	movhi	r2,2
     4d4:	10840104 	addi	r2,r2,4100
     4d8:	10c00035 	stwio	r3,0(r2)
		//Set control register bits, enable Write interrupts
		IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(JTAG_UART_0_BASE, 0x2);
     4dc:	00c00084 	movi	r3,2
     4e0:	008000b4 	movhi	r2,2
     4e4:	10841904 	addi	r2,r2,4196
     4e8:	10c00035 	stwio	r3,0(r2)

		void* isrPara = (void *) &noPara;
     4ec:	d0a6d104 	addi	r2,gp,-25788
     4f0:	e0bffc15 	stw	r2,-16(fp)
		void* noFlags = (void *) &flags;
     4f4:	d0a6d204 	addi	r2,gp,-25784
     4f8:	e0bffd15 	stw	r2,-12(fp)
		void* isrPara1 = (void *) &noPara1;
     4fc:	d0a6cf04 	addi	r2,gp,-25796
     500:	e0bffe15 	stw	r2,-8(fp)
		void* noFlags1 = (void *) &flags1;
     504:	d0a6d004 	addi	r2,gp,-25792
     508:	e0bfff15 	stw	r2,-4(fp)
		//uitzoeken wat void isr_context moet zijn en de flags
		if(alt_ic_isr_register(TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID,TIMER_0_IRQ, counterInterrupt, isrPara, noFlags) != 0){
     50c:	e0bffd17 	ldw	r2,-12(fp)
     510:	d8800015 	stw	r2,0(sp)
     514:	e1fffc17 	ldw	r7,-16(fp)
     518:	01800034 	movhi	r6,0
     51c:	31816d04 	addi	r6,r6,1460
     520:	01400104 	movi	r5,4
     524:	0009883a 	mov	r4,zero
     528:	000db4c0 	call	db4c <alt_ic_isr_register>
     52c:	10000326 	beq	r2,zero,53c <init_interrupt+0xb4>
			printf("Error in initializing interval timer interrupt");
     530:	01000074 	movhi	r4,1
     534:	21000704 	addi	r4,r4,28
     538:	0000a240 	call	a24 <printf>
		}
		/*Set jtag_uart interrupt */
		if(alt_ic_isr_register(JTAG_UART_0_IRQ_INTERRUPT_CONTROLLER_ID,JTAG_UART_0_IRQ, jtagInterrupt, isrPara1, noFlags1) != 0){
     53c:	e0bfff17 	ldw	r2,-4(fp)
     540:	d8800015 	stw	r2,0(sp)
     544:	e1fffe17 	ldw	r7,-8(fp)
     548:	01800034 	movhi	r6,0
     54c:	3181a204 	addi	r6,r6,1672
     550:	01400144 	movi	r5,5
     554:	0009883a 	mov	r4,zero
     558:	000db4c0 	call	db4c <alt_ic_isr_register>
     55c:	10000326 	beq	r2,zero,56c <init_interrupt+0xe4>
			printf("Error in initializing jtag_uart interrupt");
     560:	01000074 	movhi	r4,1
     564:	21001304 	addi	r4,r4,76
     568:	0000a240 	call	a24 <printf>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
     56c:	00800044 	movi	r2,1
     570:	1001703a 	wrctl	status,r2
		}

		alt_irq_cpu_enable_interrupts();
		alt_ic_irq_enable(JTAG_UART_0_IRQ_INTERRUPT_CONTROLLER_ID,jtagInterrupt);
     574:	00800034 	movhi	r2,0
     578:	1081a204 	addi	r2,r2,1672
     57c:	100b883a 	mov	r5,r2
     580:	0009883a 	mov	r4,zero
     584:	000db9c0 	call	db9c <alt_ic_irq_enable>
		alt_ic_irq_enable(TIMER_0_IRQ_INTERRUPT_CONTROLLER_ID, counterInterrupt);
     588:	00800034 	movhi	r2,0
     58c:	10816d04 	addi	r2,r2,1460
     590:	100b883a 	mov	r5,r2
     594:	0009883a 	mov	r4,zero
     598:	000db9c0 	call	db9c <alt_ic_irq_enable>

}
     59c:	0001883a 	nop
     5a0:	e037883a 	mov	sp,fp
     5a4:	dfc00117 	ldw	ra,4(sp)
     5a8:	df000017 	ldw	fp,0(sp)
     5ac:	dec00204 	addi	sp,sp,8
     5b0:	f800283a 	ret

000005b4 <counterInterrupt>:

/*Interrupt function */
void counterInterrupt(void* isr_context)
{
     5b4:	defffa04 	addi	sp,sp,-24
     5b8:	dfc00515 	stw	ra,20(sp)
     5bc:	df000415 	stw	fp,16(sp)
     5c0:	df000404 	addi	fp,sp,16
     5c4:	e13fff15 	stw	r4,-4(fp)
	volatile int * interval_timer_ptr = (int *)TIMER_0_BASE;
     5c8:	008000b4 	movhi	r2,2
     5cc:	10840004 	addi	r2,r2,4096
     5d0:	e0bffd15 	stw	r2,-12(fp)
	*(interval_timer_ptr) = 0;
     5d4:	e0bffd17 	ldw	r2,-12(fp)
     5d8:	10000015 	stw	zero,0(r2)

	if(runTimer == 1){
     5dc:	d0a6cc17 	ldw	r2,-25808(gp)
     5e0:	10800058 	cmpnei	r2,r2,1
     5e4:	10001f1e 	bne	r2,zero,664 <counterInterrupt+0xb0>
		intCounter++;
     5e8:	d0a6cb17 	ldw	r2,-25812(gp)
     5ec:	10800044 	addi	r2,r2,1
     5f0:	d0a6cb15 	stw	r2,-25812(gp)
		if(intCounter > 999999) intCounter = 0; //6 seven segments displays
     5f4:	d0e6cb17 	ldw	r3,-25812(gp)
     5f8:	008003f4 	movhi	r2,15
     5fc:	10908fc4 	addi	r2,r2,16959
     600:	10c0010e 	bge	r2,r3,608 <counterInterrupt+0x54>
     604:	d026cb15 	stw	zero,-25812(gp)
		char *intCounterHex;
		intCounterHex = dec2ToHex(intCounter);
     608:	d0a6cb17 	ldw	r2,-25812(gp)
     60c:	1009883a 	mov	r4,r2
     610:	00008b80 	call	8b8 <dec2ToHex>
     614:	e0bffe15 	stw	r2,-8(fp)

		//elke charachter uit intCounterHex staat gelijk aan een getal op de hex display
		int i = 0;
     618:	e03ffc15 	stw	zero,-16(fp)
		while(i < 6){
     61c:	00000d06 	br	654 <counterInterrupt+0xa0>
			write7SegDisplay(intCounterHex[i], i);
     620:	e0bffc17 	ldw	r2,-16(fp)
     624:	e0fffe17 	ldw	r3,-8(fp)
     628:	1885883a 	add	r2,r3,r2
     62c:	10800003 	ldbu	r2,0(r2)
     630:	10803fcc 	andi	r2,r2,255
     634:	1080201c 	xori	r2,r2,128
     638:	10bfe004 	addi	r2,r2,-128
     63c:	e17ffc17 	ldw	r5,-16(fp)
     640:	1009883a 	mov	r4,r2
     644:	00007740 	call	774 <write7SegDisplay>
			i++;
     648:	e0bffc17 	ldw	r2,-16(fp)
     64c:	10800044 	addi	r2,r2,1
     650:	e0bffc15 	stw	r2,-16(fp)
		char *intCounterHex;
		intCounterHex = dec2ToHex(intCounter);

		//elke charachter uit intCounterHex staat gelijk aan een getal op de hex display
		int i = 0;
		while(i < 6){
     654:	e0bffc17 	ldw	r2,-16(fp)
     658:	10800190 	cmplti	r2,r2,6
     65c:	103ff01e 	bne	r2,zero,620 <__alt_data_end+0xfffe1220>
			i++;
		}
	}else if(runTimer == 0){
		intCounter = 0;
	}
}
     660:	00000306 	br	670 <counterInterrupt+0xbc>
		int i = 0;
		while(i < 6){
			write7SegDisplay(intCounterHex[i], i);
			i++;
		}
	}else if(runTimer == 0){
     664:	d0a6cc17 	ldw	r2,-25808(gp)
     668:	1000011e 	bne	r2,zero,670 <counterInterrupt+0xbc>
		intCounter = 0;
     66c:	d026cb15 	stw	zero,-25812(gp)
	}
}
     670:	0001883a 	nop
     674:	e037883a 	mov	sp,fp
     678:	dfc00117 	ldw	ra,4(sp)
     67c:	df000017 	ldw	fp,0(sp)
     680:	dec00204 	addi	sp,sp,8
     684:	f800283a 	ret

00000688 <jtagInterrupt>:

void jtagInterrupt(void* isr_context){
     688:	defffa04 	addi	sp,sp,-24
     68c:	dfc00515 	stw	ra,20(sp)
     690:	df000415 	stw	fp,16(sp)
     694:	df000404 	addi	fp,sp,16
     698:	e13fff15 	stw	r4,-4(fp)
	char data;
	char completeData[10] = "";
     69c:	e03ffc45 	stb	zero,-15(fp)
     6a0:	e03ffc85 	stb	zero,-14(fp)
     6a4:	e03ffcc5 	stb	zero,-13(fp)
     6a8:	e03ffd05 	stb	zero,-12(fp)
     6ac:	e03ffd45 	stb	zero,-11(fp)
     6b0:	e03ffd85 	stb	zero,-10(fp)
     6b4:	e03ffdc5 	stb	zero,-9(fp)
     6b8:	e03ffe05 	stb	zero,-8(fp)
     6bc:	e03ffe45 	stb	zero,-7(fp)
     6c0:	e03ffe85 	stb	zero,-6(fp)

	do{
		data = IORD_ALTERA_AVALON_JTAG_UART_DATA(JTAG_UART_0_BASE);
     6c4:	008000b4 	movhi	r2,2
     6c8:	10841804 	addi	r2,r2,4192
     6cc:	10800037 	ldwio	r2,0(r2)
     6d0:	e0bffc05 	stb	r2,-16(fp)
		if(data == '\n')
     6d4:	e0bffc03 	ldbu	r2,-16(fp)
     6d8:	10803fcc 	andi	r2,r2,255
     6dc:	1080201c 	xori	r2,r2,128
     6e0:	10bfe004 	addi	r2,r2,-128
     6e4:	10800298 	cmpnei	r2,r2,10
     6e8:	10000c26 	beq	r2,zero,71c <jtagInterrupt+0x94>
			break;
		strncat(completeData,&data,1);
     6ec:	e0bffc44 	addi	r2,fp,-15
     6f0:	01800044 	movi	r6,1
     6f4:	e17ffc04 	addi	r5,fp,-16
     6f8:	1009883a 	mov	r4,r2
     6fc:	0000b3c0 	call	b3c <strncat>
	}while(data != '\n');
     700:	e0bffc03 	ldbu	r2,-16(fp)
     704:	10803fcc 	andi	r2,r2,255
     708:	1080201c 	xori	r2,r2,128
     70c:	10bfe004 	addi	r2,r2,-128
     710:	10800298 	cmpnei	r2,r2,10
     714:	103feb1e 	bne	r2,zero,6c4 <__alt_data_end+0xfffe12c4>
     718:	00000106 	br	720 <jtagInterrupt+0x98>
	char completeData[10] = "";

	do{
		data = IORD_ALTERA_AVALON_JTAG_UART_DATA(JTAG_UART_0_BASE);
		if(data == '\n')
			break;
     71c:	0001883a 	nop
		strncat(completeData,&data,1);
	}while(data != '\n');

	if(!(strcmp (completeData,"start"))) //strcmp returns zero on succes
     720:	e0bffc44 	addi	r2,fp,-15
     724:	01400074 	movhi	r5,1
     728:	29401e04 	addi	r5,r5,120
     72c:	1009883a 	mov	r4,r2
     730:	0000a600 	call	a60 <strcmp>
     734:	1000021e 	bne	r2,zero,740 <jtagInterrupt+0xb8>
		runTimer = 1;
     738:	00800044 	movi	r2,1
     73c:	d0a6cc15 	stw	r2,-25808(gp)
	if(!(strcmp (completeData,"stop")))
     740:	e0bffc44 	addi	r2,fp,-15
     744:	01400074 	movhi	r5,1
     748:	29402004 	addi	r5,r5,128
     74c:	1009883a 	mov	r4,r2
     750:	0000a600 	call	a60 <strcmp>
     754:	1000011e 	bne	r2,zero,75c <jtagInterrupt+0xd4>
		runTimer = 0;
     758:	d026cc15 	stw	zero,-25808(gp)
}
     75c:	0001883a 	nop
     760:	e037883a 	mov	sp,fp
     764:	dfc00117 	ldw	ra,4(sp)
     768:	df000017 	ldw	fp,0(sp)
     76c:	dec00204 	addi	sp,sp,8
     770:	f800283a 	ret

00000774 <write7SegDisplay>:

void write7SegDisplay(char displayValue, int displayNumber)
{
     774:	defffa04 	addi	sp,sp,-24
     778:	dfc00515 	stw	ra,20(sp)
     77c:	df000415 	stw	fp,16(sp)
     780:	df000404 	addi	fp,sp,16
     784:	2005883a 	mov	r2,r4
     788:	e17fff15 	stw	r5,-4(fp)
     78c:	e0bffe05 	stb	r2,-8(fp)
    int decNumber = charToInt(displayValue);
     790:	e0bffe07 	ldb	r2,-8(fp)
     794:	1009883a 	mov	r4,r2
     798:	00001fc0 	call	1fc <charToInt>
     79c:	e0bffc15 	stw	r2,-16(fp)
    int segInput = hex_to_7_seg(decNumber);
     7a0:	e13ffc17 	ldw	r4,-16(fp)
     7a4:	00003280 	call	328 <hex_to_7_seg>
     7a8:	e0bffd15 	stw	r2,-12(fp)
    /* Uitleg
     * Het adres van hexY_X bevat een X aantal bits als voorbeeld hex0_3 = 28 bits
     * De hexto7Seg returned het getal wat nodig is om de goede bits van het hex display aan te sturen
     * Maar je wilt dit naar een specifiek gedeelte van de 28 bits schrijven, de 1e 7 = hex0 daarna hex1 etc. dit kan doormiddel van een mask(0x7F)
     */
    if(displayNumber == 0)
     7ac:	e0bfff17 	ldw	r2,-4(fp)
     7b0:	1000041e 	bne	r2,zero,7c4 <write7SegDisplay+0x50>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, (segInput));
     7b4:	008000b4 	movhi	r2,2
     7b8:	10840c04 	addi	r2,r2,4144
     7bc:	e0fffd17 	ldw	r3,-12(fp)
     7c0:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 1)
     7c4:	e0bfff17 	ldw	r2,-4(fp)
     7c8:	10800058 	cmpnei	r2,r2,1
     7cc:	1000091e 	bne	r2,zero,7f4 <write7SegDisplay+0x80>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, ((segInput << 7) | IORD_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE)));
     7d0:	e0bffd17 	ldw	r2,-12(fp)
     7d4:	100691fa 	slli	r3,r2,7
     7d8:	008000b4 	movhi	r2,2
     7dc:	10840c04 	addi	r2,r2,4144
     7e0:	10800037 	ldwio	r2,0(r2)
     7e4:	1886b03a 	or	r3,r3,r2
     7e8:	008000b4 	movhi	r2,2
     7ec:	10840c04 	addi	r2,r2,4144
     7f0:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 2)
     7f4:	e0bfff17 	ldw	r2,-4(fp)
     7f8:	10800098 	cmpnei	r2,r2,2
     7fc:	1000091e 	bne	r2,zero,824 <write7SegDisplay+0xb0>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, ((segInput << 14) | IORD_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE)));
     800:	e0bffd17 	ldw	r2,-12(fp)
     804:	100693ba 	slli	r3,r2,14
     808:	008000b4 	movhi	r2,2
     80c:	10840c04 	addi	r2,r2,4144
     810:	10800037 	ldwio	r2,0(r2)
     814:	1886b03a 	or	r3,r3,r2
     818:	008000b4 	movhi	r2,2
     81c:	10840c04 	addi	r2,r2,4144
     820:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 3)
     824:	e0bfff17 	ldw	r2,-4(fp)
     828:	108000d8 	cmpnei	r2,r2,3
     82c:	1000091e 	bne	r2,zero,854 <write7SegDisplay+0xe0>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE, ((segInput << 21) | IORD_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE)));
     830:	e0bffd17 	ldw	r2,-12(fp)
     834:	1006957a 	slli	r3,r2,21
     838:	008000b4 	movhi	r2,2
     83c:	10840c04 	addi	r2,r2,4144
     840:	10800037 	ldwio	r2,0(r2)
     844:	1886b03a 	or	r3,r3,r2
     848:	008000b4 	movhi	r2,2
     84c:	10840c04 	addi	r2,r2,4144
     850:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 4)
     854:	e0bfff17 	ldw	r2,-4(fp)
     858:	10800118 	cmpnei	r2,r2,4
     85c:	1000041e 	bne	r2,zero,870 <write7SegDisplay+0xfc>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE, (segInput));
     860:	008000b4 	movhi	r2,2
     864:	10840804 	addi	r2,r2,4128
     868:	e0fffd17 	ldw	r3,-12(fp)
     86c:	10c00035 	stwio	r3,0(r2)
    if(displayNumber == 5)
     870:	e0bfff17 	ldw	r2,-4(fp)
     874:	10800158 	cmpnei	r2,r2,5
     878:	1000091e 	bne	r2,zero,8a0 <write7SegDisplay+0x12c>
    	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE, ((segInput << 7) | IORD_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE)));
     87c:	e0bffd17 	ldw	r2,-12(fp)
     880:	100691fa 	slli	r3,r2,7
     884:	008000b4 	movhi	r2,2
     888:	10840804 	addi	r2,r2,4128
     88c:	10800037 	ldwio	r2,0(r2)
     890:	1886b03a 	or	r3,r3,r2
     894:	008000b4 	movhi	r2,2
     898:	10840804 	addi	r2,r2,4128
     89c:	10c00035 	stwio	r3,0(r2)
}
     8a0:	0001883a 	nop
     8a4:	e037883a 	mov	sp,fp
     8a8:	dfc00117 	ldw	ra,4(sp)
     8ac:	df000017 	ldw	fp,0(sp)
     8b0:	dec00204 	addi	sp,sp,8
     8b4:	f800283a 	ret

000008b8 <dec2ToHex>:

char* dec2ToHex(int decimalnum)
{
     8b8:	defffa04 	addi	sp,sp,-24
     8bc:	df000515 	stw	fp,20(sp)
     8c0:	df000504 	addi	fp,sp,20
     8c4:	e13fff15 	stw	r4,-4(fp)
    int quotient, remainder;
    int j = 0;
     8c8:	e03ffc15 	stw	zero,-16(fp)
    static char hexadecimalnum[MAX_HEX_SIZE];

    for(int i = 0; i < MAX_HEX_SIZE; i++)
     8cc:	e03ffd15 	stw	zero,-12(fp)
     8d0:	00000806 	br	8f4 <dec2ToHex+0x3c>
        hexadecimalnum[i] = '0';
     8d4:	e0fffd17 	ldw	r3,-12(fp)
     8d8:	d0a6cd04 	addi	r2,gp,-25804
     8dc:	1885883a 	add	r2,r3,r2
     8e0:	00c00c04 	movi	r3,48
     8e4:	10c00005 	stb	r3,0(r2)
{
    int quotient, remainder;
    int j = 0;
    static char hexadecimalnum[MAX_HEX_SIZE];

    for(int i = 0; i < MAX_HEX_SIZE; i++)
     8e8:	e0bffd17 	ldw	r2,-12(fp)
     8ec:	10800044 	addi	r2,r2,1
     8f0:	e0bffd15 	stw	r2,-12(fp)
     8f4:	e0bffd17 	ldw	r2,-12(fp)
     8f8:	10800190 	cmplti	r2,r2,6
     8fc:	103ff51e 	bne	r2,zero,8d4 <__alt_data_end+0xfffe14d4>
        hexadecimalnum[i] = '0';

    quotient = decimalnum;
     900:	e0bfff17 	ldw	r2,-4(fp)
     904:	e0bffb15 	stw	r2,-20(fp)

    while (quotient != 0)
     908:	00002506 	br	9a0 <dec2ToHex+0xe8>
    {
        remainder = quotient % 16;
     90c:	e0fffb17 	ldw	r3,-20(fp)
     910:	00a00034 	movhi	r2,32768
     914:	108003c4 	addi	r2,r2,15
     918:	1884703a 	and	r2,r3,r2
     91c:	1000040e 	bge	r2,zero,930 <dec2ToHex+0x78>
     920:	10bfffc4 	addi	r2,r2,-1
     924:	00fffc04 	movi	r3,-16
     928:	10c4b03a 	or	r2,r2,r3
     92c:	10800044 	addi	r2,r2,1
     930:	e0bffe15 	stw	r2,-8(fp)
        if (remainder < 10)
     934:	e0bffe17 	ldw	r2,-8(fp)
     938:	10800288 	cmpgei	r2,r2,10
     93c:	10000a1e 	bne	r2,zero,968 <dec2ToHex+0xb0>
            hexadecimalnum[j++] = 48 + remainder;
     940:	e0bffc17 	ldw	r2,-16(fp)
     944:	10c00044 	addi	r3,r2,1
     948:	e0fffc15 	stw	r3,-16(fp)
     94c:	e0fffe17 	ldw	r3,-8(fp)
     950:	18c00c04 	addi	r3,r3,48
     954:	1809883a 	mov	r4,r3
     958:	d0e6cd04 	addi	r3,gp,-25804
     95c:	10c5883a 	add	r2,r2,r3
     960:	11000005 	stb	r4,0(r2)
     964:	00000906 	br	98c <dec2ToHex+0xd4>
        else
            hexadecimalnum[j++] = 55 + remainder;
     968:	e0bffc17 	ldw	r2,-16(fp)
     96c:	10c00044 	addi	r3,r2,1
     970:	e0fffc15 	stw	r3,-16(fp)
     974:	e0fffe17 	ldw	r3,-8(fp)
     978:	18c00dc4 	addi	r3,r3,55
     97c:	1809883a 	mov	r4,r3
     980:	d0e6cd04 	addi	r3,gp,-25804
     984:	10c5883a 	add	r2,r2,r3
     988:	11000005 	stb	r4,0(r2)
        quotient = quotient / 16;
     98c:	e0bffb17 	ldw	r2,-20(fp)
     990:	1000010e 	bge	r2,zero,998 <dec2ToHex+0xe0>
     994:	108003c4 	addi	r2,r2,15
     998:	1005d13a 	srai	r2,r2,4
     99c:	e0bffb15 	stw	r2,-20(fp)
    for(int i = 0; i < MAX_HEX_SIZE; i++)
        hexadecimalnum[i] = '0';

    quotient = decimalnum;

    while (quotient != 0)
     9a0:	e0bffb17 	ldw	r2,-20(fp)
     9a4:	103fd91e 	bne	r2,zero,90c <__alt_data_end+0xfffe150c>
            hexadecimalnum[j++] = 48 + remainder;
        else
            hexadecimalnum[j++] = 55 + remainder;
        quotient = quotient / 16;
    }
    return hexadecimalnum;
     9a8:	d0a6cd04 	addi	r2,gp,-25804
}
     9ac:	e037883a 	mov	sp,fp
     9b0:	df000017 	ldw	fp,0(sp)
     9b4:	dec00104 	addi	sp,sp,4
     9b8:	f800283a 	ret

000009bc <main>:


int main()
{
     9bc:	defffe04 	addi	sp,sp,-8
     9c0:	dfc00115 	stw	ra,4(sp)
     9c4:	df000015 	stw	fp,0(sp)
     9c8:	d839883a 	mov	fp,sp
  IOWR_ALTERA_AVALON_PIO_DATA(HEX0_3_BASE,0);
     9cc:	0007883a 	mov	r3,zero
     9d0:	008000b4 	movhi	r2,2
     9d4:	10840c04 	addi	r2,r2,4144
     9d8:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_PIO_DATA(HEX4_5_BASE,0);
     9dc:	0007883a 	mov	r3,zero
     9e0:	008000b4 	movhi	r2,2
     9e4:	10840804 	addi	r2,r2,4128
     9e8:	10c00035 	stwio	r3,0(r2)
  init_interrupt();
     9ec:	00004880 	call	488 <init_interrupt>

  while(1);
     9f0:	003fff06 	br	9f0 <__alt_data_end+0xfffe15f0>

000009f4 <_printf_r>:
     9f4:	defffd04 	addi	sp,sp,-12
     9f8:	2805883a 	mov	r2,r5
     9fc:	dfc00015 	stw	ra,0(sp)
     a00:	d9800115 	stw	r6,4(sp)
     a04:	d9c00215 	stw	r7,8(sp)
     a08:	21400217 	ldw	r5,8(r4)
     a0c:	d9c00104 	addi	r7,sp,4
     a10:	100d883a 	mov	r6,r2
     a14:	0000bf40 	call	bf4 <___vfprintf_internal_r>
     a18:	dfc00017 	ldw	ra,0(sp)
     a1c:	dec00304 	addi	sp,sp,12
     a20:	f800283a 	ret

00000a24 <printf>:
     a24:	defffc04 	addi	sp,sp,-16
     a28:	dfc00015 	stw	ra,0(sp)
     a2c:	d9400115 	stw	r5,4(sp)
     a30:	d9800215 	stw	r6,8(sp)
     a34:	d9c00315 	stw	r7,12(sp)
     a38:	00800074 	movhi	r2,1
     a3c:	10878d04 	addi	r2,r2,7732
     a40:	10800017 	ldw	r2,0(r2)
     a44:	200b883a 	mov	r5,r4
     a48:	d9800104 	addi	r6,sp,4
     a4c:	11000217 	ldw	r4,8(r2)
     a50:	0002ed00 	call	2ed0 <__vfprintf_internal>
     a54:	dfc00017 	ldw	ra,0(sp)
     a58:	dec00404 	addi	sp,sp,16
     a5c:	f800283a 	ret

00000a60 <strcmp>:
     a60:	2144b03a 	or	r2,r4,r5
     a64:	108000cc 	andi	r2,r2,3
     a68:	1000171e 	bne	r2,zero,ac8 <strcmp+0x68>
     a6c:	20800017 	ldw	r2,0(r4)
     a70:	28c00017 	ldw	r3,0(r5)
     a74:	10c0141e 	bne	r2,r3,ac8 <strcmp+0x68>
     a78:	027fbff4 	movhi	r9,65279
     a7c:	4a7fbfc4 	addi	r9,r9,-257
     a80:	0086303a 	nor	r3,zero,r2
     a84:	02202074 	movhi	r8,32897
     a88:	1245883a 	add	r2,r2,r9
     a8c:	42202004 	addi	r8,r8,-32640
     a90:	10c4703a 	and	r2,r2,r3
     a94:	1204703a 	and	r2,r2,r8
     a98:	10000226 	beq	r2,zero,aa4 <strcmp+0x44>
     a9c:	00002306 	br	b2c <strcmp+0xcc>
     aa0:	1000221e 	bne	r2,zero,b2c <strcmp+0xcc>
     aa4:	21000104 	addi	r4,r4,4
     aa8:	20c00017 	ldw	r3,0(r4)
     aac:	29400104 	addi	r5,r5,4
     ab0:	29800017 	ldw	r6,0(r5)
     ab4:	1a4f883a 	add	r7,r3,r9
     ab8:	00c4303a 	nor	r2,zero,r3
     abc:	3884703a 	and	r2,r7,r2
     ac0:	1204703a 	and	r2,r2,r8
     ac4:	19bff626 	beq	r3,r6,aa0 <__alt_data_end+0xfffe16a0>
     ac8:	20800003 	ldbu	r2,0(r4)
     acc:	10c03fcc 	andi	r3,r2,255
     ad0:	18c0201c 	xori	r3,r3,128
     ad4:	18ffe004 	addi	r3,r3,-128
     ad8:	18000c26 	beq	r3,zero,b0c <strcmp+0xac>
     adc:	29800007 	ldb	r6,0(r5)
     ae0:	19800326 	beq	r3,r6,af0 <strcmp+0x90>
     ae4:	00001306 	br	b34 <strcmp+0xd4>
     ae8:	29800007 	ldb	r6,0(r5)
     aec:	11800b1e 	bne	r2,r6,b1c <strcmp+0xbc>
     af0:	21000044 	addi	r4,r4,1
     af4:	20c00003 	ldbu	r3,0(r4)
     af8:	29400044 	addi	r5,r5,1
     afc:	18803fcc 	andi	r2,r3,255
     b00:	1080201c 	xori	r2,r2,128
     b04:	10bfe004 	addi	r2,r2,-128
     b08:	103ff71e 	bne	r2,zero,ae8 <__alt_data_end+0xfffe16e8>
     b0c:	0007883a 	mov	r3,zero
     b10:	28800003 	ldbu	r2,0(r5)
     b14:	1885c83a 	sub	r2,r3,r2
     b18:	f800283a 	ret
     b1c:	28800003 	ldbu	r2,0(r5)
     b20:	18c03fcc 	andi	r3,r3,255
     b24:	1885c83a 	sub	r2,r3,r2
     b28:	f800283a 	ret
     b2c:	0005883a 	mov	r2,zero
     b30:	f800283a 	ret
     b34:	10c03fcc 	andi	r3,r2,255
     b38:	003ff506 	br	b10 <__alt_data_end+0xfffe1710>

00000b3c <strncat>:
     b3c:	20c000cc 	andi	r3,r4,3
     b40:	2005883a 	mov	r2,r4
     b44:	1800271e 	bne	r3,zero,be4 <strncat+0xa8>
     b48:	21000017 	ldw	r4,0(r4)
     b4c:	02bfbff4 	movhi	r10,65279
     b50:	52bfbfc4 	addi	r10,r10,-257
     b54:	0106303a 	nor	r3,zero,r4
     b58:	02602074 	movhi	r9,32897
     b5c:	2289883a 	add	r4,r4,r10
     b60:	20c8703a 	and	r4,r4,r3
     b64:	4a602004 	addi	r9,r9,-32640
     b68:	2248703a 	and	r4,r4,r9
     b6c:	1007883a 	mov	r3,r2
     b70:	2000071e 	bne	r4,zero,b90 <strncat+0x54>
     b74:	18c00104 	addi	r3,r3,4
     b78:	19c00017 	ldw	r7,0(r3)
     b7c:	3a91883a 	add	r8,r7,r10
     b80:	01ce303a 	nor	r7,zero,r7
     b84:	41ce703a 	and	r7,r8,r7
     b88:	3a4e703a 	and	r7,r7,r9
     b8c:	383ff926 	beq	r7,zero,b74 <__alt_data_end+0xfffe1774>
     b90:	19000007 	ldb	r4,0(r3)
     b94:	20000326 	beq	r4,zero,ba4 <strncat+0x68>
     b98:	18c00044 	addi	r3,r3,1
     b9c:	19c00007 	ldb	r7,0(r3)
     ba0:	383ffd1e 	bne	r7,zero,b98 <__alt_data_end+0xfffe1798>
     ba4:	1811883a 	mov	r8,r3
     ba8:	1993883a 	add	r9,r3,r6
     bac:	00000a06 	br	bd8 <strncat+0x9c>
     bb0:	29c00003 	ldbu	r7,0(r5)
     bb4:	18c00044 	addi	r3,r3,1
     bb8:	29400044 	addi	r5,r5,1
     bbc:	41c00005 	stb	r7,0(r8)
     bc0:	39c03fcc 	andi	r7,r7,255
     bc4:	39c0201c 	xori	r7,r7,128
     bc8:	39ffe004 	addi	r7,r7,-128
     bcc:	38000426 	beq	r7,zero,be0 <strncat+0xa4>
     bd0:	30000626 	beq	r6,zero,bec <strncat+0xb0>
     bd4:	42000044 	addi	r8,r8,1
     bd8:	31bfffc4 	addi	r6,r6,-1
     bdc:	1a7ff41e 	bne	r3,r9,bb0 <__alt_data_end+0xfffe17b0>
     be0:	f800283a 	ret
     be4:	2007883a 	mov	r3,r4
     be8:	003fe906 	br	b90 <__alt_data_end+0xfffe1790>
     bec:	18000005 	stb	zero,0(r3)
     bf0:	003ff806 	br	bd4 <__alt_data_end+0xfffe17d4>

00000bf4 <___vfprintf_internal_r>:
     bf4:	deffb804 	addi	sp,sp,-288
     bf8:	dfc04715 	stw	ra,284(sp)
     bfc:	ddc04515 	stw	r23,276(sp)
     c00:	dd404315 	stw	r21,268(sp)
     c04:	d9002d15 	stw	r4,180(sp)
     c08:	282f883a 	mov	r23,r5
     c0c:	302b883a 	mov	r21,r6
     c10:	d9c02e15 	stw	r7,184(sp)
     c14:	df004615 	stw	fp,280(sp)
     c18:	dd804415 	stw	r22,272(sp)
     c1c:	dd004215 	stw	r20,264(sp)
     c20:	dcc04115 	stw	r19,260(sp)
     c24:	dc804015 	stw	r18,256(sp)
     c28:	dc403f15 	stw	r17,252(sp)
     c2c:	dc003e15 	stw	r16,248(sp)
     c30:	000566c0 	call	566c <_localeconv_r>
     c34:	10800017 	ldw	r2,0(r2)
     c38:	1009883a 	mov	r4,r2
     c3c:	d8803415 	stw	r2,208(sp)
     c40:	00076740 	call	7674 <strlen>
     c44:	d8803715 	stw	r2,220(sp)
     c48:	d8802d17 	ldw	r2,180(sp)
     c4c:	10000226 	beq	r2,zero,c58 <___vfprintf_internal_r+0x64>
     c50:	10800e17 	ldw	r2,56(r2)
     c54:	1000fb26 	beq	r2,zero,1044 <___vfprintf_internal_r+0x450>
     c58:	b880030b 	ldhu	r2,12(r23)
     c5c:	10c8000c 	andi	r3,r2,8192
     c60:	1800061e 	bne	r3,zero,c7c <___vfprintf_internal_r+0x88>
     c64:	b9001917 	ldw	r4,100(r23)
     c68:	00f7ffc4 	movi	r3,-8193
     c6c:	10880014 	ori	r2,r2,8192
     c70:	20c6703a 	and	r3,r4,r3
     c74:	b880030d 	sth	r2,12(r23)
     c78:	b8c01915 	stw	r3,100(r23)
     c7c:	10c0020c 	andi	r3,r2,8
     c80:	1800c326 	beq	r3,zero,f90 <___vfprintf_internal_r+0x39c>
     c84:	b8c00417 	ldw	r3,16(r23)
     c88:	1800c126 	beq	r3,zero,f90 <___vfprintf_internal_r+0x39c>
     c8c:	1080068c 	andi	r2,r2,26
     c90:	00c00284 	movi	r3,10
     c94:	10c0c626 	beq	r2,r3,fb0 <___vfprintf_internal_r+0x3bc>
     c98:	d8c00404 	addi	r3,sp,16
     c9c:	05000074 	movhi	r20,1
     ca0:	d9001e04 	addi	r4,sp,120
     ca4:	a5003284 	addi	r20,r20,202
     ca8:	d8c01e15 	stw	r3,120(sp)
     cac:	d8002015 	stw	zero,128(sp)
     cb0:	d8001f15 	stw	zero,124(sp)
     cb4:	d8003315 	stw	zero,204(sp)
     cb8:	d8003615 	stw	zero,216(sp)
     cbc:	d8003815 	stw	zero,224(sp)
     cc0:	1811883a 	mov	r8,r3
     cc4:	d8003915 	stw	zero,228(sp)
     cc8:	d8003a15 	stw	zero,232(sp)
     ccc:	d8002f15 	stw	zero,188(sp)
     cd0:	d9002815 	stw	r4,160(sp)
     cd4:	a8800007 	ldb	r2,0(r21)
     cd8:	10028b26 	beq	r2,zero,1708 <___vfprintf_internal_r+0xb14>
     cdc:	00c00944 	movi	r3,37
     ce0:	a823883a 	mov	r17,r21
     ce4:	10c0021e 	bne	r2,r3,cf0 <___vfprintf_internal_r+0xfc>
     ce8:	00001406 	br	d3c <___vfprintf_internal_r+0x148>
     cec:	10c00326 	beq	r2,r3,cfc <___vfprintf_internal_r+0x108>
     cf0:	8c400044 	addi	r17,r17,1
     cf4:	88800007 	ldb	r2,0(r17)
     cf8:	103ffc1e 	bne	r2,zero,cec <__alt_data_end+0xfffe18ec>
     cfc:	8d61c83a 	sub	r16,r17,r21
     d00:	80000e26 	beq	r16,zero,d3c <___vfprintf_internal_r+0x148>
     d04:	d8c02017 	ldw	r3,128(sp)
     d08:	d8801f17 	ldw	r2,124(sp)
     d0c:	45400015 	stw	r21,0(r8)
     d10:	1c07883a 	add	r3,r3,r16
     d14:	10800044 	addi	r2,r2,1
     d18:	d8c02015 	stw	r3,128(sp)
     d1c:	44000115 	stw	r16,4(r8)
     d20:	d8801f15 	stw	r2,124(sp)
     d24:	00c001c4 	movi	r3,7
     d28:	1880a916 	blt	r3,r2,fd0 <___vfprintf_internal_r+0x3dc>
     d2c:	42000204 	addi	r8,r8,8
     d30:	d9402f17 	ldw	r5,188(sp)
     d34:	2c0b883a 	add	r5,r5,r16
     d38:	d9402f15 	stw	r5,188(sp)
     d3c:	88800007 	ldb	r2,0(r17)
     d40:	1000aa26 	beq	r2,zero,fec <___vfprintf_internal_r+0x3f8>
     d44:	8d400044 	addi	r21,r17,1
     d48:	8c400047 	ldb	r17,1(r17)
     d4c:	0021883a 	mov	r16,zero
     d50:	00bfffc4 	movi	r2,-1
     d54:	0025883a 	mov	r18,zero
     d58:	dc002905 	stb	r16,164(sp)
     d5c:	d8002785 	stb	zero,158(sp)
     d60:	d8002b05 	stb	zero,172(sp)
     d64:	d8802a15 	stw	r2,168(sp)
     d68:	d8003115 	stw	zero,196(sp)
     d6c:	04c01604 	movi	r19,88
     d70:	05800244 	movi	r22,9
     d74:	9021883a 	mov	r16,r18
     d78:	4039883a 	mov	fp,r8
     d7c:	ad400044 	addi	r21,r21,1
     d80:	88bff804 	addi	r2,r17,-32
     d84:	98833236 	bltu	r19,r2,1a50 <___vfprintf_internal_r+0xe5c>
     d88:	100490ba 	slli	r2,r2,2
     d8c:	00c00034 	movhi	r3,0
     d90:	18c36804 	addi	r3,r3,3488
     d94:	10c5883a 	add	r2,r2,r3
     d98:	10800017 	ldw	r2,0(r2)
     d9c:	1000683a 	jmp	r2
     da0:	00001948 	cmpgei	zero,zero,101
     da4:	00001a50 	cmplti	zero,zero,105
     da8:	00001a50 	cmplti	zero,zero,105
     dac:	00001968 	cmpgeui	zero,zero,101
     db0:	00001a50 	cmplti	zero,zero,105
     db4:	00001a50 	cmplti	zero,zero,105
     db8:	00001a50 	cmplti	zero,zero,105
     dbc:	00001a50 	cmplti	zero,zero,105
     dc0:	00001a50 	cmplti	zero,zero,105
     dc4:	00001a50 	cmplti	zero,zero,105
     dc8:	00001050 	cmplti	zero,zero,65
     dcc:	00001858 	cmpnei	zero,zero,97
     dd0:	00001a50 	cmplti	zero,zero,105
     dd4:	00000f14 	movui	zero,60
     dd8:	00001074 	movhi	zero,65
     ddc:	00001a50 	cmplti	zero,zero,105
     de0:	000010c4 	movi	zero,67
     de4:	000010d0 	cmplti	zero,zero,67
     de8:	000010d0 	cmplti	zero,zero,67
     dec:	000010d0 	cmplti	zero,zero,67
     df0:	000010d0 	cmplti	zero,zero,67
     df4:	000010d0 	cmplti	zero,zero,67
     df8:	000010d0 	cmplti	zero,zero,67
     dfc:	000010d0 	cmplti	zero,zero,67
     e00:	000010d0 	cmplti	zero,zero,67
     e04:	000010d0 	cmplti	zero,zero,67
     e08:	00001a50 	cmplti	zero,zero,105
     e0c:	00001a50 	cmplti	zero,zero,105
     e10:	00001a50 	cmplti	zero,zero,105
     e14:	00001a50 	cmplti	zero,zero,105
     e18:	00001a50 	cmplti	zero,zero,105
     e1c:	00001a50 	cmplti	zero,zero,105
     e20:	00001a50 	cmplti	zero,zero,105
     e24:	00001a50 	cmplti	zero,zero,105
     e28:	00001a50 	cmplti	zero,zero,105
     e2c:	00001a50 	cmplti	zero,zero,105
     e30:	0000110c 	andi	zero,zero,68
     e34:	000011d4 	movui	zero,71
     e38:	00001a50 	cmplti	zero,zero,105
     e3c:	000011d4 	movui	zero,71
     e40:	00001a50 	cmplti	zero,zero,105
     e44:	00001a50 	cmplti	zero,zero,105
     e48:	00001a50 	cmplti	zero,zero,105
     e4c:	00001a50 	cmplti	zero,zero,105
     e50:	00001280 	call	128 <alt_irq_handler+0x3c>
     e54:	00001a50 	cmplti	zero,zero,105
     e58:	00001a50 	cmplti	zero,zero,105
     e5c:	0000128c 	andi	zero,zero,74
     e60:	00001a50 	cmplti	zero,zero,105
     e64:	00001a50 	cmplti	zero,zero,105
     e68:	00001a50 	cmplti	zero,zero,105
     e6c:	00001a50 	cmplti	zero,zero,105
     e70:	00001a50 	cmplti	zero,zero,105
     e74:	00001710 	cmplti	zero,zero,92
     e78:	00001a50 	cmplti	zero,zero,105
     e7c:	00001a50 	cmplti	zero,zero,105
     e80:	0000177c 	xorhi	zero,zero,93
     e84:	00001a50 	cmplti	zero,zero,105
     e88:	00001a50 	cmplti	zero,zero,105
     e8c:	00001a50 	cmplti	zero,zero,105
     e90:	00001a50 	cmplti	zero,zero,105
     e94:	00001a50 	cmplti	zero,zero,105
     e98:	00001a50 	cmplti	zero,zero,105
     e9c:	00001a50 	cmplti	zero,zero,105
     ea0:	00001a50 	cmplti	zero,zero,105
     ea4:	00001a50 	cmplti	zero,zero,105
     ea8:	00001a50 	cmplti	zero,zero,105
     eac:	000019f4 	movhi	zero,103
     eb0:	00001974 	movhi	zero,101
     eb4:	000011d4 	movui	zero,71
     eb8:	000011d4 	movui	zero,71
     ebc:	000011d4 	movui	zero,71
     ec0:	00001994 	movui	zero,102
     ec4:	00001974 	movhi	zero,101
     ec8:	00001a50 	cmplti	zero,zero,105
     ecc:	00001a50 	cmplti	zero,zero,105
     ed0:	000019a0 	cmpeqi	zero,zero,102
     ed4:	00001a50 	cmplti	zero,zero,105
     ed8:	000019b4 	movhi	zero,102
     edc:	00001838 	rdprs	zero,zero,96
     ee0:	00000f20 	cmpeqi	zero,zero,60
     ee4:	00001870 	cmpltui	zero,zero,97
     ee8:	00001a50 	cmplti	zero,zero,105
     eec:	0000187c 	xorhi	zero,zero,97
     ef0:	00001a50 	cmplti	zero,zero,105
     ef4:	000018e0 	cmpeqi	zero,zero,99
     ef8:	00001a50 	cmplti	zero,zero,105
     efc:	00001a50 	cmplti	zero,zero,105
     f00:	00001900 	call	190 <alt_irq_handler+0xa4>
     f04:	d8c03117 	ldw	r3,196(sp)
     f08:	d8802e15 	stw	r2,184(sp)
     f0c:	00c7c83a 	sub	r3,zero,r3
     f10:	d8c03115 	stw	r3,196(sp)
     f14:	84000114 	ori	r16,r16,4
     f18:	ac400007 	ldb	r17,0(r21)
     f1c:	003f9706 	br	d7c <__alt_data_end+0xfffe197c>
     f20:	00800c04 	movi	r2,48
     f24:	d8802705 	stb	r2,156(sp)
     f28:	00801e04 	movi	r2,120
     f2c:	d8802745 	stb	r2,157(sp)
     f30:	d9002a17 	ldw	r4,168(sp)
     f34:	d8802e17 	ldw	r2,184(sp)
     f38:	d8002785 	stb	zero,158(sp)
     f3c:	e011883a 	mov	r8,fp
     f40:	10c00104 	addi	r3,r2,4
     f44:	14c00017 	ldw	r19,0(r2)
     f48:	002d883a 	mov	r22,zero
     f4c:	80800094 	ori	r2,r16,2
     f50:	2002ca16 	blt	r4,zero,1a7c <___vfprintf_internal_r+0xe88>
     f54:	00bfdfc4 	movi	r2,-129
     f58:	80a4703a 	and	r18,r16,r2
     f5c:	d8c02e15 	stw	r3,184(sp)
     f60:	94800094 	ori	r18,r18,2
     f64:	9802b41e 	bne	r19,zero,1a38 <___vfprintf_internal_r+0xe44>
     f68:	01400074 	movhi	r5,1
     f6c:	29402b04 	addi	r5,r5,172
     f70:	d9403915 	stw	r5,228(sp)
     f74:	04401e04 	movi	r17,120
     f78:	d8802a17 	ldw	r2,168(sp)
     f7c:	0039883a 	mov	fp,zero
     f80:	1001fa26 	beq	r2,zero,176c <___vfprintf_internal_r+0xb78>
     f84:	0027883a 	mov	r19,zero
     f88:	002d883a 	mov	r22,zero
     f8c:	00021906 	br	17f4 <___vfprintf_internal_r+0xc00>
     f90:	d9002d17 	ldw	r4,180(sp)
     f94:	b80b883a 	mov	r5,r23
     f98:	0002fa80 	call	2fa8 <__swsetup_r>
     f9c:	1005dc1e 	bne	r2,zero,2710 <___vfprintf_internal_r+0x1b1c>
     fa0:	b880030b 	ldhu	r2,12(r23)
     fa4:	00c00284 	movi	r3,10
     fa8:	1080068c 	andi	r2,r2,26
     fac:	10ff3a1e 	bne	r2,r3,c98 <__alt_data_end+0xfffe1898>
     fb0:	b880038f 	ldh	r2,14(r23)
     fb4:	103f3816 	blt	r2,zero,c98 <__alt_data_end+0xfffe1898>
     fb8:	d9c02e17 	ldw	r7,184(sp)
     fbc:	d9002d17 	ldw	r4,180(sp)
     fc0:	a80d883a 	mov	r6,r21
     fc4:	b80b883a 	mov	r5,r23
     fc8:	0002eec0 	call	2eec <__sbprintf>
     fcc:	00001106 	br	1014 <___vfprintf_internal_r+0x420>
     fd0:	d9002d17 	ldw	r4,180(sp)
     fd4:	d9801e04 	addi	r6,sp,120
     fd8:	b80b883a 	mov	r5,r23
     fdc:	00078080 	call	7808 <__sprint_r>
     fe0:	1000081e 	bne	r2,zero,1004 <___vfprintf_internal_r+0x410>
     fe4:	da000404 	addi	r8,sp,16
     fe8:	003f5106 	br	d30 <__alt_data_end+0xfffe1930>
     fec:	d8802017 	ldw	r2,128(sp)
     ff0:	10000426 	beq	r2,zero,1004 <___vfprintf_internal_r+0x410>
     ff4:	d9002d17 	ldw	r4,180(sp)
     ff8:	d9801e04 	addi	r6,sp,120
     ffc:	b80b883a 	mov	r5,r23
    1000:	00078080 	call	7808 <__sprint_r>
    1004:	b880030b 	ldhu	r2,12(r23)
    1008:	1080100c 	andi	r2,r2,64
    100c:	1005c01e 	bne	r2,zero,2710 <___vfprintf_internal_r+0x1b1c>
    1010:	d8802f17 	ldw	r2,188(sp)
    1014:	dfc04717 	ldw	ra,284(sp)
    1018:	df004617 	ldw	fp,280(sp)
    101c:	ddc04517 	ldw	r23,276(sp)
    1020:	dd804417 	ldw	r22,272(sp)
    1024:	dd404317 	ldw	r21,268(sp)
    1028:	dd004217 	ldw	r20,264(sp)
    102c:	dcc04117 	ldw	r19,260(sp)
    1030:	dc804017 	ldw	r18,256(sp)
    1034:	dc403f17 	ldw	r17,252(sp)
    1038:	dc003e17 	ldw	r16,248(sp)
    103c:	dec04804 	addi	sp,sp,288
    1040:	f800283a 	ret
    1044:	d9002d17 	ldw	r4,180(sp)
    1048:	0004fb40 	call	4fb4 <__sinit>
    104c:	003f0206 	br	c58 <__alt_data_end+0xfffe1858>
    1050:	d9002e17 	ldw	r4,184(sp)
    1054:	d9402e17 	ldw	r5,184(sp)
    1058:	21000017 	ldw	r4,0(r4)
    105c:	28800104 	addi	r2,r5,4
    1060:	d9003115 	stw	r4,196(sp)
    1064:	203fa716 	blt	r4,zero,f04 <__alt_data_end+0xfffe1b04>
    1068:	d8802e15 	stw	r2,184(sp)
    106c:	ac400007 	ldb	r17,0(r21)
    1070:	003f4206 	br	d7c <__alt_data_end+0xfffe197c>
    1074:	ac400007 	ldb	r17,0(r21)
    1078:	01000a84 	movi	r4,42
    107c:	a8c00044 	addi	r3,r21,1
    1080:	89075826 	beq	r17,r4,2de4 <___vfprintf_internal_r+0x21f0>
    1084:	8cbff404 	addi	r18,r17,-48
    1088:	b486ae36 	bltu	r22,r18,2b44 <___vfprintf_internal_r+0x1f50>
    108c:	0009883a 	mov	r4,zero
    1090:	1823883a 	mov	r17,r3
    1094:	01400284 	movi	r5,10
    1098:	000b04c0 	call	b04c <__mulsi3>
    109c:	88c00007 	ldb	r3,0(r17)
    10a0:	1489883a 	add	r4,r2,r18
    10a4:	8d400044 	addi	r21,r17,1
    10a8:	1cbff404 	addi	r18,r3,-48
    10ac:	a823883a 	mov	r17,r21
    10b0:	b4bff82e 	bgeu	r22,r18,1094 <__alt_data_end+0xfffe1c94>
    10b4:	1823883a 	mov	r17,r3
    10b8:	2005f616 	blt	r4,zero,2894 <___vfprintf_internal_r+0x1ca0>
    10bc:	d9002a15 	stw	r4,168(sp)
    10c0:	003f2f06 	br	d80 <__alt_data_end+0xfffe1980>
    10c4:	84002014 	ori	r16,r16,128
    10c8:	ac400007 	ldb	r17,0(r21)
    10cc:	003f2b06 	br	d7c <__alt_data_end+0xfffe197c>
    10d0:	8cbff404 	addi	r18,r17,-48
    10d4:	d8003115 	stw	zero,196(sp)
    10d8:	0009883a 	mov	r4,zero
    10dc:	a823883a 	mov	r17,r21
    10e0:	01400284 	movi	r5,10
    10e4:	000b04c0 	call	b04c <__mulsi3>
    10e8:	88c00007 	ldb	r3,0(r17)
    10ec:	9089883a 	add	r4,r18,r2
    10f0:	ad400044 	addi	r21,r21,1
    10f4:	1cbff404 	addi	r18,r3,-48
    10f8:	a823883a 	mov	r17,r21
    10fc:	b4bff82e 	bgeu	r22,r18,10e0 <__alt_data_end+0xfffe1ce0>
    1100:	1823883a 	mov	r17,r3
    1104:	d9003115 	stw	r4,196(sp)
    1108:	003f1d06 	br	d80 <__alt_data_end+0xfffe1980>
    110c:	8025883a 	mov	r18,r16
    1110:	dc002903 	ldbu	r16,164(sp)
    1114:	e011883a 	mov	r8,fp
    1118:	84003fcc 	andi	r16,r16,255
    111c:	8007531e 	bne	r16,zero,2e6c <___vfprintf_internal_r+0x2278>
    1120:	94800414 	ori	r18,r18,16
    1124:	9080080c 	andi	r2,r18,32
    1128:	1003a326 	beq	r2,zero,1fb8 <___vfprintf_internal_r+0x13c4>
    112c:	d9002e17 	ldw	r4,184(sp)
    1130:	20800117 	ldw	r2,4(r4)
    1134:	24c00017 	ldw	r19,0(r4)
    1138:	21000204 	addi	r4,r4,8
    113c:	d9002e15 	stw	r4,184(sp)
    1140:	102d883a 	mov	r22,r2
    1144:	10047316 	blt	r2,zero,2314 <___vfprintf_internal_r+0x1720>
    1148:	d9002a17 	ldw	r4,168(sp)
    114c:	df002783 	ldbu	fp,158(sp)
    1150:	2003e416 	blt	r4,zero,20e4 <___vfprintf_internal_r+0x14f0>
    1154:	00ffdfc4 	movi	r3,-129
    1158:	9d84b03a 	or	r2,r19,r22
    115c:	90e4703a 	and	r18,r18,r3
    1160:	10018026 	beq	r2,zero,1764 <___vfprintf_internal_r+0xb70>
    1164:	b003ab26 	beq	r22,zero,2014 <___vfprintf_internal_r+0x1420>
    1168:	dc402915 	stw	r17,164(sp)
    116c:	dc001e04 	addi	r16,sp,120
    1170:	b023883a 	mov	r17,r22
    1174:	402d883a 	mov	r22,r8
    1178:	9809883a 	mov	r4,r19
    117c:	880b883a 	mov	r5,r17
    1180:	01800284 	movi	r6,10
    1184:	000f883a 	mov	r7,zero
    1188:	000a8d40 	call	a8d4 <__umoddi3>
    118c:	10800c04 	addi	r2,r2,48
    1190:	843fffc4 	addi	r16,r16,-1
    1194:	9809883a 	mov	r4,r19
    1198:	880b883a 	mov	r5,r17
    119c:	80800005 	stb	r2,0(r16)
    11a0:	01800284 	movi	r6,10
    11a4:	000f883a 	mov	r7,zero
    11a8:	000a2d80 	call	a2d8 <__udivdi3>
    11ac:	1027883a 	mov	r19,r2
    11b0:	10c4b03a 	or	r2,r2,r3
    11b4:	1823883a 	mov	r17,r3
    11b8:	103fef1e 	bne	r2,zero,1178 <__alt_data_end+0xfffe1d78>
    11bc:	d8c02817 	ldw	r3,160(sp)
    11c0:	dc402917 	ldw	r17,164(sp)
    11c4:	b011883a 	mov	r8,r22
    11c8:	1c07c83a 	sub	r3,r3,r16
    11cc:	d8c02b15 	stw	r3,172(sp)
    11d0:	00005f06 	br	1350 <___vfprintf_internal_r+0x75c>
    11d4:	8025883a 	mov	r18,r16
    11d8:	dc002903 	ldbu	r16,164(sp)
    11dc:	e011883a 	mov	r8,fp
    11e0:	84003fcc 	andi	r16,r16,255
    11e4:	80071e1e 	bne	r16,zero,2e60 <___vfprintf_internal_r+0x226c>
    11e8:	9080020c 	andi	r2,r18,8
    11ec:	1004af26 	beq	r2,zero,24ac <___vfprintf_internal_r+0x18b8>
    11f0:	d9002e17 	ldw	r4,184(sp)
    11f4:	d9402e17 	ldw	r5,184(sp)
    11f8:	d8802e17 	ldw	r2,184(sp)
    11fc:	21000017 	ldw	r4,0(r4)
    1200:	29400117 	ldw	r5,4(r5)
    1204:	10800204 	addi	r2,r2,8
    1208:	d9003615 	stw	r4,216(sp)
    120c:	d9403815 	stw	r5,224(sp)
    1210:	d8802e15 	stw	r2,184(sp)
    1214:	d9003617 	ldw	r4,216(sp)
    1218:	d9403817 	ldw	r5,224(sp)
    121c:	da003d15 	stw	r8,244(sp)
    1220:	04000044 	movi	r16,1
    1224:	00074700 	call	7470 <__fpclassifyd>
    1228:	da003d17 	ldw	r8,244(sp)
    122c:	1404441e 	bne	r2,r16,2340 <___vfprintf_internal_r+0x174c>
    1230:	d9003617 	ldw	r4,216(sp)
    1234:	d9403817 	ldw	r5,224(sp)
    1238:	000d883a 	mov	r6,zero
    123c:	000f883a 	mov	r7,zero
    1240:	000c4540 	call	c454 <__ledf2>
    1244:	da003d17 	ldw	r8,244(sp)
    1248:	1005e316 	blt	r2,zero,29d8 <___vfprintf_internal_r+0x1de4>
    124c:	df002783 	ldbu	fp,158(sp)
    1250:	008011c4 	movi	r2,71
    1254:	1445580e 	bge	r2,r17,27b8 <___vfprintf_internal_r+0x1bc4>
    1258:	04000074 	movhi	r16,1
    125c:	84002304 	addi	r16,r16,140
    1260:	00c000c4 	movi	r3,3
    1264:	00bfdfc4 	movi	r2,-129
    1268:	d8c02915 	stw	r3,164(sp)
    126c:	90a4703a 	and	r18,r18,r2
    1270:	d8c02b15 	stw	r3,172(sp)
    1274:	d8002a15 	stw	zero,168(sp)
    1278:	d8003215 	stw	zero,200(sp)
    127c:	00003a06 	br	1368 <___vfprintf_internal_r+0x774>
    1280:	84000214 	ori	r16,r16,8
    1284:	ac400007 	ldb	r17,0(r21)
    1288:	003ebc06 	br	d7c <__alt_data_end+0xfffe197c>
    128c:	8025883a 	mov	r18,r16
    1290:	dc002903 	ldbu	r16,164(sp)
    1294:	e011883a 	mov	r8,fp
    1298:	84003fcc 	andi	r16,r16,255
    129c:	8007001e 	bne	r16,zero,2ea0 <___vfprintf_internal_r+0x22ac>
    12a0:	94800414 	ori	r18,r18,16
    12a4:	9080080c 	andi	r2,r18,32
    12a8:	1002fa26 	beq	r2,zero,1e94 <___vfprintf_internal_r+0x12a0>
    12ac:	d9002e17 	ldw	r4,184(sp)
    12b0:	d9402a17 	ldw	r5,168(sp)
    12b4:	d8002785 	stb	zero,158(sp)
    12b8:	20800204 	addi	r2,r4,8
    12bc:	24c00017 	ldw	r19,0(r4)
    12c0:	25800117 	ldw	r22,4(r4)
    12c4:	2804b116 	blt	r5,zero,258c <___vfprintf_internal_r+0x1998>
    12c8:	013fdfc4 	movi	r4,-129
    12cc:	9d86b03a 	or	r3,r19,r22
    12d0:	d8802e15 	stw	r2,184(sp)
    12d4:	9124703a 	and	r18,r18,r4
    12d8:	1802fb1e 	bne	r3,zero,1ec8 <___vfprintf_internal_r+0x12d4>
    12dc:	d8c02a17 	ldw	r3,168(sp)
    12e0:	0039883a 	mov	fp,zero
    12e4:	1805e526 	beq	r3,zero,2a7c <___vfprintf_internal_r+0x1e88>
    12e8:	0027883a 	mov	r19,zero
    12ec:	002d883a 	mov	r22,zero
    12f0:	dc001e04 	addi	r16,sp,120
    12f4:	9806d0fa 	srli	r3,r19,3
    12f8:	b008977a 	slli	r4,r22,29
    12fc:	b02cd0fa 	srli	r22,r22,3
    1300:	9cc001cc 	andi	r19,r19,7
    1304:	98800c04 	addi	r2,r19,48
    1308:	843fffc4 	addi	r16,r16,-1
    130c:	20e6b03a 	or	r19,r4,r3
    1310:	80800005 	stb	r2,0(r16)
    1314:	9d86b03a 	or	r3,r19,r22
    1318:	183ff61e 	bne	r3,zero,12f4 <__alt_data_end+0xfffe1ef4>
    131c:	90c0004c 	andi	r3,r18,1
    1320:	18014126 	beq	r3,zero,1828 <___vfprintf_internal_r+0xc34>
    1324:	10803fcc 	andi	r2,r2,255
    1328:	1080201c 	xori	r2,r2,128
    132c:	10bfe004 	addi	r2,r2,-128
    1330:	00c00c04 	movi	r3,48
    1334:	10c13c26 	beq	r2,r3,1828 <___vfprintf_internal_r+0xc34>
    1338:	80ffffc5 	stb	r3,-1(r16)
    133c:	d8c02817 	ldw	r3,160(sp)
    1340:	80bfffc4 	addi	r2,r16,-1
    1344:	1021883a 	mov	r16,r2
    1348:	1887c83a 	sub	r3,r3,r2
    134c:	d8c02b15 	stw	r3,172(sp)
    1350:	d8802b17 	ldw	r2,172(sp)
    1354:	d9002a17 	ldw	r4,168(sp)
    1358:	1100010e 	bge	r2,r4,1360 <___vfprintf_internal_r+0x76c>
    135c:	2005883a 	mov	r2,r4
    1360:	d8802915 	stw	r2,164(sp)
    1364:	d8003215 	stw	zero,200(sp)
    1368:	e7003fcc 	andi	fp,fp,255
    136c:	e700201c 	xori	fp,fp,128
    1370:	e73fe004 	addi	fp,fp,-128
    1374:	e0000326 	beq	fp,zero,1384 <___vfprintf_internal_r+0x790>
    1378:	d8c02917 	ldw	r3,164(sp)
    137c:	18c00044 	addi	r3,r3,1
    1380:	d8c02915 	stw	r3,164(sp)
    1384:	90c0008c 	andi	r3,r18,2
    1388:	d8c02c15 	stw	r3,176(sp)
    138c:	18000326 	beq	r3,zero,139c <___vfprintf_internal_r+0x7a8>
    1390:	d8c02917 	ldw	r3,164(sp)
    1394:	18c00084 	addi	r3,r3,2
    1398:	d8c02915 	stw	r3,164(sp)
    139c:	90c0210c 	andi	r3,r18,132
    13a0:	d8c03015 	stw	r3,192(sp)
    13a4:	1801c51e 	bne	r3,zero,1abc <___vfprintf_internal_r+0xec8>
    13a8:	d9003117 	ldw	r4,196(sp)
    13ac:	d8c02917 	ldw	r3,164(sp)
    13b0:	20e7c83a 	sub	r19,r4,r3
    13b4:	04c1c10e 	bge	zero,r19,1abc <___vfprintf_internal_r+0xec8>
    13b8:	02400404 	movi	r9,16
    13bc:	d8c02017 	ldw	r3,128(sp)
    13c0:	d8801f17 	ldw	r2,124(sp)
    13c4:	4cc52f0e 	bge	r9,r19,2884 <___vfprintf_internal_r+0x1c90>
    13c8:	01400074 	movhi	r5,1
    13cc:	29403684 	addi	r5,r5,218
    13d0:	dc403b15 	stw	r17,236(sp)
    13d4:	d9403515 	stw	r5,212(sp)
    13d8:	9823883a 	mov	r17,r19
    13dc:	482d883a 	mov	r22,r9
    13e0:	9027883a 	mov	r19,r18
    13e4:	070001c4 	movi	fp,7
    13e8:	8025883a 	mov	r18,r16
    13ec:	dc002d17 	ldw	r16,180(sp)
    13f0:	00000306 	br	1400 <___vfprintf_internal_r+0x80c>
    13f4:	8c7ffc04 	addi	r17,r17,-16
    13f8:	42000204 	addi	r8,r8,8
    13fc:	b440130e 	bge	r22,r17,144c <___vfprintf_internal_r+0x858>
    1400:	01000074 	movhi	r4,1
    1404:	18c00404 	addi	r3,r3,16
    1408:	10800044 	addi	r2,r2,1
    140c:	21003684 	addi	r4,r4,218
    1410:	41000015 	stw	r4,0(r8)
    1414:	45800115 	stw	r22,4(r8)
    1418:	d8c02015 	stw	r3,128(sp)
    141c:	d8801f15 	stw	r2,124(sp)
    1420:	e0bff40e 	bge	fp,r2,13f4 <__alt_data_end+0xfffe1ff4>
    1424:	d9801e04 	addi	r6,sp,120
    1428:	b80b883a 	mov	r5,r23
    142c:	8009883a 	mov	r4,r16
    1430:	00078080 	call	7808 <__sprint_r>
    1434:	103ef31e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1438:	8c7ffc04 	addi	r17,r17,-16
    143c:	d8c02017 	ldw	r3,128(sp)
    1440:	d8801f17 	ldw	r2,124(sp)
    1444:	da000404 	addi	r8,sp,16
    1448:	b47fed16 	blt	r22,r17,1400 <__alt_data_end+0xfffe2000>
    144c:	9021883a 	mov	r16,r18
    1450:	9825883a 	mov	r18,r19
    1454:	8827883a 	mov	r19,r17
    1458:	dc403b17 	ldw	r17,236(sp)
    145c:	d9403517 	ldw	r5,212(sp)
    1460:	98c7883a 	add	r3,r19,r3
    1464:	10800044 	addi	r2,r2,1
    1468:	41400015 	stw	r5,0(r8)
    146c:	44c00115 	stw	r19,4(r8)
    1470:	d8c02015 	stw	r3,128(sp)
    1474:	d8801f15 	stw	r2,124(sp)
    1478:	010001c4 	movi	r4,7
    147c:	2082c516 	blt	r4,r2,1f94 <___vfprintf_internal_r+0x13a0>
    1480:	df002787 	ldb	fp,158(sp)
    1484:	42000204 	addi	r8,r8,8
    1488:	e0000c26 	beq	fp,zero,14bc <___vfprintf_internal_r+0x8c8>
    148c:	d8801f17 	ldw	r2,124(sp)
    1490:	d9002784 	addi	r4,sp,158
    1494:	18c00044 	addi	r3,r3,1
    1498:	10800044 	addi	r2,r2,1
    149c:	41000015 	stw	r4,0(r8)
    14a0:	01000044 	movi	r4,1
    14a4:	41000115 	stw	r4,4(r8)
    14a8:	d8c02015 	stw	r3,128(sp)
    14ac:	d8801f15 	stw	r2,124(sp)
    14b0:	010001c4 	movi	r4,7
    14b4:	20825e16 	blt	r4,r2,1e30 <___vfprintf_internal_r+0x123c>
    14b8:	42000204 	addi	r8,r8,8
    14bc:	d8802c17 	ldw	r2,176(sp)
    14c0:	10000c26 	beq	r2,zero,14f4 <___vfprintf_internal_r+0x900>
    14c4:	d8801f17 	ldw	r2,124(sp)
    14c8:	d9002704 	addi	r4,sp,156
    14cc:	18c00084 	addi	r3,r3,2
    14d0:	10800044 	addi	r2,r2,1
    14d4:	41000015 	stw	r4,0(r8)
    14d8:	01000084 	movi	r4,2
    14dc:	41000115 	stw	r4,4(r8)
    14e0:	d8c02015 	stw	r3,128(sp)
    14e4:	d8801f15 	stw	r2,124(sp)
    14e8:	010001c4 	movi	r4,7
    14ec:	20825816 	blt	r4,r2,1e50 <___vfprintf_internal_r+0x125c>
    14f0:	42000204 	addi	r8,r8,8
    14f4:	d9003017 	ldw	r4,192(sp)
    14f8:	00802004 	movi	r2,128
    14fc:	2081bb26 	beq	r4,r2,1bec <___vfprintf_internal_r+0xff8>
    1500:	d9402a17 	ldw	r5,168(sp)
    1504:	d8802b17 	ldw	r2,172(sp)
    1508:	28adc83a 	sub	r22,r5,r2
    150c:	0580310e 	bge	zero,r22,15d4 <___vfprintf_internal_r+0x9e0>
    1510:	07000404 	movi	fp,16
    1514:	d8801f17 	ldw	r2,124(sp)
    1518:	e584360e 	bge	fp,r22,25f4 <___vfprintf_internal_r+0x1a00>
    151c:	01400074 	movhi	r5,1
    1520:	29403284 	addi	r5,r5,202
    1524:	dc402a15 	stw	r17,168(sp)
    1528:	d9402c15 	stw	r5,176(sp)
    152c:	b023883a 	mov	r17,r22
    1530:	04c001c4 	movi	r19,7
    1534:	a82d883a 	mov	r22,r21
    1538:	902b883a 	mov	r21,r18
    153c:	8025883a 	mov	r18,r16
    1540:	dc002d17 	ldw	r16,180(sp)
    1544:	00000306 	br	1554 <___vfprintf_internal_r+0x960>
    1548:	8c7ffc04 	addi	r17,r17,-16
    154c:	42000204 	addi	r8,r8,8
    1550:	e440110e 	bge	fp,r17,1598 <___vfprintf_internal_r+0x9a4>
    1554:	18c00404 	addi	r3,r3,16
    1558:	10800044 	addi	r2,r2,1
    155c:	45000015 	stw	r20,0(r8)
    1560:	47000115 	stw	fp,4(r8)
    1564:	d8c02015 	stw	r3,128(sp)
    1568:	d8801f15 	stw	r2,124(sp)
    156c:	98bff60e 	bge	r19,r2,1548 <__alt_data_end+0xfffe2148>
    1570:	d9801e04 	addi	r6,sp,120
    1574:	b80b883a 	mov	r5,r23
    1578:	8009883a 	mov	r4,r16
    157c:	00078080 	call	7808 <__sprint_r>
    1580:	103ea01e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1584:	8c7ffc04 	addi	r17,r17,-16
    1588:	d8c02017 	ldw	r3,128(sp)
    158c:	d8801f17 	ldw	r2,124(sp)
    1590:	da000404 	addi	r8,sp,16
    1594:	e47fef16 	blt	fp,r17,1554 <__alt_data_end+0xfffe2154>
    1598:	9021883a 	mov	r16,r18
    159c:	a825883a 	mov	r18,r21
    15a0:	b02b883a 	mov	r21,r22
    15a4:	882d883a 	mov	r22,r17
    15a8:	dc402a17 	ldw	r17,168(sp)
    15ac:	d9002c17 	ldw	r4,176(sp)
    15b0:	1d87883a 	add	r3,r3,r22
    15b4:	10800044 	addi	r2,r2,1
    15b8:	41000015 	stw	r4,0(r8)
    15bc:	45800115 	stw	r22,4(r8)
    15c0:	d8c02015 	stw	r3,128(sp)
    15c4:	d8801f15 	stw	r2,124(sp)
    15c8:	010001c4 	movi	r4,7
    15cc:	20821016 	blt	r4,r2,1e10 <___vfprintf_internal_r+0x121c>
    15d0:	42000204 	addi	r8,r8,8
    15d4:	9080400c 	andi	r2,r18,256
    15d8:	10013a1e 	bne	r2,zero,1ac4 <___vfprintf_internal_r+0xed0>
    15dc:	d9402b17 	ldw	r5,172(sp)
    15e0:	d8801f17 	ldw	r2,124(sp)
    15e4:	44000015 	stw	r16,0(r8)
    15e8:	1947883a 	add	r3,r3,r5
    15ec:	10800044 	addi	r2,r2,1
    15f0:	41400115 	stw	r5,4(r8)
    15f4:	d8c02015 	stw	r3,128(sp)
    15f8:	d8801f15 	stw	r2,124(sp)
    15fc:	010001c4 	movi	r4,7
    1600:	2081f516 	blt	r4,r2,1dd8 <___vfprintf_internal_r+0x11e4>
    1604:	42000204 	addi	r8,r8,8
    1608:	9480010c 	andi	r18,r18,4
    160c:	90003226 	beq	r18,zero,16d8 <___vfprintf_internal_r+0xae4>
    1610:	d9403117 	ldw	r5,196(sp)
    1614:	d8802917 	ldw	r2,164(sp)
    1618:	28a1c83a 	sub	r16,r5,r2
    161c:	04002e0e 	bge	zero,r16,16d8 <___vfprintf_internal_r+0xae4>
    1620:	04400404 	movi	r17,16
    1624:	d8801f17 	ldw	r2,124(sp)
    1628:	8c04c40e 	bge	r17,r16,293c <___vfprintf_internal_r+0x1d48>
    162c:	01400074 	movhi	r5,1
    1630:	29403684 	addi	r5,r5,218
    1634:	d9403515 	stw	r5,212(sp)
    1638:	048001c4 	movi	r18,7
    163c:	dcc02d17 	ldw	r19,180(sp)
    1640:	00000306 	br	1650 <___vfprintf_internal_r+0xa5c>
    1644:	843ffc04 	addi	r16,r16,-16
    1648:	42000204 	addi	r8,r8,8
    164c:	8c00130e 	bge	r17,r16,169c <___vfprintf_internal_r+0xaa8>
    1650:	01000074 	movhi	r4,1
    1654:	18c00404 	addi	r3,r3,16
    1658:	10800044 	addi	r2,r2,1
    165c:	21003684 	addi	r4,r4,218
    1660:	41000015 	stw	r4,0(r8)
    1664:	44400115 	stw	r17,4(r8)
    1668:	d8c02015 	stw	r3,128(sp)
    166c:	d8801f15 	stw	r2,124(sp)
    1670:	90bff40e 	bge	r18,r2,1644 <__alt_data_end+0xfffe2244>
    1674:	d9801e04 	addi	r6,sp,120
    1678:	b80b883a 	mov	r5,r23
    167c:	9809883a 	mov	r4,r19
    1680:	00078080 	call	7808 <__sprint_r>
    1684:	103e5f1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1688:	843ffc04 	addi	r16,r16,-16
    168c:	d8c02017 	ldw	r3,128(sp)
    1690:	d8801f17 	ldw	r2,124(sp)
    1694:	da000404 	addi	r8,sp,16
    1698:	8c3fed16 	blt	r17,r16,1650 <__alt_data_end+0xfffe2250>
    169c:	d9403517 	ldw	r5,212(sp)
    16a0:	1c07883a 	add	r3,r3,r16
    16a4:	10800044 	addi	r2,r2,1
    16a8:	41400015 	stw	r5,0(r8)
    16ac:	44000115 	stw	r16,4(r8)
    16b0:	d8c02015 	stw	r3,128(sp)
    16b4:	d8801f15 	stw	r2,124(sp)
    16b8:	010001c4 	movi	r4,7
    16bc:	2080060e 	bge	r4,r2,16d8 <___vfprintf_internal_r+0xae4>
    16c0:	d9002d17 	ldw	r4,180(sp)
    16c4:	d9801e04 	addi	r6,sp,120
    16c8:	b80b883a 	mov	r5,r23
    16cc:	00078080 	call	7808 <__sprint_r>
    16d0:	103e4c1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    16d4:	d8c02017 	ldw	r3,128(sp)
    16d8:	d8803117 	ldw	r2,196(sp)
    16dc:	d9002917 	ldw	r4,164(sp)
    16e0:	1100010e 	bge	r2,r4,16e8 <___vfprintf_internal_r+0xaf4>
    16e4:	2005883a 	mov	r2,r4
    16e8:	d9402f17 	ldw	r5,188(sp)
    16ec:	288b883a 	add	r5,r5,r2
    16f0:	d9402f15 	stw	r5,188(sp)
    16f4:	1801c01e 	bne	r3,zero,1df8 <___vfprintf_internal_r+0x1204>
    16f8:	a8800007 	ldb	r2,0(r21)
    16fc:	d8001f15 	stw	zero,124(sp)
    1700:	da000404 	addi	r8,sp,16
    1704:	103d751e 	bne	r2,zero,cdc <__alt_data_end+0xfffe18dc>
    1708:	a823883a 	mov	r17,r21
    170c:	003d8b06 	br	d3c <__alt_data_end+0xfffe193c>
    1710:	8025883a 	mov	r18,r16
    1714:	dc002903 	ldbu	r16,164(sp)
    1718:	e011883a 	mov	r8,fp
    171c:	84003fcc 	andi	r16,r16,255
    1720:	8005e51e 	bne	r16,zero,2eb8 <___vfprintf_internal_r+0x22c4>
    1724:	94800414 	ori	r18,r18,16
    1728:	9080080c 	andi	r2,r18,32
    172c:	10022b26 	beq	r2,zero,1fdc <___vfprintf_internal_r+0x13e8>
    1730:	d9002e17 	ldw	r4,184(sp)
    1734:	d9402a17 	ldw	r5,168(sp)
    1738:	d8002785 	stb	zero,158(sp)
    173c:	20c00204 	addi	r3,r4,8
    1740:	24c00017 	ldw	r19,0(r4)
    1744:	25800117 	ldw	r22,4(r4)
    1748:	28042e16 	blt	r5,zero,2804 <___vfprintf_internal_r+0x1c10>
    174c:	013fdfc4 	movi	r4,-129
    1750:	9d84b03a 	or	r2,r19,r22
    1754:	d8c02e15 	stw	r3,184(sp)
    1758:	9124703a 	and	r18,r18,r4
    175c:	0039883a 	mov	fp,zero
    1760:	103e801e 	bne	r2,zero,1164 <__alt_data_end+0xfffe1d64>
    1764:	d9002a17 	ldw	r4,168(sp)
    1768:	2002e01e 	bne	r4,zero,22ec <___vfprintf_internal_r+0x16f8>
    176c:	d8002a15 	stw	zero,168(sp)
    1770:	d8002b15 	stw	zero,172(sp)
    1774:	dc001e04 	addi	r16,sp,120
    1778:	003ef506 	br	1350 <__alt_data_end+0xfffe1f50>
    177c:	8025883a 	mov	r18,r16
    1780:	dc002903 	ldbu	r16,164(sp)
    1784:	e011883a 	mov	r8,fp
    1788:	84003fcc 	andi	r16,r16,255
    178c:	8005ba1e 	bne	r16,zero,2e78 <___vfprintf_internal_r+0x2284>
    1790:	01000074 	movhi	r4,1
    1794:	21002604 	addi	r4,r4,152
    1798:	d9003915 	stw	r4,228(sp)
    179c:	9080080c 	andi	r2,r18,32
    17a0:	10006126 	beq	r2,zero,1928 <___vfprintf_internal_r+0xd34>
    17a4:	d9402e17 	ldw	r5,184(sp)
    17a8:	2cc00017 	ldw	r19,0(r5)
    17ac:	2d800117 	ldw	r22,4(r5)
    17b0:	29400204 	addi	r5,r5,8
    17b4:	d9402e15 	stw	r5,184(sp)
    17b8:	9080004c 	andi	r2,r18,1
    17bc:	1001ac26 	beq	r2,zero,1e70 <___vfprintf_internal_r+0x127c>
    17c0:	9d84b03a 	or	r2,r19,r22
    17c4:	10038526 	beq	r2,zero,25dc <___vfprintf_internal_r+0x19e8>
    17c8:	d8c02a17 	ldw	r3,168(sp)
    17cc:	00800c04 	movi	r2,48
    17d0:	d8802705 	stb	r2,156(sp)
    17d4:	dc402745 	stb	r17,157(sp)
    17d8:	d8002785 	stb	zero,158(sp)
    17dc:	90800094 	ori	r2,r18,2
    17e0:	18047916 	blt	r3,zero,29c8 <___vfprintf_internal_r+0x1dd4>
    17e4:	00bfdfc4 	movi	r2,-129
    17e8:	90a4703a 	and	r18,r18,r2
    17ec:	94800094 	ori	r18,r18,2
    17f0:	0039883a 	mov	fp,zero
    17f4:	d9003917 	ldw	r4,228(sp)
    17f8:	dc001e04 	addi	r16,sp,120
    17fc:	988003cc 	andi	r2,r19,15
    1800:	b006973a 	slli	r3,r22,28
    1804:	2085883a 	add	r2,r4,r2
    1808:	9826d13a 	srli	r19,r19,4
    180c:	10800003 	ldbu	r2,0(r2)
    1810:	b02cd13a 	srli	r22,r22,4
    1814:	843fffc4 	addi	r16,r16,-1
    1818:	1ce6b03a 	or	r19,r3,r19
    181c:	80800005 	stb	r2,0(r16)
    1820:	9d84b03a 	or	r2,r19,r22
    1824:	103ff51e 	bne	r2,zero,17fc <__alt_data_end+0xfffe23fc>
    1828:	d8c02817 	ldw	r3,160(sp)
    182c:	1c07c83a 	sub	r3,r3,r16
    1830:	d8c02b15 	stw	r3,172(sp)
    1834:	003ec606 	br	1350 <__alt_data_end+0xfffe1f50>
    1838:	8025883a 	mov	r18,r16
    183c:	dc002903 	ldbu	r16,164(sp)
    1840:	e011883a 	mov	r8,fp
    1844:	84003fcc 	andi	r16,r16,255
    1848:	803e9626 	beq	r16,zero,12a4 <__alt_data_end+0xfffe1ea4>
    184c:	d8c02b03 	ldbu	r3,172(sp)
    1850:	d8c02785 	stb	r3,158(sp)
    1854:	003e9306 	br	12a4 <__alt_data_end+0xfffe1ea4>
    1858:	00c00044 	movi	r3,1
    185c:	d8c02905 	stb	r3,164(sp)
    1860:	00c00ac4 	movi	r3,43
    1864:	d8c02b05 	stb	r3,172(sp)
    1868:	ac400007 	ldb	r17,0(r21)
    186c:	003d4306 	br	d7c <__alt_data_end+0xfffe197c>
    1870:	84000814 	ori	r16,r16,32
    1874:	ac400007 	ldb	r17,0(r21)
    1878:	003d4006 	br	d7c <__alt_data_end+0xfffe197c>
    187c:	d8802e17 	ldw	r2,184(sp)
    1880:	8025883a 	mov	r18,r16
    1884:	d8002785 	stb	zero,158(sp)
    1888:	14000017 	ldw	r16,0(r2)
    188c:	e011883a 	mov	r8,fp
    1890:	14c00104 	addi	r19,r2,4
    1894:	80042d26 	beq	r16,zero,294c <___vfprintf_internal_r+0x1d58>
    1898:	d8c02a17 	ldw	r3,168(sp)
    189c:	1803e416 	blt	r3,zero,2830 <___vfprintf_internal_r+0x1c3c>
    18a0:	180d883a 	mov	r6,r3
    18a4:	000b883a 	mov	r5,zero
    18a8:	8009883a 	mov	r4,r16
    18ac:	df003d15 	stw	fp,244(sp)
    18b0:	00060640 	call	6064 <memchr>
    18b4:	da003d17 	ldw	r8,244(sp)
    18b8:	10046826 	beq	r2,zero,2a5c <___vfprintf_internal_r+0x1e68>
    18bc:	1405c83a 	sub	r2,r2,r16
    18c0:	d8802b15 	stw	r2,172(sp)
    18c4:	1003e016 	blt	r2,zero,2848 <___vfprintf_internal_r+0x1c54>
    18c8:	df002783 	ldbu	fp,158(sp)
    18cc:	d8802915 	stw	r2,164(sp)
    18d0:	dcc02e15 	stw	r19,184(sp)
    18d4:	d8002a15 	stw	zero,168(sp)
    18d8:	d8003215 	stw	zero,200(sp)
    18dc:	003ea206 	br	1368 <__alt_data_end+0xfffe1f68>
    18e0:	8025883a 	mov	r18,r16
    18e4:	dc002903 	ldbu	r16,164(sp)
    18e8:	e011883a 	mov	r8,fp
    18ec:	84003fcc 	andi	r16,r16,255
    18f0:	803f8d26 	beq	r16,zero,1728 <__alt_data_end+0xfffe2328>
    18f4:	d8c02b03 	ldbu	r3,172(sp)
    18f8:	d8c02785 	stb	r3,158(sp)
    18fc:	003f8a06 	br	1728 <__alt_data_end+0xfffe2328>
    1900:	8025883a 	mov	r18,r16
    1904:	dc002903 	ldbu	r16,164(sp)
    1908:	e011883a 	mov	r8,fp
    190c:	84003fcc 	andi	r16,r16,255
    1910:	8005661e 	bne	r16,zero,2eac <___vfprintf_internal_r+0x22b8>
    1914:	01000074 	movhi	r4,1
    1918:	21002b04 	addi	r4,r4,172
    191c:	d9003915 	stw	r4,228(sp)
    1920:	9080080c 	andi	r2,r18,32
    1924:	103f9f1e 	bne	r2,zero,17a4 <__alt_data_end+0xfffe23a4>
    1928:	9080040c 	andi	r2,r18,16
    192c:	1002eb26 	beq	r2,zero,24dc <___vfprintf_internal_r+0x18e8>
    1930:	d8802e17 	ldw	r2,184(sp)
    1934:	002d883a 	mov	r22,zero
    1938:	14c00017 	ldw	r19,0(r2)
    193c:	10800104 	addi	r2,r2,4
    1940:	d8802e15 	stw	r2,184(sp)
    1944:	003f9c06 	br	17b8 <__alt_data_end+0xfffe23b8>
    1948:	d8802b07 	ldb	r2,172(sp)
    194c:	1002e11e 	bne	r2,zero,24d4 <___vfprintf_internal_r+0x18e0>
    1950:	00c00044 	movi	r3,1
    1954:	d8c02905 	stb	r3,164(sp)
    1958:	00c00804 	movi	r3,32
    195c:	d8c02b05 	stb	r3,172(sp)
    1960:	ac400007 	ldb	r17,0(r21)
    1964:	003d0506 	br	d7c <__alt_data_end+0xfffe197c>
    1968:	84000054 	ori	r16,r16,1
    196c:	ac400007 	ldb	r17,0(r21)
    1970:	003d0206 	br	d7c <__alt_data_end+0xfffe197c>
    1974:	8025883a 	mov	r18,r16
    1978:	dc002903 	ldbu	r16,164(sp)
    197c:	e011883a 	mov	r8,fp
    1980:	84003fcc 	andi	r16,r16,255
    1984:	803de726 	beq	r16,zero,1124 <__alt_data_end+0xfffe1d24>
    1988:	d8c02b03 	ldbu	r3,172(sp)
    198c:	d8c02785 	stb	r3,158(sp)
    1990:	003de406 	br	1124 <__alt_data_end+0xfffe1d24>
    1994:	84001014 	ori	r16,r16,64
    1998:	ac400007 	ldb	r17,0(r21)
    199c:	003cf706 	br	d7c <__alt_data_end+0xfffe197c>
    19a0:	ac400007 	ldb	r17,0(r21)
    19a4:	00801b04 	movi	r2,108
    19a8:	88838f26 	beq	r17,r2,27e8 <___vfprintf_internal_r+0x1bf4>
    19ac:	84000414 	ori	r16,r16,16
    19b0:	003cf206 	br	d7c <__alt_data_end+0xfffe197c>
    19b4:	8025883a 	mov	r18,r16
    19b8:	dc002903 	ldbu	r16,164(sp)
    19bc:	e011883a 	mov	r8,fp
    19c0:	84003fcc 	andi	r16,r16,255
    19c4:	80053f1e 	bne	r16,zero,2ec4 <___vfprintf_internal_r+0x22d0>
    19c8:	9080080c 	andi	r2,r18,32
    19cc:	1002d226 	beq	r2,zero,2518 <___vfprintf_internal_r+0x1924>
    19d0:	d9002e17 	ldw	r4,184(sp)
    19d4:	d9402f17 	ldw	r5,188(sp)
    19d8:	20800017 	ldw	r2,0(r4)
    19dc:	2807d7fa 	srai	r3,r5,31
    19e0:	21000104 	addi	r4,r4,4
    19e4:	d9002e15 	stw	r4,184(sp)
    19e8:	11400015 	stw	r5,0(r2)
    19ec:	10c00115 	stw	r3,4(r2)
    19f0:	003cb806 	br	cd4 <__alt_data_end+0xfffe18d4>
    19f4:	d8c02e17 	ldw	r3,184(sp)
    19f8:	d9002e17 	ldw	r4,184(sp)
    19fc:	8025883a 	mov	r18,r16
    1a00:	18800017 	ldw	r2,0(r3)
    1a04:	21000104 	addi	r4,r4,4
    1a08:	00c00044 	movi	r3,1
    1a0c:	e011883a 	mov	r8,fp
    1a10:	d8c02915 	stw	r3,164(sp)
    1a14:	d8002785 	stb	zero,158(sp)
    1a18:	d8801405 	stb	r2,80(sp)
    1a1c:	d9002e15 	stw	r4,184(sp)
    1a20:	d8c02b15 	stw	r3,172(sp)
    1a24:	d8002a15 	stw	zero,168(sp)
    1a28:	d8003215 	stw	zero,200(sp)
    1a2c:	dc001404 	addi	r16,sp,80
    1a30:	0039883a 	mov	fp,zero
    1a34:	003e5306 	br	1384 <__alt_data_end+0xfffe1f84>
    1a38:	01000074 	movhi	r4,1
    1a3c:	21002b04 	addi	r4,r4,172
    1a40:	0039883a 	mov	fp,zero
    1a44:	d9003915 	stw	r4,228(sp)
    1a48:	04401e04 	movi	r17,120
    1a4c:	003f6906 	br	17f4 <__alt_data_end+0xfffe23f4>
    1a50:	8025883a 	mov	r18,r16
    1a54:	dc002903 	ldbu	r16,164(sp)
    1a58:	e011883a 	mov	r8,fp
    1a5c:	84003fcc 	andi	r16,r16,255
    1a60:	8005081e 	bne	r16,zero,2e84 <___vfprintf_internal_r+0x2290>
    1a64:	883d6126 	beq	r17,zero,fec <__alt_data_end+0xfffe1bec>
    1a68:	00c00044 	movi	r3,1
    1a6c:	d8c02915 	stw	r3,164(sp)
    1a70:	dc401405 	stb	r17,80(sp)
    1a74:	d8002785 	stb	zero,158(sp)
    1a78:	003fe906 	br	1a20 <__alt_data_end+0xfffe2620>
    1a7c:	01400074 	movhi	r5,1
    1a80:	29402b04 	addi	r5,r5,172
    1a84:	d9403915 	stw	r5,228(sp)
    1a88:	d8c02e15 	stw	r3,184(sp)
    1a8c:	1025883a 	mov	r18,r2
    1a90:	04401e04 	movi	r17,120
    1a94:	9d84b03a 	or	r2,r19,r22
    1a98:	1000fc1e 	bne	r2,zero,1e8c <___vfprintf_internal_r+0x1298>
    1a9c:	0039883a 	mov	fp,zero
    1aa0:	00800084 	movi	r2,2
    1aa4:	10803fcc 	andi	r2,r2,255
    1aa8:	00c00044 	movi	r3,1
    1aac:	10c20f26 	beq	r2,r3,22ec <___vfprintf_internal_r+0x16f8>
    1ab0:	00c00084 	movi	r3,2
    1ab4:	10fd3326 	beq	r2,r3,f84 <__alt_data_end+0xfffe1b84>
    1ab8:	003e0b06 	br	12e8 <__alt_data_end+0xfffe1ee8>
    1abc:	d8c02017 	ldw	r3,128(sp)
    1ac0:	003e7106 	br	1488 <__alt_data_end+0xfffe2088>
    1ac4:	00801944 	movi	r2,101
    1ac8:	14407e0e 	bge	r2,r17,1cc4 <___vfprintf_internal_r+0x10d0>
    1acc:	d9003617 	ldw	r4,216(sp)
    1ad0:	d9403817 	ldw	r5,224(sp)
    1ad4:	000d883a 	mov	r6,zero
    1ad8:	000f883a 	mov	r7,zero
    1adc:	d8c03c15 	stw	r3,240(sp)
    1ae0:	da003d15 	stw	r8,244(sp)
    1ae4:	000c2f00 	call	c2f0 <__eqdf2>
    1ae8:	d8c03c17 	ldw	r3,240(sp)
    1aec:	da003d17 	ldw	r8,244(sp)
    1af0:	1000f71e 	bne	r2,zero,1ed0 <___vfprintf_internal_r+0x12dc>
    1af4:	d8801f17 	ldw	r2,124(sp)
    1af8:	01000074 	movhi	r4,1
    1afc:	21003204 	addi	r4,r4,200
    1b00:	18c00044 	addi	r3,r3,1
    1b04:	10800044 	addi	r2,r2,1
    1b08:	41000015 	stw	r4,0(r8)
    1b0c:	01000044 	movi	r4,1
    1b10:	41000115 	stw	r4,4(r8)
    1b14:	d8c02015 	stw	r3,128(sp)
    1b18:	d8801f15 	stw	r2,124(sp)
    1b1c:	010001c4 	movi	r4,7
    1b20:	2082b816 	blt	r4,r2,2604 <___vfprintf_internal_r+0x1a10>
    1b24:	42000204 	addi	r8,r8,8
    1b28:	d8802617 	ldw	r2,152(sp)
    1b2c:	d9403317 	ldw	r5,204(sp)
    1b30:	11400216 	blt	r2,r5,1b3c <___vfprintf_internal_r+0xf48>
    1b34:	9080004c 	andi	r2,r18,1
    1b38:	103eb326 	beq	r2,zero,1608 <__alt_data_end+0xfffe2208>
    1b3c:	d8803717 	ldw	r2,220(sp)
    1b40:	d9003417 	ldw	r4,208(sp)
    1b44:	d9403717 	ldw	r5,220(sp)
    1b48:	1887883a 	add	r3,r3,r2
    1b4c:	d8801f17 	ldw	r2,124(sp)
    1b50:	41000015 	stw	r4,0(r8)
    1b54:	41400115 	stw	r5,4(r8)
    1b58:	10800044 	addi	r2,r2,1
    1b5c:	d8c02015 	stw	r3,128(sp)
    1b60:	d8801f15 	stw	r2,124(sp)
    1b64:	010001c4 	movi	r4,7
    1b68:	20832916 	blt	r4,r2,2810 <___vfprintf_internal_r+0x1c1c>
    1b6c:	42000204 	addi	r8,r8,8
    1b70:	d8803317 	ldw	r2,204(sp)
    1b74:	143fffc4 	addi	r16,r2,-1
    1b78:	043ea30e 	bge	zero,r16,1608 <__alt_data_end+0xfffe2208>
    1b7c:	04400404 	movi	r17,16
    1b80:	d8801f17 	ldw	r2,124(sp)
    1b84:	8c00880e 	bge	r17,r16,1da8 <___vfprintf_internal_r+0x11b4>
    1b88:	01400074 	movhi	r5,1
    1b8c:	29403284 	addi	r5,r5,202
    1b90:	d9402c15 	stw	r5,176(sp)
    1b94:	058001c4 	movi	r22,7
    1b98:	dcc02d17 	ldw	r19,180(sp)
    1b9c:	00000306 	br	1bac <___vfprintf_internal_r+0xfb8>
    1ba0:	42000204 	addi	r8,r8,8
    1ba4:	843ffc04 	addi	r16,r16,-16
    1ba8:	8c00820e 	bge	r17,r16,1db4 <___vfprintf_internal_r+0x11c0>
    1bac:	18c00404 	addi	r3,r3,16
    1bb0:	10800044 	addi	r2,r2,1
    1bb4:	45000015 	stw	r20,0(r8)
    1bb8:	44400115 	stw	r17,4(r8)
    1bbc:	d8c02015 	stw	r3,128(sp)
    1bc0:	d8801f15 	stw	r2,124(sp)
    1bc4:	b0bff60e 	bge	r22,r2,1ba0 <__alt_data_end+0xfffe27a0>
    1bc8:	d9801e04 	addi	r6,sp,120
    1bcc:	b80b883a 	mov	r5,r23
    1bd0:	9809883a 	mov	r4,r19
    1bd4:	00078080 	call	7808 <__sprint_r>
    1bd8:	103d0a1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1bdc:	d8c02017 	ldw	r3,128(sp)
    1be0:	d8801f17 	ldw	r2,124(sp)
    1be4:	da000404 	addi	r8,sp,16
    1be8:	003fee06 	br	1ba4 <__alt_data_end+0xfffe27a4>
    1bec:	d9403117 	ldw	r5,196(sp)
    1bf0:	d8802917 	ldw	r2,164(sp)
    1bf4:	28adc83a 	sub	r22,r5,r2
    1bf8:	05be410e 	bge	zero,r22,1500 <__alt_data_end+0xfffe2100>
    1bfc:	07000404 	movi	fp,16
    1c00:	d8801f17 	ldw	r2,124(sp)
    1c04:	e5838f0e 	bge	fp,r22,2a44 <___vfprintf_internal_r+0x1e50>
    1c08:	01400074 	movhi	r5,1
    1c0c:	29403284 	addi	r5,r5,202
    1c10:	dc403015 	stw	r17,192(sp)
    1c14:	d9402c15 	stw	r5,176(sp)
    1c18:	b023883a 	mov	r17,r22
    1c1c:	04c001c4 	movi	r19,7
    1c20:	a82d883a 	mov	r22,r21
    1c24:	902b883a 	mov	r21,r18
    1c28:	8025883a 	mov	r18,r16
    1c2c:	dc002d17 	ldw	r16,180(sp)
    1c30:	00000306 	br	1c40 <___vfprintf_internal_r+0x104c>
    1c34:	8c7ffc04 	addi	r17,r17,-16
    1c38:	42000204 	addi	r8,r8,8
    1c3c:	e440110e 	bge	fp,r17,1c84 <___vfprintf_internal_r+0x1090>
    1c40:	18c00404 	addi	r3,r3,16
    1c44:	10800044 	addi	r2,r2,1
    1c48:	45000015 	stw	r20,0(r8)
    1c4c:	47000115 	stw	fp,4(r8)
    1c50:	d8c02015 	stw	r3,128(sp)
    1c54:	d8801f15 	stw	r2,124(sp)
    1c58:	98bff60e 	bge	r19,r2,1c34 <__alt_data_end+0xfffe2834>
    1c5c:	d9801e04 	addi	r6,sp,120
    1c60:	b80b883a 	mov	r5,r23
    1c64:	8009883a 	mov	r4,r16
    1c68:	00078080 	call	7808 <__sprint_r>
    1c6c:	103ce51e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1c70:	8c7ffc04 	addi	r17,r17,-16
    1c74:	d8c02017 	ldw	r3,128(sp)
    1c78:	d8801f17 	ldw	r2,124(sp)
    1c7c:	da000404 	addi	r8,sp,16
    1c80:	e47fef16 	blt	fp,r17,1c40 <__alt_data_end+0xfffe2840>
    1c84:	9021883a 	mov	r16,r18
    1c88:	a825883a 	mov	r18,r21
    1c8c:	b02b883a 	mov	r21,r22
    1c90:	882d883a 	mov	r22,r17
    1c94:	dc403017 	ldw	r17,192(sp)
    1c98:	d9002c17 	ldw	r4,176(sp)
    1c9c:	1d87883a 	add	r3,r3,r22
    1ca0:	10800044 	addi	r2,r2,1
    1ca4:	41000015 	stw	r4,0(r8)
    1ca8:	45800115 	stw	r22,4(r8)
    1cac:	d8c02015 	stw	r3,128(sp)
    1cb0:	d8801f15 	stw	r2,124(sp)
    1cb4:	010001c4 	movi	r4,7
    1cb8:	20818e16 	blt	r4,r2,22f4 <___vfprintf_internal_r+0x1700>
    1cbc:	42000204 	addi	r8,r8,8
    1cc0:	003e0f06 	br	1500 <__alt_data_end+0xfffe2100>
    1cc4:	d9403317 	ldw	r5,204(sp)
    1cc8:	00800044 	movi	r2,1
    1ccc:	18c00044 	addi	r3,r3,1
    1cd0:	1141530e 	bge	r2,r5,2220 <___vfprintf_internal_r+0x162c>
    1cd4:	dc401f17 	ldw	r17,124(sp)
    1cd8:	00800044 	movi	r2,1
    1cdc:	40800115 	stw	r2,4(r8)
    1ce0:	8c400044 	addi	r17,r17,1
    1ce4:	44000015 	stw	r16,0(r8)
    1ce8:	d8c02015 	stw	r3,128(sp)
    1cec:	dc401f15 	stw	r17,124(sp)
    1cf0:	008001c4 	movi	r2,7
    1cf4:	14416b16 	blt	r2,r17,22a4 <___vfprintf_internal_r+0x16b0>
    1cf8:	42000204 	addi	r8,r8,8
    1cfc:	d8803717 	ldw	r2,220(sp)
    1d00:	d9003417 	ldw	r4,208(sp)
    1d04:	8c400044 	addi	r17,r17,1
    1d08:	10c7883a 	add	r3,r2,r3
    1d0c:	40800115 	stw	r2,4(r8)
    1d10:	41000015 	stw	r4,0(r8)
    1d14:	d8c02015 	stw	r3,128(sp)
    1d18:	dc401f15 	stw	r17,124(sp)
    1d1c:	008001c4 	movi	r2,7
    1d20:	14416916 	blt	r2,r17,22c8 <___vfprintf_internal_r+0x16d4>
    1d24:	45800204 	addi	r22,r8,8
    1d28:	d9003617 	ldw	r4,216(sp)
    1d2c:	d9403817 	ldw	r5,224(sp)
    1d30:	000d883a 	mov	r6,zero
    1d34:	000f883a 	mov	r7,zero
    1d38:	d8c03c15 	stw	r3,240(sp)
    1d3c:	000c2f00 	call	c2f0 <__eqdf2>
    1d40:	d8c03c17 	ldw	r3,240(sp)
    1d44:	1000bc26 	beq	r2,zero,2038 <___vfprintf_internal_r+0x1444>
    1d48:	d9403317 	ldw	r5,204(sp)
    1d4c:	84000044 	addi	r16,r16,1
    1d50:	8c400044 	addi	r17,r17,1
    1d54:	28bfffc4 	addi	r2,r5,-1
    1d58:	1887883a 	add	r3,r3,r2
    1d5c:	b0800115 	stw	r2,4(r22)
    1d60:	b4000015 	stw	r16,0(r22)
    1d64:	d8c02015 	stw	r3,128(sp)
    1d68:	dc401f15 	stw	r17,124(sp)
    1d6c:	008001c4 	movi	r2,7
    1d70:	14414316 	blt	r2,r17,2280 <___vfprintf_internal_r+0x168c>
    1d74:	b5800204 	addi	r22,r22,8
    1d78:	d9003a17 	ldw	r4,232(sp)
    1d7c:	df0022c4 	addi	fp,sp,139
    1d80:	8c400044 	addi	r17,r17,1
    1d84:	20c7883a 	add	r3,r4,r3
    1d88:	b7000015 	stw	fp,0(r22)
    1d8c:	b1000115 	stw	r4,4(r22)
    1d90:	d8c02015 	stw	r3,128(sp)
    1d94:	dc401f15 	stw	r17,124(sp)
    1d98:	008001c4 	movi	r2,7
    1d9c:	14400e16 	blt	r2,r17,1dd8 <___vfprintf_internal_r+0x11e4>
    1da0:	b2000204 	addi	r8,r22,8
    1da4:	003e1806 	br	1608 <__alt_data_end+0xfffe2208>
    1da8:	01000074 	movhi	r4,1
    1dac:	21003284 	addi	r4,r4,202
    1db0:	d9002c15 	stw	r4,176(sp)
    1db4:	d9002c17 	ldw	r4,176(sp)
    1db8:	1c07883a 	add	r3,r3,r16
    1dbc:	44000115 	stw	r16,4(r8)
    1dc0:	41000015 	stw	r4,0(r8)
    1dc4:	10800044 	addi	r2,r2,1
    1dc8:	d8c02015 	stw	r3,128(sp)
    1dcc:	d8801f15 	stw	r2,124(sp)
    1dd0:	010001c4 	movi	r4,7
    1dd4:	20be0b0e 	bge	r4,r2,1604 <__alt_data_end+0xfffe2204>
    1dd8:	d9002d17 	ldw	r4,180(sp)
    1ddc:	d9801e04 	addi	r6,sp,120
    1de0:	b80b883a 	mov	r5,r23
    1de4:	00078080 	call	7808 <__sprint_r>
    1de8:	103c861e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1dec:	d8c02017 	ldw	r3,128(sp)
    1df0:	da000404 	addi	r8,sp,16
    1df4:	003e0406 	br	1608 <__alt_data_end+0xfffe2208>
    1df8:	d9002d17 	ldw	r4,180(sp)
    1dfc:	d9801e04 	addi	r6,sp,120
    1e00:	b80b883a 	mov	r5,r23
    1e04:	00078080 	call	7808 <__sprint_r>
    1e08:	103e3b26 	beq	r2,zero,16f8 <__alt_data_end+0xfffe22f8>
    1e0c:	003c7d06 	br	1004 <__alt_data_end+0xfffe1c04>
    1e10:	d9002d17 	ldw	r4,180(sp)
    1e14:	d9801e04 	addi	r6,sp,120
    1e18:	b80b883a 	mov	r5,r23
    1e1c:	00078080 	call	7808 <__sprint_r>
    1e20:	103c781e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1e24:	d8c02017 	ldw	r3,128(sp)
    1e28:	da000404 	addi	r8,sp,16
    1e2c:	003de906 	br	15d4 <__alt_data_end+0xfffe21d4>
    1e30:	d9002d17 	ldw	r4,180(sp)
    1e34:	d9801e04 	addi	r6,sp,120
    1e38:	b80b883a 	mov	r5,r23
    1e3c:	00078080 	call	7808 <__sprint_r>
    1e40:	103c701e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1e44:	d8c02017 	ldw	r3,128(sp)
    1e48:	da000404 	addi	r8,sp,16
    1e4c:	003d9b06 	br	14bc <__alt_data_end+0xfffe20bc>
    1e50:	d9002d17 	ldw	r4,180(sp)
    1e54:	d9801e04 	addi	r6,sp,120
    1e58:	b80b883a 	mov	r5,r23
    1e5c:	00078080 	call	7808 <__sprint_r>
    1e60:	103c681e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1e64:	d8c02017 	ldw	r3,128(sp)
    1e68:	da000404 	addi	r8,sp,16
    1e6c:	003da106 	br	14f4 <__alt_data_end+0xfffe20f4>
    1e70:	d9402a17 	ldw	r5,168(sp)
    1e74:	d8002785 	stb	zero,158(sp)
    1e78:	283f0616 	blt	r5,zero,1a94 <__alt_data_end+0xfffe2694>
    1e7c:	00ffdfc4 	movi	r3,-129
    1e80:	9d84b03a 	or	r2,r19,r22
    1e84:	90e4703a 	and	r18,r18,r3
    1e88:	103c3b26 	beq	r2,zero,f78 <__alt_data_end+0xfffe1b78>
    1e8c:	0039883a 	mov	fp,zero
    1e90:	003e5806 	br	17f4 <__alt_data_end+0xfffe23f4>
    1e94:	9080040c 	andi	r2,r18,16
    1e98:	1001b326 	beq	r2,zero,2568 <___vfprintf_internal_r+0x1974>
    1e9c:	d8c02e17 	ldw	r3,184(sp)
    1ea0:	d9002a17 	ldw	r4,168(sp)
    1ea4:	d8002785 	stb	zero,158(sp)
    1ea8:	18800104 	addi	r2,r3,4
    1eac:	1cc00017 	ldw	r19,0(r3)
    1eb0:	002d883a 	mov	r22,zero
    1eb4:	2001b516 	blt	r4,zero,258c <___vfprintf_internal_r+0x1998>
    1eb8:	00ffdfc4 	movi	r3,-129
    1ebc:	d8802e15 	stw	r2,184(sp)
    1ec0:	90e4703a 	and	r18,r18,r3
    1ec4:	983d0526 	beq	r19,zero,12dc <__alt_data_end+0xfffe1edc>
    1ec8:	0039883a 	mov	fp,zero
    1ecc:	003d0806 	br	12f0 <__alt_data_end+0xfffe1ef0>
    1ed0:	dc402617 	ldw	r17,152(sp)
    1ed4:	0441d30e 	bge	zero,r17,2624 <___vfprintf_internal_r+0x1a30>
    1ed8:	dc403217 	ldw	r17,200(sp)
    1edc:	d8803317 	ldw	r2,204(sp)
    1ee0:	1440010e 	bge	r2,r17,1ee8 <___vfprintf_internal_r+0x12f4>
    1ee4:	1023883a 	mov	r17,r2
    1ee8:	04400a0e 	bge	zero,r17,1f14 <___vfprintf_internal_r+0x1320>
    1eec:	d8801f17 	ldw	r2,124(sp)
    1ef0:	1c47883a 	add	r3,r3,r17
    1ef4:	44000015 	stw	r16,0(r8)
    1ef8:	10800044 	addi	r2,r2,1
    1efc:	44400115 	stw	r17,4(r8)
    1f00:	d8c02015 	stw	r3,128(sp)
    1f04:	d8801f15 	stw	r2,124(sp)
    1f08:	010001c4 	movi	r4,7
    1f0c:	20826516 	blt	r4,r2,28a4 <___vfprintf_internal_r+0x1cb0>
    1f10:	42000204 	addi	r8,r8,8
    1f14:	88026116 	blt	r17,zero,289c <___vfprintf_internal_r+0x1ca8>
    1f18:	d9003217 	ldw	r4,200(sp)
    1f1c:	2463c83a 	sub	r17,r4,r17
    1f20:	04407b0e 	bge	zero,r17,2110 <___vfprintf_internal_r+0x151c>
    1f24:	05800404 	movi	r22,16
    1f28:	d8801f17 	ldw	r2,124(sp)
    1f2c:	b4419d0e 	bge	r22,r17,25a4 <___vfprintf_internal_r+0x19b0>
    1f30:	01000074 	movhi	r4,1
    1f34:	21003284 	addi	r4,r4,202
    1f38:	d9002c15 	stw	r4,176(sp)
    1f3c:	070001c4 	movi	fp,7
    1f40:	dcc02d17 	ldw	r19,180(sp)
    1f44:	00000306 	br	1f54 <___vfprintf_internal_r+0x1360>
    1f48:	42000204 	addi	r8,r8,8
    1f4c:	8c7ffc04 	addi	r17,r17,-16
    1f50:	b441970e 	bge	r22,r17,25b0 <___vfprintf_internal_r+0x19bc>
    1f54:	18c00404 	addi	r3,r3,16
    1f58:	10800044 	addi	r2,r2,1
    1f5c:	45000015 	stw	r20,0(r8)
    1f60:	45800115 	stw	r22,4(r8)
    1f64:	d8c02015 	stw	r3,128(sp)
    1f68:	d8801f15 	stw	r2,124(sp)
    1f6c:	e0bff60e 	bge	fp,r2,1f48 <__alt_data_end+0xfffe2b48>
    1f70:	d9801e04 	addi	r6,sp,120
    1f74:	b80b883a 	mov	r5,r23
    1f78:	9809883a 	mov	r4,r19
    1f7c:	00078080 	call	7808 <__sprint_r>
    1f80:	103c201e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1f84:	d8c02017 	ldw	r3,128(sp)
    1f88:	d8801f17 	ldw	r2,124(sp)
    1f8c:	da000404 	addi	r8,sp,16
    1f90:	003fee06 	br	1f4c <__alt_data_end+0xfffe2b4c>
    1f94:	d9002d17 	ldw	r4,180(sp)
    1f98:	d9801e04 	addi	r6,sp,120
    1f9c:	b80b883a 	mov	r5,r23
    1fa0:	00078080 	call	7808 <__sprint_r>
    1fa4:	103c171e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    1fa8:	d8c02017 	ldw	r3,128(sp)
    1fac:	df002787 	ldb	fp,158(sp)
    1fb0:	da000404 	addi	r8,sp,16
    1fb4:	003d3406 	br	1488 <__alt_data_end+0xfffe2088>
    1fb8:	9080040c 	andi	r2,r18,16
    1fbc:	10016126 	beq	r2,zero,2544 <___vfprintf_internal_r+0x1950>
    1fc0:	d9402e17 	ldw	r5,184(sp)
    1fc4:	2cc00017 	ldw	r19,0(r5)
    1fc8:	29400104 	addi	r5,r5,4
    1fcc:	d9402e15 	stw	r5,184(sp)
    1fd0:	982dd7fa 	srai	r22,r19,31
    1fd4:	b005883a 	mov	r2,r22
    1fd8:	003c5a06 	br	1144 <__alt_data_end+0xfffe1d44>
    1fdc:	9080040c 	andi	r2,r18,16
    1fe0:	10003526 	beq	r2,zero,20b8 <___vfprintf_internal_r+0x14c4>
    1fe4:	d8c02e17 	ldw	r3,184(sp)
    1fe8:	d9002a17 	ldw	r4,168(sp)
    1fec:	d8002785 	stb	zero,158(sp)
    1ff0:	18800104 	addi	r2,r3,4
    1ff4:	1cc00017 	ldw	r19,0(r3)
    1ff8:	002d883a 	mov	r22,zero
    1ffc:	20003716 	blt	r4,zero,20dc <___vfprintf_internal_r+0x14e8>
    2000:	00ffdfc4 	movi	r3,-129
    2004:	d8802e15 	stw	r2,184(sp)
    2008:	90e4703a 	and	r18,r18,r3
    200c:	0039883a 	mov	fp,zero
    2010:	983dd426 	beq	r19,zero,1764 <__alt_data_end+0xfffe2364>
    2014:	00800244 	movi	r2,9
    2018:	14fc5336 	bltu	r2,r19,1168 <__alt_data_end+0xfffe1d68>
    201c:	d8c02817 	ldw	r3,160(sp)
    2020:	dc001dc4 	addi	r16,sp,119
    2024:	9cc00c04 	addi	r19,r19,48
    2028:	1c07c83a 	sub	r3,r3,r16
    202c:	dcc01dc5 	stb	r19,119(sp)
    2030:	d8c02b15 	stw	r3,172(sp)
    2034:	003cc606 	br	1350 <__alt_data_end+0xfffe1f50>
    2038:	d8803317 	ldw	r2,204(sp)
    203c:	143fffc4 	addi	r16,r2,-1
    2040:	043f4d0e 	bge	zero,r16,1d78 <__alt_data_end+0xfffe2978>
    2044:	07000404 	movi	fp,16
    2048:	e400810e 	bge	fp,r16,2250 <___vfprintf_internal_r+0x165c>
    204c:	01400074 	movhi	r5,1
    2050:	29403284 	addi	r5,r5,202
    2054:	d9402c15 	stw	r5,176(sp)
    2058:	01c001c4 	movi	r7,7
    205c:	dcc02d17 	ldw	r19,180(sp)
    2060:	00000306 	br	2070 <___vfprintf_internal_r+0x147c>
    2064:	b5800204 	addi	r22,r22,8
    2068:	843ffc04 	addi	r16,r16,-16
    206c:	e4007b0e 	bge	fp,r16,225c <___vfprintf_internal_r+0x1668>
    2070:	18c00404 	addi	r3,r3,16
    2074:	8c400044 	addi	r17,r17,1
    2078:	b5000015 	stw	r20,0(r22)
    207c:	b7000115 	stw	fp,4(r22)
    2080:	d8c02015 	stw	r3,128(sp)
    2084:	dc401f15 	stw	r17,124(sp)
    2088:	3c7ff60e 	bge	r7,r17,2064 <__alt_data_end+0xfffe2c64>
    208c:	d9801e04 	addi	r6,sp,120
    2090:	b80b883a 	mov	r5,r23
    2094:	9809883a 	mov	r4,r19
    2098:	d9c03c15 	stw	r7,240(sp)
    209c:	00078080 	call	7808 <__sprint_r>
    20a0:	d9c03c17 	ldw	r7,240(sp)
    20a4:	103bd71e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    20a8:	d8c02017 	ldw	r3,128(sp)
    20ac:	dc401f17 	ldw	r17,124(sp)
    20b0:	dd800404 	addi	r22,sp,16
    20b4:	003fec06 	br	2068 <__alt_data_end+0xfffe2c68>
    20b8:	9080100c 	andi	r2,r18,64
    20bc:	d8002785 	stb	zero,158(sp)
    20c0:	10010e26 	beq	r2,zero,24fc <___vfprintf_internal_r+0x1908>
    20c4:	d9402e17 	ldw	r5,184(sp)
    20c8:	d8c02a17 	ldw	r3,168(sp)
    20cc:	002d883a 	mov	r22,zero
    20d0:	28800104 	addi	r2,r5,4
    20d4:	2cc0000b 	ldhu	r19,0(r5)
    20d8:	183fc90e 	bge	r3,zero,2000 <__alt_data_end+0xfffe2c00>
    20dc:	d8802e15 	stw	r2,184(sp)
    20e0:	0039883a 	mov	fp,zero
    20e4:	9d84b03a 	or	r2,r19,r22
    20e8:	103c1e1e 	bne	r2,zero,1164 <__alt_data_end+0xfffe1d64>
    20ec:	00800044 	movi	r2,1
    20f0:	003e6c06 	br	1aa4 <__alt_data_end+0xfffe26a4>
    20f4:	d9002d17 	ldw	r4,180(sp)
    20f8:	d9801e04 	addi	r6,sp,120
    20fc:	b80b883a 	mov	r5,r23
    2100:	00078080 	call	7808 <__sprint_r>
    2104:	103bbf1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2108:	d8c02017 	ldw	r3,128(sp)
    210c:	da000404 	addi	r8,sp,16
    2110:	d9003217 	ldw	r4,200(sp)
    2114:	d8802617 	ldw	r2,152(sp)
    2118:	d9403317 	ldw	r5,204(sp)
    211c:	8123883a 	add	r17,r16,r4
    2120:	11400216 	blt	r2,r5,212c <___vfprintf_internal_r+0x1538>
    2124:	9100004c 	andi	r4,r18,1
    2128:	20000d26 	beq	r4,zero,2160 <___vfprintf_internal_r+0x156c>
    212c:	d9003717 	ldw	r4,220(sp)
    2130:	d9403417 	ldw	r5,208(sp)
    2134:	1907883a 	add	r3,r3,r4
    2138:	d9001f17 	ldw	r4,124(sp)
    213c:	41400015 	stw	r5,0(r8)
    2140:	d9403717 	ldw	r5,220(sp)
    2144:	21000044 	addi	r4,r4,1
    2148:	d8c02015 	stw	r3,128(sp)
    214c:	41400115 	stw	r5,4(r8)
    2150:	d9001f15 	stw	r4,124(sp)
    2154:	014001c4 	movi	r5,7
    2158:	2901e816 	blt	r5,r4,28fc <___vfprintf_internal_r+0x1d08>
    215c:	42000204 	addi	r8,r8,8
    2160:	d9003317 	ldw	r4,204(sp)
    2164:	8121883a 	add	r16,r16,r4
    2168:	2085c83a 	sub	r2,r4,r2
    216c:	8461c83a 	sub	r16,r16,r17
    2170:	1400010e 	bge	r2,r16,2178 <___vfprintf_internal_r+0x1584>
    2174:	1021883a 	mov	r16,r2
    2178:	04000a0e 	bge	zero,r16,21a4 <___vfprintf_internal_r+0x15b0>
    217c:	d9001f17 	ldw	r4,124(sp)
    2180:	1c07883a 	add	r3,r3,r16
    2184:	44400015 	stw	r17,0(r8)
    2188:	21000044 	addi	r4,r4,1
    218c:	44000115 	stw	r16,4(r8)
    2190:	d8c02015 	stw	r3,128(sp)
    2194:	d9001f15 	stw	r4,124(sp)
    2198:	014001c4 	movi	r5,7
    219c:	2901fb16 	blt	r5,r4,298c <___vfprintf_internal_r+0x1d98>
    21a0:	42000204 	addi	r8,r8,8
    21a4:	8001f716 	blt	r16,zero,2984 <___vfprintf_internal_r+0x1d90>
    21a8:	1421c83a 	sub	r16,r2,r16
    21ac:	043d160e 	bge	zero,r16,1608 <__alt_data_end+0xfffe2208>
    21b0:	04400404 	movi	r17,16
    21b4:	d8801f17 	ldw	r2,124(sp)
    21b8:	8c3efb0e 	bge	r17,r16,1da8 <__alt_data_end+0xfffe29a8>
    21bc:	01400074 	movhi	r5,1
    21c0:	29403284 	addi	r5,r5,202
    21c4:	d9402c15 	stw	r5,176(sp)
    21c8:	058001c4 	movi	r22,7
    21cc:	dcc02d17 	ldw	r19,180(sp)
    21d0:	00000306 	br	21e0 <___vfprintf_internal_r+0x15ec>
    21d4:	42000204 	addi	r8,r8,8
    21d8:	843ffc04 	addi	r16,r16,-16
    21dc:	8c3ef50e 	bge	r17,r16,1db4 <__alt_data_end+0xfffe29b4>
    21e0:	18c00404 	addi	r3,r3,16
    21e4:	10800044 	addi	r2,r2,1
    21e8:	45000015 	stw	r20,0(r8)
    21ec:	44400115 	stw	r17,4(r8)
    21f0:	d8c02015 	stw	r3,128(sp)
    21f4:	d8801f15 	stw	r2,124(sp)
    21f8:	b0bff60e 	bge	r22,r2,21d4 <__alt_data_end+0xfffe2dd4>
    21fc:	d9801e04 	addi	r6,sp,120
    2200:	b80b883a 	mov	r5,r23
    2204:	9809883a 	mov	r4,r19
    2208:	00078080 	call	7808 <__sprint_r>
    220c:	103b7d1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2210:	d8c02017 	ldw	r3,128(sp)
    2214:	d8801f17 	ldw	r2,124(sp)
    2218:	da000404 	addi	r8,sp,16
    221c:	003fee06 	br	21d8 <__alt_data_end+0xfffe2dd8>
    2220:	9088703a 	and	r4,r18,r2
    2224:	203eab1e 	bne	r4,zero,1cd4 <__alt_data_end+0xfffe28d4>
    2228:	dc401f17 	ldw	r17,124(sp)
    222c:	40800115 	stw	r2,4(r8)
    2230:	44000015 	stw	r16,0(r8)
    2234:	8c400044 	addi	r17,r17,1
    2238:	d8c02015 	stw	r3,128(sp)
    223c:	dc401f15 	stw	r17,124(sp)
    2240:	008001c4 	movi	r2,7
    2244:	14400e16 	blt	r2,r17,2280 <___vfprintf_internal_r+0x168c>
    2248:	45800204 	addi	r22,r8,8
    224c:	003eca06 	br	1d78 <__alt_data_end+0xfffe2978>
    2250:	01000074 	movhi	r4,1
    2254:	21003284 	addi	r4,r4,202
    2258:	d9002c15 	stw	r4,176(sp)
    225c:	d8802c17 	ldw	r2,176(sp)
    2260:	1c07883a 	add	r3,r3,r16
    2264:	8c400044 	addi	r17,r17,1
    2268:	b0800015 	stw	r2,0(r22)
    226c:	b4000115 	stw	r16,4(r22)
    2270:	d8c02015 	stw	r3,128(sp)
    2274:	dc401f15 	stw	r17,124(sp)
    2278:	008001c4 	movi	r2,7
    227c:	147ebd0e 	bge	r2,r17,1d74 <__alt_data_end+0xfffe2974>
    2280:	d9002d17 	ldw	r4,180(sp)
    2284:	d9801e04 	addi	r6,sp,120
    2288:	b80b883a 	mov	r5,r23
    228c:	00078080 	call	7808 <__sprint_r>
    2290:	103b5c1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2294:	d8c02017 	ldw	r3,128(sp)
    2298:	dc401f17 	ldw	r17,124(sp)
    229c:	dd800404 	addi	r22,sp,16
    22a0:	003eb506 	br	1d78 <__alt_data_end+0xfffe2978>
    22a4:	d9002d17 	ldw	r4,180(sp)
    22a8:	d9801e04 	addi	r6,sp,120
    22ac:	b80b883a 	mov	r5,r23
    22b0:	00078080 	call	7808 <__sprint_r>
    22b4:	103b531e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    22b8:	d8c02017 	ldw	r3,128(sp)
    22bc:	dc401f17 	ldw	r17,124(sp)
    22c0:	da000404 	addi	r8,sp,16
    22c4:	003e8d06 	br	1cfc <__alt_data_end+0xfffe28fc>
    22c8:	d9002d17 	ldw	r4,180(sp)
    22cc:	d9801e04 	addi	r6,sp,120
    22d0:	b80b883a 	mov	r5,r23
    22d4:	00078080 	call	7808 <__sprint_r>
    22d8:	103b4a1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    22dc:	d8c02017 	ldw	r3,128(sp)
    22e0:	dc401f17 	ldw	r17,124(sp)
    22e4:	dd800404 	addi	r22,sp,16
    22e8:	003e8f06 	br	1d28 <__alt_data_end+0xfffe2928>
    22ec:	0027883a 	mov	r19,zero
    22f0:	003f4a06 	br	201c <__alt_data_end+0xfffe2c1c>
    22f4:	d9002d17 	ldw	r4,180(sp)
    22f8:	d9801e04 	addi	r6,sp,120
    22fc:	b80b883a 	mov	r5,r23
    2300:	00078080 	call	7808 <__sprint_r>
    2304:	103b3f1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2308:	d8c02017 	ldw	r3,128(sp)
    230c:	da000404 	addi	r8,sp,16
    2310:	003c7b06 	br	1500 <__alt_data_end+0xfffe2100>
    2314:	d9402a17 	ldw	r5,168(sp)
    2318:	04e7c83a 	sub	r19,zero,r19
    231c:	07000b44 	movi	fp,45
    2320:	9804c03a 	cmpne	r2,r19,zero
    2324:	05adc83a 	sub	r22,zero,r22
    2328:	df002785 	stb	fp,158(sp)
    232c:	b0adc83a 	sub	r22,r22,r2
    2330:	28017b16 	blt	r5,zero,2920 <___vfprintf_internal_r+0x1d2c>
    2334:	00bfdfc4 	movi	r2,-129
    2338:	90a4703a 	and	r18,r18,r2
    233c:	003b8906 	br	1164 <__alt_data_end+0xfffe1d64>
    2340:	d9003617 	ldw	r4,216(sp)
    2344:	d9403817 	ldw	r5,224(sp)
    2348:	da003d15 	stw	r8,244(sp)
    234c:	00074700 	call	7470 <__fpclassifyd>
    2350:	da003d17 	ldw	r8,244(sp)
    2354:	1000f026 	beq	r2,zero,2718 <___vfprintf_internal_r+0x1b24>
    2358:	d9002a17 	ldw	r4,168(sp)
    235c:	05bff7c4 	movi	r22,-33
    2360:	00bfffc4 	movi	r2,-1
    2364:	8dac703a 	and	r22,r17,r22
    2368:	20820026 	beq	r4,r2,2b6c <___vfprintf_internal_r+0x1f78>
    236c:	008011c4 	movi	r2,71
    2370:	b081f726 	beq	r22,r2,2b50 <___vfprintf_internal_r+0x1f5c>
    2374:	d9003817 	ldw	r4,224(sp)
    2378:	90c04014 	ori	r3,r18,256
    237c:	d8c02c15 	stw	r3,176(sp)
    2380:	20021516 	blt	r4,zero,2bd8 <___vfprintf_internal_r+0x1fe4>
    2384:	dcc03817 	ldw	r19,224(sp)
    2388:	d8002905 	stb	zero,164(sp)
    238c:	00801984 	movi	r2,102
    2390:	8881f926 	beq	r17,r2,2b78 <___vfprintf_internal_r+0x1f84>
    2394:	00801184 	movi	r2,70
    2398:	88821c26 	beq	r17,r2,2c0c <___vfprintf_internal_r+0x2018>
    239c:	00801144 	movi	r2,69
    23a0:	b081ef26 	beq	r22,r2,2b60 <___vfprintf_internal_r+0x1f6c>
    23a4:	d8c02a17 	ldw	r3,168(sp)
    23a8:	d8802104 	addi	r2,sp,132
    23ac:	d8800315 	stw	r2,12(sp)
    23b0:	d9403617 	ldw	r5,216(sp)
    23b4:	d8802504 	addi	r2,sp,148
    23b8:	d9002d17 	ldw	r4,180(sp)
    23bc:	d8800215 	stw	r2,8(sp)
    23c0:	d8802604 	addi	r2,sp,152
    23c4:	d8c00015 	stw	r3,0(sp)
    23c8:	d8800115 	stw	r2,4(sp)
    23cc:	01c00084 	movi	r7,2
    23d0:	980d883a 	mov	r6,r19
    23d4:	d8c03c15 	stw	r3,240(sp)
    23d8:	da003d15 	stw	r8,244(sp)
    23dc:	00033240 	call	3324 <_dtoa_r>
    23e0:	1021883a 	mov	r16,r2
    23e4:	008019c4 	movi	r2,103
    23e8:	d8c03c17 	ldw	r3,240(sp)
    23ec:	da003d17 	ldw	r8,244(sp)
    23f0:	88817126 	beq	r17,r2,29b8 <___vfprintf_internal_r+0x1dc4>
    23f4:	008011c4 	movi	r2,71
    23f8:	88829126 	beq	r17,r2,2e40 <___vfprintf_internal_r+0x224c>
    23fc:	80f9883a 	add	fp,r16,r3
    2400:	d9003617 	ldw	r4,216(sp)
    2404:	000d883a 	mov	r6,zero
    2408:	000f883a 	mov	r7,zero
    240c:	980b883a 	mov	r5,r19
    2410:	da003d15 	stw	r8,244(sp)
    2414:	000c2f00 	call	c2f0 <__eqdf2>
    2418:	da003d17 	ldw	r8,244(sp)
    241c:	10018d26 	beq	r2,zero,2a54 <___vfprintf_internal_r+0x1e60>
    2420:	d8802117 	ldw	r2,132(sp)
    2424:	1700062e 	bgeu	r2,fp,2440 <___vfprintf_internal_r+0x184c>
    2428:	01000c04 	movi	r4,48
    242c:	10c00044 	addi	r3,r2,1
    2430:	d8c02115 	stw	r3,132(sp)
    2434:	11000005 	stb	r4,0(r2)
    2438:	d8802117 	ldw	r2,132(sp)
    243c:	173ffb36 	bltu	r2,fp,242c <__alt_data_end+0xfffe302c>
    2440:	1405c83a 	sub	r2,r2,r16
    2444:	d8803315 	stw	r2,204(sp)
    2448:	008011c4 	movi	r2,71
    244c:	b0817626 	beq	r22,r2,2a28 <___vfprintf_internal_r+0x1e34>
    2450:	00801944 	movi	r2,101
    2454:	1442800e 	bge	r2,r17,2e58 <___vfprintf_internal_r+0x2264>
    2458:	d8c02617 	ldw	r3,152(sp)
    245c:	00801984 	movi	r2,102
    2460:	d8c03215 	stw	r3,200(sp)
    2464:	8881fe26 	beq	r17,r2,2c60 <___vfprintf_internal_r+0x206c>
    2468:	d8c03217 	ldw	r3,200(sp)
    246c:	d9003317 	ldw	r4,204(sp)
    2470:	1901dd16 	blt	r3,r4,2be8 <___vfprintf_internal_r+0x1ff4>
    2474:	9480004c 	andi	r18,r18,1
    2478:	90022b1e 	bne	r18,zero,2d28 <___vfprintf_internal_r+0x2134>
    247c:	1805883a 	mov	r2,r3
    2480:	18028316 	blt	r3,zero,2e90 <___vfprintf_internal_r+0x229c>
    2484:	d8c03217 	ldw	r3,200(sp)
    2488:	044019c4 	movi	r17,103
    248c:	d8c02b15 	stw	r3,172(sp)
    2490:	df002907 	ldb	fp,164(sp)
    2494:	e001531e 	bne	fp,zero,29e4 <___vfprintf_internal_r+0x1df0>
    2498:	df002783 	ldbu	fp,158(sp)
    249c:	d8802915 	stw	r2,164(sp)
    24a0:	dc802c17 	ldw	r18,176(sp)
    24a4:	d8002a15 	stw	zero,168(sp)
    24a8:	003baf06 	br	1368 <__alt_data_end+0xfffe1f68>
    24ac:	d8c02e17 	ldw	r3,184(sp)
    24b0:	d9002e17 	ldw	r4,184(sp)
    24b4:	d9402e17 	ldw	r5,184(sp)
    24b8:	18c00017 	ldw	r3,0(r3)
    24bc:	21000117 	ldw	r4,4(r4)
    24c0:	29400204 	addi	r5,r5,8
    24c4:	d8c03615 	stw	r3,216(sp)
    24c8:	d9003815 	stw	r4,224(sp)
    24cc:	d9402e15 	stw	r5,184(sp)
    24d0:	003b5006 	br	1214 <__alt_data_end+0xfffe1e14>
    24d4:	ac400007 	ldb	r17,0(r21)
    24d8:	003a2806 	br	d7c <__alt_data_end+0xfffe197c>
    24dc:	9080100c 	andi	r2,r18,64
    24e0:	1000a826 	beq	r2,zero,2784 <___vfprintf_internal_r+0x1b90>
    24e4:	d8c02e17 	ldw	r3,184(sp)
    24e8:	002d883a 	mov	r22,zero
    24ec:	1cc0000b 	ldhu	r19,0(r3)
    24f0:	18c00104 	addi	r3,r3,4
    24f4:	d8c02e15 	stw	r3,184(sp)
    24f8:	003caf06 	br	17b8 <__alt_data_end+0xfffe23b8>
    24fc:	d9002e17 	ldw	r4,184(sp)
    2500:	d9402a17 	ldw	r5,168(sp)
    2504:	002d883a 	mov	r22,zero
    2508:	20800104 	addi	r2,r4,4
    250c:	24c00017 	ldw	r19,0(r4)
    2510:	283ebb0e 	bge	r5,zero,2000 <__alt_data_end+0xfffe2c00>
    2514:	003ef106 	br	20dc <__alt_data_end+0xfffe2cdc>
    2518:	9080040c 	andi	r2,r18,16
    251c:	1000921e 	bne	r2,zero,2768 <___vfprintf_internal_r+0x1b74>
    2520:	9480100c 	andi	r18,r18,64
    2524:	90013926 	beq	r18,zero,2a0c <___vfprintf_internal_r+0x1e18>
    2528:	d9402e17 	ldw	r5,184(sp)
    252c:	d8c02f17 	ldw	r3,188(sp)
    2530:	28800017 	ldw	r2,0(r5)
    2534:	29400104 	addi	r5,r5,4
    2538:	d9402e15 	stw	r5,184(sp)
    253c:	10c0000d 	sth	r3,0(r2)
    2540:	0039e406 	br	cd4 <__alt_data_end+0xfffe18d4>
    2544:	9080100c 	andi	r2,r18,64
    2548:	10008026 	beq	r2,zero,274c <___vfprintf_internal_r+0x1b58>
    254c:	d8802e17 	ldw	r2,184(sp)
    2550:	14c0000f 	ldh	r19,0(r2)
    2554:	10800104 	addi	r2,r2,4
    2558:	d8802e15 	stw	r2,184(sp)
    255c:	982dd7fa 	srai	r22,r19,31
    2560:	b005883a 	mov	r2,r22
    2564:	003af706 	br	1144 <__alt_data_end+0xfffe1d44>
    2568:	9080100c 	andi	r2,r18,64
    256c:	d8002785 	stb	zero,158(sp)
    2570:	10008a1e 	bne	r2,zero,279c <___vfprintf_internal_r+0x1ba8>
    2574:	d9002e17 	ldw	r4,184(sp)
    2578:	d9402a17 	ldw	r5,168(sp)
    257c:	002d883a 	mov	r22,zero
    2580:	20800104 	addi	r2,r4,4
    2584:	24c00017 	ldw	r19,0(r4)
    2588:	283e4b0e 	bge	r5,zero,1eb8 <__alt_data_end+0xfffe2ab8>
    258c:	9d86b03a 	or	r3,r19,r22
    2590:	d8802e15 	stw	r2,184(sp)
    2594:	183e4c1e 	bne	r3,zero,1ec8 <__alt_data_end+0xfffe2ac8>
    2598:	0039883a 	mov	fp,zero
    259c:	0005883a 	mov	r2,zero
    25a0:	003d4006 	br	1aa4 <__alt_data_end+0xfffe26a4>
    25a4:	01400074 	movhi	r5,1
    25a8:	29403284 	addi	r5,r5,202
    25ac:	d9402c15 	stw	r5,176(sp)
    25b0:	d9402c17 	ldw	r5,176(sp)
    25b4:	1c47883a 	add	r3,r3,r17
    25b8:	10800044 	addi	r2,r2,1
    25bc:	41400015 	stw	r5,0(r8)
    25c0:	44400115 	stw	r17,4(r8)
    25c4:	d8c02015 	stw	r3,128(sp)
    25c8:	d8801f15 	stw	r2,124(sp)
    25cc:	010001c4 	movi	r4,7
    25d0:	20bec816 	blt	r4,r2,20f4 <__alt_data_end+0xfffe2cf4>
    25d4:	42000204 	addi	r8,r8,8
    25d8:	003ecd06 	br	2110 <__alt_data_end+0xfffe2d10>
    25dc:	d9002a17 	ldw	r4,168(sp)
    25e0:	d8002785 	stb	zero,158(sp)
    25e4:	203d2d16 	blt	r4,zero,1a9c <__alt_data_end+0xfffe269c>
    25e8:	00bfdfc4 	movi	r2,-129
    25ec:	90a4703a 	and	r18,r18,r2
    25f0:	003a6106 	br	f78 <__alt_data_end+0xfffe1b78>
    25f4:	01000074 	movhi	r4,1
    25f8:	21003284 	addi	r4,r4,202
    25fc:	d9002c15 	stw	r4,176(sp)
    2600:	003bea06 	br	15ac <__alt_data_end+0xfffe21ac>
    2604:	d9002d17 	ldw	r4,180(sp)
    2608:	d9801e04 	addi	r6,sp,120
    260c:	b80b883a 	mov	r5,r23
    2610:	00078080 	call	7808 <__sprint_r>
    2614:	103a7b1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2618:	d8c02017 	ldw	r3,128(sp)
    261c:	da000404 	addi	r8,sp,16
    2620:	003d4106 	br	1b28 <__alt_data_end+0xfffe2728>
    2624:	d8801f17 	ldw	r2,124(sp)
    2628:	01400074 	movhi	r5,1
    262c:	01000044 	movi	r4,1
    2630:	18c00044 	addi	r3,r3,1
    2634:	10800044 	addi	r2,r2,1
    2638:	29403204 	addi	r5,r5,200
    263c:	41000115 	stw	r4,4(r8)
    2640:	41400015 	stw	r5,0(r8)
    2644:	d8c02015 	stw	r3,128(sp)
    2648:	d8801f15 	stw	r2,124(sp)
    264c:	010001c4 	movi	r4,7
    2650:	20805c16 	blt	r4,r2,27c4 <___vfprintf_internal_r+0x1bd0>
    2654:	42000204 	addi	r8,r8,8
    2658:	8800041e 	bne	r17,zero,266c <___vfprintf_internal_r+0x1a78>
    265c:	d8803317 	ldw	r2,204(sp)
    2660:	1000021e 	bne	r2,zero,266c <___vfprintf_internal_r+0x1a78>
    2664:	9080004c 	andi	r2,r18,1
    2668:	103be726 	beq	r2,zero,1608 <__alt_data_end+0xfffe2208>
    266c:	d9003717 	ldw	r4,220(sp)
    2670:	d8801f17 	ldw	r2,124(sp)
    2674:	d9403417 	ldw	r5,208(sp)
    2678:	20c7883a 	add	r3,r4,r3
    267c:	10800044 	addi	r2,r2,1
    2680:	41000115 	stw	r4,4(r8)
    2684:	41400015 	stw	r5,0(r8)
    2688:	d8c02015 	stw	r3,128(sp)
    268c:	d8801f15 	stw	r2,124(sp)
    2690:	010001c4 	movi	r4,7
    2694:	20812116 	blt	r4,r2,2b1c <___vfprintf_internal_r+0x1f28>
    2698:	42000204 	addi	r8,r8,8
    269c:	0463c83a 	sub	r17,zero,r17
    26a0:	0440730e 	bge	zero,r17,2870 <___vfprintf_internal_r+0x1c7c>
    26a4:	05800404 	movi	r22,16
    26a8:	b440860e 	bge	r22,r17,28c4 <___vfprintf_internal_r+0x1cd0>
    26ac:	01400074 	movhi	r5,1
    26b0:	29403284 	addi	r5,r5,202
    26b4:	d9402c15 	stw	r5,176(sp)
    26b8:	070001c4 	movi	fp,7
    26bc:	dcc02d17 	ldw	r19,180(sp)
    26c0:	00000306 	br	26d0 <___vfprintf_internal_r+0x1adc>
    26c4:	42000204 	addi	r8,r8,8
    26c8:	8c7ffc04 	addi	r17,r17,-16
    26cc:	b440800e 	bge	r22,r17,28d0 <___vfprintf_internal_r+0x1cdc>
    26d0:	18c00404 	addi	r3,r3,16
    26d4:	10800044 	addi	r2,r2,1
    26d8:	45000015 	stw	r20,0(r8)
    26dc:	45800115 	stw	r22,4(r8)
    26e0:	d8c02015 	stw	r3,128(sp)
    26e4:	d8801f15 	stw	r2,124(sp)
    26e8:	e0bff60e 	bge	fp,r2,26c4 <__alt_data_end+0xfffe32c4>
    26ec:	d9801e04 	addi	r6,sp,120
    26f0:	b80b883a 	mov	r5,r23
    26f4:	9809883a 	mov	r4,r19
    26f8:	00078080 	call	7808 <__sprint_r>
    26fc:	103a411e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2700:	d8c02017 	ldw	r3,128(sp)
    2704:	d8801f17 	ldw	r2,124(sp)
    2708:	da000404 	addi	r8,sp,16
    270c:	003fee06 	br	26c8 <__alt_data_end+0xfffe32c8>
    2710:	00bfffc4 	movi	r2,-1
    2714:	003a3f06 	br	1014 <__alt_data_end+0xfffe1c14>
    2718:	008011c4 	movi	r2,71
    271c:	1440b816 	blt	r2,r17,2a00 <___vfprintf_internal_r+0x1e0c>
    2720:	04000074 	movhi	r16,1
    2724:	84002404 	addi	r16,r16,144
    2728:	00c000c4 	movi	r3,3
    272c:	00bfdfc4 	movi	r2,-129
    2730:	d8c02915 	stw	r3,164(sp)
    2734:	90a4703a 	and	r18,r18,r2
    2738:	df002783 	ldbu	fp,158(sp)
    273c:	d8c02b15 	stw	r3,172(sp)
    2740:	d8002a15 	stw	zero,168(sp)
    2744:	d8003215 	stw	zero,200(sp)
    2748:	003b0706 	br	1368 <__alt_data_end+0xfffe1f68>
    274c:	d8c02e17 	ldw	r3,184(sp)
    2750:	1cc00017 	ldw	r19,0(r3)
    2754:	18c00104 	addi	r3,r3,4
    2758:	d8c02e15 	stw	r3,184(sp)
    275c:	982dd7fa 	srai	r22,r19,31
    2760:	b005883a 	mov	r2,r22
    2764:	003a7706 	br	1144 <__alt_data_end+0xfffe1d44>
    2768:	d8c02e17 	ldw	r3,184(sp)
    276c:	d9002f17 	ldw	r4,188(sp)
    2770:	18800017 	ldw	r2,0(r3)
    2774:	18c00104 	addi	r3,r3,4
    2778:	d8c02e15 	stw	r3,184(sp)
    277c:	11000015 	stw	r4,0(r2)
    2780:	00395406 	br	cd4 <__alt_data_end+0xfffe18d4>
    2784:	d9002e17 	ldw	r4,184(sp)
    2788:	002d883a 	mov	r22,zero
    278c:	24c00017 	ldw	r19,0(r4)
    2790:	21000104 	addi	r4,r4,4
    2794:	d9002e15 	stw	r4,184(sp)
    2798:	003c0706 	br	17b8 <__alt_data_end+0xfffe23b8>
    279c:	d9402e17 	ldw	r5,184(sp)
    27a0:	d8c02a17 	ldw	r3,168(sp)
    27a4:	002d883a 	mov	r22,zero
    27a8:	28800104 	addi	r2,r5,4
    27ac:	2cc0000b 	ldhu	r19,0(r5)
    27b0:	183dc10e 	bge	r3,zero,1eb8 <__alt_data_end+0xfffe2ab8>
    27b4:	003f7506 	br	258c <__alt_data_end+0xfffe318c>
    27b8:	04000074 	movhi	r16,1
    27bc:	84002204 	addi	r16,r16,136
    27c0:	003aa706 	br	1260 <__alt_data_end+0xfffe1e60>
    27c4:	d9002d17 	ldw	r4,180(sp)
    27c8:	d9801e04 	addi	r6,sp,120
    27cc:	b80b883a 	mov	r5,r23
    27d0:	00078080 	call	7808 <__sprint_r>
    27d4:	103a0b1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    27d8:	dc402617 	ldw	r17,152(sp)
    27dc:	d8c02017 	ldw	r3,128(sp)
    27e0:	da000404 	addi	r8,sp,16
    27e4:	003f9c06 	br	2658 <__alt_data_end+0xfffe3258>
    27e8:	ac400043 	ldbu	r17,1(r21)
    27ec:	84000814 	ori	r16,r16,32
    27f0:	ad400044 	addi	r21,r21,1
    27f4:	8c403fcc 	andi	r17,r17,255
    27f8:	8c40201c 	xori	r17,r17,128
    27fc:	8c7fe004 	addi	r17,r17,-128
    2800:	00395e06 	br	d7c <__alt_data_end+0xfffe197c>
    2804:	d8c02e15 	stw	r3,184(sp)
    2808:	0039883a 	mov	fp,zero
    280c:	003e3506 	br	20e4 <__alt_data_end+0xfffe2ce4>
    2810:	d9002d17 	ldw	r4,180(sp)
    2814:	d9801e04 	addi	r6,sp,120
    2818:	b80b883a 	mov	r5,r23
    281c:	00078080 	call	7808 <__sprint_r>
    2820:	1039f81e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2824:	d8c02017 	ldw	r3,128(sp)
    2828:	da000404 	addi	r8,sp,16
    282c:	003cd006 	br	1b70 <__alt_data_end+0xfffe2770>
    2830:	8009883a 	mov	r4,r16
    2834:	df003d15 	stw	fp,244(sp)
    2838:	00076740 	call	7674 <strlen>
    283c:	d8802b15 	stw	r2,172(sp)
    2840:	da003d17 	ldw	r8,244(sp)
    2844:	103c200e 	bge	r2,zero,18c8 <__alt_data_end+0xfffe24c8>
    2848:	0005883a 	mov	r2,zero
    284c:	003c1e06 	br	18c8 <__alt_data_end+0xfffe24c8>
    2850:	d9002d17 	ldw	r4,180(sp)
    2854:	d9801e04 	addi	r6,sp,120
    2858:	b80b883a 	mov	r5,r23
    285c:	00078080 	call	7808 <__sprint_r>
    2860:	1039e81e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2864:	d8c02017 	ldw	r3,128(sp)
    2868:	d8801f17 	ldw	r2,124(sp)
    286c:	da000404 	addi	r8,sp,16
    2870:	d9403317 	ldw	r5,204(sp)
    2874:	10800044 	addi	r2,r2,1
    2878:	44000015 	stw	r16,0(r8)
    287c:	28c7883a 	add	r3,r5,r3
    2880:	003b5b06 	br	15f0 <__alt_data_end+0xfffe21f0>
    2884:	01000074 	movhi	r4,1
    2888:	21003684 	addi	r4,r4,218
    288c:	d9003515 	stw	r4,212(sp)
    2890:	003af206 	br	145c <__alt_data_end+0xfffe205c>
    2894:	013fffc4 	movi	r4,-1
    2898:	003a0806 	br	10bc <__alt_data_end+0xfffe1cbc>
    289c:	0023883a 	mov	r17,zero
    28a0:	003d9d06 	br	1f18 <__alt_data_end+0xfffe2b18>
    28a4:	d9002d17 	ldw	r4,180(sp)
    28a8:	d9801e04 	addi	r6,sp,120
    28ac:	b80b883a 	mov	r5,r23
    28b0:	00078080 	call	7808 <__sprint_r>
    28b4:	1039d31e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    28b8:	d8c02017 	ldw	r3,128(sp)
    28bc:	da000404 	addi	r8,sp,16
    28c0:	003d9406 	br	1f14 <__alt_data_end+0xfffe2b14>
    28c4:	01000074 	movhi	r4,1
    28c8:	21003284 	addi	r4,r4,202
    28cc:	d9002c15 	stw	r4,176(sp)
    28d0:	d9002c17 	ldw	r4,176(sp)
    28d4:	1c47883a 	add	r3,r3,r17
    28d8:	10800044 	addi	r2,r2,1
    28dc:	41000015 	stw	r4,0(r8)
    28e0:	44400115 	stw	r17,4(r8)
    28e4:	d8c02015 	stw	r3,128(sp)
    28e8:	d8801f15 	stw	r2,124(sp)
    28ec:	010001c4 	movi	r4,7
    28f0:	20bfd716 	blt	r4,r2,2850 <__alt_data_end+0xfffe3450>
    28f4:	42000204 	addi	r8,r8,8
    28f8:	003fdd06 	br	2870 <__alt_data_end+0xfffe3470>
    28fc:	d9002d17 	ldw	r4,180(sp)
    2900:	d9801e04 	addi	r6,sp,120
    2904:	b80b883a 	mov	r5,r23
    2908:	00078080 	call	7808 <__sprint_r>
    290c:	1039bd1e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2910:	d8802617 	ldw	r2,152(sp)
    2914:	d8c02017 	ldw	r3,128(sp)
    2918:	da000404 	addi	r8,sp,16
    291c:	003e1006 	br	2160 <__alt_data_end+0xfffe2d60>
    2920:	00800044 	movi	r2,1
    2924:	10803fcc 	andi	r2,r2,255
    2928:	00c00044 	movi	r3,1
    292c:	10fa0d26 	beq	r2,r3,1164 <__alt_data_end+0xfffe1d64>
    2930:	00c00084 	movi	r3,2
    2934:	10fbaf26 	beq	r2,r3,17f4 <__alt_data_end+0xfffe23f4>
    2938:	003a6d06 	br	12f0 <__alt_data_end+0xfffe1ef0>
    293c:	01000074 	movhi	r4,1
    2940:	21003684 	addi	r4,r4,218
    2944:	d9003515 	stw	r4,212(sp)
    2948:	003b5406 	br	169c <__alt_data_end+0xfffe229c>
    294c:	d8802a17 	ldw	r2,168(sp)
    2950:	00c00184 	movi	r3,6
    2954:	1880012e 	bgeu	r3,r2,295c <___vfprintf_internal_r+0x1d68>
    2958:	1805883a 	mov	r2,r3
    295c:	d8802b15 	stw	r2,172(sp)
    2960:	1000ef16 	blt	r2,zero,2d20 <___vfprintf_internal_r+0x212c>
    2964:	04000074 	movhi	r16,1
    2968:	d8802915 	stw	r2,164(sp)
    296c:	dcc02e15 	stw	r19,184(sp)
    2970:	d8002a15 	stw	zero,168(sp)
    2974:	d8003215 	stw	zero,200(sp)
    2978:	84003004 	addi	r16,r16,192
    297c:	0039883a 	mov	fp,zero
    2980:	003a8006 	br	1384 <__alt_data_end+0xfffe1f84>
    2984:	0021883a 	mov	r16,zero
    2988:	003e0706 	br	21a8 <__alt_data_end+0xfffe2da8>
    298c:	d9002d17 	ldw	r4,180(sp)
    2990:	d9801e04 	addi	r6,sp,120
    2994:	b80b883a 	mov	r5,r23
    2998:	00078080 	call	7808 <__sprint_r>
    299c:	1039991e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    29a0:	d8802617 	ldw	r2,152(sp)
    29a4:	d9403317 	ldw	r5,204(sp)
    29a8:	d8c02017 	ldw	r3,128(sp)
    29ac:	da000404 	addi	r8,sp,16
    29b0:	2885c83a 	sub	r2,r5,r2
    29b4:	003dfb06 	br	21a4 <__alt_data_end+0xfffe2da4>
    29b8:	9080004c 	andi	r2,r18,1
    29bc:	103e8f1e 	bne	r2,zero,23fc <__alt_data_end+0xfffe2ffc>
    29c0:	d8802117 	ldw	r2,132(sp)
    29c4:	003e9e06 	br	2440 <__alt_data_end+0xfffe3040>
    29c8:	1025883a 	mov	r18,r2
    29cc:	0039883a 	mov	fp,zero
    29d0:	00800084 	movi	r2,2
    29d4:	003fd306 	br	2924 <__alt_data_end+0xfffe3524>
    29d8:	07000b44 	movi	fp,45
    29dc:	df002785 	stb	fp,158(sp)
    29e0:	003a1b06 	br	1250 <__alt_data_end+0xfffe1e50>
    29e4:	00c00b44 	movi	r3,45
    29e8:	d8c02785 	stb	r3,158(sp)
    29ec:	d8802915 	stw	r2,164(sp)
    29f0:	dc802c17 	ldw	r18,176(sp)
    29f4:	d8002a15 	stw	zero,168(sp)
    29f8:	07000b44 	movi	fp,45
    29fc:	003a5e06 	br	1378 <__alt_data_end+0xfffe1f78>
    2a00:	04000074 	movhi	r16,1
    2a04:	84002504 	addi	r16,r16,148
    2a08:	003f4706 	br	2728 <__alt_data_end+0xfffe3328>
    2a0c:	d9002e17 	ldw	r4,184(sp)
    2a10:	d9402f17 	ldw	r5,188(sp)
    2a14:	20800017 	ldw	r2,0(r4)
    2a18:	21000104 	addi	r4,r4,4
    2a1c:	d9002e15 	stw	r4,184(sp)
    2a20:	11400015 	stw	r5,0(r2)
    2a24:	0038ab06 	br	cd4 <__alt_data_end+0xfffe18d4>
    2a28:	dd802617 	ldw	r22,152(sp)
    2a2c:	00bfff44 	movi	r2,-3
    2a30:	b0801c16 	blt	r22,r2,2aa4 <___vfprintf_internal_r+0x1eb0>
    2a34:	d9402a17 	ldw	r5,168(sp)
    2a38:	2d801a16 	blt	r5,r22,2aa4 <___vfprintf_internal_r+0x1eb0>
    2a3c:	dd803215 	stw	r22,200(sp)
    2a40:	003e8906 	br	2468 <__alt_data_end+0xfffe3068>
    2a44:	01000074 	movhi	r4,1
    2a48:	21003284 	addi	r4,r4,202
    2a4c:	d9002c15 	stw	r4,176(sp)
    2a50:	003c9106 	br	1c98 <__alt_data_end+0xfffe2898>
    2a54:	e005883a 	mov	r2,fp
    2a58:	003e7906 	br	2440 <__alt_data_end+0xfffe3040>
    2a5c:	d9002a17 	ldw	r4,168(sp)
    2a60:	df002783 	ldbu	fp,158(sp)
    2a64:	dcc02e15 	stw	r19,184(sp)
    2a68:	d9002915 	stw	r4,164(sp)
    2a6c:	d9002b15 	stw	r4,172(sp)
    2a70:	d8002a15 	stw	zero,168(sp)
    2a74:	d8003215 	stw	zero,200(sp)
    2a78:	003a3b06 	br	1368 <__alt_data_end+0xfffe1f68>
    2a7c:	9080004c 	andi	r2,r18,1
    2a80:	0039883a 	mov	fp,zero
    2a84:	10000426 	beq	r2,zero,2a98 <___vfprintf_internal_r+0x1ea4>
    2a88:	00800c04 	movi	r2,48
    2a8c:	dc001dc4 	addi	r16,sp,119
    2a90:	d8801dc5 	stb	r2,119(sp)
    2a94:	003b6406 	br	1828 <__alt_data_end+0xfffe2428>
    2a98:	d8002b15 	stw	zero,172(sp)
    2a9c:	dc001e04 	addi	r16,sp,120
    2aa0:	003a2b06 	br	1350 <__alt_data_end+0xfffe1f50>
    2aa4:	8c7fff84 	addi	r17,r17,-2
    2aa8:	b5bfffc4 	addi	r22,r22,-1
    2aac:	dd802615 	stw	r22,152(sp)
    2ab0:	dc4022c5 	stb	r17,139(sp)
    2ab4:	b000bf16 	blt	r22,zero,2db4 <___vfprintf_internal_r+0x21c0>
    2ab8:	00800ac4 	movi	r2,43
    2abc:	d8802305 	stb	r2,140(sp)
    2ac0:	00800244 	movi	r2,9
    2ac4:	15807016 	blt	r2,r22,2c88 <___vfprintf_internal_r+0x2094>
    2ac8:	00800c04 	movi	r2,48
    2acc:	b5800c04 	addi	r22,r22,48
    2ad0:	d8802345 	stb	r2,141(sp)
    2ad4:	dd802385 	stb	r22,142(sp)
    2ad8:	d88023c4 	addi	r2,sp,143
    2adc:	df0022c4 	addi	fp,sp,139
    2ae0:	d8c03317 	ldw	r3,204(sp)
    2ae4:	1739c83a 	sub	fp,r2,fp
    2ae8:	d9003317 	ldw	r4,204(sp)
    2aec:	e0c7883a 	add	r3,fp,r3
    2af0:	df003a15 	stw	fp,232(sp)
    2af4:	d8c02b15 	stw	r3,172(sp)
    2af8:	00800044 	movi	r2,1
    2afc:	1100b30e 	bge	r2,r4,2dcc <___vfprintf_internal_r+0x21d8>
    2b00:	d8c02b17 	ldw	r3,172(sp)
    2b04:	18c00044 	addi	r3,r3,1
    2b08:	d8c02b15 	stw	r3,172(sp)
    2b0c:	1805883a 	mov	r2,r3
    2b10:	1800ac16 	blt	r3,zero,2dc4 <___vfprintf_internal_r+0x21d0>
    2b14:	d8003215 	stw	zero,200(sp)
    2b18:	003e5d06 	br	2490 <__alt_data_end+0xfffe3090>
    2b1c:	d9002d17 	ldw	r4,180(sp)
    2b20:	d9801e04 	addi	r6,sp,120
    2b24:	b80b883a 	mov	r5,r23
    2b28:	00078080 	call	7808 <__sprint_r>
    2b2c:	1039351e 	bne	r2,zero,1004 <__alt_data_end+0xfffe1c04>
    2b30:	dc402617 	ldw	r17,152(sp)
    2b34:	d8c02017 	ldw	r3,128(sp)
    2b38:	d8801f17 	ldw	r2,124(sp)
    2b3c:	da000404 	addi	r8,sp,16
    2b40:	003ed606 	br	269c <__alt_data_end+0xfffe329c>
    2b44:	182b883a 	mov	r21,r3
    2b48:	d8002a15 	stw	zero,168(sp)
    2b4c:	00388c06 	br	d80 <__alt_data_end+0xfffe1980>
    2b50:	d8802a17 	ldw	r2,168(sp)
    2b54:	103e071e 	bne	r2,zero,2374 <__alt_data_end+0xfffe2f74>
    2b58:	dc002a15 	stw	r16,168(sp)
    2b5c:	003e0506 	br	2374 <__alt_data_end+0xfffe2f74>
    2b60:	d9002a17 	ldw	r4,168(sp)
    2b64:	20c00044 	addi	r3,r4,1
    2b68:	003e0f06 	br	23a8 <__alt_data_end+0xfffe2fa8>
    2b6c:	01400184 	movi	r5,6
    2b70:	d9402a15 	stw	r5,168(sp)
    2b74:	003dff06 	br	2374 <__alt_data_end+0xfffe2f74>
    2b78:	d8802104 	addi	r2,sp,132
    2b7c:	d8800315 	stw	r2,12(sp)
    2b80:	d8802504 	addi	r2,sp,148
    2b84:	d8800215 	stw	r2,8(sp)
    2b88:	d8802604 	addi	r2,sp,152
    2b8c:	d8800115 	stw	r2,4(sp)
    2b90:	d8802a17 	ldw	r2,168(sp)
    2b94:	d9403617 	ldw	r5,216(sp)
    2b98:	d9002d17 	ldw	r4,180(sp)
    2b9c:	d8800015 	stw	r2,0(sp)
    2ba0:	01c000c4 	movi	r7,3
    2ba4:	980d883a 	mov	r6,r19
    2ba8:	da003d15 	stw	r8,244(sp)
    2bac:	00033240 	call	3324 <_dtoa_r>
    2bb0:	d8c02a17 	ldw	r3,168(sp)
    2bb4:	da003d17 	ldw	r8,244(sp)
    2bb8:	1021883a 	mov	r16,r2
    2bbc:	10f9883a 	add	fp,r2,r3
    2bc0:	81000007 	ldb	r4,0(r16)
    2bc4:	00800c04 	movi	r2,48
    2bc8:	20805e26 	beq	r4,r2,2d44 <___vfprintf_internal_r+0x2150>
    2bcc:	d8c02617 	ldw	r3,152(sp)
    2bd0:	e0f9883a 	add	fp,fp,r3
    2bd4:	003e0a06 	br	2400 <__alt_data_end+0xfffe3000>
    2bd8:	00c00b44 	movi	r3,45
    2bdc:	24e0003c 	xorhi	r19,r4,32768
    2be0:	d8c02905 	stb	r3,164(sp)
    2be4:	003de906 	br	238c <__alt_data_end+0xfffe2f8c>
    2be8:	d8c03217 	ldw	r3,200(sp)
    2bec:	00c07a0e 	bge	zero,r3,2dd8 <___vfprintf_internal_r+0x21e4>
    2bf0:	00800044 	movi	r2,1
    2bf4:	d9003317 	ldw	r4,204(sp)
    2bf8:	1105883a 	add	r2,r2,r4
    2bfc:	d8802b15 	stw	r2,172(sp)
    2c00:	10004e16 	blt	r2,zero,2d3c <___vfprintf_internal_r+0x2148>
    2c04:	044019c4 	movi	r17,103
    2c08:	003e2106 	br	2490 <__alt_data_end+0xfffe3090>
    2c0c:	d9002a17 	ldw	r4,168(sp)
    2c10:	d8802104 	addi	r2,sp,132
    2c14:	d8800315 	stw	r2,12(sp)
    2c18:	d9000015 	stw	r4,0(sp)
    2c1c:	d8802504 	addi	r2,sp,148
    2c20:	d9403617 	ldw	r5,216(sp)
    2c24:	d9002d17 	ldw	r4,180(sp)
    2c28:	d8800215 	stw	r2,8(sp)
    2c2c:	d8802604 	addi	r2,sp,152
    2c30:	d8800115 	stw	r2,4(sp)
    2c34:	01c000c4 	movi	r7,3
    2c38:	980d883a 	mov	r6,r19
    2c3c:	da003d15 	stw	r8,244(sp)
    2c40:	00033240 	call	3324 <_dtoa_r>
    2c44:	d8c02a17 	ldw	r3,168(sp)
    2c48:	da003d17 	ldw	r8,244(sp)
    2c4c:	1021883a 	mov	r16,r2
    2c50:	00801184 	movi	r2,70
    2c54:	80f9883a 	add	fp,r16,r3
    2c58:	88bfd926 	beq	r17,r2,2bc0 <__alt_data_end+0xfffe37c0>
    2c5c:	003de806 	br	2400 <__alt_data_end+0xfffe3000>
    2c60:	d9002a17 	ldw	r4,168(sp)
    2c64:	00c04d0e 	bge	zero,r3,2d9c <___vfprintf_internal_r+0x21a8>
    2c68:	2000441e 	bne	r4,zero,2d7c <___vfprintf_internal_r+0x2188>
    2c6c:	9480004c 	andi	r18,r18,1
    2c70:	9000421e 	bne	r18,zero,2d7c <___vfprintf_internal_r+0x2188>
    2c74:	1805883a 	mov	r2,r3
    2c78:	18006f16 	blt	r3,zero,2e38 <___vfprintf_internal_r+0x2244>
    2c7c:	d8c03217 	ldw	r3,200(sp)
    2c80:	d8c02b15 	stw	r3,172(sp)
    2c84:	003e0206 	br	2490 <__alt_data_end+0xfffe3090>
    2c88:	df0022c4 	addi	fp,sp,139
    2c8c:	dc002a15 	stw	r16,168(sp)
    2c90:	4027883a 	mov	r19,r8
    2c94:	e021883a 	mov	r16,fp
    2c98:	b009883a 	mov	r4,r22
    2c9c:	01400284 	movi	r5,10
    2ca0:	000af1c0 	call	af1c <__modsi3>
    2ca4:	10800c04 	addi	r2,r2,48
    2ca8:	843fffc4 	addi	r16,r16,-1
    2cac:	b009883a 	mov	r4,r22
    2cb0:	01400284 	movi	r5,10
    2cb4:	80800005 	stb	r2,0(r16)
    2cb8:	000ae980 	call	ae98 <__divsi3>
    2cbc:	102d883a 	mov	r22,r2
    2cc0:	00800244 	movi	r2,9
    2cc4:	15bff416 	blt	r2,r22,2c98 <__alt_data_end+0xfffe3898>
    2cc8:	9811883a 	mov	r8,r19
    2ccc:	b0800c04 	addi	r2,r22,48
    2cd0:	8027883a 	mov	r19,r16
    2cd4:	997fffc4 	addi	r5,r19,-1
    2cd8:	98bfffc5 	stb	r2,-1(r19)
    2cdc:	dc002a17 	ldw	r16,168(sp)
    2ce0:	2f006d2e 	bgeu	r5,fp,2e98 <___vfprintf_internal_r+0x22a4>
    2ce4:	d9c02384 	addi	r7,sp,142
    2ce8:	3ccfc83a 	sub	r7,r7,r19
    2cec:	d9002344 	addi	r4,sp,141
    2cf0:	e1cf883a 	add	r7,fp,r7
    2cf4:	00000106 	br	2cfc <___vfprintf_internal_r+0x2108>
    2cf8:	28800003 	ldbu	r2,0(r5)
    2cfc:	20800005 	stb	r2,0(r4)
    2d00:	21000044 	addi	r4,r4,1
    2d04:	29400044 	addi	r5,r5,1
    2d08:	393ffb1e 	bne	r7,r4,2cf8 <__alt_data_end+0xfffe38f8>
    2d0c:	d8802304 	addi	r2,sp,140
    2d10:	14c5c83a 	sub	r2,r2,r19
    2d14:	d8c02344 	addi	r3,sp,141
    2d18:	1885883a 	add	r2,r3,r2
    2d1c:	003f7006 	br	2ae0 <__alt_data_end+0xfffe36e0>
    2d20:	0005883a 	mov	r2,zero
    2d24:	003f0f06 	br	2964 <__alt_data_end+0xfffe3564>
    2d28:	d8c03217 	ldw	r3,200(sp)
    2d2c:	18c00044 	addi	r3,r3,1
    2d30:	d8c02b15 	stw	r3,172(sp)
    2d34:	1805883a 	mov	r2,r3
    2d38:	183fb20e 	bge	r3,zero,2c04 <__alt_data_end+0xfffe3804>
    2d3c:	0005883a 	mov	r2,zero
    2d40:	003fb006 	br	2c04 <__alt_data_end+0xfffe3804>
    2d44:	d9003617 	ldw	r4,216(sp)
    2d48:	000d883a 	mov	r6,zero
    2d4c:	000f883a 	mov	r7,zero
    2d50:	980b883a 	mov	r5,r19
    2d54:	d8c03c15 	stw	r3,240(sp)
    2d58:	da003d15 	stw	r8,244(sp)
    2d5c:	000c2f00 	call	c2f0 <__eqdf2>
    2d60:	d8c03c17 	ldw	r3,240(sp)
    2d64:	da003d17 	ldw	r8,244(sp)
    2d68:	103f9826 	beq	r2,zero,2bcc <__alt_data_end+0xfffe37cc>
    2d6c:	00800044 	movi	r2,1
    2d70:	10c7c83a 	sub	r3,r2,r3
    2d74:	d8c02615 	stw	r3,152(sp)
    2d78:	003f9506 	br	2bd0 <__alt_data_end+0xfffe37d0>
    2d7c:	d9002a17 	ldw	r4,168(sp)
    2d80:	d8c03217 	ldw	r3,200(sp)
    2d84:	20800044 	addi	r2,r4,1
    2d88:	1885883a 	add	r2,r3,r2
    2d8c:	d8802b15 	stw	r2,172(sp)
    2d90:	103dbf0e 	bge	r2,zero,2490 <__alt_data_end+0xfffe3090>
    2d94:	0005883a 	mov	r2,zero
    2d98:	003dbd06 	br	2490 <__alt_data_end+0xfffe3090>
    2d9c:	2000201e 	bne	r4,zero,2e20 <___vfprintf_internal_r+0x222c>
    2da0:	9480004c 	andi	r18,r18,1
    2da4:	90001e1e 	bne	r18,zero,2e20 <___vfprintf_internal_r+0x222c>
    2da8:	00800044 	movi	r2,1
    2dac:	d8802b15 	stw	r2,172(sp)
    2db0:	003db706 	br	2490 <__alt_data_end+0xfffe3090>
    2db4:	00800b44 	movi	r2,45
    2db8:	05adc83a 	sub	r22,zero,r22
    2dbc:	d8802305 	stb	r2,140(sp)
    2dc0:	003f3f06 	br	2ac0 <__alt_data_end+0xfffe36c0>
    2dc4:	0005883a 	mov	r2,zero
    2dc8:	003f5206 	br	2b14 <__alt_data_end+0xfffe3714>
    2dcc:	90a4703a 	and	r18,r18,r2
    2dd0:	903f4e26 	beq	r18,zero,2b0c <__alt_data_end+0xfffe370c>
    2dd4:	003f4a06 	br	2b00 <__alt_data_end+0xfffe3700>
    2dd8:	00800084 	movi	r2,2
    2ddc:	10c5c83a 	sub	r2,r2,r3
    2de0:	003f8406 	br	2bf4 <__alt_data_end+0xfffe37f4>
    2de4:	d9402e17 	ldw	r5,184(sp)
    2de8:	d9002e17 	ldw	r4,184(sp)
    2dec:	ac400043 	ldbu	r17,1(r21)
    2df0:	29400017 	ldw	r5,0(r5)
    2df4:	20800104 	addi	r2,r4,4
    2df8:	d8802e15 	stw	r2,184(sp)
    2dfc:	d9402a15 	stw	r5,168(sp)
    2e00:	182b883a 	mov	r21,r3
    2e04:	283e7b0e 	bge	r5,zero,27f4 <__alt_data_end+0xfffe33f4>
    2e08:	8c403fcc 	andi	r17,r17,255
    2e0c:	017fffc4 	movi	r5,-1
    2e10:	8c40201c 	xori	r17,r17,128
    2e14:	d9402a15 	stw	r5,168(sp)
    2e18:	8c7fe004 	addi	r17,r17,-128
    2e1c:	0037d706 	br	d7c <__alt_data_end+0xfffe197c>
    2e20:	d8c02a17 	ldw	r3,168(sp)
    2e24:	18c00084 	addi	r3,r3,2
    2e28:	d8c02b15 	stw	r3,172(sp)
    2e2c:	1805883a 	mov	r2,r3
    2e30:	183d970e 	bge	r3,zero,2490 <__alt_data_end+0xfffe3090>
    2e34:	003fd706 	br	2d94 <__alt_data_end+0xfffe3994>
    2e38:	0005883a 	mov	r2,zero
    2e3c:	003f8f06 	br	2c7c <__alt_data_end+0xfffe387c>
    2e40:	9080004c 	andi	r2,r18,1
    2e44:	103f821e 	bne	r2,zero,2c50 <__alt_data_end+0xfffe3850>
    2e48:	d8802117 	ldw	r2,132(sp)
    2e4c:	1405c83a 	sub	r2,r2,r16
    2e50:	d8803315 	stw	r2,204(sp)
    2e54:	b47ef426 	beq	r22,r17,2a28 <__alt_data_end+0xfffe3628>
    2e58:	dd802617 	ldw	r22,152(sp)
    2e5c:	003f1206 	br	2aa8 <__alt_data_end+0xfffe36a8>
    2e60:	d8c02b03 	ldbu	r3,172(sp)
    2e64:	d8c02785 	stb	r3,158(sp)
    2e68:	0038df06 	br	11e8 <__alt_data_end+0xfffe1de8>
    2e6c:	d8c02b03 	ldbu	r3,172(sp)
    2e70:	d8c02785 	stb	r3,158(sp)
    2e74:	0038aa06 	br	1120 <__alt_data_end+0xfffe1d20>
    2e78:	d8c02b03 	ldbu	r3,172(sp)
    2e7c:	d8c02785 	stb	r3,158(sp)
    2e80:	003a4306 	br	1790 <__alt_data_end+0xfffe2390>
    2e84:	d8c02b03 	ldbu	r3,172(sp)
    2e88:	d8c02785 	stb	r3,158(sp)
    2e8c:	003af506 	br	1a64 <__alt_data_end+0xfffe2664>
    2e90:	0005883a 	mov	r2,zero
    2e94:	003d7b06 	br	2484 <__alt_data_end+0xfffe3084>
    2e98:	d8802344 	addi	r2,sp,141
    2e9c:	003f1006 	br	2ae0 <__alt_data_end+0xfffe36e0>
    2ea0:	d8c02b03 	ldbu	r3,172(sp)
    2ea4:	d8c02785 	stb	r3,158(sp)
    2ea8:	0038fd06 	br	12a0 <__alt_data_end+0xfffe1ea0>
    2eac:	d8c02b03 	ldbu	r3,172(sp)
    2eb0:	d8c02785 	stb	r3,158(sp)
    2eb4:	003a9706 	br	1914 <__alt_data_end+0xfffe2514>
    2eb8:	d8c02b03 	ldbu	r3,172(sp)
    2ebc:	d8c02785 	stb	r3,158(sp)
    2ec0:	003a1806 	br	1724 <__alt_data_end+0xfffe2324>
    2ec4:	d8c02b03 	ldbu	r3,172(sp)
    2ec8:	d8c02785 	stb	r3,158(sp)
    2ecc:	003abe06 	br	19c8 <__alt_data_end+0xfffe25c8>

00002ed0 <__vfprintf_internal>:
    2ed0:	00800074 	movhi	r2,1
    2ed4:	10878d04 	addi	r2,r2,7732
    2ed8:	300f883a 	mov	r7,r6
    2edc:	280d883a 	mov	r6,r5
    2ee0:	200b883a 	mov	r5,r4
    2ee4:	11000017 	ldw	r4,0(r2)
    2ee8:	0000bf41 	jmpi	bf4 <___vfprintf_internal_r>

00002eec <__sbprintf>:
    2eec:	2880030b 	ldhu	r2,12(r5)
    2ef0:	2ac01917 	ldw	r11,100(r5)
    2ef4:	2a80038b 	ldhu	r10,14(r5)
    2ef8:	2a400717 	ldw	r9,28(r5)
    2efc:	2a000917 	ldw	r8,36(r5)
    2f00:	defee204 	addi	sp,sp,-1144
    2f04:	00c10004 	movi	r3,1024
    2f08:	dc011a15 	stw	r16,1128(sp)
    2f0c:	10bfff4c 	andi	r2,r2,65533
    2f10:	2821883a 	mov	r16,r5
    2f14:	d8cb883a 	add	r5,sp,r3
    2f18:	dc811c15 	stw	r18,1136(sp)
    2f1c:	dc411b15 	stw	r17,1132(sp)
    2f20:	dfc11d15 	stw	ra,1140(sp)
    2f24:	2025883a 	mov	r18,r4
    2f28:	d881030d 	sth	r2,1036(sp)
    2f2c:	dac11915 	stw	r11,1124(sp)
    2f30:	da81038d 	sth	r10,1038(sp)
    2f34:	da410715 	stw	r9,1052(sp)
    2f38:	da010915 	stw	r8,1060(sp)
    2f3c:	dec10015 	stw	sp,1024(sp)
    2f40:	dec10415 	stw	sp,1040(sp)
    2f44:	d8c10215 	stw	r3,1032(sp)
    2f48:	d8c10515 	stw	r3,1044(sp)
    2f4c:	d8010615 	stw	zero,1048(sp)
    2f50:	0000bf40 	call	bf4 <___vfprintf_internal_r>
    2f54:	1023883a 	mov	r17,r2
    2f58:	10000416 	blt	r2,zero,2f6c <__sbprintf+0x80>
    2f5c:	d9410004 	addi	r5,sp,1024
    2f60:	9009883a 	mov	r4,r18
    2f64:	0004bc80 	call	4bc8 <_fflush_r>
    2f68:	10000d1e 	bne	r2,zero,2fa0 <__sbprintf+0xb4>
    2f6c:	d881030b 	ldhu	r2,1036(sp)
    2f70:	1080100c 	andi	r2,r2,64
    2f74:	10000326 	beq	r2,zero,2f84 <__sbprintf+0x98>
    2f78:	8080030b 	ldhu	r2,12(r16)
    2f7c:	10801014 	ori	r2,r2,64
    2f80:	8080030d 	sth	r2,12(r16)
    2f84:	8805883a 	mov	r2,r17
    2f88:	dfc11d17 	ldw	ra,1140(sp)
    2f8c:	dc811c17 	ldw	r18,1136(sp)
    2f90:	dc411b17 	ldw	r17,1132(sp)
    2f94:	dc011a17 	ldw	r16,1128(sp)
    2f98:	dec11e04 	addi	sp,sp,1144
    2f9c:	f800283a 	ret
    2fa0:	047fffc4 	movi	r17,-1
    2fa4:	003ff106 	br	2f6c <__alt_data_end+0xfffe3b6c>

00002fa8 <__swsetup_r>:
    2fa8:	00800074 	movhi	r2,1
    2fac:	defffd04 	addi	sp,sp,-12
    2fb0:	10878d04 	addi	r2,r2,7732
    2fb4:	dc400115 	stw	r17,4(sp)
    2fb8:	2023883a 	mov	r17,r4
    2fbc:	11000017 	ldw	r4,0(r2)
    2fc0:	dc000015 	stw	r16,0(sp)
    2fc4:	dfc00215 	stw	ra,8(sp)
    2fc8:	2821883a 	mov	r16,r5
    2fcc:	20000226 	beq	r4,zero,2fd8 <__swsetup_r+0x30>
    2fd0:	20800e17 	ldw	r2,56(r4)
    2fd4:	10003126 	beq	r2,zero,309c <__swsetup_r+0xf4>
    2fd8:	8080030b 	ldhu	r2,12(r16)
    2fdc:	10c0020c 	andi	r3,r2,8
    2fe0:	1009883a 	mov	r4,r2
    2fe4:	18000f26 	beq	r3,zero,3024 <__swsetup_r+0x7c>
    2fe8:	80c00417 	ldw	r3,16(r16)
    2fec:	18001526 	beq	r3,zero,3044 <__swsetup_r+0x9c>
    2ff0:	1100004c 	andi	r4,r2,1
    2ff4:	20001c1e 	bne	r4,zero,3068 <__swsetup_r+0xc0>
    2ff8:	1080008c 	andi	r2,r2,2
    2ffc:	1000291e 	bne	r2,zero,30a4 <__swsetup_r+0xfc>
    3000:	80800517 	ldw	r2,20(r16)
    3004:	80800215 	stw	r2,8(r16)
    3008:	18001c26 	beq	r3,zero,307c <__swsetup_r+0xd4>
    300c:	0005883a 	mov	r2,zero
    3010:	dfc00217 	ldw	ra,8(sp)
    3014:	dc400117 	ldw	r17,4(sp)
    3018:	dc000017 	ldw	r16,0(sp)
    301c:	dec00304 	addi	sp,sp,12
    3020:	f800283a 	ret
    3024:	2080040c 	andi	r2,r4,16
    3028:	10002e26 	beq	r2,zero,30e4 <__swsetup_r+0x13c>
    302c:	2080010c 	andi	r2,r4,4
    3030:	10001e1e 	bne	r2,zero,30ac <__swsetup_r+0x104>
    3034:	80c00417 	ldw	r3,16(r16)
    3038:	20800214 	ori	r2,r4,8
    303c:	8080030d 	sth	r2,12(r16)
    3040:	183feb1e 	bne	r3,zero,2ff0 <__alt_data_end+0xfffe3bf0>
    3044:	1100a00c 	andi	r4,r2,640
    3048:	01408004 	movi	r5,512
    304c:	217fe826 	beq	r4,r5,2ff0 <__alt_data_end+0xfffe3bf0>
    3050:	800b883a 	mov	r5,r16
    3054:	8809883a 	mov	r4,r17
    3058:	000569c0 	call	569c <__smakebuf_r>
    305c:	8080030b 	ldhu	r2,12(r16)
    3060:	80c00417 	ldw	r3,16(r16)
    3064:	003fe206 	br	2ff0 <__alt_data_end+0xfffe3bf0>
    3068:	80800517 	ldw	r2,20(r16)
    306c:	80000215 	stw	zero,8(r16)
    3070:	0085c83a 	sub	r2,zero,r2
    3074:	80800615 	stw	r2,24(r16)
    3078:	183fe41e 	bne	r3,zero,300c <__alt_data_end+0xfffe3c0c>
    307c:	80c0030b 	ldhu	r3,12(r16)
    3080:	0005883a 	mov	r2,zero
    3084:	1900200c 	andi	r4,r3,128
    3088:	203fe126 	beq	r4,zero,3010 <__alt_data_end+0xfffe3c10>
    308c:	18c01014 	ori	r3,r3,64
    3090:	80c0030d 	sth	r3,12(r16)
    3094:	00bfffc4 	movi	r2,-1
    3098:	003fdd06 	br	3010 <__alt_data_end+0xfffe3c10>
    309c:	0004fb40 	call	4fb4 <__sinit>
    30a0:	003fcd06 	br	2fd8 <__alt_data_end+0xfffe3bd8>
    30a4:	0005883a 	mov	r2,zero
    30a8:	003fd606 	br	3004 <__alt_data_end+0xfffe3c04>
    30ac:	81400c17 	ldw	r5,48(r16)
    30b0:	28000626 	beq	r5,zero,30cc <__swsetup_r+0x124>
    30b4:	80801004 	addi	r2,r16,64
    30b8:	28800326 	beq	r5,r2,30c8 <__swsetup_r+0x120>
    30bc:	8809883a 	mov	r4,r17
    30c0:	00051280 	call	5128 <_free_r>
    30c4:	8100030b 	ldhu	r4,12(r16)
    30c8:	80000c15 	stw	zero,48(r16)
    30cc:	80c00417 	ldw	r3,16(r16)
    30d0:	00bff6c4 	movi	r2,-37
    30d4:	1108703a 	and	r4,r2,r4
    30d8:	80000115 	stw	zero,4(r16)
    30dc:	80c00015 	stw	r3,0(r16)
    30e0:	003fd506 	br	3038 <__alt_data_end+0xfffe3c38>
    30e4:	00800244 	movi	r2,9
    30e8:	88800015 	stw	r2,0(r17)
    30ec:	20801014 	ori	r2,r4,64
    30f0:	8080030d 	sth	r2,12(r16)
    30f4:	00bfffc4 	movi	r2,-1
    30f8:	003fc506 	br	3010 <__alt_data_end+0xfffe3c10>

000030fc <quorem>:
    30fc:	defff204 	addi	sp,sp,-56
    3100:	ddc00b15 	stw	r23,44(sp)
    3104:	20800417 	ldw	r2,16(r4)
    3108:	2dc00417 	ldw	r23,16(r5)
    310c:	dfc00d15 	stw	ra,52(sp)
    3110:	df000c15 	stw	fp,48(sp)
    3114:	dd800a15 	stw	r22,40(sp)
    3118:	dd400915 	stw	r21,36(sp)
    311c:	dd000815 	stw	r20,32(sp)
    3120:	dcc00715 	stw	r19,28(sp)
    3124:	dc800615 	stw	r18,24(sp)
    3128:	dc400515 	stw	r17,20(sp)
    312c:	dc000415 	stw	r16,16(sp)
    3130:	15c07a16 	blt	r2,r23,331c <quorem+0x220>
    3134:	bdffffc4 	addi	r23,r23,-1
    3138:	bde9883a 	add	r20,r23,r23
    313c:	28c00504 	addi	r3,r5,20
    3140:	a529883a 	add	r20,r20,r20
    3144:	1d39883a 	add	fp,r3,r20
    3148:	24c00504 	addi	r19,r4,20
    314c:	d9400215 	stw	r5,8(sp)
    3150:	9d29883a 	add	r20,r19,r20
    3154:	e1400017 	ldw	r5,0(fp)
    3158:	d9000015 	stw	r4,0(sp)
    315c:	a1000017 	ldw	r4,0(r20)
    3160:	29400044 	addi	r5,r5,1
    3164:	d8c00115 	stw	r3,4(sp)
    3168:	dd000315 	stw	r20,12(sp)
    316c:	000af900 	call	af90 <__udivsi3>
    3170:	1025883a 	mov	r18,r2
    3174:	10003026 	beq	r2,zero,3238 <quorem+0x13c>
    3178:	dc400117 	ldw	r17,4(sp)
    317c:	9829883a 	mov	r20,r19
    3180:	002d883a 	mov	r22,zero
    3184:	0021883a 	mov	r16,zero
    3188:	8d400017 	ldw	r21,0(r17)
    318c:	900b883a 	mov	r5,r18
    3190:	8c400104 	addi	r17,r17,4
    3194:	a93fffcc 	andi	r4,r21,65535
    3198:	000b04c0 	call	b04c <__mulsi3>
    319c:	a808d43a 	srli	r4,r21,16
    31a0:	900b883a 	mov	r5,r18
    31a4:	15ad883a 	add	r22,r2,r22
    31a8:	000b04c0 	call	b04c <__mulsi3>
    31ac:	a1000017 	ldw	r4,0(r20)
    31b0:	b00cd43a 	srli	r6,r22,16
    31b4:	b0ffffcc 	andi	r3,r22,65535
    31b8:	217fffcc 	andi	r5,r4,65535
    31bc:	2c21883a 	add	r16,r5,r16
    31c0:	80c7c83a 	sub	r3,r16,r3
    31c4:	2008d43a 	srli	r4,r4,16
    31c8:	1185883a 	add	r2,r2,r6
    31cc:	1821d43a 	srai	r16,r3,16
    31d0:	117fffcc 	andi	r5,r2,65535
    31d4:	2149c83a 	sub	r4,r4,r5
    31d8:	2421883a 	add	r16,r4,r16
    31dc:	8008943a 	slli	r4,r16,16
    31e0:	18ffffcc 	andi	r3,r3,65535
    31e4:	102cd43a 	srli	r22,r2,16
    31e8:	20c8b03a 	or	r4,r4,r3
    31ec:	a1000015 	stw	r4,0(r20)
    31f0:	8021d43a 	srai	r16,r16,16
    31f4:	a5000104 	addi	r20,r20,4
    31f8:	e47fe32e 	bgeu	fp,r17,3188 <__alt_data_end+0xfffe3d88>
    31fc:	d8c00317 	ldw	r3,12(sp)
    3200:	18800017 	ldw	r2,0(r3)
    3204:	10000c1e 	bne	r2,zero,3238 <quorem+0x13c>
    3208:	18bfff04 	addi	r2,r3,-4
    320c:	9880082e 	bgeu	r19,r2,3230 <quorem+0x134>
    3210:	18ffff17 	ldw	r3,-4(r3)
    3214:	18000326 	beq	r3,zero,3224 <quorem+0x128>
    3218:	00000506 	br	3230 <quorem+0x134>
    321c:	10c00017 	ldw	r3,0(r2)
    3220:	1800031e 	bne	r3,zero,3230 <quorem+0x134>
    3224:	10bfff04 	addi	r2,r2,-4
    3228:	bdffffc4 	addi	r23,r23,-1
    322c:	98bffb36 	bltu	r19,r2,321c <__alt_data_end+0xfffe3e1c>
    3230:	d8c00017 	ldw	r3,0(sp)
    3234:	1dc00415 	stw	r23,16(r3)
    3238:	d9400217 	ldw	r5,8(sp)
    323c:	d9000017 	ldw	r4,0(sp)
    3240:	0006d3c0 	call	6d3c <__mcmp>
    3244:	10002816 	blt	r2,zero,32e8 <quorem+0x1ec>
    3248:	dc400117 	ldw	r17,4(sp)
    324c:	94800044 	addi	r18,r18,1
    3250:	980d883a 	mov	r6,r19
    3254:	0007883a 	mov	r3,zero
    3258:	31000017 	ldw	r4,0(r6)
    325c:	89400017 	ldw	r5,0(r17)
    3260:	31800104 	addi	r6,r6,4
    3264:	20bfffcc 	andi	r2,r4,65535
    3268:	10c7883a 	add	r3,r2,r3
    326c:	28bfffcc 	andi	r2,r5,65535
    3270:	1885c83a 	sub	r2,r3,r2
    3274:	280ad43a 	srli	r5,r5,16
    3278:	2008d43a 	srli	r4,r4,16
    327c:	1007d43a 	srai	r3,r2,16
    3280:	10bfffcc 	andi	r2,r2,65535
    3284:	2149c83a 	sub	r4,r4,r5
    3288:	20c9883a 	add	r4,r4,r3
    328c:	200a943a 	slli	r5,r4,16
    3290:	8c400104 	addi	r17,r17,4
    3294:	2007d43a 	srai	r3,r4,16
    3298:	2884b03a 	or	r2,r5,r2
    329c:	30bfff15 	stw	r2,-4(r6)
    32a0:	e47fed2e 	bgeu	fp,r17,3258 <__alt_data_end+0xfffe3e58>
    32a4:	bdc5883a 	add	r2,r23,r23
    32a8:	1085883a 	add	r2,r2,r2
    32ac:	9887883a 	add	r3,r19,r2
    32b0:	18800017 	ldw	r2,0(r3)
    32b4:	10000c1e 	bne	r2,zero,32e8 <quorem+0x1ec>
    32b8:	18bfff04 	addi	r2,r3,-4
    32bc:	9880082e 	bgeu	r19,r2,32e0 <quorem+0x1e4>
    32c0:	18ffff17 	ldw	r3,-4(r3)
    32c4:	18000326 	beq	r3,zero,32d4 <quorem+0x1d8>
    32c8:	00000506 	br	32e0 <quorem+0x1e4>
    32cc:	10c00017 	ldw	r3,0(r2)
    32d0:	1800031e 	bne	r3,zero,32e0 <quorem+0x1e4>
    32d4:	10bfff04 	addi	r2,r2,-4
    32d8:	bdffffc4 	addi	r23,r23,-1
    32dc:	98bffb36 	bltu	r19,r2,32cc <__alt_data_end+0xfffe3ecc>
    32e0:	d8c00017 	ldw	r3,0(sp)
    32e4:	1dc00415 	stw	r23,16(r3)
    32e8:	9005883a 	mov	r2,r18
    32ec:	dfc00d17 	ldw	ra,52(sp)
    32f0:	df000c17 	ldw	fp,48(sp)
    32f4:	ddc00b17 	ldw	r23,44(sp)
    32f8:	dd800a17 	ldw	r22,40(sp)
    32fc:	dd400917 	ldw	r21,36(sp)
    3300:	dd000817 	ldw	r20,32(sp)
    3304:	dcc00717 	ldw	r19,28(sp)
    3308:	dc800617 	ldw	r18,24(sp)
    330c:	dc400517 	ldw	r17,20(sp)
    3310:	dc000417 	ldw	r16,16(sp)
    3314:	dec00e04 	addi	sp,sp,56
    3318:	f800283a 	ret
    331c:	0005883a 	mov	r2,zero
    3320:	003ff206 	br	32ec <__alt_data_end+0xfffe3eec>

00003324 <_dtoa_r>:
    3324:	20801017 	ldw	r2,64(r4)
    3328:	deffde04 	addi	sp,sp,-136
    332c:	df002015 	stw	fp,128(sp)
    3330:	dcc01b15 	stw	r19,108(sp)
    3334:	dc801a15 	stw	r18,104(sp)
    3338:	dc401915 	stw	r17,100(sp)
    333c:	dc001815 	stw	r16,96(sp)
    3340:	dfc02115 	stw	ra,132(sp)
    3344:	ddc01f15 	stw	r23,124(sp)
    3348:	dd801e15 	stw	r22,120(sp)
    334c:	dd401d15 	stw	r21,116(sp)
    3350:	dd001c15 	stw	r20,112(sp)
    3354:	d9c00315 	stw	r7,12(sp)
    3358:	2039883a 	mov	fp,r4
    335c:	3023883a 	mov	r17,r6
    3360:	2825883a 	mov	r18,r5
    3364:	dc002417 	ldw	r16,144(sp)
    3368:	3027883a 	mov	r19,r6
    336c:	10000826 	beq	r2,zero,3390 <_dtoa_r+0x6c>
    3370:	21801117 	ldw	r6,68(r4)
    3374:	00c00044 	movi	r3,1
    3378:	100b883a 	mov	r5,r2
    337c:	1986983a 	sll	r3,r3,r6
    3380:	11800115 	stw	r6,4(r2)
    3384:	10c00215 	stw	r3,8(r2)
    3388:	00064600 	call	6460 <_Bfree>
    338c:	e0001015 	stw	zero,64(fp)
    3390:	88002e16 	blt	r17,zero,344c <_dtoa_r+0x128>
    3394:	80000015 	stw	zero,0(r16)
    3398:	889ffc2c 	andhi	r2,r17,32752
    339c:	00dffc34 	movhi	r3,32752
    33a0:	10c01c26 	beq	r2,r3,3414 <_dtoa_r+0xf0>
    33a4:	000d883a 	mov	r6,zero
    33a8:	000f883a 	mov	r7,zero
    33ac:	9009883a 	mov	r4,r18
    33b0:	980b883a 	mov	r5,r19
    33b4:	000c2f00 	call	c2f0 <__eqdf2>
    33b8:	10002b1e 	bne	r2,zero,3468 <_dtoa_r+0x144>
    33bc:	d9c02317 	ldw	r7,140(sp)
    33c0:	00800044 	movi	r2,1
    33c4:	38800015 	stw	r2,0(r7)
    33c8:	d8802517 	ldw	r2,148(sp)
    33cc:	10019e26 	beq	r2,zero,3a48 <_dtoa_r+0x724>
    33d0:	d8c02517 	ldw	r3,148(sp)
    33d4:	00800074 	movhi	r2,1
    33d8:	10803244 	addi	r2,r2,201
    33dc:	18800015 	stw	r2,0(r3)
    33e0:	10bfffc4 	addi	r2,r2,-1
    33e4:	dfc02117 	ldw	ra,132(sp)
    33e8:	df002017 	ldw	fp,128(sp)
    33ec:	ddc01f17 	ldw	r23,124(sp)
    33f0:	dd801e17 	ldw	r22,120(sp)
    33f4:	dd401d17 	ldw	r21,116(sp)
    33f8:	dd001c17 	ldw	r20,112(sp)
    33fc:	dcc01b17 	ldw	r19,108(sp)
    3400:	dc801a17 	ldw	r18,104(sp)
    3404:	dc401917 	ldw	r17,100(sp)
    3408:	dc001817 	ldw	r16,96(sp)
    340c:	dec02204 	addi	sp,sp,136
    3410:	f800283a 	ret
    3414:	d8c02317 	ldw	r3,140(sp)
    3418:	0089c3c4 	movi	r2,9999
    341c:	18800015 	stw	r2,0(r3)
    3420:	90017726 	beq	r18,zero,3a00 <_dtoa_r+0x6dc>
    3424:	00800074 	movhi	r2,1
    3428:	10803e04 	addi	r2,r2,248
    342c:	d9002517 	ldw	r4,148(sp)
    3430:	203fec26 	beq	r4,zero,33e4 <__alt_data_end+0xfffe3fe4>
    3434:	10c000c7 	ldb	r3,3(r2)
    3438:	1801781e 	bne	r3,zero,3a1c <_dtoa_r+0x6f8>
    343c:	10c000c4 	addi	r3,r2,3
    3440:	d9802517 	ldw	r6,148(sp)
    3444:	30c00015 	stw	r3,0(r6)
    3448:	003fe606 	br	33e4 <__alt_data_end+0xfffe3fe4>
    344c:	04e00034 	movhi	r19,32768
    3450:	9cffffc4 	addi	r19,r19,-1
    3454:	00800044 	movi	r2,1
    3458:	8ce6703a 	and	r19,r17,r19
    345c:	80800015 	stw	r2,0(r16)
    3460:	9823883a 	mov	r17,r19
    3464:	003fcc06 	br	3398 <__alt_data_end+0xfffe3f98>
    3468:	d8800204 	addi	r2,sp,8
    346c:	d8800015 	stw	r2,0(sp)
    3470:	d9c00104 	addi	r7,sp,4
    3474:	900b883a 	mov	r5,r18
    3478:	980d883a 	mov	r6,r19
    347c:	e009883a 	mov	r4,fp
    3480:	8820d53a 	srli	r16,r17,20
    3484:	00071080 	call	7108 <__d2b>
    3488:	d8800915 	stw	r2,36(sp)
    348c:	8001651e 	bne	r16,zero,3a24 <_dtoa_r+0x700>
    3490:	dd800217 	ldw	r22,8(sp)
    3494:	dc000117 	ldw	r16,4(sp)
    3498:	00800804 	movi	r2,32
    349c:	b421883a 	add	r16,r22,r16
    34a0:	80c10c84 	addi	r3,r16,1074
    34a4:	10c2d10e 	bge	r2,r3,3fec <_dtoa_r+0xcc8>
    34a8:	00801004 	movi	r2,64
    34ac:	81010484 	addi	r4,r16,1042
    34b0:	10c7c83a 	sub	r3,r2,r3
    34b4:	9108d83a 	srl	r4,r18,r4
    34b8:	88e2983a 	sll	r17,r17,r3
    34bc:	2448b03a 	or	r4,r4,r17
    34c0:	000d80c0 	call	d80c <__floatunsidf>
    34c4:	017f8434 	movhi	r5,65040
    34c8:	01800044 	movi	r6,1
    34cc:	1009883a 	mov	r4,r2
    34d0:	194b883a 	add	r5,r3,r5
    34d4:	843fffc4 	addi	r16,r16,-1
    34d8:	d9801115 	stw	r6,68(sp)
    34dc:	000d883a 	mov	r6,zero
    34e0:	01cffe34 	movhi	r7,16376
    34e4:	000cdb40 	call	cdb4 <__subdf3>
    34e8:	0198dbf4 	movhi	r6,25455
    34ec:	01cff4f4 	movhi	r7,16339
    34f0:	3190d844 	addi	r6,r6,17249
    34f4:	39e1e9c4 	addi	r7,r7,-30809
    34f8:	1009883a 	mov	r4,r2
    34fc:	180b883a 	mov	r5,r3
    3500:	000c5480 	call	c548 <__muldf3>
    3504:	01a2d874 	movhi	r6,35681
    3508:	01cff1f4 	movhi	r7,16327
    350c:	31b22cc4 	addi	r6,r6,-14157
    3510:	39e28a04 	addi	r7,r7,-30168
    3514:	180b883a 	mov	r5,r3
    3518:	1009883a 	mov	r4,r2
    351c:	000b0740 	call	b074 <__adddf3>
    3520:	8009883a 	mov	r4,r16
    3524:	1029883a 	mov	r20,r2
    3528:	1823883a 	mov	r17,r3
    352c:	000d7300 	call	d730 <__floatsidf>
    3530:	019427f4 	movhi	r6,20639
    3534:	01cff4f4 	movhi	r7,16339
    3538:	319e7ec4 	addi	r6,r6,31227
    353c:	39d104c4 	addi	r7,r7,17427
    3540:	1009883a 	mov	r4,r2
    3544:	180b883a 	mov	r5,r3
    3548:	000c5480 	call	c548 <__muldf3>
    354c:	100d883a 	mov	r6,r2
    3550:	180f883a 	mov	r7,r3
    3554:	a009883a 	mov	r4,r20
    3558:	880b883a 	mov	r5,r17
    355c:	000b0740 	call	b074 <__adddf3>
    3560:	1009883a 	mov	r4,r2
    3564:	180b883a 	mov	r5,r3
    3568:	1029883a 	mov	r20,r2
    356c:	1823883a 	mov	r17,r3
    3570:	000d6b00 	call	d6b0 <__fixdfsi>
    3574:	000d883a 	mov	r6,zero
    3578:	000f883a 	mov	r7,zero
    357c:	a009883a 	mov	r4,r20
    3580:	880b883a 	mov	r5,r17
    3584:	d8800515 	stw	r2,20(sp)
    3588:	000c4540 	call	c454 <__ledf2>
    358c:	10028716 	blt	r2,zero,3fac <_dtoa_r+0xc88>
    3590:	d8c00517 	ldw	r3,20(sp)
    3594:	00800584 	movi	r2,22
    3598:	10c27536 	bltu	r2,r3,3f70 <_dtoa_r+0xc4c>
    359c:	180490fa 	slli	r2,r3,3
    35a0:	00c00074 	movhi	r3,1
    35a4:	18c05a04 	addi	r3,r3,360
    35a8:	1885883a 	add	r2,r3,r2
    35ac:	11000017 	ldw	r4,0(r2)
    35b0:	11400117 	ldw	r5,4(r2)
    35b4:	900d883a 	mov	r6,r18
    35b8:	980f883a 	mov	r7,r19
    35bc:	000c3780 	call	c378 <__gedf2>
    35c0:	00828d0e 	bge	zero,r2,3ff8 <_dtoa_r+0xcd4>
    35c4:	d9000517 	ldw	r4,20(sp)
    35c8:	d8000e15 	stw	zero,56(sp)
    35cc:	213fffc4 	addi	r4,r4,-1
    35d0:	d9000515 	stw	r4,20(sp)
    35d4:	b42dc83a 	sub	r22,r22,r16
    35d8:	b5bfffc4 	addi	r22,r22,-1
    35dc:	b0026f16 	blt	r22,zero,3f9c <_dtoa_r+0xc78>
    35e0:	d8000815 	stw	zero,32(sp)
    35e4:	d9c00517 	ldw	r7,20(sp)
    35e8:	38026416 	blt	r7,zero,3f7c <_dtoa_r+0xc58>
    35ec:	b1ed883a 	add	r22,r22,r7
    35f0:	d9c00d15 	stw	r7,52(sp)
    35f4:	d8000a15 	stw	zero,40(sp)
    35f8:	d9800317 	ldw	r6,12(sp)
    35fc:	00800244 	movi	r2,9
    3600:	11811436 	bltu	r2,r6,3a54 <_dtoa_r+0x730>
    3604:	00800144 	movi	r2,5
    3608:	1184e10e 	bge	r2,r6,4990 <_dtoa_r+0x166c>
    360c:	31bfff04 	addi	r6,r6,-4
    3610:	d9800315 	stw	r6,12(sp)
    3614:	0023883a 	mov	r17,zero
    3618:	d9800317 	ldw	r6,12(sp)
    361c:	008000c4 	movi	r2,3
    3620:	30836726 	beq	r6,r2,43c0 <_dtoa_r+0x109c>
    3624:	1183410e 	bge	r2,r6,432c <_dtoa_r+0x1008>
    3628:	d9c00317 	ldw	r7,12(sp)
    362c:	00800104 	movi	r2,4
    3630:	38827c26 	beq	r7,r2,4024 <_dtoa_r+0xd00>
    3634:	00800144 	movi	r2,5
    3638:	3884c41e 	bne	r7,r2,494c <_dtoa_r+0x1628>
    363c:	00800044 	movi	r2,1
    3640:	d8800b15 	stw	r2,44(sp)
    3644:	d8c00517 	ldw	r3,20(sp)
    3648:	d9002217 	ldw	r4,136(sp)
    364c:	1907883a 	add	r3,r3,r4
    3650:	19800044 	addi	r6,r3,1
    3654:	d8c00c15 	stw	r3,48(sp)
    3658:	d9800615 	stw	r6,24(sp)
    365c:	0183a40e 	bge	zero,r6,44f0 <_dtoa_r+0x11cc>
    3660:	d9800617 	ldw	r6,24(sp)
    3664:	3021883a 	mov	r16,r6
    3668:	e0001115 	stw	zero,68(fp)
    366c:	008005c4 	movi	r2,23
    3670:	1184c92e 	bgeu	r2,r6,4998 <_dtoa_r+0x1674>
    3674:	00c00044 	movi	r3,1
    3678:	00800104 	movi	r2,4
    367c:	1085883a 	add	r2,r2,r2
    3680:	11000504 	addi	r4,r2,20
    3684:	180b883a 	mov	r5,r3
    3688:	18c00044 	addi	r3,r3,1
    368c:	313ffb2e 	bgeu	r6,r4,367c <__alt_data_end+0xfffe427c>
    3690:	e1401115 	stw	r5,68(fp)
    3694:	e009883a 	mov	r4,fp
    3698:	00063b80 	call	63b8 <_Balloc>
    369c:	d8800715 	stw	r2,28(sp)
    36a0:	e0801015 	stw	r2,64(fp)
    36a4:	00800384 	movi	r2,14
    36a8:	1400f736 	bltu	r2,r16,3a88 <_dtoa_r+0x764>
    36ac:	8800f626 	beq	r17,zero,3a88 <_dtoa_r+0x764>
    36b0:	d9c00517 	ldw	r7,20(sp)
    36b4:	01c39a0e 	bge	zero,r7,4520 <_dtoa_r+0x11fc>
    36b8:	388003cc 	andi	r2,r7,15
    36bc:	100490fa 	slli	r2,r2,3
    36c0:	382bd13a 	srai	r21,r7,4
    36c4:	00c00074 	movhi	r3,1
    36c8:	18c05a04 	addi	r3,r3,360
    36cc:	1885883a 	add	r2,r3,r2
    36d0:	a8c0040c 	andi	r3,r21,16
    36d4:	12400017 	ldw	r9,0(r2)
    36d8:	12000117 	ldw	r8,4(r2)
    36dc:	18037926 	beq	r3,zero,44c4 <_dtoa_r+0x11a0>
    36e0:	00800074 	movhi	r2,1
    36e4:	10805004 	addi	r2,r2,320
    36e8:	11800817 	ldw	r6,32(r2)
    36ec:	11c00917 	ldw	r7,36(r2)
    36f0:	9009883a 	mov	r4,r18
    36f4:	980b883a 	mov	r5,r19
    36f8:	da001715 	stw	r8,92(sp)
    36fc:	da401615 	stw	r9,88(sp)
    3700:	000b9200 	call	b920 <__divdf3>
    3704:	da001717 	ldw	r8,92(sp)
    3708:	da401617 	ldw	r9,88(sp)
    370c:	ad4003cc 	andi	r21,r21,15
    3710:	040000c4 	movi	r16,3
    3714:	1023883a 	mov	r17,r2
    3718:	1829883a 	mov	r20,r3
    371c:	a8001126 	beq	r21,zero,3764 <_dtoa_r+0x440>
    3720:	05c00074 	movhi	r23,1
    3724:	bdc05004 	addi	r23,r23,320
    3728:	4805883a 	mov	r2,r9
    372c:	4007883a 	mov	r3,r8
    3730:	a980004c 	andi	r6,r21,1
    3734:	1009883a 	mov	r4,r2
    3738:	a82bd07a 	srai	r21,r21,1
    373c:	180b883a 	mov	r5,r3
    3740:	30000426 	beq	r6,zero,3754 <_dtoa_r+0x430>
    3744:	b9800017 	ldw	r6,0(r23)
    3748:	b9c00117 	ldw	r7,4(r23)
    374c:	84000044 	addi	r16,r16,1
    3750:	000c5480 	call	c548 <__muldf3>
    3754:	bdc00204 	addi	r23,r23,8
    3758:	a83ff51e 	bne	r21,zero,3730 <__alt_data_end+0xfffe4330>
    375c:	1013883a 	mov	r9,r2
    3760:	1811883a 	mov	r8,r3
    3764:	480d883a 	mov	r6,r9
    3768:	400f883a 	mov	r7,r8
    376c:	8809883a 	mov	r4,r17
    3770:	a00b883a 	mov	r5,r20
    3774:	000b9200 	call	b920 <__divdf3>
    3778:	d8800f15 	stw	r2,60(sp)
    377c:	d8c01015 	stw	r3,64(sp)
    3780:	d8c00e17 	ldw	r3,56(sp)
    3784:	18000626 	beq	r3,zero,37a0 <_dtoa_r+0x47c>
    3788:	d9000f17 	ldw	r4,60(sp)
    378c:	d9401017 	ldw	r5,64(sp)
    3790:	000d883a 	mov	r6,zero
    3794:	01cffc34 	movhi	r7,16368
    3798:	000c4540 	call	c454 <__ledf2>
    379c:	10040b16 	blt	r2,zero,47cc <_dtoa_r+0x14a8>
    37a0:	8009883a 	mov	r4,r16
    37a4:	000d7300 	call	d730 <__floatsidf>
    37a8:	d9800f17 	ldw	r6,60(sp)
    37ac:	d9c01017 	ldw	r7,64(sp)
    37b0:	1009883a 	mov	r4,r2
    37b4:	180b883a 	mov	r5,r3
    37b8:	000c5480 	call	c548 <__muldf3>
    37bc:	000d883a 	mov	r6,zero
    37c0:	01d00734 	movhi	r7,16412
    37c4:	1009883a 	mov	r4,r2
    37c8:	180b883a 	mov	r5,r3
    37cc:	000b0740 	call	b074 <__adddf3>
    37d0:	1021883a 	mov	r16,r2
    37d4:	d8800617 	ldw	r2,24(sp)
    37d8:	047f3034 	movhi	r17,64704
    37dc:	1c63883a 	add	r17,r3,r17
    37e0:	10031826 	beq	r2,zero,4444 <_dtoa_r+0x1120>
    37e4:	d8c00517 	ldw	r3,20(sp)
    37e8:	db000617 	ldw	r12,24(sp)
    37ec:	d8c01315 	stw	r3,76(sp)
    37f0:	d9000b17 	ldw	r4,44(sp)
    37f4:	20038f26 	beq	r4,zero,4634 <_dtoa_r+0x1310>
    37f8:	60bfffc4 	addi	r2,r12,-1
    37fc:	100490fa 	slli	r2,r2,3
    3800:	00c00074 	movhi	r3,1
    3804:	18c05a04 	addi	r3,r3,360
    3808:	1885883a 	add	r2,r3,r2
    380c:	11800017 	ldw	r6,0(r2)
    3810:	11c00117 	ldw	r7,4(r2)
    3814:	d8800717 	ldw	r2,28(sp)
    3818:	0009883a 	mov	r4,zero
    381c:	014ff834 	movhi	r5,16352
    3820:	db001615 	stw	r12,88(sp)
    3824:	15c00044 	addi	r23,r2,1
    3828:	000b9200 	call	b920 <__divdf3>
    382c:	800d883a 	mov	r6,r16
    3830:	880f883a 	mov	r7,r17
    3834:	1009883a 	mov	r4,r2
    3838:	180b883a 	mov	r5,r3
    383c:	000cdb40 	call	cdb4 <__subdf3>
    3840:	d9401017 	ldw	r5,64(sp)
    3844:	d9000f17 	ldw	r4,60(sp)
    3848:	102b883a 	mov	r21,r2
    384c:	d8c01215 	stw	r3,72(sp)
    3850:	000d6b00 	call	d6b0 <__fixdfsi>
    3854:	1009883a 	mov	r4,r2
    3858:	1029883a 	mov	r20,r2
    385c:	000d7300 	call	d730 <__floatsidf>
    3860:	d9000f17 	ldw	r4,60(sp)
    3864:	d9401017 	ldw	r5,64(sp)
    3868:	100d883a 	mov	r6,r2
    386c:	180f883a 	mov	r7,r3
    3870:	000cdb40 	call	cdb4 <__subdf3>
    3874:	1823883a 	mov	r17,r3
    3878:	d8c00717 	ldw	r3,28(sp)
    387c:	d9401217 	ldw	r5,72(sp)
    3880:	a2000c04 	addi	r8,r20,48
    3884:	1021883a 	mov	r16,r2
    3888:	1a000005 	stb	r8,0(r3)
    388c:	800d883a 	mov	r6,r16
    3890:	880f883a 	mov	r7,r17
    3894:	a809883a 	mov	r4,r21
    3898:	4029883a 	mov	r20,r8
    389c:	000c3780 	call	c378 <__gedf2>
    38a0:	00841d16 	blt	zero,r2,4918 <_dtoa_r+0x15f4>
    38a4:	800d883a 	mov	r6,r16
    38a8:	880f883a 	mov	r7,r17
    38ac:	0009883a 	mov	r4,zero
    38b0:	014ffc34 	movhi	r5,16368
    38b4:	000cdb40 	call	cdb4 <__subdf3>
    38b8:	d9401217 	ldw	r5,72(sp)
    38bc:	100d883a 	mov	r6,r2
    38c0:	180f883a 	mov	r7,r3
    38c4:	a809883a 	mov	r4,r21
    38c8:	000c3780 	call	c378 <__gedf2>
    38cc:	db001617 	ldw	r12,88(sp)
    38d0:	00840e16 	blt	zero,r2,490c <_dtoa_r+0x15e8>
    38d4:	00800044 	movi	r2,1
    38d8:	13006b0e 	bge	r2,r12,3a88 <_dtoa_r+0x764>
    38dc:	d9000717 	ldw	r4,28(sp)
    38e0:	dd800f15 	stw	r22,60(sp)
    38e4:	dcc01015 	stw	r19,64(sp)
    38e8:	2319883a 	add	r12,r4,r12
    38ec:	dcc01217 	ldw	r19,72(sp)
    38f0:	602d883a 	mov	r22,r12
    38f4:	dc801215 	stw	r18,72(sp)
    38f8:	b825883a 	mov	r18,r23
    38fc:	00000906 	br	3924 <_dtoa_r+0x600>
    3900:	000cdb40 	call	cdb4 <__subdf3>
    3904:	a80d883a 	mov	r6,r21
    3908:	980f883a 	mov	r7,r19
    390c:	1009883a 	mov	r4,r2
    3910:	180b883a 	mov	r5,r3
    3914:	000c4540 	call	c454 <__ledf2>
    3918:	1003e816 	blt	r2,zero,48bc <_dtoa_r+0x1598>
    391c:	b825883a 	mov	r18,r23
    3920:	bd83e926 	beq	r23,r22,48c8 <_dtoa_r+0x15a4>
    3924:	a809883a 	mov	r4,r21
    3928:	980b883a 	mov	r5,r19
    392c:	000d883a 	mov	r6,zero
    3930:	01d00934 	movhi	r7,16420
    3934:	000c5480 	call	c548 <__muldf3>
    3938:	000d883a 	mov	r6,zero
    393c:	01d00934 	movhi	r7,16420
    3940:	8009883a 	mov	r4,r16
    3944:	880b883a 	mov	r5,r17
    3948:	102b883a 	mov	r21,r2
    394c:	1827883a 	mov	r19,r3
    3950:	000c5480 	call	c548 <__muldf3>
    3954:	180b883a 	mov	r5,r3
    3958:	1009883a 	mov	r4,r2
    395c:	1821883a 	mov	r16,r3
    3960:	1023883a 	mov	r17,r2
    3964:	000d6b00 	call	d6b0 <__fixdfsi>
    3968:	1009883a 	mov	r4,r2
    396c:	1029883a 	mov	r20,r2
    3970:	000d7300 	call	d730 <__floatsidf>
    3974:	8809883a 	mov	r4,r17
    3978:	800b883a 	mov	r5,r16
    397c:	100d883a 	mov	r6,r2
    3980:	180f883a 	mov	r7,r3
    3984:	000cdb40 	call	cdb4 <__subdf3>
    3988:	a5000c04 	addi	r20,r20,48
    398c:	a80d883a 	mov	r6,r21
    3990:	980f883a 	mov	r7,r19
    3994:	1009883a 	mov	r4,r2
    3998:	180b883a 	mov	r5,r3
    399c:	95000005 	stb	r20,0(r18)
    39a0:	1021883a 	mov	r16,r2
    39a4:	1823883a 	mov	r17,r3
    39a8:	000c4540 	call	c454 <__ledf2>
    39ac:	bdc00044 	addi	r23,r23,1
    39b0:	800d883a 	mov	r6,r16
    39b4:	880f883a 	mov	r7,r17
    39b8:	0009883a 	mov	r4,zero
    39bc:	014ffc34 	movhi	r5,16368
    39c0:	103fcf0e 	bge	r2,zero,3900 <__alt_data_end+0xfffe4500>
    39c4:	d8c01317 	ldw	r3,76(sp)
    39c8:	d8c00515 	stw	r3,20(sp)
    39cc:	d9400917 	ldw	r5,36(sp)
    39d0:	e009883a 	mov	r4,fp
    39d4:	00064600 	call	6460 <_Bfree>
    39d8:	d9000517 	ldw	r4,20(sp)
    39dc:	d9802317 	ldw	r6,140(sp)
    39e0:	d9c02517 	ldw	r7,148(sp)
    39e4:	b8000005 	stb	zero,0(r23)
    39e8:	20800044 	addi	r2,r4,1
    39ec:	30800015 	stw	r2,0(r6)
    39f0:	3802aa26 	beq	r7,zero,449c <_dtoa_r+0x1178>
    39f4:	3dc00015 	stw	r23,0(r7)
    39f8:	d8800717 	ldw	r2,28(sp)
    39fc:	003e7906 	br	33e4 <__alt_data_end+0xfffe3fe4>
    3a00:	00800434 	movhi	r2,16
    3a04:	10bfffc4 	addi	r2,r2,-1
    3a08:	88a2703a 	and	r17,r17,r2
    3a0c:	883e851e 	bne	r17,zero,3424 <__alt_data_end+0xfffe4024>
    3a10:	00800074 	movhi	r2,1
    3a14:	10803b04 	addi	r2,r2,236
    3a18:	003e8406 	br	342c <__alt_data_end+0xfffe402c>
    3a1c:	10c00204 	addi	r3,r2,8
    3a20:	003e8706 	br	3440 <__alt_data_end+0xfffe4040>
    3a24:	01400434 	movhi	r5,16
    3a28:	297fffc4 	addi	r5,r5,-1
    3a2c:	994a703a 	and	r5,r19,r5
    3a30:	9009883a 	mov	r4,r18
    3a34:	843f0044 	addi	r16,r16,-1023
    3a38:	294ffc34 	orhi	r5,r5,16368
    3a3c:	dd800217 	ldw	r22,8(sp)
    3a40:	d8001115 	stw	zero,68(sp)
    3a44:	003ea506 	br	34dc <__alt_data_end+0xfffe40dc>
    3a48:	00800074 	movhi	r2,1
    3a4c:	10803204 	addi	r2,r2,200
    3a50:	003e6406 	br	33e4 <__alt_data_end+0xfffe3fe4>
    3a54:	e0001115 	stw	zero,68(fp)
    3a58:	000b883a 	mov	r5,zero
    3a5c:	e009883a 	mov	r4,fp
    3a60:	00063b80 	call	63b8 <_Balloc>
    3a64:	01bfffc4 	movi	r6,-1
    3a68:	01c00044 	movi	r7,1
    3a6c:	d8800715 	stw	r2,28(sp)
    3a70:	d9800c15 	stw	r6,48(sp)
    3a74:	e0801015 	stw	r2,64(fp)
    3a78:	d8000315 	stw	zero,12(sp)
    3a7c:	d9c00b15 	stw	r7,44(sp)
    3a80:	d9800615 	stw	r6,24(sp)
    3a84:	d8002215 	stw	zero,136(sp)
    3a88:	d8800117 	ldw	r2,4(sp)
    3a8c:	10008916 	blt	r2,zero,3cb4 <_dtoa_r+0x990>
    3a90:	d9000517 	ldw	r4,20(sp)
    3a94:	00c00384 	movi	r3,14
    3a98:	19008616 	blt	r3,r4,3cb4 <_dtoa_r+0x990>
    3a9c:	200490fa 	slli	r2,r4,3
    3aa0:	00c00074 	movhi	r3,1
    3aa4:	d9802217 	ldw	r6,136(sp)
    3aa8:	18c05a04 	addi	r3,r3,360
    3aac:	1885883a 	add	r2,r3,r2
    3ab0:	14000017 	ldw	r16,0(r2)
    3ab4:	14400117 	ldw	r17,4(r2)
    3ab8:	30016316 	blt	r6,zero,4048 <_dtoa_r+0xd24>
    3abc:	800d883a 	mov	r6,r16
    3ac0:	880f883a 	mov	r7,r17
    3ac4:	9009883a 	mov	r4,r18
    3ac8:	980b883a 	mov	r5,r19
    3acc:	000b9200 	call	b920 <__divdf3>
    3ad0:	180b883a 	mov	r5,r3
    3ad4:	1009883a 	mov	r4,r2
    3ad8:	000d6b00 	call	d6b0 <__fixdfsi>
    3adc:	1009883a 	mov	r4,r2
    3ae0:	102b883a 	mov	r21,r2
    3ae4:	000d7300 	call	d730 <__floatsidf>
    3ae8:	800d883a 	mov	r6,r16
    3aec:	880f883a 	mov	r7,r17
    3af0:	1009883a 	mov	r4,r2
    3af4:	180b883a 	mov	r5,r3
    3af8:	000c5480 	call	c548 <__muldf3>
    3afc:	100d883a 	mov	r6,r2
    3b00:	180f883a 	mov	r7,r3
    3b04:	9009883a 	mov	r4,r18
    3b08:	980b883a 	mov	r5,r19
    3b0c:	000cdb40 	call	cdb4 <__subdf3>
    3b10:	d9c00717 	ldw	r7,28(sp)
    3b14:	1009883a 	mov	r4,r2
    3b18:	a8800c04 	addi	r2,r21,48
    3b1c:	38800005 	stb	r2,0(r7)
    3b20:	3dc00044 	addi	r23,r7,1
    3b24:	d9c00617 	ldw	r7,24(sp)
    3b28:	01800044 	movi	r6,1
    3b2c:	180b883a 	mov	r5,r3
    3b30:	2005883a 	mov	r2,r4
    3b34:	39803826 	beq	r7,r6,3c18 <_dtoa_r+0x8f4>
    3b38:	000d883a 	mov	r6,zero
    3b3c:	01d00934 	movhi	r7,16420
    3b40:	000c5480 	call	c548 <__muldf3>
    3b44:	000d883a 	mov	r6,zero
    3b48:	000f883a 	mov	r7,zero
    3b4c:	1009883a 	mov	r4,r2
    3b50:	180b883a 	mov	r5,r3
    3b54:	1025883a 	mov	r18,r2
    3b58:	1827883a 	mov	r19,r3
    3b5c:	000c2f00 	call	c2f0 <__eqdf2>
    3b60:	103f9a26 	beq	r2,zero,39cc <__alt_data_end+0xfffe45cc>
    3b64:	d9c00617 	ldw	r7,24(sp)
    3b68:	d8c00717 	ldw	r3,28(sp)
    3b6c:	b829883a 	mov	r20,r23
    3b70:	38bfffc4 	addi	r2,r7,-1
    3b74:	18ad883a 	add	r22,r3,r2
    3b78:	00000a06 	br	3ba4 <_dtoa_r+0x880>
    3b7c:	000c5480 	call	c548 <__muldf3>
    3b80:	000d883a 	mov	r6,zero
    3b84:	000f883a 	mov	r7,zero
    3b88:	1009883a 	mov	r4,r2
    3b8c:	180b883a 	mov	r5,r3
    3b90:	1025883a 	mov	r18,r2
    3b94:	1827883a 	mov	r19,r3
    3b98:	b829883a 	mov	r20,r23
    3b9c:	000c2f00 	call	c2f0 <__eqdf2>
    3ba0:	103f8a26 	beq	r2,zero,39cc <__alt_data_end+0xfffe45cc>
    3ba4:	800d883a 	mov	r6,r16
    3ba8:	880f883a 	mov	r7,r17
    3bac:	9009883a 	mov	r4,r18
    3bb0:	980b883a 	mov	r5,r19
    3bb4:	000b9200 	call	b920 <__divdf3>
    3bb8:	180b883a 	mov	r5,r3
    3bbc:	1009883a 	mov	r4,r2
    3bc0:	000d6b00 	call	d6b0 <__fixdfsi>
    3bc4:	1009883a 	mov	r4,r2
    3bc8:	102b883a 	mov	r21,r2
    3bcc:	000d7300 	call	d730 <__floatsidf>
    3bd0:	800d883a 	mov	r6,r16
    3bd4:	880f883a 	mov	r7,r17
    3bd8:	1009883a 	mov	r4,r2
    3bdc:	180b883a 	mov	r5,r3
    3be0:	000c5480 	call	c548 <__muldf3>
    3be4:	100d883a 	mov	r6,r2
    3be8:	180f883a 	mov	r7,r3
    3bec:	9009883a 	mov	r4,r18
    3bf0:	980b883a 	mov	r5,r19
    3bf4:	000cdb40 	call	cdb4 <__subdf3>
    3bf8:	aa000c04 	addi	r8,r21,48
    3bfc:	a2000005 	stb	r8,0(r20)
    3c00:	000d883a 	mov	r6,zero
    3c04:	01d00934 	movhi	r7,16420
    3c08:	1009883a 	mov	r4,r2
    3c0c:	180b883a 	mov	r5,r3
    3c10:	a5c00044 	addi	r23,r20,1
    3c14:	b53fd91e 	bne	r22,r20,3b7c <__alt_data_end+0xfffe477c>
    3c18:	100d883a 	mov	r6,r2
    3c1c:	180f883a 	mov	r7,r3
    3c20:	1009883a 	mov	r4,r2
    3c24:	180b883a 	mov	r5,r3
    3c28:	000b0740 	call	b074 <__adddf3>
    3c2c:	100d883a 	mov	r6,r2
    3c30:	180f883a 	mov	r7,r3
    3c34:	8009883a 	mov	r4,r16
    3c38:	880b883a 	mov	r5,r17
    3c3c:	1027883a 	mov	r19,r2
    3c40:	1825883a 	mov	r18,r3
    3c44:	000c4540 	call	c454 <__ledf2>
    3c48:	10000816 	blt	r2,zero,3c6c <_dtoa_r+0x948>
    3c4c:	980d883a 	mov	r6,r19
    3c50:	900f883a 	mov	r7,r18
    3c54:	8009883a 	mov	r4,r16
    3c58:	880b883a 	mov	r5,r17
    3c5c:	000c2f00 	call	c2f0 <__eqdf2>
    3c60:	103f5a1e 	bne	r2,zero,39cc <__alt_data_end+0xfffe45cc>
    3c64:	ad40004c 	andi	r21,r21,1
    3c68:	a83f5826 	beq	r21,zero,39cc <__alt_data_end+0xfffe45cc>
    3c6c:	bd3fffc3 	ldbu	r20,-1(r23)
    3c70:	b8bfffc4 	addi	r2,r23,-1
    3c74:	1007883a 	mov	r3,r2
    3c78:	01400e44 	movi	r5,57
    3c7c:	d9800717 	ldw	r6,28(sp)
    3c80:	00000506 	br	3c98 <_dtoa_r+0x974>
    3c84:	18ffffc4 	addi	r3,r3,-1
    3c88:	11824726 	beq	r2,r6,45a8 <_dtoa_r+0x1284>
    3c8c:	1d000003 	ldbu	r20,0(r3)
    3c90:	102f883a 	mov	r23,r2
    3c94:	10bfffc4 	addi	r2,r2,-1
    3c98:	a1003fcc 	andi	r4,r20,255
    3c9c:	2100201c 	xori	r4,r4,128
    3ca0:	213fe004 	addi	r4,r4,-128
    3ca4:	217ff726 	beq	r4,r5,3c84 <__alt_data_end+0xfffe4884>
    3ca8:	a2000044 	addi	r8,r20,1
    3cac:	12000005 	stb	r8,0(r2)
    3cb0:	003f4606 	br	39cc <__alt_data_end+0xfffe45cc>
    3cb4:	d9000b17 	ldw	r4,44(sp)
    3cb8:	2000c826 	beq	r4,zero,3fdc <_dtoa_r+0xcb8>
    3cbc:	d9800317 	ldw	r6,12(sp)
    3cc0:	00c00044 	movi	r3,1
    3cc4:	1980f90e 	bge	r3,r6,40ac <_dtoa_r+0xd88>
    3cc8:	d8800617 	ldw	r2,24(sp)
    3ccc:	d8c00a17 	ldw	r3,40(sp)
    3cd0:	157fffc4 	addi	r21,r2,-1
    3cd4:	1d41f316 	blt	r3,r21,44a4 <_dtoa_r+0x1180>
    3cd8:	1d6bc83a 	sub	r21,r3,r21
    3cdc:	d9c00617 	ldw	r7,24(sp)
    3ce0:	3802aa16 	blt	r7,zero,478c <_dtoa_r+0x1468>
    3ce4:	dd000817 	ldw	r20,32(sp)
    3ce8:	d8800617 	ldw	r2,24(sp)
    3cec:	d8c00817 	ldw	r3,32(sp)
    3cf0:	01400044 	movi	r5,1
    3cf4:	e009883a 	mov	r4,fp
    3cf8:	1887883a 	add	r3,r3,r2
    3cfc:	d8c00815 	stw	r3,32(sp)
    3d00:	b0ad883a 	add	r22,r22,r2
    3d04:	00067ec0 	call	67ec <__i2b>
    3d08:	1023883a 	mov	r17,r2
    3d0c:	a0000826 	beq	r20,zero,3d30 <_dtoa_r+0xa0c>
    3d10:	0580070e 	bge	zero,r22,3d30 <_dtoa_r+0xa0c>
    3d14:	a005883a 	mov	r2,r20
    3d18:	b500b916 	blt	r22,r20,4000 <_dtoa_r+0xcdc>
    3d1c:	d9000817 	ldw	r4,32(sp)
    3d20:	a0a9c83a 	sub	r20,r20,r2
    3d24:	b0adc83a 	sub	r22,r22,r2
    3d28:	2089c83a 	sub	r4,r4,r2
    3d2c:	d9000815 	stw	r4,32(sp)
    3d30:	d9800a17 	ldw	r6,40(sp)
    3d34:	0181810e 	bge	zero,r6,433c <_dtoa_r+0x1018>
    3d38:	d9c00b17 	ldw	r7,44(sp)
    3d3c:	3800b326 	beq	r7,zero,400c <_dtoa_r+0xce8>
    3d40:	a800b226 	beq	r21,zero,400c <_dtoa_r+0xce8>
    3d44:	880b883a 	mov	r5,r17
    3d48:	a80d883a 	mov	r6,r21
    3d4c:	e009883a 	mov	r4,fp
    3d50:	0006ab40 	call	6ab4 <__pow5mult>
    3d54:	d9800917 	ldw	r6,36(sp)
    3d58:	100b883a 	mov	r5,r2
    3d5c:	e009883a 	mov	r4,fp
    3d60:	1023883a 	mov	r17,r2
    3d64:	00068280 	call	6828 <__multiply>
    3d68:	1021883a 	mov	r16,r2
    3d6c:	d8800a17 	ldw	r2,40(sp)
    3d70:	d9400917 	ldw	r5,36(sp)
    3d74:	e009883a 	mov	r4,fp
    3d78:	1545c83a 	sub	r2,r2,r21
    3d7c:	d8800a15 	stw	r2,40(sp)
    3d80:	00064600 	call	6460 <_Bfree>
    3d84:	d8c00a17 	ldw	r3,40(sp)
    3d88:	18009f1e 	bne	r3,zero,4008 <_dtoa_r+0xce4>
    3d8c:	05c00044 	movi	r23,1
    3d90:	e009883a 	mov	r4,fp
    3d94:	b80b883a 	mov	r5,r23
    3d98:	00067ec0 	call	67ec <__i2b>
    3d9c:	d9000d17 	ldw	r4,52(sp)
    3da0:	102b883a 	mov	r21,r2
    3da4:	2000ce26 	beq	r4,zero,40e0 <_dtoa_r+0xdbc>
    3da8:	200d883a 	mov	r6,r4
    3dac:	100b883a 	mov	r5,r2
    3db0:	e009883a 	mov	r4,fp
    3db4:	0006ab40 	call	6ab4 <__pow5mult>
    3db8:	d9800317 	ldw	r6,12(sp)
    3dbc:	102b883a 	mov	r21,r2
    3dc0:	b981810e 	bge	r23,r6,43c8 <_dtoa_r+0x10a4>
    3dc4:	0027883a 	mov	r19,zero
    3dc8:	a8800417 	ldw	r2,16(r21)
    3dcc:	05c00804 	movi	r23,32
    3dd0:	10800104 	addi	r2,r2,4
    3dd4:	1085883a 	add	r2,r2,r2
    3dd8:	1085883a 	add	r2,r2,r2
    3ddc:	a885883a 	add	r2,r21,r2
    3de0:	11000017 	ldw	r4,0(r2)
    3de4:	00066d40 	call	66d4 <__hi0bits>
    3de8:	b885c83a 	sub	r2,r23,r2
    3dec:	1585883a 	add	r2,r2,r22
    3df0:	108007cc 	andi	r2,r2,31
    3df4:	1000b326 	beq	r2,zero,40c4 <_dtoa_r+0xda0>
    3df8:	00c00804 	movi	r3,32
    3dfc:	1887c83a 	sub	r3,r3,r2
    3e00:	01000104 	movi	r4,4
    3e04:	20c2cd0e 	bge	r4,r3,493c <_dtoa_r+0x1618>
    3e08:	00c00704 	movi	r3,28
    3e0c:	1885c83a 	sub	r2,r3,r2
    3e10:	d8c00817 	ldw	r3,32(sp)
    3e14:	a0a9883a 	add	r20,r20,r2
    3e18:	b0ad883a 	add	r22,r22,r2
    3e1c:	1887883a 	add	r3,r3,r2
    3e20:	d8c00815 	stw	r3,32(sp)
    3e24:	d9800817 	ldw	r6,32(sp)
    3e28:	0180040e 	bge	zero,r6,3e3c <_dtoa_r+0xb18>
    3e2c:	800b883a 	mov	r5,r16
    3e30:	e009883a 	mov	r4,fp
    3e34:	0006bf40 	call	6bf4 <__lshift>
    3e38:	1021883a 	mov	r16,r2
    3e3c:	0580050e 	bge	zero,r22,3e54 <_dtoa_r+0xb30>
    3e40:	a80b883a 	mov	r5,r21
    3e44:	b00d883a 	mov	r6,r22
    3e48:	e009883a 	mov	r4,fp
    3e4c:	0006bf40 	call	6bf4 <__lshift>
    3e50:	102b883a 	mov	r21,r2
    3e54:	d9c00e17 	ldw	r7,56(sp)
    3e58:	3801211e 	bne	r7,zero,42e0 <_dtoa_r+0xfbc>
    3e5c:	d9800617 	ldw	r6,24(sp)
    3e60:	0181380e 	bge	zero,r6,4344 <_dtoa_r+0x1020>
    3e64:	d8c00b17 	ldw	r3,44(sp)
    3e68:	1800ab1e 	bne	r3,zero,4118 <_dtoa_r+0xdf4>
    3e6c:	dc800717 	ldw	r18,28(sp)
    3e70:	dcc00617 	ldw	r19,24(sp)
    3e74:	9029883a 	mov	r20,r18
    3e78:	00000206 	br	3e84 <_dtoa_r+0xb60>
    3e7c:	00064880 	call	6488 <__multadd>
    3e80:	1021883a 	mov	r16,r2
    3e84:	a80b883a 	mov	r5,r21
    3e88:	8009883a 	mov	r4,r16
    3e8c:	00030fc0 	call	30fc <quorem>
    3e90:	10800c04 	addi	r2,r2,48
    3e94:	90800005 	stb	r2,0(r18)
    3e98:	94800044 	addi	r18,r18,1
    3e9c:	9507c83a 	sub	r3,r18,r20
    3ea0:	000f883a 	mov	r7,zero
    3ea4:	01800284 	movi	r6,10
    3ea8:	800b883a 	mov	r5,r16
    3eac:	e009883a 	mov	r4,fp
    3eb0:	1cfff216 	blt	r3,r19,3e7c <__alt_data_end+0xfffe4a7c>
    3eb4:	1011883a 	mov	r8,r2
    3eb8:	d8800617 	ldw	r2,24(sp)
    3ebc:	0082370e 	bge	zero,r2,479c <_dtoa_r+0x1478>
    3ec0:	d9000717 	ldw	r4,28(sp)
    3ec4:	0025883a 	mov	r18,zero
    3ec8:	20af883a 	add	r23,r4,r2
    3ecc:	01800044 	movi	r6,1
    3ed0:	800b883a 	mov	r5,r16
    3ed4:	e009883a 	mov	r4,fp
    3ed8:	da001715 	stw	r8,92(sp)
    3edc:	0006bf40 	call	6bf4 <__lshift>
    3ee0:	a80b883a 	mov	r5,r21
    3ee4:	1009883a 	mov	r4,r2
    3ee8:	d8800915 	stw	r2,36(sp)
    3eec:	0006d3c0 	call	6d3c <__mcmp>
    3ef0:	da001717 	ldw	r8,92(sp)
    3ef4:	0081800e 	bge	zero,r2,44f8 <_dtoa_r+0x11d4>
    3ef8:	b93fffc3 	ldbu	r4,-1(r23)
    3efc:	b8bfffc4 	addi	r2,r23,-1
    3f00:	1007883a 	mov	r3,r2
    3f04:	01800e44 	movi	r6,57
    3f08:	d9c00717 	ldw	r7,28(sp)
    3f0c:	00000506 	br	3f24 <_dtoa_r+0xc00>
    3f10:	18ffffc4 	addi	r3,r3,-1
    3f14:	11c12326 	beq	r2,r7,43a4 <_dtoa_r+0x1080>
    3f18:	19000003 	ldbu	r4,0(r3)
    3f1c:	102f883a 	mov	r23,r2
    3f20:	10bfffc4 	addi	r2,r2,-1
    3f24:	21403fcc 	andi	r5,r4,255
    3f28:	2940201c 	xori	r5,r5,128
    3f2c:	297fe004 	addi	r5,r5,-128
    3f30:	29bff726 	beq	r5,r6,3f10 <__alt_data_end+0xfffe4b10>
    3f34:	21000044 	addi	r4,r4,1
    3f38:	11000005 	stb	r4,0(r2)
    3f3c:	a80b883a 	mov	r5,r21
    3f40:	e009883a 	mov	r4,fp
    3f44:	00064600 	call	6460 <_Bfree>
    3f48:	883ea026 	beq	r17,zero,39cc <__alt_data_end+0xfffe45cc>
    3f4c:	90000426 	beq	r18,zero,3f60 <_dtoa_r+0xc3c>
    3f50:	94400326 	beq	r18,r17,3f60 <_dtoa_r+0xc3c>
    3f54:	900b883a 	mov	r5,r18
    3f58:	e009883a 	mov	r4,fp
    3f5c:	00064600 	call	6460 <_Bfree>
    3f60:	880b883a 	mov	r5,r17
    3f64:	e009883a 	mov	r4,fp
    3f68:	00064600 	call	6460 <_Bfree>
    3f6c:	003e9706 	br	39cc <__alt_data_end+0xfffe45cc>
    3f70:	01800044 	movi	r6,1
    3f74:	d9800e15 	stw	r6,56(sp)
    3f78:	003d9606 	br	35d4 <__alt_data_end+0xfffe41d4>
    3f7c:	d8800817 	ldw	r2,32(sp)
    3f80:	d8c00517 	ldw	r3,20(sp)
    3f84:	d8000d15 	stw	zero,52(sp)
    3f88:	10c5c83a 	sub	r2,r2,r3
    3f8c:	00c9c83a 	sub	r4,zero,r3
    3f90:	d8800815 	stw	r2,32(sp)
    3f94:	d9000a15 	stw	r4,40(sp)
    3f98:	003d9706 	br	35f8 <__alt_data_end+0xfffe41f8>
    3f9c:	05adc83a 	sub	r22,zero,r22
    3fa0:	dd800815 	stw	r22,32(sp)
    3fa4:	002d883a 	mov	r22,zero
    3fa8:	003d8e06 	br	35e4 <__alt_data_end+0xfffe41e4>
    3fac:	d9000517 	ldw	r4,20(sp)
    3fb0:	000d7300 	call	d730 <__floatsidf>
    3fb4:	100d883a 	mov	r6,r2
    3fb8:	180f883a 	mov	r7,r3
    3fbc:	a009883a 	mov	r4,r20
    3fc0:	880b883a 	mov	r5,r17
    3fc4:	000c2f00 	call	c2f0 <__eqdf2>
    3fc8:	103d7126 	beq	r2,zero,3590 <__alt_data_end+0xfffe4190>
    3fcc:	d9c00517 	ldw	r7,20(sp)
    3fd0:	39ffffc4 	addi	r7,r7,-1
    3fd4:	d9c00515 	stw	r7,20(sp)
    3fd8:	003d6d06 	br	3590 <__alt_data_end+0xfffe4190>
    3fdc:	dd400a17 	ldw	r21,40(sp)
    3fe0:	dd000817 	ldw	r20,32(sp)
    3fe4:	0023883a 	mov	r17,zero
    3fe8:	003f4806 	br	3d0c <__alt_data_end+0xfffe490c>
    3fec:	10e3c83a 	sub	r17,r2,r3
    3ff0:	9448983a 	sll	r4,r18,r17
    3ff4:	003d3206 	br	34c0 <__alt_data_end+0xfffe40c0>
    3ff8:	d8000e15 	stw	zero,56(sp)
    3ffc:	003d7506 	br	35d4 <__alt_data_end+0xfffe41d4>
    4000:	b005883a 	mov	r2,r22
    4004:	003f4506 	br	3d1c <__alt_data_end+0xfffe491c>
    4008:	dc000915 	stw	r16,36(sp)
    400c:	d9800a17 	ldw	r6,40(sp)
    4010:	d9400917 	ldw	r5,36(sp)
    4014:	e009883a 	mov	r4,fp
    4018:	0006ab40 	call	6ab4 <__pow5mult>
    401c:	1021883a 	mov	r16,r2
    4020:	003f5a06 	br	3d8c <__alt_data_end+0xfffe498c>
    4024:	01c00044 	movi	r7,1
    4028:	d9c00b15 	stw	r7,44(sp)
    402c:	d8802217 	ldw	r2,136(sp)
    4030:	0081280e 	bge	zero,r2,44d4 <_dtoa_r+0x11b0>
    4034:	100d883a 	mov	r6,r2
    4038:	1021883a 	mov	r16,r2
    403c:	d8800c15 	stw	r2,48(sp)
    4040:	d8800615 	stw	r2,24(sp)
    4044:	003d8806 	br	3668 <__alt_data_end+0xfffe4268>
    4048:	d8800617 	ldw	r2,24(sp)
    404c:	00be9b16 	blt	zero,r2,3abc <__alt_data_end+0xfffe46bc>
    4050:	10010f1e 	bne	r2,zero,4490 <_dtoa_r+0x116c>
    4054:	880b883a 	mov	r5,r17
    4058:	000d883a 	mov	r6,zero
    405c:	01d00534 	movhi	r7,16404
    4060:	8009883a 	mov	r4,r16
    4064:	000c5480 	call	c548 <__muldf3>
    4068:	900d883a 	mov	r6,r18
    406c:	980f883a 	mov	r7,r19
    4070:	1009883a 	mov	r4,r2
    4074:	180b883a 	mov	r5,r3
    4078:	000c3780 	call	c378 <__gedf2>
    407c:	002b883a 	mov	r21,zero
    4080:	0023883a 	mov	r17,zero
    4084:	1000bf16 	blt	r2,zero,4384 <_dtoa_r+0x1060>
    4088:	d9802217 	ldw	r6,136(sp)
    408c:	ddc00717 	ldw	r23,28(sp)
    4090:	018c303a 	nor	r6,zero,r6
    4094:	d9800515 	stw	r6,20(sp)
    4098:	a80b883a 	mov	r5,r21
    409c:	e009883a 	mov	r4,fp
    40a0:	00064600 	call	6460 <_Bfree>
    40a4:	883e4926 	beq	r17,zero,39cc <__alt_data_end+0xfffe45cc>
    40a8:	003fad06 	br	3f60 <__alt_data_end+0xfffe4b60>
    40ac:	d9c01117 	ldw	r7,68(sp)
    40b0:	3801bc26 	beq	r7,zero,47a4 <_dtoa_r+0x1480>
    40b4:	10810cc4 	addi	r2,r2,1075
    40b8:	dd400a17 	ldw	r21,40(sp)
    40bc:	dd000817 	ldw	r20,32(sp)
    40c0:	003f0a06 	br	3cec <__alt_data_end+0xfffe48ec>
    40c4:	00800704 	movi	r2,28
    40c8:	d9000817 	ldw	r4,32(sp)
    40cc:	a0a9883a 	add	r20,r20,r2
    40d0:	b0ad883a 	add	r22,r22,r2
    40d4:	2089883a 	add	r4,r4,r2
    40d8:	d9000815 	stw	r4,32(sp)
    40dc:	003f5106 	br	3e24 <__alt_data_end+0xfffe4a24>
    40e0:	d8c00317 	ldw	r3,12(sp)
    40e4:	b8c1fc0e 	bge	r23,r3,48d8 <_dtoa_r+0x15b4>
    40e8:	0027883a 	mov	r19,zero
    40ec:	b805883a 	mov	r2,r23
    40f0:	003f3e06 	br	3dec <__alt_data_end+0xfffe49ec>
    40f4:	880b883a 	mov	r5,r17
    40f8:	e009883a 	mov	r4,fp
    40fc:	000f883a 	mov	r7,zero
    4100:	01800284 	movi	r6,10
    4104:	00064880 	call	6488 <__multadd>
    4108:	d9000c17 	ldw	r4,48(sp)
    410c:	1023883a 	mov	r17,r2
    4110:	0102040e 	bge	zero,r4,4924 <_dtoa_r+0x1600>
    4114:	d9000615 	stw	r4,24(sp)
    4118:	0500050e 	bge	zero,r20,4130 <_dtoa_r+0xe0c>
    411c:	880b883a 	mov	r5,r17
    4120:	a00d883a 	mov	r6,r20
    4124:	e009883a 	mov	r4,fp
    4128:	0006bf40 	call	6bf4 <__lshift>
    412c:	1023883a 	mov	r17,r2
    4130:	9801241e 	bne	r19,zero,45c4 <_dtoa_r+0x12a0>
    4134:	8829883a 	mov	r20,r17
    4138:	d9000617 	ldw	r4,24(sp)
    413c:	dcc00717 	ldw	r19,28(sp)
    4140:	9480004c 	andi	r18,r18,1
    4144:	20bfffc4 	addi	r2,r4,-1
    4148:	9885883a 	add	r2,r19,r2
    414c:	d8800415 	stw	r2,16(sp)
    4150:	dc800615 	stw	r18,24(sp)
    4154:	a80b883a 	mov	r5,r21
    4158:	8009883a 	mov	r4,r16
    415c:	00030fc0 	call	30fc <quorem>
    4160:	880b883a 	mov	r5,r17
    4164:	8009883a 	mov	r4,r16
    4168:	102f883a 	mov	r23,r2
    416c:	0006d3c0 	call	6d3c <__mcmp>
    4170:	a80b883a 	mov	r5,r21
    4174:	a00d883a 	mov	r6,r20
    4178:	e009883a 	mov	r4,fp
    417c:	102d883a 	mov	r22,r2
    4180:	0006d9c0 	call	6d9c <__mdiff>
    4184:	1007883a 	mov	r3,r2
    4188:	10800317 	ldw	r2,12(r2)
    418c:	bc800c04 	addi	r18,r23,48
    4190:	180b883a 	mov	r5,r3
    4194:	10004e1e 	bne	r2,zero,42d0 <_dtoa_r+0xfac>
    4198:	8009883a 	mov	r4,r16
    419c:	d8c01615 	stw	r3,88(sp)
    41a0:	0006d3c0 	call	6d3c <__mcmp>
    41a4:	d8c01617 	ldw	r3,88(sp)
    41a8:	e009883a 	mov	r4,fp
    41ac:	d8801615 	stw	r2,88(sp)
    41b0:	180b883a 	mov	r5,r3
    41b4:	00064600 	call	6460 <_Bfree>
    41b8:	d8801617 	ldw	r2,88(sp)
    41bc:	1000041e 	bne	r2,zero,41d0 <_dtoa_r+0xeac>
    41c0:	d9800317 	ldw	r6,12(sp)
    41c4:	3000021e 	bne	r6,zero,41d0 <_dtoa_r+0xeac>
    41c8:	d8c00617 	ldw	r3,24(sp)
    41cc:	18003726 	beq	r3,zero,42ac <_dtoa_r+0xf88>
    41d0:	b0002016 	blt	r22,zero,4254 <_dtoa_r+0xf30>
    41d4:	b000041e 	bne	r22,zero,41e8 <_dtoa_r+0xec4>
    41d8:	d9000317 	ldw	r4,12(sp)
    41dc:	2000021e 	bne	r4,zero,41e8 <_dtoa_r+0xec4>
    41e0:	d8c00617 	ldw	r3,24(sp)
    41e4:	18001b26 	beq	r3,zero,4254 <_dtoa_r+0xf30>
    41e8:	00810716 	blt	zero,r2,4608 <_dtoa_r+0x12e4>
    41ec:	d8c00417 	ldw	r3,16(sp)
    41f0:	9d800044 	addi	r22,r19,1
    41f4:	9c800005 	stb	r18,0(r19)
    41f8:	b02f883a 	mov	r23,r22
    41fc:	98c10626 	beq	r19,r3,4618 <_dtoa_r+0x12f4>
    4200:	800b883a 	mov	r5,r16
    4204:	000f883a 	mov	r7,zero
    4208:	01800284 	movi	r6,10
    420c:	e009883a 	mov	r4,fp
    4210:	00064880 	call	6488 <__multadd>
    4214:	1021883a 	mov	r16,r2
    4218:	000f883a 	mov	r7,zero
    421c:	01800284 	movi	r6,10
    4220:	880b883a 	mov	r5,r17
    4224:	e009883a 	mov	r4,fp
    4228:	8d002526 	beq	r17,r20,42c0 <_dtoa_r+0xf9c>
    422c:	00064880 	call	6488 <__multadd>
    4230:	a00b883a 	mov	r5,r20
    4234:	000f883a 	mov	r7,zero
    4238:	01800284 	movi	r6,10
    423c:	e009883a 	mov	r4,fp
    4240:	1023883a 	mov	r17,r2
    4244:	00064880 	call	6488 <__multadd>
    4248:	1029883a 	mov	r20,r2
    424c:	b027883a 	mov	r19,r22
    4250:	003fc006 	br	4154 <__alt_data_end+0xfffe4d54>
    4254:	9011883a 	mov	r8,r18
    4258:	00800e0e 	bge	zero,r2,4294 <_dtoa_r+0xf70>
    425c:	800b883a 	mov	r5,r16
    4260:	01800044 	movi	r6,1
    4264:	e009883a 	mov	r4,fp
    4268:	da001715 	stw	r8,92(sp)
    426c:	0006bf40 	call	6bf4 <__lshift>
    4270:	a80b883a 	mov	r5,r21
    4274:	1009883a 	mov	r4,r2
    4278:	1021883a 	mov	r16,r2
    427c:	0006d3c0 	call	6d3c <__mcmp>
    4280:	da001717 	ldw	r8,92(sp)
    4284:	0081960e 	bge	zero,r2,48e0 <_dtoa_r+0x15bc>
    4288:	00800e44 	movi	r2,57
    428c:	40817026 	beq	r8,r2,4850 <_dtoa_r+0x152c>
    4290:	ba000c44 	addi	r8,r23,49
    4294:	8825883a 	mov	r18,r17
    4298:	9dc00044 	addi	r23,r19,1
    429c:	9a000005 	stb	r8,0(r19)
    42a0:	a023883a 	mov	r17,r20
    42a4:	dc000915 	stw	r16,36(sp)
    42a8:	003f2406 	br	3f3c <__alt_data_end+0xfffe4b3c>
    42ac:	00800e44 	movi	r2,57
    42b0:	9011883a 	mov	r8,r18
    42b4:	90816626 	beq	r18,r2,4850 <_dtoa_r+0x152c>
    42b8:	05bff516 	blt	zero,r22,4290 <__alt_data_end+0xfffe4e90>
    42bc:	003ff506 	br	4294 <__alt_data_end+0xfffe4e94>
    42c0:	00064880 	call	6488 <__multadd>
    42c4:	1023883a 	mov	r17,r2
    42c8:	1029883a 	mov	r20,r2
    42cc:	003fdf06 	br	424c <__alt_data_end+0xfffe4e4c>
    42d0:	e009883a 	mov	r4,fp
    42d4:	00064600 	call	6460 <_Bfree>
    42d8:	00800044 	movi	r2,1
    42dc:	003fbc06 	br	41d0 <__alt_data_end+0xfffe4dd0>
    42e0:	a80b883a 	mov	r5,r21
    42e4:	8009883a 	mov	r4,r16
    42e8:	0006d3c0 	call	6d3c <__mcmp>
    42ec:	103edb0e 	bge	r2,zero,3e5c <__alt_data_end+0xfffe4a5c>
    42f0:	800b883a 	mov	r5,r16
    42f4:	000f883a 	mov	r7,zero
    42f8:	01800284 	movi	r6,10
    42fc:	e009883a 	mov	r4,fp
    4300:	00064880 	call	6488 <__multadd>
    4304:	1021883a 	mov	r16,r2
    4308:	d8800517 	ldw	r2,20(sp)
    430c:	d8c00b17 	ldw	r3,44(sp)
    4310:	10bfffc4 	addi	r2,r2,-1
    4314:	d8800515 	stw	r2,20(sp)
    4318:	183f761e 	bne	r3,zero,40f4 <__alt_data_end+0xfffe4cf4>
    431c:	d9000c17 	ldw	r4,48(sp)
    4320:	0101730e 	bge	zero,r4,48f0 <_dtoa_r+0x15cc>
    4324:	d9000615 	stw	r4,24(sp)
    4328:	003ed006 	br	3e6c <__alt_data_end+0xfffe4a6c>
    432c:	00800084 	movi	r2,2
    4330:	3081861e 	bne	r6,r2,494c <_dtoa_r+0x1628>
    4334:	d8000b15 	stw	zero,44(sp)
    4338:	003f3c06 	br	402c <__alt_data_end+0xfffe4c2c>
    433c:	dc000917 	ldw	r16,36(sp)
    4340:	003e9206 	br	3d8c <__alt_data_end+0xfffe498c>
    4344:	d9c00317 	ldw	r7,12(sp)
    4348:	00800084 	movi	r2,2
    434c:	11fec50e 	bge	r2,r7,3e64 <__alt_data_end+0xfffe4a64>
    4350:	d9000617 	ldw	r4,24(sp)
    4354:	20013c1e 	bne	r4,zero,4848 <_dtoa_r+0x1524>
    4358:	a80b883a 	mov	r5,r21
    435c:	000f883a 	mov	r7,zero
    4360:	01800144 	movi	r6,5
    4364:	e009883a 	mov	r4,fp
    4368:	00064880 	call	6488 <__multadd>
    436c:	100b883a 	mov	r5,r2
    4370:	8009883a 	mov	r4,r16
    4374:	102b883a 	mov	r21,r2
    4378:	0006d3c0 	call	6d3c <__mcmp>
    437c:	dc000915 	stw	r16,36(sp)
    4380:	00bf410e 	bge	zero,r2,4088 <__alt_data_end+0xfffe4c88>
    4384:	d9c00717 	ldw	r7,28(sp)
    4388:	00800c44 	movi	r2,49
    438c:	38800005 	stb	r2,0(r7)
    4390:	d8800517 	ldw	r2,20(sp)
    4394:	3dc00044 	addi	r23,r7,1
    4398:	10800044 	addi	r2,r2,1
    439c:	d8800515 	stw	r2,20(sp)
    43a0:	003f3d06 	br	4098 <__alt_data_end+0xfffe4c98>
    43a4:	d9800517 	ldw	r6,20(sp)
    43a8:	d9c00717 	ldw	r7,28(sp)
    43ac:	00800c44 	movi	r2,49
    43b0:	31800044 	addi	r6,r6,1
    43b4:	d9800515 	stw	r6,20(sp)
    43b8:	38800005 	stb	r2,0(r7)
    43bc:	003edf06 	br	3f3c <__alt_data_end+0xfffe4b3c>
    43c0:	d8000b15 	stw	zero,44(sp)
    43c4:	003c9f06 	br	3644 <__alt_data_end+0xfffe4244>
    43c8:	903e7e1e 	bne	r18,zero,3dc4 <__alt_data_end+0xfffe49c4>
    43cc:	00800434 	movhi	r2,16
    43d0:	10bfffc4 	addi	r2,r2,-1
    43d4:	9884703a 	and	r2,r19,r2
    43d8:	1000ea1e 	bne	r2,zero,4784 <_dtoa_r+0x1460>
    43dc:	9cdffc2c 	andhi	r19,r19,32752
    43e0:	9800e826 	beq	r19,zero,4784 <_dtoa_r+0x1460>
    43e4:	d9c00817 	ldw	r7,32(sp)
    43e8:	b5800044 	addi	r22,r22,1
    43ec:	04c00044 	movi	r19,1
    43f0:	39c00044 	addi	r7,r7,1
    43f4:	d9c00815 	stw	r7,32(sp)
    43f8:	d8800d17 	ldw	r2,52(sp)
    43fc:	103e721e 	bne	r2,zero,3dc8 <__alt_data_end+0xfffe49c8>
    4400:	00800044 	movi	r2,1
    4404:	003e7906 	br	3dec <__alt_data_end+0xfffe49ec>
    4408:	8009883a 	mov	r4,r16
    440c:	000d7300 	call	d730 <__floatsidf>
    4410:	d9800f17 	ldw	r6,60(sp)
    4414:	d9c01017 	ldw	r7,64(sp)
    4418:	1009883a 	mov	r4,r2
    441c:	180b883a 	mov	r5,r3
    4420:	000c5480 	call	c548 <__muldf3>
    4424:	000d883a 	mov	r6,zero
    4428:	01d00734 	movhi	r7,16412
    442c:	1009883a 	mov	r4,r2
    4430:	180b883a 	mov	r5,r3
    4434:	000b0740 	call	b074 <__adddf3>
    4438:	047f3034 	movhi	r17,64704
    443c:	1021883a 	mov	r16,r2
    4440:	1c63883a 	add	r17,r3,r17
    4444:	d9000f17 	ldw	r4,60(sp)
    4448:	d9401017 	ldw	r5,64(sp)
    444c:	000d883a 	mov	r6,zero
    4450:	01d00534 	movhi	r7,16404
    4454:	000cdb40 	call	cdb4 <__subdf3>
    4458:	800d883a 	mov	r6,r16
    445c:	880f883a 	mov	r7,r17
    4460:	1009883a 	mov	r4,r2
    4464:	180b883a 	mov	r5,r3
    4468:	102b883a 	mov	r21,r2
    446c:	1829883a 	mov	r20,r3
    4470:	000c3780 	call	c378 <__gedf2>
    4474:	00806c16 	blt	zero,r2,4628 <_dtoa_r+0x1304>
    4478:	89e0003c 	xorhi	r7,r17,32768
    447c:	800d883a 	mov	r6,r16
    4480:	a809883a 	mov	r4,r21
    4484:	a00b883a 	mov	r5,r20
    4488:	000c4540 	call	c454 <__ledf2>
    448c:	103d7e0e 	bge	r2,zero,3a88 <__alt_data_end+0xfffe4688>
    4490:	002b883a 	mov	r21,zero
    4494:	0023883a 	mov	r17,zero
    4498:	003efb06 	br	4088 <__alt_data_end+0xfffe4c88>
    449c:	d8800717 	ldw	r2,28(sp)
    44a0:	003bd006 	br	33e4 <__alt_data_end+0xfffe3fe4>
    44a4:	d9000a17 	ldw	r4,40(sp)
    44a8:	d9800d17 	ldw	r6,52(sp)
    44ac:	dd400a15 	stw	r21,40(sp)
    44b0:	a905c83a 	sub	r2,r21,r4
    44b4:	308d883a 	add	r6,r6,r2
    44b8:	d9800d15 	stw	r6,52(sp)
    44bc:	002b883a 	mov	r21,zero
    44c0:	003e0606 	br	3cdc <__alt_data_end+0xfffe48dc>
    44c4:	9023883a 	mov	r17,r18
    44c8:	9829883a 	mov	r20,r19
    44cc:	04000084 	movi	r16,2
    44d0:	003c9206 	br	371c <__alt_data_end+0xfffe431c>
    44d4:	04000044 	movi	r16,1
    44d8:	dc000c15 	stw	r16,48(sp)
    44dc:	dc000615 	stw	r16,24(sp)
    44e0:	dc002215 	stw	r16,136(sp)
    44e4:	e0001115 	stw	zero,68(fp)
    44e8:	000b883a 	mov	r5,zero
    44ec:	003c6906 	br	3694 <__alt_data_end+0xfffe4294>
    44f0:	3021883a 	mov	r16,r6
    44f4:	003ffb06 	br	44e4 <__alt_data_end+0xfffe50e4>
    44f8:	1000021e 	bne	r2,zero,4504 <_dtoa_r+0x11e0>
    44fc:	4200004c 	andi	r8,r8,1
    4500:	403e7d1e 	bne	r8,zero,3ef8 <__alt_data_end+0xfffe4af8>
    4504:	01000c04 	movi	r4,48
    4508:	00000106 	br	4510 <_dtoa_r+0x11ec>
    450c:	102f883a 	mov	r23,r2
    4510:	b8bfffc4 	addi	r2,r23,-1
    4514:	10c00007 	ldb	r3,0(r2)
    4518:	193ffc26 	beq	r3,r4,450c <__alt_data_end+0xfffe510c>
    451c:	003e8706 	br	3f3c <__alt_data_end+0xfffe4b3c>
    4520:	d8800517 	ldw	r2,20(sp)
    4524:	00a3c83a 	sub	r17,zero,r2
    4528:	8800a426 	beq	r17,zero,47bc <_dtoa_r+0x1498>
    452c:	888003cc 	andi	r2,r17,15
    4530:	100490fa 	slli	r2,r2,3
    4534:	00c00074 	movhi	r3,1
    4538:	18c05a04 	addi	r3,r3,360
    453c:	1885883a 	add	r2,r3,r2
    4540:	11800017 	ldw	r6,0(r2)
    4544:	11c00117 	ldw	r7,4(r2)
    4548:	9009883a 	mov	r4,r18
    454c:	980b883a 	mov	r5,r19
    4550:	8823d13a 	srai	r17,r17,4
    4554:	000c5480 	call	c548 <__muldf3>
    4558:	d8800f15 	stw	r2,60(sp)
    455c:	d8c01015 	stw	r3,64(sp)
    4560:	8800e826 	beq	r17,zero,4904 <_dtoa_r+0x15e0>
    4564:	05000074 	movhi	r20,1
    4568:	a5005004 	addi	r20,r20,320
    456c:	04000084 	movi	r16,2
    4570:	8980004c 	andi	r6,r17,1
    4574:	1009883a 	mov	r4,r2
    4578:	8823d07a 	srai	r17,r17,1
    457c:	180b883a 	mov	r5,r3
    4580:	30000426 	beq	r6,zero,4594 <_dtoa_r+0x1270>
    4584:	a1800017 	ldw	r6,0(r20)
    4588:	a1c00117 	ldw	r7,4(r20)
    458c:	84000044 	addi	r16,r16,1
    4590:	000c5480 	call	c548 <__muldf3>
    4594:	a5000204 	addi	r20,r20,8
    4598:	883ff51e 	bne	r17,zero,4570 <__alt_data_end+0xfffe5170>
    459c:	d8800f15 	stw	r2,60(sp)
    45a0:	d8c01015 	stw	r3,64(sp)
    45a4:	003c7606 	br	3780 <__alt_data_end+0xfffe4380>
    45a8:	00c00c04 	movi	r3,48
    45ac:	10c00005 	stb	r3,0(r2)
    45b0:	d8c00517 	ldw	r3,20(sp)
    45b4:	bd3fffc3 	ldbu	r20,-1(r23)
    45b8:	18c00044 	addi	r3,r3,1
    45bc:	d8c00515 	stw	r3,20(sp)
    45c0:	003db906 	br	3ca8 <__alt_data_end+0xfffe48a8>
    45c4:	89400117 	ldw	r5,4(r17)
    45c8:	e009883a 	mov	r4,fp
    45cc:	00063b80 	call	63b8 <_Balloc>
    45d0:	89800417 	ldw	r6,16(r17)
    45d4:	89400304 	addi	r5,r17,12
    45d8:	11000304 	addi	r4,r2,12
    45dc:	31800084 	addi	r6,r6,2
    45e0:	318d883a 	add	r6,r6,r6
    45e4:	318d883a 	add	r6,r6,r6
    45e8:	1027883a 	mov	r19,r2
    45ec:	00061480 	call	6148 <memcpy>
    45f0:	01800044 	movi	r6,1
    45f4:	980b883a 	mov	r5,r19
    45f8:	e009883a 	mov	r4,fp
    45fc:	0006bf40 	call	6bf4 <__lshift>
    4600:	1029883a 	mov	r20,r2
    4604:	003ecc06 	br	4138 <__alt_data_end+0xfffe4d38>
    4608:	00800e44 	movi	r2,57
    460c:	90809026 	beq	r18,r2,4850 <_dtoa_r+0x152c>
    4610:	92000044 	addi	r8,r18,1
    4614:	003f1f06 	br	4294 <__alt_data_end+0xfffe4e94>
    4618:	9011883a 	mov	r8,r18
    461c:	8825883a 	mov	r18,r17
    4620:	a023883a 	mov	r17,r20
    4624:	003e2906 	br	3ecc <__alt_data_end+0xfffe4acc>
    4628:	002b883a 	mov	r21,zero
    462c:	0023883a 	mov	r17,zero
    4630:	003f5406 	br	4384 <__alt_data_end+0xfffe4f84>
    4634:	61bfffc4 	addi	r6,r12,-1
    4638:	300490fa 	slli	r2,r6,3
    463c:	00c00074 	movhi	r3,1
    4640:	18c05a04 	addi	r3,r3,360
    4644:	1885883a 	add	r2,r3,r2
    4648:	11000017 	ldw	r4,0(r2)
    464c:	11400117 	ldw	r5,4(r2)
    4650:	d8800717 	ldw	r2,28(sp)
    4654:	880f883a 	mov	r7,r17
    4658:	d9801215 	stw	r6,72(sp)
    465c:	800d883a 	mov	r6,r16
    4660:	db001615 	stw	r12,88(sp)
    4664:	15c00044 	addi	r23,r2,1
    4668:	000c5480 	call	c548 <__muldf3>
    466c:	d9401017 	ldw	r5,64(sp)
    4670:	d9000f17 	ldw	r4,60(sp)
    4674:	d8c01515 	stw	r3,84(sp)
    4678:	d8801415 	stw	r2,80(sp)
    467c:	000d6b00 	call	d6b0 <__fixdfsi>
    4680:	1009883a 	mov	r4,r2
    4684:	1021883a 	mov	r16,r2
    4688:	000d7300 	call	d730 <__floatsidf>
    468c:	d9000f17 	ldw	r4,60(sp)
    4690:	d9401017 	ldw	r5,64(sp)
    4694:	100d883a 	mov	r6,r2
    4698:	180f883a 	mov	r7,r3
    469c:	000cdb40 	call	cdb4 <__subdf3>
    46a0:	1829883a 	mov	r20,r3
    46a4:	d8c00717 	ldw	r3,28(sp)
    46a8:	84000c04 	addi	r16,r16,48
    46ac:	1023883a 	mov	r17,r2
    46b0:	1c000005 	stb	r16,0(r3)
    46b4:	db001617 	ldw	r12,88(sp)
    46b8:	00800044 	movi	r2,1
    46bc:	60802226 	beq	r12,r2,4748 <_dtoa_r+0x1424>
    46c0:	d9c00717 	ldw	r7,28(sp)
    46c4:	8805883a 	mov	r2,r17
    46c8:	b82b883a 	mov	r21,r23
    46cc:	3b19883a 	add	r12,r7,r12
    46d0:	6023883a 	mov	r17,r12
    46d4:	a007883a 	mov	r3,r20
    46d8:	dc800f15 	stw	r18,60(sp)
    46dc:	000d883a 	mov	r6,zero
    46e0:	01d00934 	movhi	r7,16420
    46e4:	1009883a 	mov	r4,r2
    46e8:	180b883a 	mov	r5,r3
    46ec:	000c5480 	call	c548 <__muldf3>
    46f0:	180b883a 	mov	r5,r3
    46f4:	1009883a 	mov	r4,r2
    46f8:	1829883a 	mov	r20,r3
    46fc:	1025883a 	mov	r18,r2
    4700:	000d6b00 	call	d6b0 <__fixdfsi>
    4704:	1009883a 	mov	r4,r2
    4708:	1021883a 	mov	r16,r2
    470c:	000d7300 	call	d730 <__floatsidf>
    4710:	100d883a 	mov	r6,r2
    4714:	180f883a 	mov	r7,r3
    4718:	9009883a 	mov	r4,r18
    471c:	a00b883a 	mov	r5,r20
    4720:	84000c04 	addi	r16,r16,48
    4724:	000cdb40 	call	cdb4 <__subdf3>
    4728:	ad400044 	addi	r21,r21,1
    472c:	ac3fffc5 	stb	r16,-1(r21)
    4730:	ac7fea1e 	bne	r21,r17,46dc <__alt_data_end+0xfffe52dc>
    4734:	1023883a 	mov	r17,r2
    4738:	d8801217 	ldw	r2,72(sp)
    473c:	dc800f17 	ldw	r18,60(sp)
    4740:	1829883a 	mov	r20,r3
    4744:	b8af883a 	add	r23,r23,r2
    4748:	d9001417 	ldw	r4,80(sp)
    474c:	d9401517 	ldw	r5,84(sp)
    4750:	000d883a 	mov	r6,zero
    4754:	01cff834 	movhi	r7,16352
    4758:	000b0740 	call	b074 <__adddf3>
    475c:	880d883a 	mov	r6,r17
    4760:	a00f883a 	mov	r7,r20
    4764:	1009883a 	mov	r4,r2
    4768:	180b883a 	mov	r5,r3
    476c:	000c4540 	call	c454 <__ledf2>
    4770:	10003e0e 	bge	r2,zero,486c <_dtoa_r+0x1548>
    4774:	d9001317 	ldw	r4,76(sp)
    4778:	bd3fffc3 	ldbu	r20,-1(r23)
    477c:	d9000515 	stw	r4,20(sp)
    4780:	003d3b06 	br	3c70 <__alt_data_end+0xfffe4870>
    4784:	0027883a 	mov	r19,zero
    4788:	003f1b06 	br	43f8 <__alt_data_end+0xfffe4ff8>
    478c:	d8800817 	ldw	r2,32(sp)
    4790:	11e9c83a 	sub	r20,r2,r7
    4794:	0005883a 	mov	r2,zero
    4798:	003d5406 	br	3cec <__alt_data_end+0xfffe48ec>
    479c:	00800044 	movi	r2,1
    47a0:	003dc706 	br	3ec0 <__alt_data_end+0xfffe4ac0>
    47a4:	d8c00217 	ldw	r3,8(sp)
    47a8:	00800d84 	movi	r2,54
    47ac:	dd400a17 	ldw	r21,40(sp)
    47b0:	10c5c83a 	sub	r2,r2,r3
    47b4:	dd000817 	ldw	r20,32(sp)
    47b8:	003d4c06 	br	3cec <__alt_data_end+0xfffe48ec>
    47bc:	dc800f15 	stw	r18,60(sp)
    47c0:	dcc01015 	stw	r19,64(sp)
    47c4:	04000084 	movi	r16,2
    47c8:	003bed06 	br	3780 <__alt_data_end+0xfffe4380>
    47cc:	d9000617 	ldw	r4,24(sp)
    47d0:	203f0d26 	beq	r4,zero,4408 <__alt_data_end+0xfffe5008>
    47d4:	d9800c17 	ldw	r6,48(sp)
    47d8:	01bcab0e 	bge	zero,r6,3a88 <__alt_data_end+0xfffe4688>
    47dc:	d9401017 	ldw	r5,64(sp)
    47e0:	d9000f17 	ldw	r4,60(sp)
    47e4:	000d883a 	mov	r6,zero
    47e8:	01d00934 	movhi	r7,16420
    47ec:	000c5480 	call	c548 <__muldf3>
    47f0:	81000044 	addi	r4,r16,1
    47f4:	d8800f15 	stw	r2,60(sp)
    47f8:	d8c01015 	stw	r3,64(sp)
    47fc:	000d7300 	call	d730 <__floatsidf>
    4800:	d9800f17 	ldw	r6,60(sp)
    4804:	d9c01017 	ldw	r7,64(sp)
    4808:	1009883a 	mov	r4,r2
    480c:	180b883a 	mov	r5,r3
    4810:	000c5480 	call	c548 <__muldf3>
    4814:	01d00734 	movhi	r7,16412
    4818:	000d883a 	mov	r6,zero
    481c:	1009883a 	mov	r4,r2
    4820:	180b883a 	mov	r5,r3
    4824:	000b0740 	call	b074 <__adddf3>
    4828:	d9c00517 	ldw	r7,20(sp)
    482c:	047f3034 	movhi	r17,64704
    4830:	1021883a 	mov	r16,r2
    4834:	39ffffc4 	addi	r7,r7,-1
    4838:	d9c01315 	stw	r7,76(sp)
    483c:	1c63883a 	add	r17,r3,r17
    4840:	db000c17 	ldw	r12,48(sp)
    4844:	003bea06 	br	37f0 <__alt_data_end+0xfffe43f0>
    4848:	dc000915 	stw	r16,36(sp)
    484c:	003e0e06 	br	4088 <__alt_data_end+0xfffe4c88>
    4850:	01000e44 	movi	r4,57
    4854:	8825883a 	mov	r18,r17
    4858:	9dc00044 	addi	r23,r19,1
    485c:	99000005 	stb	r4,0(r19)
    4860:	a023883a 	mov	r17,r20
    4864:	dc000915 	stw	r16,36(sp)
    4868:	003da406 	br	3efc <__alt_data_end+0xfffe4afc>
    486c:	d9801417 	ldw	r6,80(sp)
    4870:	d9c01517 	ldw	r7,84(sp)
    4874:	0009883a 	mov	r4,zero
    4878:	014ff834 	movhi	r5,16352
    487c:	000cdb40 	call	cdb4 <__subdf3>
    4880:	880d883a 	mov	r6,r17
    4884:	a00f883a 	mov	r7,r20
    4888:	1009883a 	mov	r4,r2
    488c:	180b883a 	mov	r5,r3
    4890:	000c3780 	call	c378 <__gedf2>
    4894:	00bc7c0e 	bge	zero,r2,3a88 <__alt_data_end+0xfffe4688>
    4898:	01000c04 	movi	r4,48
    489c:	00000106 	br	48a4 <_dtoa_r+0x1580>
    48a0:	102f883a 	mov	r23,r2
    48a4:	b8bfffc4 	addi	r2,r23,-1
    48a8:	10c00007 	ldb	r3,0(r2)
    48ac:	193ffc26 	beq	r3,r4,48a0 <__alt_data_end+0xfffe54a0>
    48b0:	d9801317 	ldw	r6,76(sp)
    48b4:	d9800515 	stw	r6,20(sp)
    48b8:	003c4406 	br	39cc <__alt_data_end+0xfffe45cc>
    48bc:	d9801317 	ldw	r6,76(sp)
    48c0:	d9800515 	stw	r6,20(sp)
    48c4:	003cea06 	br	3c70 <__alt_data_end+0xfffe4870>
    48c8:	dd800f17 	ldw	r22,60(sp)
    48cc:	dcc01017 	ldw	r19,64(sp)
    48d0:	dc801217 	ldw	r18,72(sp)
    48d4:	003c6c06 	br	3a88 <__alt_data_end+0xfffe4688>
    48d8:	903e031e 	bne	r18,zero,40e8 <__alt_data_end+0xfffe4ce8>
    48dc:	003ebb06 	br	43cc <__alt_data_end+0xfffe4fcc>
    48e0:	103e6c1e 	bne	r2,zero,4294 <__alt_data_end+0xfffe4e94>
    48e4:	4080004c 	andi	r2,r8,1
    48e8:	103e6a26 	beq	r2,zero,4294 <__alt_data_end+0xfffe4e94>
    48ec:	003e6606 	br	4288 <__alt_data_end+0xfffe4e88>
    48f0:	d8c00317 	ldw	r3,12(sp)
    48f4:	00800084 	movi	r2,2
    48f8:	10c02916 	blt	r2,r3,49a0 <_dtoa_r+0x167c>
    48fc:	d9000c17 	ldw	r4,48(sp)
    4900:	003e8806 	br	4324 <__alt_data_end+0xfffe4f24>
    4904:	04000084 	movi	r16,2
    4908:	003b9d06 	br	3780 <__alt_data_end+0xfffe4380>
    490c:	d9001317 	ldw	r4,76(sp)
    4910:	d9000515 	stw	r4,20(sp)
    4914:	003cd606 	br	3c70 <__alt_data_end+0xfffe4870>
    4918:	d8801317 	ldw	r2,76(sp)
    491c:	d8800515 	stw	r2,20(sp)
    4920:	003c2a06 	br	39cc <__alt_data_end+0xfffe45cc>
    4924:	d9800317 	ldw	r6,12(sp)
    4928:	00800084 	movi	r2,2
    492c:	11801516 	blt	r2,r6,4984 <_dtoa_r+0x1660>
    4930:	d9c00c17 	ldw	r7,48(sp)
    4934:	d9c00615 	stw	r7,24(sp)
    4938:	003df706 	br	4118 <__alt_data_end+0xfffe4d18>
    493c:	193d3926 	beq	r3,r4,3e24 <__alt_data_end+0xfffe4a24>
    4940:	00c00f04 	movi	r3,60
    4944:	1885c83a 	sub	r2,r3,r2
    4948:	003ddf06 	br	40c8 <__alt_data_end+0xfffe4cc8>
    494c:	e009883a 	mov	r4,fp
    4950:	e0001115 	stw	zero,68(fp)
    4954:	000b883a 	mov	r5,zero
    4958:	00063b80 	call	63b8 <_Balloc>
    495c:	d8800715 	stw	r2,28(sp)
    4960:	d8c00717 	ldw	r3,28(sp)
    4964:	00bfffc4 	movi	r2,-1
    4968:	01000044 	movi	r4,1
    496c:	d8800c15 	stw	r2,48(sp)
    4970:	e0c01015 	stw	r3,64(fp)
    4974:	d9000b15 	stw	r4,44(sp)
    4978:	d8800615 	stw	r2,24(sp)
    497c:	d8002215 	stw	zero,136(sp)
    4980:	003c4106 	br	3a88 <__alt_data_end+0xfffe4688>
    4984:	d8c00c17 	ldw	r3,48(sp)
    4988:	d8c00615 	stw	r3,24(sp)
    498c:	003e7006 	br	4350 <__alt_data_end+0xfffe4f50>
    4990:	04400044 	movi	r17,1
    4994:	003b2006 	br	3618 <__alt_data_end+0xfffe4218>
    4998:	000b883a 	mov	r5,zero
    499c:	003b3d06 	br	3694 <__alt_data_end+0xfffe4294>
    49a0:	d8800c17 	ldw	r2,48(sp)
    49a4:	d8800615 	stw	r2,24(sp)
    49a8:	003e6906 	br	4350 <__alt_data_end+0xfffe4f50>

000049ac <__sflush_r>:
    49ac:	2880030b 	ldhu	r2,12(r5)
    49b0:	defffb04 	addi	sp,sp,-20
    49b4:	dcc00315 	stw	r19,12(sp)
    49b8:	dc400115 	stw	r17,4(sp)
    49bc:	dfc00415 	stw	ra,16(sp)
    49c0:	dc800215 	stw	r18,8(sp)
    49c4:	dc000015 	stw	r16,0(sp)
    49c8:	10c0020c 	andi	r3,r2,8
    49cc:	2823883a 	mov	r17,r5
    49d0:	2027883a 	mov	r19,r4
    49d4:	1800311e 	bne	r3,zero,4a9c <__sflush_r+0xf0>
    49d8:	28c00117 	ldw	r3,4(r5)
    49dc:	10820014 	ori	r2,r2,2048
    49e0:	2880030d 	sth	r2,12(r5)
    49e4:	00c04b0e 	bge	zero,r3,4b14 <__sflush_r+0x168>
    49e8:	8a000a17 	ldw	r8,40(r17)
    49ec:	40002326 	beq	r8,zero,4a7c <__sflush_r+0xd0>
    49f0:	9c000017 	ldw	r16,0(r19)
    49f4:	10c4000c 	andi	r3,r2,4096
    49f8:	98000015 	stw	zero,0(r19)
    49fc:	18004826 	beq	r3,zero,4b20 <__sflush_r+0x174>
    4a00:	89801417 	ldw	r6,80(r17)
    4a04:	10c0010c 	andi	r3,r2,4
    4a08:	18000626 	beq	r3,zero,4a24 <__sflush_r+0x78>
    4a0c:	88c00117 	ldw	r3,4(r17)
    4a10:	88800c17 	ldw	r2,48(r17)
    4a14:	30cdc83a 	sub	r6,r6,r3
    4a18:	10000226 	beq	r2,zero,4a24 <__sflush_r+0x78>
    4a1c:	88800f17 	ldw	r2,60(r17)
    4a20:	308dc83a 	sub	r6,r6,r2
    4a24:	89400717 	ldw	r5,28(r17)
    4a28:	000f883a 	mov	r7,zero
    4a2c:	9809883a 	mov	r4,r19
    4a30:	403ee83a 	callr	r8
    4a34:	00ffffc4 	movi	r3,-1
    4a38:	10c04426 	beq	r2,r3,4b4c <__sflush_r+0x1a0>
    4a3c:	88c0030b 	ldhu	r3,12(r17)
    4a40:	89000417 	ldw	r4,16(r17)
    4a44:	88000115 	stw	zero,4(r17)
    4a48:	197dffcc 	andi	r5,r3,63487
    4a4c:	8940030d 	sth	r5,12(r17)
    4a50:	89000015 	stw	r4,0(r17)
    4a54:	18c4000c 	andi	r3,r3,4096
    4a58:	18002c1e 	bne	r3,zero,4b0c <__sflush_r+0x160>
    4a5c:	89400c17 	ldw	r5,48(r17)
    4a60:	9c000015 	stw	r16,0(r19)
    4a64:	28000526 	beq	r5,zero,4a7c <__sflush_r+0xd0>
    4a68:	88801004 	addi	r2,r17,64
    4a6c:	28800226 	beq	r5,r2,4a78 <__sflush_r+0xcc>
    4a70:	9809883a 	mov	r4,r19
    4a74:	00051280 	call	5128 <_free_r>
    4a78:	88000c15 	stw	zero,48(r17)
    4a7c:	0005883a 	mov	r2,zero
    4a80:	dfc00417 	ldw	ra,16(sp)
    4a84:	dcc00317 	ldw	r19,12(sp)
    4a88:	dc800217 	ldw	r18,8(sp)
    4a8c:	dc400117 	ldw	r17,4(sp)
    4a90:	dc000017 	ldw	r16,0(sp)
    4a94:	dec00504 	addi	sp,sp,20
    4a98:	f800283a 	ret
    4a9c:	2c800417 	ldw	r18,16(r5)
    4aa0:	903ff626 	beq	r18,zero,4a7c <__alt_data_end+0xfffe567c>
    4aa4:	2c000017 	ldw	r16,0(r5)
    4aa8:	108000cc 	andi	r2,r2,3
    4aac:	2c800015 	stw	r18,0(r5)
    4ab0:	84a1c83a 	sub	r16,r16,r18
    4ab4:	1000131e 	bne	r2,zero,4b04 <__sflush_r+0x158>
    4ab8:	28800517 	ldw	r2,20(r5)
    4abc:	88800215 	stw	r2,8(r17)
    4ac0:	04000316 	blt	zero,r16,4ad0 <__sflush_r+0x124>
    4ac4:	003fed06 	br	4a7c <__alt_data_end+0xfffe567c>
    4ac8:	90a5883a 	add	r18,r18,r2
    4acc:	043feb0e 	bge	zero,r16,4a7c <__alt_data_end+0xfffe567c>
    4ad0:	88800917 	ldw	r2,36(r17)
    4ad4:	89400717 	ldw	r5,28(r17)
    4ad8:	800f883a 	mov	r7,r16
    4adc:	900d883a 	mov	r6,r18
    4ae0:	9809883a 	mov	r4,r19
    4ae4:	103ee83a 	callr	r2
    4ae8:	80a1c83a 	sub	r16,r16,r2
    4aec:	00bff616 	blt	zero,r2,4ac8 <__alt_data_end+0xfffe56c8>
    4af0:	88c0030b 	ldhu	r3,12(r17)
    4af4:	00bfffc4 	movi	r2,-1
    4af8:	18c01014 	ori	r3,r3,64
    4afc:	88c0030d 	sth	r3,12(r17)
    4b00:	003fdf06 	br	4a80 <__alt_data_end+0xfffe5680>
    4b04:	0005883a 	mov	r2,zero
    4b08:	003fec06 	br	4abc <__alt_data_end+0xfffe56bc>
    4b0c:	88801415 	stw	r2,80(r17)
    4b10:	003fd206 	br	4a5c <__alt_data_end+0xfffe565c>
    4b14:	28c00f17 	ldw	r3,60(r5)
    4b18:	00ffb316 	blt	zero,r3,49e8 <__alt_data_end+0xfffe55e8>
    4b1c:	003fd706 	br	4a7c <__alt_data_end+0xfffe567c>
    4b20:	89400717 	ldw	r5,28(r17)
    4b24:	000d883a 	mov	r6,zero
    4b28:	01c00044 	movi	r7,1
    4b2c:	9809883a 	mov	r4,r19
    4b30:	403ee83a 	callr	r8
    4b34:	100d883a 	mov	r6,r2
    4b38:	00bfffc4 	movi	r2,-1
    4b3c:	30801426 	beq	r6,r2,4b90 <__sflush_r+0x1e4>
    4b40:	8880030b 	ldhu	r2,12(r17)
    4b44:	8a000a17 	ldw	r8,40(r17)
    4b48:	003fae06 	br	4a04 <__alt_data_end+0xfffe5604>
    4b4c:	98c00017 	ldw	r3,0(r19)
    4b50:	183fba26 	beq	r3,zero,4a3c <__alt_data_end+0xfffe563c>
    4b54:	01000744 	movi	r4,29
    4b58:	19000626 	beq	r3,r4,4b74 <__sflush_r+0x1c8>
    4b5c:	01000584 	movi	r4,22
    4b60:	19000426 	beq	r3,r4,4b74 <__sflush_r+0x1c8>
    4b64:	88c0030b 	ldhu	r3,12(r17)
    4b68:	18c01014 	ori	r3,r3,64
    4b6c:	88c0030d 	sth	r3,12(r17)
    4b70:	003fc306 	br	4a80 <__alt_data_end+0xfffe5680>
    4b74:	8880030b 	ldhu	r2,12(r17)
    4b78:	88c00417 	ldw	r3,16(r17)
    4b7c:	88000115 	stw	zero,4(r17)
    4b80:	10bdffcc 	andi	r2,r2,63487
    4b84:	8880030d 	sth	r2,12(r17)
    4b88:	88c00015 	stw	r3,0(r17)
    4b8c:	003fb306 	br	4a5c <__alt_data_end+0xfffe565c>
    4b90:	98800017 	ldw	r2,0(r19)
    4b94:	103fea26 	beq	r2,zero,4b40 <__alt_data_end+0xfffe5740>
    4b98:	00c00744 	movi	r3,29
    4b9c:	10c00226 	beq	r2,r3,4ba8 <__sflush_r+0x1fc>
    4ba0:	00c00584 	movi	r3,22
    4ba4:	10c0031e 	bne	r2,r3,4bb4 <__sflush_r+0x208>
    4ba8:	9c000015 	stw	r16,0(r19)
    4bac:	0005883a 	mov	r2,zero
    4bb0:	003fb306 	br	4a80 <__alt_data_end+0xfffe5680>
    4bb4:	88c0030b 	ldhu	r3,12(r17)
    4bb8:	3005883a 	mov	r2,r6
    4bbc:	18c01014 	ori	r3,r3,64
    4bc0:	88c0030d 	sth	r3,12(r17)
    4bc4:	003fae06 	br	4a80 <__alt_data_end+0xfffe5680>

00004bc8 <_fflush_r>:
    4bc8:	defffd04 	addi	sp,sp,-12
    4bcc:	dc000115 	stw	r16,4(sp)
    4bd0:	dfc00215 	stw	ra,8(sp)
    4bd4:	2021883a 	mov	r16,r4
    4bd8:	20000226 	beq	r4,zero,4be4 <_fflush_r+0x1c>
    4bdc:	20800e17 	ldw	r2,56(r4)
    4be0:	10000c26 	beq	r2,zero,4c14 <_fflush_r+0x4c>
    4be4:	2880030f 	ldh	r2,12(r5)
    4be8:	1000051e 	bne	r2,zero,4c00 <_fflush_r+0x38>
    4bec:	0005883a 	mov	r2,zero
    4bf0:	dfc00217 	ldw	ra,8(sp)
    4bf4:	dc000117 	ldw	r16,4(sp)
    4bf8:	dec00304 	addi	sp,sp,12
    4bfc:	f800283a 	ret
    4c00:	8009883a 	mov	r4,r16
    4c04:	dfc00217 	ldw	ra,8(sp)
    4c08:	dc000117 	ldw	r16,4(sp)
    4c0c:	dec00304 	addi	sp,sp,12
    4c10:	00049ac1 	jmpi	49ac <__sflush_r>
    4c14:	d9400015 	stw	r5,0(sp)
    4c18:	0004fb40 	call	4fb4 <__sinit>
    4c1c:	d9400017 	ldw	r5,0(sp)
    4c20:	003ff006 	br	4be4 <__alt_data_end+0xfffe57e4>

00004c24 <fflush>:
    4c24:	20000526 	beq	r4,zero,4c3c <fflush+0x18>
    4c28:	00800074 	movhi	r2,1
    4c2c:	10878d04 	addi	r2,r2,7732
    4c30:	200b883a 	mov	r5,r4
    4c34:	11000017 	ldw	r4,0(r2)
    4c38:	0004bc81 	jmpi	4bc8 <_fflush_r>
    4c3c:	00800074 	movhi	r2,1
    4c40:	10878c04 	addi	r2,r2,7728
    4c44:	11000017 	ldw	r4,0(r2)
    4c48:	01400034 	movhi	r5,0
    4c4c:	2952f204 	addi	r5,r5,19400
    4c50:	00054fc1 	jmpi	54fc <_fwalk_reent>

00004c54 <__fp_unlock>:
    4c54:	0005883a 	mov	r2,zero
    4c58:	f800283a 	ret

00004c5c <_cleanup_r>:
    4c5c:	01400074 	movhi	r5,1
    4c60:	2963e504 	addi	r5,r5,-28780
    4c64:	00054fc1 	jmpi	54fc <_fwalk_reent>

00004c68 <__sinit.part.1>:
    4c68:	defff704 	addi	sp,sp,-36
    4c6c:	00c00034 	movhi	r3,0
    4c70:	dfc00815 	stw	ra,32(sp)
    4c74:	ddc00715 	stw	r23,28(sp)
    4c78:	dd800615 	stw	r22,24(sp)
    4c7c:	dd400515 	stw	r21,20(sp)
    4c80:	dd000415 	stw	r20,16(sp)
    4c84:	dcc00315 	stw	r19,12(sp)
    4c88:	dc800215 	stw	r18,8(sp)
    4c8c:	dc400115 	stw	r17,4(sp)
    4c90:	dc000015 	stw	r16,0(sp)
    4c94:	18d31704 	addi	r3,r3,19548
    4c98:	24000117 	ldw	r16,4(r4)
    4c9c:	20c00f15 	stw	r3,60(r4)
    4ca0:	2080bb04 	addi	r2,r4,748
    4ca4:	00c000c4 	movi	r3,3
    4ca8:	20c0b915 	stw	r3,740(r4)
    4cac:	2080ba15 	stw	r2,744(r4)
    4cb0:	2000b815 	stw	zero,736(r4)
    4cb4:	05c00204 	movi	r23,8
    4cb8:	00800104 	movi	r2,4
    4cbc:	2025883a 	mov	r18,r4
    4cc0:	b80d883a 	mov	r6,r23
    4cc4:	81001704 	addi	r4,r16,92
    4cc8:	000b883a 	mov	r5,zero
    4ccc:	80000015 	stw	zero,0(r16)
    4cd0:	80000115 	stw	zero,4(r16)
    4cd4:	80000215 	stw	zero,8(r16)
    4cd8:	8080030d 	sth	r2,12(r16)
    4cdc:	80001915 	stw	zero,100(r16)
    4ce0:	8000038d 	sth	zero,14(r16)
    4ce4:	80000415 	stw	zero,16(r16)
    4ce8:	80000515 	stw	zero,20(r16)
    4cec:	80000615 	stw	zero,24(r16)
    4cf0:	00062900 	call	6290 <memset>
    4cf4:	05800034 	movhi	r22,0
    4cf8:	94400217 	ldw	r17,8(r18)
    4cfc:	05400034 	movhi	r21,0
    4d00:	05000034 	movhi	r20,0
    4d04:	04c00034 	movhi	r19,0
    4d08:	b59d4e04 	addi	r22,r22,30008
    4d0c:	ad5d6504 	addi	r21,r21,30100
    4d10:	a51d8404 	addi	r20,r20,30224
    4d14:	9cdd9b04 	addi	r19,r19,30316
    4d18:	85800815 	stw	r22,32(r16)
    4d1c:	85400915 	stw	r21,36(r16)
    4d20:	85000a15 	stw	r20,40(r16)
    4d24:	84c00b15 	stw	r19,44(r16)
    4d28:	84000715 	stw	r16,28(r16)
    4d2c:	00800284 	movi	r2,10
    4d30:	8880030d 	sth	r2,12(r17)
    4d34:	00800044 	movi	r2,1
    4d38:	b80d883a 	mov	r6,r23
    4d3c:	89001704 	addi	r4,r17,92
    4d40:	000b883a 	mov	r5,zero
    4d44:	88000015 	stw	zero,0(r17)
    4d48:	88000115 	stw	zero,4(r17)
    4d4c:	88000215 	stw	zero,8(r17)
    4d50:	88001915 	stw	zero,100(r17)
    4d54:	8880038d 	sth	r2,14(r17)
    4d58:	88000415 	stw	zero,16(r17)
    4d5c:	88000515 	stw	zero,20(r17)
    4d60:	88000615 	stw	zero,24(r17)
    4d64:	00062900 	call	6290 <memset>
    4d68:	94000317 	ldw	r16,12(r18)
    4d6c:	00800484 	movi	r2,18
    4d70:	8c400715 	stw	r17,28(r17)
    4d74:	8d800815 	stw	r22,32(r17)
    4d78:	8d400915 	stw	r21,36(r17)
    4d7c:	8d000a15 	stw	r20,40(r17)
    4d80:	8cc00b15 	stw	r19,44(r17)
    4d84:	8080030d 	sth	r2,12(r16)
    4d88:	00800084 	movi	r2,2
    4d8c:	80000015 	stw	zero,0(r16)
    4d90:	80000115 	stw	zero,4(r16)
    4d94:	80000215 	stw	zero,8(r16)
    4d98:	80001915 	stw	zero,100(r16)
    4d9c:	8080038d 	sth	r2,14(r16)
    4da0:	80000415 	stw	zero,16(r16)
    4da4:	80000515 	stw	zero,20(r16)
    4da8:	80000615 	stw	zero,24(r16)
    4dac:	b80d883a 	mov	r6,r23
    4db0:	000b883a 	mov	r5,zero
    4db4:	81001704 	addi	r4,r16,92
    4db8:	00062900 	call	6290 <memset>
    4dbc:	00800044 	movi	r2,1
    4dc0:	84000715 	stw	r16,28(r16)
    4dc4:	85800815 	stw	r22,32(r16)
    4dc8:	85400915 	stw	r21,36(r16)
    4dcc:	85000a15 	stw	r20,40(r16)
    4dd0:	84c00b15 	stw	r19,44(r16)
    4dd4:	90800e15 	stw	r2,56(r18)
    4dd8:	dfc00817 	ldw	ra,32(sp)
    4ddc:	ddc00717 	ldw	r23,28(sp)
    4de0:	dd800617 	ldw	r22,24(sp)
    4de4:	dd400517 	ldw	r21,20(sp)
    4de8:	dd000417 	ldw	r20,16(sp)
    4dec:	dcc00317 	ldw	r19,12(sp)
    4df0:	dc800217 	ldw	r18,8(sp)
    4df4:	dc400117 	ldw	r17,4(sp)
    4df8:	dc000017 	ldw	r16,0(sp)
    4dfc:	dec00904 	addi	sp,sp,36
    4e00:	f800283a 	ret

00004e04 <__fp_lock>:
    4e04:	0005883a 	mov	r2,zero
    4e08:	f800283a 	ret

00004e0c <__sfmoreglue>:
    4e0c:	defffc04 	addi	sp,sp,-16
    4e10:	dc800215 	stw	r18,8(sp)
    4e14:	2825883a 	mov	r18,r5
    4e18:	dc000015 	stw	r16,0(sp)
    4e1c:	01401a04 	movi	r5,104
    4e20:	2021883a 	mov	r16,r4
    4e24:	913fffc4 	addi	r4,r18,-1
    4e28:	dfc00315 	stw	ra,12(sp)
    4e2c:	dc400115 	stw	r17,4(sp)
    4e30:	000b04c0 	call	b04c <__mulsi3>
    4e34:	8009883a 	mov	r4,r16
    4e38:	11401d04 	addi	r5,r2,116
    4e3c:	1023883a 	mov	r17,r2
    4e40:	00058580 	call	5858 <_malloc_r>
    4e44:	1021883a 	mov	r16,r2
    4e48:	10000726 	beq	r2,zero,4e68 <__sfmoreglue+0x5c>
    4e4c:	11000304 	addi	r4,r2,12
    4e50:	10000015 	stw	zero,0(r2)
    4e54:	14800115 	stw	r18,4(r2)
    4e58:	11000215 	stw	r4,8(r2)
    4e5c:	89801a04 	addi	r6,r17,104
    4e60:	000b883a 	mov	r5,zero
    4e64:	00062900 	call	6290 <memset>
    4e68:	8005883a 	mov	r2,r16
    4e6c:	dfc00317 	ldw	ra,12(sp)
    4e70:	dc800217 	ldw	r18,8(sp)
    4e74:	dc400117 	ldw	r17,4(sp)
    4e78:	dc000017 	ldw	r16,0(sp)
    4e7c:	dec00404 	addi	sp,sp,16
    4e80:	f800283a 	ret

00004e84 <__sfp>:
    4e84:	defffb04 	addi	sp,sp,-20
    4e88:	dc000015 	stw	r16,0(sp)
    4e8c:	04000074 	movhi	r16,1
    4e90:	84078c04 	addi	r16,r16,7728
    4e94:	dcc00315 	stw	r19,12(sp)
    4e98:	2027883a 	mov	r19,r4
    4e9c:	81000017 	ldw	r4,0(r16)
    4ea0:	dfc00415 	stw	ra,16(sp)
    4ea4:	dc800215 	stw	r18,8(sp)
    4ea8:	20800e17 	ldw	r2,56(r4)
    4eac:	dc400115 	stw	r17,4(sp)
    4eb0:	1000021e 	bne	r2,zero,4ebc <__sfp+0x38>
    4eb4:	0004c680 	call	4c68 <__sinit.part.1>
    4eb8:	81000017 	ldw	r4,0(r16)
    4ebc:	2480b804 	addi	r18,r4,736
    4ec0:	047fffc4 	movi	r17,-1
    4ec4:	91000117 	ldw	r4,4(r18)
    4ec8:	94000217 	ldw	r16,8(r18)
    4ecc:	213fffc4 	addi	r4,r4,-1
    4ed0:	20000a16 	blt	r4,zero,4efc <__sfp+0x78>
    4ed4:	8080030f 	ldh	r2,12(r16)
    4ed8:	10000c26 	beq	r2,zero,4f0c <__sfp+0x88>
    4edc:	80c01d04 	addi	r3,r16,116
    4ee0:	00000206 	br	4eec <__sfp+0x68>
    4ee4:	18bfe60f 	ldh	r2,-104(r3)
    4ee8:	10000826 	beq	r2,zero,4f0c <__sfp+0x88>
    4eec:	213fffc4 	addi	r4,r4,-1
    4ef0:	1c3ffd04 	addi	r16,r3,-12
    4ef4:	18c01a04 	addi	r3,r3,104
    4ef8:	247ffa1e 	bne	r4,r17,4ee4 <__alt_data_end+0xfffe5ae4>
    4efc:	90800017 	ldw	r2,0(r18)
    4f00:	10001d26 	beq	r2,zero,4f78 <__sfp+0xf4>
    4f04:	1025883a 	mov	r18,r2
    4f08:	003fee06 	br	4ec4 <__alt_data_end+0xfffe5ac4>
    4f0c:	00bfffc4 	movi	r2,-1
    4f10:	8080038d 	sth	r2,14(r16)
    4f14:	00800044 	movi	r2,1
    4f18:	8080030d 	sth	r2,12(r16)
    4f1c:	80001915 	stw	zero,100(r16)
    4f20:	80000015 	stw	zero,0(r16)
    4f24:	80000215 	stw	zero,8(r16)
    4f28:	80000115 	stw	zero,4(r16)
    4f2c:	80000415 	stw	zero,16(r16)
    4f30:	80000515 	stw	zero,20(r16)
    4f34:	80000615 	stw	zero,24(r16)
    4f38:	01800204 	movi	r6,8
    4f3c:	000b883a 	mov	r5,zero
    4f40:	81001704 	addi	r4,r16,92
    4f44:	00062900 	call	6290 <memset>
    4f48:	8005883a 	mov	r2,r16
    4f4c:	80000c15 	stw	zero,48(r16)
    4f50:	80000d15 	stw	zero,52(r16)
    4f54:	80001115 	stw	zero,68(r16)
    4f58:	80001215 	stw	zero,72(r16)
    4f5c:	dfc00417 	ldw	ra,16(sp)
    4f60:	dcc00317 	ldw	r19,12(sp)
    4f64:	dc800217 	ldw	r18,8(sp)
    4f68:	dc400117 	ldw	r17,4(sp)
    4f6c:	dc000017 	ldw	r16,0(sp)
    4f70:	dec00504 	addi	sp,sp,20
    4f74:	f800283a 	ret
    4f78:	01400104 	movi	r5,4
    4f7c:	9809883a 	mov	r4,r19
    4f80:	0004e0c0 	call	4e0c <__sfmoreglue>
    4f84:	90800015 	stw	r2,0(r18)
    4f88:	103fde1e 	bne	r2,zero,4f04 <__alt_data_end+0xfffe5b04>
    4f8c:	00800304 	movi	r2,12
    4f90:	98800015 	stw	r2,0(r19)
    4f94:	0005883a 	mov	r2,zero
    4f98:	003ff006 	br	4f5c <__alt_data_end+0xfffe5b5c>

00004f9c <_cleanup>:
    4f9c:	00800074 	movhi	r2,1
    4fa0:	10878c04 	addi	r2,r2,7728
    4fa4:	11000017 	ldw	r4,0(r2)
    4fa8:	01400074 	movhi	r5,1
    4fac:	2963e504 	addi	r5,r5,-28780
    4fb0:	00054fc1 	jmpi	54fc <_fwalk_reent>

00004fb4 <__sinit>:
    4fb4:	20800e17 	ldw	r2,56(r4)
    4fb8:	10000126 	beq	r2,zero,4fc0 <__sinit+0xc>
    4fbc:	f800283a 	ret
    4fc0:	0004c681 	jmpi	4c68 <__sinit.part.1>

00004fc4 <__sfp_lock_acquire>:
    4fc4:	f800283a 	ret

00004fc8 <__sfp_lock_release>:
    4fc8:	f800283a 	ret

00004fcc <__sinit_lock_acquire>:
    4fcc:	f800283a 	ret

00004fd0 <__sinit_lock_release>:
    4fd0:	f800283a 	ret

00004fd4 <__fp_lock_all>:
    4fd4:	00800074 	movhi	r2,1
    4fd8:	10878d04 	addi	r2,r2,7732
    4fdc:	11000017 	ldw	r4,0(r2)
    4fe0:	01400034 	movhi	r5,0
    4fe4:	29538104 	addi	r5,r5,19972
    4fe8:	00054381 	jmpi	5438 <_fwalk>

00004fec <__fp_unlock_all>:
    4fec:	00800074 	movhi	r2,1
    4ff0:	10878d04 	addi	r2,r2,7732
    4ff4:	11000017 	ldw	r4,0(r2)
    4ff8:	01400034 	movhi	r5,0
    4ffc:	29531504 	addi	r5,r5,19540
    5000:	00054381 	jmpi	5438 <_fwalk>

00005004 <_malloc_trim_r>:
    5004:	defffb04 	addi	sp,sp,-20
    5008:	dcc00315 	stw	r19,12(sp)
    500c:	04c00074 	movhi	r19,1
    5010:	dc800215 	stw	r18,8(sp)
    5014:	dc400115 	stw	r17,4(sp)
    5018:	dc000015 	stw	r16,0(sp)
    501c:	dfc00415 	stw	ra,16(sp)
    5020:	2821883a 	mov	r16,r5
    5024:	9cc20804 	addi	r19,r19,2080
    5028:	2025883a 	mov	r18,r4
    502c:	000e1540 	call	e154 <__malloc_lock>
    5030:	98800217 	ldw	r2,8(r19)
    5034:	14400117 	ldw	r17,4(r2)
    5038:	00bfff04 	movi	r2,-4
    503c:	88a2703a 	and	r17,r17,r2
    5040:	8c21c83a 	sub	r16,r17,r16
    5044:	8403fbc4 	addi	r16,r16,4079
    5048:	8020d33a 	srli	r16,r16,12
    504c:	0083ffc4 	movi	r2,4095
    5050:	843fffc4 	addi	r16,r16,-1
    5054:	8020933a 	slli	r16,r16,12
    5058:	1400060e 	bge	r2,r16,5074 <_malloc_trim_r+0x70>
    505c:	000b883a 	mov	r5,zero
    5060:	9009883a 	mov	r4,r18
    5064:	00074e40 	call	74e4 <_sbrk_r>
    5068:	98c00217 	ldw	r3,8(r19)
    506c:	1c47883a 	add	r3,r3,r17
    5070:	10c00a26 	beq	r2,r3,509c <_malloc_trim_r+0x98>
    5074:	9009883a 	mov	r4,r18
    5078:	000e1780 	call	e178 <__malloc_unlock>
    507c:	0005883a 	mov	r2,zero
    5080:	dfc00417 	ldw	ra,16(sp)
    5084:	dcc00317 	ldw	r19,12(sp)
    5088:	dc800217 	ldw	r18,8(sp)
    508c:	dc400117 	ldw	r17,4(sp)
    5090:	dc000017 	ldw	r16,0(sp)
    5094:	dec00504 	addi	sp,sp,20
    5098:	f800283a 	ret
    509c:	040bc83a 	sub	r5,zero,r16
    50a0:	9009883a 	mov	r4,r18
    50a4:	00074e40 	call	74e4 <_sbrk_r>
    50a8:	00ffffc4 	movi	r3,-1
    50ac:	10c00d26 	beq	r2,r3,50e4 <_malloc_trim_r+0xe0>
    50b0:	00c00074 	movhi	r3,1
    50b4:	18ce6c04 	addi	r3,r3,14768
    50b8:	18800017 	ldw	r2,0(r3)
    50bc:	99000217 	ldw	r4,8(r19)
    50c0:	8c23c83a 	sub	r17,r17,r16
    50c4:	8c400054 	ori	r17,r17,1
    50c8:	1421c83a 	sub	r16,r2,r16
    50cc:	24400115 	stw	r17,4(r4)
    50d0:	9009883a 	mov	r4,r18
    50d4:	1c000015 	stw	r16,0(r3)
    50d8:	000e1780 	call	e178 <__malloc_unlock>
    50dc:	00800044 	movi	r2,1
    50e0:	003fe706 	br	5080 <__alt_data_end+0xfffe5c80>
    50e4:	000b883a 	mov	r5,zero
    50e8:	9009883a 	mov	r4,r18
    50ec:	00074e40 	call	74e4 <_sbrk_r>
    50f0:	99000217 	ldw	r4,8(r19)
    50f4:	014003c4 	movi	r5,15
    50f8:	1107c83a 	sub	r3,r2,r4
    50fc:	28ffdd0e 	bge	r5,r3,5074 <__alt_data_end+0xfffe5c74>
    5100:	01400074 	movhi	r5,1
    5104:	29478f04 	addi	r5,r5,7740
    5108:	29400017 	ldw	r5,0(r5)
    510c:	18c00054 	ori	r3,r3,1
    5110:	20c00115 	stw	r3,4(r4)
    5114:	00c00074 	movhi	r3,1
    5118:	1145c83a 	sub	r2,r2,r5
    511c:	18ce6c04 	addi	r3,r3,14768
    5120:	18800015 	stw	r2,0(r3)
    5124:	003fd306 	br	5074 <__alt_data_end+0xfffe5c74>

00005128 <_free_r>:
    5128:	28004126 	beq	r5,zero,5230 <_free_r+0x108>
    512c:	defffd04 	addi	sp,sp,-12
    5130:	dc400115 	stw	r17,4(sp)
    5134:	dc000015 	stw	r16,0(sp)
    5138:	2023883a 	mov	r17,r4
    513c:	2821883a 	mov	r16,r5
    5140:	dfc00215 	stw	ra,8(sp)
    5144:	000e1540 	call	e154 <__malloc_lock>
    5148:	81ffff17 	ldw	r7,-4(r16)
    514c:	00bfff84 	movi	r2,-2
    5150:	01000074 	movhi	r4,1
    5154:	81bffe04 	addi	r6,r16,-8
    5158:	3884703a 	and	r2,r7,r2
    515c:	21020804 	addi	r4,r4,2080
    5160:	308b883a 	add	r5,r6,r2
    5164:	2a400117 	ldw	r9,4(r5)
    5168:	22000217 	ldw	r8,8(r4)
    516c:	00ffff04 	movi	r3,-4
    5170:	48c6703a 	and	r3,r9,r3
    5174:	2a005726 	beq	r5,r8,52d4 <_free_r+0x1ac>
    5178:	28c00115 	stw	r3,4(r5)
    517c:	39c0004c 	andi	r7,r7,1
    5180:	3800091e 	bne	r7,zero,51a8 <_free_r+0x80>
    5184:	823ffe17 	ldw	r8,-8(r16)
    5188:	22400204 	addi	r9,r4,8
    518c:	320dc83a 	sub	r6,r6,r8
    5190:	31c00217 	ldw	r7,8(r6)
    5194:	1205883a 	add	r2,r2,r8
    5198:	3a406526 	beq	r7,r9,5330 <_free_r+0x208>
    519c:	32000317 	ldw	r8,12(r6)
    51a0:	3a000315 	stw	r8,12(r7)
    51a4:	41c00215 	stw	r7,8(r8)
    51a8:	28cf883a 	add	r7,r5,r3
    51ac:	39c00117 	ldw	r7,4(r7)
    51b0:	39c0004c 	andi	r7,r7,1
    51b4:	38003a26 	beq	r7,zero,52a0 <_free_r+0x178>
    51b8:	10c00054 	ori	r3,r2,1
    51bc:	30c00115 	stw	r3,4(r6)
    51c0:	3087883a 	add	r3,r6,r2
    51c4:	18800015 	stw	r2,0(r3)
    51c8:	00c07fc4 	movi	r3,511
    51cc:	18801936 	bltu	r3,r2,5234 <_free_r+0x10c>
    51d0:	1004d0fa 	srli	r2,r2,3
    51d4:	01c00044 	movi	r7,1
    51d8:	21400117 	ldw	r5,4(r4)
    51dc:	10c00044 	addi	r3,r2,1
    51e0:	18c7883a 	add	r3,r3,r3
    51e4:	1005d0ba 	srai	r2,r2,2
    51e8:	18c7883a 	add	r3,r3,r3
    51ec:	18c7883a 	add	r3,r3,r3
    51f0:	1907883a 	add	r3,r3,r4
    51f4:	3884983a 	sll	r2,r7,r2
    51f8:	19c00017 	ldw	r7,0(r3)
    51fc:	1a3ffe04 	addi	r8,r3,-8
    5200:	1144b03a 	or	r2,r2,r5
    5204:	32000315 	stw	r8,12(r6)
    5208:	31c00215 	stw	r7,8(r6)
    520c:	20800115 	stw	r2,4(r4)
    5210:	19800015 	stw	r6,0(r3)
    5214:	39800315 	stw	r6,12(r7)
    5218:	8809883a 	mov	r4,r17
    521c:	dfc00217 	ldw	ra,8(sp)
    5220:	dc400117 	ldw	r17,4(sp)
    5224:	dc000017 	ldw	r16,0(sp)
    5228:	dec00304 	addi	sp,sp,12
    522c:	000e1781 	jmpi	e178 <__malloc_unlock>
    5230:	f800283a 	ret
    5234:	100ad27a 	srli	r5,r2,9
    5238:	00c00104 	movi	r3,4
    523c:	19404a36 	bltu	r3,r5,5368 <_free_r+0x240>
    5240:	100ad1ba 	srli	r5,r2,6
    5244:	28c00e44 	addi	r3,r5,57
    5248:	18c7883a 	add	r3,r3,r3
    524c:	29400e04 	addi	r5,r5,56
    5250:	18c7883a 	add	r3,r3,r3
    5254:	18c7883a 	add	r3,r3,r3
    5258:	1909883a 	add	r4,r3,r4
    525c:	20c00017 	ldw	r3,0(r4)
    5260:	01c00074 	movhi	r7,1
    5264:	213ffe04 	addi	r4,r4,-8
    5268:	39c20804 	addi	r7,r7,2080
    526c:	20c04426 	beq	r4,r3,5380 <_free_r+0x258>
    5270:	01ffff04 	movi	r7,-4
    5274:	19400117 	ldw	r5,4(r3)
    5278:	29ca703a 	and	r5,r5,r7
    527c:	1140022e 	bgeu	r2,r5,5288 <_free_r+0x160>
    5280:	18c00217 	ldw	r3,8(r3)
    5284:	20fffb1e 	bne	r4,r3,5274 <__alt_data_end+0xfffe5e74>
    5288:	19000317 	ldw	r4,12(r3)
    528c:	31000315 	stw	r4,12(r6)
    5290:	30c00215 	stw	r3,8(r6)
    5294:	21800215 	stw	r6,8(r4)
    5298:	19800315 	stw	r6,12(r3)
    529c:	003fde06 	br	5218 <__alt_data_end+0xfffe5e18>
    52a0:	29c00217 	ldw	r7,8(r5)
    52a4:	10c5883a 	add	r2,r2,r3
    52a8:	00c00074 	movhi	r3,1
    52ac:	18c20a04 	addi	r3,r3,2088
    52b0:	38c03b26 	beq	r7,r3,53a0 <_free_r+0x278>
    52b4:	2a000317 	ldw	r8,12(r5)
    52b8:	11400054 	ori	r5,r2,1
    52bc:	3087883a 	add	r3,r6,r2
    52c0:	3a000315 	stw	r8,12(r7)
    52c4:	41c00215 	stw	r7,8(r8)
    52c8:	31400115 	stw	r5,4(r6)
    52cc:	18800015 	stw	r2,0(r3)
    52d0:	003fbd06 	br	51c8 <__alt_data_end+0xfffe5dc8>
    52d4:	39c0004c 	andi	r7,r7,1
    52d8:	10c5883a 	add	r2,r2,r3
    52dc:	3800071e 	bne	r7,zero,52fc <_free_r+0x1d4>
    52e0:	81fffe17 	ldw	r7,-8(r16)
    52e4:	31cdc83a 	sub	r6,r6,r7
    52e8:	30c00317 	ldw	r3,12(r6)
    52ec:	31400217 	ldw	r5,8(r6)
    52f0:	11c5883a 	add	r2,r2,r7
    52f4:	28c00315 	stw	r3,12(r5)
    52f8:	19400215 	stw	r5,8(r3)
    52fc:	10c00054 	ori	r3,r2,1
    5300:	30c00115 	stw	r3,4(r6)
    5304:	00c00074 	movhi	r3,1
    5308:	18c79004 	addi	r3,r3,7744
    530c:	18c00017 	ldw	r3,0(r3)
    5310:	21800215 	stw	r6,8(r4)
    5314:	10ffc036 	bltu	r2,r3,5218 <__alt_data_end+0xfffe5e18>
    5318:	00800074 	movhi	r2,1
    531c:	108e6404 	addi	r2,r2,14736
    5320:	11400017 	ldw	r5,0(r2)
    5324:	8809883a 	mov	r4,r17
    5328:	00050040 	call	5004 <_malloc_trim_r>
    532c:	003fba06 	br	5218 <__alt_data_end+0xfffe5e18>
    5330:	28c9883a 	add	r4,r5,r3
    5334:	21000117 	ldw	r4,4(r4)
    5338:	2100004c 	andi	r4,r4,1
    533c:	2000391e 	bne	r4,zero,5424 <_free_r+0x2fc>
    5340:	29c00217 	ldw	r7,8(r5)
    5344:	29000317 	ldw	r4,12(r5)
    5348:	1885883a 	add	r2,r3,r2
    534c:	10c00054 	ori	r3,r2,1
    5350:	39000315 	stw	r4,12(r7)
    5354:	21c00215 	stw	r7,8(r4)
    5358:	30c00115 	stw	r3,4(r6)
    535c:	308d883a 	add	r6,r6,r2
    5360:	30800015 	stw	r2,0(r6)
    5364:	003fac06 	br	5218 <__alt_data_end+0xfffe5e18>
    5368:	00c00504 	movi	r3,20
    536c:	19401536 	bltu	r3,r5,53c4 <_free_r+0x29c>
    5370:	28c01704 	addi	r3,r5,92
    5374:	18c7883a 	add	r3,r3,r3
    5378:	294016c4 	addi	r5,r5,91
    537c:	003fb406 	br	5250 <__alt_data_end+0xfffe5e50>
    5380:	280bd0ba 	srai	r5,r5,2
    5384:	00c00044 	movi	r3,1
    5388:	38800117 	ldw	r2,4(r7)
    538c:	194a983a 	sll	r5,r3,r5
    5390:	2007883a 	mov	r3,r4
    5394:	2884b03a 	or	r2,r5,r2
    5398:	38800115 	stw	r2,4(r7)
    539c:	003fbb06 	br	528c <__alt_data_end+0xfffe5e8c>
    53a0:	21800515 	stw	r6,20(r4)
    53a4:	21800415 	stw	r6,16(r4)
    53a8:	10c00054 	ori	r3,r2,1
    53ac:	31c00315 	stw	r7,12(r6)
    53b0:	31c00215 	stw	r7,8(r6)
    53b4:	30c00115 	stw	r3,4(r6)
    53b8:	308d883a 	add	r6,r6,r2
    53bc:	30800015 	stw	r2,0(r6)
    53c0:	003f9506 	br	5218 <__alt_data_end+0xfffe5e18>
    53c4:	00c01504 	movi	r3,84
    53c8:	19400536 	bltu	r3,r5,53e0 <_free_r+0x2b8>
    53cc:	100ad33a 	srli	r5,r2,12
    53d0:	28c01bc4 	addi	r3,r5,111
    53d4:	18c7883a 	add	r3,r3,r3
    53d8:	29401b84 	addi	r5,r5,110
    53dc:	003f9c06 	br	5250 <__alt_data_end+0xfffe5e50>
    53e0:	00c05504 	movi	r3,340
    53e4:	19400536 	bltu	r3,r5,53fc <_free_r+0x2d4>
    53e8:	100ad3fa 	srli	r5,r2,15
    53ec:	28c01e04 	addi	r3,r5,120
    53f0:	18c7883a 	add	r3,r3,r3
    53f4:	29401dc4 	addi	r5,r5,119
    53f8:	003f9506 	br	5250 <__alt_data_end+0xfffe5e50>
    53fc:	00c15504 	movi	r3,1364
    5400:	19400536 	bltu	r3,r5,5418 <_free_r+0x2f0>
    5404:	100ad4ba 	srli	r5,r2,18
    5408:	28c01f44 	addi	r3,r5,125
    540c:	18c7883a 	add	r3,r3,r3
    5410:	29401f04 	addi	r5,r5,124
    5414:	003f8e06 	br	5250 <__alt_data_end+0xfffe5e50>
    5418:	00c03f84 	movi	r3,254
    541c:	01401f84 	movi	r5,126
    5420:	003f8b06 	br	5250 <__alt_data_end+0xfffe5e50>
    5424:	10c00054 	ori	r3,r2,1
    5428:	30c00115 	stw	r3,4(r6)
    542c:	308d883a 	add	r6,r6,r2
    5430:	30800015 	stw	r2,0(r6)
    5434:	003f7806 	br	5218 <__alt_data_end+0xfffe5e18>

00005438 <_fwalk>:
    5438:	defff704 	addi	sp,sp,-36
    543c:	dd000415 	stw	r20,16(sp)
    5440:	dfc00815 	stw	ra,32(sp)
    5444:	ddc00715 	stw	r23,28(sp)
    5448:	dd800615 	stw	r22,24(sp)
    544c:	dd400515 	stw	r21,20(sp)
    5450:	dcc00315 	stw	r19,12(sp)
    5454:	dc800215 	stw	r18,8(sp)
    5458:	dc400115 	stw	r17,4(sp)
    545c:	dc000015 	stw	r16,0(sp)
    5460:	2500b804 	addi	r20,r4,736
    5464:	a0002326 	beq	r20,zero,54f4 <_fwalk+0xbc>
    5468:	282b883a 	mov	r21,r5
    546c:	002f883a 	mov	r23,zero
    5470:	05800044 	movi	r22,1
    5474:	04ffffc4 	movi	r19,-1
    5478:	a4400117 	ldw	r17,4(r20)
    547c:	a4800217 	ldw	r18,8(r20)
    5480:	8c7fffc4 	addi	r17,r17,-1
    5484:	88000d16 	blt	r17,zero,54bc <_fwalk+0x84>
    5488:	94000304 	addi	r16,r18,12
    548c:	94800384 	addi	r18,r18,14
    5490:	8080000b 	ldhu	r2,0(r16)
    5494:	8c7fffc4 	addi	r17,r17,-1
    5498:	813ffd04 	addi	r4,r16,-12
    549c:	b080042e 	bgeu	r22,r2,54b0 <_fwalk+0x78>
    54a0:	9080000f 	ldh	r2,0(r18)
    54a4:	14c00226 	beq	r2,r19,54b0 <_fwalk+0x78>
    54a8:	a83ee83a 	callr	r21
    54ac:	b8aeb03a 	or	r23,r23,r2
    54b0:	84001a04 	addi	r16,r16,104
    54b4:	94801a04 	addi	r18,r18,104
    54b8:	8cfff51e 	bne	r17,r19,5490 <__alt_data_end+0xfffe6090>
    54bc:	a5000017 	ldw	r20,0(r20)
    54c0:	a03fed1e 	bne	r20,zero,5478 <__alt_data_end+0xfffe6078>
    54c4:	b805883a 	mov	r2,r23
    54c8:	dfc00817 	ldw	ra,32(sp)
    54cc:	ddc00717 	ldw	r23,28(sp)
    54d0:	dd800617 	ldw	r22,24(sp)
    54d4:	dd400517 	ldw	r21,20(sp)
    54d8:	dd000417 	ldw	r20,16(sp)
    54dc:	dcc00317 	ldw	r19,12(sp)
    54e0:	dc800217 	ldw	r18,8(sp)
    54e4:	dc400117 	ldw	r17,4(sp)
    54e8:	dc000017 	ldw	r16,0(sp)
    54ec:	dec00904 	addi	sp,sp,36
    54f0:	f800283a 	ret
    54f4:	002f883a 	mov	r23,zero
    54f8:	003ff206 	br	54c4 <__alt_data_end+0xfffe60c4>

000054fc <_fwalk_reent>:
    54fc:	defff704 	addi	sp,sp,-36
    5500:	dd000415 	stw	r20,16(sp)
    5504:	dfc00815 	stw	ra,32(sp)
    5508:	ddc00715 	stw	r23,28(sp)
    550c:	dd800615 	stw	r22,24(sp)
    5510:	dd400515 	stw	r21,20(sp)
    5514:	dcc00315 	stw	r19,12(sp)
    5518:	dc800215 	stw	r18,8(sp)
    551c:	dc400115 	stw	r17,4(sp)
    5520:	dc000015 	stw	r16,0(sp)
    5524:	2500b804 	addi	r20,r4,736
    5528:	a0002326 	beq	r20,zero,55b8 <_fwalk_reent+0xbc>
    552c:	282b883a 	mov	r21,r5
    5530:	2027883a 	mov	r19,r4
    5534:	002f883a 	mov	r23,zero
    5538:	05800044 	movi	r22,1
    553c:	04bfffc4 	movi	r18,-1
    5540:	a4400117 	ldw	r17,4(r20)
    5544:	a4000217 	ldw	r16,8(r20)
    5548:	8c7fffc4 	addi	r17,r17,-1
    554c:	88000c16 	blt	r17,zero,5580 <_fwalk_reent+0x84>
    5550:	84000304 	addi	r16,r16,12
    5554:	8080000b 	ldhu	r2,0(r16)
    5558:	8c7fffc4 	addi	r17,r17,-1
    555c:	817ffd04 	addi	r5,r16,-12
    5560:	b080052e 	bgeu	r22,r2,5578 <_fwalk_reent+0x7c>
    5564:	8080008f 	ldh	r2,2(r16)
    5568:	9809883a 	mov	r4,r19
    556c:	14800226 	beq	r2,r18,5578 <_fwalk_reent+0x7c>
    5570:	a83ee83a 	callr	r21
    5574:	b8aeb03a 	or	r23,r23,r2
    5578:	84001a04 	addi	r16,r16,104
    557c:	8cbff51e 	bne	r17,r18,5554 <__alt_data_end+0xfffe6154>
    5580:	a5000017 	ldw	r20,0(r20)
    5584:	a03fee1e 	bne	r20,zero,5540 <__alt_data_end+0xfffe6140>
    5588:	b805883a 	mov	r2,r23
    558c:	dfc00817 	ldw	ra,32(sp)
    5590:	ddc00717 	ldw	r23,28(sp)
    5594:	dd800617 	ldw	r22,24(sp)
    5598:	dd400517 	ldw	r21,20(sp)
    559c:	dd000417 	ldw	r20,16(sp)
    55a0:	dcc00317 	ldw	r19,12(sp)
    55a4:	dc800217 	ldw	r18,8(sp)
    55a8:	dc400117 	ldw	r17,4(sp)
    55ac:	dc000017 	ldw	r16,0(sp)
    55b0:	dec00904 	addi	sp,sp,36
    55b4:	f800283a 	ret
    55b8:	002f883a 	mov	r23,zero
    55bc:	003ff206 	br	5588 <__alt_data_end+0xfffe6188>

000055c0 <_setlocale_r>:
    55c0:	30001b26 	beq	r6,zero,5630 <_setlocale_r+0x70>
    55c4:	01400074 	movhi	r5,1
    55c8:	defffe04 	addi	sp,sp,-8
    55cc:	29404004 	addi	r5,r5,256
    55d0:	3009883a 	mov	r4,r6
    55d4:	dc000015 	stw	r16,0(sp)
    55d8:	dfc00115 	stw	ra,4(sp)
    55dc:	3021883a 	mov	r16,r6
    55e0:	0000a600 	call	a60 <strcmp>
    55e4:	1000061e 	bne	r2,zero,5600 <_setlocale_r+0x40>
    55e8:	00800074 	movhi	r2,1
    55ec:	10803f04 	addi	r2,r2,252
    55f0:	dfc00117 	ldw	ra,4(sp)
    55f4:	dc000017 	ldw	r16,0(sp)
    55f8:	dec00204 	addi	sp,sp,8
    55fc:	f800283a 	ret
    5600:	01400074 	movhi	r5,1
    5604:	29403f04 	addi	r5,r5,252
    5608:	8009883a 	mov	r4,r16
    560c:	0000a600 	call	a60 <strcmp>
    5610:	103ff526 	beq	r2,zero,55e8 <__alt_data_end+0xfffe61e8>
    5614:	01400074 	movhi	r5,1
    5618:	29402a04 	addi	r5,r5,168
    561c:	8009883a 	mov	r4,r16
    5620:	0000a600 	call	a60 <strcmp>
    5624:	103ff026 	beq	r2,zero,55e8 <__alt_data_end+0xfffe61e8>
    5628:	0005883a 	mov	r2,zero
    562c:	003ff006 	br	55f0 <__alt_data_end+0xfffe61f0>
    5630:	00800074 	movhi	r2,1
    5634:	10803f04 	addi	r2,r2,252
    5638:	f800283a 	ret

0000563c <__locale_charset>:
    563c:	00800074 	movhi	r2,1
    5640:	1081f204 	addi	r2,r2,1992
    5644:	f800283a 	ret

00005648 <__locale_mb_cur_max>:
    5648:	00800074 	movhi	r2,1
    564c:	10878e04 	addi	r2,r2,7736
    5650:	10800017 	ldw	r2,0(r2)
    5654:	f800283a 	ret

00005658 <__locale_msgcharset>:
    5658:	00800074 	movhi	r2,1
    565c:	1081ea04 	addi	r2,r2,1960
    5660:	f800283a 	ret

00005664 <__locale_cjk_lang>:
    5664:	0005883a 	mov	r2,zero
    5668:	f800283a 	ret

0000566c <_localeconv_r>:
    566c:	00800074 	movhi	r2,1
    5670:	1081fa04 	addi	r2,r2,2024
    5674:	f800283a 	ret

00005678 <setlocale>:
    5678:	00800074 	movhi	r2,1
    567c:	10878d04 	addi	r2,r2,7732
    5680:	280d883a 	mov	r6,r5
    5684:	200b883a 	mov	r5,r4
    5688:	11000017 	ldw	r4,0(r2)
    568c:	00055c01 	jmpi	55c0 <_setlocale_r>

00005690 <localeconv>:
    5690:	00800074 	movhi	r2,1
    5694:	1081fa04 	addi	r2,r2,2024
    5698:	f800283a 	ret

0000569c <__smakebuf_r>:
    569c:	2880030b 	ldhu	r2,12(r5)
    56a0:	10c0008c 	andi	r3,r2,2
    56a4:	1800411e 	bne	r3,zero,57ac <__smakebuf_r+0x110>
    56a8:	deffec04 	addi	sp,sp,-80
    56ac:	dc000f15 	stw	r16,60(sp)
    56b0:	2821883a 	mov	r16,r5
    56b4:	2940038f 	ldh	r5,14(r5)
    56b8:	dc401015 	stw	r17,64(sp)
    56bc:	dfc01315 	stw	ra,76(sp)
    56c0:	dcc01215 	stw	r19,72(sp)
    56c4:	dc801115 	stw	r18,68(sp)
    56c8:	2023883a 	mov	r17,r4
    56cc:	28001c16 	blt	r5,zero,5740 <__smakebuf_r+0xa4>
    56d0:	d80d883a 	mov	r6,sp
    56d4:	00092a00 	call	92a0 <_fstat_r>
    56d8:	10001816 	blt	r2,zero,573c <__smakebuf_r+0xa0>
    56dc:	d8800117 	ldw	r2,4(sp)
    56e0:	00e00014 	movui	r3,32768
    56e4:	10bc000c 	andi	r2,r2,61440
    56e8:	14c80020 	cmpeqi	r19,r2,8192
    56ec:	10c03726 	beq	r2,r3,57cc <__smakebuf_r+0x130>
    56f0:	80c0030b 	ldhu	r3,12(r16)
    56f4:	18c20014 	ori	r3,r3,2048
    56f8:	80c0030d 	sth	r3,12(r16)
    56fc:	00c80004 	movi	r3,8192
    5700:	10c0521e 	bne	r2,r3,584c <__smakebuf_r+0x1b0>
    5704:	8140038f 	ldh	r5,14(r16)
    5708:	8809883a 	mov	r4,r17
    570c:	00097c40 	call	97c4 <_isatty_r>
    5710:	10004c26 	beq	r2,zero,5844 <__smakebuf_r+0x1a8>
    5714:	8080030b 	ldhu	r2,12(r16)
    5718:	80c010c4 	addi	r3,r16,67
    571c:	80c00015 	stw	r3,0(r16)
    5720:	10800054 	ori	r2,r2,1
    5724:	8080030d 	sth	r2,12(r16)
    5728:	00800044 	movi	r2,1
    572c:	80c00415 	stw	r3,16(r16)
    5730:	80800515 	stw	r2,20(r16)
    5734:	04810004 	movi	r18,1024
    5738:	00000706 	br	5758 <__smakebuf_r+0xbc>
    573c:	8080030b 	ldhu	r2,12(r16)
    5740:	10c0200c 	andi	r3,r2,128
    5744:	18001f1e 	bne	r3,zero,57c4 <__smakebuf_r+0x128>
    5748:	04810004 	movi	r18,1024
    574c:	10820014 	ori	r2,r2,2048
    5750:	8080030d 	sth	r2,12(r16)
    5754:	0027883a 	mov	r19,zero
    5758:	900b883a 	mov	r5,r18
    575c:	8809883a 	mov	r4,r17
    5760:	00058580 	call	5858 <_malloc_r>
    5764:	10002c26 	beq	r2,zero,5818 <__smakebuf_r+0x17c>
    5768:	80c0030b 	ldhu	r3,12(r16)
    576c:	01000034 	movhi	r4,0
    5770:	21131704 	addi	r4,r4,19548
    5774:	89000f15 	stw	r4,60(r17)
    5778:	18c02014 	ori	r3,r3,128
    577c:	80c0030d 	sth	r3,12(r16)
    5780:	80800015 	stw	r2,0(r16)
    5784:	80800415 	stw	r2,16(r16)
    5788:	84800515 	stw	r18,20(r16)
    578c:	98001a1e 	bne	r19,zero,57f8 <__smakebuf_r+0x15c>
    5790:	dfc01317 	ldw	ra,76(sp)
    5794:	dcc01217 	ldw	r19,72(sp)
    5798:	dc801117 	ldw	r18,68(sp)
    579c:	dc401017 	ldw	r17,64(sp)
    57a0:	dc000f17 	ldw	r16,60(sp)
    57a4:	dec01404 	addi	sp,sp,80
    57a8:	f800283a 	ret
    57ac:	288010c4 	addi	r2,r5,67
    57b0:	28800015 	stw	r2,0(r5)
    57b4:	28800415 	stw	r2,16(r5)
    57b8:	00800044 	movi	r2,1
    57bc:	28800515 	stw	r2,20(r5)
    57c0:	f800283a 	ret
    57c4:	04801004 	movi	r18,64
    57c8:	003fe006 	br	574c <__alt_data_end+0xfffe634c>
    57cc:	81000a17 	ldw	r4,40(r16)
    57d0:	00c00034 	movhi	r3,0
    57d4:	18dd8404 	addi	r3,r3,30224
    57d8:	20ffc51e 	bne	r4,r3,56f0 <__alt_data_end+0xfffe62f0>
    57dc:	8080030b 	ldhu	r2,12(r16)
    57e0:	04810004 	movi	r18,1024
    57e4:	84801315 	stw	r18,76(r16)
    57e8:	1484b03a 	or	r2,r2,r18
    57ec:	8080030d 	sth	r2,12(r16)
    57f0:	0027883a 	mov	r19,zero
    57f4:	003fd806 	br	5758 <__alt_data_end+0xfffe6358>
    57f8:	8140038f 	ldh	r5,14(r16)
    57fc:	8809883a 	mov	r4,r17
    5800:	00097c40 	call	97c4 <_isatty_r>
    5804:	103fe226 	beq	r2,zero,5790 <__alt_data_end+0xfffe6390>
    5808:	8080030b 	ldhu	r2,12(r16)
    580c:	10800054 	ori	r2,r2,1
    5810:	8080030d 	sth	r2,12(r16)
    5814:	003fde06 	br	5790 <__alt_data_end+0xfffe6390>
    5818:	8080030b 	ldhu	r2,12(r16)
    581c:	10c0800c 	andi	r3,r2,512
    5820:	183fdb1e 	bne	r3,zero,5790 <__alt_data_end+0xfffe6390>
    5824:	10800094 	ori	r2,r2,2
    5828:	80c010c4 	addi	r3,r16,67
    582c:	8080030d 	sth	r2,12(r16)
    5830:	00800044 	movi	r2,1
    5834:	80c00015 	stw	r3,0(r16)
    5838:	80c00415 	stw	r3,16(r16)
    583c:	80800515 	stw	r2,20(r16)
    5840:	003fd306 	br	5790 <__alt_data_end+0xfffe6390>
    5844:	04810004 	movi	r18,1024
    5848:	003fc306 	br	5758 <__alt_data_end+0xfffe6358>
    584c:	0027883a 	mov	r19,zero
    5850:	04810004 	movi	r18,1024
    5854:	003fc006 	br	5758 <__alt_data_end+0xfffe6358>

00005858 <_malloc_r>:
    5858:	defff504 	addi	sp,sp,-44
    585c:	dc800315 	stw	r18,12(sp)
    5860:	dfc00a15 	stw	ra,40(sp)
    5864:	df000915 	stw	fp,36(sp)
    5868:	ddc00815 	stw	r23,32(sp)
    586c:	dd800715 	stw	r22,28(sp)
    5870:	dd400615 	stw	r21,24(sp)
    5874:	dd000515 	stw	r20,20(sp)
    5878:	dcc00415 	stw	r19,16(sp)
    587c:	dc400215 	stw	r17,8(sp)
    5880:	dc000115 	stw	r16,4(sp)
    5884:	288002c4 	addi	r2,r5,11
    5888:	00c00584 	movi	r3,22
    588c:	2025883a 	mov	r18,r4
    5890:	18807f2e 	bgeu	r3,r2,5a90 <_malloc_r+0x238>
    5894:	047ffe04 	movi	r17,-8
    5898:	1462703a 	and	r17,r2,r17
    589c:	8800a316 	blt	r17,zero,5b2c <_malloc_r+0x2d4>
    58a0:	8940a236 	bltu	r17,r5,5b2c <_malloc_r+0x2d4>
    58a4:	000e1540 	call	e154 <__malloc_lock>
    58a8:	00807dc4 	movi	r2,503
    58ac:	1441e92e 	bgeu	r2,r17,6054 <_malloc_r+0x7fc>
    58b0:	8804d27a 	srli	r2,r17,9
    58b4:	1000a126 	beq	r2,zero,5b3c <_malloc_r+0x2e4>
    58b8:	00c00104 	movi	r3,4
    58bc:	18811e36 	bltu	r3,r2,5d38 <_malloc_r+0x4e0>
    58c0:	8804d1ba 	srli	r2,r17,6
    58c4:	12000e44 	addi	r8,r2,57
    58c8:	11c00e04 	addi	r7,r2,56
    58cc:	4209883a 	add	r4,r8,r8
    58d0:	04c00074 	movhi	r19,1
    58d4:	2109883a 	add	r4,r4,r4
    58d8:	9cc20804 	addi	r19,r19,2080
    58dc:	2109883a 	add	r4,r4,r4
    58e0:	9909883a 	add	r4,r19,r4
    58e4:	24000117 	ldw	r16,4(r4)
    58e8:	213ffe04 	addi	r4,r4,-8
    58ec:	24009726 	beq	r4,r16,5b4c <_malloc_r+0x2f4>
    58f0:	80800117 	ldw	r2,4(r16)
    58f4:	01bfff04 	movi	r6,-4
    58f8:	014003c4 	movi	r5,15
    58fc:	1184703a 	and	r2,r2,r6
    5900:	1447c83a 	sub	r3,r2,r17
    5904:	28c00716 	blt	r5,r3,5924 <_malloc_r+0xcc>
    5908:	1800920e 	bge	r3,zero,5b54 <_malloc_r+0x2fc>
    590c:	84000317 	ldw	r16,12(r16)
    5910:	24008e26 	beq	r4,r16,5b4c <_malloc_r+0x2f4>
    5914:	80800117 	ldw	r2,4(r16)
    5918:	1184703a 	and	r2,r2,r6
    591c:	1447c83a 	sub	r3,r2,r17
    5920:	28fff90e 	bge	r5,r3,5908 <__alt_data_end+0xfffe6508>
    5924:	3809883a 	mov	r4,r7
    5928:	01800074 	movhi	r6,1
    592c:	9c000417 	ldw	r16,16(r19)
    5930:	31820804 	addi	r6,r6,2080
    5934:	32000204 	addi	r8,r6,8
    5938:	82013426 	beq	r16,r8,5e0c <_malloc_r+0x5b4>
    593c:	80c00117 	ldw	r3,4(r16)
    5940:	00bfff04 	movi	r2,-4
    5944:	188e703a 	and	r7,r3,r2
    5948:	3c45c83a 	sub	r2,r7,r17
    594c:	00c003c4 	movi	r3,15
    5950:	18811f16 	blt	r3,r2,5dd0 <_malloc_r+0x578>
    5954:	32000515 	stw	r8,20(r6)
    5958:	32000415 	stw	r8,16(r6)
    595c:	10007f0e 	bge	r2,zero,5b5c <_malloc_r+0x304>
    5960:	00807fc4 	movi	r2,511
    5964:	11c0fd36 	bltu	r2,r7,5d5c <_malloc_r+0x504>
    5968:	3806d0fa 	srli	r3,r7,3
    596c:	01c00044 	movi	r7,1
    5970:	30800117 	ldw	r2,4(r6)
    5974:	19400044 	addi	r5,r3,1
    5978:	294b883a 	add	r5,r5,r5
    597c:	1807d0ba 	srai	r3,r3,2
    5980:	294b883a 	add	r5,r5,r5
    5984:	294b883a 	add	r5,r5,r5
    5988:	298b883a 	add	r5,r5,r6
    598c:	38c6983a 	sll	r3,r7,r3
    5990:	29c00017 	ldw	r7,0(r5)
    5994:	2a7ffe04 	addi	r9,r5,-8
    5998:	1886b03a 	or	r3,r3,r2
    599c:	82400315 	stw	r9,12(r16)
    59a0:	81c00215 	stw	r7,8(r16)
    59a4:	30c00115 	stw	r3,4(r6)
    59a8:	2c000015 	stw	r16,0(r5)
    59ac:	3c000315 	stw	r16,12(r7)
    59b0:	2005d0ba 	srai	r2,r4,2
    59b4:	01400044 	movi	r5,1
    59b8:	288a983a 	sll	r5,r5,r2
    59bc:	19406f36 	bltu	r3,r5,5b7c <_malloc_r+0x324>
    59c0:	28c4703a 	and	r2,r5,r3
    59c4:	10000a1e 	bne	r2,zero,59f0 <_malloc_r+0x198>
    59c8:	00bfff04 	movi	r2,-4
    59cc:	294b883a 	add	r5,r5,r5
    59d0:	2088703a 	and	r4,r4,r2
    59d4:	28c4703a 	and	r2,r5,r3
    59d8:	21000104 	addi	r4,r4,4
    59dc:	1000041e 	bne	r2,zero,59f0 <_malloc_r+0x198>
    59e0:	294b883a 	add	r5,r5,r5
    59e4:	28c4703a 	and	r2,r5,r3
    59e8:	21000104 	addi	r4,r4,4
    59ec:	103ffc26 	beq	r2,zero,59e0 <__alt_data_end+0xfffe65e0>
    59f0:	02bfff04 	movi	r10,-4
    59f4:	024003c4 	movi	r9,15
    59f8:	21800044 	addi	r6,r4,1
    59fc:	318d883a 	add	r6,r6,r6
    5a00:	318d883a 	add	r6,r6,r6
    5a04:	318d883a 	add	r6,r6,r6
    5a08:	998d883a 	add	r6,r19,r6
    5a0c:	333ffe04 	addi	r12,r6,-8
    5a10:	2017883a 	mov	r11,r4
    5a14:	31800104 	addi	r6,r6,4
    5a18:	34000017 	ldw	r16,0(r6)
    5a1c:	31fffd04 	addi	r7,r6,-12
    5a20:	81c0041e 	bne	r16,r7,5a34 <_malloc_r+0x1dc>
    5a24:	0000fb06 	br	5e14 <_malloc_r+0x5bc>
    5a28:	1801030e 	bge	r3,zero,5e38 <_malloc_r+0x5e0>
    5a2c:	84000317 	ldw	r16,12(r16)
    5a30:	81c0f826 	beq	r16,r7,5e14 <_malloc_r+0x5bc>
    5a34:	80800117 	ldw	r2,4(r16)
    5a38:	1284703a 	and	r2,r2,r10
    5a3c:	1447c83a 	sub	r3,r2,r17
    5a40:	48fff90e 	bge	r9,r3,5a28 <__alt_data_end+0xfffe6628>
    5a44:	80800317 	ldw	r2,12(r16)
    5a48:	81000217 	ldw	r4,8(r16)
    5a4c:	89400054 	ori	r5,r17,1
    5a50:	81400115 	stw	r5,4(r16)
    5a54:	20800315 	stw	r2,12(r4)
    5a58:	11000215 	stw	r4,8(r2)
    5a5c:	8463883a 	add	r17,r16,r17
    5a60:	9c400515 	stw	r17,20(r19)
    5a64:	9c400415 	stw	r17,16(r19)
    5a68:	18800054 	ori	r2,r3,1
    5a6c:	88800115 	stw	r2,4(r17)
    5a70:	8a000315 	stw	r8,12(r17)
    5a74:	8a000215 	stw	r8,8(r17)
    5a78:	88e3883a 	add	r17,r17,r3
    5a7c:	88c00015 	stw	r3,0(r17)
    5a80:	9009883a 	mov	r4,r18
    5a84:	000e1780 	call	e178 <__malloc_unlock>
    5a88:	80800204 	addi	r2,r16,8
    5a8c:	00001b06 	br	5afc <_malloc_r+0x2a4>
    5a90:	04400404 	movi	r17,16
    5a94:	89402536 	bltu	r17,r5,5b2c <_malloc_r+0x2d4>
    5a98:	000e1540 	call	e154 <__malloc_lock>
    5a9c:	00800184 	movi	r2,6
    5aa0:	01000084 	movi	r4,2
    5aa4:	04c00074 	movhi	r19,1
    5aa8:	1085883a 	add	r2,r2,r2
    5aac:	9cc20804 	addi	r19,r19,2080
    5ab0:	1085883a 	add	r2,r2,r2
    5ab4:	9885883a 	add	r2,r19,r2
    5ab8:	14000117 	ldw	r16,4(r2)
    5abc:	10fffe04 	addi	r3,r2,-8
    5ac0:	80c0d926 	beq	r16,r3,5e28 <_malloc_r+0x5d0>
    5ac4:	80c00117 	ldw	r3,4(r16)
    5ac8:	81000317 	ldw	r4,12(r16)
    5acc:	00bfff04 	movi	r2,-4
    5ad0:	1884703a 	and	r2,r3,r2
    5ad4:	81400217 	ldw	r5,8(r16)
    5ad8:	8085883a 	add	r2,r16,r2
    5adc:	10c00117 	ldw	r3,4(r2)
    5ae0:	29000315 	stw	r4,12(r5)
    5ae4:	21400215 	stw	r5,8(r4)
    5ae8:	18c00054 	ori	r3,r3,1
    5aec:	10c00115 	stw	r3,4(r2)
    5af0:	9009883a 	mov	r4,r18
    5af4:	000e1780 	call	e178 <__malloc_unlock>
    5af8:	80800204 	addi	r2,r16,8
    5afc:	dfc00a17 	ldw	ra,40(sp)
    5b00:	df000917 	ldw	fp,36(sp)
    5b04:	ddc00817 	ldw	r23,32(sp)
    5b08:	dd800717 	ldw	r22,28(sp)
    5b0c:	dd400617 	ldw	r21,24(sp)
    5b10:	dd000517 	ldw	r20,20(sp)
    5b14:	dcc00417 	ldw	r19,16(sp)
    5b18:	dc800317 	ldw	r18,12(sp)
    5b1c:	dc400217 	ldw	r17,8(sp)
    5b20:	dc000117 	ldw	r16,4(sp)
    5b24:	dec00b04 	addi	sp,sp,44
    5b28:	f800283a 	ret
    5b2c:	00800304 	movi	r2,12
    5b30:	90800015 	stw	r2,0(r18)
    5b34:	0005883a 	mov	r2,zero
    5b38:	003ff006 	br	5afc <__alt_data_end+0xfffe66fc>
    5b3c:	01002004 	movi	r4,128
    5b40:	02001004 	movi	r8,64
    5b44:	01c00fc4 	movi	r7,63
    5b48:	003f6106 	br	58d0 <__alt_data_end+0xfffe64d0>
    5b4c:	4009883a 	mov	r4,r8
    5b50:	003f7506 	br	5928 <__alt_data_end+0xfffe6528>
    5b54:	81000317 	ldw	r4,12(r16)
    5b58:	003fde06 	br	5ad4 <__alt_data_end+0xfffe66d4>
    5b5c:	81c5883a 	add	r2,r16,r7
    5b60:	11400117 	ldw	r5,4(r2)
    5b64:	9009883a 	mov	r4,r18
    5b68:	29400054 	ori	r5,r5,1
    5b6c:	11400115 	stw	r5,4(r2)
    5b70:	000e1780 	call	e178 <__malloc_unlock>
    5b74:	80800204 	addi	r2,r16,8
    5b78:	003fe006 	br	5afc <__alt_data_end+0xfffe66fc>
    5b7c:	9c000217 	ldw	r16,8(r19)
    5b80:	00bfff04 	movi	r2,-4
    5b84:	85800117 	ldw	r22,4(r16)
    5b88:	b0ac703a 	and	r22,r22,r2
    5b8c:	b4400336 	bltu	r22,r17,5b9c <_malloc_r+0x344>
    5b90:	b445c83a 	sub	r2,r22,r17
    5b94:	00c003c4 	movi	r3,15
    5b98:	18805d16 	blt	r3,r2,5d10 <_malloc_r+0x4b8>
    5b9c:	05c00074 	movhi	r23,1
    5ba0:	00800074 	movhi	r2,1
    5ba4:	108e6404 	addi	r2,r2,14736
    5ba8:	bdc78f04 	addi	r23,r23,7740
    5bac:	15400017 	ldw	r21,0(r2)
    5bb0:	b8c00017 	ldw	r3,0(r23)
    5bb4:	00bfffc4 	movi	r2,-1
    5bb8:	858d883a 	add	r6,r16,r22
    5bbc:	8d6b883a 	add	r21,r17,r21
    5bc0:	1880ea26 	beq	r3,r2,5f6c <_malloc_r+0x714>
    5bc4:	ad4403c4 	addi	r21,r21,4111
    5bc8:	00bc0004 	movi	r2,-4096
    5bcc:	a8aa703a 	and	r21,r21,r2
    5bd0:	a80b883a 	mov	r5,r21
    5bd4:	9009883a 	mov	r4,r18
    5bd8:	d9800015 	stw	r6,0(sp)
    5bdc:	00074e40 	call	74e4 <_sbrk_r>
    5be0:	1029883a 	mov	r20,r2
    5be4:	00bfffc4 	movi	r2,-1
    5be8:	d9800017 	ldw	r6,0(sp)
    5bec:	a080e826 	beq	r20,r2,5f90 <_malloc_r+0x738>
    5bf0:	a180a636 	bltu	r20,r6,5e8c <_malloc_r+0x634>
    5bf4:	07000074 	movhi	fp,1
    5bf8:	e70e6c04 	addi	fp,fp,14768
    5bfc:	e0800017 	ldw	r2,0(fp)
    5c00:	a887883a 	add	r3,r21,r2
    5c04:	e0c00015 	stw	r3,0(fp)
    5c08:	3500e626 	beq	r6,r20,5fa4 <_malloc_r+0x74c>
    5c0c:	b9000017 	ldw	r4,0(r23)
    5c10:	00bfffc4 	movi	r2,-1
    5c14:	2080ee26 	beq	r4,r2,5fd0 <_malloc_r+0x778>
    5c18:	a185c83a 	sub	r2,r20,r6
    5c1c:	10c5883a 	add	r2,r2,r3
    5c20:	e0800015 	stw	r2,0(fp)
    5c24:	a0c001cc 	andi	r3,r20,7
    5c28:	1800bc26 	beq	r3,zero,5f1c <_malloc_r+0x6c4>
    5c2c:	a0e9c83a 	sub	r20,r20,r3
    5c30:	00840204 	movi	r2,4104
    5c34:	a5000204 	addi	r20,r20,8
    5c38:	10c7c83a 	sub	r3,r2,r3
    5c3c:	a545883a 	add	r2,r20,r21
    5c40:	1083ffcc 	andi	r2,r2,4095
    5c44:	18abc83a 	sub	r21,r3,r2
    5c48:	a80b883a 	mov	r5,r21
    5c4c:	9009883a 	mov	r4,r18
    5c50:	00074e40 	call	74e4 <_sbrk_r>
    5c54:	00ffffc4 	movi	r3,-1
    5c58:	10c0e126 	beq	r2,r3,5fe0 <_malloc_r+0x788>
    5c5c:	1505c83a 	sub	r2,r2,r20
    5c60:	1545883a 	add	r2,r2,r21
    5c64:	10800054 	ori	r2,r2,1
    5c68:	e0c00017 	ldw	r3,0(fp)
    5c6c:	9d000215 	stw	r20,8(r19)
    5c70:	a0800115 	stw	r2,4(r20)
    5c74:	a8c7883a 	add	r3,r21,r3
    5c78:	e0c00015 	stw	r3,0(fp)
    5c7c:	84c00e26 	beq	r16,r19,5cb8 <_malloc_r+0x460>
    5c80:	018003c4 	movi	r6,15
    5c84:	3580a72e 	bgeu	r6,r22,5f24 <_malloc_r+0x6cc>
    5c88:	81400117 	ldw	r5,4(r16)
    5c8c:	013ffe04 	movi	r4,-8
    5c90:	b0bffd04 	addi	r2,r22,-12
    5c94:	1104703a 	and	r2,r2,r4
    5c98:	2900004c 	andi	r4,r5,1
    5c9c:	2088b03a 	or	r4,r4,r2
    5ca0:	81000115 	stw	r4,4(r16)
    5ca4:	01400144 	movi	r5,5
    5ca8:	8089883a 	add	r4,r16,r2
    5cac:	21400115 	stw	r5,4(r4)
    5cb0:	21400215 	stw	r5,8(r4)
    5cb4:	3080cd36 	bltu	r6,r2,5fec <_malloc_r+0x794>
    5cb8:	00800074 	movhi	r2,1
    5cbc:	108e6304 	addi	r2,r2,14732
    5cc0:	11000017 	ldw	r4,0(r2)
    5cc4:	20c0012e 	bgeu	r4,r3,5ccc <_malloc_r+0x474>
    5cc8:	10c00015 	stw	r3,0(r2)
    5ccc:	00800074 	movhi	r2,1
    5cd0:	108e6204 	addi	r2,r2,14728
    5cd4:	11000017 	ldw	r4,0(r2)
    5cd8:	9c000217 	ldw	r16,8(r19)
    5cdc:	20c0012e 	bgeu	r4,r3,5ce4 <_malloc_r+0x48c>
    5ce0:	10c00015 	stw	r3,0(r2)
    5ce4:	80c00117 	ldw	r3,4(r16)
    5ce8:	00bfff04 	movi	r2,-4
    5cec:	1886703a 	and	r3,r3,r2
    5cf0:	1c45c83a 	sub	r2,r3,r17
    5cf4:	1c400236 	bltu	r3,r17,5d00 <_malloc_r+0x4a8>
    5cf8:	00c003c4 	movi	r3,15
    5cfc:	18800416 	blt	r3,r2,5d10 <_malloc_r+0x4b8>
    5d00:	9009883a 	mov	r4,r18
    5d04:	000e1780 	call	e178 <__malloc_unlock>
    5d08:	0005883a 	mov	r2,zero
    5d0c:	003f7b06 	br	5afc <__alt_data_end+0xfffe66fc>
    5d10:	88c00054 	ori	r3,r17,1
    5d14:	80c00115 	stw	r3,4(r16)
    5d18:	8463883a 	add	r17,r16,r17
    5d1c:	10800054 	ori	r2,r2,1
    5d20:	9c400215 	stw	r17,8(r19)
    5d24:	88800115 	stw	r2,4(r17)
    5d28:	9009883a 	mov	r4,r18
    5d2c:	000e1780 	call	e178 <__malloc_unlock>
    5d30:	80800204 	addi	r2,r16,8
    5d34:	003f7106 	br	5afc <__alt_data_end+0xfffe66fc>
    5d38:	00c00504 	movi	r3,20
    5d3c:	18804a2e 	bgeu	r3,r2,5e68 <_malloc_r+0x610>
    5d40:	00c01504 	movi	r3,84
    5d44:	18806e36 	bltu	r3,r2,5f00 <_malloc_r+0x6a8>
    5d48:	8804d33a 	srli	r2,r17,12
    5d4c:	12001bc4 	addi	r8,r2,111
    5d50:	11c01b84 	addi	r7,r2,110
    5d54:	4209883a 	add	r4,r8,r8
    5d58:	003edd06 	br	58d0 <__alt_data_end+0xfffe64d0>
    5d5c:	3804d27a 	srli	r2,r7,9
    5d60:	00c00104 	movi	r3,4
    5d64:	1880442e 	bgeu	r3,r2,5e78 <_malloc_r+0x620>
    5d68:	00c00504 	movi	r3,20
    5d6c:	18808136 	bltu	r3,r2,5f74 <_malloc_r+0x71c>
    5d70:	11401704 	addi	r5,r2,92
    5d74:	10c016c4 	addi	r3,r2,91
    5d78:	294b883a 	add	r5,r5,r5
    5d7c:	294b883a 	add	r5,r5,r5
    5d80:	294b883a 	add	r5,r5,r5
    5d84:	994b883a 	add	r5,r19,r5
    5d88:	28800017 	ldw	r2,0(r5)
    5d8c:	01800074 	movhi	r6,1
    5d90:	297ffe04 	addi	r5,r5,-8
    5d94:	31820804 	addi	r6,r6,2080
    5d98:	28806526 	beq	r5,r2,5f30 <_malloc_r+0x6d8>
    5d9c:	01bfff04 	movi	r6,-4
    5da0:	10c00117 	ldw	r3,4(r2)
    5da4:	1986703a 	and	r3,r3,r6
    5da8:	38c0022e 	bgeu	r7,r3,5db4 <_malloc_r+0x55c>
    5dac:	10800217 	ldw	r2,8(r2)
    5db0:	28bffb1e 	bne	r5,r2,5da0 <__alt_data_end+0xfffe69a0>
    5db4:	11400317 	ldw	r5,12(r2)
    5db8:	98c00117 	ldw	r3,4(r19)
    5dbc:	81400315 	stw	r5,12(r16)
    5dc0:	80800215 	stw	r2,8(r16)
    5dc4:	2c000215 	stw	r16,8(r5)
    5dc8:	14000315 	stw	r16,12(r2)
    5dcc:	003ef806 	br	59b0 <__alt_data_end+0xfffe65b0>
    5dd0:	88c00054 	ori	r3,r17,1
    5dd4:	80c00115 	stw	r3,4(r16)
    5dd8:	8463883a 	add	r17,r16,r17
    5ddc:	34400515 	stw	r17,20(r6)
    5de0:	34400415 	stw	r17,16(r6)
    5de4:	10c00054 	ori	r3,r2,1
    5de8:	8a000315 	stw	r8,12(r17)
    5dec:	8a000215 	stw	r8,8(r17)
    5df0:	88c00115 	stw	r3,4(r17)
    5df4:	88a3883a 	add	r17,r17,r2
    5df8:	88800015 	stw	r2,0(r17)
    5dfc:	9009883a 	mov	r4,r18
    5e00:	000e1780 	call	e178 <__malloc_unlock>
    5e04:	80800204 	addi	r2,r16,8
    5e08:	003f3c06 	br	5afc <__alt_data_end+0xfffe66fc>
    5e0c:	30c00117 	ldw	r3,4(r6)
    5e10:	003ee706 	br	59b0 <__alt_data_end+0xfffe65b0>
    5e14:	5ac00044 	addi	r11,r11,1
    5e18:	588000cc 	andi	r2,r11,3
    5e1c:	31800204 	addi	r6,r6,8
    5e20:	103efd1e 	bne	r2,zero,5a18 <__alt_data_end+0xfffe6618>
    5e24:	00002406 	br	5eb8 <_malloc_r+0x660>
    5e28:	14000317 	ldw	r16,12(r2)
    5e2c:	143f251e 	bne	r2,r16,5ac4 <__alt_data_end+0xfffe66c4>
    5e30:	21000084 	addi	r4,r4,2
    5e34:	003ebc06 	br	5928 <__alt_data_end+0xfffe6528>
    5e38:	8085883a 	add	r2,r16,r2
    5e3c:	10c00117 	ldw	r3,4(r2)
    5e40:	81000317 	ldw	r4,12(r16)
    5e44:	81400217 	ldw	r5,8(r16)
    5e48:	18c00054 	ori	r3,r3,1
    5e4c:	10c00115 	stw	r3,4(r2)
    5e50:	29000315 	stw	r4,12(r5)
    5e54:	21400215 	stw	r5,8(r4)
    5e58:	9009883a 	mov	r4,r18
    5e5c:	000e1780 	call	e178 <__malloc_unlock>
    5e60:	80800204 	addi	r2,r16,8
    5e64:	003f2506 	br	5afc <__alt_data_end+0xfffe66fc>
    5e68:	12001704 	addi	r8,r2,92
    5e6c:	11c016c4 	addi	r7,r2,91
    5e70:	4209883a 	add	r4,r8,r8
    5e74:	003e9606 	br	58d0 <__alt_data_end+0xfffe64d0>
    5e78:	3804d1ba 	srli	r2,r7,6
    5e7c:	11400e44 	addi	r5,r2,57
    5e80:	10c00e04 	addi	r3,r2,56
    5e84:	294b883a 	add	r5,r5,r5
    5e88:	003fbc06 	br	5d7c <__alt_data_end+0xfffe697c>
    5e8c:	84ff5926 	beq	r16,r19,5bf4 <__alt_data_end+0xfffe67f4>
    5e90:	00800074 	movhi	r2,1
    5e94:	10820804 	addi	r2,r2,2080
    5e98:	14000217 	ldw	r16,8(r2)
    5e9c:	00bfff04 	movi	r2,-4
    5ea0:	80c00117 	ldw	r3,4(r16)
    5ea4:	1886703a 	and	r3,r3,r2
    5ea8:	003f9106 	br	5cf0 <__alt_data_end+0xfffe68f0>
    5eac:	60800217 	ldw	r2,8(r12)
    5eb0:	213fffc4 	addi	r4,r4,-1
    5eb4:	1300651e 	bne	r2,r12,604c <_malloc_r+0x7f4>
    5eb8:	208000cc 	andi	r2,r4,3
    5ebc:	633ffe04 	addi	r12,r12,-8
    5ec0:	103ffa1e 	bne	r2,zero,5eac <__alt_data_end+0xfffe6aac>
    5ec4:	98800117 	ldw	r2,4(r19)
    5ec8:	0146303a 	nor	r3,zero,r5
    5ecc:	1884703a 	and	r2,r3,r2
    5ed0:	98800115 	stw	r2,4(r19)
    5ed4:	294b883a 	add	r5,r5,r5
    5ed8:	117f2836 	bltu	r2,r5,5b7c <__alt_data_end+0xfffe677c>
    5edc:	283f2726 	beq	r5,zero,5b7c <__alt_data_end+0xfffe677c>
    5ee0:	2886703a 	and	r3,r5,r2
    5ee4:	5809883a 	mov	r4,r11
    5ee8:	183ec31e 	bne	r3,zero,59f8 <__alt_data_end+0xfffe65f8>
    5eec:	294b883a 	add	r5,r5,r5
    5ef0:	2886703a 	and	r3,r5,r2
    5ef4:	21000104 	addi	r4,r4,4
    5ef8:	183ffc26 	beq	r3,zero,5eec <__alt_data_end+0xfffe6aec>
    5efc:	003ebe06 	br	59f8 <__alt_data_end+0xfffe65f8>
    5f00:	00c05504 	movi	r3,340
    5f04:	18801236 	bltu	r3,r2,5f50 <_malloc_r+0x6f8>
    5f08:	8804d3fa 	srli	r2,r17,15
    5f0c:	12001e04 	addi	r8,r2,120
    5f10:	11c01dc4 	addi	r7,r2,119
    5f14:	4209883a 	add	r4,r8,r8
    5f18:	003e6d06 	br	58d0 <__alt_data_end+0xfffe64d0>
    5f1c:	00c40004 	movi	r3,4096
    5f20:	003f4606 	br	5c3c <__alt_data_end+0xfffe683c>
    5f24:	00800044 	movi	r2,1
    5f28:	a0800115 	stw	r2,4(r20)
    5f2c:	003f7406 	br	5d00 <__alt_data_end+0xfffe6900>
    5f30:	1805d0ba 	srai	r2,r3,2
    5f34:	01c00044 	movi	r7,1
    5f38:	30c00117 	ldw	r3,4(r6)
    5f3c:	388e983a 	sll	r7,r7,r2
    5f40:	2805883a 	mov	r2,r5
    5f44:	38c6b03a 	or	r3,r7,r3
    5f48:	30c00115 	stw	r3,4(r6)
    5f4c:	003f9b06 	br	5dbc <__alt_data_end+0xfffe69bc>
    5f50:	00c15504 	movi	r3,1364
    5f54:	18801a36 	bltu	r3,r2,5fc0 <_malloc_r+0x768>
    5f58:	8804d4ba 	srli	r2,r17,18
    5f5c:	12001f44 	addi	r8,r2,125
    5f60:	11c01f04 	addi	r7,r2,124
    5f64:	4209883a 	add	r4,r8,r8
    5f68:	003e5906 	br	58d0 <__alt_data_end+0xfffe64d0>
    5f6c:	ad400404 	addi	r21,r21,16
    5f70:	003f1706 	br	5bd0 <__alt_data_end+0xfffe67d0>
    5f74:	00c01504 	movi	r3,84
    5f78:	18802336 	bltu	r3,r2,6008 <_malloc_r+0x7b0>
    5f7c:	3804d33a 	srli	r2,r7,12
    5f80:	11401bc4 	addi	r5,r2,111
    5f84:	10c01b84 	addi	r3,r2,110
    5f88:	294b883a 	add	r5,r5,r5
    5f8c:	003f7b06 	br	5d7c <__alt_data_end+0xfffe697c>
    5f90:	9c000217 	ldw	r16,8(r19)
    5f94:	00bfff04 	movi	r2,-4
    5f98:	80c00117 	ldw	r3,4(r16)
    5f9c:	1886703a 	and	r3,r3,r2
    5fa0:	003f5306 	br	5cf0 <__alt_data_end+0xfffe68f0>
    5fa4:	3083ffcc 	andi	r2,r6,4095
    5fa8:	103f181e 	bne	r2,zero,5c0c <__alt_data_end+0xfffe680c>
    5fac:	99000217 	ldw	r4,8(r19)
    5fb0:	b545883a 	add	r2,r22,r21
    5fb4:	10800054 	ori	r2,r2,1
    5fb8:	20800115 	stw	r2,4(r4)
    5fbc:	003f3e06 	br	5cb8 <__alt_data_end+0xfffe68b8>
    5fc0:	01003f84 	movi	r4,254
    5fc4:	02001fc4 	movi	r8,127
    5fc8:	01c01f84 	movi	r7,126
    5fcc:	003e4006 	br	58d0 <__alt_data_end+0xfffe64d0>
    5fd0:	00800074 	movhi	r2,1
    5fd4:	10878f04 	addi	r2,r2,7740
    5fd8:	15000015 	stw	r20,0(r2)
    5fdc:	003f1106 	br	5c24 <__alt_data_end+0xfffe6824>
    5fe0:	00800044 	movi	r2,1
    5fe4:	002b883a 	mov	r21,zero
    5fe8:	003f1f06 	br	5c68 <__alt_data_end+0xfffe6868>
    5fec:	81400204 	addi	r5,r16,8
    5ff0:	9009883a 	mov	r4,r18
    5ff4:	00051280 	call	5128 <_free_r>
    5ff8:	00800074 	movhi	r2,1
    5ffc:	108e6c04 	addi	r2,r2,14768
    6000:	10c00017 	ldw	r3,0(r2)
    6004:	003f2c06 	br	5cb8 <__alt_data_end+0xfffe68b8>
    6008:	00c05504 	movi	r3,340
    600c:	18800536 	bltu	r3,r2,6024 <_malloc_r+0x7cc>
    6010:	3804d3fa 	srli	r2,r7,15
    6014:	11401e04 	addi	r5,r2,120
    6018:	10c01dc4 	addi	r3,r2,119
    601c:	294b883a 	add	r5,r5,r5
    6020:	003f5606 	br	5d7c <__alt_data_end+0xfffe697c>
    6024:	00c15504 	movi	r3,1364
    6028:	18800536 	bltu	r3,r2,6040 <_malloc_r+0x7e8>
    602c:	3804d4ba 	srli	r2,r7,18
    6030:	11401f44 	addi	r5,r2,125
    6034:	10c01f04 	addi	r3,r2,124
    6038:	294b883a 	add	r5,r5,r5
    603c:	003f4f06 	br	5d7c <__alt_data_end+0xfffe697c>
    6040:	01403f84 	movi	r5,254
    6044:	00c01f84 	movi	r3,126
    6048:	003f4c06 	br	5d7c <__alt_data_end+0xfffe697c>
    604c:	98800117 	ldw	r2,4(r19)
    6050:	003fa006 	br	5ed4 <__alt_data_end+0xfffe6ad4>
    6054:	8808d0fa 	srli	r4,r17,3
    6058:	20800044 	addi	r2,r4,1
    605c:	1085883a 	add	r2,r2,r2
    6060:	003e9006 	br	5aa4 <__alt_data_end+0xfffe66a4>

00006064 <memchr>:
    6064:	208000cc 	andi	r2,r4,3
    6068:	280f883a 	mov	r7,r5
    606c:	10003426 	beq	r2,zero,6140 <memchr+0xdc>
    6070:	30bfffc4 	addi	r2,r6,-1
    6074:	30001a26 	beq	r6,zero,60e0 <memchr+0x7c>
    6078:	20c00003 	ldbu	r3,0(r4)
    607c:	29803fcc 	andi	r6,r5,255
    6080:	30c0051e 	bne	r6,r3,6098 <memchr+0x34>
    6084:	00001806 	br	60e8 <memchr+0x84>
    6088:	10001526 	beq	r2,zero,60e0 <memchr+0x7c>
    608c:	20c00003 	ldbu	r3,0(r4)
    6090:	10bfffc4 	addi	r2,r2,-1
    6094:	30c01426 	beq	r6,r3,60e8 <memchr+0x84>
    6098:	21000044 	addi	r4,r4,1
    609c:	20c000cc 	andi	r3,r4,3
    60a0:	183ff91e 	bne	r3,zero,6088 <__alt_data_end+0xfffe6c88>
    60a4:	020000c4 	movi	r8,3
    60a8:	40801136 	bltu	r8,r2,60f0 <memchr+0x8c>
    60ac:	10000c26 	beq	r2,zero,60e0 <memchr+0x7c>
    60b0:	20c00003 	ldbu	r3,0(r4)
    60b4:	29403fcc 	andi	r5,r5,255
    60b8:	28c00b26 	beq	r5,r3,60e8 <memchr+0x84>
    60bc:	20c00044 	addi	r3,r4,1
    60c0:	39803fcc 	andi	r6,r7,255
    60c4:	2089883a 	add	r4,r4,r2
    60c8:	00000306 	br	60d8 <memchr+0x74>
    60cc:	18c00044 	addi	r3,r3,1
    60d0:	197fffc3 	ldbu	r5,-1(r3)
    60d4:	31400526 	beq	r6,r5,60ec <memchr+0x88>
    60d8:	1805883a 	mov	r2,r3
    60dc:	20fffb1e 	bne	r4,r3,60cc <__alt_data_end+0xfffe6ccc>
    60e0:	0005883a 	mov	r2,zero
    60e4:	f800283a 	ret
    60e8:	2005883a 	mov	r2,r4
    60ec:	f800283a 	ret
    60f0:	28c03fcc 	andi	r3,r5,255
    60f4:	1812923a 	slli	r9,r3,8
    60f8:	02ffbff4 	movhi	r11,65279
    60fc:	02a02074 	movhi	r10,32897
    6100:	48d2b03a 	or	r9,r9,r3
    6104:	4806943a 	slli	r3,r9,16
    6108:	5affbfc4 	addi	r11,r11,-257
    610c:	52a02004 	addi	r10,r10,-32640
    6110:	48d2b03a 	or	r9,r9,r3
    6114:	20c00017 	ldw	r3,0(r4)
    6118:	48c6f03a 	xor	r3,r9,r3
    611c:	1acd883a 	add	r6,r3,r11
    6120:	00c6303a 	nor	r3,zero,r3
    6124:	30c6703a 	and	r3,r6,r3
    6128:	1a86703a 	and	r3,r3,r10
    612c:	183fe01e 	bne	r3,zero,60b0 <__alt_data_end+0xfffe6cb0>
    6130:	10bfff04 	addi	r2,r2,-4
    6134:	21000104 	addi	r4,r4,4
    6138:	40bff636 	bltu	r8,r2,6114 <__alt_data_end+0xfffe6d14>
    613c:	003fdb06 	br	60ac <__alt_data_end+0xfffe6cac>
    6140:	3005883a 	mov	r2,r6
    6144:	003fd706 	br	60a4 <__alt_data_end+0xfffe6ca4>

00006148 <memcpy>:
    6148:	defffd04 	addi	sp,sp,-12
    614c:	dfc00215 	stw	ra,8(sp)
    6150:	dc400115 	stw	r17,4(sp)
    6154:	dc000015 	stw	r16,0(sp)
    6158:	00c003c4 	movi	r3,15
    615c:	2005883a 	mov	r2,r4
    6160:	1980452e 	bgeu	r3,r6,6278 <memcpy+0x130>
    6164:	2906b03a 	or	r3,r5,r4
    6168:	18c000cc 	andi	r3,r3,3
    616c:	1800441e 	bne	r3,zero,6280 <memcpy+0x138>
    6170:	347ffc04 	addi	r17,r6,-16
    6174:	8822d13a 	srli	r17,r17,4
    6178:	28c00104 	addi	r3,r5,4
    617c:	23400104 	addi	r13,r4,4
    6180:	8820913a 	slli	r16,r17,4
    6184:	2b000204 	addi	r12,r5,8
    6188:	22c00204 	addi	r11,r4,8
    618c:	84000504 	addi	r16,r16,20
    6190:	2a800304 	addi	r10,r5,12
    6194:	22400304 	addi	r9,r4,12
    6198:	2c21883a 	add	r16,r5,r16
    619c:	2811883a 	mov	r8,r5
    61a0:	200f883a 	mov	r7,r4
    61a4:	41000017 	ldw	r4,0(r8)
    61a8:	1fc00017 	ldw	ra,0(r3)
    61ac:	63c00017 	ldw	r15,0(r12)
    61b0:	39000015 	stw	r4,0(r7)
    61b4:	53800017 	ldw	r14,0(r10)
    61b8:	6fc00015 	stw	ra,0(r13)
    61bc:	5bc00015 	stw	r15,0(r11)
    61c0:	4b800015 	stw	r14,0(r9)
    61c4:	18c00404 	addi	r3,r3,16
    61c8:	39c00404 	addi	r7,r7,16
    61cc:	42000404 	addi	r8,r8,16
    61d0:	6b400404 	addi	r13,r13,16
    61d4:	63000404 	addi	r12,r12,16
    61d8:	5ac00404 	addi	r11,r11,16
    61dc:	52800404 	addi	r10,r10,16
    61e0:	4a400404 	addi	r9,r9,16
    61e4:	1c3fef1e 	bne	r3,r16,61a4 <__alt_data_end+0xfffe6da4>
    61e8:	89c00044 	addi	r7,r17,1
    61ec:	380e913a 	slli	r7,r7,4
    61f0:	310003cc 	andi	r4,r6,15
    61f4:	02c000c4 	movi	r11,3
    61f8:	11c7883a 	add	r3,r2,r7
    61fc:	29cb883a 	add	r5,r5,r7
    6200:	5900212e 	bgeu	r11,r4,6288 <memcpy+0x140>
    6204:	1813883a 	mov	r9,r3
    6208:	2811883a 	mov	r8,r5
    620c:	200f883a 	mov	r7,r4
    6210:	42800017 	ldw	r10,0(r8)
    6214:	4a400104 	addi	r9,r9,4
    6218:	39ffff04 	addi	r7,r7,-4
    621c:	4abfff15 	stw	r10,-4(r9)
    6220:	42000104 	addi	r8,r8,4
    6224:	59fffa36 	bltu	r11,r7,6210 <__alt_data_end+0xfffe6e10>
    6228:	213fff04 	addi	r4,r4,-4
    622c:	2008d0ba 	srli	r4,r4,2
    6230:	318000cc 	andi	r6,r6,3
    6234:	21000044 	addi	r4,r4,1
    6238:	2109883a 	add	r4,r4,r4
    623c:	2109883a 	add	r4,r4,r4
    6240:	1907883a 	add	r3,r3,r4
    6244:	290b883a 	add	r5,r5,r4
    6248:	30000626 	beq	r6,zero,6264 <memcpy+0x11c>
    624c:	198d883a 	add	r6,r3,r6
    6250:	29c00003 	ldbu	r7,0(r5)
    6254:	18c00044 	addi	r3,r3,1
    6258:	29400044 	addi	r5,r5,1
    625c:	19ffffc5 	stb	r7,-1(r3)
    6260:	19bffb1e 	bne	r3,r6,6250 <__alt_data_end+0xfffe6e50>
    6264:	dfc00217 	ldw	ra,8(sp)
    6268:	dc400117 	ldw	r17,4(sp)
    626c:	dc000017 	ldw	r16,0(sp)
    6270:	dec00304 	addi	sp,sp,12
    6274:	f800283a 	ret
    6278:	2007883a 	mov	r3,r4
    627c:	003ff206 	br	6248 <__alt_data_end+0xfffe6e48>
    6280:	2007883a 	mov	r3,r4
    6284:	003ff106 	br	624c <__alt_data_end+0xfffe6e4c>
    6288:	200d883a 	mov	r6,r4
    628c:	003fee06 	br	6248 <__alt_data_end+0xfffe6e48>

00006290 <memset>:
    6290:	20c000cc 	andi	r3,r4,3
    6294:	2005883a 	mov	r2,r4
    6298:	18004426 	beq	r3,zero,63ac <memset+0x11c>
    629c:	31ffffc4 	addi	r7,r6,-1
    62a0:	30004026 	beq	r6,zero,63a4 <memset+0x114>
    62a4:	2813883a 	mov	r9,r5
    62a8:	200d883a 	mov	r6,r4
    62ac:	2007883a 	mov	r3,r4
    62b0:	00000406 	br	62c4 <memset+0x34>
    62b4:	3a3fffc4 	addi	r8,r7,-1
    62b8:	31800044 	addi	r6,r6,1
    62bc:	38003926 	beq	r7,zero,63a4 <memset+0x114>
    62c0:	400f883a 	mov	r7,r8
    62c4:	18c00044 	addi	r3,r3,1
    62c8:	32400005 	stb	r9,0(r6)
    62cc:	1a0000cc 	andi	r8,r3,3
    62d0:	403ff81e 	bne	r8,zero,62b4 <__alt_data_end+0xfffe6eb4>
    62d4:	010000c4 	movi	r4,3
    62d8:	21c02d2e 	bgeu	r4,r7,6390 <memset+0x100>
    62dc:	29003fcc 	andi	r4,r5,255
    62e0:	200c923a 	slli	r6,r4,8
    62e4:	3108b03a 	or	r4,r6,r4
    62e8:	200c943a 	slli	r6,r4,16
    62ec:	218cb03a 	or	r6,r4,r6
    62f0:	010003c4 	movi	r4,15
    62f4:	21c0182e 	bgeu	r4,r7,6358 <memset+0xc8>
    62f8:	3b3ffc04 	addi	r12,r7,-16
    62fc:	6018d13a 	srli	r12,r12,4
    6300:	1a000104 	addi	r8,r3,4
    6304:	1ac00204 	addi	r11,r3,8
    6308:	6008913a 	slli	r4,r12,4
    630c:	1a800304 	addi	r10,r3,12
    6310:	1813883a 	mov	r9,r3
    6314:	21000504 	addi	r4,r4,20
    6318:	1909883a 	add	r4,r3,r4
    631c:	49800015 	stw	r6,0(r9)
    6320:	41800015 	stw	r6,0(r8)
    6324:	59800015 	stw	r6,0(r11)
    6328:	51800015 	stw	r6,0(r10)
    632c:	42000404 	addi	r8,r8,16
    6330:	4a400404 	addi	r9,r9,16
    6334:	5ac00404 	addi	r11,r11,16
    6338:	52800404 	addi	r10,r10,16
    633c:	413ff71e 	bne	r8,r4,631c <__alt_data_end+0xfffe6f1c>
    6340:	63000044 	addi	r12,r12,1
    6344:	6018913a 	slli	r12,r12,4
    6348:	39c003cc 	andi	r7,r7,15
    634c:	010000c4 	movi	r4,3
    6350:	1b07883a 	add	r3,r3,r12
    6354:	21c00e2e 	bgeu	r4,r7,6390 <memset+0x100>
    6358:	1813883a 	mov	r9,r3
    635c:	3811883a 	mov	r8,r7
    6360:	010000c4 	movi	r4,3
    6364:	49800015 	stw	r6,0(r9)
    6368:	423fff04 	addi	r8,r8,-4
    636c:	4a400104 	addi	r9,r9,4
    6370:	223ffc36 	bltu	r4,r8,6364 <__alt_data_end+0xfffe6f64>
    6374:	393fff04 	addi	r4,r7,-4
    6378:	2008d0ba 	srli	r4,r4,2
    637c:	39c000cc 	andi	r7,r7,3
    6380:	21000044 	addi	r4,r4,1
    6384:	2109883a 	add	r4,r4,r4
    6388:	2109883a 	add	r4,r4,r4
    638c:	1907883a 	add	r3,r3,r4
    6390:	38000526 	beq	r7,zero,63a8 <memset+0x118>
    6394:	19cf883a 	add	r7,r3,r7
    6398:	19400005 	stb	r5,0(r3)
    639c:	18c00044 	addi	r3,r3,1
    63a0:	38fffd1e 	bne	r7,r3,6398 <__alt_data_end+0xfffe6f98>
    63a4:	f800283a 	ret
    63a8:	f800283a 	ret
    63ac:	2007883a 	mov	r3,r4
    63b0:	300f883a 	mov	r7,r6
    63b4:	003fc706 	br	62d4 <__alt_data_end+0xfffe6ed4>

000063b8 <_Balloc>:
    63b8:	20801317 	ldw	r2,76(r4)
    63bc:	defffc04 	addi	sp,sp,-16
    63c0:	dc400115 	stw	r17,4(sp)
    63c4:	dc000015 	stw	r16,0(sp)
    63c8:	dfc00315 	stw	ra,12(sp)
    63cc:	dc800215 	stw	r18,8(sp)
    63d0:	2023883a 	mov	r17,r4
    63d4:	2821883a 	mov	r16,r5
    63d8:	10000f26 	beq	r2,zero,6418 <_Balloc+0x60>
    63dc:	8407883a 	add	r3,r16,r16
    63e0:	18c7883a 	add	r3,r3,r3
    63e4:	10c7883a 	add	r3,r2,r3
    63e8:	18800017 	ldw	r2,0(r3)
    63ec:	10001126 	beq	r2,zero,6434 <_Balloc+0x7c>
    63f0:	11000017 	ldw	r4,0(r2)
    63f4:	19000015 	stw	r4,0(r3)
    63f8:	10000415 	stw	zero,16(r2)
    63fc:	10000315 	stw	zero,12(r2)
    6400:	dfc00317 	ldw	ra,12(sp)
    6404:	dc800217 	ldw	r18,8(sp)
    6408:	dc400117 	ldw	r17,4(sp)
    640c:	dc000017 	ldw	r16,0(sp)
    6410:	dec00404 	addi	sp,sp,16
    6414:	f800283a 	ret
    6418:	01800844 	movi	r6,33
    641c:	01400104 	movi	r5,4
    6420:	0008eb80 	call	8eb8 <_calloc_r>
    6424:	88801315 	stw	r2,76(r17)
    6428:	103fec1e 	bne	r2,zero,63dc <__alt_data_end+0xfffe6fdc>
    642c:	0005883a 	mov	r2,zero
    6430:	003ff306 	br	6400 <__alt_data_end+0xfffe7000>
    6434:	01400044 	movi	r5,1
    6438:	2c24983a 	sll	r18,r5,r16
    643c:	8809883a 	mov	r4,r17
    6440:	91800144 	addi	r6,r18,5
    6444:	318d883a 	add	r6,r6,r6
    6448:	318d883a 	add	r6,r6,r6
    644c:	0008eb80 	call	8eb8 <_calloc_r>
    6450:	103ff626 	beq	r2,zero,642c <__alt_data_end+0xfffe702c>
    6454:	14000115 	stw	r16,4(r2)
    6458:	14800215 	stw	r18,8(r2)
    645c:	003fe606 	br	63f8 <__alt_data_end+0xfffe6ff8>

00006460 <_Bfree>:
    6460:	28000826 	beq	r5,zero,6484 <_Bfree+0x24>
    6464:	28c00117 	ldw	r3,4(r5)
    6468:	20801317 	ldw	r2,76(r4)
    646c:	18c7883a 	add	r3,r3,r3
    6470:	18c7883a 	add	r3,r3,r3
    6474:	10c5883a 	add	r2,r2,r3
    6478:	10c00017 	ldw	r3,0(r2)
    647c:	28c00015 	stw	r3,0(r5)
    6480:	11400015 	stw	r5,0(r2)
    6484:	f800283a 	ret

00006488 <__multadd>:
    6488:	defff704 	addi	sp,sp,-36
    648c:	dc800215 	stw	r18,8(sp)
    6490:	2c800417 	ldw	r18,16(r5)
    6494:	dd800615 	stw	r22,24(sp)
    6498:	dd400515 	stw	r21,20(sp)
    649c:	dd000415 	stw	r20,16(sp)
    64a0:	dcc00315 	stw	r19,12(sp)
    64a4:	dc400115 	stw	r17,4(sp)
    64a8:	dc000015 	stw	r16,0(sp)
    64ac:	dfc00815 	stw	ra,32(sp)
    64b0:	ddc00715 	stw	r23,28(sp)
    64b4:	2827883a 	mov	r19,r5
    64b8:	2029883a 	mov	r20,r4
    64bc:	3023883a 	mov	r17,r6
    64c0:	3821883a 	mov	r16,r7
    64c4:	2d400504 	addi	r21,r5,20
    64c8:	002d883a 	mov	r22,zero
    64cc:	adc00017 	ldw	r23,0(r21)
    64d0:	880b883a 	mov	r5,r17
    64d4:	ad400104 	addi	r21,r21,4
    64d8:	b93fffcc 	andi	r4,r23,65535
    64dc:	000b04c0 	call	b04c <__mulsi3>
    64e0:	b808d43a 	srli	r4,r23,16
    64e4:	880b883a 	mov	r5,r17
    64e8:	1421883a 	add	r16,r2,r16
    64ec:	000b04c0 	call	b04c <__mulsi3>
    64f0:	800ed43a 	srli	r7,r16,16
    64f4:	80ffffcc 	andi	r3,r16,65535
    64f8:	b5800044 	addi	r22,r22,1
    64fc:	11c5883a 	add	r2,r2,r7
    6500:	100e943a 	slli	r7,r2,16
    6504:	1020d43a 	srli	r16,r2,16
    6508:	38c7883a 	add	r3,r7,r3
    650c:	a8ffff15 	stw	r3,-4(r21)
    6510:	b4bfee16 	blt	r22,r18,64cc <__alt_data_end+0xfffe70cc>
    6514:	80000926 	beq	r16,zero,653c <__multadd+0xb4>
    6518:	98800217 	ldw	r2,8(r19)
    651c:	9080130e 	bge	r18,r2,656c <__multadd+0xe4>
    6520:	90800144 	addi	r2,r18,5
    6524:	1085883a 	add	r2,r2,r2
    6528:	1085883a 	add	r2,r2,r2
    652c:	9885883a 	add	r2,r19,r2
    6530:	14000015 	stw	r16,0(r2)
    6534:	94800044 	addi	r18,r18,1
    6538:	9c800415 	stw	r18,16(r19)
    653c:	9805883a 	mov	r2,r19
    6540:	dfc00817 	ldw	ra,32(sp)
    6544:	ddc00717 	ldw	r23,28(sp)
    6548:	dd800617 	ldw	r22,24(sp)
    654c:	dd400517 	ldw	r21,20(sp)
    6550:	dd000417 	ldw	r20,16(sp)
    6554:	dcc00317 	ldw	r19,12(sp)
    6558:	dc800217 	ldw	r18,8(sp)
    655c:	dc400117 	ldw	r17,4(sp)
    6560:	dc000017 	ldw	r16,0(sp)
    6564:	dec00904 	addi	sp,sp,36
    6568:	f800283a 	ret
    656c:	99400117 	ldw	r5,4(r19)
    6570:	a009883a 	mov	r4,r20
    6574:	29400044 	addi	r5,r5,1
    6578:	00063b80 	call	63b8 <_Balloc>
    657c:	99800417 	ldw	r6,16(r19)
    6580:	99400304 	addi	r5,r19,12
    6584:	11000304 	addi	r4,r2,12
    6588:	31800084 	addi	r6,r6,2
    658c:	318d883a 	add	r6,r6,r6
    6590:	318d883a 	add	r6,r6,r6
    6594:	1023883a 	mov	r17,r2
    6598:	00061480 	call	6148 <memcpy>
    659c:	98000a26 	beq	r19,zero,65c8 <__multadd+0x140>
    65a0:	98c00117 	ldw	r3,4(r19)
    65a4:	a0801317 	ldw	r2,76(r20)
    65a8:	18c7883a 	add	r3,r3,r3
    65ac:	18c7883a 	add	r3,r3,r3
    65b0:	10c5883a 	add	r2,r2,r3
    65b4:	10c00017 	ldw	r3,0(r2)
    65b8:	98c00015 	stw	r3,0(r19)
    65bc:	14c00015 	stw	r19,0(r2)
    65c0:	8827883a 	mov	r19,r17
    65c4:	003fd606 	br	6520 <__alt_data_end+0xfffe7120>
    65c8:	8827883a 	mov	r19,r17
    65cc:	003fd406 	br	6520 <__alt_data_end+0xfffe7120>

000065d0 <__s2b>:
    65d0:	defff904 	addi	sp,sp,-28
    65d4:	dc400115 	stw	r17,4(sp)
    65d8:	dc000015 	stw	r16,0(sp)
    65dc:	2023883a 	mov	r17,r4
    65e0:	2821883a 	mov	r16,r5
    65e4:	39000204 	addi	r4,r7,8
    65e8:	01400244 	movi	r5,9
    65ec:	dcc00315 	stw	r19,12(sp)
    65f0:	dc800215 	stw	r18,8(sp)
    65f4:	dfc00615 	stw	ra,24(sp)
    65f8:	dd400515 	stw	r21,20(sp)
    65fc:	dd000415 	stw	r20,16(sp)
    6600:	3825883a 	mov	r18,r7
    6604:	3027883a 	mov	r19,r6
    6608:	000ae980 	call	ae98 <__divsi3>
    660c:	00c00044 	movi	r3,1
    6610:	000b883a 	mov	r5,zero
    6614:	1880030e 	bge	r3,r2,6624 <__s2b+0x54>
    6618:	18c7883a 	add	r3,r3,r3
    661c:	29400044 	addi	r5,r5,1
    6620:	18bffd16 	blt	r3,r2,6618 <__alt_data_end+0xfffe7218>
    6624:	8809883a 	mov	r4,r17
    6628:	00063b80 	call	63b8 <_Balloc>
    662c:	d8c00717 	ldw	r3,28(sp)
    6630:	10c00515 	stw	r3,20(r2)
    6634:	00c00044 	movi	r3,1
    6638:	10c00415 	stw	r3,16(r2)
    663c:	00c00244 	movi	r3,9
    6640:	1cc0210e 	bge	r3,r19,66c8 <__s2b+0xf8>
    6644:	80eb883a 	add	r21,r16,r3
    6648:	a829883a 	mov	r20,r21
    664c:	84e1883a 	add	r16,r16,r19
    6650:	a1c00007 	ldb	r7,0(r20)
    6654:	01800284 	movi	r6,10
    6658:	a5000044 	addi	r20,r20,1
    665c:	100b883a 	mov	r5,r2
    6660:	39fff404 	addi	r7,r7,-48
    6664:	8809883a 	mov	r4,r17
    6668:	00064880 	call	6488 <__multadd>
    666c:	a43ff81e 	bne	r20,r16,6650 <__alt_data_end+0xfffe7250>
    6670:	ace1883a 	add	r16,r21,r19
    6674:	843ffe04 	addi	r16,r16,-8
    6678:	9c800a0e 	bge	r19,r18,66a4 <__s2b+0xd4>
    667c:	94e5c83a 	sub	r18,r18,r19
    6680:	84a5883a 	add	r18,r16,r18
    6684:	81c00007 	ldb	r7,0(r16)
    6688:	01800284 	movi	r6,10
    668c:	84000044 	addi	r16,r16,1
    6690:	100b883a 	mov	r5,r2
    6694:	39fff404 	addi	r7,r7,-48
    6698:	8809883a 	mov	r4,r17
    669c:	00064880 	call	6488 <__multadd>
    66a0:	84bff81e 	bne	r16,r18,6684 <__alt_data_end+0xfffe7284>
    66a4:	dfc00617 	ldw	ra,24(sp)
    66a8:	dd400517 	ldw	r21,20(sp)
    66ac:	dd000417 	ldw	r20,16(sp)
    66b0:	dcc00317 	ldw	r19,12(sp)
    66b4:	dc800217 	ldw	r18,8(sp)
    66b8:	dc400117 	ldw	r17,4(sp)
    66bc:	dc000017 	ldw	r16,0(sp)
    66c0:	dec00704 	addi	sp,sp,28
    66c4:	f800283a 	ret
    66c8:	84000284 	addi	r16,r16,10
    66cc:	1827883a 	mov	r19,r3
    66d0:	003fe906 	br	6678 <__alt_data_end+0xfffe7278>

000066d4 <__hi0bits>:
    66d4:	20bfffec 	andhi	r2,r4,65535
    66d8:	1000141e 	bne	r2,zero,672c <__hi0bits+0x58>
    66dc:	2008943a 	slli	r4,r4,16
    66e0:	00800404 	movi	r2,16
    66e4:	20ffc02c 	andhi	r3,r4,65280
    66e8:	1800021e 	bne	r3,zero,66f4 <__hi0bits+0x20>
    66ec:	2008923a 	slli	r4,r4,8
    66f0:	10800204 	addi	r2,r2,8
    66f4:	20fc002c 	andhi	r3,r4,61440
    66f8:	1800021e 	bne	r3,zero,6704 <__hi0bits+0x30>
    66fc:	2008913a 	slli	r4,r4,4
    6700:	10800104 	addi	r2,r2,4
    6704:	20f0002c 	andhi	r3,r4,49152
    6708:	1800031e 	bne	r3,zero,6718 <__hi0bits+0x44>
    670c:	2109883a 	add	r4,r4,r4
    6710:	10800084 	addi	r2,r2,2
    6714:	2109883a 	add	r4,r4,r4
    6718:	20000316 	blt	r4,zero,6728 <__hi0bits+0x54>
    671c:	2110002c 	andhi	r4,r4,16384
    6720:	2000041e 	bne	r4,zero,6734 <__hi0bits+0x60>
    6724:	00800804 	movi	r2,32
    6728:	f800283a 	ret
    672c:	0005883a 	mov	r2,zero
    6730:	003fec06 	br	66e4 <__alt_data_end+0xfffe72e4>
    6734:	10800044 	addi	r2,r2,1
    6738:	f800283a 	ret

0000673c <__lo0bits>:
    673c:	20c00017 	ldw	r3,0(r4)
    6740:	188001cc 	andi	r2,r3,7
    6744:	10000826 	beq	r2,zero,6768 <__lo0bits+0x2c>
    6748:	1880004c 	andi	r2,r3,1
    674c:	1000211e 	bne	r2,zero,67d4 <__lo0bits+0x98>
    6750:	1880008c 	andi	r2,r3,2
    6754:	1000211e 	bne	r2,zero,67dc <__lo0bits+0xa0>
    6758:	1806d0ba 	srli	r3,r3,2
    675c:	00800084 	movi	r2,2
    6760:	20c00015 	stw	r3,0(r4)
    6764:	f800283a 	ret
    6768:	18bfffcc 	andi	r2,r3,65535
    676c:	10001326 	beq	r2,zero,67bc <__lo0bits+0x80>
    6770:	0005883a 	mov	r2,zero
    6774:	19403fcc 	andi	r5,r3,255
    6778:	2800021e 	bne	r5,zero,6784 <__lo0bits+0x48>
    677c:	1806d23a 	srli	r3,r3,8
    6780:	10800204 	addi	r2,r2,8
    6784:	194003cc 	andi	r5,r3,15
    6788:	2800021e 	bne	r5,zero,6794 <__lo0bits+0x58>
    678c:	1806d13a 	srli	r3,r3,4
    6790:	10800104 	addi	r2,r2,4
    6794:	194000cc 	andi	r5,r3,3
    6798:	2800021e 	bne	r5,zero,67a4 <__lo0bits+0x68>
    679c:	1806d0ba 	srli	r3,r3,2
    67a0:	10800084 	addi	r2,r2,2
    67a4:	1940004c 	andi	r5,r3,1
    67a8:	2800081e 	bne	r5,zero,67cc <__lo0bits+0x90>
    67ac:	1806d07a 	srli	r3,r3,1
    67b0:	1800051e 	bne	r3,zero,67c8 <__lo0bits+0x8c>
    67b4:	00800804 	movi	r2,32
    67b8:	f800283a 	ret
    67bc:	1806d43a 	srli	r3,r3,16
    67c0:	00800404 	movi	r2,16
    67c4:	003feb06 	br	6774 <__alt_data_end+0xfffe7374>
    67c8:	10800044 	addi	r2,r2,1
    67cc:	20c00015 	stw	r3,0(r4)
    67d0:	f800283a 	ret
    67d4:	0005883a 	mov	r2,zero
    67d8:	f800283a 	ret
    67dc:	1806d07a 	srli	r3,r3,1
    67e0:	00800044 	movi	r2,1
    67e4:	20c00015 	stw	r3,0(r4)
    67e8:	f800283a 	ret

000067ec <__i2b>:
    67ec:	defffd04 	addi	sp,sp,-12
    67f0:	dc000015 	stw	r16,0(sp)
    67f4:	04000044 	movi	r16,1
    67f8:	dc400115 	stw	r17,4(sp)
    67fc:	2823883a 	mov	r17,r5
    6800:	800b883a 	mov	r5,r16
    6804:	dfc00215 	stw	ra,8(sp)
    6808:	00063b80 	call	63b8 <_Balloc>
    680c:	14400515 	stw	r17,20(r2)
    6810:	14000415 	stw	r16,16(r2)
    6814:	dfc00217 	ldw	ra,8(sp)
    6818:	dc400117 	ldw	r17,4(sp)
    681c:	dc000017 	ldw	r16,0(sp)
    6820:	dec00304 	addi	sp,sp,12
    6824:	f800283a 	ret

00006828 <__multiply>:
    6828:	deffef04 	addi	sp,sp,-68
    682c:	dc400815 	stw	r17,32(sp)
    6830:	dc000715 	stw	r16,28(sp)
    6834:	34400417 	ldw	r17,16(r6)
    6838:	2c000417 	ldw	r16,16(r5)
    683c:	dd800d15 	stw	r22,52(sp)
    6840:	dc800915 	stw	r18,36(sp)
    6844:	dfc01015 	stw	ra,64(sp)
    6848:	df000f15 	stw	fp,60(sp)
    684c:	ddc00e15 	stw	r23,56(sp)
    6850:	dd400c15 	stw	r21,48(sp)
    6854:	dd000b15 	stw	r20,44(sp)
    6858:	dcc00a15 	stw	r19,40(sp)
    685c:	2825883a 	mov	r18,r5
    6860:	302d883a 	mov	r22,r6
    6864:	8440050e 	bge	r16,r17,687c <__multiply+0x54>
    6868:	8007883a 	mov	r3,r16
    686c:	3025883a 	mov	r18,r6
    6870:	8821883a 	mov	r16,r17
    6874:	282d883a 	mov	r22,r5
    6878:	1823883a 	mov	r17,r3
    687c:	90800217 	ldw	r2,8(r18)
    6880:	8447883a 	add	r3,r16,r17
    6884:	d8c00215 	stw	r3,8(sp)
    6888:	91400117 	ldw	r5,4(r18)
    688c:	10c0010e 	bge	r2,r3,6894 <__multiply+0x6c>
    6890:	29400044 	addi	r5,r5,1
    6894:	00063b80 	call	63b8 <_Balloc>
    6898:	d8c00217 	ldw	r3,8(sp)
    689c:	d8800615 	stw	r2,24(sp)
    68a0:	18eb883a 	add	r21,r3,r3
    68a4:	ad6b883a 	add	r21,r21,r21
    68a8:	10c00504 	addi	r3,r2,20
    68ac:	1d6b883a 	add	r21,r3,r21
    68b0:	d8c00115 	stw	r3,4(sp)
    68b4:	dd400315 	stw	r21,12(sp)
    68b8:	1805883a 	mov	r2,r3
    68bc:	1d40042e 	bgeu	r3,r21,68d0 <__multiply+0xa8>
    68c0:	d8c00317 	ldw	r3,12(sp)
    68c4:	10000015 	stw	zero,0(r2)
    68c8:	10800104 	addi	r2,r2,4
    68cc:	10fffc36 	bltu	r2,r3,68c0 <__alt_data_end+0xfffe74c0>
    68d0:	8c63883a 	add	r17,r17,r17
    68d4:	b5800504 	addi	r22,r22,20
    68d8:	8c63883a 	add	r17,r17,r17
    68dc:	94800504 	addi	r18,r18,20
    68e0:	8421883a 	add	r16,r16,r16
    68e4:	b463883a 	add	r17,r22,r17
    68e8:	8421883a 	add	r16,r16,r16
    68ec:	dd800015 	stw	r22,0(sp)
    68f0:	dc800415 	stw	r18,16(sp)
    68f4:	dc400515 	stw	r17,20(sp)
    68f8:	9429883a 	add	r20,r18,r16
    68fc:	b4404f2e 	bgeu	r22,r17,6a3c <__multiply+0x214>
    6900:	d8c00017 	ldw	r3,0(sp)
    6904:	1c800017 	ldw	r18,0(r3)
    6908:	947fffcc 	andi	r17,r18,65535
    690c:	88001e26 	beq	r17,zero,6988 <__multiply+0x160>
    6910:	dd800117 	ldw	r22,4(sp)
    6914:	dd400417 	ldw	r21,16(sp)
    6918:	0027883a 	mov	r19,zero
    691c:	ac800017 	ldw	r18,0(r21)
    6920:	b4000017 	ldw	r16,0(r22)
    6924:	880b883a 	mov	r5,r17
    6928:	913fffcc 	andi	r4,r18,65535
    692c:	000b04c0 	call	b04c <__mulsi3>
    6930:	9008d43a 	srli	r4,r18,16
    6934:	84bfffcc 	andi	r18,r16,65535
    6938:	1485883a 	add	r2,r2,r18
    693c:	14e5883a 	add	r18,r2,r19
    6940:	8020d43a 	srli	r16,r16,16
    6944:	9026d43a 	srli	r19,r18,16
    6948:	880b883a 	mov	r5,r17
    694c:	000b04c0 	call	b04c <__mulsi3>
    6950:	1405883a 	add	r2,r2,r16
    6954:	14e1883a 	add	r16,r2,r19
    6958:	90ffffcc 	andi	r3,r18,65535
    695c:	8024943a 	slli	r18,r16,16
    6960:	ad400104 	addi	r21,r21,4
    6964:	b005883a 	mov	r2,r22
    6968:	90c6b03a 	or	r3,r18,r3
    696c:	b0c00015 	stw	r3,0(r22)
    6970:	8026d43a 	srli	r19,r16,16
    6974:	b5800104 	addi	r22,r22,4
    6978:	ad3fe836 	bltu	r21,r20,691c <__alt_data_end+0xfffe751c>
    697c:	d8c00017 	ldw	r3,0(sp)
    6980:	14c00115 	stw	r19,4(r2)
    6984:	1c800017 	ldw	r18,0(r3)
    6988:	9024d43a 	srli	r18,r18,16
    698c:	90002226 	beq	r18,zero,6a18 <__multiply+0x1f0>
    6990:	d8c00117 	ldw	r3,4(sp)
    6994:	dd800417 	ldw	r22,16(sp)
    6998:	002f883a 	mov	r23,zero
    699c:	1f000017 	ldw	fp,0(r3)
    69a0:	1823883a 	mov	r17,r3
    69a4:	182b883a 	mov	r21,r3
    69a8:	e021883a 	mov	r16,fp
    69ac:	00000106 	br	69b4 <__multiply+0x18c>
    69b0:	982b883a 	mov	r21,r19
    69b4:	b100000b 	ldhu	r4,0(r22)
    69b8:	8020d43a 	srli	r16,r16,16
    69bc:	900b883a 	mov	r5,r18
    69c0:	000b04c0 	call	b04c <__mulsi3>
    69c4:	1405883a 	add	r2,r2,r16
    69c8:	15ef883a 	add	r23,r2,r23
    69cc:	b804943a 	slli	r2,r23,16
    69d0:	e0ffffcc 	andi	r3,fp,65535
    69d4:	8c400104 	addi	r17,r17,4
    69d8:	10c6b03a 	or	r3,r2,r3
    69dc:	88ffff15 	stw	r3,-4(r17)
    69e0:	b5800104 	addi	r22,r22,4
    69e4:	b13fff17 	ldw	r4,-4(r22)
    69e8:	acc00104 	addi	r19,r21,4
    69ec:	900b883a 	mov	r5,r18
    69f0:	2008d43a 	srli	r4,r4,16
    69f4:	9c000017 	ldw	r16,0(r19)
    69f8:	000b04c0 	call	b04c <__mulsi3>
    69fc:	b806d43a 	srli	r3,r23,16
    6a00:	813fffcc 	andi	r4,r16,65535
    6a04:	1105883a 	add	r2,r2,r4
    6a08:	10f9883a 	add	fp,r2,r3
    6a0c:	e02ed43a 	srli	r23,fp,16
    6a10:	b53fe736 	bltu	r22,r20,69b0 <__alt_data_end+0xfffe75b0>
    6a14:	af000115 	stw	fp,4(r21)
    6a18:	d8c00017 	ldw	r3,0(sp)
    6a1c:	d9000517 	ldw	r4,20(sp)
    6a20:	18c00104 	addi	r3,r3,4
    6a24:	d8c00015 	stw	r3,0(sp)
    6a28:	d8c00117 	ldw	r3,4(sp)
    6a2c:	18c00104 	addi	r3,r3,4
    6a30:	d8c00115 	stw	r3,4(sp)
    6a34:	d8c00017 	ldw	r3,0(sp)
    6a38:	193fb136 	bltu	r3,r4,6900 <__alt_data_end+0xfffe7500>
    6a3c:	d8c00217 	ldw	r3,8(sp)
    6a40:	00c00c0e 	bge	zero,r3,6a74 <__multiply+0x24c>
    6a44:	d8c00317 	ldw	r3,12(sp)
    6a48:	18bfff17 	ldw	r2,-4(r3)
    6a4c:	1d7fff04 	addi	r21,r3,-4
    6a50:	10000326 	beq	r2,zero,6a60 <__multiply+0x238>
    6a54:	00000706 	br	6a74 <__multiply+0x24c>
    6a58:	a8800017 	ldw	r2,0(r21)
    6a5c:	1000051e 	bne	r2,zero,6a74 <__multiply+0x24c>
    6a60:	d8c00217 	ldw	r3,8(sp)
    6a64:	ad7fff04 	addi	r21,r21,-4
    6a68:	18ffffc4 	addi	r3,r3,-1
    6a6c:	d8c00215 	stw	r3,8(sp)
    6a70:	183ff91e 	bne	r3,zero,6a58 <__alt_data_end+0xfffe7658>
    6a74:	d8c00617 	ldw	r3,24(sp)
    6a78:	d9000217 	ldw	r4,8(sp)
    6a7c:	1805883a 	mov	r2,r3
    6a80:	19000415 	stw	r4,16(r3)
    6a84:	dfc01017 	ldw	ra,64(sp)
    6a88:	df000f17 	ldw	fp,60(sp)
    6a8c:	ddc00e17 	ldw	r23,56(sp)
    6a90:	dd800d17 	ldw	r22,52(sp)
    6a94:	dd400c17 	ldw	r21,48(sp)
    6a98:	dd000b17 	ldw	r20,44(sp)
    6a9c:	dcc00a17 	ldw	r19,40(sp)
    6aa0:	dc800917 	ldw	r18,36(sp)
    6aa4:	dc400817 	ldw	r17,32(sp)
    6aa8:	dc000717 	ldw	r16,28(sp)
    6aac:	dec01104 	addi	sp,sp,68
    6ab0:	f800283a 	ret

00006ab4 <__pow5mult>:
    6ab4:	defffa04 	addi	sp,sp,-24
    6ab8:	dcc00315 	stw	r19,12(sp)
    6abc:	dc000015 	stw	r16,0(sp)
    6ac0:	dfc00515 	stw	ra,20(sp)
    6ac4:	dd000415 	stw	r20,16(sp)
    6ac8:	dc800215 	stw	r18,8(sp)
    6acc:	dc400115 	stw	r17,4(sp)
    6ad0:	308000cc 	andi	r2,r6,3
    6ad4:	3021883a 	mov	r16,r6
    6ad8:	2027883a 	mov	r19,r4
    6adc:	10002f1e 	bne	r2,zero,6b9c <__pow5mult+0xe8>
    6ae0:	2825883a 	mov	r18,r5
    6ae4:	8021d0ba 	srai	r16,r16,2
    6ae8:	80001a26 	beq	r16,zero,6b54 <__pow5mult+0xa0>
    6aec:	9c401217 	ldw	r17,72(r19)
    6af0:	8800061e 	bne	r17,zero,6b0c <__pow5mult+0x58>
    6af4:	00003406 	br	6bc8 <__pow5mult+0x114>
    6af8:	8021d07a 	srai	r16,r16,1
    6afc:	80001526 	beq	r16,zero,6b54 <__pow5mult+0xa0>
    6b00:	88800017 	ldw	r2,0(r17)
    6b04:	10001c26 	beq	r2,zero,6b78 <__pow5mult+0xc4>
    6b08:	1023883a 	mov	r17,r2
    6b0c:	8080004c 	andi	r2,r16,1
    6b10:	103ff926 	beq	r2,zero,6af8 <__alt_data_end+0xfffe76f8>
    6b14:	880d883a 	mov	r6,r17
    6b18:	900b883a 	mov	r5,r18
    6b1c:	9809883a 	mov	r4,r19
    6b20:	00068280 	call	6828 <__multiply>
    6b24:	90001b26 	beq	r18,zero,6b94 <__pow5mult+0xe0>
    6b28:	91000117 	ldw	r4,4(r18)
    6b2c:	98c01317 	ldw	r3,76(r19)
    6b30:	8021d07a 	srai	r16,r16,1
    6b34:	2109883a 	add	r4,r4,r4
    6b38:	2109883a 	add	r4,r4,r4
    6b3c:	1907883a 	add	r3,r3,r4
    6b40:	19000017 	ldw	r4,0(r3)
    6b44:	91000015 	stw	r4,0(r18)
    6b48:	1c800015 	stw	r18,0(r3)
    6b4c:	1025883a 	mov	r18,r2
    6b50:	803feb1e 	bne	r16,zero,6b00 <__alt_data_end+0xfffe7700>
    6b54:	9005883a 	mov	r2,r18
    6b58:	dfc00517 	ldw	ra,20(sp)
    6b5c:	dd000417 	ldw	r20,16(sp)
    6b60:	dcc00317 	ldw	r19,12(sp)
    6b64:	dc800217 	ldw	r18,8(sp)
    6b68:	dc400117 	ldw	r17,4(sp)
    6b6c:	dc000017 	ldw	r16,0(sp)
    6b70:	dec00604 	addi	sp,sp,24
    6b74:	f800283a 	ret
    6b78:	880d883a 	mov	r6,r17
    6b7c:	880b883a 	mov	r5,r17
    6b80:	9809883a 	mov	r4,r19
    6b84:	00068280 	call	6828 <__multiply>
    6b88:	88800015 	stw	r2,0(r17)
    6b8c:	10000015 	stw	zero,0(r2)
    6b90:	003fdd06 	br	6b08 <__alt_data_end+0xfffe7708>
    6b94:	1025883a 	mov	r18,r2
    6b98:	003fd706 	br	6af8 <__alt_data_end+0xfffe76f8>
    6b9c:	10bfffc4 	addi	r2,r2,-1
    6ba0:	1085883a 	add	r2,r2,r2
    6ba4:	00c00074 	movhi	r3,1
    6ba8:	18c04304 	addi	r3,r3,268
    6bac:	1085883a 	add	r2,r2,r2
    6bb0:	1885883a 	add	r2,r3,r2
    6bb4:	11800017 	ldw	r6,0(r2)
    6bb8:	000f883a 	mov	r7,zero
    6bbc:	00064880 	call	6488 <__multadd>
    6bc0:	1025883a 	mov	r18,r2
    6bc4:	003fc706 	br	6ae4 <__alt_data_end+0xfffe76e4>
    6bc8:	05000044 	movi	r20,1
    6bcc:	a00b883a 	mov	r5,r20
    6bd0:	9809883a 	mov	r4,r19
    6bd4:	00063b80 	call	63b8 <_Balloc>
    6bd8:	1023883a 	mov	r17,r2
    6bdc:	00809c44 	movi	r2,625
    6be0:	88800515 	stw	r2,20(r17)
    6be4:	8d000415 	stw	r20,16(r17)
    6be8:	9c401215 	stw	r17,72(r19)
    6bec:	88000015 	stw	zero,0(r17)
    6bf0:	003fc606 	br	6b0c <__alt_data_end+0xfffe770c>

00006bf4 <__lshift>:
    6bf4:	defff904 	addi	sp,sp,-28
    6bf8:	dd400515 	stw	r21,20(sp)
    6bfc:	dcc00315 	stw	r19,12(sp)
    6c00:	302bd17a 	srai	r21,r6,5
    6c04:	2cc00417 	ldw	r19,16(r5)
    6c08:	28800217 	ldw	r2,8(r5)
    6c0c:	dd000415 	stw	r20,16(sp)
    6c10:	ace7883a 	add	r19,r21,r19
    6c14:	dc800215 	stw	r18,8(sp)
    6c18:	dc400115 	stw	r17,4(sp)
    6c1c:	dc000015 	stw	r16,0(sp)
    6c20:	dfc00615 	stw	ra,24(sp)
    6c24:	9c000044 	addi	r16,r19,1
    6c28:	2823883a 	mov	r17,r5
    6c2c:	3029883a 	mov	r20,r6
    6c30:	2025883a 	mov	r18,r4
    6c34:	29400117 	ldw	r5,4(r5)
    6c38:	1400030e 	bge	r2,r16,6c48 <__lshift+0x54>
    6c3c:	1085883a 	add	r2,r2,r2
    6c40:	29400044 	addi	r5,r5,1
    6c44:	143ffd16 	blt	r2,r16,6c3c <__alt_data_end+0xfffe783c>
    6c48:	9009883a 	mov	r4,r18
    6c4c:	00063b80 	call	63b8 <_Balloc>
    6c50:	10c00504 	addi	r3,r2,20
    6c54:	0540070e 	bge	zero,r21,6c74 <__lshift+0x80>
    6c58:	ad6b883a 	add	r21,r21,r21
    6c5c:	ad6b883a 	add	r21,r21,r21
    6c60:	1809883a 	mov	r4,r3
    6c64:	1d47883a 	add	r3,r3,r21
    6c68:	20000015 	stw	zero,0(r4)
    6c6c:	21000104 	addi	r4,r4,4
    6c70:	193ffd1e 	bne	r3,r4,6c68 <__alt_data_end+0xfffe7868>
    6c74:	8a000417 	ldw	r8,16(r17)
    6c78:	89000504 	addi	r4,r17,20
    6c7c:	a18007cc 	andi	r6,r20,31
    6c80:	4211883a 	add	r8,r8,r8
    6c84:	4211883a 	add	r8,r8,r8
    6c88:	2211883a 	add	r8,r4,r8
    6c8c:	30002326 	beq	r6,zero,6d1c <__lshift+0x128>
    6c90:	02400804 	movi	r9,32
    6c94:	4993c83a 	sub	r9,r9,r6
    6c98:	000b883a 	mov	r5,zero
    6c9c:	21c00017 	ldw	r7,0(r4)
    6ca0:	1815883a 	mov	r10,r3
    6ca4:	18c00104 	addi	r3,r3,4
    6ca8:	398e983a 	sll	r7,r7,r6
    6cac:	21000104 	addi	r4,r4,4
    6cb0:	394ab03a 	or	r5,r7,r5
    6cb4:	197fff15 	stw	r5,-4(r3)
    6cb8:	217fff17 	ldw	r5,-4(r4)
    6cbc:	2a4ad83a 	srl	r5,r5,r9
    6cc0:	223ff636 	bltu	r4,r8,6c9c <__alt_data_end+0xfffe789c>
    6cc4:	51400115 	stw	r5,4(r10)
    6cc8:	28001a1e 	bne	r5,zero,6d34 <__lshift+0x140>
    6ccc:	843fffc4 	addi	r16,r16,-1
    6cd0:	14000415 	stw	r16,16(r2)
    6cd4:	88000826 	beq	r17,zero,6cf8 <__lshift+0x104>
    6cd8:	89000117 	ldw	r4,4(r17)
    6cdc:	90c01317 	ldw	r3,76(r18)
    6ce0:	2109883a 	add	r4,r4,r4
    6ce4:	2109883a 	add	r4,r4,r4
    6ce8:	1907883a 	add	r3,r3,r4
    6cec:	19000017 	ldw	r4,0(r3)
    6cf0:	89000015 	stw	r4,0(r17)
    6cf4:	1c400015 	stw	r17,0(r3)
    6cf8:	dfc00617 	ldw	ra,24(sp)
    6cfc:	dd400517 	ldw	r21,20(sp)
    6d00:	dd000417 	ldw	r20,16(sp)
    6d04:	dcc00317 	ldw	r19,12(sp)
    6d08:	dc800217 	ldw	r18,8(sp)
    6d0c:	dc400117 	ldw	r17,4(sp)
    6d10:	dc000017 	ldw	r16,0(sp)
    6d14:	dec00704 	addi	sp,sp,28
    6d18:	f800283a 	ret
    6d1c:	21400017 	ldw	r5,0(r4)
    6d20:	18c00104 	addi	r3,r3,4
    6d24:	21000104 	addi	r4,r4,4
    6d28:	197fff15 	stw	r5,-4(r3)
    6d2c:	223ffb36 	bltu	r4,r8,6d1c <__alt_data_end+0xfffe791c>
    6d30:	003fe606 	br	6ccc <__alt_data_end+0xfffe78cc>
    6d34:	9c000084 	addi	r16,r19,2
    6d38:	003fe406 	br	6ccc <__alt_data_end+0xfffe78cc>

00006d3c <__mcmp>:
    6d3c:	20800417 	ldw	r2,16(r4)
    6d40:	28c00417 	ldw	r3,16(r5)
    6d44:	10c5c83a 	sub	r2,r2,r3
    6d48:	1000111e 	bne	r2,zero,6d90 <__mcmp+0x54>
    6d4c:	18c7883a 	add	r3,r3,r3
    6d50:	18c7883a 	add	r3,r3,r3
    6d54:	21000504 	addi	r4,r4,20
    6d58:	29400504 	addi	r5,r5,20
    6d5c:	20c5883a 	add	r2,r4,r3
    6d60:	28cb883a 	add	r5,r5,r3
    6d64:	00000106 	br	6d6c <__mcmp+0x30>
    6d68:	20800a2e 	bgeu	r4,r2,6d94 <__mcmp+0x58>
    6d6c:	10bfff04 	addi	r2,r2,-4
    6d70:	297fff04 	addi	r5,r5,-4
    6d74:	11800017 	ldw	r6,0(r2)
    6d78:	28c00017 	ldw	r3,0(r5)
    6d7c:	30fffa26 	beq	r6,r3,6d68 <__alt_data_end+0xfffe7968>
    6d80:	30c00236 	bltu	r6,r3,6d8c <__mcmp+0x50>
    6d84:	00800044 	movi	r2,1
    6d88:	f800283a 	ret
    6d8c:	00bfffc4 	movi	r2,-1
    6d90:	f800283a 	ret
    6d94:	0005883a 	mov	r2,zero
    6d98:	f800283a 	ret

00006d9c <__mdiff>:
    6d9c:	28c00417 	ldw	r3,16(r5)
    6da0:	30800417 	ldw	r2,16(r6)
    6da4:	defffa04 	addi	sp,sp,-24
    6da8:	dcc00315 	stw	r19,12(sp)
    6dac:	dc800215 	stw	r18,8(sp)
    6db0:	dfc00515 	stw	ra,20(sp)
    6db4:	dd000415 	stw	r20,16(sp)
    6db8:	dc400115 	stw	r17,4(sp)
    6dbc:	dc000015 	stw	r16,0(sp)
    6dc0:	1887c83a 	sub	r3,r3,r2
    6dc4:	2825883a 	mov	r18,r5
    6dc8:	3027883a 	mov	r19,r6
    6dcc:	1800141e 	bne	r3,zero,6e20 <__mdiff+0x84>
    6dd0:	1085883a 	add	r2,r2,r2
    6dd4:	1085883a 	add	r2,r2,r2
    6dd8:	2a000504 	addi	r8,r5,20
    6ddc:	34000504 	addi	r16,r6,20
    6de0:	4087883a 	add	r3,r8,r2
    6de4:	8085883a 	add	r2,r16,r2
    6de8:	00000106 	br	6df0 <__mdiff+0x54>
    6dec:	40c0592e 	bgeu	r8,r3,6f54 <__mdiff+0x1b8>
    6df0:	18ffff04 	addi	r3,r3,-4
    6df4:	10bfff04 	addi	r2,r2,-4
    6df8:	19c00017 	ldw	r7,0(r3)
    6dfc:	11400017 	ldw	r5,0(r2)
    6e00:	397ffa26 	beq	r7,r5,6dec <__alt_data_end+0xfffe79ec>
    6e04:	3940592e 	bgeu	r7,r5,6f6c <__mdiff+0x1d0>
    6e08:	9005883a 	mov	r2,r18
    6e0c:	4023883a 	mov	r17,r8
    6e10:	9825883a 	mov	r18,r19
    6e14:	05000044 	movi	r20,1
    6e18:	1027883a 	mov	r19,r2
    6e1c:	00000406 	br	6e30 <__mdiff+0x94>
    6e20:	18005616 	blt	r3,zero,6f7c <__mdiff+0x1e0>
    6e24:	34400504 	addi	r17,r6,20
    6e28:	2c000504 	addi	r16,r5,20
    6e2c:	0029883a 	mov	r20,zero
    6e30:	91400117 	ldw	r5,4(r18)
    6e34:	00063b80 	call	63b8 <_Balloc>
    6e38:	92400417 	ldw	r9,16(r18)
    6e3c:	9b000417 	ldw	r12,16(r19)
    6e40:	12c00504 	addi	r11,r2,20
    6e44:	4a51883a 	add	r8,r9,r9
    6e48:	6319883a 	add	r12,r12,r12
    6e4c:	4211883a 	add	r8,r8,r8
    6e50:	6319883a 	add	r12,r12,r12
    6e54:	15000315 	stw	r20,12(r2)
    6e58:	8211883a 	add	r8,r16,r8
    6e5c:	8b19883a 	add	r12,r17,r12
    6e60:	0007883a 	mov	r3,zero
    6e64:	81400017 	ldw	r5,0(r16)
    6e68:	89c00017 	ldw	r7,0(r17)
    6e6c:	59800104 	addi	r6,r11,4
    6e70:	293fffcc 	andi	r4,r5,65535
    6e74:	20c7883a 	add	r3,r4,r3
    6e78:	393fffcc 	andi	r4,r7,65535
    6e7c:	1909c83a 	sub	r4,r3,r4
    6e80:	280ad43a 	srli	r5,r5,16
    6e84:	380ed43a 	srli	r7,r7,16
    6e88:	2007d43a 	srai	r3,r4,16
    6e8c:	213fffcc 	andi	r4,r4,65535
    6e90:	29cbc83a 	sub	r5,r5,r7
    6e94:	28c7883a 	add	r3,r5,r3
    6e98:	180a943a 	slli	r5,r3,16
    6e9c:	8c400104 	addi	r17,r17,4
    6ea0:	84000104 	addi	r16,r16,4
    6ea4:	2908b03a 	or	r4,r5,r4
    6ea8:	59000015 	stw	r4,0(r11)
    6eac:	1807d43a 	srai	r3,r3,16
    6eb0:	3015883a 	mov	r10,r6
    6eb4:	3017883a 	mov	r11,r6
    6eb8:	8b3fea36 	bltu	r17,r12,6e64 <__alt_data_end+0xfffe7a64>
    6ebc:	8200162e 	bgeu	r16,r8,6f18 <__mdiff+0x17c>
    6ec0:	8017883a 	mov	r11,r16
    6ec4:	59400017 	ldw	r5,0(r11)
    6ec8:	31800104 	addi	r6,r6,4
    6ecc:	5ac00104 	addi	r11,r11,4
    6ed0:	293fffcc 	andi	r4,r5,65535
    6ed4:	20c7883a 	add	r3,r4,r3
    6ed8:	280ed43a 	srli	r7,r5,16
    6edc:	180bd43a 	srai	r5,r3,16
    6ee0:	193fffcc 	andi	r4,r3,65535
    6ee4:	3947883a 	add	r3,r7,r5
    6ee8:	180a943a 	slli	r5,r3,16
    6eec:	1807d43a 	srai	r3,r3,16
    6ef0:	2908b03a 	or	r4,r5,r4
    6ef4:	313fff15 	stw	r4,-4(r6)
    6ef8:	5a3ff236 	bltu	r11,r8,6ec4 <__alt_data_end+0xfffe7ac4>
    6efc:	0406303a 	nor	r3,zero,r16
    6f00:	1a07883a 	add	r3,r3,r8
    6f04:	1806d0ba 	srli	r3,r3,2
    6f08:	18c00044 	addi	r3,r3,1
    6f0c:	18c7883a 	add	r3,r3,r3
    6f10:	18c7883a 	add	r3,r3,r3
    6f14:	50d5883a 	add	r10,r10,r3
    6f18:	50ffff04 	addi	r3,r10,-4
    6f1c:	2000041e 	bne	r4,zero,6f30 <__mdiff+0x194>
    6f20:	18ffff04 	addi	r3,r3,-4
    6f24:	19000017 	ldw	r4,0(r3)
    6f28:	4a7fffc4 	addi	r9,r9,-1
    6f2c:	203ffc26 	beq	r4,zero,6f20 <__alt_data_end+0xfffe7b20>
    6f30:	12400415 	stw	r9,16(r2)
    6f34:	dfc00517 	ldw	ra,20(sp)
    6f38:	dd000417 	ldw	r20,16(sp)
    6f3c:	dcc00317 	ldw	r19,12(sp)
    6f40:	dc800217 	ldw	r18,8(sp)
    6f44:	dc400117 	ldw	r17,4(sp)
    6f48:	dc000017 	ldw	r16,0(sp)
    6f4c:	dec00604 	addi	sp,sp,24
    6f50:	f800283a 	ret
    6f54:	000b883a 	mov	r5,zero
    6f58:	00063b80 	call	63b8 <_Balloc>
    6f5c:	00c00044 	movi	r3,1
    6f60:	10c00415 	stw	r3,16(r2)
    6f64:	10000515 	stw	zero,20(r2)
    6f68:	003ff206 	br	6f34 <__alt_data_end+0xfffe7b34>
    6f6c:	8023883a 	mov	r17,r16
    6f70:	0029883a 	mov	r20,zero
    6f74:	4021883a 	mov	r16,r8
    6f78:	003fad06 	br	6e30 <__alt_data_end+0xfffe7a30>
    6f7c:	9005883a 	mov	r2,r18
    6f80:	94400504 	addi	r17,r18,20
    6f84:	9c000504 	addi	r16,r19,20
    6f88:	9825883a 	mov	r18,r19
    6f8c:	05000044 	movi	r20,1
    6f90:	1027883a 	mov	r19,r2
    6f94:	003fa606 	br	6e30 <__alt_data_end+0xfffe7a30>

00006f98 <__ulp>:
    6f98:	295ffc2c 	andhi	r5,r5,32752
    6f9c:	00bf3034 	movhi	r2,64704
    6fa0:	2887883a 	add	r3,r5,r2
    6fa4:	00c0020e 	bge	zero,r3,6fb0 <__ulp+0x18>
    6fa8:	0005883a 	mov	r2,zero
    6fac:	f800283a 	ret
    6fb0:	00c7c83a 	sub	r3,zero,r3
    6fb4:	1807d53a 	srai	r3,r3,20
    6fb8:	008004c4 	movi	r2,19
    6fbc:	10c00b0e 	bge	r2,r3,6fec <__ulp+0x54>
    6fc0:	18bffb04 	addi	r2,r3,-20
    6fc4:	01000784 	movi	r4,30
    6fc8:	0007883a 	mov	r3,zero
    6fcc:	20800516 	blt	r4,r2,6fe4 <__ulp+0x4c>
    6fd0:	010007c4 	movi	r4,31
    6fd4:	2089c83a 	sub	r4,r4,r2
    6fd8:	00800044 	movi	r2,1
    6fdc:	1104983a 	sll	r2,r2,r4
    6fe0:	f800283a 	ret
    6fe4:	00800044 	movi	r2,1
    6fe8:	f800283a 	ret
    6fec:	01400234 	movhi	r5,8
    6ff0:	28c7d83a 	sra	r3,r5,r3
    6ff4:	0005883a 	mov	r2,zero
    6ff8:	f800283a 	ret

00006ffc <__b2d>:
    6ffc:	defffa04 	addi	sp,sp,-24
    7000:	dc000015 	stw	r16,0(sp)
    7004:	24000417 	ldw	r16,16(r4)
    7008:	dc400115 	stw	r17,4(sp)
    700c:	24400504 	addi	r17,r4,20
    7010:	8421883a 	add	r16,r16,r16
    7014:	8421883a 	add	r16,r16,r16
    7018:	8c21883a 	add	r16,r17,r16
    701c:	dc800215 	stw	r18,8(sp)
    7020:	84bfff17 	ldw	r18,-4(r16)
    7024:	dd000415 	stw	r20,16(sp)
    7028:	dcc00315 	stw	r19,12(sp)
    702c:	9009883a 	mov	r4,r18
    7030:	2829883a 	mov	r20,r5
    7034:	dfc00515 	stw	ra,20(sp)
    7038:	00066d40 	call	66d4 <__hi0bits>
    703c:	00c00804 	movi	r3,32
    7040:	1889c83a 	sub	r4,r3,r2
    7044:	a1000015 	stw	r4,0(r20)
    7048:	01000284 	movi	r4,10
    704c:	84ffff04 	addi	r19,r16,-4
    7050:	20801216 	blt	r4,r2,709c <__b2d+0xa0>
    7054:	018002c4 	movi	r6,11
    7058:	308dc83a 	sub	r6,r6,r2
    705c:	9186d83a 	srl	r3,r18,r6
    7060:	18cffc34 	orhi	r3,r3,16368
    7064:	8cc0212e 	bgeu	r17,r19,70ec <__b2d+0xf0>
    7068:	813ffe17 	ldw	r4,-8(r16)
    706c:	218cd83a 	srl	r6,r4,r6
    7070:	10800544 	addi	r2,r2,21
    7074:	9084983a 	sll	r2,r18,r2
    7078:	1184b03a 	or	r2,r2,r6
    707c:	dfc00517 	ldw	ra,20(sp)
    7080:	dd000417 	ldw	r20,16(sp)
    7084:	dcc00317 	ldw	r19,12(sp)
    7088:	dc800217 	ldw	r18,8(sp)
    708c:	dc400117 	ldw	r17,4(sp)
    7090:	dc000017 	ldw	r16,0(sp)
    7094:	dec00604 	addi	sp,sp,24
    7098:	f800283a 	ret
    709c:	8cc00f2e 	bgeu	r17,r19,70dc <__b2d+0xe0>
    70a0:	117ffd44 	addi	r5,r2,-11
    70a4:	80bffe17 	ldw	r2,-8(r16)
    70a8:	28000e26 	beq	r5,zero,70e4 <__b2d+0xe8>
    70ac:	1949c83a 	sub	r4,r3,r5
    70b0:	9164983a 	sll	r18,r18,r5
    70b4:	1106d83a 	srl	r3,r2,r4
    70b8:	81bffe04 	addi	r6,r16,-8
    70bc:	948ffc34 	orhi	r18,r18,16368
    70c0:	90c6b03a 	or	r3,r18,r3
    70c4:	89800e2e 	bgeu	r17,r6,7100 <__b2d+0x104>
    70c8:	81bffd17 	ldw	r6,-12(r16)
    70cc:	1144983a 	sll	r2,r2,r5
    70d0:	310ad83a 	srl	r5,r6,r4
    70d4:	2884b03a 	or	r2,r5,r2
    70d8:	003fe806 	br	707c <__alt_data_end+0xfffe7c7c>
    70dc:	10bffd44 	addi	r2,r2,-11
    70e0:	1000041e 	bne	r2,zero,70f4 <__b2d+0xf8>
    70e4:	90cffc34 	orhi	r3,r18,16368
    70e8:	003fe406 	br	707c <__alt_data_end+0xfffe7c7c>
    70ec:	000d883a 	mov	r6,zero
    70f0:	003fdf06 	br	7070 <__alt_data_end+0xfffe7c70>
    70f4:	90a4983a 	sll	r18,r18,r2
    70f8:	0005883a 	mov	r2,zero
    70fc:	003ff906 	br	70e4 <__alt_data_end+0xfffe7ce4>
    7100:	1144983a 	sll	r2,r2,r5
    7104:	003fdd06 	br	707c <__alt_data_end+0xfffe7c7c>

00007108 <__d2b>:
    7108:	defff804 	addi	sp,sp,-32
    710c:	dc000215 	stw	r16,8(sp)
    7110:	3021883a 	mov	r16,r6
    7114:	dc400315 	stw	r17,12(sp)
    7118:	8022907a 	slli	r17,r16,1
    711c:	dd000615 	stw	r20,24(sp)
    7120:	2829883a 	mov	r20,r5
    7124:	01400044 	movi	r5,1
    7128:	dcc00515 	stw	r19,20(sp)
    712c:	dc800415 	stw	r18,16(sp)
    7130:	dfc00715 	stw	ra,28(sp)
    7134:	3825883a 	mov	r18,r7
    7138:	8822d57a 	srli	r17,r17,21
    713c:	00063b80 	call	63b8 <_Balloc>
    7140:	1027883a 	mov	r19,r2
    7144:	00800434 	movhi	r2,16
    7148:	10bfffc4 	addi	r2,r2,-1
    714c:	808c703a 	and	r6,r16,r2
    7150:	88000126 	beq	r17,zero,7158 <__d2b+0x50>
    7154:	31800434 	orhi	r6,r6,16
    7158:	d9800015 	stw	r6,0(sp)
    715c:	a0002426 	beq	r20,zero,71f0 <__d2b+0xe8>
    7160:	d9000104 	addi	r4,sp,4
    7164:	dd000115 	stw	r20,4(sp)
    7168:	000673c0 	call	673c <__lo0bits>
    716c:	d8c00017 	ldw	r3,0(sp)
    7170:	10002f1e 	bne	r2,zero,7230 <__d2b+0x128>
    7174:	d9000117 	ldw	r4,4(sp)
    7178:	99000515 	stw	r4,20(r19)
    717c:	1821003a 	cmpeq	r16,r3,zero
    7180:	01000084 	movi	r4,2
    7184:	2421c83a 	sub	r16,r4,r16
    7188:	98c00615 	stw	r3,24(r19)
    718c:	9c000415 	stw	r16,16(r19)
    7190:	88001f1e 	bne	r17,zero,7210 <__d2b+0x108>
    7194:	10bef384 	addi	r2,r2,-1074
    7198:	90800015 	stw	r2,0(r18)
    719c:	00900034 	movhi	r2,16384
    71a0:	10bfffc4 	addi	r2,r2,-1
    71a4:	8085883a 	add	r2,r16,r2
    71a8:	1085883a 	add	r2,r2,r2
    71ac:	1085883a 	add	r2,r2,r2
    71b0:	9885883a 	add	r2,r19,r2
    71b4:	11000517 	ldw	r4,20(r2)
    71b8:	8020917a 	slli	r16,r16,5
    71bc:	00066d40 	call	66d4 <__hi0bits>
    71c0:	d8c00817 	ldw	r3,32(sp)
    71c4:	8085c83a 	sub	r2,r16,r2
    71c8:	18800015 	stw	r2,0(r3)
    71cc:	9805883a 	mov	r2,r19
    71d0:	dfc00717 	ldw	ra,28(sp)
    71d4:	dd000617 	ldw	r20,24(sp)
    71d8:	dcc00517 	ldw	r19,20(sp)
    71dc:	dc800417 	ldw	r18,16(sp)
    71e0:	dc400317 	ldw	r17,12(sp)
    71e4:	dc000217 	ldw	r16,8(sp)
    71e8:	dec00804 	addi	sp,sp,32
    71ec:	f800283a 	ret
    71f0:	d809883a 	mov	r4,sp
    71f4:	000673c0 	call	673c <__lo0bits>
    71f8:	d8c00017 	ldw	r3,0(sp)
    71fc:	04000044 	movi	r16,1
    7200:	9c000415 	stw	r16,16(r19)
    7204:	98c00515 	stw	r3,20(r19)
    7208:	10800804 	addi	r2,r2,32
    720c:	883fe126 	beq	r17,zero,7194 <__alt_data_end+0xfffe7d94>
    7210:	00c00d44 	movi	r3,53
    7214:	8c7ef344 	addi	r17,r17,-1075
    7218:	88a3883a 	add	r17,r17,r2
    721c:	1885c83a 	sub	r2,r3,r2
    7220:	d8c00817 	ldw	r3,32(sp)
    7224:	94400015 	stw	r17,0(r18)
    7228:	18800015 	stw	r2,0(r3)
    722c:	003fe706 	br	71cc <__alt_data_end+0xfffe7dcc>
    7230:	01000804 	movi	r4,32
    7234:	2089c83a 	sub	r4,r4,r2
    7238:	1908983a 	sll	r4,r3,r4
    723c:	d9400117 	ldw	r5,4(sp)
    7240:	1886d83a 	srl	r3,r3,r2
    7244:	2148b03a 	or	r4,r4,r5
    7248:	99000515 	stw	r4,20(r19)
    724c:	d8c00015 	stw	r3,0(sp)
    7250:	003fca06 	br	717c <__alt_data_end+0xfffe7d7c>

00007254 <__ratio>:
    7254:	defff904 	addi	sp,sp,-28
    7258:	dc400315 	stw	r17,12(sp)
    725c:	2823883a 	mov	r17,r5
    7260:	d9400104 	addi	r5,sp,4
    7264:	dfc00615 	stw	ra,24(sp)
    7268:	dcc00515 	stw	r19,20(sp)
    726c:	dc800415 	stw	r18,16(sp)
    7270:	2027883a 	mov	r19,r4
    7274:	dc000215 	stw	r16,8(sp)
    7278:	0006ffc0 	call	6ffc <__b2d>
    727c:	d80b883a 	mov	r5,sp
    7280:	8809883a 	mov	r4,r17
    7284:	1025883a 	mov	r18,r2
    7288:	1821883a 	mov	r16,r3
    728c:	0006ffc0 	call	6ffc <__b2d>
    7290:	8a000417 	ldw	r8,16(r17)
    7294:	99000417 	ldw	r4,16(r19)
    7298:	d9400117 	ldw	r5,4(sp)
    729c:	2209c83a 	sub	r4,r4,r8
    72a0:	2010917a 	slli	r8,r4,5
    72a4:	d9000017 	ldw	r4,0(sp)
    72a8:	2909c83a 	sub	r4,r5,r4
    72ac:	4109883a 	add	r4,r8,r4
    72b0:	01000e0e 	bge	zero,r4,72ec <__ratio+0x98>
    72b4:	2008953a 	slli	r4,r4,20
    72b8:	2421883a 	add	r16,r4,r16
    72bc:	100d883a 	mov	r6,r2
    72c0:	180f883a 	mov	r7,r3
    72c4:	9009883a 	mov	r4,r18
    72c8:	800b883a 	mov	r5,r16
    72cc:	000b9200 	call	b920 <__divdf3>
    72d0:	dfc00617 	ldw	ra,24(sp)
    72d4:	dcc00517 	ldw	r19,20(sp)
    72d8:	dc800417 	ldw	r18,16(sp)
    72dc:	dc400317 	ldw	r17,12(sp)
    72e0:	dc000217 	ldw	r16,8(sp)
    72e4:	dec00704 	addi	sp,sp,28
    72e8:	f800283a 	ret
    72ec:	2008953a 	slli	r4,r4,20
    72f0:	1907c83a 	sub	r3,r3,r4
    72f4:	003ff106 	br	72bc <__alt_data_end+0xfffe7ebc>

000072f8 <_mprec_log10>:
    72f8:	defffe04 	addi	sp,sp,-8
    72fc:	dc000015 	stw	r16,0(sp)
    7300:	dfc00115 	stw	ra,4(sp)
    7304:	008005c4 	movi	r2,23
    7308:	2021883a 	mov	r16,r4
    730c:	11000d0e 	bge	r2,r4,7344 <_mprec_log10+0x4c>
    7310:	0005883a 	mov	r2,zero
    7314:	00cffc34 	movhi	r3,16368
    7318:	843fffc4 	addi	r16,r16,-1
    731c:	000d883a 	mov	r6,zero
    7320:	01d00934 	movhi	r7,16420
    7324:	1009883a 	mov	r4,r2
    7328:	180b883a 	mov	r5,r3
    732c:	000c5480 	call	c548 <__muldf3>
    7330:	803ff91e 	bne	r16,zero,7318 <__alt_data_end+0xfffe7f18>
    7334:	dfc00117 	ldw	ra,4(sp)
    7338:	dc000017 	ldw	r16,0(sp)
    733c:	dec00204 	addi	sp,sp,8
    7340:	f800283a 	ret
    7344:	202090fa 	slli	r16,r4,3
    7348:	00800074 	movhi	r2,1
    734c:	10805a04 	addi	r2,r2,360
    7350:	1421883a 	add	r16,r2,r16
    7354:	80800017 	ldw	r2,0(r16)
    7358:	80c00117 	ldw	r3,4(r16)
    735c:	dfc00117 	ldw	ra,4(sp)
    7360:	dc000017 	ldw	r16,0(sp)
    7364:	dec00204 	addi	sp,sp,8
    7368:	f800283a 	ret

0000736c <__copybits>:
    736c:	297fffc4 	addi	r5,r5,-1
    7370:	280fd17a 	srai	r7,r5,5
    7374:	30c00417 	ldw	r3,16(r6)
    7378:	30800504 	addi	r2,r6,20
    737c:	39c00044 	addi	r7,r7,1
    7380:	18c7883a 	add	r3,r3,r3
    7384:	39cf883a 	add	r7,r7,r7
    7388:	18c7883a 	add	r3,r3,r3
    738c:	39cf883a 	add	r7,r7,r7
    7390:	10c7883a 	add	r3,r2,r3
    7394:	21cf883a 	add	r7,r4,r7
    7398:	10c00d2e 	bgeu	r2,r3,73d0 <__copybits+0x64>
    739c:	200b883a 	mov	r5,r4
    73a0:	12000017 	ldw	r8,0(r2)
    73a4:	29400104 	addi	r5,r5,4
    73a8:	10800104 	addi	r2,r2,4
    73ac:	2a3fff15 	stw	r8,-4(r5)
    73b0:	10fffb36 	bltu	r2,r3,73a0 <__alt_data_end+0xfffe7fa0>
    73b4:	1985c83a 	sub	r2,r3,r6
    73b8:	10bffac4 	addi	r2,r2,-21
    73bc:	1004d0ba 	srli	r2,r2,2
    73c0:	10800044 	addi	r2,r2,1
    73c4:	1085883a 	add	r2,r2,r2
    73c8:	1085883a 	add	r2,r2,r2
    73cc:	2089883a 	add	r4,r4,r2
    73d0:	21c0032e 	bgeu	r4,r7,73e0 <__copybits+0x74>
    73d4:	20000015 	stw	zero,0(r4)
    73d8:	21000104 	addi	r4,r4,4
    73dc:	21fffd36 	bltu	r4,r7,73d4 <__alt_data_end+0xfffe7fd4>
    73e0:	f800283a 	ret

000073e4 <__any_on>:
    73e4:	20c00417 	ldw	r3,16(r4)
    73e8:	2805d17a 	srai	r2,r5,5
    73ec:	21000504 	addi	r4,r4,20
    73f0:	18800d0e 	bge	r3,r2,7428 <__any_on+0x44>
    73f4:	18c7883a 	add	r3,r3,r3
    73f8:	18c7883a 	add	r3,r3,r3
    73fc:	20c7883a 	add	r3,r4,r3
    7400:	20c0192e 	bgeu	r4,r3,7468 <__any_on+0x84>
    7404:	18bfff17 	ldw	r2,-4(r3)
    7408:	18ffff04 	addi	r3,r3,-4
    740c:	1000041e 	bne	r2,zero,7420 <__any_on+0x3c>
    7410:	20c0142e 	bgeu	r4,r3,7464 <__any_on+0x80>
    7414:	18ffff04 	addi	r3,r3,-4
    7418:	19400017 	ldw	r5,0(r3)
    741c:	283ffc26 	beq	r5,zero,7410 <__alt_data_end+0xfffe8010>
    7420:	00800044 	movi	r2,1
    7424:	f800283a 	ret
    7428:	10c00a0e 	bge	r2,r3,7454 <__any_on+0x70>
    742c:	1085883a 	add	r2,r2,r2
    7430:	1085883a 	add	r2,r2,r2
    7434:	294007cc 	andi	r5,r5,31
    7438:	2087883a 	add	r3,r4,r2
    743c:	283ff026 	beq	r5,zero,7400 <__alt_data_end+0xfffe8000>
    7440:	19800017 	ldw	r6,0(r3)
    7444:	3144d83a 	srl	r2,r6,r5
    7448:	114a983a 	sll	r5,r2,r5
    744c:	317ff41e 	bne	r6,r5,7420 <__alt_data_end+0xfffe8020>
    7450:	003feb06 	br	7400 <__alt_data_end+0xfffe8000>
    7454:	1085883a 	add	r2,r2,r2
    7458:	1085883a 	add	r2,r2,r2
    745c:	2087883a 	add	r3,r4,r2
    7460:	003fe706 	br	7400 <__alt_data_end+0xfffe8000>
    7464:	f800283a 	ret
    7468:	0005883a 	mov	r2,zero
    746c:	f800283a 	ret

00007470 <__fpclassifyd>:
    7470:	00a00034 	movhi	r2,32768
    7474:	10bfffc4 	addi	r2,r2,-1
    7478:	2884703a 	and	r2,r5,r2
    747c:	10000726 	beq	r2,zero,749c <__fpclassifyd+0x2c>
    7480:	00fffc34 	movhi	r3,65520
    7484:	019ff834 	movhi	r6,32736
    7488:	28c7883a 	add	r3,r5,r3
    748c:	31bfffc4 	addi	r6,r6,-1
    7490:	30c00536 	bltu	r6,r3,74a8 <__fpclassifyd+0x38>
    7494:	00800104 	movi	r2,4
    7498:	f800283a 	ret
    749c:	2000021e 	bne	r4,zero,74a8 <__fpclassifyd+0x38>
    74a0:	00800084 	movi	r2,2
    74a4:	f800283a 	ret
    74a8:	00dffc34 	movhi	r3,32752
    74ac:	019ff834 	movhi	r6,32736
    74b0:	28cb883a 	add	r5,r5,r3
    74b4:	31bfffc4 	addi	r6,r6,-1
    74b8:	317ff62e 	bgeu	r6,r5,7494 <__alt_data_end+0xfffe8094>
    74bc:	01400434 	movhi	r5,16
    74c0:	297fffc4 	addi	r5,r5,-1
    74c4:	28800236 	bltu	r5,r2,74d0 <__fpclassifyd+0x60>
    74c8:	008000c4 	movi	r2,3
    74cc:	f800283a 	ret
    74d0:	10c00226 	beq	r2,r3,74dc <__fpclassifyd+0x6c>
    74d4:	0005883a 	mov	r2,zero
    74d8:	f800283a 	ret
    74dc:	2005003a 	cmpeq	r2,r4,zero
    74e0:	f800283a 	ret

000074e4 <_sbrk_r>:
    74e4:	defffd04 	addi	sp,sp,-12
    74e8:	dc000015 	stw	r16,0(sp)
    74ec:	04000074 	movhi	r16,1
    74f0:	dc400115 	stw	r17,4(sp)
    74f4:	840e6504 	addi	r16,r16,14740
    74f8:	2023883a 	mov	r17,r4
    74fc:	2809883a 	mov	r4,r5
    7500:	dfc00215 	stw	ra,8(sp)
    7504:	80000015 	stw	zero,0(r16)
    7508:	000e3600 	call	e360 <sbrk>
    750c:	00ffffc4 	movi	r3,-1
    7510:	10c00526 	beq	r2,r3,7528 <_sbrk_r+0x44>
    7514:	dfc00217 	ldw	ra,8(sp)
    7518:	dc400117 	ldw	r17,4(sp)
    751c:	dc000017 	ldw	r16,0(sp)
    7520:	dec00304 	addi	sp,sp,12
    7524:	f800283a 	ret
    7528:	80c00017 	ldw	r3,0(r16)
    752c:	183ff926 	beq	r3,zero,7514 <__alt_data_end+0xfffe8114>
    7530:	88c00015 	stw	r3,0(r17)
    7534:	003ff706 	br	7514 <__alt_data_end+0xfffe8114>

00007538 <__sread>:
    7538:	defffe04 	addi	sp,sp,-8
    753c:	dc000015 	stw	r16,0(sp)
    7540:	2821883a 	mov	r16,r5
    7544:	2940038f 	ldh	r5,14(r5)
    7548:	dfc00115 	stw	ra,4(sp)
    754c:	00099d40 	call	99d4 <_read_r>
    7550:	10000716 	blt	r2,zero,7570 <__sread+0x38>
    7554:	80c01417 	ldw	r3,80(r16)
    7558:	1887883a 	add	r3,r3,r2
    755c:	80c01415 	stw	r3,80(r16)
    7560:	dfc00117 	ldw	ra,4(sp)
    7564:	dc000017 	ldw	r16,0(sp)
    7568:	dec00204 	addi	sp,sp,8
    756c:	f800283a 	ret
    7570:	80c0030b 	ldhu	r3,12(r16)
    7574:	18fbffcc 	andi	r3,r3,61439
    7578:	80c0030d 	sth	r3,12(r16)
    757c:	dfc00117 	ldw	ra,4(sp)
    7580:	dc000017 	ldw	r16,0(sp)
    7584:	dec00204 	addi	sp,sp,8
    7588:	f800283a 	ret

0000758c <__seofread>:
    758c:	0005883a 	mov	r2,zero
    7590:	f800283a 	ret

00007594 <__swrite>:
    7594:	2880030b 	ldhu	r2,12(r5)
    7598:	defffb04 	addi	sp,sp,-20
    759c:	dcc00315 	stw	r19,12(sp)
    75a0:	dc800215 	stw	r18,8(sp)
    75a4:	dc400115 	stw	r17,4(sp)
    75a8:	dc000015 	stw	r16,0(sp)
    75ac:	dfc00415 	stw	ra,16(sp)
    75b0:	10c0400c 	andi	r3,r2,256
    75b4:	2821883a 	mov	r16,r5
    75b8:	2023883a 	mov	r17,r4
    75bc:	3025883a 	mov	r18,r6
    75c0:	3827883a 	mov	r19,r7
    75c4:	18000526 	beq	r3,zero,75dc <__swrite+0x48>
    75c8:	2940038f 	ldh	r5,14(r5)
    75cc:	01c00084 	movi	r7,2
    75d0:	000d883a 	mov	r6,zero
    75d4:	00098180 	call	9818 <_lseek_r>
    75d8:	8080030b 	ldhu	r2,12(r16)
    75dc:	8140038f 	ldh	r5,14(r16)
    75e0:	10bbffcc 	andi	r2,r2,61439
    75e4:	980f883a 	mov	r7,r19
    75e8:	900d883a 	mov	r6,r18
    75ec:	8809883a 	mov	r4,r17
    75f0:	8080030d 	sth	r2,12(r16)
    75f4:	dfc00417 	ldw	ra,16(sp)
    75f8:	dcc00317 	ldw	r19,12(sp)
    75fc:	dc800217 	ldw	r18,8(sp)
    7600:	dc400117 	ldw	r17,4(sp)
    7604:	dc000017 	ldw	r16,0(sp)
    7608:	dec00504 	addi	sp,sp,20
    760c:	0008e041 	jmpi	8e04 <_write_r>

00007610 <__sseek>:
    7610:	defffe04 	addi	sp,sp,-8
    7614:	dc000015 	stw	r16,0(sp)
    7618:	2821883a 	mov	r16,r5
    761c:	2940038f 	ldh	r5,14(r5)
    7620:	dfc00115 	stw	ra,4(sp)
    7624:	00098180 	call	9818 <_lseek_r>
    7628:	00ffffc4 	movi	r3,-1
    762c:	10c00826 	beq	r2,r3,7650 <__sseek+0x40>
    7630:	80c0030b 	ldhu	r3,12(r16)
    7634:	80801415 	stw	r2,80(r16)
    7638:	18c40014 	ori	r3,r3,4096
    763c:	80c0030d 	sth	r3,12(r16)
    7640:	dfc00117 	ldw	ra,4(sp)
    7644:	dc000017 	ldw	r16,0(sp)
    7648:	dec00204 	addi	sp,sp,8
    764c:	f800283a 	ret
    7650:	80c0030b 	ldhu	r3,12(r16)
    7654:	18fbffcc 	andi	r3,r3,61439
    7658:	80c0030d 	sth	r3,12(r16)
    765c:	dfc00117 	ldw	ra,4(sp)
    7660:	dc000017 	ldw	r16,0(sp)
    7664:	dec00204 	addi	sp,sp,8
    7668:	f800283a 	ret

0000766c <__sclose>:
    766c:	2940038f 	ldh	r5,14(r5)
    7670:	0008e641 	jmpi	8e64 <_close_r>

00007674 <strlen>:
    7674:	208000cc 	andi	r2,r4,3
    7678:	10002026 	beq	r2,zero,76fc <strlen+0x88>
    767c:	20800007 	ldb	r2,0(r4)
    7680:	10002026 	beq	r2,zero,7704 <strlen+0x90>
    7684:	2005883a 	mov	r2,r4
    7688:	00000206 	br	7694 <strlen+0x20>
    768c:	10c00007 	ldb	r3,0(r2)
    7690:	18001826 	beq	r3,zero,76f4 <strlen+0x80>
    7694:	10800044 	addi	r2,r2,1
    7698:	10c000cc 	andi	r3,r2,3
    769c:	183ffb1e 	bne	r3,zero,768c <__alt_data_end+0xfffe828c>
    76a0:	10c00017 	ldw	r3,0(r2)
    76a4:	01ffbff4 	movhi	r7,65279
    76a8:	39ffbfc4 	addi	r7,r7,-257
    76ac:	00ca303a 	nor	r5,zero,r3
    76b0:	01a02074 	movhi	r6,32897
    76b4:	19c7883a 	add	r3,r3,r7
    76b8:	31a02004 	addi	r6,r6,-32640
    76bc:	1946703a 	and	r3,r3,r5
    76c0:	1986703a 	and	r3,r3,r6
    76c4:	1800091e 	bne	r3,zero,76ec <strlen+0x78>
    76c8:	10800104 	addi	r2,r2,4
    76cc:	10c00017 	ldw	r3,0(r2)
    76d0:	19cb883a 	add	r5,r3,r7
    76d4:	00c6303a 	nor	r3,zero,r3
    76d8:	28c6703a 	and	r3,r5,r3
    76dc:	1986703a 	and	r3,r3,r6
    76e0:	183ff926 	beq	r3,zero,76c8 <__alt_data_end+0xfffe82c8>
    76e4:	00000106 	br	76ec <strlen+0x78>
    76e8:	10800044 	addi	r2,r2,1
    76ec:	10c00007 	ldb	r3,0(r2)
    76f0:	183ffd1e 	bne	r3,zero,76e8 <__alt_data_end+0xfffe82e8>
    76f4:	1105c83a 	sub	r2,r2,r4
    76f8:	f800283a 	ret
    76fc:	2005883a 	mov	r2,r4
    7700:	003fe706 	br	76a0 <__alt_data_end+0xfffe82a0>
    7704:	0005883a 	mov	r2,zero
    7708:	f800283a 	ret

0000770c <__sprint_r.part.0>:
    770c:	28801917 	ldw	r2,100(r5)
    7710:	defff604 	addi	sp,sp,-40
    7714:	dd400515 	stw	r21,20(sp)
    7718:	dfc00915 	stw	ra,36(sp)
    771c:	df000815 	stw	fp,32(sp)
    7720:	ddc00715 	stw	r23,28(sp)
    7724:	dd800615 	stw	r22,24(sp)
    7728:	dd000415 	stw	r20,16(sp)
    772c:	dcc00315 	stw	r19,12(sp)
    7730:	dc800215 	stw	r18,8(sp)
    7734:	dc400115 	stw	r17,4(sp)
    7738:	dc000015 	stw	r16,0(sp)
    773c:	1088000c 	andi	r2,r2,8192
    7740:	302b883a 	mov	r21,r6
    7744:	10002e26 	beq	r2,zero,7800 <__sprint_r.part.0+0xf4>
    7748:	30800217 	ldw	r2,8(r6)
    774c:	35800017 	ldw	r22,0(r6)
    7750:	10002926 	beq	r2,zero,77f8 <__sprint_r.part.0+0xec>
    7754:	2827883a 	mov	r19,r5
    7758:	2029883a 	mov	r20,r4
    775c:	b5c00104 	addi	r23,r22,4
    7760:	04bfffc4 	movi	r18,-1
    7764:	bc400017 	ldw	r17,0(r23)
    7768:	b4000017 	ldw	r16,0(r22)
    776c:	0039883a 	mov	fp,zero
    7770:	8822d0ba 	srli	r17,r17,2
    7774:	8800031e 	bne	r17,zero,7784 <__sprint_r.part.0+0x78>
    7778:	00001806 	br	77dc <__sprint_r.part.0+0xd0>
    777c:	84000104 	addi	r16,r16,4
    7780:	8f001526 	beq	r17,fp,77d8 <__sprint_r.part.0+0xcc>
    7784:	81400017 	ldw	r5,0(r16)
    7788:	980d883a 	mov	r6,r19
    778c:	a009883a 	mov	r4,r20
    7790:	00091fc0 	call	91fc <_fputwc_r>
    7794:	e7000044 	addi	fp,fp,1
    7798:	14bff81e 	bne	r2,r18,777c <__alt_data_end+0xfffe837c>
    779c:	9005883a 	mov	r2,r18
    77a0:	a8000215 	stw	zero,8(r21)
    77a4:	a8000115 	stw	zero,4(r21)
    77a8:	dfc00917 	ldw	ra,36(sp)
    77ac:	df000817 	ldw	fp,32(sp)
    77b0:	ddc00717 	ldw	r23,28(sp)
    77b4:	dd800617 	ldw	r22,24(sp)
    77b8:	dd400517 	ldw	r21,20(sp)
    77bc:	dd000417 	ldw	r20,16(sp)
    77c0:	dcc00317 	ldw	r19,12(sp)
    77c4:	dc800217 	ldw	r18,8(sp)
    77c8:	dc400117 	ldw	r17,4(sp)
    77cc:	dc000017 	ldw	r16,0(sp)
    77d0:	dec00a04 	addi	sp,sp,40
    77d4:	f800283a 	ret
    77d8:	a8800217 	ldw	r2,8(r21)
    77dc:	8c63883a 	add	r17,r17,r17
    77e0:	8c63883a 	add	r17,r17,r17
    77e4:	1445c83a 	sub	r2,r2,r17
    77e8:	a8800215 	stw	r2,8(r21)
    77ec:	b5800204 	addi	r22,r22,8
    77f0:	bdc00204 	addi	r23,r23,8
    77f4:	103fdb1e 	bne	r2,zero,7764 <__alt_data_end+0xfffe8364>
    77f8:	0005883a 	mov	r2,zero
    77fc:	003fe806 	br	77a0 <__alt_data_end+0xfffe83a0>
    7800:	00092fc0 	call	92fc <__sfvwrite_r>
    7804:	003fe606 	br	77a0 <__alt_data_end+0xfffe83a0>

00007808 <__sprint_r>:
    7808:	30c00217 	ldw	r3,8(r6)
    780c:	18000126 	beq	r3,zero,7814 <__sprint_r+0xc>
    7810:	000770c1 	jmpi	770c <__sprint_r.part.0>
    7814:	30000115 	stw	zero,4(r6)
    7818:	0005883a 	mov	r2,zero
    781c:	f800283a 	ret

00007820 <___vfiprintf_internal_r>:
    7820:	deffca04 	addi	sp,sp,-216
    7824:	dd403115 	stw	r21,196(sp)
    7828:	dfc03515 	stw	ra,212(sp)
    782c:	df003415 	stw	fp,208(sp)
    7830:	ddc03315 	stw	r23,204(sp)
    7834:	dd803215 	stw	r22,200(sp)
    7838:	dd003015 	stw	r20,192(sp)
    783c:	dcc02f15 	stw	r19,188(sp)
    7840:	dc802e15 	stw	r18,184(sp)
    7844:	dc402d15 	stw	r17,180(sp)
    7848:	dc002c15 	stw	r16,176(sp)
    784c:	d9002115 	stw	r4,132(sp)
    7850:	d9402015 	stw	r5,128(sp)
    7854:	d9c02215 	stw	r7,136(sp)
    7858:	302b883a 	mov	r21,r6
    785c:	20000226 	beq	r4,zero,7868 <___vfiprintf_internal_r+0x48>
    7860:	20800e17 	ldw	r2,56(r4)
    7864:	1000cf26 	beq	r2,zero,7ba4 <___vfiprintf_internal_r+0x384>
    7868:	d8c02017 	ldw	r3,128(sp)
    786c:	1880030b 	ldhu	r2,12(r3)
    7870:	10c8000c 	andi	r3,r2,8192
    7874:	1800071e 	bne	r3,zero,7894 <___vfiprintf_internal_r+0x74>
    7878:	d9402017 	ldw	r5,128(sp)
    787c:	00f7ffc4 	movi	r3,-8193
    7880:	10880014 	ori	r2,r2,8192
    7884:	29001917 	ldw	r4,100(r5)
    7888:	2880030d 	sth	r2,12(r5)
    788c:	20c6703a 	and	r3,r4,r3
    7890:	28c01915 	stw	r3,100(r5)
    7894:	10c0020c 	andi	r3,r2,8
    7898:	1800a526 	beq	r3,zero,7b30 <___vfiprintf_internal_r+0x310>
    789c:	d9002017 	ldw	r4,128(sp)
    78a0:	20c00417 	ldw	r3,16(r4)
    78a4:	1800a226 	beq	r3,zero,7b30 <___vfiprintf_internal_r+0x310>
    78a8:	1080068c 	andi	r2,r2,26
    78ac:	00c00284 	movi	r3,10
    78b0:	10c0a826 	beq	r2,r3,7b54 <___vfiprintf_internal_r+0x334>
    78b4:	d9001a04 	addi	r4,sp,104
    78b8:	d94019c4 	addi	r5,sp,103
    78bc:	04800074 	movhi	r18,1
    78c0:	2145c83a 	sub	r2,r4,r5
    78c4:	94808c04 	addi	r18,r18,560
    78c8:	d9001e15 	stw	r4,120(sp)
    78cc:	d9401f15 	stw	r5,124(sp)
    78d0:	dec01a15 	stw	sp,104(sp)
    78d4:	d8001c15 	stw	zero,112(sp)
    78d8:	d8001b15 	stw	zero,108(sp)
    78dc:	d811883a 	mov	r8,sp
    78e0:	d8002615 	stw	zero,152(sp)
    78e4:	d8002415 	stw	zero,144(sp)
    78e8:	d8802815 	stw	r2,160(sp)
    78ec:	a82d883a 	mov	r22,r21
    78f0:	b0800007 	ldb	r2,0(r22)
    78f4:	10040d26 	beq	r2,zero,892c <___vfiprintf_internal_r+0x110c>
    78f8:	00c00944 	movi	r3,37
    78fc:	b029883a 	mov	r20,r22
    7900:	10c0021e 	bne	r2,r3,790c <___vfiprintf_internal_r+0xec>
    7904:	00001606 	br	7960 <___vfiprintf_internal_r+0x140>
    7908:	10c00326 	beq	r2,r3,7918 <___vfiprintf_internal_r+0xf8>
    790c:	a5000044 	addi	r20,r20,1
    7910:	a0800007 	ldb	r2,0(r20)
    7914:	103ffc1e 	bne	r2,zero,7908 <__alt_data_end+0xfffe8508>
    7918:	a5a1c83a 	sub	r16,r20,r22
    791c:	80001026 	beq	r16,zero,7960 <___vfiprintf_internal_r+0x140>
    7920:	d8c01c17 	ldw	r3,112(sp)
    7924:	d8801b17 	ldw	r2,108(sp)
    7928:	45800015 	stw	r22,0(r8)
    792c:	80c7883a 	add	r3,r16,r3
    7930:	10800044 	addi	r2,r2,1
    7934:	44000115 	stw	r16,4(r8)
    7938:	d8c01c15 	stw	r3,112(sp)
    793c:	d8801b15 	stw	r2,108(sp)
    7940:	010001c4 	movi	r4,7
    7944:	2080750e 	bge	r4,r2,7b1c <___vfiprintf_internal_r+0x2fc>
    7948:	1803951e 	bne	r3,zero,87a0 <___vfiprintf_internal_r+0xf80>
    794c:	d8c02417 	ldw	r3,144(sp)
    7950:	d8001b15 	stw	zero,108(sp)
    7954:	d811883a 	mov	r8,sp
    7958:	1c07883a 	add	r3,r3,r16
    795c:	d8c02415 	stw	r3,144(sp)
    7960:	a0800007 	ldb	r2,0(r20)
    7964:	1002e026 	beq	r2,zero,84e8 <___vfiprintf_internal_r+0xcc8>
    7968:	a5800044 	addi	r22,r20,1
    796c:	a0c00047 	ldb	r3,1(r20)
    7970:	d8001d85 	stb	zero,118(sp)
    7974:	0027883a 	mov	r19,zero
    7978:	d8002305 	stb	zero,140(sp)
    797c:	043fffc4 	movi	r16,-1
    7980:	d8002515 	stw	zero,148(sp)
    7984:	0023883a 	mov	r17,zero
    7988:	05001604 	movi	r20,88
    798c:	05400244 	movi	r21,9
    7990:	402f883a 	mov	r23,r8
    7994:	b5800044 	addi	r22,r22,1
    7998:	18bff804 	addi	r2,r3,-32
    799c:	a0827736 	bltu	r20,r2,837c <___vfiprintf_internal_r+0xb5c>
    79a0:	100490ba 	slli	r2,r2,2
    79a4:	01000034 	movhi	r4,0
    79a8:	211e6e04 	addi	r4,r4,31160
    79ac:	1105883a 	add	r2,r2,r4
    79b0:	10800017 	ldw	r2,0(r2)
    79b4:	1000683a 	jmp	r2
    79b8:	0000807c 	xorhi	zero,zero,513
    79bc:	0000837c 	xorhi	zero,zero,525
    79c0:	0000837c 	xorhi	zero,zero,525
    79c4:	00008098 	cmpnei	zero,zero,514
    79c8:	0000837c 	xorhi	zero,zero,525
    79cc:	0000837c 	xorhi	zero,zero,525
    79d0:	0000837c 	xorhi	zero,zero,525
    79d4:	0000837c 	xorhi	zero,zero,525
    79d8:	0000837c 	xorhi	zero,zero,525
    79dc:	0000837c 	xorhi	zero,zero,525
    79e0:	000082a0 	cmpeqi	zero,zero,522
    79e4:	000082c4 	movi	zero,523
    79e8:	0000837c 	xorhi	zero,zero,525
    79ec:	00007bbc 	xorhi	zero,zero,494
    79f0:	000082d8 	cmpnei	zero,zero,523
    79f4:	0000837c 	xorhi	zero,zero,525
    79f8:	000080a4 	muli	zero,zero,514
    79fc:	000080b0 	cmpltui	zero,zero,514
    7a00:	000080b0 	cmpltui	zero,zero,514
    7a04:	000080b0 	cmpltui	zero,zero,514
    7a08:	000080b0 	cmpltui	zero,zero,514
    7a0c:	000080b0 	cmpltui	zero,zero,514
    7a10:	000080b0 	cmpltui	zero,zero,514
    7a14:	000080b0 	cmpltui	zero,zero,514
    7a18:	000080b0 	cmpltui	zero,zero,514
    7a1c:	000080b0 	cmpltui	zero,zero,514
    7a20:	0000837c 	xorhi	zero,zero,525
    7a24:	0000837c 	xorhi	zero,zero,525
    7a28:	0000837c 	xorhi	zero,zero,525
    7a2c:	0000837c 	xorhi	zero,zero,525
    7a30:	0000837c 	xorhi	zero,zero,525
    7a34:	0000837c 	xorhi	zero,zero,525
    7a38:	0000837c 	xorhi	zero,zero,525
    7a3c:	0000837c 	xorhi	zero,zero,525
    7a40:	0000837c 	xorhi	zero,zero,525
    7a44:	0000837c 	xorhi	zero,zero,525
    7a48:	000080f0 	cmpltui	zero,zero,515
    7a4c:	0000837c 	xorhi	zero,zero,525
    7a50:	0000837c 	xorhi	zero,zero,525
    7a54:	0000837c 	xorhi	zero,zero,525
    7a58:	0000837c 	xorhi	zero,zero,525
    7a5c:	0000837c 	xorhi	zero,zero,525
    7a60:	0000837c 	xorhi	zero,zero,525
    7a64:	0000837c 	xorhi	zero,zero,525
    7a68:	0000837c 	xorhi	zero,zero,525
    7a6c:	0000837c 	xorhi	zero,zero,525
    7a70:	0000837c 	xorhi	zero,zero,525
    7a74:	0000812c 	andhi	zero,zero,516
    7a78:	0000837c 	xorhi	zero,zero,525
    7a7c:	0000837c 	xorhi	zero,zero,525
    7a80:	0000837c 	xorhi	zero,zero,525
    7a84:	0000837c 	xorhi	zero,zero,525
    7a88:	0000837c 	xorhi	zero,zero,525
    7a8c:	00008188 	cmpgei	zero,zero,518
    7a90:	0000837c 	xorhi	zero,zero,525
    7a94:	0000837c 	xorhi	zero,zero,525
    7a98:	000081fc 	xorhi	zero,zero,519
    7a9c:	0000837c 	xorhi	zero,zero,525
    7aa0:	0000837c 	xorhi	zero,zero,525
    7aa4:	0000837c 	xorhi	zero,zero,525
    7aa8:	0000837c 	xorhi	zero,zero,525
    7aac:	0000837c 	xorhi	zero,zero,525
    7ab0:	0000837c 	xorhi	zero,zero,525
    7ab4:	0000837c 	xorhi	zero,zero,525
    7ab8:	0000837c 	xorhi	zero,zero,525
    7abc:	0000837c 	xorhi	zero,zero,525
    7ac0:	0000837c 	xorhi	zero,zero,525
    7ac4:	00007fa4 	muli	zero,zero,510
    7ac8:	00007fd4 	movui	zero,511
    7acc:	0000837c 	xorhi	zero,zero,525
    7ad0:	0000837c 	xorhi	zero,zero,525
    7ad4:	0000837c 	xorhi	zero,zero,525
    7ad8:	00008324 	muli	zero,zero,524
    7adc:	00007fd4 	movui	zero,511
    7ae0:	0000837c 	xorhi	zero,zero,525
    7ae4:	0000837c 	xorhi	zero,zero,525
    7ae8:	00007e7c 	xorhi	zero,zero,505
    7aec:	0000837c 	xorhi	zero,zero,525
    7af0:	00007e90 	cmplti	zero,zero,506
    7af4:	00007ec8 	cmpgei	zero,zero,507
    7af8:	00007bc8 	cmpgei	zero,zero,495
    7afc:	00007e70 	cmpltui	zero,zero,505
    7b00:	0000837c 	xorhi	zero,zero,525
    7b04:	0000823c 	xorhi	zero,zero,520
    7b08:	0000837c 	xorhi	zero,zero,525
    7b0c:	00008288 	cmpgei	zero,zero,522
    7b10:	0000837c 	xorhi	zero,zero,525
    7b14:	0000837c 	xorhi	zero,zero,525
    7b18:	00007f4c 	andi	zero,zero,509
    7b1c:	42000204 	addi	r8,r8,8
    7b20:	d8c02417 	ldw	r3,144(sp)
    7b24:	1c07883a 	add	r3,r3,r16
    7b28:	d8c02415 	stw	r3,144(sp)
    7b2c:	003f8c06 	br	7960 <__alt_data_end+0xfffe8560>
    7b30:	d9402017 	ldw	r5,128(sp)
    7b34:	d9002117 	ldw	r4,132(sp)
    7b38:	0002fa80 	call	2fa8 <__swsetup_r>
    7b3c:	1003c11e 	bne	r2,zero,8a44 <___vfiprintf_internal_r+0x1224>
    7b40:	d9402017 	ldw	r5,128(sp)
    7b44:	00c00284 	movi	r3,10
    7b48:	2880030b 	ldhu	r2,12(r5)
    7b4c:	1080068c 	andi	r2,r2,26
    7b50:	10ff581e 	bne	r2,r3,78b4 <__alt_data_end+0xfffe84b4>
    7b54:	d8c02017 	ldw	r3,128(sp)
    7b58:	1880038f 	ldh	r2,14(r3)
    7b5c:	103f5516 	blt	r2,zero,78b4 <__alt_data_end+0xfffe84b4>
    7b60:	d9c02217 	ldw	r7,136(sp)
    7b64:	d9002117 	ldw	r4,132(sp)
    7b68:	a80d883a 	mov	r6,r21
    7b6c:	180b883a 	mov	r5,r3
    7b70:	0008d480 	call	8d48 <__sbprintf>
    7b74:	dfc03517 	ldw	ra,212(sp)
    7b78:	df003417 	ldw	fp,208(sp)
    7b7c:	ddc03317 	ldw	r23,204(sp)
    7b80:	dd803217 	ldw	r22,200(sp)
    7b84:	dd403117 	ldw	r21,196(sp)
    7b88:	dd003017 	ldw	r20,192(sp)
    7b8c:	dcc02f17 	ldw	r19,188(sp)
    7b90:	dc802e17 	ldw	r18,184(sp)
    7b94:	dc402d17 	ldw	r17,180(sp)
    7b98:	dc002c17 	ldw	r16,176(sp)
    7b9c:	dec03604 	addi	sp,sp,216
    7ba0:	f800283a 	ret
    7ba4:	0004fb40 	call	4fb4 <__sinit>
    7ba8:	003f2f06 	br	7868 <__alt_data_end+0xfffe8468>
    7bac:	d8c02517 	ldw	r3,148(sp)
    7bb0:	d8802215 	stw	r2,136(sp)
    7bb4:	00c7c83a 	sub	r3,zero,r3
    7bb8:	d8c02515 	stw	r3,148(sp)
    7bbc:	8c400114 	ori	r17,r17,4
    7bc0:	b0c00007 	ldb	r3,0(r22)
    7bc4:	003f7306 	br	7994 <__alt_data_end+0xfffe8594>
    7bc8:	00800c04 	movi	r2,48
    7bcc:	d9402217 	ldw	r5,136(sp)
    7bd0:	d8801d05 	stb	r2,116(sp)
    7bd4:	00801e04 	movi	r2,120
    7bd8:	d8801d45 	stb	r2,117(sp)
    7bdc:	d8001d85 	stb	zero,118(sp)
    7be0:	b811883a 	mov	r8,r23
    7be4:	28c00104 	addi	r3,r5,4
    7be8:	2cc00017 	ldw	r19,0(r5)
    7bec:	0029883a 	mov	r20,zero
    7bf0:	88800094 	ori	r2,r17,2
    7bf4:	80032516 	blt	r16,zero,888c <___vfiprintf_internal_r+0x106c>
    7bf8:	00bfdfc4 	movi	r2,-129
    7bfc:	88a2703a 	and	r17,r17,r2
    7c00:	d8c02215 	stw	r3,136(sp)
    7c04:	8c400094 	ori	r17,r17,2
    7c08:	98032a1e 	bne	r19,zero,88b4 <___vfiprintf_internal_r+0x1094>
    7c0c:	00800074 	movhi	r2,1
    7c10:	10802b04 	addi	r2,r2,172
    7c14:	d8802615 	stw	r2,152(sp)
    7c18:	002b883a 	mov	r21,zero
    7c1c:	8001741e 	bne	r16,zero,81f0 <___vfiprintf_internal_r+0x9d0>
    7c20:	0021883a 	mov	r16,zero
    7c24:	0029883a 	mov	r20,zero
    7c28:	ddc01a04 	addi	r23,sp,104
    7c2c:	8027883a 	mov	r19,r16
    7c30:	8500010e 	bge	r16,r20,7c38 <___vfiprintf_internal_r+0x418>
    7c34:	a027883a 	mov	r19,r20
    7c38:	ad403fcc 	andi	r21,r21,255
    7c3c:	ad40201c 	xori	r21,r21,128
    7c40:	ad7fe004 	addi	r21,r21,-128
    7c44:	a8000126 	beq	r21,zero,7c4c <___vfiprintf_internal_r+0x42c>
    7c48:	9cc00044 	addi	r19,r19,1
    7c4c:	89c0008c 	andi	r7,r17,2
    7c50:	38000126 	beq	r7,zero,7c58 <___vfiprintf_internal_r+0x438>
    7c54:	9cc00084 	addi	r19,r19,2
    7c58:	88c0210c 	andi	r3,r17,132
    7c5c:	1801dd1e 	bne	r3,zero,83d4 <___vfiprintf_internal_r+0xbb4>
    7c60:	d9402517 	ldw	r5,148(sp)
    7c64:	2cebc83a 	sub	r21,r5,r19
    7c68:	0541da0e 	bge	zero,r21,83d4 <___vfiprintf_internal_r+0xbb4>
    7c6c:	07000404 	movi	fp,16
    7c70:	d8801c17 	ldw	r2,112(sp)
    7c74:	e543be0e 	bge	fp,r21,8b70 <___vfiprintf_internal_r+0x1350>
    7c78:	01400074 	movhi	r5,1
    7c7c:	29409004 	addi	r5,r5,576
    7c80:	dc002715 	stw	r16,156(sp)
    7c84:	d9801b17 	ldw	r6,108(sp)
    7c88:	a821883a 	mov	r16,r21
    7c8c:	d9402315 	stw	r5,140(sp)
    7c90:	028001c4 	movi	r10,7
    7c94:	d9c02915 	stw	r7,164(sp)
    7c98:	182b883a 	mov	r21,r3
    7c9c:	00000506 	br	7cb4 <___vfiprintf_internal_r+0x494>
    7ca0:	31000084 	addi	r4,r6,2
    7ca4:	42000204 	addi	r8,r8,8
    7ca8:	180d883a 	mov	r6,r3
    7cac:	843ffc04 	addi	r16,r16,-16
    7cb0:	e4000f0e 	bge	fp,r16,7cf0 <___vfiprintf_internal_r+0x4d0>
    7cb4:	01000074 	movhi	r4,1
    7cb8:	10800404 	addi	r2,r2,16
    7cbc:	30c00044 	addi	r3,r6,1
    7cc0:	21009004 	addi	r4,r4,576
    7cc4:	41000015 	stw	r4,0(r8)
    7cc8:	47000115 	stw	fp,4(r8)
    7ccc:	d8801c15 	stw	r2,112(sp)
    7cd0:	d8c01b15 	stw	r3,108(sp)
    7cd4:	50fff20e 	bge	r10,r3,7ca0 <__alt_data_end+0xfffe88a0>
    7cd8:	1001b21e 	bne	r2,zero,83a4 <___vfiprintf_internal_r+0xb84>
    7cdc:	843ffc04 	addi	r16,r16,-16
    7ce0:	000d883a 	mov	r6,zero
    7ce4:	01000044 	movi	r4,1
    7ce8:	d811883a 	mov	r8,sp
    7cec:	e43ff116 	blt	fp,r16,7cb4 <__alt_data_end+0xfffe88b4>
    7cf0:	a807883a 	mov	r3,r21
    7cf4:	d9c02917 	ldw	r7,164(sp)
    7cf8:	802b883a 	mov	r21,r16
    7cfc:	dc002717 	ldw	r16,156(sp)
    7d00:	d9402317 	ldw	r5,140(sp)
    7d04:	a885883a 	add	r2,r21,r2
    7d08:	45400115 	stw	r21,4(r8)
    7d0c:	41400015 	stw	r5,0(r8)
    7d10:	d8801c15 	stw	r2,112(sp)
    7d14:	d9001b15 	stw	r4,108(sp)
    7d18:	014001c4 	movi	r5,7
    7d1c:	29026216 	blt	r5,r4,86a8 <___vfiprintf_internal_r+0xe88>
    7d20:	d9801d87 	ldb	r6,118(sp)
    7d24:	42000204 	addi	r8,r8,8
    7d28:	21400044 	addi	r5,r4,1
    7d2c:	3001ae1e 	bne	r6,zero,83e8 <___vfiprintf_internal_r+0xbc8>
    7d30:	3801bb26 	beq	r7,zero,8420 <___vfiprintf_internal_r+0xc00>
    7d34:	d9001d04 	addi	r4,sp,116
    7d38:	10800084 	addi	r2,r2,2
    7d3c:	41000015 	stw	r4,0(r8)
    7d40:	01000084 	movi	r4,2
    7d44:	41000115 	stw	r4,4(r8)
    7d48:	d8801c15 	stw	r2,112(sp)
    7d4c:	d9401b15 	stw	r5,108(sp)
    7d50:	010001c4 	movi	r4,7
    7d54:	2142680e 	bge	r4,r5,86f8 <___vfiprintf_internal_r+0xed8>
    7d58:	1002b11e 	bne	r2,zero,8820 <___vfiprintf_internal_r+0x1000>
    7d5c:	01802004 	movi	r6,128
    7d60:	01400044 	movi	r5,1
    7d64:	0009883a 	mov	r4,zero
    7d68:	d811883a 	mov	r8,sp
    7d6c:	1981ae1e 	bne	r3,r6,8428 <___vfiprintf_internal_r+0xc08>
    7d70:	d8c02517 	ldw	r3,148(sp)
    7d74:	1cf9c83a 	sub	fp,r3,r19
    7d78:	0701ab0e 	bge	zero,fp,8428 <___vfiprintf_internal_r+0xc08>
    7d7c:	05400404 	movi	r21,16
    7d80:	af03a90e 	bge	r21,fp,8c28 <___vfiprintf_internal_r+0x1408>
    7d84:	01400074 	movhi	r5,1
    7d88:	29408c04 	addi	r5,r5,560
    7d8c:	d9402315 	stw	r5,140(sp)
    7d90:	01c001c4 	movi	r7,7
    7d94:	00000506 	br	7dac <___vfiprintf_internal_r+0x58c>
    7d98:	21800084 	addi	r6,r4,2
    7d9c:	42000204 	addi	r8,r8,8
    7da0:	1809883a 	mov	r4,r3
    7da4:	e73ffc04 	addi	fp,fp,-16
    7da8:	af000d0e 	bge	r21,fp,7de0 <___vfiprintf_internal_r+0x5c0>
    7dac:	10800404 	addi	r2,r2,16
    7db0:	20c00044 	addi	r3,r4,1
    7db4:	44800015 	stw	r18,0(r8)
    7db8:	45400115 	stw	r21,4(r8)
    7dbc:	d8801c15 	stw	r2,112(sp)
    7dc0:	d8c01b15 	stw	r3,108(sp)
    7dc4:	38fff40e 	bge	r7,r3,7d98 <__alt_data_end+0xfffe8998>
    7dc8:	10022b1e 	bne	r2,zero,8678 <___vfiprintf_internal_r+0xe58>
    7dcc:	e73ffc04 	addi	fp,fp,-16
    7dd0:	01800044 	movi	r6,1
    7dd4:	0009883a 	mov	r4,zero
    7dd8:	d811883a 	mov	r8,sp
    7ddc:	af3ff316 	blt	r21,fp,7dac <__alt_data_end+0xfffe89ac>
    7de0:	d8c02317 	ldw	r3,140(sp)
    7de4:	1705883a 	add	r2,r2,fp
    7de8:	47000115 	stw	fp,4(r8)
    7dec:	40c00015 	stw	r3,0(r8)
    7df0:	d8801c15 	stw	r2,112(sp)
    7df4:	d9801b15 	stw	r6,108(sp)
    7df8:	00c001c4 	movi	r3,7
    7dfc:	19829416 	blt	r3,r6,8850 <___vfiprintf_internal_r+0x1030>
    7e00:	8521c83a 	sub	r16,r16,r20
    7e04:	42000204 	addi	r8,r8,8
    7e08:	31400044 	addi	r5,r6,1
    7e0c:	3009883a 	mov	r4,r6
    7e10:	04018716 	blt	zero,r16,8430 <___vfiprintf_internal_r+0xc10>
    7e14:	a085883a 	add	r2,r20,r2
    7e18:	45c00015 	stw	r23,0(r8)
    7e1c:	45000115 	stw	r20,4(r8)
    7e20:	d8801c15 	stw	r2,112(sp)
    7e24:	d9401b15 	stw	r5,108(sp)
    7e28:	00c001c4 	movi	r3,7
    7e2c:	1941c20e 	bge	r3,r5,8538 <___vfiprintf_internal_r+0xd18>
    7e30:	1002531e 	bne	r2,zero,8780 <___vfiprintf_internal_r+0xf60>
    7e34:	d8001b15 	stw	zero,108(sp)
    7e38:	8c40010c 	andi	r17,r17,4
    7e3c:	88023226 	beq	r17,zero,8708 <___vfiprintf_internal_r+0xee8>
    7e40:	d9002517 	ldw	r4,148(sp)
    7e44:	24e3c83a 	sub	r17,r4,r19
    7e48:	04432916 	blt	zero,r17,8af0 <___vfiprintf_internal_r+0x12d0>
    7e4c:	d8802517 	ldw	r2,148(sp)
    7e50:	14c0010e 	bge	r2,r19,7e58 <___vfiprintf_internal_r+0x638>
    7e54:	9805883a 	mov	r2,r19
    7e58:	d8c02417 	ldw	r3,144(sp)
    7e5c:	1887883a 	add	r3,r3,r2
    7e60:	d8c02415 	stw	r3,144(sp)
    7e64:	d8001b15 	stw	zero,108(sp)
    7e68:	d811883a 	mov	r8,sp
    7e6c:	003ea006 	br	78f0 <__alt_data_end+0xfffe84f0>
    7e70:	8c400814 	ori	r17,r17,32
    7e74:	b0c00007 	ldb	r3,0(r22)
    7e78:	003ec606 	br	7994 <__alt_data_end+0xfffe8594>
    7e7c:	b0c00007 	ldb	r3,0(r22)
    7e80:	00801b04 	movi	r2,108
    7e84:	18832026 	beq	r3,r2,8b08 <___vfiprintf_internal_r+0x12e8>
    7e88:	8c400414 	ori	r17,r17,16
    7e8c:	003ec106 	br	7994 <__alt_data_end+0xfffe8594>
    7e90:	9cc03fcc 	andi	r19,r19,255
    7e94:	b811883a 	mov	r8,r23
    7e98:	9803981e 	bne	r19,zero,8cfc <___vfiprintf_internal_r+0x14dc>
    7e9c:	8880080c 	andi	r2,r17,32
    7ea0:	1002be26 	beq	r2,zero,899c <___vfiprintf_internal_r+0x117c>
    7ea4:	d9002217 	ldw	r4,136(sp)
    7ea8:	d9402417 	ldw	r5,144(sp)
    7eac:	20800017 	ldw	r2,0(r4)
    7eb0:	2807d7fa 	srai	r3,r5,31
    7eb4:	21000104 	addi	r4,r4,4
    7eb8:	d9002215 	stw	r4,136(sp)
    7ebc:	11400015 	stw	r5,0(r2)
    7ec0:	10c00115 	stw	r3,4(r2)
    7ec4:	003e8a06 	br	78f0 <__alt_data_end+0xfffe84f0>
    7ec8:	9cc03fcc 	andi	r19,r19,255
    7ecc:	b811883a 	mov	r8,r23
    7ed0:	9803871e 	bne	r19,zero,8cf0 <___vfiprintf_internal_r+0x14d0>
    7ed4:	8880080c 	andi	r2,r17,32
    7ed8:	10009a26 	beq	r2,zero,8144 <___vfiprintf_internal_r+0x924>
    7edc:	d9002217 	ldw	r4,136(sp)
    7ee0:	d8001d85 	stb	zero,118(sp)
    7ee4:	20800204 	addi	r2,r4,8
    7ee8:	24c00017 	ldw	r19,0(r4)
    7eec:	25000117 	ldw	r20,4(r4)
    7ef0:	8002a416 	blt	r16,zero,8984 <___vfiprintf_internal_r+0x1164>
    7ef4:	013fdfc4 	movi	r4,-129
    7ef8:	9d06b03a 	or	r3,r19,r20
    7efc:	d8802215 	stw	r2,136(sp)
    7f00:	8922703a 	and	r17,r17,r4
    7f04:	18009b26 	beq	r3,zero,8174 <___vfiprintf_internal_r+0x954>
    7f08:	002b883a 	mov	r21,zero
    7f0c:	ddc01a04 	addi	r23,sp,104
    7f10:	9806d0fa 	srli	r3,r19,3
    7f14:	a008977a 	slli	r4,r20,29
    7f18:	a028d0fa 	srli	r20,r20,3
    7f1c:	9cc001cc 	andi	r19,r19,7
    7f20:	98800c04 	addi	r2,r19,48
    7f24:	bdffffc4 	addi	r23,r23,-1
    7f28:	20e6b03a 	or	r19,r4,r3
    7f2c:	b8800005 	stb	r2,0(r23)
    7f30:	9d06b03a 	or	r3,r19,r20
    7f34:	183ff61e 	bne	r3,zero,7f10 <__alt_data_end+0xfffe8b10>
    7f38:	88c0004c 	andi	r3,r17,1
    7f3c:	18021f1e 	bne	r3,zero,87bc <___vfiprintf_internal_r+0xf9c>
    7f40:	d9401e17 	ldw	r5,120(sp)
    7f44:	2de9c83a 	sub	r20,r5,r23
    7f48:	003f3806 	br	7c2c <__alt_data_end+0xfffe882c>
    7f4c:	9cc03fcc 	andi	r19,r19,255
    7f50:	b811883a 	mov	r8,r23
    7f54:	98034f1e 	bne	r19,zero,8c94 <___vfiprintf_internal_r+0x1474>
    7f58:	00800074 	movhi	r2,1
    7f5c:	10802b04 	addi	r2,r2,172
    7f60:	d8802615 	stw	r2,152(sp)
    7f64:	8880080c 	andi	r2,r17,32
    7f68:	1000ac26 	beq	r2,zero,821c <___vfiprintf_internal_r+0x9fc>
    7f6c:	d9002217 	ldw	r4,136(sp)
    7f70:	24c00017 	ldw	r19,0(r4)
    7f74:	25000117 	ldw	r20,4(r4)
    7f78:	21000204 	addi	r4,r4,8
    7f7c:	d9002215 	stw	r4,136(sp)
    7f80:	8880004c 	andi	r2,r17,1
    7f84:	1001e726 	beq	r2,zero,8724 <___vfiprintf_internal_r+0xf04>
    7f88:	9d04b03a 	or	r2,r19,r20
    7f8c:	10025c1e 	bne	r2,zero,8900 <___vfiprintf_internal_r+0x10e0>
    7f90:	d8001d85 	stb	zero,118(sp)
    7f94:	80024416 	blt	r16,zero,88a8 <___vfiprintf_internal_r+0x1088>
    7f98:	00bfdfc4 	movi	r2,-129
    7f9c:	88a2703a 	and	r17,r17,r2
    7fa0:	003f1d06 	br	7c18 <__alt_data_end+0xfffe8818>
    7fa4:	d8c02217 	ldw	r3,136(sp)
    7fa8:	04c00044 	movi	r19,1
    7fac:	b811883a 	mov	r8,r23
    7fb0:	18800017 	ldw	r2,0(r3)
    7fb4:	18c00104 	addi	r3,r3,4
    7fb8:	d8001d85 	stb	zero,118(sp)
    7fbc:	d8801005 	stb	r2,64(sp)
    7fc0:	d8c02215 	stw	r3,136(sp)
    7fc4:	9829883a 	mov	r20,r19
    7fc8:	ddc01004 	addi	r23,sp,64
    7fcc:	0021883a 	mov	r16,zero
    7fd0:	003f1e06 	br	7c4c <__alt_data_end+0xfffe884c>
    7fd4:	9cc03fcc 	andi	r19,r19,255
    7fd8:	b811883a 	mov	r8,r23
    7fdc:	9803331e 	bne	r19,zero,8cac <___vfiprintf_internal_r+0x148c>
    7fe0:	8880080c 	andi	r2,r17,32
    7fe4:	10004826 	beq	r2,zero,8108 <___vfiprintf_internal_r+0x8e8>
    7fe8:	d9002217 	ldw	r4,136(sp)
    7fec:	20800117 	ldw	r2,4(r4)
    7ff0:	24c00017 	ldw	r19,0(r4)
    7ff4:	21000204 	addi	r4,r4,8
    7ff8:	d9002215 	stw	r4,136(sp)
    7ffc:	1029883a 	mov	r20,r2
    8000:	10024c16 	blt	r2,zero,8934 <___vfiprintf_internal_r+0x1114>
    8004:	dd401d83 	ldbu	r21,118(sp)
    8008:	80007116 	blt	r16,zero,81d0 <___vfiprintf_internal_r+0x9b0>
    800c:	00ffdfc4 	movi	r3,-129
    8010:	9d04b03a 	or	r2,r19,r20
    8014:	88e2703a 	and	r17,r17,r3
    8018:	1000d126 	beq	r2,zero,8360 <___vfiprintf_internal_r+0xb40>
    801c:	a0023526 	beq	r20,zero,88f4 <___vfiprintf_internal_r+0x10d4>
    8020:	ddc01a04 	addi	r23,sp,104
    8024:	4039883a 	mov	fp,r8
    8028:	9809883a 	mov	r4,r19
    802c:	a00b883a 	mov	r5,r20
    8030:	01800284 	movi	r6,10
    8034:	000f883a 	mov	r7,zero
    8038:	000a8d40 	call	a8d4 <__umoddi3>
    803c:	10800c04 	addi	r2,r2,48
    8040:	bdffffc4 	addi	r23,r23,-1
    8044:	9809883a 	mov	r4,r19
    8048:	a00b883a 	mov	r5,r20
    804c:	b8800005 	stb	r2,0(r23)
    8050:	01800284 	movi	r6,10
    8054:	000f883a 	mov	r7,zero
    8058:	000a2d80 	call	a2d8 <__udivdi3>
    805c:	1027883a 	mov	r19,r2
    8060:	10c4b03a 	or	r2,r2,r3
    8064:	1829883a 	mov	r20,r3
    8068:	103fef1e 	bne	r2,zero,8028 <__alt_data_end+0xfffe8c28>
    806c:	d9001e17 	ldw	r4,120(sp)
    8070:	e011883a 	mov	r8,fp
    8074:	25e9c83a 	sub	r20,r4,r23
    8078:	003eec06 	br	7c2c <__alt_data_end+0xfffe882c>
    807c:	d8802307 	ldb	r2,140(sp)
    8080:	1002361e 	bne	r2,zero,895c <___vfiprintf_internal_r+0x113c>
    8084:	00c00804 	movi	r3,32
    8088:	d8c02305 	stb	r3,140(sp)
    808c:	04c00044 	movi	r19,1
    8090:	b0c00007 	ldb	r3,0(r22)
    8094:	003e3f06 	br	7994 <__alt_data_end+0xfffe8594>
    8098:	8c400054 	ori	r17,r17,1
    809c:	b0c00007 	ldb	r3,0(r22)
    80a0:	003e3c06 	br	7994 <__alt_data_end+0xfffe8594>
    80a4:	8c402014 	ori	r17,r17,128
    80a8:	b0c00007 	ldb	r3,0(r22)
    80ac:	003e3906 	br	7994 <__alt_data_end+0xfffe8594>
    80b0:	dc002715 	stw	r16,156(sp)
    80b4:	d8002515 	stw	zero,148(sp)
    80b8:	1f3ff404 	addi	fp,r3,-48
    80bc:	0009883a 	mov	r4,zero
    80c0:	b021883a 	mov	r16,r22
    80c4:	01400284 	movi	r5,10
    80c8:	000b04c0 	call	b04c <__mulsi3>
    80cc:	80c00007 	ldb	r3,0(r16)
    80d0:	e089883a 	add	r4,fp,r2
    80d4:	b5800044 	addi	r22,r22,1
    80d8:	1f3ff404 	addi	fp,r3,-48
    80dc:	b021883a 	mov	r16,r22
    80e0:	af3ff82e 	bgeu	r21,fp,80c4 <__alt_data_end+0xfffe8cc4>
    80e4:	d9002515 	stw	r4,148(sp)
    80e8:	dc002717 	ldw	r16,156(sp)
    80ec:	003e2a06 	br	7998 <__alt_data_end+0xfffe8598>
    80f0:	9cc03fcc 	andi	r19,r19,255
    80f4:	b811883a 	mov	r8,r23
    80f8:	9802e91e 	bne	r19,zero,8ca0 <___vfiprintf_internal_r+0x1480>
    80fc:	8c400414 	ori	r17,r17,16
    8100:	8880080c 	andi	r2,r17,32
    8104:	103fb81e 	bne	r2,zero,7fe8 <__alt_data_end+0xfffe8be8>
    8108:	8880040c 	andi	r2,r17,16
    810c:	10022e26 	beq	r2,zero,89c8 <___vfiprintf_internal_r+0x11a8>
    8110:	d9402217 	ldw	r5,136(sp)
    8114:	2cc00017 	ldw	r19,0(r5)
    8118:	29400104 	addi	r5,r5,4
    811c:	d9402215 	stw	r5,136(sp)
    8120:	9829d7fa 	srai	r20,r19,31
    8124:	a005883a 	mov	r2,r20
    8128:	003fb506 	br	8000 <__alt_data_end+0xfffe8c00>
    812c:	9cc03fcc 	andi	r19,r19,255
    8130:	b811883a 	mov	r8,r23
    8134:	9802fa1e 	bne	r19,zero,8d20 <___vfiprintf_internal_r+0x1500>
    8138:	8c400414 	ori	r17,r17,16
    813c:	8880080c 	andi	r2,r17,32
    8140:	103f661e 	bne	r2,zero,7edc <__alt_data_end+0xfffe8adc>
    8144:	8880040c 	andi	r2,r17,16
    8148:	10020626 	beq	r2,zero,8964 <___vfiprintf_internal_r+0x1144>
    814c:	d9402217 	ldw	r5,136(sp)
    8150:	d8001d85 	stb	zero,118(sp)
    8154:	0029883a 	mov	r20,zero
    8158:	28800104 	addi	r2,r5,4
    815c:	2cc00017 	ldw	r19,0(r5)
    8160:	80020816 	blt	r16,zero,8984 <___vfiprintf_internal_r+0x1164>
    8164:	00ffdfc4 	movi	r3,-129
    8168:	d8802215 	stw	r2,136(sp)
    816c:	88e2703a 	and	r17,r17,r3
    8170:	983f651e 	bne	r19,zero,7f08 <__alt_data_end+0xfffe8b08>
    8174:	002b883a 	mov	r21,zero
    8178:	8002cf26 	beq	r16,zero,8cb8 <___vfiprintf_internal_r+0x1498>
    817c:	0027883a 	mov	r19,zero
    8180:	0029883a 	mov	r20,zero
    8184:	003f6106 	br	7f0c <__alt_data_end+0xfffe8b0c>
    8188:	9cc03fcc 	andi	r19,r19,255
    818c:	b811883a 	mov	r8,r23
    8190:	9802e01e 	bne	r19,zero,8d14 <___vfiprintf_internal_r+0x14f4>
    8194:	8c400414 	ori	r17,r17,16
    8198:	8880080c 	andi	r2,r17,32
    819c:	1000641e 	bne	r2,zero,8330 <___vfiprintf_internal_r+0xb10>
    81a0:	8880040c 	andi	r2,r17,16
    81a4:	1001c81e 	bne	r2,zero,88c8 <___vfiprintf_internal_r+0x10a8>
    81a8:	8880100c 	andi	r2,r17,64
    81ac:	d8001d85 	stb	zero,118(sp)
    81b0:	1002281e 	bne	r2,zero,8a54 <___vfiprintf_internal_r+0x1234>
    81b4:	d9002217 	ldw	r4,136(sp)
    81b8:	0029883a 	mov	r20,zero
    81bc:	20800104 	addi	r2,r4,4
    81c0:	24c00017 	ldw	r19,0(r4)
    81c4:	8001c60e 	bge	r16,zero,88e0 <___vfiprintf_internal_r+0x10c0>
    81c8:	d8802215 	stw	r2,136(sp)
    81cc:	002b883a 	mov	r21,zero
    81d0:	9d04b03a 	or	r2,r19,r20
    81d4:	103f911e 	bne	r2,zero,801c <__alt_data_end+0xfffe8c1c>
    81d8:	00800044 	movi	r2,1
    81dc:	10803fcc 	andi	r2,r2,255
    81e0:	00c00044 	movi	r3,1
    81e4:	10c05f26 	beq	r2,r3,8364 <___vfiprintf_internal_r+0xb44>
    81e8:	00c00084 	movi	r3,2
    81ec:	10ffe31e 	bne	r2,r3,817c <__alt_data_end+0xfffe8d7c>
    81f0:	0027883a 	mov	r19,zero
    81f4:	0029883a 	mov	r20,zero
    81f8:	00015106 	br	8740 <___vfiprintf_internal_r+0xf20>
    81fc:	9cc03fcc 	andi	r19,r19,255
    8200:	b811883a 	mov	r8,r23
    8204:	9802c01e 	bne	r19,zero,8d08 <___vfiprintf_internal_r+0x14e8>
    8208:	01400074 	movhi	r5,1
    820c:	29402604 	addi	r5,r5,152
    8210:	d9402615 	stw	r5,152(sp)
    8214:	8880080c 	andi	r2,r17,32
    8218:	103f541e 	bne	r2,zero,7f6c <__alt_data_end+0xfffe8b6c>
    821c:	8880040c 	andi	r2,r17,16
    8220:	1001f226 	beq	r2,zero,89ec <___vfiprintf_internal_r+0x11cc>
    8224:	d9402217 	ldw	r5,136(sp)
    8228:	0029883a 	mov	r20,zero
    822c:	2cc00017 	ldw	r19,0(r5)
    8230:	29400104 	addi	r5,r5,4
    8234:	d9402215 	stw	r5,136(sp)
    8238:	003f5106 	br	7f80 <__alt_data_end+0xfffe8b80>
    823c:	d8c02217 	ldw	r3,136(sp)
    8240:	b811883a 	mov	r8,r23
    8244:	d8001d85 	stb	zero,118(sp)
    8248:	1dc00017 	ldw	r23,0(r3)
    824c:	1f000104 	addi	fp,r3,4
    8250:	b8025926 	beq	r23,zero,8bb8 <___vfiprintf_internal_r+0x1398>
    8254:	80023316 	blt	r16,zero,8b24 <___vfiprintf_internal_r+0x1304>
    8258:	800d883a 	mov	r6,r16
    825c:	000b883a 	mov	r5,zero
    8260:	b809883a 	mov	r4,r23
    8264:	da002a15 	stw	r8,168(sp)
    8268:	00060640 	call	6064 <memchr>
    826c:	da002a17 	ldw	r8,168(sp)
    8270:	10026826 	beq	r2,zero,8c14 <___vfiprintf_internal_r+0x13f4>
    8274:	15e9c83a 	sub	r20,r2,r23
    8278:	dd401d83 	ldbu	r21,118(sp)
    827c:	df002215 	stw	fp,136(sp)
    8280:	0021883a 	mov	r16,zero
    8284:	003e6906 	br	7c2c <__alt_data_end+0xfffe882c>
    8288:	9cc03fcc 	andi	r19,r19,255
    828c:	b811883a 	mov	r8,r23
    8290:	983fc126 	beq	r19,zero,8198 <__alt_data_end+0xfffe8d98>
    8294:	d8c02303 	ldbu	r3,140(sp)
    8298:	d8c01d85 	stb	r3,118(sp)
    829c:	003fbe06 	br	8198 <__alt_data_end+0xfffe8d98>
    82a0:	d9002217 	ldw	r4,136(sp)
    82a4:	d9402217 	ldw	r5,136(sp)
    82a8:	21000017 	ldw	r4,0(r4)
    82ac:	28800104 	addi	r2,r5,4
    82b0:	d9002515 	stw	r4,148(sp)
    82b4:	203e3d16 	blt	r4,zero,7bac <__alt_data_end+0xfffe87ac>
    82b8:	d8802215 	stw	r2,136(sp)
    82bc:	b0c00007 	ldb	r3,0(r22)
    82c0:	003db406 	br	7994 <__alt_data_end+0xfffe8594>
    82c4:	00c00ac4 	movi	r3,43
    82c8:	d8c02305 	stb	r3,140(sp)
    82cc:	04c00044 	movi	r19,1
    82d0:	b0c00007 	ldb	r3,0(r22)
    82d4:	003daf06 	br	7994 <__alt_data_end+0xfffe8594>
    82d8:	b0c00007 	ldb	r3,0(r22)
    82dc:	01000a84 	movi	r4,42
    82e0:	b4000044 	addi	r16,r22,1
    82e4:	19025e26 	beq	r3,r4,8c60 <___vfiprintf_internal_r+0x1440>
    82e8:	1f3ff404 	addi	fp,r3,-48
    82ec:	0009883a 	mov	r4,zero
    82f0:	af025236 	bltu	r21,fp,8c3c <___vfiprintf_internal_r+0x141c>
    82f4:	01400284 	movi	r5,10
    82f8:	000b04c0 	call	b04c <__mulsi3>
    82fc:	80c00007 	ldb	r3,0(r16)
    8300:	1709883a 	add	r4,r2,fp
    8304:	85800044 	addi	r22,r16,1
    8308:	1f3ff404 	addi	fp,r3,-48
    830c:	b021883a 	mov	r16,r22
    8310:	af3ff82e 	bgeu	r21,fp,82f4 <__alt_data_end+0xfffe8ef4>
    8314:	2021883a 	mov	r16,r4
    8318:	203d9f0e 	bge	r4,zero,7998 <__alt_data_end+0xfffe8598>
    831c:	043fffc4 	movi	r16,-1
    8320:	003d9d06 	br	7998 <__alt_data_end+0xfffe8598>
    8324:	8c401014 	ori	r17,r17,64
    8328:	b0c00007 	ldb	r3,0(r22)
    832c:	003d9906 	br	7994 <__alt_data_end+0xfffe8594>
    8330:	d9002217 	ldw	r4,136(sp)
    8334:	d8001d85 	stb	zero,118(sp)
    8338:	20c00204 	addi	r3,r4,8
    833c:	24c00017 	ldw	r19,0(r4)
    8340:	25000117 	ldw	r20,4(r4)
    8344:	8001e716 	blt	r16,zero,8ae4 <___vfiprintf_internal_r+0x12c4>
    8348:	013fdfc4 	movi	r4,-129
    834c:	9d04b03a 	or	r2,r19,r20
    8350:	d8c02215 	stw	r3,136(sp)
    8354:	8922703a 	and	r17,r17,r4
    8358:	002b883a 	mov	r21,zero
    835c:	103f2f1e 	bne	r2,zero,801c <__alt_data_end+0xfffe8c1c>
    8360:	803e2f26 	beq	r16,zero,7c20 <__alt_data_end+0xfffe8820>
    8364:	0027883a 	mov	r19,zero
    8368:	9cc00c04 	addi	r19,r19,48
    836c:	dcc019c5 	stb	r19,103(sp)
    8370:	dd002817 	ldw	r20,160(sp)
    8374:	ddc019c4 	addi	r23,sp,103
    8378:	003e2c06 	br	7c2c <__alt_data_end+0xfffe882c>
    837c:	9cc03fcc 	andi	r19,r19,255
    8380:	b811883a 	mov	r8,r23
    8384:	9802571e 	bne	r19,zero,8ce4 <___vfiprintf_internal_r+0x14c4>
    8388:	18005726 	beq	r3,zero,84e8 <___vfiprintf_internal_r+0xcc8>
    838c:	04c00044 	movi	r19,1
    8390:	d8c01005 	stb	r3,64(sp)
    8394:	d8001d85 	stb	zero,118(sp)
    8398:	9829883a 	mov	r20,r19
    839c:	ddc01004 	addi	r23,sp,64
    83a0:	003f0a06 	br	7fcc <__alt_data_end+0xfffe8bcc>
    83a4:	d9402017 	ldw	r5,128(sp)
    83a8:	d9002117 	ldw	r4,132(sp)
    83ac:	d9801a04 	addi	r6,sp,104
    83b0:	da802a15 	stw	r10,168(sp)
    83b4:	000770c0 	call	770c <__sprint_r.part.0>
    83b8:	da802a17 	ldw	r10,168(sp)
    83bc:	1000501e 	bne	r2,zero,8500 <___vfiprintf_internal_r+0xce0>
    83c0:	d9801b17 	ldw	r6,108(sp)
    83c4:	d8801c17 	ldw	r2,112(sp)
    83c8:	d811883a 	mov	r8,sp
    83cc:	31000044 	addi	r4,r6,1
    83d0:	003e3606 	br	7cac <__alt_data_end+0xfffe88ac>
    83d4:	d9001b17 	ldw	r4,108(sp)
    83d8:	d8801c17 	ldw	r2,112(sp)
    83dc:	21400044 	addi	r5,r4,1
    83e0:	d9801d87 	ldb	r6,118(sp)
    83e4:	303e5226 	beq	r6,zero,7d30 <__alt_data_end+0xfffe8930>
    83e8:	01800044 	movi	r6,1
    83ec:	d9001d84 	addi	r4,sp,118
    83f0:	1185883a 	add	r2,r2,r6
    83f4:	41000015 	stw	r4,0(r8)
    83f8:	41800115 	stw	r6,4(r8)
    83fc:	d8801c15 	stw	r2,112(sp)
    8400:	d9401b15 	stw	r5,108(sp)
    8404:	010001c4 	movi	r4,7
    8408:	2140b00e 	bge	r4,r5,86cc <___vfiprintf_internal_r+0xeac>
    840c:	1000f61e 	bne	r2,zero,87e8 <___vfiprintf_internal_r+0xfc8>
    8410:	3800b31e 	bne	r7,zero,86e0 <___vfiprintf_internal_r+0xec0>
    8414:	0009883a 	mov	r4,zero
    8418:	300b883a 	mov	r5,r6
    841c:	d811883a 	mov	r8,sp
    8420:	01802004 	movi	r6,128
    8424:	19be5226 	beq	r3,r6,7d70 <__alt_data_end+0xfffe8970>
    8428:	8521c83a 	sub	r16,r16,r20
    842c:	043e790e 	bge	zero,r16,7e14 <__alt_data_end+0xfffe8a14>
    8430:	05400404 	movi	r21,16
    8434:	ac01b00e 	bge	r21,r16,8af8 <___vfiprintf_internal_r+0x12d8>
    8438:	01400074 	movhi	r5,1
    843c:	29408c04 	addi	r5,r5,560
    8440:	d9402315 	stw	r5,140(sp)
    8444:	070001c4 	movi	fp,7
    8448:	00000506 	br	8460 <___vfiprintf_internal_r+0xc40>
    844c:	21400084 	addi	r5,r4,2
    8450:	42000204 	addi	r8,r8,8
    8454:	1809883a 	mov	r4,r3
    8458:	843ffc04 	addi	r16,r16,-16
    845c:	ac000d0e 	bge	r21,r16,8494 <___vfiprintf_internal_r+0xc74>
    8460:	10800404 	addi	r2,r2,16
    8464:	20c00044 	addi	r3,r4,1
    8468:	44800015 	stw	r18,0(r8)
    846c:	45400115 	stw	r21,4(r8)
    8470:	d8801c15 	stw	r2,112(sp)
    8474:	d8c01b15 	stw	r3,108(sp)
    8478:	e0fff40e 	bge	fp,r3,844c <__alt_data_end+0xfffe904c>
    847c:	1000101e 	bne	r2,zero,84c0 <___vfiprintf_internal_r+0xca0>
    8480:	843ffc04 	addi	r16,r16,-16
    8484:	01400044 	movi	r5,1
    8488:	0009883a 	mov	r4,zero
    848c:	d811883a 	mov	r8,sp
    8490:	ac3ff316 	blt	r21,r16,8460 <__alt_data_end+0xfffe9060>
    8494:	d8c02317 	ldw	r3,140(sp)
    8498:	1405883a 	add	r2,r2,r16
    849c:	44000115 	stw	r16,4(r8)
    84a0:	40c00015 	stw	r3,0(r8)
    84a4:	d8801c15 	stw	r2,112(sp)
    84a8:	d9401b15 	stw	r5,108(sp)
    84ac:	00c001c4 	movi	r3,7
    84b0:	19401916 	blt	r3,r5,8518 <___vfiprintf_internal_r+0xcf8>
    84b4:	42000204 	addi	r8,r8,8
    84b8:	29400044 	addi	r5,r5,1
    84bc:	003e5506 	br	7e14 <__alt_data_end+0xfffe8a14>
    84c0:	d9402017 	ldw	r5,128(sp)
    84c4:	d9002117 	ldw	r4,132(sp)
    84c8:	d9801a04 	addi	r6,sp,104
    84cc:	000770c0 	call	770c <__sprint_r.part.0>
    84d0:	10000b1e 	bne	r2,zero,8500 <___vfiprintf_internal_r+0xce0>
    84d4:	d9001b17 	ldw	r4,108(sp)
    84d8:	d8801c17 	ldw	r2,112(sp)
    84dc:	d811883a 	mov	r8,sp
    84e0:	21400044 	addi	r5,r4,1
    84e4:	003fdc06 	br	8458 <__alt_data_end+0xfffe9058>
    84e8:	d8801c17 	ldw	r2,112(sp)
    84ec:	10000426 	beq	r2,zero,8500 <___vfiprintf_internal_r+0xce0>
    84f0:	d9402017 	ldw	r5,128(sp)
    84f4:	d9002117 	ldw	r4,132(sp)
    84f8:	d9801a04 	addi	r6,sp,104
    84fc:	000770c0 	call	770c <__sprint_r.part.0>
    8500:	d9402017 	ldw	r5,128(sp)
    8504:	2880030b 	ldhu	r2,12(r5)
    8508:	1080100c 	andi	r2,r2,64
    850c:	10014d1e 	bne	r2,zero,8a44 <___vfiprintf_internal_r+0x1224>
    8510:	d8802417 	ldw	r2,144(sp)
    8514:	003d9706 	br	7b74 <__alt_data_end+0xfffe8774>
    8518:	1000d21e 	bne	r2,zero,8864 <___vfiprintf_internal_r+0x1044>
    851c:	00c00044 	movi	r3,1
    8520:	a005883a 	mov	r2,r20
    8524:	ddc00015 	stw	r23,0(sp)
    8528:	dd000115 	stw	r20,4(sp)
    852c:	dd001c15 	stw	r20,112(sp)
    8530:	d8c01b15 	stw	r3,108(sp)
    8534:	d811883a 	mov	r8,sp
    8538:	42000204 	addi	r8,r8,8
    853c:	8c40010c 	andi	r17,r17,4
    8540:	88004026 	beq	r17,zero,8644 <___vfiprintf_internal_r+0xe24>
    8544:	d9002517 	ldw	r4,148(sp)
    8548:	24e3c83a 	sub	r17,r4,r19
    854c:	04403d0e 	bge	zero,r17,8644 <___vfiprintf_internal_r+0xe24>
    8550:	04000404 	movi	r16,16
    8554:	8441a90e 	bge	r16,r17,8bfc <___vfiprintf_internal_r+0x13dc>
    8558:	00c00074 	movhi	r3,1
    855c:	18c09004 	addi	r3,r3,576
    8560:	d9001b17 	ldw	r4,108(sp)
    8564:	d8c02315 	stw	r3,140(sp)
    8568:	050001c4 	movi	r20,7
    856c:	dd402117 	ldw	r21,132(sp)
    8570:	ddc02017 	ldw	r23,128(sp)
    8574:	00000506 	br	858c <___vfiprintf_internal_r+0xd6c>
    8578:	21400084 	addi	r5,r4,2
    857c:	42000204 	addi	r8,r8,8
    8580:	1809883a 	mov	r4,r3
    8584:	8c7ffc04 	addi	r17,r17,-16
    8588:	84400f0e 	bge	r16,r17,85c8 <___vfiprintf_internal_r+0xda8>
    858c:	01400074 	movhi	r5,1
    8590:	10800404 	addi	r2,r2,16
    8594:	20c00044 	addi	r3,r4,1
    8598:	29409004 	addi	r5,r5,576
    859c:	41400015 	stw	r5,0(r8)
    85a0:	44000115 	stw	r16,4(r8)
    85a4:	d8801c15 	stw	r2,112(sp)
    85a8:	d8c01b15 	stw	r3,108(sp)
    85ac:	a0fff20e 	bge	r20,r3,8578 <__alt_data_end+0xfffe9178>
    85b0:	1000141e 	bne	r2,zero,8604 <___vfiprintf_internal_r+0xde4>
    85b4:	8c7ffc04 	addi	r17,r17,-16
    85b8:	01400044 	movi	r5,1
    85bc:	0009883a 	mov	r4,zero
    85c0:	d811883a 	mov	r8,sp
    85c4:	847ff116 	blt	r16,r17,858c <__alt_data_end+0xfffe918c>
    85c8:	d8c02317 	ldw	r3,140(sp)
    85cc:	1445883a 	add	r2,r2,r17
    85d0:	44400115 	stw	r17,4(r8)
    85d4:	40c00015 	stw	r3,0(r8)
    85d8:	d8801c15 	stw	r2,112(sp)
    85dc:	d9401b15 	stw	r5,108(sp)
    85e0:	00c001c4 	movi	r3,7
    85e4:	1940170e 	bge	r3,r5,8644 <___vfiprintf_internal_r+0xe24>
    85e8:	1000101e 	bne	r2,zero,862c <___vfiprintf_internal_r+0xe0c>
    85ec:	d8802517 	ldw	r2,148(sp)
    85f0:	14c11616 	blt	r2,r19,8a4c <___vfiprintf_internal_r+0x122c>
    85f4:	d9002417 	ldw	r4,144(sp)
    85f8:	2089883a 	add	r4,r4,r2
    85fc:	d9002415 	stw	r4,144(sp)
    8600:	003e1806 	br	7e64 <__alt_data_end+0xfffe8a64>
    8604:	d9801a04 	addi	r6,sp,104
    8608:	b80b883a 	mov	r5,r23
    860c:	a809883a 	mov	r4,r21
    8610:	000770c0 	call	770c <__sprint_r.part.0>
    8614:	103fba1e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    8618:	d9001b17 	ldw	r4,108(sp)
    861c:	d8801c17 	ldw	r2,112(sp)
    8620:	d811883a 	mov	r8,sp
    8624:	21400044 	addi	r5,r4,1
    8628:	003fd606 	br	8584 <__alt_data_end+0xfffe9184>
    862c:	d9402017 	ldw	r5,128(sp)
    8630:	d9002117 	ldw	r4,132(sp)
    8634:	d9801a04 	addi	r6,sp,104
    8638:	000770c0 	call	770c <__sprint_r.part.0>
    863c:	103fb01e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    8640:	d8801c17 	ldw	r2,112(sp)
    8644:	d8c02517 	ldw	r3,148(sp)
    8648:	1cc0010e 	bge	r3,r19,8650 <___vfiprintf_internal_r+0xe30>
    864c:	9807883a 	mov	r3,r19
    8650:	d9002417 	ldw	r4,144(sp)
    8654:	20c9883a 	add	r4,r4,r3
    8658:	d9002415 	stw	r4,144(sp)
    865c:	103e0126 	beq	r2,zero,7e64 <__alt_data_end+0xfffe8a64>
    8660:	d9402017 	ldw	r5,128(sp)
    8664:	d9002117 	ldw	r4,132(sp)
    8668:	d9801a04 	addi	r6,sp,104
    866c:	000770c0 	call	770c <__sprint_r.part.0>
    8670:	103dfc26 	beq	r2,zero,7e64 <__alt_data_end+0xfffe8a64>
    8674:	003fa206 	br	8500 <__alt_data_end+0xfffe9100>
    8678:	d9402017 	ldw	r5,128(sp)
    867c:	d9002117 	ldw	r4,132(sp)
    8680:	d9801a04 	addi	r6,sp,104
    8684:	d9c02b15 	stw	r7,172(sp)
    8688:	000770c0 	call	770c <__sprint_r.part.0>
    868c:	d9c02b17 	ldw	r7,172(sp)
    8690:	103f9b1e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    8694:	d9001b17 	ldw	r4,108(sp)
    8698:	d8801c17 	ldw	r2,112(sp)
    869c:	d811883a 	mov	r8,sp
    86a0:	21800044 	addi	r6,r4,1
    86a4:	003dbf06 	br	7da4 <__alt_data_end+0xfffe89a4>
    86a8:	1000d81e 	bne	r2,zero,8a0c <___vfiprintf_internal_r+0x11ec>
    86ac:	d9001d87 	ldb	r4,118(sp)
    86b0:	20000a26 	beq	r4,zero,86dc <___vfiprintf_internal_r+0xebc>
    86b4:	00800044 	movi	r2,1
    86b8:	d9001d84 	addi	r4,sp,118
    86bc:	100b883a 	mov	r5,r2
    86c0:	d9000015 	stw	r4,0(sp)
    86c4:	d8800115 	stw	r2,4(sp)
    86c8:	d811883a 	mov	r8,sp
    86cc:	2809883a 	mov	r4,r5
    86d0:	42000204 	addi	r8,r8,8
    86d4:	29400044 	addi	r5,r5,1
    86d8:	003d9506 	br	7d30 <__alt_data_end+0xfffe8930>
    86dc:	3800fd26 	beq	r7,zero,8ad4 <___vfiprintf_internal_r+0x12b4>
    86e0:	00800084 	movi	r2,2
    86e4:	d9001d04 	addi	r4,sp,116
    86e8:	d9000015 	stw	r4,0(sp)
    86ec:	d8800115 	stw	r2,4(sp)
    86f0:	01400044 	movi	r5,1
    86f4:	d811883a 	mov	r8,sp
    86f8:	2809883a 	mov	r4,r5
    86fc:	42000204 	addi	r8,r8,8
    8700:	29400044 	addi	r5,r5,1
    8704:	003f4606 	br	8420 <__alt_data_end+0xfffe9020>
    8708:	d8802517 	ldw	r2,148(sp)
    870c:	14c0010e 	bge	r2,r19,8714 <___vfiprintf_internal_r+0xef4>
    8710:	9805883a 	mov	r2,r19
    8714:	d9402417 	ldw	r5,144(sp)
    8718:	288b883a 	add	r5,r5,r2
    871c:	d9402415 	stw	r5,144(sp)
    8720:	003dd006 	br	7e64 <__alt_data_end+0xfffe8a64>
    8724:	d8001d85 	stb	zero,118(sp)
    8728:	80005d16 	blt	r16,zero,88a0 <___vfiprintf_internal_r+0x1080>
    872c:	00ffdfc4 	movi	r3,-129
    8730:	9d04b03a 	or	r2,r19,r20
    8734:	88e2703a 	and	r17,r17,r3
    8738:	103d3726 	beq	r2,zero,7c18 <__alt_data_end+0xfffe8818>
    873c:	002b883a 	mov	r21,zero
    8740:	d9002617 	ldw	r4,152(sp)
    8744:	ddc01a04 	addi	r23,sp,104
    8748:	988003cc 	andi	r2,r19,15
    874c:	a006973a 	slli	r3,r20,28
    8750:	2085883a 	add	r2,r4,r2
    8754:	9826d13a 	srli	r19,r19,4
    8758:	10800003 	ldbu	r2,0(r2)
    875c:	a028d13a 	srli	r20,r20,4
    8760:	bdffffc4 	addi	r23,r23,-1
    8764:	1ce6b03a 	or	r19,r3,r19
    8768:	b8800005 	stb	r2,0(r23)
    876c:	9d04b03a 	or	r2,r19,r20
    8770:	103ff51e 	bne	r2,zero,8748 <__alt_data_end+0xfffe9348>
    8774:	d8801e17 	ldw	r2,120(sp)
    8778:	15e9c83a 	sub	r20,r2,r23
    877c:	003d2b06 	br	7c2c <__alt_data_end+0xfffe882c>
    8780:	d9402017 	ldw	r5,128(sp)
    8784:	d9002117 	ldw	r4,132(sp)
    8788:	d9801a04 	addi	r6,sp,104
    878c:	000770c0 	call	770c <__sprint_r.part.0>
    8790:	103f5b1e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    8794:	d8801c17 	ldw	r2,112(sp)
    8798:	d811883a 	mov	r8,sp
    879c:	003f6706 	br	853c <__alt_data_end+0xfffe913c>
    87a0:	d9402017 	ldw	r5,128(sp)
    87a4:	d9002117 	ldw	r4,132(sp)
    87a8:	d9801a04 	addi	r6,sp,104
    87ac:	000770c0 	call	770c <__sprint_r.part.0>
    87b0:	103f531e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    87b4:	d811883a 	mov	r8,sp
    87b8:	003cd906 	br	7b20 <__alt_data_end+0xfffe8720>
    87bc:	10803fcc 	andi	r2,r2,255
    87c0:	1080201c 	xori	r2,r2,128
    87c4:	10bfe004 	addi	r2,r2,-128
    87c8:	00c00c04 	movi	r3,48
    87cc:	10ffe926 	beq	r2,r3,8774 <__alt_data_end+0xfffe9374>
    87d0:	b8ffffc5 	stb	r3,-1(r23)
    87d4:	d8c01e17 	ldw	r3,120(sp)
    87d8:	b8bfffc4 	addi	r2,r23,-1
    87dc:	102f883a 	mov	r23,r2
    87e0:	18a9c83a 	sub	r20,r3,r2
    87e4:	003d1106 	br	7c2c <__alt_data_end+0xfffe882c>
    87e8:	d9402017 	ldw	r5,128(sp)
    87ec:	d9002117 	ldw	r4,132(sp)
    87f0:	d9801a04 	addi	r6,sp,104
    87f4:	d8c02a15 	stw	r3,168(sp)
    87f8:	d9c02b15 	stw	r7,172(sp)
    87fc:	000770c0 	call	770c <__sprint_r.part.0>
    8800:	d8c02a17 	ldw	r3,168(sp)
    8804:	d9c02b17 	ldw	r7,172(sp)
    8808:	103f3d1e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    880c:	d9001b17 	ldw	r4,108(sp)
    8810:	d8801c17 	ldw	r2,112(sp)
    8814:	d811883a 	mov	r8,sp
    8818:	21400044 	addi	r5,r4,1
    881c:	003d4406 	br	7d30 <__alt_data_end+0xfffe8930>
    8820:	d9402017 	ldw	r5,128(sp)
    8824:	d9002117 	ldw	r4,132(sp)
    8828:	d9801a04 	addi	r6,sp,104
    882c:	d8c02a15 	stw	r3,168(sp)
    8830:	000770c0 	call	770c <__sprint_r.part.0>
    8834:	d8c02a17 	ldw	r3,168(sp)
    8838:	103f311e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    883c:	d9001b17 	ldw	r4,108(sp)
    8840:	d8801c17 	ldw	r2,112(sp)
    8844:	d811883a 	mov	r8,sp
    8848:	21400044 	addi	r5,r4,1
    884c:	003ef406 	br	8420 <__alt_data_end+0xfffe9020>
    8850:	1000bd1e 	bne	r2,zero,8b48 <___vfiprintf_internal_r+0x1328>
    8854:	01400044 	movi	r5,1
    8858:	0009883a 	mov	r4,zero
    885c:	d811883a 	mov	r8,sp
    8860:	003ef106 	br	8428 <__alt_data_end+0xfffe9028>
    8864:	d9402017 	ldw	r5,128(sp)
    8868:	d9002117 	ldw	r4,132(sp)
    886c:	d9801a04 	addi	r6,sp,104
    8870:	000770c0 	call	770c <__sprint_r.part.0>
    8874:	103f221e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    8878:	d9401b17 	ldw	r5,108(sp)
    887c:	d8801c17 	ldw	r2,112(sp)
    8880:	d811883a 	mov	r8,sp
    8884:	29400044 	addi	r5,r5,1
    8888:	003d6206 	br	7e14 <__alt_data_end+0xfffe8a14>
    888c:	01400074 	movhi	r5,1
    8890:	29402b04 	addi	r5,r5,172
    8894:	d9402615 	stw	r5,152(sp)
    8898:	d8c02215 	stw	r3,136(sp)
    889c:	1023883a 	mov	r17,r2
    88a0:	9d04b03a 	or	r2,r19,r20
    88a4:	103fa51e 	bne	r2,zero,873c <__alt_data_end+0xfffe933c>
    88a8:	002b883a 	mov	r21,zero
    88ac:	00800084 	movi	r2,2
    88b0:	003e4a06 	br	81dc <__alt_data_end+0xfffe8ddc>
    88b4:	01400074 	movhi	r5,1
    88b8:	29402b04 	addi	r5,r5,172
    88bc:	002b883a 	mov	r21,zero
    88c0:	d9402615 	stw	r5,152(sp)
    88c4:	003f9e06 	br	8740 <__alt_data_end+0xfffe9340>
    88c8:	d9402217 	ldw	r5,136(sp)
    88cc:	d8001d85 	stb	zero,118(sp)
    88d0:	0029883a 	mov	r20,zero
    88d4:	28800104 	addi	r2,r5,4
    88d8:	2cc00017 	ldw	r19,0(r5)
    88dc:	803e3a16 	blt	r16,zero,81c8 <__alt_data_end+0xfffe8dc8>
    88e0:	00ffdfc4 	movi	r3,-129
    88e4:	d8802215 	stw	r2,136(sp)
    88e8:	88e2703a 	and	r17,r17,r3
    88ec:	002b883a 	mov	r21,zero
    88f0:	983e9b26 	beq	r19,zero,8360 <__alt_data_end+0xfffe8f60>
    88f4:	00800244 	movi	r2,9
    88f8:	14fdc936 	bltu	r2,r19,8020 <__alt_data_end+0xfffe8c20>
    88fc:	003e9a06 	br	8368 <__alt_data_end+0xfffe8f68>
    8900:	00800c04 	movi	r2,48
    8904:	d8c01d45 	stb	r3,117(sp)
    8908:	d8801d05 	stb	r2,116(sp)
    890c:	d8001d85 	stb	zero,118(sp)
    8910:	88c00094 	ori	r3,r17,2
    8914:	80009c16 	blt	r16,zero,8b88 <___vfiprintf_internal_r+0x1368>
    8918:	00bfdfc4 	movi	r2,-129
    891c:	88a2703a 	and	r17,r17,r2
    8920:	8c400094 	ori	r17,r17,2
    8924:	002b883a 	mov	r21,zero
    8928:	003f8506 	br	8740 <__alt_data_end+0xfffe9340>
    892c:	b029883a 	mov	r20,r22
    8930:	003c0b06 	br	7960 <__alt_data_end+0xfffe8560>
    8934:	04e7c83a 	sub	r19,zero,r19
    8938:	05400b44 	movi	r21,45
    893c:	9804c03a 	cmpne	r2,r19,zero
    8940:	0529c83a 	sub	r20,zero,r20
    8944:	dd401d85 	stb	r21,118(sp)
    8948:	a0a9c83a 	sub	r20,r20,r2
    894c:	80009716 	blt	r16,zero,8bac <___vfiprintf_internal_r+0x138c>
    8950:	00bfdfc4 	movi	r2,-129
    8954:	88a2703a 	and	r17,r17,r2
    8958:	003db006 	br	801c <__alt_data_end+0xfffe8c1c>
    895c:	b0c00007 	ldb	r3,0(r22)
    8960:	003c0c06 	br	7994 <__alt_data_end+0xfffe8594>
    8964:	8880100c 	andi	r2,r17,64
    8968:	d8001d85 	stb	zero,118(sp)
    896c:	1000461e 	bne	r2,zero,8a88 <___vfiprintf_internal_r+0x1268>
    8970:	d9002217 	ldw	r4,136(sp)
    8974:	0029883a 	mov	r20,zero
    8978:	20800104 	addi	r2,r4,4
    897c:	24c00017 	ldw	r19,0(r4)
    8980:	803df80e 	bge	r16,zero,8164 <__alt_data_end+0xfffe8d64>
    8984:	9d06b03a 	or	r3,r19,r20
    8988:	d8802215 	stw	r2,136(sp)
    898c:	183d5e1e 	bne	r3,zero,7f08 <__alt_data_end+0xfffe8b08>
    8990:	002b883a 	mov	r21,zero
    8994:	0005883a 	mov	r2,zero
    8998:	003e1006 	br	81dc <__alt_data_end+0xfffe8ddc>
    899c:	8880040c 	andi	r2,r17,16
    89a0:	1000321e 	bne	r2,zero,8a6c <___vfiprintf_internal_r+0x124c>
    89a4:	8c40100c 	andi	r17,r17,64
    89a8:	88008d26 	beq	r17,zero,8be0 <___vfiprintf_internal_r+0x13c0>
    89ac:	d9402217 	ldw	r5,136(sp)
    89b0:	d8c02417 	ldw	r3,144(sp)
    89b4:	28800017 	ldw	r2,0(r5)
    89b8:	29400104 	addi	r5,r5,4
    89bc:	d9402215 	stw	r5,136(sp)
    89c0:	10c0000d 	sth	r3,0(r2)
    89c4:	003bca06 	br	78f0 <__alt_data_end+0xfffe84f0>
    89c8:	8880100c 	andi	r2,r17,64
    89cc:	10003a26 	beq	r2,zero,8ab8 <___vfiprintf_internal_r+0x1298>
    89d0:	d8802217 	ldw	r2,136(sp)
    89d4:	14c0000f 	ldh	r19,0(r2)
    89d8:	10800104 	addi	r2,r2,4
    89dc:	d8802215 	stw	r2,136(sp)
    89e0:	9829d7fa 	srai	r20,r19,31
    89e4:	a005883a 	mov	r2,r20
    89e8:	003d8506 	br	8000 <__alt_data_end+0xfffe8c00>
    89ec:	8880100c 	andi	r2,r17,64
    89f0:	10002b26 	beq	r2,zero,8aa0 <___vfiprintf_internal_r+0x1280>
    89f4:	d8802217 	ldw	r2,136(sp)
    89f8:	0029883a 	mov	r20,zero
    89fc:	14c0000b 	ldhu	r19,0(r2)
    8a00:	10800104 	addi	r2,r2,4
    8a04:	d8802215 	stw	r2,136(sp)
    8a08:	003d5d06 	br	7f80 <__alt_data_end+0xfffe8b80>
    8a0c:	d9402017 	ldw	r5,128(sp)
    8a10:	d9002117 	ldw	r4,132(sp)
    8a14:	d9801a04 	addi	r6,sp,104
    8a18:	d8c02a15 	stw	r3,168(sp)
    8a1c:	d9c02b15 	stw	r7,172(sp)
    8a20:	000770c0 	call	770c <__sprint_r.part.0>
    8a24:	d8c02a17 	ldw	r3,168(sp)
    8a28:	d9c02b17 	ldw	r7,172(sp)
    8a2c:	103eb41e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    8a30:	d9001b17 	ldw	r4,108(sp)
    8a34:	d8801c17 	ldw	r2,112(sp)
    8a38:	d811883a 	mov	r8,sp
    8a3c:	21400044 	addi	r5,r4,1
    8a40:	003e6706 	br	83e0 <__alt_data_end+0xfffe8fe0>
    8a44:	00bfffc4 	movi	r2,-1
    8a48:	003c4a06 	br	7b74 <__alt_data_end+0xfffe8774>
    8a4c:	9805883a 	mov	r2,r19
    8a50:	003ee806 	br	85f4 <__alt_data_end+0xfffe91f4>
    8a54:	d8c02217 	ldw	r3,136(sp)
    8a58:	0029883a 	mov	r20,zero
    8a5c:	18800104 	addi	r2,r3,4
    8a60:	1cc0000b 	ldhu	r19,0(r3)
    8a64:	803f9e0e 	bge	r16,zero,88e0 <__alt_data_end+0xfffe94e0>
    8a68:	003dd706 	br	81c8 <__alt_data_end+0xfffe8dc8>
    8a6c:	d8c02217 	ldw	r3,136(sp)
    8a70:	d9002417 	ldw	r4,144(sp)
    8a74:	18800017 	ldw	r2,0(r3)
    8a78:	18c00104 	addi	r3,r3,4
    8a7c:	d8c02215 	stw	r3,136(sp)
    8a80:	11000015 	stw	r4,0(r2)
    8a84:	003b9a06 	br	78f0 <__alt_data_end+0xfffe84f0>
    8a88:	d8c02217 	ldw	r3,136(sp)
    8a8c:	0029883a 	mov	r20,zero
    8a90:	18800104 	addi	r2,r3,4
    8a94:	1cc0000b 	ldhu	r19,0(r3)
    8a98:	803db20e 	bge	r16,zero,8164 <__alt_data_end+0xfffe8d64>
    8a9c:	003fb906 	br	8984 <__alt_data_end+0xfffe9584>
    8aa0:	d9002217 	ldw	r4,136(sp)
    8aa4:	0029883a 	mov	r20,zero
    8aa8:	24c00017 	ldw	r19,0(r4)
    8aac:	21000104 	addi	r4,r4,4
    8ab0:	d9002215 	stw	r4,136(sp)
    8ab4:	003d3206 	br	7f80 <__alt_data_end+0xfffe8b80>
    8ab8:	d8c02217 	ldw	r3,136(sp)
    8abc:	1cc00017 	ldw	r19,0(r3)
    8ac0:	18c00104 	addi	r3,r3,4
    8ac4:	d8c02215 	stw	r3,136(sp)
    8ac8:	9829d7fa 	srai	r20,r19,31
    8acc:	a005883a 	mov	r2,r20
    8ad0:	003d4b06 	br	8000 <__alt_data_end+0xfffe8c00>
    8ad4:	0009883a 	mov	r4,zero
    8ad8:	01400044 	movi	r5,1
    8adc:	d811883a 	mov	r8,sp
    8ae0:	003e4f06 	br	8420 <__alt_data_end+0xfffe9020>
    8ae4:	d8c02215 	stw	r3,136(sp)
    8ae8:	002b883a 	mov	r21,zero
    8aec:	003db806 	br	81d0 <__alt_data_end+0xfffe8dd0>
    8af0:	d811883a 	mov	r8,sp
    8af4:	003e9606 	br	8550 <__alt_data_end+0xfffe9150>
    8af8:	01000074 	movhi	r4,1
    8afc:	21008c04 	addi	r4,r4,560
    8b00:	d9002315 	stw	r4,140(sp)
    8b04:	003e6306 	br	8494 <__alt_data_end+0xfffe9094>
    8b08:	b0c00043 	ldbu	r3,1(r22)
    8b0c:	8c400814 	ori	r17,r17,32
    8b10:	b5800044 	addi	r22,r22,1
    8b14:	18c03fcc 	andi	r3,r3,255
    8b18:	18c0201c 	xori	r3,r3,128
    8b1c:	18ffe004 	addi	r3,r3,-128
    8b20:	003b9c06 	br	7994 <__alt_data_end+0xfffe8594>
    8b24:	b809883a 	mov	r4,r23
    8b28:	da002a15 	stw	r8,168(sp)
    8b2c:	00076740 	call	7674 <strlen>
    8b30:	1029883a 	mov	r20,r2
    8b34:	dd401d83 	ldbu	r21,118(sp)
    8b38:	df002215 	stw	fp,136(sp)
    8b3c:	0021883a 	mov	r16,zero
    8b40:	da002a17 	ldw	r8,168(sp)
    8b44:	003c3906 	br	7c2c <__alt_data_end+0xfffe882c>
    8b48:	d9402017 	ldw	r5,128(sp)
    8b4c:	d9002117 	ldw	r4,132(sp)
    8b50:	d9801a04 	addi	r6,sp,104
    8b54:	000770c0 	call	770c <__sprint_r.part.0>
    8b58:	103e691e 	bne	r2,zero,8500 <__alt_data_end+0xfffe9100>
    8b5c:	d9001b17 	ldw	r4,108(sp)
    8b60:	d8801c17 	ldw	r2,112(sp)
    8b64:	d811883a 	mov	r8,sp
    8b68:	21400044 	addi	r5,r4,1
    8b6c:	003e2e06 	br	8428 <__alt_data_end+0xfffe9028>
    8b70:	01000074 	movhi	r4,1
    8b74:	21009004 	addi	r4,r4,576
    8b78:	d9002315 	stw	r4,140(sp)
    8b7c:	d9001b17 	ldw	r4,108(sp)
    8b80:	21000044 	addi	r4,r4,1
    8b84:	003c5e06 	br	7d00 <__alt_data_end+0xfffe8900>
    8b88:	002b883a 	mov	r21,zero
    8b8c:	00800084 	movi	r2,2
    8b90:	10803fcc 	andi	r2,r2,255
    8b94:	01000044 	movi	r4,1
    8b98:	11002b26 	beq	r2,r4,8c48 <___vfiprintf_internal_r+0x1428>
    8b9c:	01000084 	movi	r4,2
    8ba0:	11002b1e 	bne	r2,r4,8c50 <___vfiprintf_internal_r+0x1430>
    8ba4:	1823883a 	mov	r17,r3
    8ba8:	003ee506 	br	8740 <__alt_data_end+0xfffe9340>
    8bac:	8807883a 	mov	r3,r17
    8bb0:	00800044 	movi	r2,1
    8bb4:	003ff606 	br	8b90 <__alt_data_end+0xfffe9790>
    8bb8:	00800184 	movi	r2,6
    8bbc:	1400012e 	bgeu	r2,r16,8bc4 <___vfiprintf_internal_r+0x13a4>
    8bc0:	1021883a 	mov	r16,r2
    8bc4:	8029883a 	mov	r20,r16
    8bc8:	8027883a 	mov	r19,r16
    8bcc:	80002216 	blt	r16,zero,8c58 <___vfiprintf_internal_r+0x1438>
    8bd0:	05c00074 	movhi	r23,1
    8bd4:	df002215 	stw	fp,136(sp)
    8bd8:	bdc03004 	addi	r23,r23,192
    8bdc:	003cfb06 	br	7fcc <__alt_data_end+0xfffe8bcc>
    8be0:	d9002217 	ldw	r4,136(sp)
    8be4:	d9402417 	ldw	r5,144(sp)
    8be8:	20800017 	ldw	r2,0(r4)
    8bec:	21000104 	addi	r4,r4,4
    8bf0:	d9002215 	stw	r4,136(sp)
    8bf4:	11400015 	stw	r5,0(r2)
    8bf8:	003b3d06 	br	78f0 <__alt_data_end+0xfffe84f0>
    8bfc:	01400074 	movhi	r5,1
    8c00:	29409004 	addi	r5,r5,576
    8c04:	d9402315 	stw	r5,140(sp)
    8c08:	d9401b17 	ldw	r5,108(sp)
    8c0c:	29400044 	addi	r5,r5,1
    8c10:	003e6d06 	br	85c8 <__alt_data_end+0xfffe91c8>
    8c14:	8029883a 	mov	r20,r16
    8c18:	dd401d83 	ldbu	r21,118(sp)
    8c1c:	df002215 	stw	fp,136(sp)
    8c20:	0021883a 	mov	r16,zero
    8c24:	003c0106 	br	7c2c <__alt_data_end+0xfffe882c>
    8c28:	00c00074 	movhi	r3,1
    8c2c:	18c08c04 	addi	r3,r3,560
    8c30:	d8c02315 	stw	r3,140(sp)
    8c34:	280d883a 	mov	r6,r5
    8c38:	003c6906 	br	7de0 <__alt_data_end+0xfffe89e0>
    8c3c:	802d883a 	mov	r22,r16
    8c40:	0021883a 	mov	r16,zero
    8c44:	003b5406 	br	7998 <__alt_data_end+0xfffe8598>
    8c48:	1823883a 	mov	r17,r3
    8c4c:	003cf306 	br	801c <__alt_data_end+0xfffe8c1c>
    8c50:	1823883a 	mov	r17,r3
    8c54:	003cad06 	br	7f0c <__alt_data_end+0xfffe8b0c>
    8c58:	0027883a 	mov	r19,zero
    8c5c:	003fdc06 	br	8bd0 <__alt_data_end+0xfffe97d0>
    8c60:	d9402217 	ldw	r5,136(sp)
    8c64:	8005883a 	mov	r2,r16
    8c68:	b0c00043 	ldbu	r3,1(r22)
    8c6c:	2c000017 	ldw	r16,0(r5)
    8c70:	29000104 	addi	r4,r5,4
    8c74:	d9002215 	stw	r4,136(sp)
    8c78:	102d883a 	mov	r22,r2
    8c7c:	803fa50e 	bge	r16,zero,8b14 <__alt_data_end+0xfffe9714>
    8c80:	18c03fcc 	andi	r3,r3,255
    8c84:	18c0201c 	xori	r3,r3,128
    8c88:	043fffc4 	movi	r16,-1
    8c8c:	18ffe004 	addi	r3,r3,-128
    8c90:	003b4006 	br	7994 <__alt_data_end+0xfffe8594>
    8c94:	d9402303 	ldbu	r5,140(sp)
    8c98:	d9401d85 	stb	r5,118(sp)
    8c9c:	003cae06 	br	7f58 <__alt_data_end+0xfffe8b58>
    8ca0:	d8c02303 	ldbu	r3,140(sp)
    8ca4:	d8c01d85 	stb	r3,118(sp)
    8ca8:	003d1406 	br	80fc <__alt_data_end+0xfffe8cfc>
    8cac:	d8c02303 	ldbu	r3,140(sp)
    8cb0:	d8c01d85 	stb	r3,118(sp)
    8cb4:	003cca06 	br	7fe0 <__alt_data_end+0xfffe8be0>
    8cb8:	8880004c 	andi	r2,r17,1
    8cbc:	002b883a 	mov	r21,zero
    8cc0:	10000526 	beq	r2,zero,8cd8 <___vfiprintf_internal_r+0x14b8>
    8cc4:	00800c04 	movi	r2,48
    8cc8:	d88019c5 	stb	r2,103(sp)
    8ccc:	dd002817 	ldw	r20,160(sp)
    8cd0:	ddc019c4 	addi	r23,sp,103
    8cd4:	003bd506 	br	7c2c <__alt_data_end+0xfffe882c>
    8cd8:	0029883a 	mov	r20,zero
    8cdc:	ddc01a04 	addi	r23,sp,104
    8ce0:	003bd206 	br	7c2c <__alt_data_end+0xfffe882c>
    8ce4:	d9002303 	ldbu	r4,140(sp)
    8ce8:	d9001d85 	stb	r4,118(sp)
    8cec:	003da606 	br	8388 <__alt_data_end+0xfffe8f88>
    8cf0:	d8c02303 	ldbu	r3,140(sp)
    8cf4:	d8c01d85 	stb	r3,118(sp)
    8cf8:	003c7606 	br	7ed4 <__alt_data_end+0xfffe8ad4>
    8cfc:	d8c02303 	ldbu	r3,140(sp)
    8d00:	d8c01d85 	stb	r3,118(sp)
    8d04:	003c6506 	br	7e9c <__alt_data_end+0xfffe8a9c>
    8d08:	d9002303 	ldbu	r4,140(sp)
    8d0c:	d9001d85 	stb	r4,118(sp)
    8d10:	003d3d06 	br	8208 <__alt_data_end+0xfffe8e08>
    8d14:	d8c02303 	ldbu	r3,140(sp)
    8d18:	d8c01d85 	stb	r3,118(sp)
    8d1c:	003d1d06 	br	8194 <__alt_data_end+0xfffe8d94>
    8d20:	d8c02303 	ldbu	r3,140(sp)
    8d24:	d8c01d85 	stb	r3,118(sp)
    8d28:	003d0306 	br	8138 <__alt_data_end+0xfffe8d38>

00008d2c <__vfiprintf_internal>:
    8d2c:	00800074 	movhi	r2,1
    8d30:	10878d04 	addi	r2,r2,7732
    8d34:	300f883a 	mov	r7,r6
    8d38:	280d883a 	mov	r6,r5
    8d3c:	200b883a 	mov	r5,r4
    8d40:	11000017 	ldw	r4,0(r2)
    8d44:	00078201 	jmpi	7820 <___vfiprintf_internal_r>

00008d48 <__sbprintf>:
    8d48:	2880030b 	ldhu	r2,12(r5)
    8d4c:	2ac01917 	ldw	r11,100(r5)
    8d50:	2a80038b 	ldhu	r10,14(r5)
    8d54:	2a400717 	ldw	r9,28(r5)
    8d58:	2a000917 	ldw	r8,36(r5)
    8d5c:	defee204 	addi	sp,sp,-1144
    8d60:	00c10004 	movi	r3,1024
    8d64:	dc011a15 	stw	r16,1128(sp)
    8d68:	10bfff4c 	andi	r2,r2,65533
    8d6c:	2821883a 	mov	r16,r5
    8d70:	d8cb883a 	add	r5,sp,r3
    8d74:	dc811c15 	stw	r18,1136(sp)
    8d78:	dc411b15 	stw	r17,1132(sp)
    8d7c:	dfc11d15 	stw	ra,1140(sp)
    8d80:	2025883a 	mov	r18,r4
    8d84:	d881030d 	sth	r2,1036(sp)
    8d88:	dac11915 	stw	r11,1124(sp)
    8d8c:	da81038d 	sth	r10,1038(sp)
    8d90:	da410715 	stw	r9,1052(sp)
    8d94:	da010915 	stw	r8,1060(sp)
    8d98:	dec10015 	stw	sp,1024(sp)
    8d9c:	dec10415 	stw	sp,1040(sp)
    8da0:	d8c10215 	stw	r3,1032(sp)
    8da4:	d8c10515 	stw	r3,1044(sp)
    8da8:	d8010615 	stw	zero,1048(sp)
    8dac:	00078200 	call	7820 <___vfiprintf_internal_r>
    8db0:	1023883a 	mov	r17,r2
    8db4:	10000416 	blt	r2,zero,8dc8 <__sbprintf+0x80>
    8db8:	d9410004 	addi	r5,sp,1024
    8dbc:	9009883a 	mov	r4,r18
    8dc0:	0004bc80 	call	4bc8 <_fflush_r>
    8dc4:	10000d1e 	bne	r2,zero,8dfc <__sbprintf+0xb4>
    8dc8:	d881030b 	ldhu	r2,1036(sp)
    8dcc:	1080100c 	andi	r2,r2,64
    8dd0:	10000326 	beq	r2,zero,8de0 <__sbprintf+0x98>
    8dd4:	8080030b 	ldhu	r2,12(r16)
    8dd8:	10801014 	ori	r2,r2,64
    8ddc:	8080030d 	sth	r2,12(r16)
    8de0:	8805883a 	mov	r2,r17
    8de4:	dfc11d17 	ldw	ra,1140(sp)
    8de8:	dc811c17 	ldw	r18,1136(sp)
    8dec:	dc411b17 	ldw	r17,1132(sp)
    8df0:	dc011a17 	ldw	r16,1128(sp)
    8df4:	dec11e04 	addi	sp,sp,1144
    8df8:	f800283a 	ret
    8dfc:	047fffc4 	movi	r17,-1
    8e00:	003ff106 	br	8dc8 <__alt_data_end+0xfffe99c8>

00008e04 <_write_r>:
    8e04:	defffd04 	addi	sp,sp,-12
    8e08:	2805883a 	mov	r2,r5
    8e0c:	dc000015 	stw	r16,0(sp)
    8e10:	04000074 	movhi	r16,1
    8e14:	dc400115 	stw	r17,4(sp)
    8e18:	300b883a 	mov	r5,r6
    8e1c:	840e6504 	addi	r16,r16,14740
    8e20:	2023883a 	mov	r17,r4
    8e24:	380d883a 	mov	r6,r7
    8e28:	1009883a 	mov	r4,r2
    8e2c:	dfc00215 	stw	ra,8(sp)
    8e30:	80000015 	stw	zero,0(r16)
    8e34:	000e44c0 	call	e44c <write>
    8e38:	00ffffc4 	movi	r3,-1
    8e3c:	10c00526 	beq	r2,r3,8e54 <_write_r+0x50>
    8e40:	dfc00217 	ldw	ra,8(sp)
    8e44:	dc400117 	ldw	r17,4(sp)
    8e48:	dc000017 	ldw	r16,0(sp)
    8e4c:	dec00304 	addi	sp,sp,12
    8e50:	f800283a 	ret
    8e54:	80c00017 	ldw	r3,0(r16)
    8e58:	183ff926 	beq	r3,zero,8e40 <__alt_data_end+0xfffe9a40>
    8e5c:	88c00015 	stw	r3,0(r17)
    8e60:	003ff706 	br	8e40 <__alt_data_end+0xfffe9a40>

00008e64 <_close_r>:
    8e64:	defffd04 	addi	sp,sp,-12
    8e68:	dc000015 	stw	r16,0(sp)
    8e6c:	04000074 	movhi	r16,1
    8e70:	dc400115 	stw	r17,4(sp)
    8e74:	840e6504 	addi	r16,r16,14740
    8e78:	2023883a 	mov	r17,r4
    8e7c:	2809883a 	mov	r4,r5
    8e80:	dfc00215 	stw	ra,8(sp)
    8e84:	80000015 	stw	zero,0(r16)
    8e88:	000d9540 	call	d954 <close>
    8e8c:	00ffffc4 	movi	r3,-1
    8e90:	10c00526 	beq	r2,r3,8ea8 <_close_r+0x44>
    8e94:	dfc00217 	ldw	ra,8(sp)
    8e98:	dc400117 	ldw	r17,4(sp)
    8e9c:	dc000017 	ldw	r16,0(sp)
    8ea0:	dec00304 	addi	sp,sp,12
    8ea4:	f800283a 	ret
    8ea8:	80c00017 	ldw	r3,0(r16)
    8eac:	183ff926 	beq	r3,zero,8e94 <__alt_data_end+0xfffe9a94>
    8eb0:	88c00015 	stw	r3,0(r17)
    8eb4:	003ff706 	br	8e94 <__alt_data_end+0xfffe9a94>

00008eb8 <_calloc_r>:
    8eb8:	defffe04 	addi	sp,sp,-8
    8ebc:	2805883a 	mov	r2,r5
    8ec0:	dc000015 	stw	r16,0(sp)
    8ec4:	300b883a 	mov	r5,r6
    8ec8:	2021883a 	mov	r16,r4
    8ecc:	1009883a 	mov	r4,r2
    8ed0:	dfc00115 	stw	ra,4(sp)
    8ed4:	000b04c0 	call	b04c <__mulsi3>
    8ed8:	100b883a 	mov	r5,r2
    8edc:	8009883a 	mov	r4,r16
    8ee0:	00058580 	call	5858 <_malloc_r>
    8ee4:	10002926 	beq	r2,zero,8f8c <_calloc_r+0xd4>
    8ee8:	11bfff17 	ldw	r6,-4(r2)
    8eec:	1021883a 	mov	r16,r2
    8ef0:	00bfff04 	movi	r2,-4
    8ef4:	308c703a 	and	r6,r6,r2
    8ef8:	00c00904 	movi	r3,36
    8efc:	308d883a 	add	r6,r6,r2
    8f00:	19801636 	bltu	r3,r6,8f5c <_calloc_r+0xa4>
    8f04:	008004c4 	movi	r2,19
    8f08:	11800b2e 	bgeu	r2,r6,8f38 <_calloc_r+0x80>
    8f0c:	80000015 	stw	zero,0(r16)
    8f10:	80000115 	stw	zero,4(r16)
    8f14:	008006c4 	movi	r2,27
    8f18:	11801a2e 	bgeu	r2,r6,8f84 <_calloc_r+0xcc>
    8f1c:	80000215 	stw	zero,8(r16)
    8f20:	80000315 	stw	zero,12(r16)
    8f24:	30c0151e 	bne	r6,r3,8f7c <_calloc_r+0xc4>
    8f28:	80000415 	stw	zero,16(r16)
    8f2c:	80800604 	addi	r2,r16,24
    8f30:	80000515 	stw	zero,20(r16)
    8f34:	00000106 	br	8f3c <_calloc_r+0x84>
    8f38:	8005883a 	mov	r2,r16
    8f3c:	10000015 	stw	zero,0(r2)
    8f40:	10000115 	stw	zero,4(r2)
    8f44:	10000215 	stw	zero,8(r2)
    8f48:	8005883a 	mov	r2,r16
    8f4c:	dfc00117 	ldw	ra,4(sp)
    8f50:	dc000017 	ldw	r16,0(sp)
    8f54:	dec00204 	addi	sp,sp,8
    8f58:	f800283a 	ret
    8f5c:	000b883a 	mov	r5,zero
    8f60:	8009883a 	mov	r4,r16
    8f64:	00062900 	call	6290 <memset>
    8f68:	8005883a 	mov	r2,r16
    8f6c:	dfc00117 	ldw	ra,4(sp)
    8f70:	dc000017 	ldw	r16,0(sp)
    8f74:	dec00204 	addi	sp,sp,8
    8f78:	f800283a 	ret
    8f7c:	80800404 	addi	r2,r16,16
    8f80:	003fee06 	br	8f3c <__alt_data_end+0xfffe9b3c>
    8f84:	80800204 	addi	r2,r16,8
    8f88:	003fec06 	br	8f3c <__alt_data_end+0xfffe9b3c>
    8f8c:	0005883a 	mov	r2,zero
    8f90:	003fee06 	br	8f4c <__alt_data_end+0xfffe9b4c>

00008f94 <_fclose_r>:
    8f94:	28003926 	beq	r5,zero,907c <_fclose_r+0xe8>
    8f98:	defffc04 	addi	sp,sp,-16
    8f9c:	dc400115 	stw	r17,4(sp)
    8fa0:	dc000015 	stw	r16,0(sp)
    8fa4:	dfc00315 	stw	ra,12(sp)
    8fa8:	dc800215 	stw	r18,8(sp)
    8fac:	2023883a 	mov	r17,r4
    8fb0:	2821883a 	mov	r16,r5
    8fb4:	20000226 	beq	r4,zero,8fc0 <_fclose_r+0x2c>
    8fb8:	20800e17 	ldw	r2,56(r4)
    8fbc:	10002726 	beq	r2,zero,905c <_fclose_r+0xc8>
    8fc0:	8080030f 	ldh	r2,12(r16)
    8fc4:	1000071e 	bne	r2,zero,8fe4 <_fclose_r+0x50>
    8fc8:	0005883a 	mov	r2,zero
    8fcc:	dfc00317 	ldw	ra,12(sp)
    8fd0:	dc800217 	ldw	r18,8(sp)
    8fd4:	dc400117 	ldw	r17,4(sp)
    8fd8:	dc000017 	ldw	r16,0(sp)
    8fdc:	dec00404 	addi	sp,sp,16
    8fe0:	f800283a 	ret
    8fe4:	800b883a 	mov	r5,r16
    8fe8:	8809883a 	mov	r4,r17
    8fec:	00049ac0 	call	49ac <__sflush_r>
    8ff0:	1025883a 	mov	r18,r2
    8ff4:	80800b17 	ldw	r2,44(r16)
    8ff8:	10000426 	beq	r2,zero,900c <_fclose_r+0x78>
    8ffc:	81400717 	ldw	r5,28(r16)
    9000:	8809883a 	mov	r4,r17
    9004:	103ee83a 	callr	r2
    9008:	10001616 	blt	r2,zero,9064 <_fclose_r+0xd0>
    900c:	8080030b 	ldhu	r2,12(r16)
    9010:	1080200c 	andi	r2,r2,128
    9014:	1000151e 	bne	r2,zero,906c <_fclose_r+0xd8>
    9018:	81400c17 	ldw	r5,48(r16)
    901c:	28000526 	beq	r5,zero,9034 <_fclose_r+0xa0>
    9020:	80801004 	addi	r2,r16,64
    9024:	28800226 	beq	r5,r2,9030 <_fclose_r+0x9c>
    9028:	8809883a 	mov	r4,r17
    902c:	00051280 	call	5128 <_free_r>
    9030:	80000c15 	stw	zero,48(r16)
    9034:	81401117 	ldw	r5,68(r16)
    9038:	28000326 	beq	r5,zero,9048 <_fclose_r+0xb4>
    903c:	8809883a 	mov	r4,r17
    9040:	00051280 	call	5128 <_free_r>
    9044:	80001115 	stw	zero,68(r16)
    9048:	0004fc40 	call	4fc4 <__sfp_lock_acquire>
    904c:	8000030d 	sth	zero,12(r16)
    9050:	0004fc80 	call	4fc8 <__sfp_lock_release>
    9054:	9005883a 	mov	r2,r18
    9058:	003fdc06 	br	8fcc <__alt_data_end+0xfffe9bcc>
    905c:	0004fb40 	call	4fb4 <__sinit>
    9060:	003fd706 	br	8fc0 <__alt_data_end+0xfffe9bc0>
    9064:	04bfffc4 	movi	r18,-1
    9068:	003fe806 	br	900c <__alt_data_end+0xfffe9c0c>
    906c:	81400417 	ldw	r5,16(r16)
    9070:	8809883a 	mov	r4,r17
    9074:	00051280 	call	5128 <_free_r>
    9078:	003fe706 	br	9018 <__alt_data_end+0xfffe9c18>
    907c:	0005883a 	mov	r2,zero
    9080:	f800283a 	ret

00009084 <fclose>:
    9084:	00800074 	movhi	r2,1
    9088:	10878d04 	addi	r2,r2,7732
    908c:	200b883a 	mov	r5,r4
    9090:	11000017 	ldw	r4,0(r2)
    9094:	0008f941 	jmpi	8f94 <_fclose_r>

00009098 <__fputwc>:
    9098:	defff804 	addi	sp,sp,-32
    909c:	dcc00415 	stw	r19,16(sp)
    90a0:	dc800315 	stw	r18,12(sp)
    90a4:	dc000115 	stw	r16,4(sp)
    90a8:	dfc00715 	stw	ra,28(sp)
    90ac:	dd400615 	stw	r21,24(sp)
    90b0:	dd000515 	stw	r20,20(sp)
    90b4:	dc400215 	stw	r17,8(sp)
    90b8:	2027883a 	mov	r19,r4
    90bc:	2825883a 	mov	r18,r5
    90c0:	3021883a 	mov	r16,r6
    90c4:	00056480 	call	5648 <__locale_mb_cur_max>
    90c8:	00c00044 	movi	r3,1
    90cc:	10c03e26 	beq	r2,r3,91c8 <__fputwc+0x130>
    90d0:	81c01704 	addi	r7,r16,92
    90d4:	900d883a 	mov	r6,r18
    90d8:	d80b883a 	mov	r5,sp
    90dc:	9809883a 	mov	r4,r19
    90e0:	000a0f00 	call	a0f0 <_wcrtomb_r>
    90e4:	1029883a 	mov	r20,r2
    90e8:	00bfffc4 	movi	r2,-1
    90ec:	a0802026 	beq	r20,r2,9170 <__fputwc+0xd8>
    90f0:	d9400003 	ldbu	r5,0(sp)
    90f4:	a0001c26 	beq	r20,zero,9168 <__fputwc+0xd0>
    90f8:	0023883a 	mov	r17,zero
    90fc:	05400284 	movi	r21,10
    9100:	00000906 	br	9128 <__fputwc+0x90>
    9104:	80800017 	ldw	r2,0(r16)
    9108:	11400005 	stb	r5,0(r2)
    910c:	80c00017 	ldw	r3,0(r16)
    9110:	18c00044 	addi	r3,r3,1
    9114:	80c00015 	stw	r3,0(r16)
    9118:	8c400044 	addi	r17,r17,1
    911c:	dc45883a 	add	r2,sp,r17
    9120:	8d00112e 	bgeu	r17,r20,9168 <__fputwc+0xd0>
    9124:	11400003 	ldbu	r5,0(r2)
    9128:	80c00217 	ldw	r3,8(r16)
    912c:	18ffffc4 	addi	r3,r3,-1
    9130:	80c00215 	stw	r3,8(r16)
    9134:	183ff30e 	bge	r3,zero,9104 <__alt_data_end+0xfffe9d04>
    9138:	80800617 	ldw	r2,24(r16)
    913c:	18801916 	blt	r3,r2,91a4 <__fputwc+0x10c>
    9140:	80800017 	ldw	r2,0(r16)
    9144:	11400005 	stb	r5,0(r2)
    9148:	80800017 	ldw	r2,0(r16)
    914c:	10c00003 	ldbu	r3,0(r2)
    9150:	10800044 	addi	r2,r2,1
    9154:	1d402326 	beq	r3,r21,91e4 <__fputwc+0x14c>
    9158:	80800015 	stw	r2,0(r16)
    915c:	8c400044 	addi	r17,r17,1
    9160:	dc45883a 	add	r2,sp,r17
    9164:	8d3fef36 	bltu	r17,r20,9124 <__alt_data_end+0xfffe9d24>
    9168:	9005883a 	mov	r2,r18
    916c:	00000406 	br	9180 <__fputwc+0xe8>
    9170:	80c0030b 	ldhu	r3,12(r16)
    9174:	a005883a 	mov	r2,r20
    9178:	18c01014 	ori	r3,r3,64
    917c:	80c0030d 	sth	r3,12(r16)
    9180:	dfc00717 	ldw	ra,28(sp)
    9184:	dd400617 	ldw	r21,24(sp)
    9188:	dd000517 	ldw	r20,20(sp)
    918c:	dcc00417 	ldw	r19,16(sp)
    9190:	dc800317 	ldw	r18,12(sp)
    9194:	dc400217 	ldw	r17,8(sp)
    9198:	dc000117 	ldw	r16,4(sp)
    919c:	dec00804 	addi	sp,sp,32
    91a0:	f800283a 	ret
    91a4:	800d883a 	mov	r6,r16
    91a8:	29403fcc 	andi	r5,r5,255
    91ac:	9809883a 	mov	r4,r19
    91b0:	0009f980 	call	9f98 <__swbuf_r>
    91b4:	10bfffe0 	cmpeqi	r2,r2,-1
    91b8:	10803fcc 	andi	r2,r2,255
    91bc:	103fd626 	beq	r2,zero,9118 <__alt_data_end+0xfffe9d18>
    91c0:	00bfffc4 	movi	r2,-1
    91c4:	003fee06 	br	9180 <__alt_data_end+0xfffe9d80>
    91c8:	90ffffc4 	addi	r3,r18,-1
    91cc:	01003f84 	movi	r4,254
    91d0:	20ffbf36 	bltu	r4,r3,90d0 <__alt_data_end+0xfffe9cd0>
    91d4:	900b883a 	mov	r5,r18
    91d8:	dc800005 	stb	r18,0(sp)
    91dc:	1029883a 	mov	r20,r2
    91e0:	003fc506 	br	90f8 <__alt_data_end+0xfffe9cf8>
    91e4:	800d883a 	mov	r6,r16
    91e8:	a80b883a 	mov	r5,r21
    91ec:	9809883a 	mov	r4,r19
    91f0:	0009f980 	call	9f98 <__swbuf_r>
    91f4:	10bfffe0 	cmpeqi	r2,r2,-1
    91f8:	003fef06 	br	91b8 <__alt_data_end+0xfffe9db8>

000091fc <_fputwc_r>:
    91fc:	3080030b 	ldhu	r2,12(r6)
    9200:	10c8000c 	andi	r3,r2,8192
    9204:	1800051e 	bne	r3,zero,921c <_fputwc_r+0x20>
    9208:	30c01917 	ldw	r3,100(r6)
    920c:	10880014 	ori	r2,r2,8192
    9210:	3080030d 	sth	r2,12(r6)
    9214:	18880014 	ori	r2,r3,8192
    9218:	30801915 	stw	r2,100(r6)
    921c:	00090981 	jmpi	9098 <__fputwc>

00009220 <fputwc>:
    9220:	00800074 	movhi	r2,1
    9224:	defffc04 	addi	sp,sp,-16
    9228:	10878d04 	addi	r2,r2,7732
    922c:	dc000115 	stw	r16,4(sp)
    9230:	14000017 	ldw	r16,0(r2)
    9234:	dc400215 	stw	r17,8(sp)
    9238:	dfc00315 	stw	ra,12(sp)
    923c:	2023883a 	mov	r17,r4
    9240:	80000226 	beq	r16,zero,924c <fputwc+0x2c>
    9244:	80800e17 	ldw	r2,56(r16)
    9248:	10001026 	beq	r2,zero,928c <fputwc+0x6c>
    924c:	2880030b 	ldhu	r2,12(r5)
    9250:	10c8000c 	andi	r3,r2,8192
    9254:	1800051e 	bne	r3,zero,926c <fputwc+0x4c>
    9258:	28c01917 	ldw	r3,100(r5)
    925c:	10880014 	ori	r2,r2,8192
    9260:	2880030d 	sth	r2,12(r5)
    9264:	18880014 	ori	r2,r3,8192
    9268:	28801915 	stw	r2,100(r5)
    926c:	280d883a 	mov	r6,r5
    9270:	8009883a 	mov	r4,r16
    9274:	880b883a 	mov	r5,r17
    9278:	dfc00317 	ldw	ra,12(sp)
    927c:	dc400217 	ldw	r17,8(sp)
    9280:	dc000117 	ldw	r16,4(sp)
    9284:	dec00404 	addi	sp,sp,16
    9288:	00090981 	jmpi	9098 <__fputwc>
    928c:	8009883a 	mov	r4,r16
    9290:	d9400015 	stw	r5,0(sp)
    9294:	0004fb40 	call	4fb4 <__sinit>
    9298:	d9400017 	ldw	r5,0(sp)
    929c:	003feb06 	br	924c <__alt_data_end+0xfffe9e4c>

000092a0 <_fstat_r>:
    92a0:	defffd04 	addi	sp,sp,-12
    92a4:	2805883a 	mov	r2,r5
    92a8:	dc000015 	stw	r16,0(sp)
    92ac:	04000074 	movhi	r16,1
    92b0:	dc400115 	stw	r17,4(sp)
    92b4:	840e6504 	addi	r16,r16,14740
    92b8:	2023883a 	mov	r17,r4
    92bc:	300b883a 	mov	r5,r6
    92c0:	1009883a 	mov	r4,r2
    92c4:	dfc00215 	stw	ra,8(sp)
    92c8:	80000015 	stw	zero,0(r16)
    92cc:	000da940 	call	da94 <fstat>
    92d0:	00ffffc4 	movi	r3,-1
    92d4:	10c00526 	beq	r2,r3,92ec <_fstat_r+0x4c>
    92d8:	dfc00217 	ldw	ra,8(sp)
    92dc:	dc400117 	ldw	r17,4(sp)
    92e0:	dc000017 	ldw	r16,0(sp)
    92e4:	dec00304 	addi	sp,sp,12
    92e8:	f800283a 	ret
    92ec:	80c00017 	ldw	r3,0(r16)
    92f0:	183ff926 	beq	r3,zero,92d8 <__alt_data_end+0xfffe9ed8>
    92f4:	88c00015 	stw	r3,0(r17)
    92f8:	003ff706 	br	92d8 <__alt_data_end+0xfffe9ed8>

000092fc <__sfvwrite_r>:
    92fc:	30800217 	ldw	r2,8(r6)
    9300:	10006726 	beq	r2,zero,94a0 <__sfvwrite_r+0x1a4>
    9304:	28c0030b 	ldhu	r3,12(r5)
    9308:	defff404 	addi	sp,sp,-48
    930c:	dd400715 	stw	r21,28(sp)
    9310:	dd000615 	stw	r20,24(sp)
    9314:	dc000215 	stw	r16,8(sp)
    9318:	dfc00b15 	stw	ra,44(sp)
    931c:	df000a15 	stw	fp,40(sp)
    9320:	ddc00915 	stw	r23,36(sp)
    9324:	dd800815 	stw	r22,32(sp)
    9328:	dcc00515 	stw	r19,20(sp)
    932c:	dc800415 	stw	r18,16(sp)
    9330:	dc400315 	stw	r17,12(sp)
    9334:	1880020c 	andi	r2,r3,8
    9338:	2821883a 	mov	r16,r5
    933c:	202b883a 	mov	r21,r4
    9340:	3029883a 	mov	r20,r6
    9344:	10002726 	beq	r2,zero,93e4 <__sfvwrite_r+0xe8>
    9348:	28800417 	ldw	r2,16(r5)
    934c:	10002526 	beq	r2,zero,93e4 <__sfvwrite_r+0xe8>
    9350:	1880008c 	andi	r2,r3,2
    9354:	a4400017 	ldw	r17,0(r20)
    9358:	10002a26 	beq	r2,zero,9404 <__sfvwrite_r+0x108>
    935c:	05a00034 	movhi	r22,32768
    9360:	0027883a 	mov	r19,zero
    9364:	0025883a 	mov	r18,zero
    9368:	b5bf0004 	addi	r22,r22,-1024
    936c:	980d883a 	mov	r6,r19
    9370:	a809883a 	mov	r4,r21
    9374:	90004626 	beq	r18,zero,9490 <__sfvwrite_r+0x194>
    9378:	900f883a 	mov	r7,r18
    937c:	b480022e 	bgeu	r22,r18,9388 <__sfvwrite_r+0x8c>
    9380:	01e00034 	movhi	r7,32768
    9384:	39ff0004 	addi	r7,r7,-1024
    9388:	80800917 	ldw	r2,36(r16)
    938c:	81400717 	ldw	r5,28(r16)
    9390:	103ee83a 	callr	r2
    9394:	00805a0e 	bge	zero,r2,9500 <__sfvwrite_r+0x204>
    9398:	a0c00217 	ldw	r3,8(r20)
    939c:	98a7883a 	add	r19,r19,r2
    93a0:	90a5c83a 	sub	r18,r18,r2
    93a4:	1885c83a 	sub	r2,r3,r2
    93a8:	a0800215 	stw	r2,8(r20)
    93ac:	103fef1e 	bne	r2,zero,936c <__alt_data_end+0xfffe9f6c>
    93b0:	0005883a 	mov	r2,zero
    93b4:	dfc00b17 	ldw	ra,44(sp)
    93b8:	df000a17 	ldw	fp,40(sp)
    93bc:	ddc00917 	ldw	r23,36(sp)
    93c0:	dd800817 	ldw	r22,32(sp)
    93c4:	dd400717 	ldw	r21,28(sp)
    93c8:	dd000617 	ldw	r20,24(sp)
    93cc:	dcc00517 	ldw	r19,20(sp)
    93d0:	dc800417 	ldw	r18,16(sp)
    93d4:	dc400317 	ldw	r17,12(sp)
    93d8:	dc000217 	ldw	r16,8(sp)
    93dc:	dec00c04 	addi	sp,sp,48
    93e0:	f800283a 	ret
    93e4:	800b883a 	mov	r5,r16
    93e8:	a809883a 	mov	r4,r21
    93ec:	0002fa80 	call	2fa8 <__swsetup_r>
    93f0:	1000ee1e 	bne	r2,zero,97ac <__sfvwrite_r+0x4b0>
    93f4:	80c0030b 	ldhu	r3,12(r16)
    93f8:	a4400017 	ldw	r17,0(r20)
    93fc:	1880008c 	andi	r2,r3,2
    9400:	103fd61e 	bne	r2,zero,935c <__alt_data_end+0xfffe9f5c>
    9404:	1880004c 	andi	r2,r3,1
    9408:	1000421e 	bne	r2,zero,9514 <__sfvwrite_r+0x218>
    940c:	0039883a 	mov	fp,zero
    9410:	0025883a 	mov	r18,zero
    9414:	90001a26 	beq	r18,zero,9480 <__sfvwrite_r+0x184>
    9418:	1880800c 	andi	r2,r3,512
    941c:	84c00217 	ldw	r19,8(r16)
    9420:	10002126 	beq	r2,zero,94a8 <__sfvwrite_r+0x1ac>
    9424:	982f883a 	mov	r23,r19
    9428:	94c09636 	bltu	r18,r19,9684 <__sfvwrite_r+0x388>
    942c:	1881200c 	andi	r2,r3,1152
    9430:	1000a11e 	bne	r2,zero,96b8 <__sfvwrite_r+0x3bc>
    9434:	81000017 	ldw	r4,0(r16)
    9438:	b80d883a 	mov	r6,r23
    943c:	e00b883a 	mov	r5,fp
    9440:	00098780 	call	9878 <memmove>
    9444:	80c00217 	ldw	r3,8(r16)
    9448:	81000017 	ldw	r4,0(r16)
    944c:	9005883a 	mov	r2,r18
    9450:	1ce7c83a 	sub	r19,r3,r19
    9454:	25cf883a 	add	r7,r4,r23
    9458:	84c00215 	stw	r19,8(r16)
    945c:	81c00015 	stw	r7,0(r16)
    9460:	a0c00217 	ldw	r3,8(r20)
    9464:	e0b9883a 	add	fp,fp,r2
    9468:	90a5c83a 	sub	r18,r18,r2
    946c:	18a7c83a 	sub	r19,r3,r2
    9470:	a4c00215 	stw	r19,8(r20)
    9474:	983fce26 	beq	r19,zero,93b0 <__alt_data_end+0xfffe9fb0>
    9478:	80c0030b 	ldhu	r3,12(r16)
    947c:	903fe61e 	bne	r18,zero,9418 <__alt_data_end+0xfffea018>
    9480:	8f000017 	ldw	fp,0(r17)
    9484:	8c800117 	ldw	r18,4(r17)
    9488:	8c400204 	addi	r17,r17,8
    948c:	003fe106 	br	9414 <__alt_data_end+0xfffea014>
    9490:	8cc00017 	ldw	r19,0(r17)
    9494:	8c800117 	ldw	r18,4(r17)
    9498:	8c400204 	addi	r17,r17,8
    949c:	003fb306 	br	936c <__alt_data_end+0xfffe9f6c>
    94a0:	0005883a 	mov	r2,zero
    94a4:	f800283a 	ret
    94a8:	81000017 	ldw	r4,0(r16)
    94ac:	80800417 	ldw	r2,16(r16)
    94b0:	11005a36 	bltu	r2,r4,961c <__sfvwrite_r+0x320>
    94b4:	85c00517 	ldw	r23,20(r16)
    94b8:	95c05836 	bltu	r18,r23,961c <__sfvwrite_r+0x320>
    94bc:	00a00034 	movhi	r2,32768
    94c0:	10bfffc4 	addi	r2,r2,-1
    94c4:	9009883a 	mov	r4,r18
    94c8:	1480012e 	bgeu	r2,r18,94d0 <__sfvwrite_r+0x1d4>
    94cc:	1009883a 	mov	r4,r2
    94d0:	b80b883a 	mov	r5,r23
    94d4:	000ae980 	call	ae98 <__divsi3>
    94d8:	b80b883a 	mov	r5,r23
    94dc:	1009883a 	mov	r4,r2
    94e0:	000b04c0 	call	b04c <__mulsi3>
    94e4:	81400717 	ldw	r5,28(r16)
    94e8:	80c00917 	ldw	r3,36(r16)
    94ec:	100f883a 	mov	r7,r2
    94f0:	e00d883a 	mov	r6,fp
    94f4:	a809883a 	mov	r4,r21
    94f8:	183ee83a 	callr	r3
    94fc:	00bfd816 	blt	zero,r2,9460 <__alt_data_end+0xfffea060>
    9500:	8080030b 	ldhu	r2,12(r16)
    9504:	10801014 	ori	r2,r2,64
    9508:	8080030d 	sth	r2,12(r16)
    950c:	00bfffc4 	movi	r2,-1
    9510:	003fa806 	br	93b4 <__alt_data_end+0xfffe9fb4>
    9514:	0027883a 	mov	r19,zero
    9518:	0011883a 	mov	r8,zero
    951c:	0039883a 	mov	fp,zero
    9520:	0025883a 	mov	r18,zero
    9524:	90001f26 	beq	r18,zero,95a4 <__sfvwrite_r+0x2a8>
    9528:	40005a26 	beq	r8,zero,9694 <__sfvwrite_r+0x398>
    952c:	982d883a 	mov	r22,r19
    9530:	94c0012e 	bgeu	r18,r19,9538 <__sfvwrite_r+0x23c>
    9534:	902d883a 	mov	r22,r18
    9538:	81000017 	ldw	r4,0(r16)
    953c:	80800417 	ldw	r2,16(r16)
    9540:	b02f883a 	mov	r23,r22
    9544:	81c00517 	ldw	r7,20(r16)
    9548:	1100032e 	bgeu	r2,r4,9558 <__sfvwrite_r+0x25c>
    954c:	80c00217 	ldw	r3,8(r16)
    9550:	38c7883a 	add	r3,r7,r3
    9554:	1d801816 	blt	r3,r22,95b8 <__sfvwrite_r+0x2bc>
    9558:	b1c03e16 	blt	r22,r7,9654 <__sfvwrite_r+0x358>
    955c:	80800917 	ldw	r2,36(r16)
    9560:	81400717 	ldw	r5,28(r16)
    9564:	e00d883a 	mov	r6,fp
    9568:	da000115 	stw	r8,4(sp)
    956c:	a809883a 	mov	r4,r21
    9570:	103ee83a 	callr	r2
    9574:	102f883a 	mov	r23,r2
    9578:	da000117 	ldw	r8,4(sp)
    957c:	00bfe00e 	bge	zero,r2,9500 <__alt_data_end+0xfffea100>
    9580:	9de7c83a 	sub	r19,r19,r23
    9584:	98001f26 	beq	r19,zero,9604 <__sfvwrite_r+0x308>
    9588:	a0800217 	ldw	r2,8(r20)
    958c:	e5f9883a 	add	fp,fp,r23
    9590:	95e5c83a 	sub	r18,r18,r23
    9594:	15efc83a 	sub	r23,r2,r23
    9598:	a5c00215 	stw	r23,8(r20)
    959c:	b83f8426 	beq	r23,zero,93b0 <__alt_data_end+0xfffe9fb0>
    95a0:	903fe11e 	bne	r18,zero,9528 <__alt_data_end+0xfffea128>
    95a4:	8f000017 	ldw	fp,0(r17)
    95a8:	8c800117 	ldw	r18,4(r17)
    95ac:	0011883a 	mov	r8,zero
    95b0:	8c400204 	addi	r17,r17,8
    95b4:	003fdb06 	br	9524 <__alt_data_end+0xfffea124>
    95b8:	180d883a 	mov	r6,r3
    95bc:	e00b883a 	mov	r5,fp
    95c0:	da000115 	stw	r8,4(sp)
    95c4:	d8c00015 	stw	r3,0(sp)
    95c8:	00098780 	call	9878 <memmove>
    95cc:	d8c00017 	ldw	r3,0(sp)
    95d0:	80800017 	ldw	r2,0(r16)
    95d4:	800b883a 	mov	r5,r16
    95d8:	a809883a 	mov	r4,r21
    95dc:	10c5883a 	add	r2,r2,r3
    95e0:	80800015 	stw	r2,0(r16)
    95e4:	d8c00015 	stw	r3,0(sp)
    95e8:	0004bc80 	call	4bc8 <_fflush_r>
    95ec:	d8c00017 	ldw	r3,0(sp)
    95f0:	da000117 	ldw	r8,4(sp)
    95f4:	103fc21e 	bne	r2,zero,9500 <__alt_data_end+0xfffea100>
    95f8:	182f883a 	mov	r23,r3
    95fc:	9de7c83a 	sub	r19,r19,r23
    9600:	983fe11e 	bne	r19,zero,9588 <__alt_data_end+0xfffea188>
    9604:	800b883a 	mov	r5,r16
    9608:	a809883a 	mov	r4,r21
    960c:	0004bc80 	call	4bc8 <_fflush_r>
    9610:	103fbb1e 	bne	r2,zero,9500 <__alt_data_end+0xfffea100>
    9614:	0011883a 	mov	r8,zero
    9618:	003fdb06 	br	9588 <__alt_data_end+0xfffea188>
    961c:	94c0012e 	bgeu	r18,r19,9624 <__sfvwrite_r+0x328>
    9620:	9027883a 	mov	r19,r18
    9624:	980d883a 	mov	r6,r19
    9628:	e00b883a 	mov	r5,fp
    962c:	00098780 	call	9878 <memmove>
    9630:	80800217 	ldw	r2,8(r16)
    9634:	80c00017 	ldw	r3,0(r16)
    9638:	14c5c83a 	sub	r2,r2,r19
    963c:	1cc7883a 	add	r3,r3,r19
    9640:	80800215 	stw	r2,8(r16)
    9644:	80c00015 	stw	r3,0(r16)
    9648:	10004326 	beq	r2,zero,9758 <__sfvwrite_r+0x45c>
    964c:	9805883a 	mov	r2,r19
    9650:	003f8306 	br	9460 <__alt_data_end+0xfffea060>
    9654:	b00d883a 	mov	r6,r22
    9658:	e00b883a 	mov	r5,fp
    965c:	da000115 	stw	r8,4(sp)
    9660:	00098780 	call	9878 <memmove>
    9664:	80800217 	ldw	r2,8(r16)
    9668:	80c00017 	ldw	r3,0(r16)
    966c:	da000117 	ldw	r8,4(sp)
    9670:	1585c83a 	sub	r2,r2,r22
    9674:	1dad883a 	add	r22,r3,r22
    9678:	80800215 	stw	r2,8(r16)
    967c:	85800015 	stw	r22,0(r16)
    9680:	003fbf06 	br	9580 <__alt_data_end+0xfffea180>
    9684:	81000017 	ldw	r4,0(r16)
    9688:	9027883a 	mov	r19,r18
    968c:	902f883a 	mov	r23,r18
    9690:	003f6906 	br	9438 <__alt_data_end+0xfffea038>
    9694:	900d883a 	mov	r6,r18
    9698:	01400284 	movi	r5,10
    969c:	e009883a 	mov	r4,fp
    96a0:	00060640 	call	6064 <memchr>
    96a4:	10003e26 	beq	r2,zero,97a0 <__sfvwrite_r+0x4a4>
    96a8:	10800044 	addi	r2,r2,1
    96ac:	1727c83a 	sub	r19,r2,fp
    96b0:	02000044 	movi	r8,1
    96b4:	003f9d06 	br	952c <__alt_data_end+0xfffea12c>
    96b8:	80800517 	ldw	r2,20(r16)
    96bc:	81400417 	ldw	r5,16(r16)
    96c0:	81c00017 	ldw	r7,0(r16)
    96c4:	10a7883a 	add	r19,r2,r2
    96c8:	9885883a 	add	r2,r19,r2
    96cc:	1026d7fa 	srli	r19,r2,31
    96d0:	396dc83a 	sub	r22,r7,r5
    96d4:	b1000044 	addi	r4,r22,1
    96d8:	9885883a 	add	r2,r19,r2
    96dc:	1027d07a 	srai	r19,r2,1
    96e0:	2485883a 	add	r2,r4,r18
    96e4:	980d883a 	mov	r6,r19
    96e8:	9880022e 	bgeu	r19,r2,96f4 <__sfvwrite_r+0x3f8>
    96ec:	1027883a 	mov	r19,r2
    96f0:	100d883a 	mov	r6,r2
    96f4:	18c1000c 	andi	r3,r3,1024
    96f8:	18001c26 	beq	r3,zero,976c <__sfvwrite_r+0x470>
    96fc:	300b883a 	mov	r5,r6
    9700:	a809883a 	mov	r4,r21
    9704:	00058580 	call	5858 <_malloc_r>
    9708:	102f883a 	mov	r23,r2
    970c:	10002926 	beq	r2,zero,97b4 <__sfvwrite_r+0x4b8>
    9710:	81400417 	ldw	r5,16(r16)
    9714:	b00d883a 	mov	r6,r22
    9718:	1009883a 	mov	r4,r2
    971c:	00061480 	call	6148 <memcpy>
    9720:	8080030b 	ldhu	r2,12(r16)
    9724:	00fedfc4 	movi	r3,-1153
    9728:	10c4703a 	and	r2,r2,r3
    972c:	10802014 	ori	r2,r2,128
    9730:	8080030d 	sth	r2,12(r16)
    9734:	bd89883a 	add	r4,r23,r22
    9738:	9d8fc83a 	sub	r7,r19,r22
    973c:	85c00415 	stw	r23,16(r16)
    9740:	84c00515 	stw	r19,20(r16)
    9744:	81000015 	stw	r4,0(r16)
    9748:	9027883a 	mov	r19,r18
    974c:	81c00215 	stw	r7,8(r16)
    9750:	902f883a 	mov	r23,r18
    9754:	003f3806 	br	9438 <__alt_data_end+0xfffea038>
    9758:	800b883a 	mov	r5,r16
    975c:	a809883a 	mov	r4,r21
    9760:	0004bc80 	call	4bc8 <_fflush_r>
    9764:	103fb926 	beq	r2,zero,964c <__alt_data_end+0xfffea24c>
    9768:	003f6506 	br	9500 <__alt_data_end+0xfffea100>
    976c:	a809883a 	mov	r4,r21
    9770:	0009a340 	call	9a34 <_realloc_r>
    9774:	102f883a 	mov	r23,r2
    9778:	103fee1e 	bne	r2,zero,9734 <__alt_data_end+0xfffea334>
    977c:	81400417 	ldw	r5,16(r16)
    9780:	a809883a 	mov	r4,r21
    9784:	00051280 	call	5128 <_free_r>
    9788:	8080030b 	ldhu	r2,12(r16)
    978c:	00ffdfc4 	movi	r3,-129
    9790:	1884703a 	and	r2,r3,r2
    9794:	00c00304 	movi	r3,12
    9798:	a8c00015 	stw	r3,0(r21)
    979c:	003f5906 	br	9504 <__alt_data_end+0xfffea104>
    97a0:	94c00044 	addi	r19,r18,1
    97a4:	02000044 	movi	r8,1
    97a8:	003f6006 	br	952c <__alt_data_end+0xfffea12c>
    97ac:	00bfffc4 	movi	r2,-1
    97b0:	003f0006 	br	93b4 <__alt_data_end+0xfffe9fb4>
    97b4:	00800304 	movi	r2,12
    97b8:	a8800015 	stw	r2,0(r21)
    97bc:	8080030b 	ldhu	r2,12(r16)
    97c0:	003f5006 	br	9504 <__alt_data_end+0xfffea104>

000097c4 <_isatty_r>:
    97c4:	defffd04 	addi	sp,sp,-12
    97c8:	dc000015 	stw	r16,0(sp)
    97cc:	04000074 	movhi	r16,1
    97d0:	dc400115 	stw	r17,4(sp)
    97d4:	840e6504 	addi	r16,r16,14740
    97d8:	2023883a 	mov	r17,r4
    97dc:	2809883a 	mov	r4,r5
    97e0:	dfc00215 	stw	ra,8(sp)
    97e4:	80000015 	stw	zero,0(r16)
    97e8:	000de280 	call	de28 <isatty>
    97ec:	00ffffc4 	movi	r3,-1
    97f0:	10c00526 	beq	r2,r3,9808 <_isatty_r+0x44>
    97f4:	dfc00217 	ldw	ra,8(sp)
    97f8:	dc400117 	ldw	r17,4(sp)
    97fc:	dc000017 	ldw	r16,0(sp)
    9800:	dec00304 	addi	sp,sp,12
    9804:	f800283a 	ret
    9808:	80c00017 	ldw	r3,0(r16)
    980c:	183ff926 	beq	r3,zero,97f4 <__alt_data_end+0xfffea3f4>
    9810:	88c00015 	stw	r3,0(r17)
    9814:	003ff706 	br	97f4 <__alt_data_end+0xfffea3f4>

00009818 <_lseek_r>:
    9818:	defffd04 	addi	sp,sp,-12
    981c:	2805883a 	mov	r2,r5
    9820:	dc000015 	stw	r16,0(sp)
    9824:	04000074 	movhi	r16,1
    9828:	dc400115 	stw	r17,4(sp)
    982c:	300b883a 	mov	r5,r6
    9830:	840e6504 	addi	r16,r16,14740
    9834:	2023883a 	mov	r17,r4
    9838:	380d883a 	mov	r6,r7
    983c:	1009883a 	mov	r4,r2
    9840:	dfc00215 	stw	ra,8(sp)
    9844:	80000015 	stw	zero,0(r16)
    9848:	000dffc0 	call	dffc <lseek>
    984c:	00ffffc4 	movi	r3,-1
    9850:	10c00526 	beq	r2,r3,9868 <_lseek_r+0x50>
    9854:	dfc00217 	ldw	ra,8(sp)
    9858:	dc400117 	ldw	r17,4(sp)
    985c:	dc000017 	ldw	r16,0(sp)
    9860:	dec00304 	addi	sp,sp,12
    9864:	f800283a 	ret
    9868:	80c00017 	ldw	r3,0(r16)
    986c:	183ff926 	beq	r3,zero,9854 <__alt_data_end+0xfffea454>
    9870:	88c00015 	stw	r3,0(r17)
    9874:	003ff706 	br	9854 <__alt_data_end+0xfffea454>

00009878 <memmove>:
    9878:	2005883a 	mov	r2,r4
    987c:	29000b2e 	bgeu	r5,r4,98ac <memmove+0x34>
    9880:	298f883a 	add	r7,r5,r6
    9884:	21c0092e 	bgeu	r4,r7,98ac <memmove+0x34>
    9888:	2187883a 	add	r3,r4,r6
    988c:	198bc83a 	sub	r5,r3,r6
    9890:	30004826 	beq	r6,zero,99b4 <memmove+0x13c>
    9894:	39ffffc4 	addi	r7,r7,-1
    9898:	39000003 	ldbu	r4,0(r7)
    989c:	18ffffc4 	addi	r3,r3,-1
    98a0:	19000005 	stb	r4,0(r3)
    98a4:	28fffb1e 	bne	r5,r3,9894 <__alt_data_end+0xfffea494>
    98a8:	f800283a 	ret
    98ac:	00c003c4 	movi	r3,15
    98b0:	1980412e 	bgeu	r3,r6,99b8 <memmove+0x140>
    98b4:	2886b03a 	or	r3,r5,r2
    98b8:	18c000cc 	andi	r3,r3,3
    98bc:	1800401e 	bne	r3,zero,99c0 <memmove+0x148>
    98c0:	33fffc04 	addi	r15,r6,-16
    98c4:	781ed13a 	srli	r15,r15,4
    98c8:	28c00104 	addi	r3,r5,4
    98cc:	13400104 	addi	r13,r2,4
    98d0:	781c913a 	slli	r14,r15,4
    98d4:	2b000204 	addi	r12,r5,8
    98d8:	12c00204 	addi	r11,r2,8
    98dc:	73800504 	addi	r14,r14,20
    98e0:	2a800304 	addi	r10,r5,12
    98e4:	12400304 	addi	r9,r2,12
    98e8:	2b9d883a 	add	r14,r5,r14
    98ec:	2811883a 	mov	r8,r5
    98f0:	100f883a 	mov	r7,r2
    98f4:	41000017 	ldw	r4,0(r8)
    98f8:	39c00404 	addi	r7,r7,16
    98fc:	18c00404 	addi	r3,r3,16
    9900:	393ffc15 	stw	r4,-16(r7)
    9904:	193ffc17 	ldw	r4,-16(r3)
    9908:	6b400404 	addi	r13,r13,16
    990c:	5ac00404 	addi	r11,r11,16
    9910:	693ffc15 	stw	r4,-16(r13)
    9914:	61000017 	ldw	r4,0(r12)
    9918:	4a400404 	addi	r9,r9,16
    991c:	42000404 	addi	r8,r8,16
    9920:	593ffc15 	stw	r4,-16(r11)
    9924:	51000017 	ldw	r4,0(r10)
    9928:	63000404 	addi	r12,r12,16
    992c:	52800404 	addi	r10,r10,16
    9930:	493ffc15 	stw	r4,-16(r9)
    9934:	1bbfef1e 	bne	r3,r14,98f4 <__alt_data_end+0xfffea4f4>
    9938:	79000044 	addi	r4,r15,1
    993c:	2008913a 	slli	r4,r4,4
    9940:	328003cc 	andi	r10,r6,15
    9944:	02c000c4 	movi	r11,3
    9948:	1107883a 	add	r3,r2,r4
    994c:	290b883a 	add	r5,r5,r4
    9950:	5a801e2e 	bgeu	r11,r10,99cc <memmove+0x154>
    9954:	1813883a 	mov	r9,r3
    9958:	2811883a 	mov	r8,r5
    995c:	500f883a 	mov	r7,r10
    9960:	41000017 	ldw	r4,0(r8)
    9964:	4a400104 	addi	r9,r9,4
    9968:	39ffff04 	addi	r7,r7,-4
    996c:	493fff15 	stw	r4,-4(r9)
    9970:	42000104 	addi	r8,r8,4
    9974:	59fffa36 	bltu	r11,r7,9960 <__alt_data_end+0xfffea560>
    9978:	513fff04 	addi	r4,r10,-4
    997c:	2008d0ba 	srli	r4,r4,2
    9980:	318000cc 	andi	r6,r6,3
    9984:	21000044 	addi	r4,r4,1
    9988:	2109883a 	add	r4,r4,r4
    998c:	2109883a 	add	r4,r4,r4
    9990:	1907883a 	add	r3,r3,r4
    9994:	290b883a 	add	r5,r5,r4
    9998:	30000b26 	beq	r6,zero,99c8 <memmove+0x150>
    999c:	198d883a 	add	r6,r3,r6
    99a0:	29c00003 	ldbu	r7,0(r5)
    99a4:	18c00044 	addi	r3,r3,1
    99a8:	29400044 	addi	r5,r5,1
    99ac:	19ffffc5 	stb	r7,-1(r3)
    99b0:	19bffb1e 	bne	r3,r6,99a0 <__alt_data_end+0xfffea5a0>
    99b4:	f800283a 	ret
    99b8:	1007883a 	mov	r3,r2
    99bc:	003ff606 	br	9998 <__alt_data_end+0xfffea598>
    99c0:	1007883a 	mov	r3,r2
    99c4:	003ff506 	br	999c <__alt_data_end+0xfffea59c>
    99c8:	f800283a 	ret
    99cc:	500d883a 	mov	r6,r10
    99d0:	003ff106 	br	9998 <__alt_data_end+0xfffea598>

000099d4 <_read_r>:
    99d4:	defffd04 	addi	sp,sp,-12
    99d8:	2805883a 	mov	r2,r5
    99dc:	dc000015 	stw	r16,0(sp)
    99e0:	04000074 	movhi	r16,1
    99e4:	dc400115 	stw	r17,4(sp)
    99e8:	300b883a 	mov	r5,r6
    99ec:	840e6504 	addi	r16,r16,14740
    99f0:	2023883a 	mov	r17,r4
    99f4:	380d883a 	mov	r6,r7
    99f8:	1009883a 	mov	r4,r2
    99fc:	dfc00215 	stw	ra,8(sp)
    9a00:	80000015 	stw	zero,0(r16)
    9a04:	000e1d80 	call	e1d8 <read>
    9a08:	00ffffc4 	movi	r3,-1
    9a0c:	10c00526 	beq	r2,r3,9a24 <_read_r+0x50>
    9a10:	dfc00217 	ldw	ra,8(sp)
    9a14:	dc400117 	ldw	r17,4(sp)
    9a18:	dc000017 	ldw	r16,0(sp)
    9a1c:	dec00304 	addi	sp,sp,12
    9a20:	f800283a 	ret
    9a24:	80c00017 	ldw	r3,0(r16)
    9a28:	183ff926 	beq	r3,zero,9a10 <__alt_data_end+0xfffea610>
    9a2c:	88c00015 	stw	r3,0(r17)
    9a30:	003ff706 	br	9a10 <__alt_data_end+0xfffea610>

00009a34 <_realloc_r>:
    9a34:	defff604 	addi	sp,sp,-40
    9a38:	dc800215 	stw	r18,8(sp)
    9a3c:	dfc00915 	stw	ra,36(sp)
    9a40:	df000815 	stw	fp,32(sp)
    9a44:	ddc00715 	stw	r23,28(sp)
    9a48:	dd800615 	stw	r22,24(sp)
    9a4c:	dd400515 	stw	r21,20(sp)
    9a50:	dd000415 	stw	r20,16(sp)
    9a54:	dcc00315 	stw	r19,12(sp)
    9a58:	dc400115 	stw	r17,4(sp)
    9a5c:	dc000015 	stw	r16,0(sp)
    9a60:	3025883a 	mov	r18,r6
    9a64:	2800b726 	beq	r5,zero,9d44 <_realloc_r+0x310>
    9a68:	282b883a 	mov	r21,r5
    9a6c:	2029883a 	mov	r20,r4
    9a70:	000e1540 	call	e154 <__malloc_lock>
    9a74:	a8bfff17 	ldw	r2,-4(r21)
    9a78:	043fff04 	movi	r16,-4
    9a7c:	90c002c4 	addi	r3,r18,11
    9a80:	01000584 	movi	r4,22
    9a84:	acfffe04 	addi	r19,r21,-8
    9a88:	1420703a 	and	r16,r2,r16
    9a8c:	20c0332e 	bgeu	r4,r3,9b5c <_realloc_r+0x128>
    9a90:	047ffe04 	movi	r17,-8
    9a94:	1c62703a 	and	r17,r3,r17
    9a98:	8807883a 	mov	r3,r17
    9a9c:	88005816 	blt	r17,zero,9c00 <_realloc_r+0x1cc>
    9aa0:	8c805736 	bltu	r17,r18,9c00 <_realloc_r+0x1cc>
    9aa4:	80c0300e 	bge	r16,r3,9b68 <_realloc_r+0x134>
    9aa8:	07000074 	movhi	fp,1
    9aac:	e7020804 	addi	fp,fp,2080
    9ab0:	e1c00217 	ldw	r7,8(fp)
    9ab4:	9c09883a 	add	r4,r19,r16
    9ab8:	22000117 	ldw	r8,4(r4)
    9abc:	21c06326 	beq	r4,r7,9c4c <_realloc_r+0x218>
    9ac0:	017fff84 	movi	r5,-2
    9ac4:	414a703a 	and	r5,r8,r5
    9ac8:	214b883a 	add	r5,r4,r5
    9acc:	29800117 	ldw	r6,4(r5)
    9ad0:	3180004c 	andi	r6,r6,1
    9ad4:	30003f26 	beq	r6,zero,9bd4 <_realloc_r+0x1a0>
    9ad8:	1080004c 	andi	r2,r2,1
    9adc:	10008326 	beq	r2,zero,9cec <_realloc_r+0x2b8>
    9ae0:	900b883a 	mov	r5,r18
    9ae4:	a009883a 	mov	r4,r20
    9ae8:	00058580 	call	5858 <_malloc_r>
    9aec:	1025883a 	mov	r18,r2
    9af0:	10011e26 	beq	r2,zero,9f6c <_realloc_r+0x538>
    9af4:	a93fff17 	ldw	r4,-4(r21)
    9af8:	10fffe04 	addi	r3,r2,-8
    9afc:	00bfff84 	movi	r2,-2
    9b00:	2084703a 	and	r2,r4,r2
    9b04:	9885883a 	add	r2,r19,r2
    9b08:	1880ee26 	beq	r3,r2,9ec4 <_realloc_r+0x490>
    9b0c:	81bfff04 	addi	r6,r16,-4
    9b10:	00800904 	movi	r2,36
    9b14:	1180b836 	bltu	r2,r6,9df8 <_realloc_r+0x3c4>
    9b18:	00c004c4 	movi	r3,19
    9b1c:	19809636 	bltu	r3,r6,9d78 <_realloc_r+0x344>
    9b20:	9005883a 	mov	r2,r18
    9b24:	a807883a 	mov	r3,r21
    9b28:	19000017 	ldw	r4,0(r3)
    9b2c:	11000015 	stw	r4,0(r2)
    9b30:	19000117 	ldw	r4,4(r3)
    9b34:	11000115 	stw	r4,4(r2)
    9b38:	18c00217 	ldw	r3,8(r3)
    9b3c:	10c00215 	stw	r3,8(r2)
    9b40:	a80b883a 	mov	r5,r21
    9b44:	a009883a 	mov	r4,r20
    9b48:	00051280 	call	5128 <_free_r>
    9b4c:	a009883a 	mov	r4,r20
    9b50:	000e1780 	call	e178 <__malloc_unlock>
    9b54:	9005883a 	mov	r2,r18
    9b58:	00001206 	br	9ba4 <_realloc_r+0x170>
    9b5c:	00c00404 	movi	r3,16
    9b60:	1823883a 	mov	r17,r3
    9b64:	003fce06 	br	9aa0 <__alt_data_end+0xfffea6a0>
    9b68:	a825883a 	mov	r18,r21
    9b6c:	8445c83a 	sub	r2,r16,r17
    9b70:	00c003c4 	movi	r3,15
    9b74:	18802636 	bltu	r3,r2,9c10 <_realloc_r+0x1dc>
    9b78:	99800117 	ldw	r6,4(r19)
    9b7c:	9c07883a 	add	r3,r19,r16
    9b80:	3180004c 	andi	r6,r6,1
    9b84:	3420b03a 	or	r16,r6,r16
    9b88:	9c000115 	stw	r16,4(r19)
    9b8c:	18800117 	ldw	r2,4(r3)
    9b90:	10800054 	ori	r2,r2,1
    9b94:	18800115 	stw	r2,4(r3)
    9b98:	a009883a 	mov	r4,r20
    9b9c:	000e1780 	call	e178 <__malloc_unlock>
    9ba0:	9005883a 	mov	r2,r18
    9ba4:	dfc00917 	ldw	ra,36(sp)
    9ba8:	df000817 	ldw	fp,32(sp)
    9bac:	ddc00717 	ldw	r23,28(sp)
    9bb0:	dd800617 	ldw	r22,24(sp)
    9bb4:	dd400517 	ldw	r21,20(sp)
    9bb8:	dd000417 	ldw	r20,16(sp)
    9bbc:	dcc00317 	ldw	r19,12(sp)
    9bc0:	dc800217 	ldw	r18,8(sp)
    9bc4:	dc400117 	ldw	r17,4(sp)
    9bc8:	dc000017 	ldw	r16,0(sp)
    9bcc:	dec00a04 	addi	sp,sp,40
    9bd0:	f800283a 	ret
    9bd4:	017fff04 	movi	r5,-4
    9bd8:	414a703a 	and	r5,r8,r5
    9bdc:	814d883a 	add	r6,r16,r5
    9be0:	30c01f16 	blt	r6,r3,9c60 <_realloc_r+0x22c>
    9be4:	20800317 	ldw	r2,12(r4)
    9be8:	20c00217 	ldw	r3,8(r4)
    9bec:	a825883a 	mov	r18,r21
    9bf0:	3021883a 	mov	r16,r6
    9bf4:	18800315 	stw	r2,12(r3)
    9bf8:	10c00215 	stw	r3,8(r2)
    9bfc:	003fdb06 	br	9b6c <__alt_data_end+0xfffea76c>
    9c00:	00800304 	movi	r2,12
    9c04:	a0800015 	stw	r2,0(r20)
    9c08:	0005883a 	mov	r2,zero
    9c0c:	003fe506 	br	9ba4 <__alt_data_end+0xfffea7a4>
    9c10:	98c00117 	ldw	r3,4(r19)
    9c14:	9c4b883a 	add	r5,r19,r17
    9c18:	11000054 	ori	r4,r2,1
    9c1c:	18c0004c 	andi	r3,r3,1
    9c20:	1c62b03a 	or	r17,r3,r17
    9c24:	9c400115 	stw	r17,4(r19)
    9c28:	29000115 	stw	r4,4(r5)
    9c2c:	2885883a 	add	r2,r5,r2
    9c30:	10c00117 	ldw	r3,4(r2)
    9c34:	29400204 	addi	r5,r5,8
    9c38:	a009883a 	mov	r4,r20
    9c3c:	18c00054 	ori	r3,r3,1
    9c40:	10c00115 	stw	r3,4(r2)
    9c44:	00051280 	call	5128 <_free_r>
    9c48:	003fd306 	br	9b98 <__alt_data_end+0xfffea798>
    9c4c:	017fff04 	movi	r5,-4
    9c50:	414a703a 	and	r5,r8,r5
    9c54:	89800404 	addi	r6,r17,16
    9c58:	8151883a 	add	r8,r16,r5
    9c5c:	4180590e 	bge	r8,r6,9dc4 <_realloc_r+0x390>
    9c60:	1080004c 	andi	r2,r2,1
    9c64:	103f9e1e 	bne	r2,zero,9ae0 <__alt_data_end+0xfffea6e0>
    9c68:	adbffe17 	ldw	r22,-8(r21)
    9c6c:	00bfff04 	movi	r2,-4
    9c70:	9dadc83a 	sub	r22,r19,r22
    9c74:	b1800117 	ldw	r6,4(r22)
    9c78:	3084703a 	and	r2,r6,r2
    9c7c:	20002026 	beq	r4,zero,9d00 <_realloc_r+0x2cc>
    9c80:	80af883a 	add	r23,r16,r2
    9c84:	b96f883a 	add	r23,r23,r5
    9c88:	21c05f26 	beq	r4,r7,9e08 <_realloc_r+0x3d4>
    9c8c:	b8c01c16 	blt	r23,r3,9d00 <_realloc_r+0x2cc>
    9c90:	20800317 	ldw	r2,12(r4)
    9c94:	20c00217 	ldw	r3,8(r4)
    9c98:	81bfff04 	addi	r6,r16,-4
    9c9c:	01000904 	movi	r4,36
    9ca0:	18800315 	stw	r2,12(r3)
    9ca4:	10c00215 	stw	r3,8(r2)
    9ca8:	b0c00217 	ldw	r3,8(r22)
    9cac:	b0800317 	ldw	r2,12(r22)
    9cb0:	b4800204 	addi	r18,r22,8
    9cb4:	18800315 	stw	r2,12(r3)
    9cb8:	10c00215 	stw	r3,8(r2)
    9cbc:	21801b36 	bltu	r4,r6,9d2c <_realloc_r+0x2f8>
    9cc0:	008004c4 	movi	r2,19
    9cc4:	1180352e 	bgeu	r2,r6,9d9c <_realloc_r+0x368>
    9cc8:	a8800017 	ldw	r2,0(r21)
    9ccc:	b0800215 	stw	r2,8(r22)
    9cd0:	a8800117 	ldw	r2,4(r21)
    9cd4:	b0800315 	stw	r2,12(r22)
    9cd8:	008006c4 	movi	r2,27
    9cdc:	11807f36 	bltu	r2,r6,9edc <_realloc_r+0x4a8>
    9ce0:	b0800404 	addi	r2,r22,16
    9ce4:	ad400204 	addi	r21,r21,8
    9ce8:	00002d06 	br	9da0 <_realloc_r+0x36c>
    9cec:	adbffe17 	ldw	r22,-8(r21)
    9cf0:	00bfff04 	movi	r2,-4
    9cf4:	9dadc83a 	sub	r22,r19,r22
    9cf8:	b1000117 	ldw	r4,4(r22)
    9cfc:	2084703a 	and	r2,r4,r2
    9d00:	b03f7726 	beq	r22,zero,9ae0 <__alt_data_end+0xfffea6e0>
    9d04:	80af883a 	add	r23,r16,r2
    9d08:	b8ff7516 	blt	r23,r3,9ae0 <__alt_data_end+0xfffea6e0>
    9d0c:	b0800317 	ldw	r2,12(r22)
    9d10:	b0c00217 	ldw	r3,8(r22)
    9d14:	81bfff04 	addi	r6,r16,-4
    9d18:	01000904 	movi	r4,36
    9d1c:	18800315 	stw	r2,12(r3)
    9d20:	10c00215 	stw	r3,8(r2)
    9d24:	b4800204 	addi	r18,r22,8
    9d28:	21bfe52e 	bgeu	r4,r6,9cc0 <__alt_data_end+0xfffea8c0>
    9d2c:	a80b883a 	mov	r5,r21
    9d30:	9009883a 	mov	r4,r18
    9d34:	00098780 	call	9878 <memmove>
    9d38:	b821883a 	mov	r16,r23
    9d3c:	b027883a 	mov	r19,r22
    9d40:	003f8a06 	br	9b6c <__alt_data_end+0xfffea76c>
    9d44:	300b883a 	mov	r5,r6
    9d48:	dfc00917 	ldw	ra,36(sp)
    9d4c:	df000817 	ldw	fp,32(sp)
    9d50:	ddc00717 	ldw	r23,28(sp)
    9d54:	dd800617 	ldw	r22,24(sp)
    9d58:	dd400517 	ldw	r21,20(sp)
    9d5c:	dd000417 	ldw	r20,16(sp)
    9d60:	dcc00317 	ldw	r19,12(sp)
    9d64:	dc800217 	ldw	r18,8(sp)
    9d68:	dc400117 	ldw	r17,4(sp)
    9d6c:	dc000017 	ldw	r16,0(sp)
    9d70:	dec00a04 	addi	sp,sp,40
    9d74:	00058581 	jmpi	5858 <_malloc_r>
    9d78:	a8c00017 	ldw	r3,0(r21)
    9d7c:	90c00015 	stw	r3,0(r18)
    9d80:	a8c00117 	ldw	r3,4(r21)
    9d84:	90c00115 	stw	r3,4(r18)
    9d88:	00c006c4 	movi	r3,27
    9d8c:	19804536 	bltu	r3,r6,9ea4 <_realloc_r+0x470>
    9d90:	90800204 	addi	r2,r18,8
    9d94:	a8c00204 	addi	r3,r21,8
    9d98:	003f6306 	br	9b28 <__alt_data_end+0xfffea728>
    9d9c:	9005883a 	mov	r2,r18
    9da0:	a8c00017 	ldw	r3,0(r21)
    9da4:	b821883a 	mov	r16,r23
    9da8:	b027883a 	mov	r19,r22
    9dac:	10c00015 	stw	r3,0(r2)
    9db0:	a8c00117 	ldw	r3,4(r21)
    9db4:	10c00115 	stw	r3,4(r2)
    9db8:	a8c00217 	ldw	r3,8(r21)
    9dbc:	10c00215 	stw	r3,8(r2)
    9dc0:	003f6a06 	br	9b6c <__alt_data_end+0xfffea76c>
    9dc4:	9c67883a 	add	r19,r19,r17
    9dc8:	4445c83a 	sub	r2,r8,r17
    9dcc:	e4c00215 	stw	r19,8(fp)
    9dd0:	10800054 	ori	r2,r2,1
    9dd4:	98800115 	stw	r2,4(r19)
    9dd8:	a8bfff17 	ldw	r2,-4(r21)
    9ddc:	a009883a 	mov	r4,r20
    9de0:	1080004c 	andi	r2,r2,1
    9de4:	1462b03a 	or	r17,r2,r17
    9de8:	ac7fff15 	stw	r17,-4(r21)
    9dec:	000e1780 	call	e178 <__malloc_unlock>
    9df0:	a805883a 	mov	r2,r21
    9df4:	003f6b06 	br	9ba4 <__alt_data_end+0xfffea7a4>
    9df8:	a80b883a 	mov	r5,r21
    9dfc:	9009883a 	mov	r4,r18
    9e00:	00098780 	call	9878 <memmove>
    9e04:	003f4e06 	br	9b40 <__alt_data_end+0xfffea740>
    9e08:	89000404 	addi	r4,r17,16
    9e0c:	b93fbc16 	blt	r23,r4,9d00 <__alt_data_end+0xfffea900>
    9e10:	b0800317 	ldw	r2,12(r22)
    9e14:	b0c00217 	ldw	r3,8(r22)
    9e18:	81bfff04 	addi	r6,r16,-4
    9e1c:	01000904 	movi	r4,36
    9e20:	18800315 	stw	r2,12(r3)
    9e24:	10c00215 	stw	r3,8(r2)
    9e28:	b4800204 	addi	r18,r22,8
    9e2c:	21804336 	bltu	r4,r6,9f3c <_realloc_r+0x508>
    9e30:	008004c4 	movi	r2,19
    9e34:	11803f2e 	bgeu	r2,r6,9f34 <_realloc_r+0x500>
    9e38:	a8800017 	ldw	r2,0(r21)
    9e3c:	b0800215 	stw	r2,8(r22)
    9e40:	a8800117 	ldw	r2,4(r21)
    9e44:	b0800315 	stw	r2,12(r22)
    9e48:	008006c4 	movi	r2,27
    9e4c:	11803f36 	bltu	r2,r6,9f4c <_realloc_r+0x518>
    9e50:	b0800404 	addi	r2,r22,16
    9e54:	ad400204 	addi	r21,r21,8
    9e58:	a8c00017 	ldw	r3,0(r21)
    9e5c:	10c00015 	stw	r3,0(r2)
    9e60:	a8c00117 	ldw	r3,4(r21)
    9e64:	10c00115 	stw	r3,4(r2)
    9e68:	a8c00217 	ldw	r3,8(r21)
    9e6c:	10c00215 	stw	r3,8(r2)
    9e70:	b447883a 	add	r3,r22,r17
    9e74:	bc45c83a 	sub	r2,r23,r17
    9e78:	e0c00215 	stw	r3,8(fp)
    9e7c:	10800054 	ori	r2,r2,1
    9e80:	18800115 	stw	r2,4(r3)
    9e84:	b0800117 	ldw	r2,4(r22)
    9e88:	a009883a 	mov	r4,r20
    9e8c:	1080004c 	andi	r2,r2,1
    9e90:	1462b03a 	or	r17,r2,r17
    9e94:	b4400115 	stw	r17,4(r22)
    9e98:	000e1780 	call	e178 <__malloc_unlock>
    9e9c:	9005883a 	mov	r2,r18
    9ea0:	003f4006 	br	9ba4 <__alt_data_end+0xfffea7a4>
    9ea4:	a8c00217 	ldw	r3,8(r21)
    9ea8:	90c00215 	stw	r3,8(r18)
    9eac:	a8c00317 	ldw	r3,12(r21)
    9eb0:	90c00315 	stw	r3,12(r18)
    9eb4:	30801126 	beq	r6,r2,9efc <_realloc_r+0x4c8>
    9eb8:	90800404 	addi	r2,r18,16
    9ebc:	a8c00404 	addi	r3,r21,16
    9ec0:	003f1906 	br	9b28 <__alt_data_end+0xfffea728>
    9ec4:	90ffff17 	ldw	r3,-4(r18)
    9ec8:	00bfff04 	movi	r2,-4
    9ecc:	a825883a 	mov	r18,r21
    9ed0:	1884703a 	and	r2,r3,r2
    9ed4:	80a1883a 	add	r16,r16,r2
    9ed8:	003f2406 	br	9b6c <__alt_data_end+0xfffea76c>
    9edc:	a8800217 	ldw	r2,8(r21)
    9ee0:	b0800415 	stw	r2,16(r22)
    9ee4:	a8800317 	ldw	r2,12(r21)
    9ee8:	b0800515 	stw	r2,20(r22)
    9eec:	31000a26 	beq	r6,r4,9f18 <_realloc_r+0x4e4>
    9ef0:	b0800604 	addi	r2,r22,24
    9ef4:	ad400404 	addi	r21,r21,16
    9ef8:	003fa906 	br	9da0 <__alt_data_end+0xfffea9a0>
    9efc:	a9000417 	ldw	r4,16(r21)
    9f00:	90800604 	addi	r2,r18,24
    9f04:	a8c00604 	addi	r3,r21,24
    9f08:	91000415 	stw	r4,16(r18)
    9f0c:	a9000517 	ldw	r4,20(r21)
    9f10:	91000515 	stw	r4,20(r18)
    9f14:	003f0406 	br	9b28 <__alt_data_end+0xfffea728>
    9f18:	a8c00417 	ldw	r3,16(r21)
    9f1c:	ad400604 	addi	r21,r21,24
    9f20:	b0800804 	addi	r2,r22,32
    9f24:	b0c00615 	stw	r3,24(r22)
    9f28:	a8ffff17 	ldw	r3,-4(r21)
    9f2c:	b0c00715 	stw	r3,28(r22)
    9f30:	003f9b06 	br	9da0 <__alt_data_end+0xfffea9a0>
    9f34:	9005883a 	mov	r2,r18
    9f38:	003fc706 	br	9e58 <__alt_data_end+0xfffeaa58>
    9f3c:	a80b883a 	mov	r5,r21
    9f40:	9009883a 	mov	r4,r18
    9f44:	00098780 	call	9878 <memmove>
    9f48:	003fc906 	br	9e70 <__alt_data_end+0xfffeaa70>
    9f4c:	a8800217 	ldw	r2,8(r21)
    9f50:	b0800415 	stw	r2,16(r22)
    9f54:	a8800317 	ldw	r2,12(r21)
    9f58:	b0800515 	stw	r2,20(r22)
    9f5c:	31000726 	beq	r6,r4,9f7c <_realloc_r+0x548>
    9f60:	b0800604 	addi	r2,r22,24
    9f64:	ad400404 	addi	r21,r21,16
    9f68:	003fbb06 	br	9e58 <__alt_data_end+0xfffeaa58>
    9f6c:	a009883a 	mov	r4,r20
    9f70:	000e1780 	call	e178 <__malloc_unlock>
    9f74:	0005883a 	mov	r2,zero
    9f78:	003f0a06 	br	9ba4 <__alt_data_end+0xfffea7a4>
    9f7c:	a8c00417 	ldw	r3,16(r21)
    9f80:	ad400604 	addi	r21,r21,24
    9f84:	b0800804 	addi	r2,r22,32
    9f88:	b0c00615 	stw	r3,24(r22)
    9f8c:	a8ffff17 	ldw	r3,-4(r21)
    9f90:	b0c00715 	stw	r3,28(r22)
    9f94:	003fb006 	br	9e58 <__alt_data_end+0xfffeaa58>

00009f98 <__swbuf_r>:
    9f98:	defffb04 	addi	sp,sp,-20
    9f9c:	dcc00315 	stw	r19,12(sp)
    9fa0:	dc800215 	stw	r18,8(sp)
    9fa4:	dc000015 	stw	r16,0(sp)
    9fa8:	dfc00415 	stw	ra,16(sp)
    9fac:	dc400115 	stw	r17,4(sp)
    9fb0:	2025883a 	mov	r18,r4
    9fb4:	2827883a 	mov	r19,r5
    9fb8:	3021883a 	mov	r16,r6
    9fbc:	20000226 	beq	r4,zero,9fc8 <__swbuf_r+0x30>
    9fc0:	20800e17 	ldw	r2,56(r4)
    9fc4:	10004226 	beq	r2,zero,a0d0 <__swbuf_r+0x138>
    9fc8:	80800617 	ldw	r2,24(r16)
    9fcc:	8100030b 	ldhu	r4,12(r16)
    9fd0:	80800215 	stw	r2,8(r16)
    9fd4:	2080020c 	andi	r2,r4,8
    9fd8:	10003626 	beq	r2,zero,a0b4 <__swbuf_r+0x11c>
    9fdc:	80c00417 	ldw	r3,16(r16)
    9fe0:	18003426 	beq	r3,zero,a0b4 <__swbuf_r+0x11c>
    9fe4:	2088000c 	andi	r2,r4,8192
    9fe8:	9c403fcc 	andi	r17,r19,255
    9fec:	10001a26 	beq	r2,zero,a058 <__swbuf_r+0xc0>
    9ff0:	80800017 	ldw	r2,0(r16)
    9ff4:	81000517 	ldw	r4,20(r16)
    9ff8:	10c7c83a 	sub	r3,r2,r3
    9ffc:	1900200e 	bge	r3,r4,a080 <__swbuf_r+0xe8>
    a000:	18c00044 	addi	r3,r3,1
    a004:	81000217 	ldw	r4,8(r16)
    a008:	11400044 	addi	r5,r2,1
    a00c:	81400015 	stw	r5,0(r16)
    a010:	213fffc4 	addi	r4,r4,-1
    a014:	81000215 	stw	r4,8(r16)
    a018:	14c00005 	stb	r19,0(r2)
    a01c:	80800517 	ldw	r2,20(r16)
    a020:	10c01e26 	beq	r2,r3,a09c <__swbuf_r+0x104>
    a024:	8080030b 	ldhu	r2,12(r16)
    a028:	1080004c 	andi	r2,r2,1
    a02c:	10000226 	beq	r2,zero,a038 <__swbuf_r+0xa0>
    a030:	00800284 	movi	r2,10
    a034:	88801926 	beq	r17,r2,a09c <__swbuf_r+0x104>
    a038:	8805883a 	mov	r2,r17
    a03c:	dfc00417 	ldw	ra,16(sp)
    a040:	dcc00317 	ldw	r19,12(sp)
    a044:	dc800217 	ldw	r18,8(sp)
    a048:	dc400117 	ldw	r17,4(sp)
    a04c:	dc000017 	ldw	r16,0(sp)
    a050:	dec00504 	addi	sp,sp,20
    a054:	f800283a 	ret
    a058:	81401917 	ldw	r5,100(r16)
    a05c:	00b7ffc4 	movi	r2,-8193
    a060:	21080014 	ori	r4,r4,8192
    a064:	2884703a 	and	r2,r5,r2
    a068:	80801915 	stw	r2,100(r16)
    a06c:	80800017 	ldw	r2,0(r16)
    a070:	8100030d 	sth	r4,12(r16)
    a074:	81000517 	ldw	r4,20(r16)
    a078:	10c7c83a 	sub	r3,r2,r3
    a07c:	193fe016 	blt	r3,r4,a000 <__alt_data_end+0xfffeac00>
    a080:	800b883a 	mov	r5,r16
    a084:	9009883a 	mov	r4,r18
    a088:	0004bc80 	call	4bc8 <_fflush_r>
    a08c:	1000071e 	bne	r2,zero,a0ac <__swbuf_r+0x114>
    a090:	80800017 	ldw	r2,0(r16)
    a094:	00c00044 	movi	r3,1
    a098:	003fda06 	br	a004 <__alt_data_end+0xfffeac04>
    a09c:	800b883a 	mov	r5,r16
    a0a0:	9009883a 	mov	r4,r18
    a0a4:	0004bc80 	call	4bc8 <_fflush_r>
    a0a8:	103fe326 	beq	r2,zero,a038 <__alt_data_end+0xfffeac38>
    a0ac:	00bfffc4 	movi	r2,-1
    a0b0:	003fe206 	br	a03c <__alt_data_end+0xfffeac3c>
    a0b4:	800b883a 	mov	r5,r16
    a0b8:	9009883a 	mov	r4,r18
    a0bc:	0002fa80 	call	2fa8 <__swsetup_r>
    a0c0:	103ffa1e 	bne	r2,zero,a0ac <__alt_data_end+0xfffeacac>
    a0c4:	8100030b 	ldhu	r4,12(r16)
    a0c8:	80c00417 	ldw	r3,16(r16)
    a0cc:	003fc506 	br	9fe4 <__alt_data_end+0xfffeabe4>
    a0d0:	0004fb40 	call	4fb4 <__sinit>
    a0d4:	003fbc06 	br	9fc8 <__alt_data_end+0xfffeabc8>

0000a0d8 <__swbuf>:
    a0d8:	00800074 	movhi	r2,1
    a0dc:	10878d04 	addi	r2,r2,7732
    a0e0:	280d883a 	mov	r6,r5
    a0e4:	200b883a 	mov	r5,r4
    a0e8:	11000017 	ldw	r4,0(r2)
    a0ec:	0009f981 	jmpi	9f98 <__swbuf_r>

0000a0f0 <_wcrtomb_r>:
    a0f0:	defff604 	addi	sp,sp,-40
    a0f4:	00800074 	movhi	r2,1
    a0f8:	dc800815 	stw	r18,32(sp)
    a0fc:	dc400715 	stw	r17,28(sp)
    a100:	dc000615 	stw	r16,24(sp)
    a104:	10879104 	addi	r2,r2,7748
    a108:	dfc00915 	stw	ra,36(sp)
    a10c:	2021883a 	mov	r16,r4
    a110:	3823883a 	mov	r17,r7
    a114:	14800017 	ldw	r18,0(r2)
    a118:	28001426 	beq	r5,zero,a16c <_wcrtomb_r+0x7c>
    a11c:	d9400415 	stw	r5,16(sp)
    a120:	d9800515 	stw	r6,20(sp)
    a124:	000563c0 	call	563c <__locale_charset>
    a128:	d9800517 	ldw	r6,20(sp)
    a12c:	d9400417 	ldw	r5,16(sp)
    a130:	100f883a 	mov	r7,r2
    a134:	dc400015 	stw	r17,0(sp)
    a138:	8009883a 	mov	r4,r16
    a13c:	903ee83a 	callr	r18
    a140:	00ffffc4 	movi	r3,-1
    a144:	10c0031e 	bne	r2,r3,a154 <_wcrtomb_r+0x64>
    a148:	88000015 	stw	zero,0(r17)
    a14c:	00c02284 	movi	r3,138
    a150:	80c00015 	stw	r3,0(r16)
    a154:	dfc00917 	ldw	ra,36(sp)
    a158:	dc800817 	ldw	r18,32(sp)
    a15c:	dc400717 	ldw	r17,28(sp)
    a160:	dc000617 	ldw	r16,24(sp)
    a164:	dec00a04 	addi	sp,sp,40
    a168:	f800283a 	ret
    a16c:	000563c0 	call	563c <__locale_charset>
    a170:	100f883a 	mov	r7,r2
    a174:	dc400015 	stw	r17,0(sp)
    a178:	000d883a 	mov	r6,zero
    a17c:	d9400104 	addi	r5,sp,4
    a180:	8009883a 	mov	r4,r16
    a184:	903ee83a 	callr	r18
    a188:	003fed06 	br	a140 <__alt_data_end+0xfffead40>

0000a18c <wcrtomb>:
    a18c:	defff604 	addi	sp,sp,-40
    a190:	00800074 	movhi	r2,1
    a194:	dc800615 	stw	r18,24(sp)
    a198:	dc400515 	stw	r17,20(sp)
    a19c:	10878d04 	addi	r2,r2,7732
    a1a0:	dfc00915 	stw	ra,36(sp)
    a1a4:	dd000815 	stw	r20,32(sp)
    a1a8:	dcc00715 	stw	r19,28(sp)
    a1ac:	dc000415 	stw	r16,16(sp)
    a1b0:	3025883a 	mov	r18,r6
    a1b4:	14400017 	ldw	r17,0(r2)
    a1b8:	20001926 	beq	r4,zero,a220 <wcrtomb+0x94>
    a1bc:	00800074 	movhi	r2,1
    a1c0:	10879104 	addi	r2,r2,7748
    a1c4:	15000017 	ldw	r20,0(r2)
    a1c8:	2021883a 	mov	r16,r4
    a1cc:	2827883a 	mov	r19,r5
    a1d0:	000563c0 	call	563c <__locale_charset>
    a1d4:	100f883a 	mov	r7,r2
    a1d8:	dc800015 	stw	r18,0(sp)
    a1dc:	980d883a 	mov	r6,r19
    a1e0:	800b883a 	mov	r5,r16
    a1e4:	8809883a 	mov	r4,r17
    a1e8:	a03ee83a 	callr	r20
    a1ec:	00ffffc4 	movi	r3,-1
    a1f0:	10c0031e 	bne	r2,r3,a200 <wcrtomb+0x74>
    a1f4:	90000015 	stw	zero,0(r18)
    a1f8:	00c02284 	movi	r3,138
    a1fc:	88c00015 	stw	r3,0(r17)
    a200:	dfc00917 	ldw	ra,36(sp)
    a204:	dd000817 	ldw	r20,32(sp)
    a208:	dcc00717 	ldw	r19,28(sp)
    a20c:	dc800617 	ldw	r18,24(sp)
    a210:	dc400517 	ldw	r17,20(sp)
    a214:	dc000417 	ldw	r16,16(sp)
    a218:	dec00a04 	addi	sp,sp,40
    a21c:	f800283a 	ret
    a220:	00800074 	movhi	r2,1
    a224:	10879104 	addi	r2,r2,7748
    a228:	14000017 	ldw	r16,0(r2)
    a22c:	000563c0 	call	563c <__locale_charset>
    a230:	100f883a 	mov	r7,r2
    a234:	dc800015 	stw	r18,0(sp)
    a238:	000d883a 	mov	r6,zero
    a23c:	d9400104 	addi	r5,sp,4
    a240:	8809883a 	mov	r4,r17
    a244:	803ee83a 	callr	r16
    a248:	003fe806 	br	a1ec <__alt_data_end+0xfffeadec>

0000a24c <__ascii_wctomb>:
    a24c:	28000526 	beq	r5,zero,a264 <__ascii_wctomb+0x18>
    a250:	00803fc4 	movi	r2,255
    a254:	11800536 	bltu	r2,r6,a26c <__ascii_wctomb+0x20>
    a258:	29800005 	stb	r6,0(r5)
    a25c:	00800044 	movi	r2,1
    a260:	f800283a 	ret
    a264:	0005883a 	mov	r2,zero
    a268:	f800283a 	ret
    a26c:	00802284 	movi	r2,138
    a270:	20800015 	stw	r2,0(r4)
    a274:	00bfffc4 	movi	r2,-1
    a278:	f800283a 	ret

0000a27c <_wctomb_r>:
    a27c:	00800074 	movhi	r2,1
    a280:	defff904 	addi	sp,sp,-28
    a284:	10879104 	addi	r2,r2,7748
    a288:	dfc00615 	stw	ra,24(sp)
    a28c:	dc400515 	stw	r17,20(sp)
    a290:	dc000415 	stw	r16,16(sp)
    a294:	3823883a 	mov	r17,r7
    a298:	14000017 	ldw	r16,0(r2)
    a29c:	d9000115 	stw	r4,4(sp)
    a2a0:	d9400215 	stw	r5,8(sp)
    a2a4:	d9800315 	stw	r6,12(sp)
    a2a8:	000563c0 	call	563c <__locale_charset>
    a2ac:	d9800317 	ldw	r6,12(sp)
    a2b0:	d9400217 	ldw	r5,8(sp)
    a2b4:	d9000117 	ldw	r4,4(sp)
    a2b8:	100f883a 	mov	r7,r2
    a2bc:	dc400015 	stw	r17,0(sp)
    a2c0:	803ee83a 	callr	r16
    a2c4:	dfc00617 	ldw	ra,24(sp)
    a2c8:	dc400517 	ldw	r17,20(sp)
    a2cc:	dc000417 	ldw	r16,16(sp)
    a2d0:	dec00704 	addi	sp,sp,28
    a2d4:	f800283a 	ret

0000a2d8 <__udivdi3>:
    a2d8:	defff404 	addi	sp,sp,-48
    a2dc:	dcc00515 	stw	r19,20(sp)
    a2e0:	dc000215 	stw	r16,8(sp)
    a2e4:	dfc00b15 	stw	ra,44(sp)
    a2e8:	df000a15 	stw	fp,40(sp)
    a2ec:	ddc00915 	stw	r23,36(sp)
    a2f0:	dd800815 	stw	r22,32(sp)
    a2f4:	dd400715 	stw	r21,28(sp)
    a2f8:	dd000615 	stw	r20,24(sp)
    a2fc:	dc800415 	stw	r18,16(sp)
    a300:	dc400315 	stw	r17,12(sp)
    a304:	2027883a 	mov	r19,r4
    a308:	2821883a 	mov	r16,r5
    a30c:	3800461e 	bne	r7,zero,a428 <__udivdi3+0x150>
    a310:	3023883a 	mov	r17,r6
    a314:	2025883a 	mov	r18,r4
    a318:	2980572e 	bgeu	r5,r6,a478 <__udivdi3+0x1a0>
    a31c:	00bfffd4 	movui	r2,65535
    a320:	282d883a 	mov	r22,r5
    a324:	1180b236 	bltu	r2,r6,a5f0 <__udivdi3+0x318>
    a328:	00803fc4 	movi	r2,255
    a32c:	1185803a 	cmpltu	r2,r2,r6
    a330:	100490fa 	slli	r2,r2,3
    a334:	3086d83a 	srl	r3,r6,r2
    a338:	01000074 	movhi	r4,1
    a33c:	21009404 	addi	r4,r4,592
    a340:	20c7883a 	add	r3,r4,r3
    a344:	18c00003 	ldbu	r3,0(r3)
    a348:	1885883a 	add	r2,r3,r2
    a34c:	00c00804 	movi	r3,32
    a350:	1887c83a 	sub	r3,r3,r2
    a354:	18000526 	beq	r3,zero,a36c <__udivdi3+0x94>
    a358:	80e0983a 	sll	r16,r16,r3
    a35c:	9884d83a 	srl	r2,r19,r2
    a360:	30e2983a 	sll	r17,r6,r3
    a364:	98e4983a 	sll	r18,r19,r3
    a368:	142cb03a 	or	r22,r2,r16
    a36c:	882ad43a 	srli	r21,r17,16
    a370:	b009883a 	mov	r4,r22
    a374:	8d3fffcc 	andi	r20,r17,65535
    a378:	a80b883a 	mov	r5,r21
    a37c:	000aff40 	call	aff4 <__umodsi3>
    a380:	b009883a 	mov	r4,r22
    a384:	a80b883a 	mov	r5,r21
    a388:	1027883a 	mov	r19,r2
    a38c:	000af900 	call	af90 <__udivsi3>
    a390:	100b883a 	mov	r5,r2
    a394:	a009883a 	mov	r4,r20
    a398:	102d883a 	mov	r22,r2
    a39c:	000b04c0 	call	b04c <__mulsi3>
    a3a0:	9826943a 	slli	r19,r19,16
    a3a4:	9006d43a 	srli	r3,r18,16
    a3a8:	1cc6b03a 	or	r3,r3,r19
    a3ac:	1880052e 	bgeu	r3,r2,a3c4 <__udivdi3+0xec>
    a3b0:	1c47883a 	add	r3,r3,r17
    a3b4:	b13fffc4 	addi	r4,r22,-1
    a3b8:	1c400136 	bltu	r3,r17,a3c0 <__udivdi3+0xe8>
    a3bc:	18814236 	bltu	r3,r2,a8c8 <__udivdi3+0x5f0>
    a3c0:	202d883a 	mov	r22,r4
    a3c4:	18a1c83a 	sub	r16,r3,r2
    a3c8:	8009883a 	mov	r4,r16
    a3cc:	a80b883a 	mov	r5,r21
    a3d0:	000aff40 	call	aff4 <__umodsi3>
    a3d4:	1027883a 	mov	r19,r2
    a3d8:	8009883a 	mov	r4,r16
    a3dc:	a80b883a 	mov	r5,r21
    a3e0:	9826943a 	slli	r19,r19,16
    a3e4:	000af900 	call	af90 <__udivsi3>
    a3e8:	100b883a 	mov	r5,r2
    a3ec:	a009883a 	mov	r4,r20
    a3f0:	94bfffcc 	andi	r18,r18,65535
    a3f4:	1021883a 	mov	r16,r2
    a3f8:	94e4b03a 	or	r18,r18,r19
    a3fc:	000b04c0 	call	b04c <__mulsi3>
    a400:	9080052e 	bgeu	r18,r2,a418 <__udivdi3+0x140>
    a404:	8ca5883a 	add	r18,r17,r18
    a408:	80ffffc4 	addi	r3,r16,-1
    a40c:	94410c36 	bltu	r18,r17,a840 <__udivdi3+0x568>
    a410:	90810b2e 	bgeu	r18,r2,a840 <__udivdi3+0x568>
    a414:	843fff84 	addi	r16,r16,-2
    a418:	b004943a 	slli	r2,r22,16
    a41c:	0007883a 	mov	r3,zero
    a420:	1404b03a 	or	r2,r2,r16
    a424:	00005e06 	br	a5a0 <__udivdi3+0x2c8>
    a428:	29c05b36 	bltu	r5,r7,a598 <__udivdi3+0x2c0>
    a42c:	00bfffd4 	movui	r2,65535
    a430:	11c0672e 	bgeu	r2,r7,a5d0 <__udivdi3+0x2f8>
    a434:	00804034 	movhi	r2,256
    a438:	10bfffc4 	addi	r2,r2,-1
    a43c:	11c10a36 	bltu	r2,r7,a868 <__udivdi3+0x590>
    a440:	00800404 	movi	r2,16
    a444:	3886d83a 	srl	r3,r7,r2
    a448:	01000074 	movhi	r4,1
    a44c:	21009404 	addi	r4,r4,592
    a450:	20c7883a 	add	r3,r4,r3
    a454:	18c00003 	ldbu	r3,0(r3)
    a458:	05c00804 	movi	r23,32
    a45c:	1885883a 	add	r2,r3,r2
    a460:	b8afc83a 	sub	r23,r23,r2
    a464:	b800671e 	bne	r23,zero,a604 <__udivdi3+0x32c>
    a468:	3c010536 	bltu	r7,r16,a880 <__udivdi3+0x5a8>
    a46c:	9985403a 	cmpgeu	r2,r19,r6
    a470:	0007883a 	mov	r3,zero
    a474:	00004a06 	br	a5a0 <__udivdi3+0x2c8>
    a478:	3000041e 	bne	r6,zero,a48c <__udivdi3+0x1b4>
    a47c:	000b883a 	mov	r5,zero
    a480:	01000044 	movi	r4,1
    a484:	000af900 	call	af90 <__udivsi3>
    a488:	1023883a 	mov	r17,r2
    a48c:	00bfffd4 	movui	r2,65535
    a490:	1440532e 	bgeu	r2,r17,a5e0 <__udivdi3+0x308>
    a494:	00804034 	movhi	r2,256
    a498:	10bfffc4 	addi	r2,r2,-1
    a49c:	1440f436 	bltu	r2,r17,a870 <__udivdi3+0x598>
    a4a0:	00800404 	movi	r2,16
    a4a4:	8886d83a 	srl	r3,r17,r2
    a4a8:	01000074 	movhi	r4,1
    a4ac:	21009404 	addi	r4,r4,592
    a4b0:	20c7883a 	add	r3,r4,r3
    a4b4:	18c00003 	ldbu	r3,0(r3)
    a4b8:	1885883a 	add	r2,r3,r2
    a4bc:	00c00804 	movi	r3,32
    a4c0:	1887c83a 	sub	r3,r3,r2
    a4c4:	1800a51e 	bne	r3,zero,a75c <__udivdi3+0x484>
    a4c8:	882ad43a 	srli	r21,r17,16
    a4cc:	8461c83a 	sub	r16,r16,r17
    a4d0:	8d3fffcc 	andi	r20,r17,65535
    a4d4:	00c00044 	movi	r3,1
    a4d8:	a80b883a 	mov	r5,r21
    a4dc:	8009883a 	mov	r4,r16
    a4e0:	d8c00115 	stw	r3,4(sp)
    a4e4:	000aff40 	call	aff4 <__umodsi3>
    a4e8:	a80b883a 	mov	r5,r21
    a4ec:	8009883a 	mov	r4,r16
    a4f0:	1027883a 	mov	r19,r2
    a4f4:	000af900 	call	af90 <__udivsi3>
    a4f8:	a00b883a 	mov	r5,r20
    a4fc:	1009883a 	mov	r4,r2
    a500:	102d883a 	mov	r22,r2
    a504:	000b04c0 	call	b04c <__mulsi3>
    a508:	9826943a 	slli	r19,r19,16
    a50c:	900ed43a 	srli	r7,r18,16
    a510:	d8c00117 	ldw	r3,4(sp)
    a514:	3cceb03a 	or	r7,r7,r19
    a518:	3880052e 	bgeu	r7,r2,a530 <__udivdi3+0x258>
    a51c:	3c4f883a 	add	r7,r7,r17
    a520:	b13fffc4 	addi	r4,r22,-1
    a524:	3c400136 	bltu	r7,r17,a52c <__udivdi3+0x254>
    a528:	3880e436 	bltu	r7,r2,a8bc <__udivdi3+0x5e4>
    a52c:	202d883a 	mov	r22,r4
    a530:	38a1c83a 	sub	r16,r7,r2
    a534:	8009883a 	mov	r4,r16
    a538:	a80b883a 	mov	r5,r21
    a53c:	d8c00115 	stw	r3,4(sp)
    a540:	000aff40 	call	aff4 <__umodsi3>
    a544:	1027883a 	mov	r19,r2
    a548:	8009883a 	mov	r4,r16
    a54c:	a80b883a 	mov	r5,r21
    a550:	9826943a 	slli	r19,r19,16
    a554:	000af900 	call	af90 <__udivsi3>
    a558:	a00b883a 	mov	r5,r20
    a55c:	1009883a 	mov	r4,r2
    a560:	94bfffcc 	andi	r18,r18,65535
    a564:	1021883a 	mov	r16,r2
    a568:	94e4b03a 	or	r18,r18,r19
    a56c:	000b04c0 	call	b04c <__mulsi3>
    a570:	d8c00117 	ldw	r3,4(sp)
    a574:	9080052e 	bgeu	r18,r2,a58c <__udivdi3+0x2b4>
    a578:	8ca5883a 	add	r18,r17,r18
    a57c:	813fffc4 	addi	r4,r16,-1
    a580:	9440ad36 	bltu	r18,r17,a838 <__udivdi3+0x560>
    a584:	9080ac2e 	bgeu	r18,r2,a838 <__udivdi3+0x560>
    a588:	843fff84 	addi	r16,r16,-2
    a58c:	b004943a 	slli	r2,r22,16
    a590:	1404b03a 	or	r2,r2,r16
    a594:	00000206 	br	a5a0 <__udivdi3+0x2c8>
    a598:	0007883a 	mov	r3,zero
    a59c:	0005883a 	mov	r2,zero
    a5a0:	dfc00b17 	ldw	ra,44(sp)
    a5a4:	df000a17 	ldw	fp,40(sp)
    a5a8:	ddc00917 	ldw	r23,36(sp)
    a5ac:	dd800817 	ldw	r22,32(sp)
    a5b0:	dd400717 	ldw	r21,28(sp)
    a5b4:	dd000617 	ldw	r20,24(sp)
    a5b8:	dcc00517 	ldw	r19,20(sp)
    a5bc:	dc800417 	ldw	r18,16(sp)
    a5c0:	dc400317 	ldw	r17,12(sp)
    a5c4:	dc000217 	ldw	r16,8(sp)
    a5c8:	dec00c04 	addi	sp,sp,48
    a5cc:	f800283a 	ret
    a5d0:	00803fc4 	movi	r2,255
    a5d4:	11c5803a 	cmpltu	r2,r2,r7
    a5d8:	100490fa 	slli	r2,r2,3
    a5dc:	003f9906 	br	a444 <__alt_data_end+0xfffeb044>
    a5e0:	00803fc4 	movi	r2,255
    a5e4:	1445803a 	cmpltu	r2,r2,r17
    a5e8:	100490fa 	slli	r2,r2,3
    a5ec:	003fad06 	br	a4a4 <__alt_data_end+0xfffeb0a4>
    a5f0:	00804034 	movhi	r2,256
    a5f4:	10bfffc4 	addi	r2,r2,-1
    a5f8:	11809f36 	bltu	r2,r6,a878 <__udivdi3+0x5a0>
    a5fc:	00800404 	movi	r2,16
    a600:	003f4c06 	br	a334 <__alt_data_end+0xfffeaf34>
    a604:	3dce983a 	sll	r7,r7,r23
    a608:	30b8d83a 	srl	fp,r6,r2
    a60c:	80a2d83a 	srl	r17,r16,r2
    a610:	35cc983a 	sll	r6,r6,r23
    a614:	3f38b03a 	or	fp,r7,fp
    a618:	e024d43a 	srli	r18,fp,16
    a61c:	9884d83a 	srl	r2,r19,r2
    a620:	85e0983a 	sll	r16,r16,r23
    a624:	8809883a 	mov	r4,r17
    a628:	900b883a 	mov	r5,r18
    a62c:	d9800015 	stw	r6,0(sp)
    a630:	1420b03a 	or	r16,r2,r16
    a634:	000aff40 	call	aff4 <__umodsi3>
    a638:	900b883a 	mov	r5,r18
    a63c:	8809883a 	mov	r4,r17
    a640:	1029883a 	mov	r20,r2
    a644:	e5bfffcc 	andi	r22,fp,65535
    a648:	000af900 	call	af90 <__udivsi3>
    a64c:	100b883a 	mov	r5,r2
    a650:	b009883a 	mov	r4,r22
    a654:	102b883a 	mov	r21,r2
    a658:	000b04c0 	call	b04c <__mulsi3>
    a65c:	a028943a 	slli	r20,r20,16
    a660:	8006d43a 	srli	r3,r16,16
    a664:	1d06b03a 	or	r3,r3,r20
    a668:	1880042e 	bgeu	r3,r2,a67c <__udivdi3+0x3a4>
    a66c:	1f07883a 	add	r3,r3,fp
    a670:	a93fffc4 	addi	r4,r21,-1
    a674:	1f00892e 	bgeu	r3,fp,a89c <__udivdi3+0x5c4>
    a678:	202b883a 	mov	r21,r4
    a67c:	18a3c83a 	sub	r17,r3,r2
    a680:	8809883a 	mov	r4,r17
    a684:	900b883a 	mov	r5,r18
    a688:	000aff40 	call	aff4 <__umodsi3>
    a68c:	1029883a 	mov	r20,r2
    a690:	8809883a 	mov	r4,r17
    a694:	900b883a 	mov	r5,r18
    a698:	a028943a 	slli	r20,r20,16
    a69c:	000af900 	call	af90 <__udivsi3>
    a6a0:	100b883a 	mov	r5,r2
    a6a4:	b009883a 	mov	r4,r22
    a6a8:	843fffcc 	andi	r16,r16,65535
    a6ac:	1023883a 	mov	r17,r2
    a6b0:	8520b03a 	or	r16,r16,r20
    a6b4:	000b04c0 	call	b04c <__mulsi3>
    a6b8:	8080042e 	bgeu	r16,r2,a6cc <__udivdi3+0x3f4>
    a6bc:	8721883a 	add	r16,r16,fp
    a6c0:	88ffffc4 	addi	r3,r17,-1
    a6c4:	8700712e 	bgeu	r16,fp,a88c <__udivdi3+0x5b4>
    a6c8:	1823883a 	mov	r17,r3
    a6cc:	a80e943a 	slli	r7,r21,16
    a6d0:	d8c00017 	ldw	r3,0(sp)
    a6d4:	80a1c83a 	sub	r16,r16,r2
    a6d8:	3c64b03a 	or	r18,r7,r17
    a6dc:	1d3fffcc 	andi	r20,r3,65535
    a6e0:	9022d43a 	srli	r17,r18,16
    a6e4:	95bfffcc 	andi	r22,r18,65535
    a6e8:	a00b883a 	mov	r5,r20
    a6ec:	b009883a 	mov	r4,r22
    a6f0:	182ad43a 	srli	r21,r3,16
    a6f4:	000b04c0 	call	b04c <__mulsi3>
    a6f8:	a00b883a 	mov	r5,r20
    a6fc:	8809883a 	mov	r4,r17
    a700:	1039883a 	mov	fp,r2
    a704:	000b04c0 	call	b04c <__mulsi3>
    a708:	8809883a 	mov	r4,r17
    a70c:	a80b883a 	mov	r5,r21
    a710:	1029883a 	mov	r20,r2
    a714:	000b04c0 	call	b04c <__mulsi3>
    a718:	a80b883a 	mov	r5,r21
    a71c:	b009883a 	mov	r4,r22
    a720:	1023883a 	mov	r17,r2
    a724:	000b04c0 	call	b04c <__mulsi3>
    a728:	e006d43a 	srli	r3,fp,16
    a72c:	1505883a 	add	r2,r2,r20
    a730:	1887883a 	add	r3,r3,r2
    a734:	1d00022e 	bgeu	r3,r20,a740 <__udivdi3+0x468>
    a738:	00800074 	movhi	r2,1
    a73c:	88a3883a 	add	r17,r17,r2
    a740:	1804d43a 	srli	r2,r3,16
    a744:	1463883a 	add	r17,r2,r17
    a748:	84404436 	bltu	r16,r17,a85c <__udivdi3+0x584>
    a74c:	84403e26 	beq	r16,r17,a848 <__udivdi3+0x570>
    a750:	9005883a 	mov	r2,r18
    a754:	0007883a 	mov	r3,zero
    a758:	003f9106 	br	a5a0 <__alt_data_end+0xfffeb1a0>
    a75c:	88e2983a 	sll	r17,r17,r3
    a760:	80aed83a 	srl	r23,r16,r2
    a764:	80e0983a 	sll	r16,r16,r3
    a768:	882ad43a 	srli	r21,r17,16
    a76c:	9884d83a 	srl	r2,r19,r2
    a770:	b809883a 	mov	r4,r23
    a774:	a80b883a 	mov	r5,r21
    a778:	98e4983a 	sll	r18,r19,r3
    a77c:	142cb03a 	or	r22,r2,r16
    a780:	000aff40 	call	aff4 <__umodsi3>
    a784:	b809883a 	mov	r4,r23
    a788:	a80b883a 	mov	r5,r21
    a78c:	1027883a 	mov	r19,r2
    a790:	8d3fffcc 	andi	r20,r17,65535
    a794:	000af900 	call	af90 <__udivsi3>
    a798:	a009883a 	mov	r4,r20
    a79c:	100b883a 	mov	r5,r2
    a7a0:	102f883a 	mov	r23,r2
    a7a4:	000b04c0 	call	b04c <__mulsi3>
    a7a8:	9826943a 	slli	r19,r19,16
    a7ac:	b008d43a 	srli	r4,r22,16
    a7b0:	24c8b03a 	or	r4,r4,r19
    a7b4:	2080062e 	bgeu	r4,r2,a7d0 <__udivdi3+0x4f8>
    a7b8:	2449883a 	add	r4,r4,r17
    a7bc:	b8ffffc4 	addi	r3,r23,-1
    a7c0:	24403c36 	bltu	r4,r17,a8b4 <__udivdi3+0x5dc>
    a7c4:	20803b2e 	bgeu	r4,r2,a8b4 <__udivdi3+0x5dc>
    a7c8:	bdffff84 	addi	r23,r23,-2
    a7cc:	2449883a 	add	r4,r4,r17
    a7d0:	20a1c83a 	sub	r16,r4,r2
    a7d4:	a80b883a 	mov	r5,r21
    a7d8:	8009883a 	mov	r4,r16
    a7dc:	000aff40 	call	aff4 <__umodsi3>
    a7e0:	a80b883a 	mov	r5,r21
    a7e4:	8009883a 	mov	r4,r16
    a7e8:	1027883a 	mov	r19,r2
    a7ec:	000af900 	call	af90 <__udivsi3>
    a7f0:	a009883a 	mov	r4,r20
    a7f4:	100b883a 	mov	r5,r2
    a7f8:	9826943a 	slli	r19,r19,16
    a7fc:	1039883a 	mov	fp,r2
    a800:	000b04c0 	call	b04c <__mulsi3>
    a804:	b13fffcc 	andi	r4,r22,65535
    a808:	24c8b03a 	or	r4,r4,r19
    a80c:	2080062e 	bgeu	r4,r2,a828 <__udivdi3+0x550>
    a810:	2449883a 	add	r4,r4,r17
    a814:	e0ffffc4 	addi	r3,fp,-1
    a818:	24402436 	bltu	r4,r17,a8ac <__udivdi3+0x5d4>
    a81c:	2080232e 	bgeu	r4,r2,a8ac <__udivdi3+0x5d4>
    a820:	e73fff84 	addi	fp,fp,-2
    a824:	2449883a 	add	r4,r4,r17
    a828:	b82e943a 	slli	r23,r23,16
    a82c:	20a1c83a 	sub	r16,r4,r2
    a830:	bf06b03a 	or	r3,r23,fp
    a834:	003f2806 	br	a4d8 <__alt_data_end+0xfffeb0d8>
    a838:	2021883a 	mov	r16,r4
    a83c:	003f5306 	br	a58c <__alt_data_end+0xfffeb18c>
    a840:	1821883a 	mov	r16,r3
    a844:	003ef406 	br	a418 <__alt_data_end+0xfffeb018>
    a848:	1806943a 	slli	r3,r3,16
    a84c:	9de6983a 	sll	r19,r19,r23
    a850:	e73fffcc 	andi	fp,fp,65535
    a854:	1f07883a 	add	r3,r3,fp
    a858:	98ffbd2e 	bgeu	r19,r3,a750 <__alt_data_end+0xfffeb350>
    a85c:	90bfffc4 	addi	r2,r18,-1
    a860:	0007883a 	mov	r3,zero
    a864:	003f4e06 	br	a5a0 <__alt_data_end+0xfffeb1a0>
    a868:	00800604 	movi	r2,24
    a86c:	003ef506 	br	a444 <__alt_data_end+0xfffeb044>
    a870:	00800604 	movi	r2,24
    a874:	003f0b06 	br	a4a4 <__alt_data_end+0xfffeb0a4>
    a878:	00800604 	movi	r2,24
    a87c:	003ead06 	br	a334 <__alt_data_end+0xfffeaf34>
    a880:	0007883a 	mov	r3,zero
    a884:	00800044 	movi	r2,1
    a888:	003f4506 	br	a5a0 <__alt_data_end+0xfffeb1a0>
    a88c:	80bf8e2e 	bgeu	r16,r2,a6c8 <__alt_data_end+0xfffeb2c8>
    a890:	8c7fff84 	addi	r17,r17,-2
    a894:	8721883a 	add	r16,r16,fp
    a898:	003f8c06 	br	a6cc <__alt_data_end+0xfffeb2cc>
    a89c:	18bf762e 	bgeu	r3,r2,a678 <__alt_data_end+0xfffeb278>
    a8a0:	ad7fff84 	addi	r21,r21,-2
    a8a4:	1f07883a 	add	r3,r3,fp
    a8a8:	003f7406 	br	a67c <__alt_data_end+0xfffeb27c>
    a8ac:	1839883a 	mov	fp,r3
    a8b0:	003fdd06 	br	a828 <__alt_data_end+0xfffeb428>
    a8b4:	182f883a 	mov	r23,r3
    a8b8:	003fc506 	br	a7d0 <__alt_data_end+0xfffeb3d0>
    a8bc:	b5bfff84 	addi	r22,r22,-2
    a8c0:	3c4f883a 	add	r7,r7,r17
    a8c4:	003f1a06 	br	a530 <__alt_data_end+0xfffeb130>
    a8c8:	b5bfff84 	addi	r22,r22,-2
    a8cc:	1c47883a 	add	r3,r3,r17
    a8d0:	003ebc06 	br	a3c4 <__alt_data_end+0xfffeafc4>

0000a8d4 <__umoddi3>:
    a8d4:	defff304 	addi	sp,sp,-52
    a8d8:	df000b15 	stw	fp,44(sp)
    a8dc:	dc400415 	stw	r17,16(sp)
    a8e0:	dc000315 	stw	r16,12(sp)
    a8e4:	dfc00c15 	stw	ra,48(sp)
    a8e8:	ddc00a15 	stw	r23,40(sp)
    a8ec:	dd800915 	stw	r22,36(sp)
    a8f0:	dd400815 	stw	r21,32(sp)
    a8f4:	dd000715 	stw	r20,28(sp)
    a8f8:	dcc00615 	stw	r19,24(sp)
    a8fc:	dc800515 	stw	r18,20(sp)
    a900:	2021883a 	mov	r16,r4
    a904:	2823883a 	mov	r17,r5
    a908:	2839883a 	mov	fp,r5
    a90c:	3800401e 	bne	r7,zero,aa10 <__umoddi3+0x13c>
    a910:	3027883a 	mov	r19,r6
    a914:	2029883a 	mov	r20,r4
    a918:	2980552e 	bgeu	r5,r6,aa70 <__umoddi3+0x19c>
    a91c:	00bfffd4 	movui	r2,65535
    a920:	1180a236 	bltu	r2,r6,abac <__umoddi3+0x2d8>
    a924:	01003fc4 	movi	r4,255
    a928:	2189803a 	cmpltu	r4,r4,r6
    a92c:	200890fa 	slli	r4,r4,3
    a930:	3104d83a 	srl	r2,r6,r4
    a934:	00c00074 	movhi	r3,1
    a938:	18c09404 	addi	r3,r3,592
    a93c:	1885883a 	add	r2,r3,r2
    a940:	10c00003 	ldbu	r3,0(r2)
    a944:	00800804 	movi	r2,32
    a948:	1909883a 	add	r4,r3,r4
    a94c:	1125c83a 	sub	r18,r2,r4
    a950:	90000526 	beq	r18,zero,a968 <__umoddi3+0x94>
    a954:	8ca2983a 	sll	r17,r17,r18
    a958:	8108d83a 	srl	r4,r16,r4
    a95c:	34a6983a 	sll	r19,r6,r18
    a960:	84a8983a 	sll	r20,r16,r18
    a964:	2478b03a 	or	fp,r4,r17
    a968:	982cd43a 	srli	r22,r19,16
    a96c:	e009883a 	mov	r4,fp
    a970:	9dffffcc 	andi	r23,r19,65535
    a974:	b00b883a 	mov	r5,r22
    a978:	000aff40 	call	aff4 <__umodsi3>
    a97c:	b00b883a 	mov	r5,r22
    a980:	e009883a 	mov	r4,fp
    a984:	102b883a 	mov	r21,r2
    a988:	000af900 	call	af90 <__udivsi3>
    a98c:	100b883a 	mov	r5,r2
    a990:	b809883a 	mov	r4,r23
    a994:	000b04c0 	call	b04c <__mulsi3>
    a998:	a82a943a 	slli	r21,r21,16
    a99c:	a006d43a 	srli	r3,r20,16
    a9a0:	1d46b03a 	or	r3,r3,r21
    a9a4:	1880032e 	bgeu	r3,r2,a9b4 <__umoddi3+0xe0>
    a9a8:	1cc7883a 	add	r3,r3,r19
    a9ac:	1cc00136 	bltu	r3,r19,a9b4 <__umoddi3+0xe0>
    a9b0:	18813136 	bltu	r3,r2,ae78 <__umoddi3+0x5a4>
    a9b4:	18a1c83a 	sub	r16,r3,r2
    a9b8:	b00b883a 	mov	r5,r22
    a9bc:	8009883a 	mov	r4,r16
    a9c0:	000aff40 	call	aff4 <__umodsi3>
    a9c4:	b00b883a 	mov	r5,r22
    a9c8:	8009883a 	mov	r4,r16
    a9cc:	1023883a 	mov	r17,r2
    a9d0:	000af900 	call	af90 <__udivsi3>
    a9d4:	100b883a 	mov	r5,r2
    a9d8:	b809883a 	mov	r4,r23
    a9dc:	8822943a 	slli	r17,r17,16
    a9e0:	000b04c0 	call	b04c <__mulsi3>
    a9e4:	a0ffffcc 	andi	r3,r20,65535
    a9e8:	1c46b03a 	or	r3,r3,r17
    a9ec:	1880042e 	bgeu	r3,r2,aa00 <__umoddi3+0x12c>
    a9f0:	1cc7883a 	add	r3,r3,r19
    a9f4:	1cc00236 	bltu	r3,r19,aa00 <__umoddi3+0x12c>
    a9f8:	1880012e 	bgeu	r3,r2,aa00 <__umoddi3+0x12c>
    a9fc:	1cc7883a 	add	r3,r3,r19
    aa00:	1885c83a 	sub	r2,r3,r2
    aa04:	1484d83a 	srl	r2,r2,r18
    aa08:	0007883a 	mov	r3,zero
    aa0c:	00005306 	br	ab5c <__umoddi3+0x288>
    aa10:	29c05036 	bltu	r5,r7,ab54 <__umoddi3+0x280>
    aa14:	00bfffd4 	movui	r2,65535
    aa18:	11c05c2e 	bgeu	r2,r7,ab8c <__umoddi3+0x2b8>
    aa1c:	00804034 	movhi	r2,256
    aa20:	10bfffc4 	addi	r2,r2,-1
    aa24:	11c10636 	bltu	r2,r7,ae40 <__umoddi3+0x56c>
    aa28:	01000404 	movi	r4,16
    aa2c:	3904d83a 	srl	r2,r7,r4
    aa30:	00c00074 	movhi	r3,1
    aa34:	18c09404 	addi	r3,r3,592
    aa38:	1885883a 	add	r2,r3,r2
    aa3c:	14c00003 	ldbu	r19,0(r2)
    aa40:	00c00804 	movi	r3,32
    aa44:	9927883a 	add	r19,r19,r4
    aa48:	1ce9c83a 	sub	r20,r3,r19
    aa4c:	a0005c1e 	bne	r20,zero,abc0 <__umoddi3+0x2ec>
    aa50:	3c400136 	bltu	r7,r17,aa58 <__umoddi3+0x184>
    aa54:	81810a36 	bltu	r16,r6,ae80 <__umoddi3+0x5ac>
    aa58:	8185c83a 	sub	r2,r16,r6
    aa5c:	89e3c83a 	sub	r17,r17,r7
    aa60:	8089803a 	cmpltu	r4,r16,r2
    aa64:	8939c83a 	sub	fp,r17,r4
    aa68:	e007883a 	mov	r3,fp
    aa6c:	00003b06 	br	ab5c <__umoddi3+0x288>
    aa70:	3000041e 	bne	r6,zero,aa84 <__umoddi3+0x1b0>
    aa74:	000b883a 	mov	r5,zero
    aa78:	01000044 	movi	r4,1
    aa7c:	000af900 	call	af90 <__udivsi3>
    aa80:	1027883a 	mov	r19,r2
    aa84:	00bfffd4 	movui	r2,65535
    aa88:	14c0442e 	bgeu	r2,r19,ab9c <__umoddi3+0x2c8>
    aa8c:	00804034 	movhi	r2,256
    aa90:	10bfffc4 	addi	r2,r2,-1
    aa94:	14c0ec36 	bltu	r2,r19,ae48 <__umoddi3+0x574>
    aa98:	00800404 	movi	r2,16
    aa9c:	9886d83a 	srl	r3,r19,r2
    aaa0:	01000074 	movhi	r4,1
    aaa4:	21009404 	addi	r4,r4,592
    aaa8:	20c7883a 	add	r3,r4,r3
    aaac:	18c00003 	ldbu	r3,0(r3)
    aab0:	1887883a 	add	r3,r3,r2
    aab4:	00800804 	movi	r2,32
    aab8:	10e5c83a 	sub	r18,r2,r3
    aabc:	9000ab1e 	bne	r18,zero,ad6c <__umoddi3+0x498>
    aac0:	982cd43a 	srli	r22,r19,16
    aac4:	8ce3c83a 	sub	r17,r17,r19
    aac8:	9dffffcc 	andi	r23,r19,65535
    aacc:	b00b883a 	mov	r5,r22
    aad0:	8809883a 	mov	r4,r17
    aad4:	000aff40 	call	aff4 <__umodsi3>
    aad8:	b00b883a 	mov	r5,r22
    aadc:	8809883a 	mov	r4,r17
    aae0:	102b883a 	mov	r21,r2
    aae4:	000af900 	call	af90 <__udivsi3>
    aae8:	b80b883a 	mov	r5,r23
    aaec:	1009883a 	mov	r4,r2
    aaf0:	000b04c0 	call	b04c <__mulsi3>
    aaf4:	a82a943a 	slli	r21,r21,16
    aaf8:	a006d43a 	srli	r3,r20,16
    aafc:	1d46b03a 	or	r3,r3,r21
    ab00:	1880042e 	bgeu	r3,r2,ab14 <__umoddi3+0x240>
    ab04:	1cc7883a 	add	r3,r3,r19
    ab08:	1cc00236 	bltu	r3,r19,ab14 <__umoddi3+0x240>
    ab0c:	1880012e 	bgeu	r3,r2,ab14 <__umoddi3+0x240>
    ab10:	1cc7883a 	add	r3,r3,r19
    ab14:	18a1c83a 	sub	r16,r3,r2
    ab18:	b00b883a 	mov	r5,r22
    ab1c:	8009883a 	mov	r4,r16
    ab20:	000aff40 	call	aff4 <__umodsi3>
    ab24:	1023883a 	mov	r17,r2
    ab28:	b00b883a 	mov	r5,r22
    ab2c:	8009883a 	mov	r4,r16
    ab30:	000af900 	call	af90 <__udivsi3>
    ab34:	8822943a 	slli	r17,r17,16
    ab38:	b80b883a 	mov	r5,r23
    ab3c:	1009883a 	mov	r4,r2
    ab40:	000b04c0 	call	b04c <__mulsi3>
    ab44:	a53fffcc 	andi	r20,r20,65535
    ab48:	a446b03a 	or	r3,r20,r17
    ab4c:	18bfac2e 	bgeu	r3,r2,aa00 <__alt_data_end+0xfffeb600>
    ab50:	003fa706 	br	a9f0 <__alt_data_end+0xfffeb5f0>
    ab54:	2005883a 	mov	r2,r4
    ab58:	2807883a 	mov	r3,r5
    ab5c:	dfc00c17 	ldw	ra,48(sp)
    ab60:	df000b17 	ldw	fp,44(sp)
    ab64:	ddc00a17 	ldw	r23,40(sp)
    ab68:	dd800917 	ldw	r22,36(sp)
    ab6c:	dd400817 	ldw	r21,32(sp)
    ab70:	dd000717 	ldw	r20,28(sp)
    ab74:	dcc00617 	ldw	r19,24(sp)
    ab78:	dc800517 	ldw	r18,20(sp)
    ab7c:	dc400417 	ldw	r17,16(sp)
    ab80:	dc000317 	ldw	r16,12(sp)
    ab84:	dec00d04 	addi	sp,sp,52
    ab88:	f800283a 	ret
    ab8c:	04c03fc4 	movi	r19,255
    ab90:	99c9803a 	cmpltu	r4,r19,r7
    ab94:	200890fa 	slli	r4,r4,3
    ab98:	003fa406 	br	aa2c <__alt_data_end+0xfffeb62c>
    ab9c:	00803fc4 	movi	r2,255
    aba0:	14c5803a 	cmpltu	r2,r2,r19
    aba4:	100490fa 	slli	r2,r2,3
    aba8:	003fbc06 	br	aa9c <__alt_data_end+0xfffeb69c>
    abac:	00804034 	movhi	r2,256
    abb0:	10bfffc4 	addi	r2,r2,-1
    abb4:	1180a636 	bltu	r2,r6,ae50 <__umoddi3+0x57c>
    abb8:	01000404 	movi	r4,16
    abbc:	003f5c06 	br	a930 <__alt_data_end+0xfffeb530>
    abc0:	3d0e983a 	sll	r7,r7,r20
    abc4:	34ead83a 	srl	r21,r6,r19
    abc8:	8cc6d83a 	srl	r3,r17,r19
    abcc:	8d10983a 	sll	r8,r17,r20
    abd0:	3d6ab03a 	or	r21,r7,r21
    abd4:	a82cd43a 	srli	r22,r21,16
    abd8:	84e2d83a 	srl	r17,r16,r19
    abdc:	1809883a 	mov	r4,r3
    abe0:	b00b883a 	mov	r5,r22
    abe4:	8a22b03a 	or	r17,r17,r8
    abe8:	3524983a 	sll	r18,r6,r20
    abec:	dc400015 	stw	r17,0(sp)
    abf0:	d8c00115 	stw	r3,4(sp)
    abf4:	000aff40 	call	aff4 <__umodsi3>
    abf8:	d8c00117 	ldw	r3,4(sp)
    abfc:	b00b883a 	mov	r5,r22
    ac00:	1039883a 	mov	fp,r2
    ac04:	1809883a 	mov	r4,r3
    ac08:	000af900 	call	af90 <__udivsi3>
    ac0c:	adffffcc 	andi	r23,r21,65535
    ac10:	100b883a 	mov	r5,r2
    ac14:	b809883a 	mov	r4,r23
    ac18:	1023883a 	mov	r17,r2
    ac1c:	000b04c0 	call	b04c <__mulsi3>
    ac20:	d9400017 	ldw	r5,0(sp)
    ac24:	e008943a 	slli	r4,fp,16
    ac28:	8520983a 	sll	r16,r16,r20
    ac2c:	2806d43a 	srli	r3,r5,16
    ac30:	1906b03a 	or	r3,r3,r4
    ac34:	1880042e 	bgeu	r3,r2,ac48 <__umoddi3+0x374>
    ac38:	1d47883a 	add	r3,r3,r21
    ac3c:	893fffc4 	addi	r4,r17,-1
    ac40:	1d40892e 	bgeu	r3,r21,ae68 <__umoddi3+0x594>
    ac44:	2023883a 	mov	r17,r4
    ac48:	18b9c83a 	sub	fp,r3,r2
    ac4c:	b00b883a 	mov	r5,r22
    ac50:	e009883a 	mov	r4,fp
    ac54:	000aff40 	call	aff4 <__umodsi3>
    ac58:	b00b883a 	mov	r5,r22
    ac5c:	e009883a 	mov	r4,fp
    ac60:	d8800215 	stw	r2,8(sp)
    ac64:	000af900 	call	af90 <__udivsi3>
    ac68:	100b883a 	mov	r5,r2
    ac6c:	b809883a 	mov	r4,r23
    ac70:	102d883a 	mov	r22,r2
    ac74:	000b04c0 	call	b04c <__mulsi3>
    ac78:	d9800217 	ldw	r6,8(sp)
    ac7c:	d8c00017 	ldw	r3,0(sp)
    ac80:	300c943a 	slli	r6,r6,16
    ac84:	1a3fffcc 	andi	r8,r3,65535
    ac88:	4190b03a 	or	r8,r8,r6
    ac8c:	4080042e 	bgeu	r8,r2,aca0 <__umoddi3+0x3cc>
    ac90:	4551883a 	add	r8,r8,r21
    ac94:	b0ffffc4 	addi	r3,r22,-1
    ac98:	45406f2e 	bgeu	r8,r21,ae58 <__umoddi3+0x584>
    ac9c:	182d883a 	mov	r22,r3
    aca0:	880e943a 	slli	r7,r17,16
    aca4:	9006d43a 	srli	r3,r18,16
    aca8:	91bfffcc 	andi	r6,r18,65535
    acac:	3dacb03a 	or	r22,r7,r22
    acb0:	b02ed43a 	srli	r23,r22,16
    acb4:	b5bfffcc 	andi	r22,r22,65535
    acb8:	300b883a 	mov	r5,r6
    acbc:	b009883a 	mov	r4,r22
    acc0:	40a3c83a 	sub	r17,r8,r2
    acc4:	d8c00115 	stw	r3,4(sp)
    acc8:	d9800215 	stw	r6,8(sp)
    accc:	000b04c0 	call	b04c <__mulsi3>
    acd0:	d9800217 	ldw	r6,8(sp)
    acd4:	b809883a 	mov	r4,r23
    acd8:	1039883a 	mov	fp,r2
    acdc:	300b883a 	mov	r5,r6
    ace0:	000b04c0 	call	b04c <__mulsi3>
    ace4:	d8c00117 	ldw	r3,4(sp)
    ace8:	b809883a 	mov	r4,r23
    acec:	d8800215 	stw	r2,8(sp)
    acf0:	180b883a 	mov	r5,r3
    acf4:	000b04c0 	call	b04c <__mulsi3>
    acf8:	d8c00117 	ldw	r3,4(sp)
    acfc:	b009883a 	mov	r4,r22
    ad00:	102f883a 	mov	r23,r2
    ad04:	180b883a 	mov	r5,r3
    ad08:	000b04c0 	call	b04c <__mulsi3>
    ad0c:	d9800217 	ldw	r6,8(sp)
    ad10:	e006d43a 	srli	r3,fp,16
    ad14:	1185883a 	add	r2,r2,r6
    ad18:	1885883a 	add	r2,r3,r2
    ad1c:	1180022e 	bgeu	r2,r6,ad28 <__umoddi3+0x454>
    ad20:	00c00074 	movhi	r3,1
    ad24:	b8ef883a 	add	r23,r23,r3
    ad28:	1006d43a 	srli	r3,r2,16
    ad2c:	1004943a 	slli	r2,r2,16
    ad30:	e73fffcc 	andi	fp,fp,65535
    ad34:	1dc7883a 	add	r3,r3,r23
    ad38:	1739883a 	add	fp,r2,fp
    ad3c:	88c03a36 	bltu	r17,r3,ae28 <__umoddi3+0x554>
    ad40:	88c05126 	beq	r17,r3,ae88 <__umoddi3+0x5b4>
    ad44:	88c9c83a 	sub	r4,r17,r3
    ad48:	e00f883a 	mov	r7,fp
    ad4c:	81cfc83a 	sub	r7,r16,r7
    ad50:	81c7803a 	cmpltu	r3,r16,r7
    ad54:	20c7c83a 	sub	r3,r4,r3
    ad58:	1cc4983a 	sll	r2,r3,r19
    ad5c:	3d0ed83a 	srl	r7,r7,r20
    ad60:	1d06d83a 	srl	r3,r3,r20
    ad64:	11c4b03a 	or	r2,r2,r7
    ad68:	003f7c06 	br	ab5c <__alt_data_end+0xfffeb75c>
    ad6c:	9ca6983a 	sll	r19,r19,r18
    ad70:	88f8d83a 	srl	fp,r17,r3
    ad74:	80c4d83a 	srl	r2,r16,r3
    ad78:	982cd43a 	srli	r22,r19,16
    ad7c:	8ca2983a 	sll	r17,r17,r18
    ad80:	e009883a 	mov	r4,fp
    ad84:	b00b883a 	mov	r5,r22
    ad88:	146ab03a 	or	r21,r2,r17
    ad8c:	000aff40 	call	aff4 <__umodsi3>
    ad90:	b00b883a 	mov	r5,r22
    ad94:	e009883a 	mov	r4,fp
    ad98:	1029883a 	mov	r20,r2
    ad9c:	9dffffcc 	andi	r23,r19,65535
    ada0:	000af900 	call	af90 <__udivsi3>
    ada4:	b809883a 	mov	r4,r23
    ada8:	100b883a 	mov	r5,r2
    adac:	000b04c0 	call	b04c <__mulsi3>
    adb0:	a008943a 	slli	r4,r20,16
    adb4:	a806d43a 	srli	r3,r21,16
    adb8:	84a8983a 	sll	r20,r16,r18
    adbc:	1906b03a 	or	r3,r3,r4
    adc0:	1880042e 	bgeu	r3,r2,add4 <__umoddi3+0x500>
    adc4:	1cc7883a 	add	r3,r3,r19
    adc8:	1cc00236 	bltu	r3,r19,add4 <__umoddi3+0x500>
    adcc:	1880012e 	bgeu	r3,r2,add4 <__umoddi3+0x500>
    add0:	1cc7883a 	add	r3,r3,r19
    add4:	18a3c83a 	sub	r17,r3,r2
    add8:	b00b883a 	mov	r5,r22
    addc:	8809883a 	mov	r4,r17
    ade0:	000aff40 	call	aff4 <__umodsi3>
    ade4:	b00b883a 	mov	r5,r22
    ade8:	8809883a 	mov	r4,r17
    adec:	1021883a 	mov	r16,r2
    adf0:	000af900 	call	af90 <__udivsi3>
    adf4:	100b883a 	mov	r5,r2
    adf8:	b809883a 	mov	r4,r23
    adfc:	8020943a 	slli	r16,r16,16
    ae00:	000b04c0 	call	b04c <__mulsi3>
    ae04:	a8ffffcc 	andi	r3,r21,65535
    ae08:	1c06b03a 	or	r3,r3,r16
    ae0c:	1880042e 	bgeu	r3,r2,ae20 <__umoddi3+0x54c>
    ae10:	1cc7883a 	add	r3,r3,r19
    ae14:	1cc00236 	bltu	r3,r19,ae20 <__umoddi3+0x54c>
    ae18:	1880012e 	bgeu	r3,r2,ae20 <__umoddi3+0x54c>
    ae1c:	1cc7883a 	add	r3,r3,r19
    ae20:	18a3c83a 	sub	r17,r3,r2
    ae24:	003f2906 	br	aacc <__alt_data_end+0xfffeb6cc>
    ae28:	e48fc83a 	sub	r7,fp,r18
    ae2c:	1d49c83a 	sub	r4,r3,r21
    ae30:	e1f9803a 	cmpltu	fp,fp,r7
    ae34:	2739c83a 	sub	fp,r4,fp
    ae38:	8f09c83a 	sub	r4,r17,fp
    ae3c:	003fc306 	br	ad4c <__alt_data_end+0xfffeb94c>
    ae40:	01000604 	movi	r4,24
    ae44:	003ef906 	br	aa2c <__alt_data_end+0xfffeb62c>
    ae48:	00800604 	movi	r2,24
    ae4c:	003f1306 	br	aa9c <__alt_data_end+0xfffeb69c>
    ae50:	01000604 	movi	r4,24
    ae54:	003eb606 	br	a930 <__alt_data_end+0xfffeb530>
    ae58:	40bf902e 	bgeu	r8,r2,ac9c <__alt_data_end+0xfffeb89c>
    ae5c:	b5bfff84 	addi	r22,r22,-2
    ae60:	4551883a 	add	r8,r8,r21
    ae64:	003f8e06 	br	aca0 <__alt_data_end+0xfffeb8a0>
    ae68:	18bf762e 	bgeu	r3,r2,ac44 <__alt_data_end+0xfffeb844>
    ae6c:	8c7fff84 	addi	r17,r17,-2
    ae70:	1d47883a 	add	r3,r3,r21
    ae74:	003f7406 	br	ac48 <__alt_data_end+0xfffeb848>
    ae78:	1cc7883a 	add	r3,r3,r19
    ae7c:	003ecd06 	br	a9b4 <__alt_data_end+0xfffeb5b4>
    ae80:	8005883a 	mov	r2,r16
    ae84:	003ef806 	br	aa68 <__alt_data_end+0xfffeb668>
    ae88:	873fe736 	bltu	r16,fp,ae28 <__alt_data_end+0xfffeba28>
    ae8c:	e00f883a 	mov	r7,fp
    ae90:	0009883a 	mov	r4,zero
    ae94:	003fad06 	br	ad4c <__alt_data_end+0xfffeb94c>

0000ae98 <__divsi3>:
    ae98:	20001b16 	blt	r4,zero,af08 <__divsi3+0x70>
    ae9c:	000f883a 	mov	r7,zero
    aea0:	28001616 	blt	r5,zero,aefc <__divsi3+0x64>
    aea4:	200d883a 	mov	r6,r4
    aea8:	29001a2e 	bgeu	r5,r4,af14 <__divsi3+0x7c>
    aeac:	00800804 	movi	r2,32
    aeb0:	00c00044 	movi	r3,1
    aeb4:	00000106 	br	aebc <__divsi3+0x24>
    aeb8:	10000d26 	beq	r2,zero,aef0 <__divsi3+0x58>
    aebc:	294b883a 	add	r5,r5,r5
    aec0:	10bfffc4 	addi	r2,r2,-1
    aec4:	18c7883a 	add	r3,r3,r3
    aec8:	293ffb36 	bltu	r5,r4,aeb8 <__alt_data_end+0xfffebab8>
    aecc:	0005883a 	mov	r2,zero
    aed0:	18000726 	beq	r3,zero,aef0 <__divsi3+0x58>
    aed4:	0005883a 	mov	r2,zero
    aed8:	31400236 	bltu	r6,r5,aee4 <__divsi3+0x4c>
    aedc:	314dc83a 	sub	r6,r6,r5
    aee0:	10c4b03a 	or	r2,r2,r3
    aee4:	1806d07a 	srli	r3,r3,1
    aee8:	280ad07a 	srli	r5,r5,1
    aeec:	183ffa1e 	bne	r3,zero,aed8 <__alt_data_end+0xfffebad8>
    aef0:	38000126 	beq	r7,zero,aef8 <__divsi3+0x60>
    aef4:	0085c83a 	sub	r2,zero,r2
    aef8:	f800283a 	ret
    aefc:	014bc83a 	sub	r5,zero,r5
    af00:	39c0005c 	xori	r7,r7,1
    af04:	003fe706 	br	aea4 <__alt_data_end+0xfffebaa4>
    af08:	0109c83a 	sub	r4,zero,r4
    af0c:	01c00044 	movi	r7,1
    af10:	003fe306 	br	aea0 <__alt_data_end+0xfffebaa0>
    af14:	00c00044 	movi	r3,1
    af18:	003fee06 	br	aed4 <__alt_data_end+0xfffebad4>

0000af1c <__modsi3>:
    af1c:	20001716 	blt	r4,zero,af7c <__modsi3+0x60>
    af20:	000f883a 	mov	r7,zero
    af24:	2005883a 	mov	r2,r4
    af28:	28001216 	blt	r5,zero,af74 <__modsi3+0x58>
    af2c:	2900162e 	bgeu	r5,r4,af88 <__modsi3+0x6c>
    af30:	01800804 	movi	r6,32
    af34:	00c00044 	movi	r3,1
    af38:	00000106 	br	af40 <__modsi3+0x24>
    af3c:	30000a26 	beq	r6,zero,af68 <__modsi3+0x4c>
    af40:	294b883a 	add	r5,r5,r5
    af44:	31bfffc4 	addi	r6,r6,-1
    af48:	18c7883a 	add	r3,r3,r3
    af4c:	293ffb36 	bltu	r5,r4,af3c <__alt_data_end+0xfffebb3c>
    af50:	18000526 	beq	r3,zero,af68 <__modsi3+0x4c>
    af54:	1806d07a 	srli	r3,r3,1
    af58:	11400136 	bltu	r2,r5,af60 <__modsi3+0x44>
    af5c:	1145c83a 	sub	r2,r2,r5
    af60:	280ad07a 	srli	r5,r5,1
    af64:	183ffb1e 	bne	r3,zero,af54 <__alt_data_end+0xfffebb54>
    af68:	38000126 	beq	r7,zero,af70 <__modsi3+0x54>
    af6c:	0085c83a 	sub	r2,zero,r2
    af70:	f800283a 	ret
    af74:	014bc83a 	sub	r5,zero,r5
    af78:	003fec06 	br	af2c <__alt_data_end+0xfffebb2c>
    af7c:	0109c83a 	sub	r4,zero,r4
    af80:	01c00044 	movi	r7,1
    af84:	003fe706 	br	af24 <__alt_data_end+0xfffebb24>
    af88:	00c00044 	movi	r3,1
    af8c:	003ff106 	br	af54 <__alt_data_end+0xfffebb54>

0000af90 <__udivsi3>:
    af90:	200d883a 	mov	r6,r4
    af94:	2900152e 	bgeu	r5,r4,afec <__udivsi3+0x5c>
    af98:	28001416 	blt	r5,zero,afec <__udivsi3+0x5c>
    af9c:	00800804 	movi	r2,32
    afa0:	00c00044 	movi	r3,1
    afa4:	00000206 	br	afb0 <__udivsi3+0x20>
    afa8:	10000e26 	beq	r2,zero,afe4 <__udivsi3+0x54>
    afac:	28000516 	blt	r5,zero,afc4 <__udivsi3+0x34>
    afb0:	294b883a 	add	r5,r5,r5
    afb4:	10bfffc4 	addi	r2,r2,-1
    afb8:	18c7883a 	add	r3,r3,r3
    afbc:	293ffa36 	bltu	r5,r4,afa8 <__alt_data_end+0xfffebba8>
    afc0:	18000826 	beq	r3,zero,afe4 <__udivsi3+0x54>
    afc4:	0005883a 	mov	r2,zero
    afc8:	31400236 	bltu	r6,r5,afd4 <__udivsi3+0x44>
    afcc:	314dc83a 	sub	r6,r6,r5
    afd0:	10c4b03a 	or	r2,r2,r3
    afd4:	1806d07a 	srli	r3,r3,1
    afd8:	280ad07a 	srli	r5,r5,1
    afdc:	183ffa1e 	bne	r3,zero,afc8 <__alt_data_end+0xfffebbc8>
    afe0:	f800283a 	ret
    afe4:	0005883a 	mov	r2,zero
    afe8:	f800283a 	ret
    afec:	00c00044 	movi	r3,1
    aff0:	003ff406 	br	afc4 <__alt_data_end+0xfffebbc4>

0000aff4 <__umodsi3>:
    aff4:	2005883a 	mov	r2,r4
    aff8:	2900122e 	bgeu	r5,r4,b044 <__umodsi3+0x50>
    affc:	28001116 	blt	r5,zero,b044 <__umodsi3+0x50>
    b000:	01800804 	movi	r6,32
    b004:	00c00044 	movi	r3,1
    b008:	00000206 	br	b014 <__umodsi3+0x20>
    b00c:	30000c26 	beq	r6,zero,b040 <__umodsi3+0x4c>
    b010:	28000516 	blt	r5,zero,b028 <__umodsi3+0x34>
    b014:	294b883a 	add	r5,r5,r5
    b018:	31bfffc4 	addi	r6,r6,-1
    b01c:	18c7883a 	add	r3,r3,r3
    b020:	293ffa36 	bltu	r5,r4,b00c <__alt_data_end+0xfffebc0c>
    b024:	18000626 	beq	r3,zero,b040 <__umodsi3+0x4c>
    b028:	1806d07a 	srli	r3,r3,1
    b02c:	11400136 	bltu	r2,r5,b034 <__umodsi3+0x40>
    b030:	1145c83a 	sub	r2,r2,r5
    b034:	280ad07a 	srli	r5,r5,1
    b038:	183ffb1e 	bne	r3,zero,b028 <__alt_data_end+0xfffebc28>
    b03c:	f800283a 	ret
    b040:	f800283a 	ret
    b044:	00c00044 	movi	r3,1
    b048:	003ff706 	br	b028 <__alt_data_end+0xfffebc28>

0000b04c <__mulsi3>:
    b04c:	0005883a 	mov	r2,zero
    b050:	20000726 	beq	r4,zero,b070 <__mulsi3+0x24>
    b054:	20c0004c 	andi	r3,r4,1
    b058:	2008d07a 	srli	r4,r4,1
    b05c:	18000126 	beq	r3,zero,b064 <__mulsi3+0x18>
    b060:	1145883a 	add	r2,r2,r5
    b064:	294b883a 	add	r5,r5,r5
    b068:	203ffa1e 	bne	r4,zero,b054 <__alt_data_end+0xfffebc54>
    b06c:	f800283a 	ret
    b070:	f800283a 	ret

0000b074 <__adddf3>:
    b074:	02c00434 	movhi	r11,16
    b078:	5affffc4 	addi	r11,r11,-1
    b07c:	2806d7fa 	srli	r3,r5,31
    b080:	2ad4703a 	and	r10,r5,r11
    b084:	3ad2703a 	and	r9,r7,r11
    b088:	3804d53a 	srli	r2,r7,20
    b08c:	3018d77a 	srli	r12,r6,29
    b090:	280ad53a 	srli	r5,r5,20
    b094:	501490fa 	slli	r10,r10,3
    b098:	2010d77a 	srli	r8,r4,29
    b09c:	481290fa 	slli	r9,r9,3
    b0a0:	380ed7fa 	srli	r7,r7,31
    b0a4:	defffb04 	addi	sp,sp,-20
    b0a8:	dc800215 	stw	r18,8(sp)
    b0ac:	dc400115 	stw	r17,4(sp)
    b0b0:	dc000015 	stw	r16,0(sp)
    b0b4:	dfc00415 	stw	ra,16(sp)
    b0b8:	dcc00315 	stw	r19,12(sp)
    b0bc:	1c803fcc 	andi	r18,r3,255
    b0c0:	2c01ffcc 	andi	r16,r5,2047
    b0c4:	5210b03a 	or	r8,r10,r8
    b0c8:	202290fa 	slli	r17,r4,3
    b0cc:	1081ffcc 	andi	r2,r2,2047
    b0d0:	4b12b03a 	or	r9,r9,r12
    b0d4:	300c90fa 	slli	r6,r6,3
    b0d8:	91c07526 	beq	r18,r7,b2b0 <__adddf3+0x23c>
    b0dc:	8087c83a 	sub	r3,r16,r2
    b0e0:	00c0ab0e 	bge	zero,r3,b390 <__adddf3+0x31c>
    b0e4:	10002a1e 	bne	r2,zero,b190 <__adddf3+0x11c>
    b0e8:	4984b03a 	or	r2,r9,r6
    b0ec:	1000961e 	bne	r2,zero,b348 <__adddf3+0x2d4>
    b0f0:	888001cc 	andi	r2,r17,7
    b0f4:	10000726 	beq	r2,zero,b114 <__adddf3+0xa0>
    b0f8:	888003cc 	andi	r2,r17,15
    b0fc:	00c00104 	movi	r3,4
    b100:	10c00426 	beq	r2,r3,b114 <__adddf3+0xa0>
    b104:	88c7883a 	add	r3,r17,r3
    b108:	1c63803a 	cmpltu	r17,r3,r17
    b10c:	4451883a 	add	r8,r8,r17
    b110:	1823883a 	mov	r17,r3
    b114:	4080202c 	andhi	r2,r8,128
    b118:	10005926 	beq	r2,zero,b280 <__adddf3+0x20c>
    b11c:	84000044 	addi	r16,r16,1
    b120:	0081ffc4 	movi	r2,2047
    b124:	8080ba26 	beq	r16,r2,b410 <__adddf3+0x39c>
    b128:	00bfe034 	movhi	r2,65408
    b12c:	10bfffc4 	addi	r2,r2,-1
    b130:	4090703a 	and	r8,r8,r2
    b134:	4004977a 	slli	r2,r8,29
    b138:	4010927a 	slli	r8,r8,9
    b13c:	8822d0fa 	srli	r17,r17,3
    b140:	8401ffcc 	andi	r16,r16,2047
    b144:	4010d33a 	srli	r8,r8,12
    b148:	9007883a 	mov	r3,r18
    b14c:	1444b03a 	or	r2,r2,r17
    b150:	8401ffcc 	andi	r16,r16,2047
    b154:	8020953a 	slli	r16,r16,20
    b158:	18c03fcc 	andi	r3,r3,255
    b15c:	01000434 	movhi	r4,16
    b160:	213fffc4 	addi	r4,r4,-1
    b164:	180697fa 	slli	r3,r3,31
    b168:	4110703a 	and	r8,r8,r4
    b16c:	4410b03a 	or	r8,r8,r16
    b170:	40c6b03a 	or	r3,r8,r3
    b174:	dfc00417 	ldw	ra,16(sp)
    b178:	dcc00317 	ldw	r19,12(sp)
    b17c:	dc800217 	ldw	r18,8(sp)
    b180:	dc400117 	ldw	r17,4(sp)
    b184:	dc000017 	ldw	r16,0(sp)
    b188:	dec00504 	addi	sp,sp,20
    b18c:	f800283a 	ret
    b190:	0081ffc4 	movi	r2,2047
    b194:	80bfd626 	beq	r16,r2,b0f0 <__alt_data_end+0xfffebcf0>
    b198:	4a402034 	orhi	r9,r9,128
    b19c:	00800e04 	movi	r2,56
    b1a0:	10c09f16 	blt	r2,r3,b420 <__adddf3+0x3ac>
    b1a4:	008007c4 	movi	r2,31
    b1a8:	10c0c216 	blt	r2,r3,b4b4 <__adddf3+0x440>
    b1ac:	00800804 	movi	r2,32
    b1b0:	10c5c83a 	sub	r2,r2,r3
    b1b4:	488a983a 	sll	r5,r9,r2
    b1b8:	30c8d83a 	srl	r4,r6,r3
    b1bc:	3084983a 	sll	r2,r6,r2
    b1c0:	48c6d83a 	srl	r3,r9,r3
    b1c4:	290cb03a 	or	r6,r5,r4
    b1c8:	1004c03a 	cmpne	r2,r2,zero
    b1cc:	308cb03a 	or	r6,r6,r2
    b1d0:	898dc83a 	sub	r6,r17,r6
    b1d4:	89a3803a 	cmpltu	r17,r17,r6
    b1d8:	40d1c83a 	sub	r8,r8,r3
    b1dc:	4451c83a 	sub	r8,r8,r17
    b1e0:	3023883a 	mov	r17,r6
    b1e4:	4080202c 	andhi	r2,r8,128
    b1e8:	10002326 	beq	r2,zero,b278 <__adddf3+0x204>
    b1ec:	04c02034 	movhi	r19,128
    b1f0:	9cffffc4 	addi	r19,r19,-1
    b1f4:	44e6703a 	and	r19,r8,r19
    b1f8:	98007626 	beq	r19,zero,b3d4 <__adddf3+0x360>
    b1fc:	9809883a 	mov	r4,r19
    b200:	000d8b40 	call	d8b4 <__clzsi2>
    b204:	10fffe04 	addi	r3,r2,-8
    b208:	010007c4 	movi	r4,31
    b20c:	20c07716 	blt	r4,r3,b3ec <__adddf3+0x378>
    b210:	00800804 	movi	r2,32
    b214:	10c5c83a 	sub	r2,r2,r3
    b218:	8884d83a 	srl	r2,r17,r2
    b21c:	98d0983a 	sll	r8,r19,r3
    b220:	88e2983a 	sll	r17,r17,r3
    b224:	1204b03a 	or	r2,r2,r8
    b228:	1c007416 	blt	r3,r16,b3fc <__adddf3+0x388>
    b22c:	1c21c83a 	sub	r16,r3,r16
    b230:	82000044 	addi	r8,r16,1
    b234:	00c007c4 	movi	r3,31
    b238:	1a009116 	blt	r3,r8,b480 <__adddf3+0x40c>
    b23c:	00c00804 	movi	r3,32
    b240:	1a07c83a 	sub	r3,r3,r8
    b244:	8a08d83a 	srl	r4,r17,r8
    b248:	88e2983a 	sll	r17,r17,r3
    b24c:	10c6983a 	sll	r3,r2,r3
    b250:	1210d83a 	srl	r8,r2,r8
    b254:	8804c03a 	cmpne	r2,r17,zero
    b258:	1906b03a 	or	r3,r3,r4
    b25c:	18a2b03a 	or	r17,r3,r2
    b260:	0021883a 	mov	r16,zero
    b264:	003fa206 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b268:	1890b03a 	or	r8,r3,r2
    b26c:	40017d26 	beq	r8,zero,b864 <__adddf3+0x7f0>
    b270:	1011883a 	mov	r8,r2
    b274:	1823883a 	mov	r17,r3
    b278:	888001cc 	andi	r2,r17,7
    b27c:	103f9e1e 	bne	r2,zero,b0f8 <__alt_data_end+0xfffebcf8>
    b280:	4004977a 	slli	r2,r8,29
    b284:	8822d0fa 	srli	r17,r17,3
    b288:	4010d0fa 	srli	r8,r8,3
    b28c:	9007883a 	mov	r3,r18
    b290:	1444b03a 	or	r2,r2,r17
    b294:	0101ffc4 	movi	r4,2047
    b298:	81002426 	beq	r16,r4,b32c <__adddf3+0x2b8>
    b29c:	8120703a 	and	r16,r16,r4
    b2a0:	01000434 	movhi	r4,16
    b2a4:	213fffc4 	addi	r4,r4,-1
    b2a8:	4110703a 	and	r8,r8,r4
    b2ac:	003fa806 	br	b150 <__alt_data_end+0xfffebd50>
    b2b0:	8089c83a 	sub	r4,r16,r2
    b2b4:	01005e0e 	bge	zero,r4,b430 <__adddf3+0x3bc>
    b2b8:	10002b26 	beq	r2,zero,b368 <__adddf3+0x2f4>
    b2bc:	0081ffc4 	movi	r2,2047
    b2c0:	80bf8b26 	beq	r16,r2,b0f0 <__alt_data_end+0xfffebcf0>
    b2c4:	4a402034 	orhi	r9,r9,128
    b2c8:	00800e04 	movi	r2,56
    b2cc:	1100a40e 	bge	r2,r4,b560 <__adddf3+0x4ec>
    b2d0:	498cb03a 	or	r6,r9,r6
    b2d4:	300ac03a 	cmpne	r5,r6,zero
    b2d8:	0013883a 	mov	r9,zero
    b2dc:	2c4b883a 	add	r5,r5,r17
    b2e0:	2c63803a 	cmpltu	r17,r5,r17
    b2e4:	4a11883a 	add	r8,r9,r8
    b2e8:	8a11883a 	add	r8,r17,r8
    b2ec:	2823883a 	mov	r17,r5
    b2f0:	4080202c 	andhi	r2,r8,128
    b2f4:	103fe026 	beq	r2,zero,b278 <__alt_data_end+0xfffebe78>
    b2f8:	84000044 	addi	r16,r16,1
    b2fc:	0081ffc4 	movi	r2,2047
    b300:	8080d226 	beq	r16,r2,b64c <__adddf3+0x5d8>
    b304:	00bfe034 	movhi	r2,65408
    b308:	10bfffc4 	addi	r2,r2,-1
    b30c:	4090703a 	and	r8,r8,r2
    b310:	880ad07a 	srli	r5,r17,1
    b314:	400897fa 	slli	r4,r8,31
    b318:	88c0004c 	andi	r3,r17,1
    b31c:	28e2b03a 	or	r17,r5,r3
    b320:	4010d07a 	srli	r8,r8,1
    b324:	2462b03a 	or	r17,r4,r17
    b328:	003f7106 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b32c:	4088b03a 	or	r4,r8,r2
    b330:	20014526 	beq	r4,zero,b848 <__adddf3+0x7d4>
    b334:	01000434 	movhi	r4,16
    b338:	42000234 	orhi	r8,r8,8
    b33c:	213fffc4 	addi	r4,r4,-1
    b340:	4110703a 	and	r8,r8,r4
    b344:	003f8206 	br	b150 <__alt_data_end+0xfffebd50>
    b348:	18ffffc4 	addi	r3,r3,-1
    b34c:	1800491e 	bne	r3,zero,b474 <__adddf3+0x400>
    b350:	898bc83a 	sub	r5,r17,r6
    b354:	8963803a 	cmpltu	r17,r17,r5
    b358:	4251c83a 	sub	r8,r8,r9
    b35c:	4451c83a 	sub	r8,r8,r17
    b360:	2823883a 	mov	r17,r5
    b364:	003f9f06 	br	b1e4 <__alt_data_end+0xfffebde4>
    b368:	4984b03a 	or	r2,r9,r6
    b36c:	103f6026 	beq	r2,zero,b0f0 <__alt_data_end+0xfffebcf0>
    b370:	213fffc4 	addi	r4,r4,-1
    b374:	2000931e 	bne	r4,zero,b5c4 <__adddf3+0x550>
    b378:	898d883a 	add	r6,r17,r6
    b37c:	3463803a 	cmpltu	r17,r6,r17
    b380:	4251883a 	add	r8,r8,r9
    b384:	8a11883a 	add	r8,r17,r8
    b388:	3023883a 	mov	r17,r6
    b38c:	003fd806 	br	b2f0 <__alt_data_end+0xfffebef0>
    b390:	1800541e 	bne	r3,zero,b4e4 <__adddf3+0x470>
    b394:	80800044 	addi	r2,r16,1
    b398:	1081ffcc 	andi	r2,r2,2047
    b39c:	00c00044 	movi	r3,1
    b3a0:	1880a00e 	bge	r3,r2,b624 <__adddf3+0x5b0>
    b3a4:	8989c83a 	sub	r4,r17,r6
    b3a8:	8905803a 	cmpltu	r2,r17,r4
    b3ac:	4267c83a 	sub	r19,r8,r9
    b3b0:	98a7c83a 	sub	r19,r19,r2
    b3b4:	9880202c 	andhi	r2,r19,128
    b3b8:	10006326 	beq	r2,zero,b548 <__adddf3+0x4d4>
    b3bc:	3463c83a 	sub	r17,r6,r17
    b3c0:	4a07c83a 	sub	r3,r9,r8
    b3c4:	344d803a 	cmpltu	r6,r6,r17
    b3c8:	19a7c83a 	sub	r19,r3,r6
    b3cc:	3825883a 	mov	r18,r7
    b3d0:	983f8a1e 	bne	r19,zero,b1fc <__alt_data_end+0xfffebdfc>
    b3d4:	8809883a 	mov	r4,r17
    b3d8:	000d8b40 	call	d8b4 <__clzsi2>
    b3dc:	10800804 	addi	r2,r2,32
    b3e0:	10fffe04 	addi	r3,r2,-8
    b3e4:	010007c4 	movi	r4,31
    b3e8:	20ff890e 	bge	r4,r3,b210 <__alt_data_end+0xfffebe10>
    b3ec:	10bff604 	addi	r2,r2,-40
    b3f0:	8884983a 	sll	r2,r17,r2
    b3f4:	0023883a 	mov	r17,zero
    b3f8:	1c3f8c0e 	bge	r3,r16,b22c <__alt_data_end+0xfffebe2c>
    b3fc:	023fe034 	movhi	r8,65408
    b400:	423fffc4 	addi	r8,r8,-1
    b404:	80e1c83a 	sub	r16,r16,r3
    b408:	1210703a 	and	r8,r2,r8
    b40c:	003f3806 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b410:	9007883a 	mov	r3,r18
    b414:	0011883a 	mov	r8,zero
    b418:	0005883a 	mov	r2,zero
    b41c:	003f4c06 	br	b150 <__alt_data_end+0xfffebd50>
    b420:	498cb03a 	or	r6,r9,r6
    b424:	300cc03a 	cmpne	r6,r6,zero
    b428:	0007883a 	mov	r3,zero
    b42c:	003f6806 	br	b1d0 <__alt_data_end+0xfffebdd0>
    b430:	20009c1e 	bne	r4,zero,b6a4 <__adddf3+0x630>
    b434:	80800044 	addi	r2,r16,1
    b438:	1141ffcc 	andi	r5,r2,2047
    b43c:	01000044 	movi	r4,1
    b440:	2140670e 	bge	r4,r5,b5e0 <__adddf3+0x56c>
    b444:	0101ffc4 	movi	r4,2047
    b448:	11007f26 	beq	r2,r4,b648 <__adddf3+0x5d4>
    b44c:	898d883a 	add	r6,r17,r6
    b450:	4247883a 	add	r3,r8,r9
    b454:	3451803a 	cmpltu	r8,r6,r17
    b458:	40d1883a 	add	r8,r8,r3
    b45c:	402297fa 	slli	r17,r8,31
    b460:	300cd07a 	srli	r6,r6,1
    b464:	4010d07a 	srli	r8,r8,1
    b468:	1021883a 	mov	r16,r2
    b46c:	89a2b03a 	or	r17,r17,r6
    b470:	003f1f06 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b474:	0081ffc4 	movi	r2,2047
    b478:	80bf481e 	bne	r16,r2,b19c <__alt_data_end+0xfffebd9c>
    b47c:	003f1c06 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b480:	843ff844 	addi	r16,r16,-31
    b484:	01000804 	movi	r4,32
    b488:	1406d83a 	srl	r3,r2,r16
    b48c:	41005026 	beq	r8,r4,b5d0 <__adddf3+0x55c>
    b490:	01001004 	movi	r4,64
    b494:	2211c83a 	sub	r8,r4,r8
    b498:	1204983a 	sll	r2,r2,r8
    b49c:	88a2b03a 	or	r17,r17,r2
    b4a0:	8822c03a 	cmpne	r17,r17,zero
    b4a4:	1c62b03a 	or	r17,r3,r17
    b4a8:	0011883a 	mov	r8,zero
    b4ac:	0021883a 	mov	r16,zero
    b4b0:	003f7106 	br	b278 <__alt_data_end+0xfffebe78>
    b4b4:	193ff804 	addi	r4,r3,-32
    b4b8:	00800804 	movi	r2,32
    b4bc:	4908d83a 	srl	r4,r9,r4
    b4c0:	18804526 	beq	r3,r2,b5d8 <__adddf3+0x564>
    b4c4:	00801004 	movi	r2,64
    b4c8:	10c5c83a 	sub	r2,r2,r3
    b4cc:	4886983a 	sll	r3,r9,r2
    b4d0:	198cb03a 	or	r6,r3,r6
    b4d4:	300cc03a 	cmpne	r6,r6,zero
    b4d8:	218cb03a 	or	r6,r4,r6
    b4dc:	0007883a 	mov	r3,zero
    b4e0:	003f3b06 	br	b1d0 <__alt_data_end+0xfffebdd0>
    b4e4:	80002a26 	beq	r16,zero,b590 <__adddf3+0x51c>
    b4e8:	0101ffc4 	movi	r4,2047
    b4ec:	11006826 	beq	r2,r4,b690 <__adddf3+0x61c>
    b4f0:	00c7c83a 	sub	r3,zero,r3
    b4f4:	42002034 	orhi	r8,r8,128
    b4f8:	01000e04 	movi	r4,56
    b4fc:	20c07c16 	blt	r4,r3,b6f0 <__adddf3+0x67c>
    b500:	010007c4 	movi	r4,31
    b504:	20c0da16 	blt	r4,r3,b870 <__adddf3+0x7fc>
    b508:	01000804 	movi	r4,32
    b50c:	20c9c83a 	sub	r4,r4,r3
    b510:	4114983a 	sll	r10,r8,r4
    b514:	88cad83a 	srl	r5,r17,r3
    b518:	8908983a 	sll	r4,r17,r4
    b51c:	40c6d83a 	srl	r3,r8,r3
    b520:	5162b03a 	or	r17,r10,r5
    b524:	2008c03a 	cmpne	r4,r4,zero
    b528:	8922b03a 	or	r17,r17,r4
    b52c:	3463c83a 	sub	r17,r6,r17
    b530:	48c7c83a 	sub	r3,r9,r3
    b534:	344d803a 	cmpltu	r6,r6,r17
    b538:	1991c83a 	sub	r8,r3,r6
    b53c:	1021883a 	mov	r16,r2
    b540:	3825883a 	mov	r18,r7
    b544:	003f2706 	br	b1e4 <__alt_data_end+0xfffebde4>
    b548:	24d0b03a 	or	r8,r4,r19
    b54c:	40001b1e 	bne	r8,zero,b5bc <__adddf3+0x548>
    b550:	0005883a 	mov	r2,zero
    b554:	0007883a 	mov	r3,zero
    b558:	0021883a 	mov	r16,zero
    b55c:	003f4d06 	br	b294 <__alt_data_end+0xfffebe94>
    b560:	008007c4 	movi	r2,31
    b564:	11003c16 	blt	r2,r4,b658 <__adddf3+0x5e4>
    b568:	00800804 	movi	r2,32
    b56c:	1105c83a 	sub	r2,r2,r4
    b570:	488e983a 	sll	r7,r9,r2
    b574:	310ad83a 	srl	r5,r6,r4
    b578:	3084983a 	sll	r2,r6,r2
    b57c:	4912d83a 	srl	r9,r9,r4
    b580:	394ab03a 	or	r5,r7,r5
    b584:	1004c03a 	cmpne	r2,r2,zero
    b588:	288ab03a 	or	r5,r5,r2
    b58c:	003f5306 	br	b2dc <__alt_data_end+0xfffebedc>
    b590:	4448b03a 	or	r4,r8,r17
    b594:	20003e26 	beq	r4,zero,b690 <__adddf3+0x61c>
    b598:	00c6303a 	nor	r3,zero,r3
    b59c:	18003a1e 	bne	r3,zero,b688 <__adddf3+0x614>
    b5a0:	3463c83a 	sub	r17,r6,r17
    b5a4:	4a07c83a 	sub	r3,r9,r8
    b5a8:	344d803a 	cmpltu	r6,r6,r17
    b5ac:	1991c83a 	sub	r8,r3,r6
    b5b0:	1021883a 	mov	r16,r2
    b5b4:	3825883a 	mov	r18,r7
    b5b8:	003f0a06 	br	b1e4 <__alt_data_end+0xfffebde4>
    b5bc:	2023883a 	mov	r17,r4
    b5c0:	003f0d06 	br	b1f8 <__alt_data_end+0xfffebdf8>
    b5c4:	0081ffc4 	movi	r2,2047
    b5c8:	80bf3f1e 	bne	r16,r2,b2c8 <__alt_data_end+0xfffebec8>
    b5cc:	003ec806 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b5d0:	0005883a 	mov	r2,zero
    b5d4:	003fb106 	br	b49c <__alt_data_end+0xfffec09c>
    b5d8:	0007883a 	mov	r3,zero
    b5dc:	003fbc06 	br	b4d0 <__alt_data_end+0xfffec0d0>
    b5e0:	4444b03a 	or	r2,r8,r17
    b5e4:	8000871e 	bne	r16,zero,b804 <__adddf3+0x790>
    b5e8:	1000ba26 	beq	r2,zero,b8d4 <__adddf3+0x860>
    b5ec:	4984b03a 	or	r2,r9,r6
    b5f0:	103ebf26 	beq	r2,zero,b0f0 <__alt_data_end+0xfffebcf0>
    b5f4:	8985883a 	add	r2,r17,r6
    b5f8:	4247883a 	add	r3,r8,r9
    b5fc:	1451803a 	cmpltu	r8,r2,r17
    b600:	40d1883a 	add	r8,r8,r3
    b604:	40c0202c 	andhi	r3,r8,128
    b608:	1023883a 	mov	r17,r2
    b60c:	183f1a26 	beq	r3,zero,b278 <__alt_data_end+0xfffebe78>
    b610:	00bfe034 	movhi	r2,65408
    b614:	10bfffc4 	addi	r2,r2,-1
    b618:	2021883a 	mov	r16,r4
    b61c:	4090703a 	and	r8,r8,r2
    b620:	003eb306 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b624:	4444b03a 	or	r2,r8,r17
    b628:	8000291e 	bne	r16,zero,b6d0 <__adddf3+0x65c>
    b62c:	10004b1e 	bne	r2,zero,b75c <__adddf3+0x6e8>
    b630:	4990b03a 	or	r8,r9,r6
    b634:	40008b26 	beq	r8,zero,b864 <__adddf3+0x7f0>
    b638:	4811883a 	mov	r8,r9
    b63c:	3023883a 	mov	r17,r6
    b640:	3825883a 	mov	r18,r7
    b644:	003eaa06 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b648:	1021883a 	mov	r16,r2
    b64c:	0011883a 	mov	r8,zero
    b650:	0005883a 	mov	r2,zero
    b654:	003f0f06 	br	b294 <__alt_data_end+0xfffebe94>
    b658:	217ff804 	addi	r5,r4,-32
    b65c:	00800804 	movi	r2,32
    b660:	494ad83a 	srl	r5,r9,r5
    b664:	20807d26 	beq	r4,r2,b85c <__adddf3+0x7e8>
    b668:	00801004 	movi	r2,64
    b66c:	1109c83a 	sub	r4,r2,r4
    b670:	4912983a 	sll	r9,r9,r4
    b674:	498cb03a 	or	r6,r9,r6
    b678:	300cc03a 	cmpne	r6,r6,zero
    b67c:	298ab03a 	or	r5,r5,r6
    b680:	0013883a 	mov	r9,zero
    b684:	003f1506 	br	b2dc <__alt_data_end+0xfffebedc>
    b688:	0101ffc4 	movi	r4,2047
    b68c:	113f9a1e 	bne	r2,r4,b4f8 <__alt_data_end+0xfffec0f8>
    b690:	4811883a 	mov	r8,r9
    b694:	3023883a 	mov	r17,r6
    b698:	1021883a 	mov	r16,r2
    b69c:	3825883a 	mov	r18,r7
    b6a0:	003e9306 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b6a4:	8000161e 	bne	r16,zero,b700 <__adddf3+0x68c>
    b6a8:	444ab03a 	or	r5,r8,r17
    b6ac:	28005126 	beq	r5,zero,b7f4 <__adddf3+0x780>
    b6b0:	0108303a 	nor	r4,zero,r4
    b6b4:	20004d1e 	bne	r4,zero,b7ec <__adddf3+0x778>
    b6b8:	89a3883a 	add	r17,r17,r6
    b6bc:	4253883a 	add	r9,r8,r9
    b6c0:	898d803a 	cmpltu	r6,r17,r6
    b6c4:	3251883a 	add	r8,r6,r9
    b6c8:	1021883a 	mov	r16,r2
    b6cc:	003f0806 	br	b2f0 <__alt_data_end+0xfffebef0>
    b6d0:	1000301e 	bne	r2,zero,b794 <__adddf3+0x720>
    b6d4:	4984b03a 	or	r2,r9,r6
    b6d8:	10007126 	beq	r2,zero,b8a0 <__adddf3+0x82c>
    b6dc:	4811883a 	mov	r8,r9
    b6e0:	3023883a 	mov	r17,r6
    b6e4:	3825883a 	mov	r18,r7
    b6e8:	0401ffc4 	movi	r16,2047
    b6ec:	003e8006 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b6f0:	4462b03a 	or	r17,r8,r17
    b6f4:	8822c03a 	cmpne	r17,r17,zero
    b6f8:	0007883a 	mov	r3,zero
    b6fc:	003f8b06 	br	b52c <__alt_data_end+0xfffec12c>
    b700:	0141ffc4 	movi	r5,2047
    b704:	11403b26 	beq	r2,r5,b7f4 <__adddf3+0x780>
    b708:	0109c83a 	sub	r4,zero,r4
    b70c:	42002034 	orhi	r8,r8,128
    b710:	01400e04 	movi	r5,56
    b714:	29006716 	blt	r5,r4,b8b4 <__adddf3+0x840>
    b718:	014007c4 	movi	r5,31
    b71c:	29007016 	blt	r5,r4,b8e0 <__adddf3+0x86c>
    b720:	01400804 	movi	r5,32
    b724:	290bc83a 	sub	r5,r5,r4
    b728:	4154983a 	sll	r10,r8,r5
    b72c:	890ed83a 	srl	r7,r17,r4
    b730:	894a983a 	sll	r5,r17,r5
    b734:	4108d83a 	srl	r4,r8,r4
    b738:	51e2b03a 	or	r17,r10,r7
    b73c:	280ac03a 	cmpne	r5,r5,zero
    b740:	8962b03a 	or	r17,r17,r5
    b744:	89a3883a 	add	r17,r17,r6
    b748:	2253883a 	add	r9,r4,r9
    b74c:	898d803a 	cmpltu	r6,r17,r6
    b750:	3251883a 	add	r8,r6,r9
    b754:	1021883a 	mov	r16,r2
    b758:	003ee506 	br	b2f0 <__alt_data_end+0xfffebef0>
    b75c:	4984b03a 	or	r2,r9,r6
    b760:	103e6326 	beq	r2,zero,b0f0 <__alt_data_end+0xfffebcf0>
    b764:	8987c83a 	sub	r3,r17,r6
    b768:	88c9803a 	cmpltu	r4,r17,r3
    b76c:	4245c83a 	sub	r2,r8,r9
    b770:	1105c83a 	sub	r2,r2,r4
    b774:	1100202c 	andhi	r4,r2,128
    b778:	203ebb26 	beq	r4,zero,b268 <__alt_data_end+0xfffebe68>
    b77c:	3463c83a 	sub	r17,r6,r17
    b780:	4a07c83a 	sub	r3,r9,r8
    b784:	344d803a 	cmpltu	r6,r6,r17
    b788:	1991c83a 	sub	r8,r3,r6
    b78c:	3825883a 	mov	r18,r7
    b790:	003e5706 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b794:	4984b03a 	or	r2,r9,r6
    b798:	10002e26 	beq	r2,zero,b854 <__adddf3+0x7e0>
    b79c:	4004d0fa 	srli	r2,r8,3
    b7a0:	8822d0fa 	srli	r17,r17,3
    b7a4:	4010977a 	slli	r8,r8,29
    b7a8:	10c0022c 	andhi	r3,r2,8
    b7ac:	4462b03a 	or	r17,r8,r17
    b7b0:	18000826 	beq	r3,zero,b7d4 <__adddf3+0x760>
    b7b4:	4808d0fa 	srli	r4,r9,3
    b7b8:	20c0022c 	andhi	r3,r4,8
    b7bc:	1800051e 	bne	r3,zero,b7d4 <__adddf3+0x760>
    b7c0:	300cd0fa 	srli	r6,r6,3
    b7c4:	4806977a 	slli	r3,r9,29
    b7c8:	2005883a 	mov	r2,r4
    b7cc:	3825883a 	mov	r18,r7
    b7d0:	19a2b03a 	or	r17,r3,r6
    b7d4:	8810d77a 	srli	r8,r17,29
    b7d8:	100490fa 	slli	r2,r2,3
    b7dc:	882290fa 	slli	r17,r17,3
    b7e0:	0401ffc4 	movi	r16,2047
    b7e4:	4090b03a 	or	r8,r8,r2
    b7e8:	003e4106 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b7ec:	0141ffc4 	movi	r5,2047
    b7f0:	117fc71e 	bne	r2,r5,b710 <__alt_data_end+0xfffec310>
    b7f4:	4811883a 	mov	r8,r9
    b7f8:	3023883a 	mov	r17,r6
    b7fc:	1021883a 	mov	r16,r2
    b800:	003e3b06 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b804:	10002f26 	beq	r2,zero,b8c4 <__adddf3+0x850>
    b808:	4984b03a 	or	r2,r9,r6
    b80c:	10001126 	beq	r2,zero,b854 <__adddf3+0x7e0>
    b810:	4004d0fa 	srli	r2,r8,3
    b814:	8822d0fa 	srli	r17,r17,3
    b818:	4010977a 	slli	r8,r8,29
    b81c:	10c0022c 	andhi	r3,r2,8
    b820:	4462b03a 	or	r17,r8,r17
    b824:	183feb26 	beq	r3,zero,b7d4 <__alt_data_end+0xfffec3d4>
    b828:	4808d0fa 	srli	r4,r9,3
    b82c:	20c0022c 	andhi	r3,r4,8
    b830:	183fe81e 	bne	r3,zero,b7d4 <__alt_data_end+0xfffec3d4>
    b834:	300cd0fa 	srli	r6,r6,3
    b838:	4806977a 	slli	r3,r9,29
    b83c:	2005883a 	mov	r2,r4
    b840:	19a2b03a 	or	r17,r3,r6
    b844:	003fe306 	br	b7d4 <__alt_data_end+0xfffec3d4>
    b848:	0011883a 	mov	r8,zero
    b84c:	0005883a 	mov	r2,zero
    b850:	003e3f06 	br	b150 <__alt_data_end+0xfffebd50>
    b854:	0401ffc4 	movi	r16,2047
    b858:	003e2506 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b85c:	0013883a 	mov	r9,zero
    b860:	003f8406 	br	b674 <__alt_data_end+0xfffec274>
    b864:	0005883a 	mov	r2,zero
    b868:	0007883a 	mov	r3,zero
    b86c:	003e8906 	br	b294 <__alt_data_end+0xfffebe94>
    b870:	197ff804 	addi	r5,r3,-32
    b874:	01000804 	movi	r4,32
    b878:	414ad83a 	srl	r5,r8,r5
    b87c:	19002426 	beq	r3,r4,b910 <__adddf3+0x89c>
    b880:	01001004 	movi	r4,64
    b884:	20c7c83a 	sub	r3,r4,r3
    b888:	40c6983a 	sll	r3,r8,r3
    b88c:	1c46b03a 	or	r3,r3,r17
    b890:	1806c03a 	cmpne	r3,r3,zero
    b894:	28e2b03a 	or	r17,r5,r3
    b898:	0007883a 	mov	r3,zero
    b89c:	003f2306 	br	b52c <__alt_data_end+0xfffec12c>
    b8a0:	0007883a 	mov	r3,zero
    b8a4:	5811883a 	mov	r8,r11
    b8a8:	00bfffc4 	movi	r2,-1
    b8ac:	0401ffc4 	movi	r16,2047
    b8b0:	003e7806 	br	b294 <__alt_data_end+0xfffebe94>
    b8b4:	4462b03a 	or	r17,r8,r17
    b8b8:	8822c03a 	cmpne	r17,r17,zero
    b8bc:	0009883a 	mov	r4,zero
    b8c0:	003fa006 	br	b744 <__alt_data_end+0xfffec344>
    b8c4:	4811883a 	mov	r8,r9
    b8c8:	3023883a 	mov	r17,r6
    b8cc:	0401ffc4 	movi	r16,2047
    b8d0:	003e0706 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b8d4:	4811883a 	mov	r8,r9
    b8d8:	3023883a 	mov	r17,r6
    b8dc:	003e0406 	br	b0f0 <__alt_data_end+0xfffebcf0>
    b8e0:	21fff804 	addi	r7,r4,-32
    b8e4:	01400804 	movi	r5,32
    b8e8:	41ced83a 	srl	r7,r8,r7
    b8ec:	21400a26 	beq	r4,r5,b918 <__adddf3+0x8a4>
    b8f0:	01401004 	movi	r5,64
    b8f4:	2909c83a 	sub	r4,r5,r4
    b8f8:	4108983a 	sll	r4,r8,r4
    b8fc:	2448b03a 	or	r4,r4,r17
    b900:	2008c03a 	cmpne	r4,r4,zero
    b904:	3922b03a 	or	r17,r7,r4
    b908:	0009883a 	mov	r4,zero
    b90c:	003f8d06 	br	b744 <__alt_data_end+0xfffec344>
    b910:	0007883a 	mov	r3,zero
    b914:	003fdd06 	br	b88c <__alt_data_end+0xfffec48c>
    b918:	0009883a 	mov	r4,zero
    b91c:	003ff706 	br	b8fc <__alt_data_end+0xfffec4fc>

0000b920 <__divdf3>:
    b920:	defff004 	addi	sp,sp,-64
    b924:	dc800815 	stw	r18,32(sp)
    b928:	2824d53a 	srli	r18,r5,20
    b92c:	dd800c15 	stw	r22,48(sp)
    b930:	282cd7fa 	srli	r22,r5,31
    b934:	dc000615 	stw	r16,24(sp)
    b938:	04000434 	movhi	r16,16
    b93c:	843fffc4 	addi	r16,r16,-1
    b940:	dfc00f15 	stw	ra,60(sp)
    b944:	df000e15 	stw	fp,56(sp)
    b948:	ddc00d15 	stw	r23,52(sp)
    b94c:	dd400b15 	stw	r21,44(sp)
    b950:	dd000a15 	stw	r20,40(sp)
    b954:	dcc00915 	stw	r19,36(sp)
    b958:	dc400715 	stw	r17,28(sp)
    b95c:	9481ffcc 	andi	r18,r18,2047
    b960:	2c20703a 	and	r16,r5,r16
    b964:	b2003fcc 	andi	r8,r22,255
    b968:	90006126 	beq	r18,zero,baf0 <__divdf3+0x1d0>
    b96c:	0081ffc4 	movi	r2,2047
    b970:	202b883a 	mov	r21,r4
    b974:	90803726 	beq	r18,r2,ba54 <__divdf3+0x134>
    b978:	80800434 	orhi	r2,r16,16
    b97c:	100490fa 	slli	r2,r2,3
    b980:	2020d77a 	srli	r16,r4,29
    b984:	202a90fa 	slli	r21,r4,3
    b988:	94bf0044 	addi	r18,r18,-1023
    b98c:	80a0b03a 	or	r16,r16,r2
    b990:	0013883a 	mov	r9,zero
    b994:	000b883a 	mov	r5,zero
    b998:	3806d53a 	srli	r3,r7,20
    b99c:	382ed7fa 	srli	r23,r7,31
    b9a0:	04400434 	movhi	r17,16
    b9a4:	8c7fffc4 	addi	r17,r17,-1
    b9a8:	18c1ffcc 	andi	r3,r3,2047
    b9ac:	3029883a 	mov	r20,r6
    b9b0:	3c62703a 	and	r17,r7,r17
    b9b4:	bf003fcc 	andi	fp,r23,255
    b9b8:	18006e26 	beq	r3,zero,bb74 <__divdf3+0x254>
    b9bc:	0081ffc4 	movi	r2,2047
    b9c0:	18806626 	beq	r3,r2,bb5c <__divdf3+0x23c>
    b9c4:	88800434 	orhi	r2,r17,16
    b9c8:	100490fa 	slli	r2,r2,3
    b9cc:	3022d77a 	srli	r17,r6,29
    b9d0:	302890fa 	slli	r20,r6,3
    b9d4:	18ff0044 	addi	r3,r3,-1023
    b9d8:	88a2b03a 	or	r17,r17,r2
    b9dc:	000f883a 	mov	r7,zero
    b9e0:	b5e6f03a 	xor	r19,r22,r23
    b9e4:	3a4cb03a 	or	r6,r7,r9
    b9e8:	008003c4 	movi	r2,15
    b9ec:	9809883a 	mov	r4,r19
    b9f0:	90c7c83a 	sub	r3,r18,r3
    b9f4:	9cc03fcc 	andi	r19,r19,255
    b9f8:	11809636 	bltu	r2,r6,bc54 <__divdf3+0x334>
    b9fc:	300c90ba 	slli	r6,r6,2
    ba00:	00800074 	movhi	r2,1
    ba04:	10ae8504 	addi	r2,r2,-17900
    ba08:	308d883a 	add	r6,r6,r2
    ba0c:	30800017 	ldw	r2,0(r6)
    ba10:	1000683a 	jmp	r2
    ba14:	0000bc54 	movui	zero,753
    ba18:	0000ba8c 	andi	zero,zero,746
    ba1c:	0000bc44 	movi	zero,753
    ba20:	0000ba80 	call	ba8 <strncat+0x6c>
    ba24:	0000bc44 	movi	zero,753
    ba28:	0000bc18 	cmpnei	zero,zero,752
    ba2c:	0000bc44 	movi	zero,753
    ba30:	0000ba80 	call	ba8 <strncat+0x6c>
    ba34:	0000ba8c 	andi	zero,zero,746
    ba38:	0000ba8c 	andi	zero,zero,746
    ba3c:	0000bc18 	cmpnei	zero,zero,752
    ba40:	0000ba80 	call	ba8 <strncat+0x6c>
    ba44:	0000ba70 	cmpltui	zero,zero,745
    ba48:	0000ba70 	cmpltui	zero,zero,745
    ba4c:	0000ba70 	cmpltui	zero,zero,745
    ba50:	0000bfdc 	xori	zero,zero,767
    ba54:	2404b03a 	or	r2,r4,r16
    ba58:	10006c1e 	bne	r2,zero,bc0c <__divdf3+0x2ec>
    ba5c:	02400204 	movi	r9,8
    ba60:	0021883a 	mov	r16,zero
    ba64:	002b883a 	mov	r21,zero
    ba68:	01400084 	movi	r5,2
    ba6c:	003fca06 	br	b998 <__alt_data_end+0xfffec598>
    ba70:	8023883a 	mov	r17,r16
    ba74:	a829883a 	mov	r20,r21
    ba78:	4039883a 	mov	fp,r8
    ba7c:	280f883a 	mov	r7,r5
    ba80:	00800084 	movi	r2,2
    ba84:	3881601e 	bne	r7,r2,c008 <__divdf3+0x6e8>
    ba88:	e027883a 	mov	r19,fp
    ba8c:	9900004c 	andi	r4,r19,1
    ba90:	0081ffc4 	movi	r2,2047
    ba94:	0021883a 	mov	r16,zero
    ba98:	002b883a 	mov	r21,zero
    ba9c:	1004953a 	slli	r2,r2,20
    baa0:	20c03fcc 	andi	r3,r4,255
    baa4:	01400434 	movhi	r5,16
    baa8:	297fffc4 	addi	r5,r5,-1
    baac:	180697fa 	slli	r3,r3,31
    bab0:	8160703a 	and	r16,r16,r5
    bab4:	80a0b03a 	or	r16,r16,r2
    bab8:	80c6b03a 	or	r3,r16,r3
    babc:	a805883a 	mov	r2,r21
    bac0:	dfc00f17 	ldw	ra,60(sp)
    bac4:	df000e17 	ldw	fp,56(sp)
    bac8:	ddc00d17 	ldw	r23,52(sp)
    bacc:	dd800c17 	ldw	r22,48(sp)
    bad0:	dd400b17 	ldw	r21,44(sp)
    bad4:	dd000a17 	ldw	r20,40(sp)
    bad8:	dcc00917 	ldw	r19,36(sp)
    badc:	dc800817 	ldw	r18,32(sp)
    bae0:	dc400717 	ldw	r17,28(sp)
    bae4:	dc000617 	ldw	r16,24(sp)
    bae8:	dec01004 	addi	sp,sp,64
    baec:	f800283a 	ret
    baf0:	2404b03a 	or	r2,r4,r16
    baf4:	2023883a 	mov	r17,r4
    baf8:	10003f26 	beq	r2,zero,bbf8 <__divdf3+0x2d8>
    bafc:	80015e26 	beq	r16,zero,c078 <__divdf3+0x758>
    bb00:	8009883a 	mov	r4,r16
    bb04:	d9800215 	stw	r6,8(sp)
    bb08:	d9c00515 	stw	r7,20(sp)
    bb0c:	da000415 	stw	r8,16(sp)
    bb10:	000d8b40 	call	d8b4 <__clzsi2>
    bb14:	d9800217 	ldw	r6,8(sp)
    bb18:	d9c00517 	ldw	r7,20(sp)
    bb1c:	da000417 	ldw	r8,16(sp)
    bb20:	113ffd44 	addi	r4,r2,-11
    bb24:	00c00704 	movi	r3,28
    bb28:	19014f16 	blt	r3,r4,c068 <__divdf3+0x748>
    bb2c:	00c00744 	movi	r3,29
    bb30:	157ffe04 	addi	r21,r2,-8
    bb34:	1907c83a 	sub	r3,r3,r4
    bb38:	8560983a 	sll	r16,r16,r21
    bb3c:	88c6d83a 	srl	r3,r17,r3
    bb40:	8d6a983a 	sll	r21,r17,r21
    bb44:	1c20b03a 	or	r16,r3,r16
    bb48:	1080fcc4 	addi	r2,r2,1011
    bb4c:	00a5c83a 	sub	r18,zero,r2
    bb50:	0013883a 	mov	r9,zero
    bb54:	000b883a 	mov	r5,zero
    bb58:	003f8f06 	br	b998 <__alt_data_end+0xfffec598>
    bb5c:	3444b03a 	or	r2,r6,r17
    bb60:	1000231e 	bne	r2,zero,bbf0 <__divdf3+0x2d0>
    bb64:	0023883a 	mov	r17,zero
    bb68:	0029883a 	mov	r20,zero
    bb6c:	01c00084 	movi	r7,2
    bb70:	003f9b06 	br	b9e0 <__alt_data_end+0xfffec5e0>
    bb74:	3444b03a 	or	r2,r6,r17
    bb78:	10001926 	beq	r2,zero,bbe0 <__divdf3+0x2c0>
    bb7c:	88014b26 	beq	r17,zero,c0ac <__divdf3+0x78c>
    bb80:	8809883a 	mov	r4,r17
    bb84:	d9400115 	stw	r5,4(sp)
    bb88:	d9800215 	stw	r6,8(sp)
    bb8c:	da000415 	stw	r8,16(sp)
    bb90:	da400315 	stw	r9,12(sp)
    bb94:	000d8b40 	call	d8b4 <__clzsi2>
    bb98:	d9400117 	ldw	r5,4(sp)
    bb9c:	d9800217 	ldw	r6,8(sp)
    bba0:	da000417 	ldw	r8,16(sp)
    bba4:	da400317 	ldw	r9,12(sp)
    bba8:	113ffd44 	addi	r4,r2,-11
    bbac:	00c00704 	movi	r3,28
    bbb0:	19013a16 	blt	r3,r4,c09c <__divdf3+0x77c>
    bbb4:	00c00744 	movi	r3,29
    bbb8:	153ffe04 	addi	r20,r2,-8
    bbbc:	1907c83a 	sub	r3,r3,r4
    bbc0:	8d22983a 	sll	r17,r17,r20
    bbc4:	30c6d83a 	srl	r3,r6,r3
    bbc8:	3528983a 	sll	r20,r6,r20
    bbcc:	1c62b03a 	or	r17,r3,r17
    bbd0:	1080fcc4 	addi	r2,r2,1011
    bbd4:	0087c83a 	sub	r3,zero,r2
    bbd8:	000f883a 	mov	r7,zero
    bbdc:	003f8006 	br	b9e0 <__alt_data_end+0xfffec5e0>
    bbe0:	0023883a 	mov	r17,zero
    bbe4:	0029883a 	mov	r20,zero
    bbe8:	01c00044 	movi	r7,1
    bbec:	003f7c06 	br	b9e0 <__alt_data_end+0xfffec5e0>
    bbf0:	01c000c4 	movi	r7,3
    bbf4:	003f7a06 	br	b9e0 <__alt_data_end+0xfffec5e0>
    bbf8:	02400104 	movi	r9,4
    bbfc:	0021883a 	mov	r16,zero
    bc00:	002b883a 	mov	r21,zero
    bc04:	01400044 	movi	r5,1
    bc08:	003f6306 	br	b998 <__alt_data_end+0xfffec598>
    bc0c:	02400304 	movi	r9,12
    bc10:	014000c4 	movi	r5,3
    bc14:	003f6006 	br	b998 <__alt_data_end+0xfffec598>
    bc18:	04000434 	movhi	r16,16
    bc1c:	0009883a 	mov	r4,zero
    bc20:	843fffc4 	addi	r16,r16,-1
    bc24:	057fffc4 	movi	r21,-1
    bc28:	0081ffc4 	movi	r2,2047
    bc2c:	003f9b06 	br	ba9c <__alt_data_end+0xfffec69c>
    bc30:	00c00044 	movi	r3,1
    bc34:	1887c83a 	sub	r3,r3,r2
    bc38:	01000e04 	movi	r4,56
    bc3c:	20c1530e 	bge	r4,r3,c18c <__divdf3+0x86c>
    bc40:	9900004c 	andi	r4,r19,1
    bc44:	0005883a 	mov	r2,zero
    bc48:	0021883a 	mov	r16,zero
    bc4c:	002b883a 	mov	r21,zero
    bc50:	003f9206 	br	ba9c <__alt_data_end+0xfffec69c>
    bc54:	8c012e36 	bltu	r17,r16,c110 <__divdf3+0x7f0>
    bc58:	84412c26 	beq	r16,r17,c10c <__divdf3+0x7ec>
    bc5c:	a82f883a 	mov	r23,r21
    bc60:	18ffffc4 	addi	r3,r3,-1
    bc64:	002b883a 	mov	r21,zero
    bc68:	a004d63a 	srli	r2,r20,24
    bc6c:	8822923a 	slli	r17,r17,8
    bc70:	a028923a 	slli	r20,r20,8
    bc74:	8009883a 	mov	r4,r16
    bc78:	88acb03a 	or	r22,r17,r2
    bc7c:	dd000015 	stw	r20,0(sp)
    bc80:	b028d43a 	srli	r20,r22,16
    bc84:	d8c00215 	stw	r3,8(sp)
    bc88:	b4bfffcc 	andi	r18,r22,65535
    bc8c:	a00b883a 	mov	r5,r20
    bc90:	000af900 	call	af90 <__udivsi3>
    bc94:	100b883a 	mov	r5,r2
    bc98:	9009883a 	mov	r4,r18
    bc9c:	1023883a 	mov	r17,r2
    bca0:	000b04c0 	call	b04c <__mulsi3>
    bca4:	8009883a 	mov	r4,r16
    bca8:	a00b883a 	mov	r5,r20
    bcac:	1039883a 	mov	fp,r2
    bcb0:	000aff40 	call	aff4 <__umodsi3>
    bcb4:	1004943a 	slli	r2,r2,16
    bcb8:	b808d43a 	srli	r4,r23,16
    bcbc:	d8c00217 	ldw	r3,8(sp)
    bcc0:	2084b03a 	or	r2,r4,r2
    bcc4:	1700062e 	bgeu	r2,fp,bce0 <__divdf3+0x3c0>
    bcc8:	1585883a 	add	r2,r2,r22
    bccc:	893fffc4 	addi	r4,r17,-1
    bcd0:	15811d36 	bltu	r2,r22,c148 <__divdf3+0x828>
    bcd4:	17011c2e 	bgeu	r2,fp,c148 <__divdf3+0x828>
    bcd8:	8c7fff84 	addi	r17,r17,-2
    bcdc:	1585883a 	add	r2,r2,r22
    bce0:	1739c83a 	sub	fp,r2,fp
    bce4:	a00b883a 	mov	r5,r20
    bce8:	e009883a 	mov	r4,fp
    bcec:	d8c00215 	stw	r3,8(sp)
    bcf0:	000af900 	call	af90 <__udivsi3>
    bcf4:	100b883a 	mov	r5,r2
    bcf8:	9009883a 	mov	r4,r18
    bcfc:	1021883a 	mov	r16,r2
    bd00:	000b04c0 	call	b04c <__mulsi3>
    bd04:	a00b883a 	mov	r5,r20
    bd08:	e009883a 	mov	r4,fp
    bd0c:	d8800415 	stw	r2,16(sp)
    bd10:	000aff40 	call	aff4 <__umodsi3>
    bd14:	1004943a 	slli	r2,r2,16
    bd18:	da000417 	ldw	r8,16(sp)
    bd1c:	bdffffcc 	andi	r23,r23,65535
    bd20:	b884b03a 	or	r2,r23,r2
    bd24:	d8c00217 	ldw	r3,8(sp)
    bd28:	1200062e 	bgeu	r2,r8,bd44 <__divdf3+0x424>
    bd2c:	1585883a 	add	r2,r2,r22
    bd30:	813fffc4 	addi	r4,r16,-1
    bd34:	15810236 	bltu	r2,r22,c140 <__divdf3+0x820>
    bd38:	1201012e 	bgeu	r2,r8,c140 <__divdf3+0x820>
    bd3c:	843fff84 	addi	r16,r16,-2
    bd40:	1585883a 	add	r2,r2,r22
    bd44:	8822943a 	slli	r17,r17,16
    bd48:	d9800017 	ldw	r6,0(sp)
    bd4c:	1211c83a 	sub	r8,r2,r8
    bd50:	8c22b03a 	or	r17,r17,r16
    bd54:	373fffcc 	andi	fp,r6,65535
    bd58:	8abfffcc 	andi	r10,r17,65535
    bd5c:	8820d43a 	srli	r16,r17,16
    bd60:	5009883a 	mov	r4,r10
    bd64:	e00b883a 	mov	r5,fp
    bd68:	302ed43a 	srli	r23,r6,16
    bd6c:	d8c00215 	stw	r3,8(sp)
    bd70:	da000415 	stw	r8,16(sp)
    bd74:	da800115 	stw	r10,4(sp)
    bd78:	000b04c0 	call	b04c <__mulsi3>
    bd7c:	800b883a 	mov	r5,r16
    bd80:	e009883a 	mov	r4,fp
    bd84:	d8800515 	stw	r2,20(sp)
    bd88:	000b04c0 	call	b04c <__mulsi3>
    bd8c:	8009883a 	mov	r4,r16
    bd90:	b80b883a 	mov	r5,r23
    bd94:	d8800315 	stw	r2,12(sp)
    bd98:	000b04c0 	call	b04c <__mulsi3>
    bd9c:	da800117 	ldw	r10,4(sp)
    bda0:	b80b883a 	mov	r5,r23
    bda4:	1021883a 	mov	r16,r2
    bda8:	5009883a 	mov	r4,r10
    bdac:	000b04c0 	call	b04c <__mulsi3>
    bdb0:	d9c00517 	ldw	r7,20(sp)
    bdb4:	da400317 	ldw	r9,12(sp)
    bdb8:	d8c00217 	ldw	r3,8(sp)
    bdbc:	3808d43a 	srli	r4,r7,16
    bdc0:	1245883a 	add	r2,r2,r9
    bdc4:	da000417 	ldw	r8,16(sp)
    bdc8:	2085883a 	add	r2,r4,r2
    bdcc:	1240022e 	bgeu	r2,r9,bdd8 <__divdf3+0x4b8>
    bdd0:	01000074 	movhi	r4,1
    bdd4:	8121883a 	add	r16,r16,r4
    bdd8:	1008d43a 	srli	r4,r2,16
    bddc:	1004943a 	slli	r2,r2,16
    bde0:	39ffffcc 	andi	r7,r7,65535
    bde4:	2409883a 	add	r4,r4,r16
    bde8:	11c5883a 	add	r2,r2,r7
    bdec:	4100bb36 	bltu	r8,r4,c0dc <__divdf3+0x7bc>
    bdf0:	4100d726 	beq	r8,r4,c150 <__divdf3+0x830>
    bdf4:	4109c83a 	sub	r4,r8,r4
    bdf8:	a8a1c83a 	sub	r16,r21,r2
    bdfc:	ac2b803a 	cmpltu	r21,r21,r16
    be00:	256bc83a 	sub	r21,r4,r21
    be04:	b540d926 	beq	r22,r21,c16c <__divdf3+0x84c>
    be08:	a00b883a 	mov	r5,r20
    be0c:	a809883a 	mov	r4,r21
    be10:	d8c00215 	stw	r3,8(sp)
    be14:	000af900 	call	af90 <__udivsi3>
    be18:	100b883a 	mov	r5,r2
    be1c:	9009883a 	mov	r4,r18
    be20:	d8800515 	stw	r2,20(sp)
    be24:	000b04c0 	call	b04c <__mulsi3>
    be28:	a809883a 	mov	r4,r21
    be2c:	a00b883a 	mov	r5,r20
    be30:	d8800415 	stw	r2,16(sp)
    be34:	000aff40 	call	aff4 <__umodsi3>
    be38:	1004943a 	slli	r2,r2,16
    be3c:	8008d43a 	srli	r4,r16,16
    be40:	da000417 	ldw	r8,16(sp)
    be44:	d8c00217 	ldw	r3,8(sp)
    be48:	2084b03a 	or	r2,r4,r2
    be4c:	d9c00517 	ldw	r7,20(sp)
    be50:	1200062e 	bgeu	r2,r8,be6c <__divdf3+0x54c>
    be54:	1585883a 	add	r2,r2,r22
    be58:	393fffc4 	addi	r4,r7,-1
    be5c:	1580c536 	bltu	r2,r22,c174 <__divdf3+0x854>
    be60:	1200c42e 	bgeu	r2,r8,c174 <__divdf3+0x854>
    be64:	39ffff84 	addi	r7,r7,-2
    be68:	1585883a 	add	r2,r2,r22
    be6c:	122bc83a 	sub	r21,r2,r8
    be70:	a00b883a 	mov	r5,r20
    be74:	a809883a 	mov	r4,r21
    be78:	d8c00215 	stw	r3,8(sp)
    be7c:	d9c00515 	stw	r7,20(sp)
    be80:	000af900 	call	af90 <__udivsi3>
    be84:	9009883a 	mov	r4,r18
    be88:	100b883a 	mov	r5,r2
    be8c:	d8800415 	stw	r2,16(sp)
    be90:	000b04c0 	call	b04c <__mulsi3>
    be94:	a809883a 	mov	r4,r21
    be98:	a00b883a 	mov	r5,r20
    be9c:	1025883a 	mov	r18,r2
    bea0:	000aff40 	call	aff4 <__umodsi3>
    bea4:	1004943a 	slli	r2,r2,16
    bea8:	813fffcc 	andi	r4,r16,65535
    beac:	d8c00217 	ldw	r3,8(sp)
    beb0:	20a0b03a 	or	r16,r4,r2
    beb4:	d9c00517 	ldw	r7,20(sp)
    beb8:	da000417 	ldw	r8,16(sp)
    bebc:	8480062e 	bgeu	r16,r18,bed8 <__divdf3+0x5b8>
    bec0:	85a1883a 	add	r16,r16,r22
    bec4:	40bfffc4 	addi	r2,r8,-1
    bec8:	8580ac36 	bltu	r16,r22,c17c <__divdf3+0x85c>
    becc:	8480ab2e 	bgeu	r16,r18,c17c <__divdf3+0x85c>
    bed0:	423fff84 	addi	r8,r8,-2
    bed4:	85a1883a 	add	r16,r16,r22
    bed8:	3804943a 	slli	r2,r7,16
    bedc:	84a1c83a 	sub	r16,r16,r18
    bee0:	e009883a 	mov	r4,fp
    bee4:	1228b03a 	or	r20,r2,r8
    bee8:	a1ffffcc 	andi	r7,r20,65535
    beec:	a024d43a 	srli	r18,r20,16
    bef0:	380b883a 	mov	r5,r7
    bef4:	d8c00215 	stw	r3,8(sp)
    bef8:	d9c00515 	stw	r7,20(sp)
    befc:	000b04c0 	call	b04c <__mulsi3>
    bf00:	900b883a 	mov	r5,r18
    bf04:	e009883a 	mov	r4,fp
    bf08:	102b883a 	mov	r21,r2
    bf0c:	000b04c0 	call	b04c <__mulsi3>
    bf10:	900b883a 	mov	r5,r18
    bf14:	b809883a 	mov	r4,r23
    bf18:	1039883a 	mov	fp,r2
    bf1c:	000b04c0 	call	b04c <__mulsi3>
    bf20:	d9c00517 	ldw	r7,20(sp)
    bf24:	b80b883a 	mov	r5,r23
    bf28:	1025883a 	mov	r18,r2
    bf2c:	3809883a 	mov	r4,r7
    bf30:	000b04c0 	call	b04c <__mulsi3>
    bf34:	a808d43a 	srli	r4,r21,16
    bf38:	1705883a 	add	r2,r2,fp
    bf3c:	d8c00217 	ldw	r3,8(sp)
    bf40:	2085883a 	add	r2,r4,r2
    bf44:	1700022e 	bgeu	r2,fp,bf50 <__divdf3+0x630>
    bf48:	01000074 	movhi	r4,1
    bf4c:	9125883a 	add	r18,r18,r4
    bf50:	1008d43a 	srli	r4,r2,16
    bf54:	1004943a 	slli	r2,r2,16
    bf58:	ad7fffcc 	andi	r21,r21,65535
    bf5c:	2489883a 	add	r4,r4,r18
    bf60:	1545883a 	add	r2,r2,r21
    bf64:	81003836 	bltu	r16,r4,c048 <__divdf3+0x728>
    bf68:	81003626 	beq	r16,r4,c044 <__divdf3+0x724>
    bf6c:	a5000054 	ori	r20,r20,1
    bf70:	1880ffc4 	addi	r2,r3,1023
    bf74:	00bf2e0e 	bge	zero,r2,bc30 <__alt_data_end+0xfffec830>
    bf78:	a10001cc 	andi	r4,r20,7
    bf7c:	20000726 	beq	r4,zero,bf9c <__divdf3+0x67c>
    bf80:	a10003cc 	andi	r4,r20,15
    bf84:	01400104 	movi	r5,4
    bf88:	21400426 	beq	r4,r5,bf9c <__divdf3+0x67c>
    bf8c:	a149883a 	add	r4,r20,r5
    bf90:	2529803a 	cmpltu	r20,r4,r20
    bf94:	8d23883a 	add	r17,r17,r20
    bf98:	2029883a 	mov	r20,r4
    bf9c:	8900402c 	andhi	r4,r17,256
    bfa0:	20000426 	beq	r4,zero,bfb4 <__divdf3+0x694>
    bfa4:	18810004 	addi	r2,r3,1024
    bfa8:	00ffc034 	movhi	r3,65280
    bfac:	18ffffc4 	addi	r3,r3,-1
    bfb0:	88e2703a 	and	r17,r17,r3
    bfb4:	00c1ff84 	movi	r3,2046
    bfb8:	18beb416 	blt	r3,r2,ba8c <__alt_data_end+0xfffec68c>
    bfbc:	a028d0fa 	srli	r20,r20,3
    bfc0:	882a977a 	slli	r21,r17,29
    bfc4:	8820927a 	slli	r16,r17,9
    bfc8:	1081ffcc 	andi	r2,r2,2047
    bfcc:	ad2ab03a 	or	r21,r21,r20
    bfd0:	8020d33a 	srli	r16,r16,12
    bfd4:	9900004c 	andi	r4,r19,1
    bfd8:	003eb006 	br	ba9c <__alt_data_end+0xfffec69c>
    bfdc:	8080022c 	andhi	r2,r16,8
    bfe0:	10001226 	beq	r2,zero,c02c <__divdf3+0x70c>
    bfe4:	8880022c 	andhi	r2,r17,8
    bfe8:	1000101e 	bne	r2,zero,c02c <__divdf3+0x70c>
    bfec:	00800434 	movhi	r2,16
    bff0:	8c000234 	orhi	r16,r17,8
    bff4:	10bfffc4 	addi	r2,r2,-1
    bff8:	b809883a 	mov	r4,r23
    bffc:	80a0703a 	and	r16,r16,r2
    c000:	a02b883a 	mov	r21,r20
    c004:	003f0806 	br	bc28 <__alt_data_end+0xfffec828>
    c008:	008000c4 	movi	r2,3
    c00c:	3880b126 	beq	r7,r2,c2d4 <__divdf3+0x9b4>
    c010:	00800044 	movi	r2,1
    c014:	38805b1e 	bne	r7,r2,c184 <__divdf3+0x864>
    c018:	e009883a 	mov	r4,fp
    c01c:	0005883a 	mov	r2,zero
    c020:	0021883a 	mov	r16,zero
    c024:	002b883a 	mov	r21,zero
    c028:	003e9c06 	br	ba9c <__alt_data_end+0xfffec69c>
    c02c:	00800434 	movhi	r2,16
    c030:	84000234 	orhi	r16,r16,8
    c034:	10bfffc4 	addi	r2,r2,-1
    c038:	b009883a 	mov	r4,r22
    c03c:	80a0703a 	and	r16,r16,r2
    c040:	003ef906 	br	bc28 <__alt_data_end+0xfffec828>
    c044:	103fca26 	beq	r2,zero,bf70 <__alt_data_end+0xfffecb70>
    c048:	b421883a 	add	r16,r22,r16
    c04c:	a17fffc4 	addi	r5,r20,-1
    c050:	8580422e 	bgeu	r16,r22,c15c <__divdf3+0x83c>
    c054:	2829883a 	mov	r20,r5
    c058:	813fc41e 	bne	r16,r4,bf6c <__alt_data_end+0xfffecb6c>
    c05c:	d9800017 	ldw	r6,0(sp)
    c060:	30bfc21e 	bne	r6,r2,bf6c <__alt_data_end+0xfffecb6c>
    c064:	003fc206 	br	bf70 <__alt_data_end+0xfffecb70>
    c068:	143ff604 	addi	r16,r2,-40
    c06c:	8c20983a 	sll	r16,r17,r16
    c070:	002b883a 	mov	r21,zero
    c074:	003eb406 	br	bb48 <__alt_data_end+0xfffec748>
    c078:	d9800215 	stw	r6,8(sp)
    c07c:	d9c00515 	stw	r7,20(sp)
    c080:	da000415 	stw	r8,16(sp)
    c084:	000d8b40 	call	d8b4 <__clzsi2>
    c088:	10800804 	addi	r2,r2,32
    c08c:	da000417 	ldw	r8,16(sp)
    c090:	d9c00517 	ldw	r7,20(sp)
    c094:	d9800217 	ldw	r6,8(sp)
    c098:	003ea106 	br	bb20 <__alt_data_end+0xfffec720>
    c09c:	147ff604 	addi	r17,r2,-40
    c0a0:	3462983a 	sll	r17,r6,r17
    c0a4:	0029883a 	mov	r20,zero
    c0a8:	003ec906 	br	bbd0 <__alt_data_end+0xfffec7d0>
    c0ac:	3009883a 	mov	r4,r6
    c0b0:	d9400115 	stw	r5,4(sp)
    c0b4:	d9800215 	stw	r6,8(sp)
    c0b8:	da000415 	stw	r8,16(sp)
    c0bc:	da400315 	stw	r9,12(sp)
    c0c0:	000d8b40 	call	d8b4 <__clzsi2>
    c0c4:	10800804 	addi	r2,r2,32
    c0c8:	da400317 	ldw	r9,12(sp)
    c0cc:	da000417 	ldw	r8,16(sp)
    c0d0:	d9800217 	ldw	r6,8(sp)
    c0d4:	d9400117 	ldw	r5,4(sp)
    c0d8:	003eb306 	br	bba8 <__alt_data_end+0xfffec7a8>
    c0dc:	d9800017 	ldw	r6,0(sp)
    c0e0:	a9ab883a 	add	r21,r21,r6
    c0e4:	a98b803a 	cmpltu	r5,r21,r6
    c0e8:	2d8b883a 	add	r5,r5,r22
    c0ec:	2a11883a 	add	r8,r5,r8
    c0f0:	897fffc4 	addi	r5,r17,-1
    c0f4:	b2000c2e 	bgeu	r22,r8,c128 <__divdf3+0x808>
    c0f8:	41003f36 	bltu	r8,r4,c1f8 <__divdf3+0x8d8>
    c0fc:	22006c26 	beq	r4,r8,c2b0 <__divdf3+0x990>
    c100:	4109c83a 	sub	r4,r8,r4
    c104:	2823883a 	mov	r17,r5
    c108:	003f3b06 	br	bdf8 <__alt_data_end+0xfffec9f8>
    c10c:	ad3ed336 	bltu	r21,r20,bc5c <__alt_data_end+0xfffec85c>
    c110:	a804d07a 	srli	r2,r21,1
    c114:	802e97fa 	slli	r23,r16,31
    c118:	a82a97fa 	slli	r21,r21,31
    c11c:	8020d07a 	srli	r16,r16,1
    c120:	b8aeb03a 	or	r23,r23,r2
    c124:	003ed006 	br	bc68 <__alt_data_end+0xfffec868>
    c128:	b23ff51e 	bne	r22,r8,c100 <__alt_data_end+0xfffecd00>
    c12c:	d9800017 	ldw	r6,0(sp)
    c130:	a9bff12e 	bgeu	r21,r6,c0f8 <__alt_data_end+0xfffeccf8>
    c134:	b109c83a 	sub	r4,r22,r4
    c138:	2823883a 	mov	r17,r5
    c13c:	003f2e06 	br	bdf8 <__alt_data_end+0xfffec9f8>
    c140:	2021883a 	mov	r16,r4
    c144:	003eff06 	br	bd44 <__alt_data_end+0xfffec944>
    c148:	2023883a 	mov	r17,r4
    c14c:	003ee406 	br	bce0 <__alt_data_end+0xfffec8e0>
    c150:	a8bfe236 	bltu	r21,r2,c0dc <__alt_data_end+0xfffeccdc>
    c154:	0009883a 	mov	r4,zero
    c158:	003f2706 	br	bdf8 <__alt_data_end+0xfffec9f8>
    c15c:	81002d36 	bltu	r16,r4,c214 <__divdf3+0x8f4>
    c160:	24005626 	beq	r4,r16,c2bc <__divdf3+0x99c>
    c164:	2829883a 	mov	r20,r5
    c168:	003f8006 	br	bf6c <__alt_data_end+0xfffecb6c>
    c16c:	053fffc4 	movi	r20,-1
    c170:	003f7f06 	br	bf70 <__alt_data_end+0xfffecb70>
    c174:	200f883a 	mov	r7,r4
    c178:	003f3c06 	br	be6c <__alt_data_end+0xfffeca6c>
    c17c:	1011883a 	mov	r8,r2
    c180:	003f5506 	br	bed8 <__alt_data_end+0xfffecad8>
    c184:	e027883a 	mov	r19,fp
    c188:	003f7906 	br	bf70 <__alt_data_end+0xfffecb70>
    c18c:	010007c4 	movi	r4,31
    c190:	20c02816 	blt	r4,r3,c234 <__divdf3+0x914>
    c194:	00800804 	movi	r2,32
    c198:	10c5c83a 	sub	r2,r2,r3
    c19c:	888a983a 	sll	r5,r17,r2
    c1a0:	a0c8d83a 	srl	r4,r20,r3
    c1a4:	a084983a 	sll	r2,r20,r2
    c1a8:	88e2d83a 	srl	r17,r17,r3
    c1ac:	2906b03a 	or	r3,r5,r4
    c1b0:	1004c03a 	cmpne	r2,r2,zero
    c1b4:	1886b03a 	or	r3,r3,r2
    c1b8:	188001cc 	andi	r2,r3,7
    c1bc:	10000726 	beq	r2,zero,c1dc <__divdf3+0x8bc>
    c1c0:	188003cc 	andi	r2,r3,15
    c1c4:	01000104 	movi	r4,4
    c1c8:	11000426 	beq	r2,r4,c1dc <__divdf3+0x8bc>
    c1cc:	1805883a 	mov	r2,r3
    c1d0:	10c00104 	addi	r3,r2,4
    c1d4:	1885803a 	cmpltu	r2,r3,r2
    c1d8:	88a3883a 	add	r17,r17,r2
    c1dc:	8880202c 	andhi	r2,r17,128
    c1e0:	10002926 	beq	r2,zero,c288 <__divdf3+0x968>
    c1e4:	9900004c 	andi	r4,r19,1
    c1e8:	00800044 	movi	r2,1
    c1ec:	0021883a 	mov	r16,zero
    c1f0:	002b883a 	mov	r21,zero
    c1f4:	003e2906 	br	ba9c <__alt_data_end+0xfffec69c>
    c1f8:	d9800017 	ldw	r6,0(sp)
    c1fc:	8c7fff84 	addi	r17,r17,-2
    c200:	a9ab883a 	add	r21,r21,r6
    c204:	a98b803a 	cmpltu	r5,r21,r6
    c208:	2d8b883a 	add	r5,r5,r22
    c20c:	2a11883a 	add	r8,r5,r8
    c210:	003ef806 	br	bdf4 <__alt_data_end+0xfffec9f4>
    c214:	d9800017 	ldw	r6,0(sp)
    c218:	318f883a 	add	r7,r6,r6
    c21c:	398b803a 	cmpltu	r5,r7,r6
    c220:	2d8d883a 	add	r6,r5,r22
    c224:	81a1883a 	add	r16,r16,r6
    c228:	a17fff84 	addi	r5,r20,-2
    c22c:	d9c00015 	stw	r7,0(sp)
    c230:	003f8806 	br	c054 <__alt_data_end+0xfffecc54>
    c234:	013ff844 	movi	r4,-31
    c238:	2085c83a 	sub	r2,r4,r2
    c23c:	8888d83a 	srl	r4,r17,r2
    c240:	00800804 	movi	r2,32
    c244:	18802126 	beq	r3,r2,c2cc <__divdf3+0x9ac>
    c248:	04001004 	movi	r16,64
    c24c:	80c7c83a 	sub	r3,r16,r3
    c250:	88e0983a 	sll	r16,r17,r3
    c254:	8504b03a 	or	r2,r16,r20
    c258:	1004c03a 	cmpne	r2,r2,zero
    c25c:	2084b03a 	or	r2,r4,r2
    c260:	144001cc 	andi	r17,r2,7
    c264:	88000d1e 	bne	r17,zero,c29c <__divdf3+0x97c>
    c268:	0021883a 	mov	r16,zero
    c26c:	102ad0fa 	srli	r21,r2,3
    c270:	9900004c 	andi	r4,r19,1
    c274:	0005883a 	mov	r2,zero
    c278:	ac6ab03a 	or	r21,r21,r17
    c27c:	003e0706 	br	ba9c <__alt_data_end+0xfffec69c>
    c280:	1007883a 	mov	r3,r2
    c284:	0023883a 	mov	r17,zero
    c288:	8820927a 	slli	r16,r17,9
    c28c:	1805883a 	mov	r2,r3
    c290:	8822977a 	slli	r17,r17,29
    c294:	8020d33a 	srli	r16,r16,12
    c298:	003ff406 	br	c26c <__alt_data_end+0xfffece6c>
    c29c:	10c003cc 	andi	r3,r2,15
    c2a0:	01000104 	movi	r4,4
    c2a4:	193ff626 	beq	r3,r4,c280 <__alt_data_end+0xfffece80>
    c2a8:	0023883a 	mov	r17,zero
    c2ac:	003fc806 	br	c1d0 <__alt_data_end+0xfffecdd0>
    c2b0:	a8bfd136 	bltu	r21,r2,c1f8 <__alt_data_end+0xfffecdf8>
    c2b4:	2823883a 	mov	r17,r5
    c2b8:	003fa606 	br	c154 <__alt_data_end+0xfffecd54>
    c2bc:	d9800017 	ldw	r6,0(sp)
    c2c0:	30bfd436 	bltu	r6,r2,c214 <__alt_data_end+0xfffece14>
    c2c4:	2829883a 	mov	r20,r5
    c2c8:	003f6406 	br	c05c <__alt_data_end+0xfffecc5c>
    c2cc:	0021883a 	mov	r16,zero
    c2d0:	003fe006 	br	c254 <__alt_data_end+0xfffece54>
    c2d4:	00800434 	movhi	r2,16
    c2d8:	8c000234 	orhi	r16,r17,8
    c2dc:	10bfffc4 	addi	r2,r2,-1
    c2e0:	e009883a 	mov	r4,fp
    c2e4:	80a0703a 	and	r16,r16,r2
    c2e8:	a02b883a 	mov	r21,r20
    c2ec:	003e4e06 	br	bc28 <__alt_data_end+0xfffec828>

0000c2f0 <__eqdf2>:
    c2f0:	2804d53a 	srli	r2,r5,20
    c2f4:	3806d53a 	srli	r3,r7,20
    c2f8:	02000434 	movhi	r8,16
    c2fc:	423fffc4 	addi	r8,r8,-1
    c300:	1081ffcc 	andi	r2,r2,2047
    c304:	0281ffc4 	movi	r10,2047
    c308:	2a12703a 	and	r9,r5,r8
    c30c:	18c1ffcc 	andi	r3,r3,2047
    c310:	3a10703a 	and	r8,r7,r8
    c314:	280ad7fa 	srli	r5,r5,31
    c318:	380ed7fa 	srli	r7,r7,31
    c31c:	12801026 	beq	r2,r10,c360 <__eqdf2+0x70>
    c320:	0281ffc4 	movi	r10,2047
    c324:	1a800a26 	beq	r3,r10,c350 <__eqdf2+0x60>
    c328:	10c00226 	beq	r2,r3,c334 <__eqdf2+0x44>
    c32c:	00800044 	movi	r2,1
    c330:	f800283a 	ret
    c334:	4a3ffd1e 	bne	r9,r8,c32c <__alt_data_end+0xfffecf2c>
    c338:	21bffc1e 	bne	r4,r6,c32c <__alt_data_end+0xfffecf2c>
    c33c:	29c00c26 	beq	r5,r7,c370 <__eqdf2+0x80>
    c340:	103ffa1e 	bne	r2,zero,c32c <__alt_data_end+0xfffecf2c>
    c344:	2244b03a 	or	r2,r4,r9
    c348:	1004c03a 	cmpne	r2,r2,zero
    c34c:	f800283a 	ret
    c350:	3214b03a 	or	r10,r6,r8
    c354:	503ff426 	beq	r10,zero,c328 <__alt_data_end+0xfffecf28>
    c358:	00800044 	movi	r2,1
    c35c:	f800283a 	ret
    c360:	2254b03a 	or	r10,r4,r9
    c364:	503fee26 	beq	r10,zero,c320 <__alt_data_end+0xfffecf20>
    c368:	00800044 	movi	r2,1
    c36c:	f800283a 	ret
    c370:	0005883a 	mov	r2,zero
    c374:	f800283a 	ret

0000c378 <__gedf2>:
    c378:	2804d53a 	srli	r2,r5,20
    c37c:	3806d53a 	srli	r3,r7,20
    c380:	02000434 	movhi	r8,16
    c384:	423fffc4 	addi	r8,r8,-1
    c388:	1081ffcc 	andi	r2,r2,2047
    c38c:	0241ffc4 	movi	r9,2047
    c390:	2a14703a 	and	r10,r5,r8
    c394:	18c1ffcc 	andi	r3,r3,2047
    c398:	3a10703a 	and	r8,r7,r8
    c39c:	280ad7fa 	srli	r5,r5,31
    c3a0:	380ed7fa 	srli	r7,r7,31
    c3a4:	12401d26 	beq	r2,r9,c41c <__gedf2+0xa4>
    c3a8:	0241ffc4 	movi	r9,2047
    c3ac:	1a401226 	beq	r3,r9,c3f8 <__gedf2+0x80>
    c3b0:	1000081e 	bne	r2,zero,c3d4 <__gedf2+0x5c>
    c3b4:	2296b03a 	or	r11,r4,r10
    c3b8:	5813003a 	cmpeq	r9,r11,zero
    c3bc:	1800091e 	bne	r3,zero,c3e4 <__gedf2+0x6c>
    c3c0:	3218b03a 	or	r12,r6,r8
    c3c4:	6000071e 	bne	r12,zero,c3e4 <__gedf2+0x6c>
    c3c8:	0005883a 	mov	r2,zero
    c3cc:	5800101e 	bne	r11,zero,c410 <__gedf2+0x98>
    c3d0:	f800283a 	ret
    c3d4:	18000c1e 	bne	r3,zero,c408 <__gedf2+0x90>
    c3d8:	3212b03a 	or	r9,r6,r8
    c3dc:	48000c26 	beq	r9,zero,c410 <__gedf2+0x98>
    c3e0:	0013883a 	mov	r9,zero
    c3e4:	39c03fcc 	andi	r7,r7,255
    c3e8:	48000826 	beq	r9,zero,c40c <__gedf2+0x94>
    c3ec:	38000926 	beq	r7,zero,c414 <__gedf2+0x9c>
    c3f0:	00800044 	movi	r2,1
    c3f4:	f800283a 	ret
    c3f8:	3212b03a 	or	r9,r6,r8
    c3fc:	483fec26 	beq	r9,zero,c3b0 <__alt_data_end+0xfffecfb0>
    c400:	00bfff84 	movi	r2,-2
    c404:	f800283a 	ret
    c408:	39c03fcc 	andi	r7,r7,255
    c40c:	29c00626 	beq	r5,r7,c428 <__gedf2+0xb0>
    c410:	283ff726 	beq	r5,zero,c3f0 <__alt_data_end+0xfffecff0>
    c414:	00bfffc4 	movi	r2,-1
    c418:	f800283a 	ret
    c41c:	2292b03a 	or	r9,r4,r10
    c420:	483fe126 	beq	r9,zero,c3a8 <__alt_data_end+0xfffecfa8>
    c424:	003ff606 	br	c400 <__alt_data_end+0xfffed000>
    c428:	18bff916 	blt	r3,r2,c410 <__alt_data_end+0xfffed010>
    c42c:	10c00316 	blt	r2,r3,c43c <__gedf2+0xc4>
    c430:	42bff736 	bltu	r8,r10,c410 <__alt_data_end+0xfffed010>
    c434:	52000326 	beq	r10,r8,c444 <__gedf2+0xcc>
    c438:	5200042e 	bgeu	r10,r8,c44c <__gedf2+0xd4>
    c43c:	283fec1e 	bne	r5,zero,c3f0 <__alt_data_end+0xfffecff0>
    c440:	003ff406 	br	c414 <__alt_data_end+0xfffed014>
    c444:	313ff236 	bltu	r6,r4,c410 <__alt_data_end+0xfffed010>
    c448:	21bffc36 	bltu	r4,r6,c43c <__alt_data_end+0xfffed03c>
    c44c:	0005883a 	mov	r2,zero
    c450:	f800283a 	ret

0000c454 <__ledf2>:
    c454:	2804d53a 	srli	r2,r5,20
    c458:	3810d53a 	srli	r8,r7,20
    c45c:	00c00434 	movhi	r3,16
    c460:	18ffffc4 	addi	r3,r3,-1
    c464:	1081ffcc 	andi	r2,r2,2047
    c468:	0241ffc4 	movi	r9,2047
    c46c:	28d4703a 	and	r10,r5,r3
    c470:	4201ffcc 	andi	r8,r8,2047
    c474:	38c6703a 	and	r3,r7,r3
    c478:	280ad7fa 	srli	r5,r5,31
    c47c:	380ed7fa 	srli	r7,r7,31
    c480:	12401f26 	beq	r2,r9,c500 <__ledf2+0xac>
    c484:	0241ffc4 	movi	r9,2047
    c488:	42401426 	beq	r8,r9,c4dc <__ledf2+0x88>
    c48c:	1000091e 	bne	r2,zero,c4b4 <__ledf2+0x60>
    c490:	2296b03a 	or	r11,r4,r10
    c494:	5813003a 	cmpeq	r9,r11,zero
    c498:	29403fcc 	andi	r5,r5,255
    c49c:	40000a1e 	bne	r8,zero,c4c8 <__ledf2+0x74>
    c4a0:	30d8b03a 	or	r12,r6,r3
    c4a4:	6000081e 	bne	r12,zero,c4c8 <__ledf2+0x74>
    c4a8:	0005883a 	mov	r2,zero
    c4ac:	5800111e 	bne	r11,zero,c4f4 <__ledf2+0xa0>
    c4b0:	f800283a 	ret
    c4b4:	29403fcc 	andi	r5,r5,255
    c4b8:	40000c1e 	bne	r8,zero,c4ec <__ledf2+0x98>
    c4bc:	30d2b03a 	or	r9,r6,r3
    c4c0:	48000c26 	beq	r9,zero,c4f4 <__ledf2+0xa0>
    c4c4:	0013883a 	mov	r9,zero
    c4c8:	39c03fcc 	andi	r7,r7,255
    c4cc:	48000826 	beq	r9,zero,c4f0 <__ledf2+0x9c>
    c4d0:	38001126 	beq	r7,zero,c518 <__ledf2+0xc4>
    c4d4:	00800044 	movi	r2,1
    c4d8:	f800283a 	ret
    c4dc:	30d2b03a 	or	r9,r6,r3
    c4e0:	483fea26 	beq	r9,zero,c48c <__alt_data_end+0xfffed08c>
    c4e4:	00800084 	movi	r2,2
    c4e8:	f800283a 	ret
    c4ec:	39c03fcc 	andi	r7,r7,255
    c4f0:	39400726 	beq	r7,r5,c510 <__ledf2+0xbc>
    c4f4:	2800081e 	bne	r5,zero,c518 <__ledf2+0xc4>
    c4f8:	00800044 	movi	r2,1
    c4fc:	f800283a 	ret
    c500:	2292b03a 	or	r9,r4,r10
    c504:	483fdf26 	beq	r9,zero,c484 <__alt_data_end+0xfffed084>
    c508:	00800084 	movi	r2,2
    c50c:	f800283a 	ret
    c510:	4080030e 	bge	r8,r2,c520 <__ledf2+0xcc>
    c514:	383fef26 	beq	r7,zero,c4d4 <__alt_data_end+0xfffed0d4>
    c518:	00bfffc4 	movi	r2,-1
    c51c:	f800283a 	ret
    c520:	123feb16 	blt	r2,r8,c4d0 <__alt_data_end+0xfffed0d0>
    c524:	1abff336 	bltu	r3,r10,c4f4 <__alt_data_end+0xfffed0f4>
    c528:	50c00326 	beq	r10,r3,c538 <__ledf2+0xe4>
    c52c:	50c0042e 	bgeu	r10,r3,c540 <__ledf2+0xec>
    c530:	283fe81e 	bne	r5,zero,c4d4 <__alt_data_end+0xfffed0d4>
    c534:	003ff806 	br	c518 <__alt_data_end+0xfffed118>
    c538:	313fee36 	bltu	r6,r4,c4f4 <__alt_data_end+0xfffed0f4>
    c53c:	21bffc36 	bltu	r4,r6,c530 <__alt_data_end+0xfffed130>
    c540:	0005883a 	mov	r2,zero
    c544:	f800283a 	ret

0000c548 <__muldf3>:
    c548:	deffee04 	addi	sp,sp,-72
    c54c:	dd000c15 	stw	r20,48(sp)
    c550:	2828d53a 	srli	r20,r5,20
    c554:	ddc00f15 	stw	r23,60(sp)
    c558:	282ed7fa 	srli	r23,r5,31
    c55c:	dc000815 	stw	r16,32(sp)
    c560:	04000434 	movhi	r16,16
    c564:	dcc00b15 	stw	r19,44(sp)
    c568:	843fffc4 	addi	r16,r16,-1
    c56c:	dfc01115 	stw	ra,68(sp)
    c570:	df001015 	stw	fp,64(sp)
    c574:	dd800e15 	stw	r22,56(sp)
    c578:	dd400d15 	stw	r21,52(sp)
    c57c:	dc800a15 	stw	r18,40(sp)
    c580:	dc400915 	stw	r17,36(sp)
    c584:	a501ffcc 	andi	r20,r20,2047
    c588:	2c20703a 	and	r16,r5,r16
    c58c:	b827883a 	mov	r19,r23
    c590:	ba403fcc 	andi	r9,r23,255
    c594:	a0006026 	beq	r20,zero,c718 <__muldf3+0x1d0>
    c598:	0081ffc4 	movi	r2,2047
    c59c:	202d883a 	mov	r22,r4
    c5a0:	a0803626 	beq	r20,r2,c67c <__muldf3+0x134>
    c5a4:	84000434 	orhi	r16,r16,16
    c5a8:	200ad77a 	srli	r5,r4,29
    c5ac:	800490fa 	slli	r2,r16,3
    c5b0:	202c90fa 	slli	r22,r4,3
    c5b4:	a53f0044 	addi	r20,r20,-1023
    c5b8:	28a0b03a 	or	r16,r5,r2
    c5bc:	002b883a 	mov	r21,zero
    c5c0:	000b883a 	mov	r5,zero
    c5c4:	3804d53a 	srli	r2,r7,20
    c5c8:	3838d7fa 	srli	fp,r7,31
    c5cc:	04400434 	movhi	r17,16
    c5d0:	8c7fffc4 	addi	r17,r17,-1
    c5d4:	1081ffcc 	andi	r2,r2,2047
    c5d8:	3025883a 	mov	r18,r6
    c5dc:	3c62703a 	and	r17,r7,r17
    c5e0:	e2803fcc 	andi	r10,fp,255
    c5e4:	10006d26 	beq	r2,zero,c79c <__muldf3+0x254>
    c5e8:	00c1ffc4 	movi	r3,2047
    c5ec:	10c06526 	beq	r2,r3,c784 <__muldf3+0x23c>
    c5f0:	8c400434 	orhi	r17,r17,16
    c5f4:	300ed77a 	srli	r7,r6,29
    c5f8:	880690fa 	slli	r3,r17,3
    c5fc:	302490fa 	slli	r18,r6,3
    c600:	10bf0044 	addi	r2,r2,-1023
    c604:	38e2b03a 	or	r17,r7,r3
    c608:	000f883a 	mov	r7,zero
    c60c:	a087883a 	add	r3,r20,r2
    c610:	010003c4 	movi	r4,15
    c614:	3d44b03a 	or	r2,r7,r21
    c618:	e5ccf03a 	xor	r6,fp,r23
    c61c:	1a000044 	addi	r8,r3,1
    c620:	20809b36 	bltu	r4,r2,c890 <__muldf3+0x348>
    c624:	100490ba 	slli	r2,r2,2
    c628:	01000074 	movhi	r4,1
    c62c:	21318f04 	addi	r4,r4,-14788
    c630:	1105883a 	add	r2,r2,r4
    c634:	10800017 	ldw	r2,0(r2)
    c638:	1000683a 	jmp	r2
    c63c:	0000c890 	cmplti	zero,zero,802
    c640:	0000c69c 	xori	zero,zero,794
    c644:	0000c69c 	xori	zero,zero,794
    c648:	0000c698 	cmpnei	zero,zero,794
    c64c:	0000c86c 	andhi	zero,zero,801
    c650:	0000c86c 	andhi	zero,zero,801
    c654:	0000c854 	movui	zero,801
    c658:	0000c698 	cmpnei	zero,zero,794
    c65c:	0000c86c 	andhi	zero,zero,801
    c660:	0000c854 	movui	zero,801
    c664:	0000c86c 	andhi	zero,zero,801
    c668:	0000c698 	cmpnei	zero,zero,794
    c66c:	0000c87c 	xorhi	zero,zero,801
    c670:	0000c87c 	xorhi	zero,zero,801
    c674:	0000c87c 	xorhi	zero,zero,801
    c678:	0000cbdc 	xori	zero,zero,815
    c67c:	2404b03a 	or	r2,r4,r16
    c680:	1000711e 	bne	r2,zero,c848 <__muldf3+0x300>
    c684:	05400204 	movi	r21,8
    c688:	0021883a 	mov	r16,zero
    c68c:	002d883a 	mov	r22,zero
    c690:	01400084 	movi	r5,2
    c694:	003fcb06 	br	c5c4 <__alt_data_end+0xfffed1c4>
    c698:	500d883a 	mov	r6,r10
    c69c:	00800084 	movi	r2,2
    c6a0:	38805926 	beq	r7,r2,c808 <__muldf3+0x2c0>
    c6a4:	008000c4 	movi	r2,3
    c6a8:	3881bb26 	beq	r7,r2,cd98 <__muldf3+0x850>
    c6ac:	00800044 	movi	r2,1
    c6b0:	3881961e 	bne	r7,r2,cd0c <__muldf3+0x7c4>
    c6b4:	3027883a 	mov	r19,r6
    c6b8:	0005883a 	mov	r2,zero
    c6bc:	0021883a 	mov	r16,zero
    c6c0:	002d883a 	mov	r22,zero
    c6c4:	1004953a 	slli	r2,r2,20
    c6c8:	98c03fcc 	andi	r3,r19,255
    c6cc:	04400434 	movhi	r17,16
    c6d0:	8c7fffc4 	addi	r17,r17,-1
    c6d4:	180697fa 	slli	r3,r3,31
    c6d8:	8460703a 	and	r16,r16,r17
    c6dc:	80a0b03a 	or	r16,r16,r2
    c6e0:	80c6b03a 	or	r3,r16,r3
    c6e4:	b005883a 	mov	r2,r22
    c6e8:	dfc01117 	ldw	ra,68(sp)
    c6ec:	df001017 	ldw	fp,64(sp)
    c6f0:	ddc00f17 	ldw	r23,60(sp)
    c6f4:	dd800e17 	ldw	r22,56(sp)
    c6f8:	dd400d17 	ldw	r21,52(sp)
    c6fc:	dd000c17 	ldw	r20,48(sp)
    c700:	dcc00b17 	ldw	r19,44(sp)
    c704:	dc800a17 	ldw	r18,40(sp)
    c708:	dc400917 	ldw	r17,36(sp)
    c70c:	dc000817 	ldw	r16,32(sp)
    c710:	dec01204 	addi	sp,sp,72
    c714:	f800283a 	ret
    c718:	2404b03a 	or	r2,r4,r16
    c71c:	202b883a 	mov	r21,r4
    c720:	10004426 	beq	r2,zero,c834 <__muldf3+0x2ec>
    c724:	80015126 	beq	r16,zero,cc6c <__muldf3+0x724>
    c728:	8009883a 	mov	r4,r16
    c72c:	d9800715 	stw	r6,28(sp)
    c730:	d9c00215 	stw	r7,8(sp)
    c734:	da400415 	stw	r9,16(sp)
    c738:	000d8b40 	call	d8b4 <__clzsi2>
    c73c:	d9800717 	ldw	r6,28(sp)
    c740:	d9c00217 	ldw	r7,8(sp)
    c744:	da400417 	ldw	r9,16(sp)
    c748:	113ffd44 	addi	r4,r2,-11
    c74c:	00c00704 	movi	r3,28
    c750:	19014216 	blt	r3,r4,cc5c <__muldf3+0x714>
    c754:	00c00744 	movi	r3,29
    c758:	15bffe04 	addi	r22,r2,-8
    c75c:	1907c83a 	sub	r3,r3,r4
    c760:	85a0983a 	sll	r16,r16,r22
    c764:	a8c6d83a 	srl	r3,r21,r3
    c768:	adac983a 	sll	r22,r21,r22
    c76c:	1c20b03a 	or	r16,r3,r16
    c770:	1080fcc4 	addi	r2,r2,1011
    c774:	00a9c83a 	sub	r20,zero,r2
    c778:	002b883a 	mov	r21,zero
    c77c:	000b883a 	mov	r5,zero
    c780:	003f9006 	br	c5c4 <__alt_data_end+0xfffed1c4>
    c784:	3446b03a 	or	r3,r6,r17
    c788:	1800281e 	bne	r3,zero,c82c <__muldf3+0x2e4>
    c78c:	0023883a 	mov	r17,zero
    c790:	0025883a 	mov	r18,zero
    c794:	01c00084 	movi	r7,2
    c798:	003f9c06 	br	c60c <__alt_data_end+0xfffed20c>
    c79c:	3446b03a 	or	r3,r6,r17
    c7a0:	18001e26 	beq	r3,zero,c81c <__muldf3+0x2d4>
    c7a4:	88012126 	beq	r17,zero,cc2c <__muldf3+0x6e4>
    c7a8:	8809883a 	mov	r4,r17
    c7ac:	d9400215 	stw	r5,8(sp)
    c7b0:	d9800715 	stw	r6,28(sp)
    c7b4:	da400415 	stw	r9,16(sp)
    c7b8:	da800315 	stw	r10,12(sp)
    c7bc:	000d8b40 	call	d8b4 <__clzsi2>
    c7c0:	d9400217 	ldw	r5,8(sp)
    c7c4:	d9800717 	ldw	r6,28(sp)
    c7c8:	da400417 	ldw	r9,16(sp)
    c7cc:	da800317 	ldw	r10,12(sp)
    c7d0:	113ffd44 	addi	r4,r2,-11
    c7d4:	00c00704 	movi	r3,28
    c7d8:	19011016 	blt	r3,r4,cc1c <__muldf3+0x6d4>
    c7dc:	00c00744 	movi	r3,29
    c7e0:	14bffe04 	addi	r18,r2,-8
    c7e4:	1907c83a 	sub	r3,r3,r4
    c7e8:	8ca2983a 	sll	r17,r17,r18
    c7ec:	30c6d83a 	srl	r3,r6,r3
    c7f0:	34a4983a 	sll	r18,r6,r18
    c7f4:	1c62b03a 	or	r17,r3,r17
    c7f8:	1080fcc4 	addi	r2,r2,1011
    c7fc:	0085c83a 	sub	r2,zero,r2
    c800:	000f883a 	mov	r7,zero
    c804:	003f8106 	br	c60c <__alt_data_end+0xfffed20c>
    c808:	3027883a 	mov	r19,r6
    c80c:	0081ffc4 	movi	r2,2047
    c810:	0021883a 	mov	r16,zero
    c814:	002d883a 	mov	r22,zero
    c818:	003faa06 	br	c6c4 <__alt_data_end+0xfffed2c4>
    c81c:	0023883a 	mov	r17,zero
    c820:	0025883a 	mov	r18,zero
    c824:	01c00044 	movi	r7,1
    c828:	003f7806 	br	c60c <__alt_data_end+0xfffed20c>
    c82c:	01c000c4 	movi	r7,3
    c830:	003f7606 	br	c60c <__alt_data_end+0xfffed20c>
    c834:	05400104 	movi	r21,4
    c838:	0021883a 	mov	r16,zero
    c83c:	002d883a 	mov	r22,zero
    c840:	01400044 	movi	r5,1
    c844:	003f5f06 	br	c5c4 <__alt_data_end+0xfffed1c4>
    c848:	05400304 	movi	r21,12
    c84c:	014000c4 	movi	r5,3
    c850:	003f5c06 	br	c5c4 <__alt_data_end+0xfffed1c4>
    c854:	04000434 	movhi	r16,16
    c858:	0027883a 	mov	r19,zero
    c85c:	843fffc4 	addi	r16,r16,-1
    c860:	05bfffc4 	movi	r22,-1
    c864:	0081ffc4 	movi	r2,2047
    c868:	003f9606 	br	c6c4 <__alt_data_end+0xfffed2c4>
    c86c:	8023883a 	mov	r17,r16
    c870:	b025883a 	mov	r18,r22
    c874:	280f883a 	mov	r7,r5
    c878:	003f8806 	br	c69c <__alt_data_end+0xfffed29c>
    c87c:	8023883a 	mov	r17,r16
    c880:	b025883a 	mov	r18,r22
    c884:	480d883a 	mov	r6,r9
    c888:	280f883a 	mov	r7,r5
    c88c:	003f8306 	br	c69c <__alt_data_end+0xfffed29c>
    c890:	b026d43a 	srli	r19,r22,16
    c894:	902ed43a 	srli	r23,r18,16
    c898:	b5bfffcc 	andi	r22,r22,65535
    c89c:	94bfffcc 	andi	r18,r18,65535
    c8a0:	b00b883a 	mov	r5,r22
    c8a4:	9009883a 	mov	r4,r18
    c8a8:	d8c00515 	stw	r3,20(sp)
    c8ac:	d9800715 	stw	r6,28(sp)
    c8b0:	da000615 	stw	r8,24(sp)
    c8b4:	000b04c0 	call	b04c <__mulsi3>
    c8b8:	980b883a 	mov	r5,r19
    c8bc:	9009883a 	mov	r4,r18
    c8c0:	1029883a 	mov	r20,r2
    c8c4:	000b04c0 	call	b04c <__mulsi3>
    c8c8:	b80b883a 	mov	r5,r23
    c8cc:	9809883a 	mov	r4,r19
    c8d0:	102b883a 	mov	r21,r2
    c8d4:	000b04c0 	call	b04c <__mulsi3>
    c8d8:	b809883a 	mov	r4,r23
    c8dc:	b00b883a 	mov	r5,r22
    c8e0:	1039883a 	mov	fp,r2
    c8e4:	000b04c0 	call	b04c <__mulsi3>
    c8e8:	a008d43a 	srli	r4,r20,16
    c8ec:	1545883a 	add	r2,r2,r21
    c8f0:	d8c00517 	ldw	r3,20(sp)
    c8f4:	2085883a 	add	r2,r4,r2
    c8f8:	d9800717 	ldw	r6,28(sp)
    c8fc:	da000617 	ldw	r8,24(sp)
    c900:	1540022e 	bgeu	r2,r21,c90c <__muldf3+0x3c4>
    c904:	01000074 	movhi	r4,1
    c908:	e139883a 	add	fp,fp,r4
    c90c:	100e943a 	slli	r7,r2,16
    c910:	1004d43a 	srli	r2,r2,16
    c914:	882ad43a 	srli	r21,r17,16
    c918:	a53fffcc 	andi	r20,r20,65535
    c91c:	8c7fffcc 	andi	r17,r17,65535
    c920:	3d29883a 	add	r20,r7,r20
    c924:	b00b883a 	mov	r5,r22
    c928:	8809883a 	mov	r4,r17
    c92c:	d8c00515 	stw	r3,20(sp)
    c930:	d9800715 	stw	r6,28(sp)
    c934:	da000615 	stw	r8,24(sp)
    c938:	dd000115 	stw	r20,4(sp)
    c93c:	d8800015 	stw	r2,0(sp)
    c940:	000b04c0 	call	b04c <__mulsi3>
    c944:	980b883a 	mov	r5,r19
    c948:	8809883a 	mov	r4,r17
    c94c:	d8800215 	stw	r2,8(sp)
    c950:	000b04c0 	call	b04c <__mulsi3>
    c954:	9809883a 	mov	r4,r19
    c958:	a80b883a 	mov	r5,r21
    c95c:	1029883a 	mov	r20,r2
    c960:	000b04c0 	call	b04c <__mulsi3>
    c964:	b00b883a 	mov	r5,r22
    c968:	a809883a 	mov	r4,r21
    c96c:	d8800415 	stw	r2,16(sp)
    c970:	000b04c0 	call	b04c <__mulsi3>
    c974:	d9c00217 	ldw	r7,8(sp)
    c978:	1505883a 	add	r2,r2,r20
    c97c:	d8c00517 	ldw	r3,20(sp)
    c980:	3826d43a 	srli	r19,r7,16
    c984:	d9800717 	ldw	r6,28(sp)
    c988:	da000617 	ldw	r8,24(sp)
    c98c:	9885883a 	add	r2,r19,r2
    c990:	da400417 	ldw	r9,16(sp)
    c994:	1500022e 	bgeu	r2,r20,c9a0 <__muldf3+0x458>
    c998:	01000074 	movhi	r4,1
    c99c:	4913883a 	add	r9,r9,r4
    c9a0:	1028d43a 	srli	r20,r2,16
    c9a4:	1004943a 	slli	r2,r2,16
    c9a8:	802cd43a 	srli	r22,r16,16
    c9ac:	843fffcc 	andi	r16,r16,65535
    c9b0:	3cffffcc 	andi	r19,r7,65535
    c9b4:	9009883a 	mov	r4,r18
    c9b8:	800b883a 	mov	r5,r16
    c9bc:	a269883a 	add	r20,r20,r9
    c9c0:	d8c00515 	stw	r3,20(sp)
    c9c4:	d9800715 	stw	r6,28(sp)
    c9c8:	da000615 	stw	r8,24(sp)
    c9cc:	14e7883a 	add	r19,r2,r19
    c9d0:	000b04c0 	call	b04c <__mulsi3>
    c9d4:	9009883a 	mov	r4,r18
    c9d8:	b00b883a 	mov	r5,r22
    c9dc:	d8800315 	stw	r2,12(sp)
    c9e0:	000b04c0 	call	b04c <__mulsi3>
    c9e4:	b809883a 	mov	r4,r23
    c9e8:	b00b883a 	mov	r5,r22
    c9ec:	d8800215 	stw	r2,8(sp)
    c9f0:	000b04c0 	call	b04c <__mulsi3>
    c9f4:	b80b883a 	mov	r5,r23
    c9f8:	8009883a 	mov	r4,r16
    c9fc:	d8800415 	stw	r2,16(sp)
    ca00:	000b04c0 	call	b04c <__mulsi3>
    ca04:	da800317 	ldw	r10,12(sp)
    ca08:	d9c00217 	ldw	r7,8(sp)
    ca0c:	d9000017 	ldw	r4,0(sp)
    ca10:	502ed43a 	srli	r23,r10,16
    ca14:	11c5883a 	add	r2,r2,r7
    ca18:	24e5883a 	add	r18,r4,r19
    ca1c:	b885883a 	add	r2,r23,r2
    ca20:	d8c00517 	ldw	r3,20(sp)
    ca24:	d9800717 	ldw	r6,28(sp)
    ca28:	da000617 	ldw	r8,24(sp)
    ca2c:	da400417 	ldw	r9,16(sp)
    ca30:	11c0022e 	bgeu	r2,r7,ca3c <__muldf3+0x4f4>
    ca34:	01000074 	movhi	r4,1
    ca38:	4913883a 	add	r9,r9,r4
    ca3c:	100ed43a 	srli	r7,r2,16
    ca40:	1004943a 	slli	r2,r2,16
    ca44:	55ffffcc 	andi	r23,r10,65535
    ca48:	3a53883a 	add	r9,r7,r9
    ca4c:	8809883a 	mov	r4,r17
    ca50:	800b883a 	mov	r5,r16
    ca54:	d8c00515 	stw	r3,20(sp)
    ca58:	d9800715 	stw	r6,28(sp)
    ca5c:	da000615 	stw	r8,24(sp)
    ca60:	da400415 	stw	r9,16(sp)
    ca64:	15ef883a 	add	r23,r2,r23
    ca68:	000b04c0 	call	b04c <__mulsi3>
    ca6c:	8809883a 	mov	r4,r17
    ca70:	b00b883a 	mov	r5,r22
    ca74:	d8800215 	stw	r2,8(sp)
    ca78:	000b04c0 	call	b04c <__mulsi3>
    ca7c:	b00b883a 	mov	r5,r22
    ca80:	a809883a 	mov	r4,r21
    ca84:	d8800315 	stw	r2,12(sp)
    ca88:	000b04c0 	call	b04c <__mulsi3>
    ca8c:	8009883a 	mov	r4,r16
    ca90:	a80b883a 	mov	r5,r21
    ca94:	1023883a 	mov	r17,r2
    ca98:	000b04c0 	call	b04c <__mulsi3>
    ca9c:	d9c00217 	ldw	r7,8(sp)
    caa0:	da800317 	ldw	r10,12(sp)
    caa4:	d8c00517 	ldw	r3,20(sp)
    caa8:	3808d43a 	srli	r4,r7,16
    caac:	1285883a 	add	r2,r2,r10
    cab0:	d9800717 	ldw	r6,28(sp)
    cab4:	2085883a 	add	r2,r4,r2
    cab8:	da000617 	ldw	r8,24(sp)
    cabc:	da400417 	ldw	r9,16(sp)
    cac0:	1280022e 	bgeu	r2,r10,cacc <__muldf3+0x584>
    cac4:	01000074 	movhi	r4,1
    cac8:	8923883a 	add	r17,r17,r4
    cacc:	1008943a 	slli	r4,r2,16
    cad0:	39ffffcc 	andi	r7,r7,65535
    cad4:	e4b9883a 	add	fp,fp,r18
    cad8:	21cf883a 	add	r7,r4,r7
    cadc:	e4e7803a 	cmpltu	r19,fp,r19
    cae0:	3d0f883a 	add	r7,r7,r20
    cae4:	bf39883a 	add	fp,r23,fp
    cae8:	99c9883a 	add	r4,r19,r7
    caec:	e5ef803a 	cmpltu	r23,fp,r23
    caf0:	490b883a 	add	r5,r9,r4
    caf4:	1004d43a 	srli	r2,r2,16
    caf8:	b965883a 	add	r18,r23,r5
    cafc:	24c9803a 	cmpltu	r4,r4,r19
    cb00:	3d29803a 	cmpltu	r20,r7,r20
    cb04:	a128b03a 	or	r20,r20,r4
    cb08:	95ef803a 	cmpltu	r23,r18,r23
    cb0c:	2a53803a 	cmpltu	r9,r5,r9
    cb10:	a0a9883a 	add	r20,r20,r2
    cb14:	4deeb03a 	or	r23,r9,r23
    cb18:	a5ef883a 	add	r23,r20,r23
    cb1c:	bc63883a 	add	r17,r23,r17
    cb20:	e004927a 	slli	r2,fp,9
    cb24:	d9000117 	ldw	r4,4(sp)
    cb28:	882e927a 	slli	r23,r17,9
    cb2c:	9022d5fa 	srli	r17,r18,23
    cb30:	e038d5fa 	srli	fp,fp,23
    cb34:	1104b03a 	or	r2,r2,r4
    cb38:	9024927a 	slli	r18,r18,9
    cb3c:	1004c03a 	cmpne	r2,r2,zero
    cb40:	bc62b03a 	or	r17,r23,r17
    cb44:	1738b03a 	or	fp,r2,fp
    cb48:	8880402c 	andhi	r2,r17,256
    cb4c:	e4a4b03a 	or	r18,fp,r18
    cb50:	10000726 	beq	r2,zero,cb70 <__muldf3+0x628>
    cb54:	9006d07a 	srli	r3,r18,1
    cb58:	880497fa 	slli	r2,r17,31
    cb5c:	9480004c 	andi	r18,r18,1
    cb60:	8822d07a 	srli	r17,r17,1
    cb64:	1ca4b03a 	or	r18,r3,r18
    cb68:	14a4b03a 	or	r18,r2,r18
    cb6c:	4007883a 	mov	r3,r8
    cb70:	1880ffc4 	addi	r2,r3,1023
    cb74:	0080460e 	bge	zero,r2,cc90 <__muldf3+0x748>
    cb78:	910001cc 	andi	r4,r18,7
    cb7c:	20000726 	beq	r4,zero,cb9c <__muldf3+0x654>
    cb80:	910003cc 	andi	r4,r18,15
    cb84:	01400104 	movi	r5,4
    cb88:	21400426 	beq	r4,r5,cb9c <__muldf3+0x654>
    cb8c:	9149883a 	add	r4,r18,r5
    cb90:	24a5803a 	cmpltu	r18,r4,r18
    cb94:	8ca3883a 	add	r17,r17,r18
    cb98:	2025883a 	mov	r18,r4
    cb9c:	8900402c 	andhi	r4,r17,256
    cba0:	20000426 	beq	r4,zero,cbb4 <__muldf3+0x66c>
    cba4:	18810004 	addi	r2,r3,1024
    cba8:	00ffc034 	movhi	r3,65280
    cbac:	18ffffc4 	addi	r3,r3,-1
    cbb0:	88e2703a 	and	r17,r17,r3
    cbb4:	00c1ff84 	movi	r3,2046
    cbb8:	18bf1316 	blt	r3,r2,c808 <__alt_data_end+0xfffed408>
    cbbc:	882c977a 	slli	r22,r17,29
    cbc0:	9024d0fa 	srli	r18,r18,3
    cbc4:	8822927a 	slli	r17,r17,9
    cbc8:	1081ffcc 	andi	r2,r2,2047
    cbcc:	b4acb03a 	or	r22,r22,r18
    cbd0:	8820d33a 	srli	r16,r17,12
    cbd4:	3027883a 	mov	r19,r6
    cbd8:	003eba06 	br	c6c4 <__alt_data_end+0xfffed2c4>
    cbdc:	8080022c 	andhi	r2,r16,8
    cbe0:	10000926 	beq	r2,zero,cc08 <__muldf3+0x6c0>
    cbe4:	8880022c 	andhi	r2,r17,8
    cbe8:	1000071e 	bne	r2,zero,cc08 <__muldf3+0x6c0>
    cbec:	00800434 	movhi	r2,16
    cbf0:	8c000234 	orhi	r16,r17,8
    cbf4:	10bfffc4 	addi	r2,r2,-1
    cbf8:	e027883a 	mov	r19,fp
    cbfc:	80a0703a 	and	r16,r16,r2
    cc00:	902d883a 	mov	r22,r18
    cc04:	003f1706 	br	c864 <__alt_data_end+0xfffed464>
    cc08:	00800434 	movhi	r2,16
    cc0c:	84000234 	orhi	r16,r16,8
    cc10:	10bfffc4 	addi	r2,r2,-1
    cc14:	80a0703a 	and	r16,r16,r2
    cc18:	003f1206 	br	c864 <__alt_data_end+0xfffed464>
    cc1c:	147ff604 	addi	r17,r2,-40
    cc20:	3462983a 	sll	r17,r6,r17
    cc24:	0025883a 	mov	r18,zero
    cc28:	003ef306 	br	c7f8 <__alt_data_end+0xfffed3f8>
    cc2c:	3009883a 	mov	r4,r6
    cc30:	d9400215 	stw	r5,8(sp)
    cc34:	d9800715 	stw	r6,28(sp)
    cc38:	da400415 	stw	r9,16(sp)
    cc3c:	da800315 	stw	r10,12(sp)
    cc40:	000d8b40 	call	d8b4 <__clzsi2>
    cc44:	10800804 	addi	r2,r2,32
    cc48:	da800317 	ldw	r10,12(sp)
    cc4c:	da400417 	ldw	r9,16(sp)
    cc50:	d9800717 	ldw	r6,28(sp)
    cc54:	d9400217 	ldw	r5,8(sp)
    cc58:	003edd06 	br	c7d0 <__alt_data_end+0xfffed3d0>
    cc5c:	143ff604 	addi	r16,r2,-40
    cc60:	ac20983a 	sll	r16,r21,r16
    cc64:	002d883a 	mov	r22,zero
    cc68:	003ec106 	br	c770 <__alt_data_end+0xfffed370>
    cc6c:	d9800715 	stw	r6,28(sp)
    cc70:	d9c00215 	stw	r7,8(sp)
    cc74:	da400415 	stw	r9,16(sp)
    cc78:	000d8b40 	call	d8b4 <__clzsi2>
    cc7c:	10800804 	addi	r2,r2,32
    cc80:	da400417 	ldw	r9,16(sp)
    cc84:	d9c00217 	ldw	r7,8(sp)
    cc88:	d9800717 	ldw	r6,28(sp)
    cc8c:	003eae06 	br	c748 <__alt_data_end+0xfffed348>
    cc90:	00c00044 	movi	r3,1
    cc94:	1887c83a 	sub	r3,r3,r2
    cc98:	01000e04 	movi	r4,56
    cc9c:	20fe8516 	blt	r4,r3,c6b4 <__alt_data_end+0xfffed2b4>
    cca0:	010007c4 	movi	r4,31
    cca4:	20c01b16 	blt	r4,r3,cd14 <__muldf3+0x7cc>
    cca8:	00800804 	movi	r2,32
    ccac:	10c5c83a 	sub	r2,r2,r3
    ccb0:	888a983a 	sll	r5,r17,r2
    ccb4:	90c8d83a 	srl	r4,r18,r3
    ccb8:	9084983a 	sll	r2,r18,r2
    ccbc:	88e2d83a 	srl	r17,r17,r3
    ccc0:	2906b03a 	or	r3,r5,r4
    ccc4:	1004c03a 	cmpne	r2,r2,zero
    ccc8:	1886b03a 	or	r3,r3,r2
    cccc:	188001cc 	andi	r2,r3,7
    ccd0:	10000726 	beq	r2,zero,ccf0 <__muldf3+0x7a8>
    ccd4:	188003cc 	andi	r2,r3,15
    ccd8:	01000104 	movi	r4,4
    ccdc:	11000426 	beq	r2,r4,ccf0 <__muldf3+0x7a8>
    cce0:	1805883a 	mov	r2,r3
    cce4:	10c00104 	addi	r3,r2,4
    cce8:	1885803a 	cmpltu	r2,r3,r2
    ccec:	88a3883a 	add	r17,r17,r2
    ccf0:	8880202c 	andhi	r2,r17,128
    ccf4:	10001c26 	beq	r2,zero,cd68 <__muldf3+0x820>
    ccf8:	3027883a 	mov	r19,r6
    ccfc:	00800044 	movi	r2,1
    cd00:	0021883a 	mov	r16,zero
    cd04:	002d883a 	mov	r22,zero
    cd08:	003e6e06 	br	c6c4 <__alt_data_end+0xfffed2c4>
    cd0c:	4007883a 	mov	r3,r8
    cd10:	003f9706 	br	cb70 <__alt_data_end+0xfffed770>
    cd14:	017ff844 	movi	r5,-31
    cd18:	2885c83a 	sub	r2,r5,r2
    cd1c:	888ad83a 	srl	r5,r17,r2
    cd20:	00800804 	movi	r2,32
    cd24:	18801a26 	beq	r3,r2,cd90 <__muldf3+0x848>
    cd28:	01001004 	movi	r4,64
    cd2c:	20c7c83a 	sub	r3,r4,r3
    cd30:	88e2983a 	sll	r17,r17,r3
    cd34:	8ca4b03a 	or	r18,r17,r18
    cd38:	9004c03a 	cmpne	r2,r18,zero
    cd3c:	2884b03a 	or	r2,r5,r2
    cd40:	144001cc 	andi	r17,r2,7
    cd44:	88000d1e 	bne	r17,zero,cd7c <__muldf3+0x834>
    cd48:	0021883a 	mov	r16,zero
    cd4c:	102cd0fa 	srli	r22,r2,3
    cd50:	3027883a 	mov	r19,r6
    cd54:	0005883a 	mov	r2,zero
    cd58:	b46cb03a 	or	r22,r22,r17
    cd5c:	003e5906 	br	c6c4 <__alt_data_end+0xfffed2c4>
    cd60:	1007883a 	mov	r3,r2
    cd64:	0023883a 	mov	r17,zero
    cd68:	8820927a 	slli	r16,r17,9
    cd6c:	1805883a 	mov	r2,r3
    cd70:	8822977a 	slli	r17,r17,29
    cd74:	8020d33a 	srli	r16,r16,12
    cd78:	003ff406 	br	cd4c <__alt_data_end+0xfffed94c>
    cd7c:	10c003cc 	andi	r3,r2,15
    cd80:	01000104 	movi	r4,4
    cd84:	193ff626 	beq	r3,r4,cd60 <__alt_data_end+0xfffed960>
    cd88:	0023883a 	mov	r17,zero
    cd8c:	003fd506 	br	cce4 <__alt_data_end+0xfffed8e4>
    cd90:	0023883a 	mov	r17,zero
    cd94:	003fe706 	br	cd34 <__alt_data_end+0xfffed934>
    cd98:	00800434 	movhi	r2,16
    cd9c:	8c000234 	orhi	r16,r17,8
    cda0:	10bfffc4 	addi	r2,r2,-1
    cda4:	3027883a 	mov	r19,r6
    cda8:	80a0703a 	and	r16,r16,r2
    cdac:	902d883a 	mov	r22,r18
    cdb0:	003eac06 	br	c864 <__alt_data_end+0xfffed464>

0000cdb4 <__subdf3>:
    cdb4:	02000434 	movhi	r8,16
    cdb8:	423fffc4 	addi	r8,r8,-1
    cdbc:	defffb04 	addi	sp,sp,-20
    cdc0:	2a14703a 	and	r10,r5,r8
    cdc4:	3812d53a 	srli	r9,r7,20
    cdc8:	3a10703a 	and	r8,r7,r8
    cdcc:	2006d77a 	srli	r3,r4,29
    cdd0:	3004d77a 	srli	r2,r6,29
    cdd4:	dc000015 	stw	r16,0(sp)
    cdd8:	501490fa 	slli	r10,r10,3
    cddc:	2820d53a 	srli	r16,r5,20
    cde0:	401090fa 	slli	r8,r8,3
    cde4:	dc800215 	stw	r18,8(sp)
    cde8:	dc400115 	stw	r17,4(sp)
    cdec:	dfc00415 	stw	ra,16(sp)
    cdf0:	202290fa 	slli	r17,r4,3
    cdf4:	dcc00315 	stw	r19,12(sp)
    cdf8:	4a41ffcc 	andi	r9,r9,2047
    cdfc:	0101ffc4 	movi	r4,2047
    ce00:	2824d7fa 	srli	r18,r5,31
    ce04:	8401ffcc 	andi	r16,r16,2047
    ce08:	50c6b03a 	or	r3,r10,r3
    ce0c:	380ed7fa 	srli	r7,r7,31
    ce10:	408ab03a 	or	r5,r8,r2
    ce14:	300c90fa 	slli	r6,r6,3
    ce18:	49009626 	beq	r9,r4,d074 <__subdf3+0x2c0>
    ce1c:	39c0005c 	xori	r7,r7,1
    ce20:	8245c83a 	sub	r2,r16,r9
    ce24:	3c807426 	beq	r7,r18,cff8 <__subdf3+0x244>
    ce28:	0080af0e 	bge	zero,r2,d0e8 <__subdf3+0x334>
    ce2c:	48002a1e 	bne	r9,zero,ced8 <__subdf3+0x124>
    ce30:	2988b03a 	or	r4,r5,r6
    ce34:	20009a1e 	bne	r4,zero,d0a0 <__subdf3+0x2ec>
    ce38:	888001cc 	andi	r2,r17,7
    ce3c:	10000726 	beq	r2,zero,ce5c <__subdf3+0xa8>
    ce40:	888003cc 	andi	r2,r17,15
    ce44:	01000104 	movi	r4,4
    ce48:	11000426 	beq	r2,r4,ce5c <__subdf3+0xa8>
    ce4c:	890b883a 	add	r5,r17,r4
    ce50:	2c63803a 	cmpltu	r17,r5,r17
    ce54:	1c47883a 	add	r3,r3,r17
    ce58:	2823883a 	mov	r17,r5
    ce5c:	1880202c 	andhi	r2,r3,128
    ce60:	10005926 	beq	r2,zero,cfc8 <__subdf3+0x214>
    ce64:	84000044 	addi	r16,r16,1
    ce68:	0081ffc4 	movi	r2,2047
    ce6c:	8080be26 	beq	r16,r2,d168 <__subdf3+0x3b4>
    ce70:	017fe034 	movhi	r5,65408
    ce74:	297fffc4 	addi	r5,r5,-1
    ce78:	1946703a 	and	r3,r3,r5
    ce7c:	1804977a 	slli	r2,r3,29
    ce80:	1806927a 	slli	r3,r3,9
    ce84:	8822d0fa 	srli	r17,r17,3
    ce88:	8401ffcc 	andi	r16,r16,2047
    ce8c:	180ad33a 	srli	r5,r3,12
    ce90:	9100004c 	andi	r4,r18,1
    ce94:	1444b03a 	or	r2,r2,r17
    ce98:	80c1ffcc 	andi	r3,r16,2047
    ce9c:	1820953a 	slli	r16,r3,20
    cea0:	20c03fcc 	andi	r3,r4,255
    cea4:	180897fa 	slli	r4,r3,31
    cea8:	00c00434 	movhi	r3,16
    ceac:	18ffffc4 	addi	r3,r3,-1
    ceb0:	28c6703a 	and	r3,r5,r3
    ceb4:	1c06b03a 	or	r3,r3,r16
    ceb8:	1906b03a 	or	r3,r3,r4
    cebc:	dfc00417 	ldw	ra,16(sp)
    cec0:	dcc00317 	ldw	r19,12(sp)
    cec4:	dc800217 	ldw	r18,8(sp)
    cec8:	dc400117 	ldw	r17,4(sp)
    cecc:	dc000017 	ldw	r16,0(sp)
    ced0:	dec00504 	addi	sp,sp,20
    ced4:	f800283a 	ret
    ced8:	0101ffc4 	movi	r4,2047
    cedc:	813fd626 	beq	r16,r4,ce38 <__alt_data_end+0xfffeda38>
    cee0:	29402034 	orhi	r5,r5,128
    cee4:	01000e04 	movi	r4,56
    cee8:	2080a316 	blt	r4,r2,d178 <__subdf3+0x3c4>
    ceec:	010007c4 	movi	r4,31
    cef0:	2080c616 	blt	r4,r2,d20c <__subdf3+0x458>
    cef4:	01000804 	movi	r4,32
    cef8:	2089c83a 	sub	r4,r4,r2
    cefc:	2910983a 	sll	r8,r5,r4
    cf00:	308ed83a 	srl	r7,r6,r2
    cf04:	3108983a 	sll	r4,r6,r4
    cf08:	2884d83a 	srl	r2,r5,r2
    cf0c:	41ccb03a 	or	r6,r8,r7
    cf10:	2008c03a 	cmpne	r4,r4,zero
    cf14:	310cb03a 	or	r6,r6,r4
    cf18:	898dc83a 	sub	r6,r17,r6
    cf1c:	89a3803a 	cmpltu	r17,r17,r6
    cf20:	1887c83a 	sub	r3,r3,r2
    cf24:	1c47c83a 	sub	r3,r3,r17
    cf28:	3023883a 	mov	r17,r6
    cf2c:	1880202c 	andhi	r2,r3,128
    cf30:	10002326 	beq	r2,zero,cfc0 <__subdf3+0x20c>
    cf34:	04c02034 	movhi	r19,128
    cf38:	9cffffc4 	addi	r19,r19,-1
    cf3c:	1ce6703a 	and	r19,r3,r19
    cf40:	98007a26 	beq	r19,zero,d12c <__subdf3+0x378>
    cf44:	9809883a 	mov	r4,r19
    cf48:	000d8b40 	call	d8b4 <__clzsi2>
    cf4c:	113ffe04 	addi	r4,r2,-8
    cf50:	00c007c4 	movi	r3,31
    cf54:	19007b16 	blt	r3,r4,d144 <__subdf3+0x390>
    cf58:	00800804 	movi	r2,32
    cf5c:	1105c83a 	sub	r2,r2,r4
    cf60:	8884d83a 	srl	r2,r17,r2
    cf64:	9906983a 	sll	r3,r19,r4
    cf68:	8922983a 	sll	r17,r17,r4
    cf6c:	10c4b03a 	or	r2,r2,r3
    cf70:	24007816 	blt	r4,r16,d154 <__subdf3+0x3a0>
    cf74:	2421c83a 	sub	r16,r4,r16
    cf78:	80c00044 	addi	r3,r16,1
    cf7c:	010007c4 	movi	r4,31
    cf80:	20c09516 	blt	r4,r3,d1d8 <__subdf3+0x424>
    cf84:	01400804 	movi	r5,32
    cf88:	28cbc83a 	sub	r5,r5,r3
    cf8c:	88c8d83a 	srl	r4,r17,r3
    cf90:	8962983a 	sll	r17,r17,r5
    cf94:	114a983a 	sll	r5,r2,r5
    cf98:	10c6d83a 	srl	r3,r2,r3
    cf9c:	8804c03a 	cmpne	r2,r17,zero
    cfa0:	290ab03a 	or	r5,r5,r4
    cfa4:	28a2b03a 	or	r17,r5,r2
    cfa8:	0021883a 	mov	r16,zero
    cfac:	003fa206 	br	ce38 <__alt_data_end+0xfffeda38>
    cfb0:	2090b03a 	or	r8,r4,r2
    cfb4:	40018e26 	beq	r8,zero,d5f0 <__subdf3+0x83c>
    cfb8:	1007883a 	mov	r3,r2
    cfbc:	2023883a 	mov	r17,r4
    cfc0:	888001cc 	andi	r2,r17,7
    cfc4:	103f9e1e 	bne	r2,zero,ce40 <__alt_data_end+0xfffeda40>
    cfc8:	1804977a 	slli	r2,r3,29
    cfcc:	8822d0fa 	srli	r17,r17,3
    cfd0:	1810d0fa 	srli	r8,r3,3
    cfd4:	9100004c 	andi	r4,r18,1
    cfd8:	1444b03a 	or	r2,r2,r17
    cfdc:	00c1ffc4 	movi	r3,2047
    cfe0:	80c02826 	beq	r16,r3,d084 <__subdf3+0x2d0>
    cfe4:	01400434 	movhi	r5,16
    cfe8:	297fffc4 	addi	r5,r5,-1
    cfec:	80e0703a 	and	r16,r16,r3
    cff0:	414a703a 	and	r5,r8,r5
    cff4:	003fa806 	br	ce98 <__alt_data_end+0xfffeda98>
    cff8:	0080630e 	bge	zero,r2,d188 <__subdf3+0x3d4>
    cffc:	48003026 	beq	r9,zero,d0c0 <__subdf3+0x30c>
    d000:	0101ffc4 	movi	r4,2047
    d004:	813f8c26 	beq	r16,r4,ce38 <__alt_data_end+0xfffeda38>
    d008:	29402034 	orhi	r5,r5,128
    d00c:	01000e04 	movi	r4,56
    d010:	2080a90e 	bge	r4,r2,d2b8 <__subdf3+0x504>
    d014:	298cb03a 	or	r6,r5,r6
    d018:	3012c03a 	cmpne	r9,r6,zero
    d01c:	0005883a 	mov	r2,zero
    d020:	4c53883a 	add	r9,r9,r17
    d024:	4c63803a 	cmpltu	r17,r9,r17
    d028:	10c7883a 	add	r3,r2,r3
    d02c:	88c7883a 	add	r3,r17,r3
    d030:	4823883a 	mov	r17,r9
    d034:	1880202c 	andhi	r2,r3,128
    d038:	1000d026 	beq	r2,zero,d37c <__subdf3+0x5c8>
    d03c:	84000044 	addi	r16,r16,1
    d040:	0081ffc4 	movi	r2,2047
    d044:	8080fe26 	beq	r16,r2,d440 <__subdf3+0x68c>
    d048:	00bfe034 	movhi	r2,65408
    d04c:	10bfffc4 	addi	r2,r2,-1
    d050:	1886703a 	and	r3,r3,r2
    d054:	880ad07a 	srli	r5,r17,1
    d058:	180497fa 	slli	r2,r3,31
    d05c:	8900004c 	andi	r4,r17,1
    d060:	2922b03a 	or	r17,r5,r4
    d064:	1806d07a 	srli	r3,r3,1
    d068:	1462b03a 	or	r17,r2,r17
    d06c:	3825883a 	mov	r18,r7
    d070:	003f7106 	br	ce38 <__alt_data_end+0xfffeda38>
    d074:	2984b03a 	or	r2,r5,r6
    d078:	103f6826 	beq	r2,zero,ce1c <__alt_data_end+0xfffeda1c>
    d07c:	39c03fcc 	andi	r7,r7,255
    d080:	003f6706 	br	ce20 <__alt_data_end+0xfffeda20>
    d084:	4086b03a 	or	r3,r8,r2
    d088:	18015226 	beq	r3,zero,d5d4 <__subdf3+0x820>
    d08c:	00c00434 	movhi	r3,16
    d090:	41400234 	orhi	r5,r8,8
    d094:	18ffffc4 	addi	r3,r3,-1
    d098:	28ca703a 	and	r5,r5,r3
    d09c:	003f7e06 	br	ce98 <__alt_data_end+0xfffeda98>
    d0a0:	10bfffc4 	addi	r2,r2,-1
    d0a4:	1000491e 	bne	r2,zero,d1cc <__subdf3+0x418>
    d0a8:	898fc83a 	sub	r7,r17,r6
    d0ac:	89e3803a 	cmpltu	r17,r17,r7
    d0b0:	1947c83a 	sub	r3,r3,r5
    d0b4:	1c47c83a 	sub	r3,r3,r17
    d0b8:	3823883a 	mov	r17,r7
    d0bc:	003f9b06 	br	cf2c <__alt_data_end+0xfffedb2c>
    d0c0:	2988b03a 	or	r4,r5,r6
    d0c4:	203f5c26 	beq	r4,zero,ce38 <__alt_data_end+0xfffeda38>
    d0c8:	10bfffc4 	addi	r2,r2,-1
    d0cc:	1000931e 	bne	r2,zero,d31c <__subdf3+0x568>
    d0d0:	898d883a 	add	r6,r17,r6
    d0d4:	3463803a 	cmpltu	r17,r6,r17
    d0d8:	1947883a 	add	r3,r3,r5
    d0dc:	88c7883a 	add	r3,r17,r3
    d0e0:	3023883a 	mov	r17,r6
    d0e4:	003fd306 	br	d034 <__alt_data_end+0xfffedc34>
    d0e8:	1000541e 	bne	r2,zero,d23c <__subdf3+0x488>
    d0ec:	80800044 	addi	r2,r16,1
    d0f0:	1081ffcc 	andi	r2,r2,2047
    d0f4:	01000044 	movi	r4,1
    d0f8:	2080a20e 	bge	r4,r2,d384 <__subdf3+0x5d0>
    d0fc:	8989c83a 	sub	r4,r17,r6
    d100:	8905803a 	cmpltu	r2,r17,r4
    d104:	1967c83a 	sub	r19,r3,r5
    d108:	98a7c83a 	sub	r19,r19,r2
    d10c:	9880202c 	andhi	r2,r19,128
    d110:	10006326 	beq	r2,zero,d2a0 <__subdf3+0x4ec>
    d114:	3463c83a 	sub	r17,r6,r17
    d118:	28c7c83a 	sub	r3,r5,r3
    d11c:	344d803a 	cmpltu	r6,r6,r17
    d120:	19a7c83a 	sub	r19,r3,r6
    d124:	3825883a 	mov	r18,r7
    d128:	983f861e 	bne	r19,zero,cf44 <__alt_data_end+0xfffedb44>
    d12c:	8809883a 	mov	r4,r17
    d130:	000d8b40 	call	d8b4 <__clzsi2>
    d134:	10800804 	addi	r2,r2,32
    d138:	113ffe04 	addi	r4,r2,-8
    d13c:	00c007c4 	movi	r3,31
    d140:	193f850e 	bge	r3,r4,cf58 <__alt_data_end+0xfffedb58>
    d144:	10bff604 	addi	r2,r2,-40
    d148:	8884983a 	sll	r2,r17,r2
    d14c:	0023883a 	mov	r17,zero
    d150:	243f880e 	bge	r4,r16,cf74 <__alt_data_end+0xfffedb74>
    d154:	00ffe034 	movhi	r3,65408
    d158:	18ffffc4 	addi	r3,r3,-1
    d15c:	8121c83a 	sub	r16,r16,r4
    d160:	10c6703a 	and	r3,r2,r3
    d164:	003f3406 	br	ce38 <__alt_data_end+0xfffeda38>
    d168:	9100004c 	andi	r4,r18,1
    d16c:	000b883a 	mov	r5,zero
    d170:	0005883a 	mov	r2,zero
    d174:	003f4806 	br	ce98 <__alt_data_end+0xfffeda98>
    d178:	298cb03a 	or	r6,r5,r6
    d17c:	300cc03a 	cmpne	r6,r6,zero
    d180:	0005883a 	mov	r2,zero
    d184:	003f6406 	br	cf18 <__alt_data_end+0xfffedb18>
    d188:	10009a1e 	bne	r2,zero,d3f4 <__subdf3+0x640>
    d18c:	82400044 	addi	r9,r16,1
    d190:	4881ffcc 	andi	r2,r9,2047
    d194:	02800044 	movi	r10,1
    d198:	5080670e 	bge	r10,r2,d338 <__subdf3+0x584>
    d19c:	0081ffc4 	movi	r2,2047
    d1a0:	4880af26 	beq	r9,r2,d460 <__subdf3+0x6ac>
    d1a4:	898d883a 	add	r6,r17,r6
    d1a8:	1945883a 	add	r2,r3,r5
    d1ac:	3447803a 	cmpltu	r3,r6,r17
    d1b0:	1887883a 	add	r3,r3,r2
    d1b4:	182297fa 	slli	r17,r3,31
    d1b8:	300cd07a 	srli	r6,r6,1
    d1bc:	1806d07a 	srli	r3,r3,1
    d1c0:	4821883a 	mov	r16,r9
    d1c4:	89a2b03a 	or	r17,r17,r6
    d1c8:	003f1b06 	br	ce38 <__alt_data_end+0xfffeda38>
    d1cc:	0101ffc4 	movi	r4,2047
    d1d0:	813f441e 	bne	r16,r4,cee4 <__alt_data_end+0xfffedae4>
    d1d4:	003f1806 	br	ce38 <__alt_data_end+0xfffeda38>
    d1d8:	843ff844 	addi	r16,r16,-31
    d1dc:	01400804 	movi	r5,32
    d1e0:	1408d83a 	srl	r4,r2,r16
    d1e4:	19405026 	beq	r3,r5,d328 <__subdf3+0x574>
    d1e8:	01401004 	movi	r5,64
    d1ec:	28c7c83a 	sub	r3,r5,r3
    d1f0:	10c4983a 	sll	r2,r2,r3
    d1f4:	88a2b03a 	or	r17,r17,r2
    d1f8:	8822c03a 	cmpne	r17,r17,zero
    d1fc:	2462b03a 	or	r17,r4,r17
    d200:	0007883a 	mov	r3,zero
    d204:	0021883a 	mov	r16,zero
    d208:	003f6d06 	br	cfc0 <__alt_data_end+0xfffedbc0>
    d20c:	11fff804 	addi	r7,r2,-32
    d210:	01000804 	movi	r4,32
    d214:	29ced83a 	srl	r7,r5,r7
    d218:	11004526 	beq	r2,r4,d330 <__subdf3+0x57c>
    d21c:	01001004 	movi	r4,64
    d220:	2089c83a 	sub	r4,r4,r2
    d224:	2904983a 	sll	r2,r5,r4
    d228:	118cb03a 	or	r6,r2,r6
    d22c:	300cc03a 	cmpne	r6,r6,zero
    d230:	398cb03a 	or	r6,r7,r6
    d234:	0005883a 	mov	r2,zero
    d238:	003f3706 	br	cf18 <__alt_data_end+0xfffedb18>
    d23c:	80002a26 	beq	r16,zero,d2e8 <__subdf3+0x534>
    d240:	0101ffc4 	movi	r4,2047
    d244:	49006626 	beq	r9,r4,d3e0 <__subdf3+0x62c>
    d248:	0085c83a 	sub	r2,zero,r2
    d24c:	18c02034 	orhi	r3,r3,128
    d250:	01000e04 	movi	r4,56
    d254:	20807e16 	blt	r4,r2,d450 <__subdf3+0x69c>
    d258:	010007c4 	movi	r4,31
    d25c:	2080e716 	blt	r4,r2,d5fc <__subdf3+0x848>
    d260:	01000804 	movi	r4,32
    d264:	2089c83a 	sub	r4,r4,r2
    d268:	1914983a 	sll	r10,r3,r4
    d26c:	8890d83a 	srl	r8,r17,r2
    d270:	8908983a 	sll	r4,r17,r4
    d274:	1884d83a 	srl	r2,r3,r2
    d278:	5222b03a 	or	r17,r10,r8
    d27c:	2006c03a 	cmpne	r3,r4,zero
    d280:	88e2b03a 	or	r17,r17,r3
    d284:	3463c83a 	sub	r17,r6,r17
    d288:	2885c83a 	sub	r2,r5,r2
    d28c:	344d803a 	cmpltu	r6,r6,r17
    d290:	1187c83a 	sub	r3,r2,r6
    d294:	4821883a 	mov	r16,r9
    d298:	3825883a 	mov	r18,r7
    d29c:	003f2306 	br	cf2c <__alt_data_end+0xfffedb2c>
    d2a0:	24d0b03a 	or	r8,r4,r19
    d2a4:	40001b1e 	bne	r8,zero,d314 <__subdf3+0x560>
    d2a8:	0005883a 	mov	r2,zero
    d2ac:	0009883a 	mov	r4,zero
    d2b0:	0021883a 	mov	r16,zero
    d2b4:	003f4906 	br	cfdc <__alt_data_end+0xfffedbdc>
    d2b8:	010007c4 	movi	r4,31
    d2bc:	20803a16 	blt	r4,r2,d3a8 <__subdf3+0x5f4>
    d2c0:	01000804 	movi	r4,32
    d2c4:	2089c83a 	sub	r4,r4,r2
    d2c8:	2912983a 	sll	r9,r5,r4
    d2cc:	3090d83a 	srl	r8,r6,r2
    d2d0:	3108983a 	sll	r4,r6,r4
    d2d4:	2884d83a 	srl	r2,r5,r2
    d2d8:	4a12b03a 	or	r9,r9,r8
    d2dc:	2008c03a 	cmpne	r4,r4,zero
    d2e0:	4912b03a 	or	r9,r9,r4
    d2e4:	003f4e06 	br	d020 <__alt_data_end+0xfffedc20>
    d2e8:	1c48b03a 	or	r4,r3,r17
    d2ec:	20003c26 	beq	r4,zero,d3e0 <__subdf3+0x62c>
    d2f0:	0084303a 	nor	r2,zero,r2
    d2f4:	1000381e 	bne	r2,zero,d3d8 <__subdf3+0x624>
    d2f8:	3463c83a 	sub	r17,r6,r17
    d2fc:	28c5c83a 	sub	r2,r5,r3
    d300:	344d803a 	cmpltu	r6,r6,r17
    d304:	1187c83a 	sub	r3,r2,r6
    d308:	4821883a 	mov	r16,r9
    d30c:	3825883a 	mov	r18,r7
    d310:	003f0606 	br	cf2c <__alt_data_end+0xfffedb2c>
    d314:	2023883a 	mov	r17,r4
    d318:	003f0906 	br	cf40 <__alt_data_end+0xfffedb40>
    d31c:	0101ffc4 	movi	r4,2047
    d320:	813f3a1e 	bne	r16,r4,d00c <__alt_data_end+0xfffedc0c>
    d324:	003ec406 	br	ce38 <__alt_data_end+0xfffeda38>
    d328:	0005883a 	mov	r2,zero
    d32c:	003fb106 	br	d1f4 <__alt_data_end+0xfffeddf4>
    d330:	0005883a 	mov	r2,zero
    d334:	003fbc06 	br	d228 <__alt_data_end+0xfffede28>
    d338:	1c44b03a 	or	r2,r3,r17
    d33c:	80008e1e 	bne	r16,zero,d578 <__subdf3+0x7c4>
    d340:	1000c826 	beq	r2,zero,d664 <__subdf3+0x8b0>
    d344:	2984b03a 	or	r2,r5,r6
    d348:	103ebb26 	beq	r2,zero,ce38 <__alt_data_end+0xfffeda38>
    d34c:	8989883a 	add	r4,r17,r6
    d350:	1945883a 	add	r2,r3,r5
    d354:	2447803a 	cmpltu	r3,r4,r17
    d358:	1887883a 	add	r3,r3,r2
    d35c:	1880202c 	andhi	r2,r3,128
    d360:	2023883a 	mov	r17,r4
    d364:	103f1626 	beq	r2,zero,cfc0 <__alt_data_end+0xfffedbc0>
    d368:	00bfe034 	movhi	r2,65408
    d36c:	10bfffc4 	addi	r2,r2,-1
    d370:	5021883a 	mov	r16,r10
    d374:	1886703a 	and	r3,r3,r2
    d378:	003eaf06 	br	ce38 <__alt_data_end+0xfffeda38>
    d37c:	3825883a 	mov	r18,r7
    d380:	003f0f06 	br	cfc0 <__alt_data_end+0xfffedbc0>
    d384:	1c44b03a 	or	r2,r3,r17
    d388:	8000251e 	bne	r16,zero,d420 <__subdf3+0x66c>
    d38c:	1000661e 	bne	r2,zero,d528 <__subdf3+0x774>
    d390:	2990b03a 	or	r8,r5,r6
    d394:	40009626 	beq	r8,zero,d5f0 <__subdf3+0x83c>
    d398:	2807883a 	mov	r3,r5
    d39c:	3023883a 	mov	r17,r6
    d3a0:	3825883a 	mov	r18,r7
    d3a4:	003ea406 	br	ce38 <__alt_data_end+0xfffeda38>
    d3a8:	127ff804 	addi	r9,r2,-32
    d3ac:	01000804 	movi	r4,32
    d3b0:	2a52d83a 	srl	r9,r5,r9
    d3b4:	11008c26 	beq	r2,r4,d5e8 <__subdf3+0x834>
    d3b8:	01001004 	movi	r4,64
    d3bc:	2085c83a 	sub	r2,r4,r2
    d3c0:	2884983a 	sll	r2,r5,r2
    d3c4:	118cb03a 	or	r6,r2,r6
    d3c8:	300cc03a 	cmpne	r6,r6,zero
    d3cc:	4992b03a 	or	r9,r9,r6
    d3d0:	0005883a 	mov	r2,zero
    d3d4:	003f1206 	br	d020 <__alt_data_end+0xfffedc20>
    d3d8:	0101ffc4 	movi	r4,2047
    d3dc:	493f9c1e 	bne	r9,r4,d250 <__alt_data_end+0xfffede50>
    d3e0:	2807883a 	mov	r3,r5
    d3e4:	3023883a 	mov	r17,r6
    d3e8:	4821883a 	mov	r16,r9
    d3ec:	3825883a 	mov	r18,r7
    d3f0:	003e9106 	br	ce38 <__alt_data_end+0xfffeda38>
    d3f4:	80001f1e 	bne	r16,zero,d474 <__subdf3+0x6c0>
    d3f8:	1c48b03a 	or	r4,r3,r17
    d3fc:	20005a26 	beq	r4,zero,d568 <__subdf3+0x7b4>
    d400:	0084303a 	nor	r2,zero,r2
    d404:	1000561e 	bne	r2,zero,d560 <__subdf3+0x7ac>
    d408:	89a3883a 	add	r17,r17,r6
    d40c:	1945883a 	add	r2,r3,r5
    d410:	898d803a 	cmpltu	r6,r17,r6
    d414:	3087883a 	add	r3,r6,r2
    d418:	4821883a 	mov	r16,r9
    d41c:	003f0506 	br	d034 <__alt_data_end+0xfffedc34>
    d420:	10002b1e 	bne	r2,zero,d4d0 <__subdf3+0x71c>
    d424:	2984b03a 	or	r2,r5,r6
    d428:	10008026 	beq	r2,zero,d62c <__subdf3+0x878>
    d42c:	2807883a 	mov	r3,r5
    d430:	3023883a 	mov	r17,r6
    d434:	3825883a 	mov	r18,r7
    d438:	0401ffc4 	movi	r16,2047
    d43c:	003e7e06 	br	ce38 <__alt_data_end+0xfffeda38>
    d440:	3809883a 	mov	r4,r7
    d444:	0011883a 	mov	r8,zero
    d448:	0005883a 	mov	r2,zero
    d44c:	003ee306 	br	cfdc <__alt_data_end+0xfffedbdc>
    d450:	1c62b03a 	or	r17,r3,r17
    d454:	8822c03a 	cmpne	r17,r17,zero
    d458:	0005883a 	mov	r2,zero
    d45c:	003f8906 	br	d284 <__alt_data_end+0xfffede84>
    d460:	3809883a 	mov	r4,r7
    d464:	4821883a 	mov	r16,r9
    d468:	0011883a 	mov	r8,zero
    d46c:	0005883a 	mov	r2,zero
    d470:	003eda06 	br	cfdc <__alt_data_end+0xfffedbdc>
    d474:	0101ffc4 	movi	r4,2047
    d478:	49003b26 	beq	r9,r4,d568 <__subdf3+0x7b4>
    d47c:	0085c83a 	sub	r2,zero,r2
    d480:	18c02034 	orhi	r3,r3,128
    d484:	01000e04 	movi	r4,56
    d488:	20806e16 	blt	r4,r2,d644 <__subdf3+0x890>
    d48c:	010007c4 	movi	r4,31
    d490:	20807716 	blt	r4,r2,d670 <__subdf3+0x8bc>
    d494:	01000804 	movi	r4,32
    d498:	2089c83a 	sub	r4,r4,r2
    d49c:	1914983a 	sll	r10,r3,r4
    d4a0:	8890d83a 	srl	r8,r17,r2
    d4a4:	8908983a 	sll	r4,r17,r4
    d4a8:	1884d83a 	srl	r2,r3,r2
    d4ac:	5222b03a 	or	r17,r10,r8
    d4b0:	2006c03a 	cmpne	r3,r4,zero
    d4b4:	88e2b03a 	or	r17,r17,r3
    d4b8:	89a3883a 	add	r17,r17,r6
    d4bc:	1145883a 	add	r2,r2,r5
    d4c0:	898d803a 	cmpltu	r6,r17,r6
    d4c4:	3087883a 	add	r3,r6,r2
    d4c8:	4821883a 	mov	r16,r9
    d4cc:	003ed906 	br	d034 <__alt_data_end+0xfffedc34>
    d4d0:	2984b03a 	or	r2,r5,r6
    d4d4:	10004226 	beq	r2,zero,d5e0 <__subdf3+0x82c>
    d4d8:	1808d0fa 	srli	r4,r3,3
    d4dc:	8822d0fa 	srli	r17,r17,3
    d4e0:	1806977a 	slli	r3,r3,29
    d4e4:	2080022c 	andhi	r2,r4,8
    d4e8:	1c62b03a 	or	r17,r3,r17
    d4ec:	10000826 	beq	r2,zero,d510 <__subdf3+0x75c>
    d4f0:	2812d0fa 	srli	r9,r5,3
    d4f4:	4880022c 	andhi	r2,r9,8
    d4f8:	1000051e 	bne	r2,zero,d510 <__subdf3+0x75c>
    d4fc:	300cd0fa 	srli	r6,r6,3
    d500:	2804977a 	slli	r2,r5,29
    d504:	4809883a 	mov	r4,r9
    d508:	3825883a 	mov	r18,r7
    d50c:	11a2b03a 	or	r17,r2,r6
    d510:	8806d77a 	srli	r3,r17,29
    d514:	200890fa 	slli	r4,r4,3
    d518:	882290fa 	slli	r17,r17,3
    d51c:	0401ffc4 	movi	r16,2047
    d520:	1906b03a 	or	r3,r3,r4
    d524:	003e4406 	br	ce38 <__alt_data_end+0xfffeda38>
    d528:	2984b03a 	or	r2,r5,r6
    d52c:	103e4226 	beq	r2,zero,ce38 <__alt_data_end+0xfffeda38>
    d530:	8989c83a 	sub	r4,r17,r6
    d534:	8911803a 	cmpltu	r8,r17,r4
    d538:	1945c83a 	sub	r2,r3,r5
    d53c:	1205c83a 	sub	r2,r2,r8
    d540:	1200202c 	andhi	r8,r2,128
    d544:	403e9a26 	beq	r8,zero,cfb0 <__alt_data_end+0xfffedbb0>
    d548:	3463c83a 	sub	r17,r6,r17
    d54c:	28c5c83a 	sub	r2,r5,r3
    d550:	344d803a 	cmpltu	r6,r6,r17
    d554:	1187c83a 	sub	r3,r2,r6
    d558:	3825883a 	mov	r18,r7
    d55c:	003e3606 	br	ce38 <__alt_data_end+0xfffeda38>
    d560:	0101ffc4 	movi	r4,2047
    d564:	493fc71e 	bne	r9,r4,d484 <__alt_data_end+0xfffee084>
    d568:	2807883a 	mov	r3,r5
    d56c:	3023883a 	mov	r17,r6
    d570:	4821883a 	mov	r16,r9
    d574:	003e3006 	br	ce38 <__alt_data_end+0xfffeda38>
    d578:	10003626 	beq	r2,zero,d654 <__subdf3+0x8a0>
    d57c:	2984b03a 	or	r2,r5,r6
    d580:	10001726 	beq	r2,zero,d5e0 <__subdf3+0x82c>
    d584:	1808d0fa 	srli	r4,r3,3
    d588:	8822d0fa 	srli	r17,r17,3
    d58c:	1806977a 	slli	r3,r3,29
    d590:	2080022c 	andhi	r2,r4,8
    d594:	1c62b03a 	or	r17,r3,r17
    d598:	10000726 	beq	r2,zero,d5b8 <__subdf3+0x804>
    d59c:	2812d0fa 	srli	r9,r5,3
    d5a0:	4880022c 	andhi	r2,r9,8
    d5a4:	1000041e 	bne	r2,zero,d5b8 <__subdf3+0x804>
    d5a8:	300cd0fa 	srli	r6,r6,3
    d5ac:	2804977a 	slli	r2,r5,29
    d5b0:	4809883a 	mov	r4,r9
    d5b4:	11a2b03a 	or	r17,r2,r6
    d5b8:	8806d77a 	srli	r3,r17,29
    d5bc:	200890fa 	slli	r4,r4,3
    d5c0:	882290fa 	slli	r17,r17,3
    d5c4:	3825883a 	mov	r18,r7
    d5c8:	1906b03a 	or	r3,r3,r4
    d5cc:	0401ffc4 	movi	r16,2047
    d5d0:	003e1906 	br	ce38 <__alt_data_end+0xfffeda38>
    d5d4:	000b883a 	mov	r5,zero
    d5d8:	0005883a 	mov	r2,zero
    d5dc:	003e2e06 	br	ce98 <__alt_data_end+0xfffeda98>
    d5e0:	0401ffc4 	movi	r16,2047
    d5e4:	003e1406 	br	ce38 <__alt_data_end+0xfffeda38>
    d5e8:	0005883a 	mov	r2,zero
    d5ec:	003f7506 	br	d3c4 <__alt_data_end+0xfffedfc4>
    d5f0:	0005883a 	mov	r2,zero
    d5f4:	0009883a 	mov	r4,zero
    d5f8:	003e7806 	br	cfdc <__alt_data_end+0xfffedbdc>
    d5fc:	123ff804 	addi	r8,r2,-32
    d600:	01000804 	movi	r4,32
    d604:	1a10d83a 	srl	r8,r3,r8
    d608:	11002526 	beq	r2,r4,d6a0 <__subdf3+0x8ec>
    d60c:	01001004 	movi	r4,64
    d610:	2085c83a 	sub	r2,r4,r2
    d614:	1884983a 	sll	r2,r3,r2
    d618:	1444b03a 	or	r2,r2,r17
    d61c:	1004c03a 	cmpne	r2,r2,zero
    d620:	40a2b03a 	or	r17,r8,r2
    d624:	0005883a 	mov	r2,zero
    d628:	003f1606 	br	d284 <__alt_data_end+0xfffede84>
    d62c:	02000434 	movhi	r8,16
    d630:	0009883a 	mov	r4,zero
    d634:	423fffc4 	addi	r8,r8,-1
    d638:	00bfffc4 	movi	r2,-1
    d63c:	0401ffc4 	movi	r16,2047
    d640:	003e6606 	br	cfdc <__alt_data_end+0xfffedbdc>
    d644:	1c62b03a 	or	r17,r3,r17
    d648:	8822c03a 	cmpne	r17,r17,zero
    d64c:	0005883a 	mov	r2,zero
    d650:	003f9906 	br	d4b8 <__alt_data_end+0xfffee0b8>
    d654:	2807883a 	mov	r3,r5
    d658:	3023883a 	mov	r17,r6
    d65c:	0401ffc4 	movi	r16,2047
    d660:	003df506 	br	ce38 <__alt_data_end+0xfffeda38>
    d664:	2807883a 	mov	r3,r5
    d668:	3023883a 	mov	r17,r6
    d66c:	003df206 	br	ce38 <__alt_data_end+0xfffeda38>
    d670:	123ff804 	addi	r8,r2,-32
    d674:	01000804 	movi	r4,32
    d678:	1a10d83a 	srl	r8,r3,r8
    d67c:	11000a26 	beq	r2,r4,d6a8 <__subdf3+0x8f4>
    d680:	01001004 	movi	r4,64
    d684:	2085c83a 	sub	r2,r4,r2
    d688:	1884983a 	sll	r2,r3,r2
    d68c:	1444b03a 	or	r2,r2,r17
    d690:	1004c03a 	cmpne	r2,r2,zero
    d694:	40a2b03a 	or	r17,r8,r2
    d698:	0005883a 	mov	r2,zero
    d69c:	003f8606 	br	d4b8 <__alt_data_end+0xfffee0b8>
    d6a0:	0005883a 	mov	r2,zero
    d6a4:	003fdc06 	br	d618 <__alt_data_end+0xfffee218>
    d6a8:	0005883a 	mov	r2,zero
    d6ac:	003ff706 	br	d68c <__alt_data_end+0xfffee28c>

0000d6b0 <__fixdfsi>:
    d6b0:	280cd53a 	srli	r6,r5,20
    d6b4:	00c00434 	movhi	r3,16
    d6b8:	18ffffc4 	addi	r3,r3,-1
    d6bc:	3181ffcc 	andi	r6,r6,2047
    d6c0:	01c0ff84 	movi	r7,1022
    d6c4:	28c6703a 	and	r3,r5,r3
    d6c8:	280ad7fa 	srli	r5,r5,31
    d6cc:	3980120e 	bge	r7,r6,d718 <__fixdfsi+0x68>
    d6d0:	00810744 	movi	r2,1053
    d6d4:	11800c16 	blt	r2,r6,d708 <__fixdfsi+0x58>
    d6d8:	00810cc4 	movi	r2,1075
    d6dc:	1185c83a 	sub	r2,r2,r6
    d6e0:	01c007c4 	movi	r7,31
    d6e4:	18c00434 	orhi	r3,r3,16
    d6e8:	38800d16 	blt	r7,r2,d720 <__fixdfsi+0x70>
    d6ec:	31befb44 	addi	r6,r6,-1043
    d6f0:	2084d83a 	srl	r2,r4,r2
    d6f4:	1986983a 	sll	r3,r3,r6
    d6f8:	1884b03a 	or	r2,r3,r2
    d6fc:	28000726 	beq	r5,zero,d71c <__fixdfsi+0x6c>
    d700:	0085c83a 	sub	r2,zero,r2
    d704:	f800283a 	ret
    d708:	00a00034 	movhi	r2,32768
    d70c:	10bfffc4 	addi	r2,r2,-1
    d710:	2885883a 	add	r2,r5,r2
    d714:	f800283a 	ret
    d718:	0005883a 	mov	r2,zero
    d71c:	f800283a 	ret
    d720:	008104c4 	movi	r2,1043
    d724:	1185c83a 	sub	r2,r2,r6
    d728:	1884d83a 	srl	r2,r3,r2
    d72c:	003ff306 	br	d6fc <__alt_data_end+0xfffee2fc>

0000d730 <__floatsidf>:
    d730:	defffd04 	addi	sp,sp,-12
    d734:	dfc00215 	stw	ra,8(sp)
    d738:	dc400115 	stw	r17,4(sp)
    d73c:	dc000015 	stw	r16,0(sp)
    d740:	20002b26 	beq	r4,zero,d7f0 <__floatsidf+0xc0>
    d744:	2023883a 	mov	r17,r4
    d748:	2020d7fa 	srli	r16,r4,31
    d74c:	20002d16 	blt	r4,zero,d804 <__floatsidf+0xd4>
    d750:	8809883a 	mov	r4,r17
    d754:	000d8b40 	call	d8b4 <__clzsi2>
    d758:	01410784 	movi	r5,1054
    d75c:	288bc83a 	sub	r5,r5,r2
    d760:	01010cc4 	movi	r4,1075
    d764:	2149c83a 	sub	r4,r4,r5
    d768:	00c007c4 	movi	r3,31
    d76c:	1900160e 	bge	r3,r4,d7c8 <__floatsidf+0x98>
    d770:	00c104c4 	movi	r3,1043
    d774:	1947c83a 	sub	r3,r3,r5
    d778:	88c6983a 	sll	r3,r17,r3
    d77c:	00800434 	movhi	r2,16
    d780:	10bfffc4 	addi	r2,r2,-1
    d784:	1886703a 	and	r3,r3,r2
    d788:	2941ffcc 	andi	r5,r5,2047
    d78c:	800d883a 	mov	r6,r16
    d790:	0005883a 	mov	r2,zero
    d794:	280a953a 	slli	r5,r5,20
    d798:	31803fcc 	andi	r6,r6,255
    d79c:	01000434 	movhi	r4,16
    d7a0:	300c97fa 	slli	r6,r6,31
    d7a4:	213fffc4 	addi	r4,r4,-1
    d7a8:	1906703a 	and	r3,r3,r4
    d7ac:	1946b03a 	or	r3,r3,r5
    d7b0:	1986b03a 	or	r3,r3,r6
    d7b4:	dfc00217 	ldw	ra,8(sp)
    d7b8:	dc400117 	ldw	r17,4(sp)
    d7bc:	dc000017 	ldw	r16,0(sp)
    d7c0:	dec00304 	addi	sp,sp,12
    d7c4:	f800283a 	ret
    d7c8:	00c002c4 	movi	r3,11
    d7cc:	1887c83a 	sub	r3,r3,r2
    d7d0:	88c6d83a 	srl	r3,r17,r3
    d7d4:	8904983a 	sll	r2,r17,r4
    d7d8:	01000434 	movhi	r4,16
    d7dc:	213fffc4 	addi	r4,r4,-1
    d7e0:	2941ffcc 	andi	r5,r5,2047
    d7e4:	1906703a 	and	r3,r3,r4
    d7e8:	800d883a 	mov	r6,r16
    d7ec:	003fe906 	br	d794 <__alt_data_end+0xfffee394>
    d7f0:	000d883a 	mov	r6,zero
    d7f4:	000b883a 	mov	r5,zero
    d7f8:	0007883a 	mov	r3,zero
    d7fc:	0005883a 	mov	r2,zero
    d800:	003fe406 	br	d794 <__alt_data_end+0xfffee394>
    d804:	0123c83a 	sub	r17,zero,r4
    d808:	003fd106 	br	d750 <__alt_data_end+0xfffee350>

0000d80c <__floatunsidf>:
    d80c:	defffe04 	addi	sp,sp,-8
    d810:	dc000015 	stw	r16,0(sp)
    d814:	dfc00115 	stw	ra,4(sp)
    d818:	2021883a 	mov	r16,r4
    d81c:	20002226 	beq	r4,zero,d8a8 <__floatunsidf+0x9c>
    d820:	000d8b40 	call	d8b4 <__clzsi2>
    d824:	01010784 	movi	r4,1054
    d828:	2089c83a 	sub	r4,r4,r2
    d82c:	01810cc4 	movi	r6,1075
    d830:	310dc83a 	sub	r6,r6,r4
    d834:	00c007c4 	movi	r3,31
    d838:	1980120e 	bge	r3,r6,d884 <__floatunsidf+0x78>
    d83c:	00c104c4 	movi	r3,1043
    d840:	1907c83a 	sub	r3,r3,r4
    d844:	80ca983a 	sll	r5,r16,r3
    d848:	00800434 	movhi	r2,16
    d84c:	10bfffc4 	addi	r2,r2,-1
    d850:	2101ffcc 	andi	r4,r4,2047
    d854:	0021883a 	mov	r16,zero
    d858:	288a703a 	and	r5,r5,r2
    d85c:	2008953a 	slli	r4,r4,20
    d860:	00c00434 	movhi	r3,16
    d864:	18ffffc4 	addi	r3,r3,-1
    d868:	28c6703a 	and	r3,r5,r3
    d86c:	8005883a 	mov	r2,r16
    d870:	1906b03a 	or	r3,r3,r4
    d874:	dfc00117 	ldw	ra,4(sp)
    d878:	dc000017 	ldw	r16,0(sp)
    d87c:	dec00204 	addi	sp,sp,8
    d880:	f800283a 	ret
    d884:	00c002c4 	movi	r3,11
    d888:	188bc83a 	sub	r5,r3,r2
    d88c:	814ad83a 	srl	r5,r16,r5
    d890:	00c00434 	movhi	r3,16
    d894:	18ffffc4 	addi	r3,r3,-1
    d898:	81a0983a 	sll	r16,r16,r6
    d89c:	2101ffcc 	andi	r4,r4,2047
    d8a0:	28ca703a 	and	r5,r5,r3
    d8a4:	003fed06 	br	d85c <__alt_data_end+0xfffee45c>
    d8a8:	0009883a 	mov	r4,zero
    d8ac:	000b883a 	mov	r5,zero
    d8b0:	003fea06 	br	d85c <__alt_data_end+0xfffee45c>

0000d8b4 <__clzsi2>:
    d8b4:	00bfffd4 	movui	r2,65535
    d8b8:	11000536 	bltu	r2,r4,d8d0 <__clzsi2+0x1c>
    d8bc:	00803fc4 	movi	r2,255
    d8c0:	11000f36 	bltu	r2,r4,d900 <__clzsi2+0x4c>
    d8c4:	00800804 	movi	r2,32
    d8c8:	0007883a 	mov	r3,zero
    d8cc:	00000506 	br	d8e4 <__clzsi2+0x30>
    d8d0:	00804034 	movhi	r2,256
    d8d4:	10bfffc4 	addi	r2,r2,-1
    d8d8:	11000c2e 	bgeu	r2,r4,d90c <__clzsi2+0x58>
    d8dc:	00800204 	movi	r2,8
    d8e0:	00c00604 	movi	r3,24
    d8e4:	20c8d83a 	srl	r4,r4,r3
    d8e8:	00c00074 	movhi	r3,1
    d8ec:	18c09404 	addi	r3,r3,592
    d8f0:	1909883a 	add	r4,r3,r4
    d8f4:	20c00003 	ldbu	r3,0(r4)
    d8f8:	10c5c83a 	sub	r2,r2,r3
    d8fc:	f800283a 	ret
    d900:	00800604 	movi	r2,24
    d904:	00c00204 	movi	r3,8
    d908:	003ff606 	br	d8e4 <__alt_data_end+0xfffee4e4>
    d90c:	00800404 	movi	r2,16
    d910:	1007883a 	mov	r3,r2
    d914:	003ff306 	br	d8e4 <__alt_data_end+0xfffee4e4>

0000d918 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d918:	defffe04 	addi	sp,sp,-8
    d91c:	dfc00115 	stw	ra,4(sp)
    d920:	df000015 	stw	fp,0(sp)
    d924:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d928:	d0a00b17 	ldw	r2,-32724(gp)
    d92c:	10000326 	beq	r2,zero,d93c <alt_get_errno+0x24>
    d930:	d0a00b17 	ldw	r2,-32724(gp)
    d934:	103ee83a 	callr	r2
    d938:	00000106 	br	d940 <alt_get_errno+0x28>
    d93c:	d0a6d904 	addi	r2,gp,-25756
}
    d940:	e037883a 	mov	sp,fp
    d944:	dfc00117 	ldw	ra,4(sp)
    d948:	df000017 	ldw	fp,0(sp)
    d94c:	dec00204 	addi	sp,sp,8
    d950:	f800283a 	ret

0000d954 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d954:	defffb04 	addi	sp,sp,-20
    d958:	dfc00415 	stw	ra,16(sp)
    d95c:	df000315 	stw	fp,12(sp)
    d960:	df000304 	addi	fp,sp,12
    d964:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d968:	e0bfff17 	ldw	r2,-4(fp)
    d96c:	10000816 	blt	r2,zero,d990 <close+0x3c>
    d970:	01400304 	movi	r5,12
    d974:	e13fff17 	ldw	r4,-4(fp)
    d978:	000b04c0 	call	b04c <__mulsi3>
    d97c:	1007883a 	mov	r3,r2
    d980:	00800074 	movhi	r2,1
    d984:	10831404 	addi	r2,r2,3152
    d988:	1885883a 	add	r2,r3,r2
    d98c:	00000106 	br	d994 <close+0x40>
    d990:	0005883a 	mov	r2,zero
    d994:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d998:	e0bffd17 	ldw	r2,-12(fp)
    d99c:	10001926 	beq	r2,zero,da04 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d9a0:	e0bffd17 	ldw	r2,-12(fp)
    d9a4:	10800017 	ldw	r2,0(r2)
    d9a8:	10800417 	ldw	r2,16(r2)
    d9ac:	10000626 	beq	r2,zero,d9c8 <close+0x74>
    d9b0:	e0bffd17 	ldw	r2,-12(fp)
    d9b4:	10800017 	ldw	r2,0(r2)
    d9b8:	10800417 	ldw	r2,16(r2)
    d9bc:	e13ffd17 	ldw	r4,-12(fp)
    d9c0:	103ee83a 	callr	r2
    d9c4:	00000106 	br	d9cc <close+0x78>
    d9c8:	0005883a 	mov	r2,zero
    d9cc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d9d0:	e13fff17 	ldw	r4,-4(fp)
    d9d4:	000e2dc0 	call	e2dc <alt_release_fd>
    if (rval < 0)
    d9d8:	e0bffe17 	ldw	r2,-8(fp)
    d9dc:	1000070e 	bge	r2,zero,d9fc <close+0xa8>
    {
      ALT_ERRNO = -rval;
    d9e0:	000d9180 	call	d918 <alt_get_errno>
    d9e4:	1007883a 	mov	r3,r2
    d9e8:	e0bffe17 	ldw	r2,-8(fp)
    d9ec:	0085c83a 	sub	r2,zero,r2
    d9f0:	18800015 	stw	r2,0(r3)
      return -1;
    d9f4:	00bfffc4 	movi	r2,-1
    d9f8:	00000706 	br	da18 <close+0xc4>
    }
    return 0;
    d9fc:	0005883a 	mov	r2,zero
    da00:	00000506 	br	da18 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    da04:	000d9180 	call	d918 <alt_get_errno>
    da08:	1007883a 	mov	r3,r2
    da0c:	00801444 	movi	r2,81
    da10:	18800015 	stw	r2,0(r3)
    return -1;
    da14:	00bfffc4 	movi	r2,-1
  }
}
    da18:	e037883a 	mov	sp,fp
    da1c:	dfc00117 	ldw	ra,4(sp)
    da20:	df000017 	ldw	fp,0(sp)
    da24:	dec00204 	addi	sp,sp,8
    da28:	f800283a 	ret

0000da2c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    da2c:	defffc04 	addi	sp,sp,-16
    da30:	df000315 	stw	fp,12(sp)
    da34:	df000304 	addi	fp,sp,12
    da38:	e13ffd15 	stw	r4,-12(fp)
    da3c:	e17ffe15 	stw	r5,-8(fp)
    da40:	e1bfff15 	stw	r6,-4(fp)
  return len;
    da44:	e0bfff17 	ldw	r2,-4(fp)
}
    da48:	e037883a 	mov	sp,fp
    da4c:	df000017 	ldw	fp,0(sp)
    da50:	dec00104 	addi	sp,sp,4
    da54:	f800283a 	ret

0000da58 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    da58:	defffe04 	addi	sp,sp,-8
    da5c:	dfc00115 	stw	ra,4(sp)
    da60:	df000015 	stw	fp,0(sp)
    da64:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    da68:	d0a00b17 	ldw	r2,-32724(gp)
    da6c:	10000326 	beq	r2,zero,da7c <alt_get_errno+0x24>
    da70:	d0a00b17 	ldw	r2,-32724(gp)
    da74:	103ee83a 	callr	r2
    da78:	00000106 	br	da80 <alt_get_errno+0x28>
    da7c:	d0a6d904 	addi	r2,gp,-25756
}
    da80:	e037883a 	mov	sp,fp
    da84:	dfc00117 	ldw	ra,4(sp)
    da88:	df000017 	ldw	fp,0(sp)
    da8c:	dec00204 	addi	sp,sp,8
    da90:	f800283a 	ret

0000da94 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    da94:	defffb04 	addi	sp,sp,-20
    da98:	dfc00415 	stw	ra,16(sp)
    da9c:	df000315 	stw	fp,12(sp)
    daa0:	df000304 	addi	fp,sp,12
    daa4:	e13ffe15 	stw	r4,-8(fp)
    daa8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    daac:	e0bffe17 	ldw	r2,-8(fp)
    dab0:	10000816 	blt	r2,zero,dad4 <fstat+0x40>
    dab4:	01400304 	movi	r5,12
    dab8:	e13ffe17 	ldw	r4,-8(fp)
    dabc:	000b04c0 	call	b04c <__mulsi3>
    dac0:	1007883a 	mov	r3,r2
    dac4:	00800074 	movhi	r2,1
    dac8:	10831404 	addi	r2,r2,3152
    dacc:	1885883a 	add	r2,r3,r2
    dad0:	00000106 	br	dad8 <fstat+0x44>
    dad4:	0005883a 	mov	r2,zero
    dad8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    dadc:	e0bffd17 	ldw	r2,-12(fp)
    dae0:	10001026 	beq	r2,zero,db24 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    dae4:	e0bffd17 	ldw	r2,-12(fp)
    dae8:	10800017 	ldw	r2,0(r2)
    daec:	10800817 	ldw	r2,32(r2)
    daf0:	10000726 	beq	r2,zero,db10 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    daf4:	e0bffd17 	ldw	r2,-12(fp)
    daf8:	10800017 	ldw	r2,0(r2)
    dafc:	10800817 	ldw	r2,32(r2)
    db00:	e17fff17 	ldw	r5,-4(fp)
    db04:	e13ffd17 	ldw	r4,-12(fp)
    db08:	103ee83a 	callr	r2
    db0c:	00000a06 	br	db38 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    db10:	e0bfff17 	ldw	r2,-4(fp)
    db14:	00c80004 	movi	r3,8192
    db18:	10c00115 	stw	r3,4(r2)
      return 0;
    db1c:	0005883a 	mov	r2,zero
    db20:	00000506 	br	db38 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    db24:	000da580 	call	da58 <alt_get_errno>
    db28:	1007883a 	mov	r3,r2
    db2c:	00801444 	movi	r2,81
    db30:	18800015 	stw	r2,0(r3)
    return -1;
    db34:	00bfffc4 	movi	r2,-1
  }
}
    db38:	e037883a 	mov	sp,fp
    db3c:	dfc00117 	ldw	ra,4(sp)
    db40:	df000017 	ldw	fp,0(sp)
    db44:	dec00204 	addi	sp,sp,8
    db48:	f800283a 	ret

0000db4c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    db4c:	defff904 	addi	sp,sp,-28
    db50:	dfc00615 	stw	ra,24(sp)
    db54:	df000515 	stw	fp,20(sp)
    db58:	df000504 	addi	fp,sp,20
    db5c:	e13ffc15 	stw	r4,-16(fp)
    db60:	e17ffd15 	stw	r5,-12(fp)
    db64:	e1bffe15 	stw	r6,-8(fp)
    db68:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    db6c:	e0800217 	ldw	r2,8(fp)
    db70:	d8800015 	stw	r2,0(sp)
    db74:	e1ffff17 	ldw	r7,-4(fp)
    db78:	e1bffe17 	ldw	r6,-8(fp)
    db7c:	e17ffd17 	ldw	r5,-12(fp)
    db80:	e13ffc17 	ldw	r4,-16(fp)
    db84:	000dcfc0 	call	dcfc <alt_iic_isr_register>
}  
    db88:	e037883a 	mov	sp,fp
    db8c:	dfc00117 	ldw	ra,4(sp)
    db90:	df000017 	ldw	fp,0(sp)
    db94:	dec00204 	addi	sp,sp,8
    db98:	f800283a 	ret

0000db9c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    db9c:	defff904 	addi	sp,sp,-28
    dba0:	df000615 	stw	fp,24(sp)
    dba4:	df000604 	addi	fp,sp,24
    dba8:	e13ffe15 	stw	r4,-8(fp)
    dbac:	e17fff15 	stw	r5,-4(fp)
    dbb0:	e0bfff17 	ldw	r2,-4(fp)
    dbb4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dbb8:	0005303a 	rdctl	r2,status
    dbbc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dbc0:	e0fffb17 	ldw	r3,-20(fp)
    dbc4:	00bfff84 	movi	r2,-2
    dbc8:	1884703a 	and	r2,r3,r2
    dbcc:	1001703a 	wrctl	status,r2
  
  return context;
    dbd0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    dbd4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    dbd8:	00c00044 	movi	r3,1
    dbdc:	e0bffa17 	ldw	r2,-24(fp)
    dbe0:	1884983a 	sll	r2,r3,r2
    dbe4:	1007883a 	mov	r3,r2
    dbe8:	d0a6da17 	ldw	r2,-25752(gp)
    dbec:	1884b03a 	or	r2,r3,r2
    dbf0:	d0a6da15 	stw	r2,-25752(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    dbf4:	d0a6da17 	ldw	r2,-25752(gp)
    dbf8:	100170fa 	wrctl	ienable,r2
    dbfc:	e0bffc17 	ldw	r2,-16(fp)
    dc00:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dc04:	e0bffd17 	ldw	r2,-12(fp)
    dc08:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    dc0c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    dc10:	0001883a 	nop
}
    dc14:	e037883a 	mov	sp,fp
    dc18:	df000017 	ldw	fp,0(sp)
    dc1c:	dec00104 	addi	sp,sp,4
    dc20:	f800283a 	ret

0000dc24 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    dc24:	defff904 	addi	sp,sp,-28
    dc28:	df000615 	stw	fp,24(sp)
    dc2c:	df000604 	addi	fp,sp,24
    dc30:	e13ffe15 	stw	r4,-8(fp)
    dc34:	e17fff15 	stw	r5,-4(fp)
    dc38:	e0bfff17 	ldw	r2,-4(fp)
    dc3c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dc40:	0005303a 	rdctl	r2,status
    dc44:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dc48:	e0fffb17 	ldw	r3,-20(fp)
    dc4c:	00bfff84 	movi	r2,-2
    dc50:	1884703a 	and	r2,r3,r2
    dc54:	1001703a 	wrctl	status,r2
  
  return context;
    dc58:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    dc5c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    dc60:	00c00044 	movi	r3,1
    dc64:	e0bffa17 	ldw	r2,-24(fp)
    dc68:	1884983a 	sll	r2,r3,r2
    dc6c:	0084303a 	nor	r2,zero,r2
    dc70:	1007883a 	mov	r3,r2
    dc74:	d0a6da17 	ldw	r2,-25752(gp)
    dc78:	1884703a 	and	r2,r3,r2
    dc7c:	d0a6da15 	stw	r2,-25752(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    dc80:	d0a6da17 	ldw	r2,-25752(gp)
    dc84:	100170fa 	wrctl	ienable,r2
    dc88:	e0bffc17 	ldw	r2,-16(fp)
    dc8c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dc90:	e0bffd17 	ldw	r2,-12(fp)
    dc94:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    dc98:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    dc9c:	0001883a 	nop
}
    dca0:	e037883a 	mov	sp,fp
    dca4:	df000017 	ldw	fp,0(sp)
    dca8:	dec00104 	addi	sp,sp,4
    dcac:	f800283a 	ret

0000dcb0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    dcb0:	defffc04 	addi	sp,sp,-16
    dcb4:	df000315 	stw	fp,12(sp)
    dcb8:	df000304 	addi	fp,sp,12
    dcbc:	e13ffe15 	stw	r4,-8(fp)
    dcc0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    dcc4:	000530fa 	rdctl	r2,ienable
    dcc8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    dccc:	00c00044 	movi	r3,1
    dcd0:	e0bfff17 	ldw	r2,-4(fp)
    dcd4:	1884983a 	sll	r2,r3,r2
    dcd8:	1007883a 	mov	r3,r2
    dcdc:	e0bffd17 	ldw	r2,-12(fp)
    dce0:	1884703a 	and	r2,r3,r2
    dce4:	1004c03a 	cmpne	r2,r2,zero
    dce8:	10803fcc 	andi	r2,r2,255
}
    dcec:	e037883a 	mov	sp,fp
    dcf0:	df000017 	ldw	fp,0(sp)
    dcf4:	dec00104 	addi	sp,sp,4
    dcf8:	f800283a 	ret

0000dcfc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    dcfc:	defff504 	addi	sp,sp,-44
    dd00:	dfc00a15 	stw	ra,40(sp)
    dd04:	df000915 	stw	fp,36(sp)
    dd08:	df000904 	addi	fp,sp,36
    dd0c:	e13ffc15 	stw	r4,-16(fp)
    dd10:	e17ffd15 	stw	r5,-12(fp)
    dd14:	e1bffe15 	stw	r6,-8(fp)
    dd18:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    dd1c:	00bffa84 	movi	r2,-22
    dd20:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    dd24:	e0bffd17 	ldw	r2,-12(fp)
    dd28:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    dd2c:	e0bff817 	ldw	r2,-32(fp)
    dd30:	10800808 	cmpgei	r2,r2,32
    dd34:	1000271e 	bne	r2,zero,ddd4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dd38:	0005303a 	rdctl	r2,status
    dd3c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dd40:	e0fffb17 	ldw	r3,-20(fp)
    dd44:	00bfff84 	movi	r2,-2
    dd48:	1884703a 	and	r2,r3,r2
    dd4c:	1001703a 	wrctl	status,r2
  
  return context;
    dd50:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    dd54:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    dd58:	00800074 	movhi	r2,1
    dd5c:	108e7604 	addi	r2,r2,14808
    dd60:	e0fff817 	ldw	r3,-32(fp)
    dd64:	180690fa 	slli	r3,r3,3
    dd68:	10c5883a 	add	r2,r2,r3
    dd6c:	e0fffe17 	ldw	r3,-8(fp)
    dd70:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    dd74:	00800074 	movhi	r2,1
    dd78:	108e7604 	addi	r2,r2,14808
    dd7c:	e0fff817 	ldw	r3,-32(fp)
    dd80:	180690fa 	slli	r3,r3,3
    dd84:	10c5883a 	add	r2,r2,r3
    dd88:	10800104 	addi	r2,r2,4
    dd8c:	e0ffff17 	ldw	r3,-4(fp)
    dd90:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    dd94:	e0bffe17 	ldw	r2,-8(fp)
    dd98:	10000526 	beq	r2,zero,ddb0 <alt_iic_isr_register+0xb4>
    dd9c:	e0bff817 	ldw	r2,-32(fp)
    dda0:	100b883a 	mov	r5,r2
    dda4:	e13ffc17 	ldw	r4,-16(fp)
    dda8:	000db9c0 	call	db9c <alt_ic_irq_enable>
    ddac:	00000406 	br	ddc0 <alt_iic_isr_register+0xc4>
    ddb0:	e0bff817 	ldw	r2,-32(fp)
    ddb4:	100b883a 	mov	r5,r2
    ddb8:	e13ffc17 	ldw	r4,-16(fp)
    ddbc:	000dc240 	call	dc24 <alt_ic_irq_disable>
    ddc0:	e0bff715 	stw	r2,-36(fp)
    ddc4:	e0bffa17 	ldw	r2,-24(fp)
    ddc8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ddcc:	e0bff917 	ldw	r2,-28(fp)
    ddd0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    ddd4:	e0bff717 	ldw	r2,-36(fp)
}
    ddd8:	e037883a 	mov	sp,fp
    dddc:	dfc00117 	ldw	ra,4(sp)
    dde0:	df000017 	ldw	fp,0(sp)
    dde4:	dec00204 	addi	sp,sp,8
    dde8:	f800283a 	ret

0000ddec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ddec:	defffe04 	addi	sp,sp,-8
    ddf0:	dfc00115 	stw	ra,4(sp)
    ddf4:	df000015 	stw	fp,0(sp)
    ddf8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ddfc:	d0a00b17 	ldw	r2,-32724(gp)
    de00:	10000326 	beq	r2,zero,de10 <alt_get_errno+0x24>
    de04:	d0a00b17 	ldw	r2,-32724(gp)
    de08:	103ee83a 	callr	r2
    de0c:	00000106 	br	de14 <alt_get_errno+0x28>
    de10:	d0a6d904 	addi	r2,gp,-25756
}
    de14:	e037883a 	mov	sp,fp
    de18:	dfc00117 	ldw	ra,4(sp)
    de1c:	df000017 	ldw	fp,0(sp)
    de20:	dec00204 	addi	sp,sp,8
    de24:	f800283a 	ret

0000de28 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    de28:	deffed04 	addi	sp,sp,-76
    de2c:	dfc01215 	stw	ra,72(sp)
    de30:	df001115 	stw	fp,68(sp)
    de34:	df001104 	addi	fp,sp,68
    de38:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    de3c:	e0bfff17 	ldw	r2,-4(fp)
    de40:	10000816 	blt	r2,zero,de64 <isatty+0x3c>
    de44:	01400304 	movi	r5,12
    de48:	e13fff17 	ldw	r4,-4(fp)
    de4c:	000b04c0 	call	b04c <__mulsi3>
    de50:	1007883a 	mov	r3,r2
    de54:	00800074 	movhi	r2,1
    de58:	10831404 	addi	r2,r2,3152
    de5c:	1885883a 	add	r2,r3,r2
    de60:	00000106 	br	de68 <isatty+0x40>
    de64:	0005883a 	mov	r2,zero
    de68:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    de6c:	e0bfef17 	ldw	r2,-68(fp)
    de70:	10000e26 	beq	r2,zero,deac <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    de74:	e0bfef17 	ldw	r2,-68(fp)
    de78:	10800017 	ldw	r2,0(r2)
    de7c:	10800817 	ldw	r2,32(r2)
    de80:	1000021e 	bne	r2,zero,de8c <isatty+0x64>
    {
      return 1;
    de84:	00800044 	movi	r2,1
    de88:	00000d06 	br	dec0 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    de8c:	e0bff004 	addi	r2,fp,-64
    de90:	100b883a 	mov	r5,r2
    de94:	e13fff17 	ldw	r4,-4(fp)
    de98:	000da940 	call	da94 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    de9c:	e0bff117 	ldw	r2,-60(fp)
    dea0:	10880020 	cmpeqi	r2,r2,8192
    dea4:	10803fcc 	andi	r2,r2,255
    dea8:	00000506 	br	dec0 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    deac:	000ddec0 	call	ddec <alt_get_errno>
    deb0:	1007883a 	mov	r3,r2
    deb4:	00801444 	movi	r2,81
    deb8:	18800015 	stw	r2,0(r3)
    return 0;
    debc:	0005883a 	mov	r2,zero
  }
}
    dec0:	e037883a 	mov	sp,fp
    dec4:	dfc00117 	ldw	ra,4(sp)
    dec8:	df000017 	ldw	fp,0(sp)
    decc:	dec00204 	addi	sp,sp,8
    ded0:	f800283a 	ret

0000ded4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    ded4:	defffc04 	addi	sp,sp,-16
    ded8:	df000315 	stw	fp,12(sp)
    dedc:	df000304 	addi	fp,sp,12
    dee0:	e13ffd15 	stw	r4,-12(fp)
    dee4:	e17ffe15 	stw	r5,-8(fp)
    dee8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    deec:	e0fffe17 	ldw	r3,-8(fp)
    def0:	e0bffd17 	ldw	r2,-12(fp)
    def4:	18800c26 	beq	r3,r2,df28 <alt_load_section+0x54>
  {
    while( to != end )
    def8:	00000806 	br	df1c <alt_load_section+0x48>
    {
      *to++ = *from++;
    defc:	e0bffe17 	ldw	r2,-8(fp)
    df00:	10c00104 	addi	r3,r2,4
    df04:	e0fffe15 	stw	r3,-8(fp)
    df08:	e0fffd17 	ldw	r3,-12(fp)
    df0c:	19000104 	addi	r4,r3,4
    df10:	e13ffd15 	stw	r4,-12(fp)
    df14:	18c00017 	ldw	r3,0(r3)
    df18:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    df1c:	e0fffe17 	ldw	r3,-8(fp)
    df20:	e0bfff17 	ldw	r2,-4(fp)
    df24:	18bff51e 	bne	r3,r2,defc <__alt_data_end+0xfffeeafc>
    {
      *to++ = *from++;
    }
  }
}
    df28:	0001883a 	nop
    df2c:	e037883a 	mov	sp,fp
    df30:	df000017 	ldw	fp,0(sp)
    df34:	dec00104 	addi	sp,sp,4
    df38:	f800283a 	ret

0000df3c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    df3c:	defffe04 	addi	sp,sp,-8
    df40:	dfc00115 	stw	ra,4(sp)
    df44:	df000015 	stw	fp,0(sp)
    df48:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    df4c:	01800074 	movhi	r6,1
    df50:	31879c04 	addi	r6,r6,7792
    df54:	01400074 	movhi	r5,1
    df58:	2940e104 	addi	r5,r5,900
    df5c:	01000074 	movhi	r4,1
    df60:	21079c04 	addi	r4,r4,7792
    df64:	000ded40 	call	ded4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    df68:	01800034 	movhi	r6,0
    df6c:	31807004 	addi	r6,r6,448
    df70:	01400034 	movhi	r5,0
    df74:	29400804 	addi	r5,r5,32
    df78:	01000034 	movhi	r4,0
    df7c:	21000804 	addi	r4,r4,32
    df80:	000ded40 	call	ded4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    df84:	01800074 	movhi	r6,1
    df88:	3180e104 	addi	r6,r6,900
    df8c:	01400074 	movhi	r5,1
    df90:	29400704 	addi	r5,r5,28
    df94:	01000074 	movhi	r4,1
    df98:	21000704 	addi	r4,r4,28
    df9c:	000ded40 	call	ded4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    dfa0:	000f2a00 	call	f2a0 <alt_dcache_flush_all>
  alt_icache_flush_all();
    dfa4:	000f4600 	call	f460 <alt_icache_flush_all>
}
    dfa8:	0001883a 	nop
    dfac:	e037883a 	mov	sp,fp
    dfb0:	dfc00117 	ldw	ra,4(sp)
    dfb4:	df000017 	ldw	fp,0(sp)
    dfb8:	dec00204 	addi	sp,sp,8
    dfbc:	f800283a 	ret

0000dfc0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    dfc0:	defffe04 	addi	sp,sp,-8
    dfc4:	dfc00115 	stw	ra,4(sp)
    dfc8:	df000015 	stw	fp,0(sp)
    dfcc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dfd0:	d0a00b17 	ldw	r2,-32724(gp)
    dfd4:	10000326 	beq	r2,zero,dfe4 <alt_get_errno+0x24>
    dfd8:	d0a00b17 	ldw	r2,-32724(gp)
    dfdc:	103ee83a 	callr	r2
    dfe0:	00000106 	br	dfe8 <alt_get_errno+0x28>
    dfe4:	d0a6d904 	addi	r2,gp,-25756
}
    dfe8:	e037883a 	mov	sp,fp
    dfec:	dfc00117 	ldw	ra,4(sp)
    dff0:	df000017 	ldw	fp,0(sp)
    dff4:	dec00204 	addi	sp,sp,8
    dff8:	f800283a 	ret

0000dffc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    dffc:	defff904 	addi	sp,sp,-28
    e000:	dfc00615 	stw	ra,24(sp)
    e004:	df000515 	stw	fp,20(sp)
    e008:	df000504 	addi	fp,sp,20
    e00c:	e13ffd15 	stw	r4,-12(fp)
    e010:	e17ffe15 	stw	r5,-8(fp)
    e014:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    e018:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e01c:	e0bffd17 	ldw	r2,-12(fp)
    e020:	10000816 	blt	r2,zero,e044 <lseek+0x48>
    e024:	01400304 	movi	r5,12
    e028:	e13ffd17 	ldw	r4,-12(fp)
    e02c:	000b04c0 	call	b04c <__mulsi3>
    e030:	1007883a 	mov	r3,r2
    e034:	00800074 	movhi	r2,1
    e038:	10831404 	addi	r2,r2,3152
    e03c:	1885883a 	add	r2,r3,r2
    e040:	00000106 	br	e048 <lseek+0x4c>
    e044:	0005883a 	mov	r2,zero
    e048:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    e04c:	e0bffc17 	ldw	r2,-16(fp)
    e050:	10001026 	beq	r2,zero,e094 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    e054:	e0bffc17 	ldw	r2,-16(fp)
    e058:	10800017 	ldw	r2,0(r2)
    e05c:	10800717 	ldw	r2,28(r2)
    e060:	10000926 	beq	r2,zero,e088 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    e064:	e0bffc17 	ldw	r2,-16(fp)
    e068:	10800017 	ldw	r2,0(r2)
    e06c:	10800717 	ldw	r2,28(r2)
    e070:	e1bfff17 	ldw	r6,-4(fp)
    e074:	e17ffe17 	ldw	r5,-8(fp)
    e078:	e13ffc17 	ldw	r4,-16(fp)
    e07c:	103ee83a 	callr	r2
    e080:	e0bffb15 	stw	r2,-20(fp)
    e084:	00000506 	br	e09c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    e088:	00bfde84 	movi	r2,-134
    e08c:	e0bffb15 	stw	r2,-20(fp)
    e090:	00000206 	br	e09c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    e094:	00bfebc4 	movi	r2,-81
    e098:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    e09c:	e0bffb17 	ldw	r2,-20(fp)
    e0a0:	1000070e 	bge	r2,zero,e0c0 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    e0a4:	000dfc00 	call	dfc0 <alt_get_errno>
    e0a8:	1007883a 	mov	r3,r2
    e0ac:	e0bffb17 	ldw	r2,-20(fp)
    e0b0:	0085c83a 	sub	r2,zero,r2
    e0b4:	18800015 	stw	r2,0(r3)
    rc = -1;
    e0b8:	00bfffc4 	movi	r2,-1
    e0bc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    e0c0:	e0bffb17 	ldw	r2,-20(fp)
}
    e0c4:	e037883a 	mov	sp,fp
    e0c8:	dfc00117 	ldw	ra,4(sp)
    e0cc:	df000017 	ldw	fp,0(sp)
    e0d0:	dec00204 	addi	sp,sp,8
    e0d4:	f800283a 	ret

0000e0d8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    e0d8:	defffd04 	addi	sp,sp,-12
    e0dc:	dfc00215 	stw	ra,8(sp)
    e0e0:	df000115 	stw	fp,4(sp)
    e0e4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    e0e8:	0009883a 	mov	r4,zero
    e0ec:	000e5800 	call	e580 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    e0f0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    e0f4:	000e5b80 	call	e5b8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    e0f8:	01800074 	movhi	r6,1
    e0fc:	3180d704 	addi	r6,r6,860
    e100:	01400074 	movhi	r5,1
    e104:	2940d704 	addi	r5,r5,860
    e108:	01000074 	movhi	r4,1
    e10c:	2100d704 	addi	r4,r4,860
    e110:	000f5640 	call	f564 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    e114:	000f3a00 	call	f3a0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    e118:	01000074 	movhi	r4,1
    e11c:	213d0004 	addi	r4,r4,-3072
    e120:	000fc880 	call	fc88 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    e124:	d0a6db17 	ldw	r2,-25748(gp)
    e128:	d0e6dc17 	ldw	r3,-25744(gp)
    e12c:	d126dd17 	ldw	r4,-25740(gp)
    e130:	200d883a 	mov	r6,r4
    e134:	180b883a 	mov	r5,r3
    e138:	1009883a 	mov	r4,r2
    e13c:	00009bc0 	call	9bc <main>
    e140:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    e144:	01000044 	movi	r4,1
    e148:	000d9540 	call	d954 <close>
  exit (result);
    e14c:	e13fff17 	ldw	r4,-4(fp)
    e150:	000fc9c0 	call	fc9c <exit>

0000e154 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    e154:	defffe04 	addi	sp,sp,-8
    e158:	df000115 	stw	fp,4(sp)
    e15c:	df000104 	addi	fp,sp,4
    e160:	e13fff15 	stw	r4,-4(fp)
}
    e164:	0001883a 	nop
    e168:	e037883a 	mov	sp,fp
    e16c:	df000017 	ldw	fp,0(sp)
    e170:	dec00104 	addi	sp,sp,4
    e174:	f800283a 	ret

0000e178 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    e178:	defffe04 	addi	sp,sp,-8
    e17c:	df000115 	stw	fp,4(sp)
    e180:	df000104 	addi	fp,sp,4
    e184:	e13fff15 	stw	r4,-4(fp)
}
    e188:	0001883a 	nop
    e18c:	e037883a 	mov	sp,fp
    e190:	df000017 	ldw	fp,0(sp)
    e194:	dec00104 	addi	sp,sp,4
    e198:	f800283a 	ret

0000e19c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e19c:	defffe04 	addi	sp,sp,-8
    e1a0:	dfc00115 	stw	ra,4(sp)
    e1a4:	df000015 	stw	fp,0(sp)
    e1a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e1ac:	d0a00b17 	ldw	r2,-32724(gp)
    e1b0:	10000326 	beq	r2,zero,e1c0 <alt_get_errno+0x24>
    e1b4:	d0a00b17 	ldw	r2,-32724(gp)
    e1b8:	103ee83a 	callr	r2
    e1bc:	00000106 	br	e1c4 <alt_get_errno+0x28>
    e1c0:	d0a6d904 	addi	r2,gp,-25756
}
    e1c4:	e037883a 	mov	sp,fp
    e1c8:	dfc00117 	ldw	ra,4(sp)
    e1cc:	df000017 	ldw	fp,0(sp)
    e1d0:	dec00204 	addi	sp,sp,8
    e1d4:	f800283a 	ret

0000e1d8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    e1d8:	defff904 	addi	sp,sp,-28
    e1dc:	dfc00615 	stw	ra,24(sp)
    e1e0:	df000515 	stw	fp,20(sp)
    e1e4:	df000504 	addi	fp,sp,20
    e1e8:	e13ffd15 	stw	r4,-12(fp)
    e1ec:	e17ffe15 	stw	r5,-8(fp)
    e1f0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e1f4:	e0bffd17 	ldw	r2,-12(fp)
    e1f8:	10000816 	blt	r2,zero,e21c <read+0x44>
    e1fc:	01400304 	movi	r5,12
    e200:	e13ffd17 	ldw	r4,-12(fp)
    e204:	000b04c0 	call	b04c <__mulsi3>
    e208:	1007883a 	mov	r3,r2
    e20c:	00800074 	movhi	r2,1
    e210:	10831404 	addi	r2,r2,3152
    e214:	1885883a 	add	r2,r3,r2
    e218:	00000106 	br	e220 <read+0x48>
    e21c:	0005883a 	mov	r2,zero
    e220:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    e224:	e0bffb17 	ldw	r2,-20(fp)
    e228:	10002226 	beq	r2,zero,e2b4 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e22c:	e0bffb17 	ldw	r2,-20(fp)
    e230:	10800217 	ldw	r2,8(r2)
    e234:	108000cc 	andi	r2,r2,3
    e238:	10800060 	cmpeqi	r2,r2,1
    e23c:	1000181e 	bne	r2,zero,e2a0 <read+0xc8>
        (fd->dev->read))
    e240:	e0bffb17 	ldw	r2,-20(fp)
    e244:	10800017 	ldw	r2,0(r2)
    e248:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e24c:	10001426 	beq	r2,zero,e2a0 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    e250:	e0bffb17 	ldw	r2,-20(fp)
    e254:	10800017 	ldw	r2,0(r2)
    e258:	10800517 	ldw	r2,20(r2)
    e25c:	e0ffff17 	ldw	r3,-4(fp)
    e260:	180d883a 	mov	r6,r3
    e264:	e17ffe17 	ldw	r5,-8(fp)
    e268:	e13ffb17 	ldw	r4,-20(fp)
    e26c:	103ee83a 	callr	r2
    e270:	e0bffc15 	stw	r2,-16(fp)
    e274:	e0bffc17 	ldw	r2,-16(fp)
    e278:	1000070e 	bge	r2,zero,e298 <read+0xc0>
        {
          ALT_ERRNO = -rval;
    e27c:	000e19c0 	call	e19c <alt_get_errno>
    e280:	1007883a 	mov	r3,r2
    e284:	e0bffc17 	ldw	r2,-16(fp)
    e288:	0085c83a 	sub	r2,zero,r2
    e28c:	18800015 	stw	r2,0(r3)
          return -1;
    e290:	00bfffc4 	movi	r2,-1
    e294:	00000c06 	br	e2c8 <read+0xf0>
        }
        return rval;
    e298:	e0bffc17 	ldw	r2,-16(fp)
    e29c:	00000a06 	br	e2c8 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    e2a0:	000e19c0 	call	e19c <alt_get_errno>
    e2a4:	1007883a 	mov	r3,r2
    e2a8:	00800344 	movi	r2,13
    e2ac:	18800015 	stw	r2,0(r3)
    e2b0:	00000406 	br	e2c4 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    e2b4:	000e19c0 	call	e19c <alt_get_errno>
    e2b8:	1007883a 	mov	r3,r2
    e2bc:	00801444 	movi	r2,81
    e2c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
    e2c4:	00bfffc4 	movi	r2,-1
}
    e2c8:	e037883a 	mov	sp,fp
    e2cc:	dfc00117 	ldw	ra,4(sp)
    e2d0:	df000017 	ldw	fp,0(sp)
    e2d4:	dec00204 	addi	sp,sp,8
    e2d8:	f800283a 	ret

0000e2dc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    e2dc:	defffc04 	addi	sp,sp,-16
    e2e0:	dfc00315 	stw	ra,12(sp)
    e2e4:	df000215 	stw	fp,8(sp)
    e2e8:	dc000115 	stw	r16,4(sp)
    e2ec:	df000204 	addi	fp,sp,8
    e2f0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    e2f4:	e0bffe17 	ldw	r2,-8(fp)
    e2f8:	108000d0 	cmplti	r2,r2,3
    e2fc:	1000111e 	bne	r2,zero,e344 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    e300:	04000074 	movhi	r16,1
    e304:	84031404 	addi	r16,r16,3152
    e308:	e0bffe17 	ldw	r2,-8(fp)
    e30c:	01400304 	movi	r5,12
    e310:	1009883a 	mov	r4,r2
    e314:	000b04c0 	call	b04c <__mulsi3>
    e318:	8085883a 	add	r2,r16,r2
    e31c:	10800204 	addi	r2,r2,8
    e320:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    e324:	04000074 	movhi	r16,1
    e328:	84031404 	addi	r16,r16,3152
    e32c:	e0bffe17 	ldw	r2,-8(fp)
    e330:	01400304 	movi	r5,12
    e334:	1009883a 	mov	r4,r2
    e338:	000b04c0 	call	b04c <__mulsi3>
    e33c:	8085883a 	add	r2,r16,r2
    e340:	10000015 	stw	zero,0(r2)
  }
}
    e344:	0001883a 	nop
    e348:	e6ffff04 	addi	sp,fp,-4
    e34c:	dfc00217 	ldw	ra,8(sp)
    e350:	df000117 	ldw	fp,4(sp)
    e354:	dc000017 	ldw	r16,0(sp)
    e358:	dec00304 	addi	sp,sp,12
    e35c:	f800283a 	ret

0000e360 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    e360:	defff904 	addi	sp,sp,-28
    e364:	df000615 	stw	fp,24(sp)
    e368:	df000604 	addi	fp,sp,24
    e36c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e370:	0005303a 	rdctl	r2,status
    e374:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e378:	e0fffe17 	ldw	r3,-8(fp)
    e37c:	00bfff84 	movi	r2,-2
    e380:	1884703a 	and	r2,r3,r2
    e384:	1001703a 	wrctl	status,r2
  
  return context;
    e388:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    e38c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    e390:	d0a00d17 	ldw	r2,-32716(gp)
    e394:	10c000c4 	addi	r3,r2,3
    e398:	00bfff04 	movi	r2,-4
    e39c:	1884703a 	and	r2,r3,r2
    e3a0:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    e3a4:	d0e00d17 	ldw	r3,-32716(gp)
    e3a8:	e0bfff17 	ldw	r2,-4(fp)
    e3ac:	1887883a 	add	r3,r3,r2
    e3b0:	008000b4 	movhi	r2,2
    e3b4:	10bd0004 	addi	r2,r2,-3072
    e3b8:	10c0062e 	bgeu	r2,r3,e3d4 <sbrk+0x74>
    e3bc:	e0bffb17 	ldw	r2,-20(fp)
    e3c0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e3c4:	e0bffa17 	ldw	r2,-24(fp)
    e3c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    e3cc:	00bfffc4 	movi	r2,-1
    e3d0:	00000b06 	br	e400 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    e3d4:	d0a00d17 	ldw	r2,-32716(gp)
    e3d8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    e3dc:	d0e00d17 	ldw	r3,-32716(gp)
    e3e0:	e0bfff17 	ldw	r2,-4(fp)
    e3e4:	1885883a 	add	r2,r3,r2
    e3e8:	d0a00d15 	stw	r2,-32716(gp)
    e3ec:	e0bffb17 	ldw	r2,-20(fp)
    e3f0:	e0bffc15 	stw	r2,-16(fp)
    e3f4:	e0bffc17 	ldw	r2,-16(fp)
    e3f8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    e3fc:	e0bffd17 	ldw	r2,-12(fp)
} 
    e400:	e037883a 	mov	sp,fp
    e404:	df000017 	ldw	fp,0(sp)
    e408:	dec00104 	addi	sp,sp,4
    e40c:	f800283a 	ret

0000e410 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e410:	defffe04 	addi	sp,sp,-8
    e414:	dfc00115 	stw	ra,4(sp)
    e418:	df000015 	stw	fp,0(sp)
    e41c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e420:	d0a00b17 	ldw	r2,-32724(gp)
    e424:	10000326 	beq	r2,zero,e434 <alt_get_errno+0x24>
    e428:	d0a00b17 	ldw	r2,-32724(gp)
    e42c:	103ee83a 	callr	r2
    e430:	00000106 	br	e438 <alt_get_errno+0x28>
    e434:	d0a6d904 	addi	r2,gp,-25756
}
    e438:	e037883a 	mov	sp,fp
    e43c:	dfc00117 	ldw	ra,4(sp)
    e440:	df000017 	ldw	fp,0(sp)
    e444:	dec00204 	addi	sp,sp,8
    e448:	f800283a 	ret

0000e44c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    e44c:	defff904 	addi	sp,sp,-28
    e450:	dfc00615 	stw	ra,24(sp)
    e454:	df000515 	stw	fp,20(sp)
    e458:	df000504 	addi	fp,sp,20
    e45c:	e13ffd15 	stw	r4,-12(fp)
    e460:	e17ffe15 	stw	r5,-8(fp)
    e464:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e468:	e0bffd17 	ldw	r2,-12(fp)
    e46c:	10000816 	blt	r2,zero,e490 <write+0x44>
    e470:	01400304 	movi	r5,12
    e474:	e13ffd17 	ldw	r4,-12(fp)
    e478:	000b04c0 	call	b04c <__mulsi3>
    e47c:	1007883a 	mov	r3,r2
    e480:	00800074 	movhi	r2,1
    e484:	10831404 	addi	r2,r2,3152
    e488:	1885883a 	add	r2,r3,r2
    e48c:	00000106 	br	e494 <write+0x48>
    e490:	0005883a 	mov	r2,zero
    e494:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    e498:	e0bffb17 	ldw	r2,-20(fp)
    e49c:	10002126 	beq	r2,zero,e524 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    e4a0:	e0bffb17 	ldw	r2,-20(fp)
    e4a4:	10800217 	ldw	r2,8(r2)
    e4a8:	108000cc 	andi	r2,r2,3
    e4ac:	10001826 	beq	r2,zero,e510 <write+0xc4>
    e4b0:	e0bffb17 	ldw	r2,-20(fp)
    e4b4:	10800017 	ldw	r2,0(r2)
    e4b8:	10800617 	ldw	r2,24(r2)
    e4bc:	10001426 	beq	r2,zero,e510 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    e4c0:	e0bffb17 	ldw	r2,-20(fp)
    e4c4:	10800017 	ldw	r2,0(r2)
    e4c8:	10800617 	ldw	r2,24(r2)
    e4cc:	e0ffff17 	ldw	r3,-4(fp)
    e4d0:	180d883a 	mov	r6,r3
    e4d4:	e17ffe17 	ldw	r5,-8(fp)
    e4d8:	e13ffb17 	ldw	r4,-20(fp)
    e4dc:	103ee83a 	callr	r2
    e4e0:	e0bffc15 	stw	r2,-16(fp)
    e4e4:	e0bffc17 	ldw	r2,-16(fp)
    e4e8:	1000070e 	bge	r2,zero,e508 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    e4ec:	000e4100 	call	e410 <alt_get_errno>
    e4f0:	1007883a 	mov	r3,r2
    e4f4:	e0bffc17 	ldw	r2,-16(fp)
    e4f8:	0085c83a 	sub	r2,zero,r2
    e4fc:	18800015 	stw	r2,0(r3)
        return -1;
    e500:	00bfffc4 	movi	r2,-1
    e504:	00000c06 	br	e538 <write+0xec>
      }
      return rval;
    e508:	e0bffc17 	ldw	r2,-16(fp)
    e50c:	00000a06 	br	e538 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    e510:	000e4100 	call	e410 <alt_get_errno>
    e514:	1007883a 	mov	r3,r2
    e518:	00800344 	movi	r2,13
    e51c:	18800015 	stw	r2,0(r3)
    e520:	00000406 	br	e534 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    e524:	000e4100 	call	e410 <alt_get_errno>
    e528:	1007883a 	mov	r3,r2
    e52c:	00801444 	movi	r2,81
    e530:	18800015 	stw	r2,0(r3)
  }
  return -1;
    e534:	00bfffc4 	movi	r2,-1
}
    e538:	e037883a 	mov	sp,fp
    e53c:	dfc00117 	ldw	ra,4(sp)
    e540:	df000017 	ldw	fp,0(sp)
    e544:	dec00204 	addi	sp,sp,8
    e548:	f800283a 	ret

0000e54c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    e54c:	defffd04 	addi	sp,sp,-12
    e550:	dfc00215 	stw	ra,8(sp)
    e554:	df000115 	stw	fp,4(sp)
    e558:	df000104 	addi	fp,sp,4
    e55c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    e560:	d1600804 	addi	r5,gp,-32736
    e564:	e13fff17 	ldw	r4,-4(fp)
    e568:	000f2fc0 	call	f2fc <alt_dev_llist_insert>
}
    e56c:	e037883a 	mov	sp,fp
    e570:	dfc00117 	ldw	ra,4(sp)
    e574:	df000017 	ldw	fp,0(sp)
    e578:	dec00204 	addi	sp,sp,8
    e57c:	f800283a 	ret

0000e580 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    e580:	defffd04 	addi	sp,sp,-12
    e584:	dfc00215 	stw	ra,8(sp)
    e588:	df000115 	stw	fp,4(sp)
    e58c:	df000104 	addi	fp,sp,4
    e590:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
    e594:	000fa080 	call	fa08 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    e598:	00800044 	movi	r2,1
    e59c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    e5a0:	0001883a 	nop
    e5a4:	e037883a 	mov	sp,fp
    e5a8:	dfc00117 	ldw	ra,4(sp)
    e5ac:	df000017 	ldw	fp,0(sp)
    e5b0:	dec00204 	addi	sp,sp,8
    e5b4:	f800283a 	ret

0000e5b8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    e5b8:	defffe04 	addi	sp,sp,-8
    e5bc:	dfc00115 	stw	ra,4(sp)
    e5c0:	df000015 	stw	fp,0(sp)
    e5c4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    e5c8:	01c0fa04 	movi	r7,1000
    e5cc:	01800104 	movi	r6,4
    e5d0:	000b883a 	mov	r5,zero
    e5d4:	010000b4 	movhi	r4,2
    e5d8:	21040004 	addi	r4,r4,4096
    e5dc:	000f0f80 	call	f0f8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    e5e0:	01800144 	movi	r6,5
    e5e4:	000b883a 	mov	r5,zero
    e5e8:	01000074 	movhi	r4,1
    e5ec:	21037e04 	addi	r4,r4,3576
    e5f0:	000e77c0 	call	e77c <altera_avalon_jtag_uart_init>
    e5f4:	01000074 	movhi	r4,1
    e5f8:	21037404 	addi	r4,r4,3536
    e5fc:	000e54c0 	call	e54c <alt_dev_reg>
}
    e600:	0001883a 	nop
    e604:	e037883a 	mov	sp,fp
    e608:	dfc00117 	ldw	ra,4(sp)
    e60c:	df000017 	ldw	fp,0(sp)
    e610:	dec00204 	addi	sp,sp,8
    e614:	f800283a 	ret

0000e618 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    e618:	defffa04 	addi	sp,sp,-24
    e61c:	dfc00515 	stw	ra,20(sp)
    e620:	df000415 	stw	fp,16(sp)
    e624:	df000404 	addi	fp,sp,16
    e628:	e13ffd15 	stw	r4,-12(fp)
    e62c:	e17ffe15 	stw	r5,-8(fp)
    e630:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e634:	e0bffd17 	ldw	r2,-12(fp)
    e638:	10800017 	ldw	r2,0(r2)
    e63c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e640:	e0bffc17 	ldw	r2,-16(fp)
    e644:	10c00a04 	addi	r3,r2,40
    e648:	e0bffd17 	ldw	r2,-12(fp)
    e64c:	10800217 	ldw	r2,8(r2)
    e650:	100f883a 	mov	r7,r2
    e654:	e1bfff17 	ldw	r6,-4(fp)
    e658:	e17ffe17 	ldw	r5,-8(fp)
    e65c:	1809883a 	mov	r4,r3
    e660:	000ec400 	call	ec40 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    e664:	e037883a 	mov	sp,fp
    e668:	dfc00117 	ldw	ra,4(sp)
    e66c:	df000017 	ldw	fp,0(sp)
    e670:	dec00204 	addi	sp,sp,8
    e674:	f800283a 	ret

0000e678 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e678:	defffa04 	addi	sp,sp,-24
    e67c:	dfc00515 	stw	ra,20(sp)
    e680:	df000415 	stw	fp,16(sp)
    e684:	df000404 	addi	fp,sp,16
    e688:	e13ffd15 	stw	r4,-12(fp)
    e68c:	e17ffe15 	stw	r5,-8(fp)
    e690:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e694:	e0bffd17 	ldw	r2,-12(fp)
    e698:	10800017 	ldw	r2,0(r2)
    e69c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e6a0:	e0bffc17 	ldw	r2,-16(fp)
    e6a4:	10c00a04 	addi	r3,r2,40
    e6a8:	e0bffd17 	ldw	r2,-12(fp)
    e6ac:	10800217 	ldw	r2,8(r2)
    e6b0:	100f883a 	mov	r7,r2
    e6b4:	e1bfff17 	ldw	r6,-4(fp)
    e6b8:	e17ffe17 	ldw	r5,-8(fp)
    e6bc:	1809883a 	mov	r4,r3
    e6c0:	000ee5c0 	call	ee5c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e6c4:	e037883a 	mov	sp,fp
    e6c8:	dfc00117 	ldw	ra,4(sp)
    e6cc:	df000017 	ldw	fp,0(sp)
    e6d0:	dec00204 	addi	sp,sp,8
    e6d4:	f800283a 	ret

0000e6d8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e6d8:	defffc04 	addi	sp,sp,-16
    e6dc:	dfc00315 	stw	ra,12(sp)
    e6e0:	df000215 	stw	fp,8(sp)
    e6e4:	df000204 	addi	fp,sp,8
    e6e8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e6ec:	e0bfff17 	ldw	r2,-4(fp)
    e6f0:	10800017 	ldw	r2,0(r2)
    e6f4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e6f8:	e0bffe17 	ldw	r2,-8(fp)
    e6fc:	10c00a04 	addi	r3,r2,40
    e700:	e0bfff17 	ldw	r2,-4(fp)
    e704:	10800217 	ldw	r2,8(r2)
    e708:	100b883a 	mov	r5,r2
    e70c:	1809883a 	mov	r4,r3
    e710:	000eae80 	call	eae8 <altera_avalon_jtag_uart_close>
}
    e714:	e037883a 	mov	sp,fp
    e718:	dfc00117 	ldw	ra,4(sp)
    e71c:	df000017 	ldw	fp,0(sp)
    e720:	dec00204 	addi	sp,sp,8
    e724:	f800283a 	ret

0000e728 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e728:	defffa04 	addi	sp,sp,-24
    e72c:	dfc00515 	stw	ra,20(sp)
    e730:	df000415 	stw	fp,16(sp)
    e734:	df000404 	addi	fp,sp,16
    e738:	e13ffd15 	stw	r4,-12(fp)
    e73c:	e17ffe15 	stw	r5,-8(fp)
    e740:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e744:	e0bffd17 	ldw	r2,-12(fp)
    e748:	10800017 	ldw	r2,0(r2)
    e74c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e750:	e0bffc17 	ldw	r2,-16(fp)
    e754:	10800a04 	addi	r2,r2,40
    e758:	e1bfff17 	ldw	r6,-4(fp)
    e75c:	e17ffe17 	ldw	r5,-8(fp)
    e760:	1009883a 	mov	r4,r2
    e764:	000eb500 	call	eb50 <altera_avalon_jtag_uart_ioctl>
}
    e768:	e037883a 	mov	sp,fp
    e76c:	dfc00117 	ldw	ra,4(sp)
    e770:	df000017 	ldw	fp,0(sp)
    e774:	dec00204 	addi	sp,sp,8
    e778:	f800283a 	ret

0000e77c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e77c:	defffa04 	addi	sp,sp,-24
    e780:	dfc00515 	stw	ra,20(sp)
    e784:	df000415 	stw	fp,16(sp)
    e788:	df000404 	addi	fp,sp,16
    e78c:	e13ffd15 	stw	r4,-12(fp)
    e790:	e17ffe15 	stw	r5,-8(fp)
    e794:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e798:	e0bffd17 	ldw	r2,-12(fp)
    e79c:	00c00044 	movi	r3,1
    e7a0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e7a4:	e0bffd17 	ldw	r2,-12(fp)
    e7a8:	10800017 	ldw	r2,0(r2)
    e7ac:	10800104 	addi	r2,r2,4
    e7b0:	1007883a 	mov	r3,r2
    e7b4:	e0bffd17 	ldw	r2,-12(fp)
    e7b8:	10800817 	ldw	r2,32(r2)
    e7bc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    e7c0:	e0bffe17 	ldw	r2,-8(fp)
    e7c4:	e0ffff17 	ldw	r3,-4(fp)
    e7c8:	d8000015 	stw	zero,0(sp)
    e7cc:	e1fffd17 	ldw	r7,-12(fp)
    e7d0:	01800074 	movhi	r6,1
    e7d4:	31ba0f04 	addi	r6,r6,-6084
    e7d8:	180b883a 	mov	r5,r3
    e7dc:	1009883a 	mov	r4,r2
    e7e0:	000db4c0 	call	db4c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e7e4:	e0bffd17 	ldw	r2,-12(fp)
    e7e8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e7ec:	e0bffd17 	ldw	r2,-12(fp)
    e7f0:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    e7f4:	d0e6de17 	ldw	r3,-25736(gp)
    e7f8:	e1fffd17 	ldw	r7,-12(fp)
    e7fc:	01800074 	movhi	r6,1
    e800:	31ba9204 	addi	r6,r6,-5560
    e804:	180b883a 	mov	r5,r3
    e808:	1009883a 	mov	r4,r2
    e80c:	000f1740 	call	f174 <alt_alarm_start>
    e810:	1000040e 	bge	r2,zero,e824 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e814:	e0fffd17 	ldw	r3,-12(fp)
    e818:	00a00034 	movhi	r2,32768
    e81c:	10bfffc4 	addi	r2,r2,-1
    e820:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e824:	0001883a 	nop
    e828:	e037883a 	mov	sp,fp
    e82c:	dfc00117 	ldw	ra,4(sp)
    e830:	df000017 	ldw	fp,0(sp)
    e834:	dec00204 	addi	sp,sp,8
    e838:	f800283a 	ret

0000e83c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e83c:	defff804 	addi	sp,sp,-32
    e840:	df000715 	stw	fp,28(sp)
    e844:	df000704 	addi	fp,sp,28
    e848:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e84c:	e0bfff17 	ldw	r2,-4(fp)
    e850:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    e854:	e0bffb17 	ldw	r2,-20(fp)
    e858:	10800017 	ldw	r2,0(r2)
    e85c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e860:	e0bffc17 	ldw	r2,-16(fp)
    e864:	10800104 	addi	r2,r2,4
    e868:	10800037 	ldwio	r2,0(r2)
    e86c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e870:	e0bffd17 	ldw	r2,-12(fp)
    e874:	1080c00c 	andi	r2,r2,768
    e878:	10006d26 	beq	r2,zero,ea30 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e87c:	e0bffd17 	ldw	r2,-12(fp)
    e880:	1080400c 	andi	r2,r2,256
    e884:	10003526 	beq	r2,zero,e95c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e888:	00800074 	movhi	r2,1
    e88c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e890:	e0bffb17 	ldw	r2,-20(fp)
    e894:	10800a17 	ldw	r2,40(r2)
    e898:	10800044 	addi	r2,r2,1
    e89c:	1081ffcc 	andi	r2,r2,2047
    e8a0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    e8a4:	e0bffb17 	ldw	r2,-20(fp)
    e8a8:	10c00b17 	ldw	r3,44(r2)
    e8ac:	e0bffe17 	ldw	r2,-8(fp)
    e8b0:	18801526 	beq	r3,r2,e908 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e8b4:	e0bffc17 	ldw	r2,-16(fp)
    e8b8:	10800037 	ldwio	r2,0(r2)
    e8bc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e8c0:	e0bff917 	ldw	r2,-28(fp)
    e8c4:	10a0000c 	andi	r2,r2,32768
    e8c8:	10001126 	beq	r2,zero,e910 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e8cc:	e0bffb17 	ldw	r2,-20(fp)
    e8d0:	10800a17 	ldw	r2,40(r2)
    e8d4:	e0fff917 	ldw	r3,-28(fp)
    e8d8:	1809883a 	mov	r4,r3
    e8dc:	e0fffb17 	ldw	r3,-20(fp)
    e8e0:	1885883a 	add	r2,r3,r2
    e8e4:	10800e04 	addi	r2,r2,56
    e8e8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e8ec:	e0bffb17 	ldw	r2,-20(fp)
    e8f0:	10800a17 	ldw	r2,40(r2)
    e8f4:	10800044 	addi	r2,r2,1
    e8f8:	10c1ffcc 	andi	r3,r2,2047
    e8fc:	e0bffb17 	ldw	r2,-20(fp)
    e900:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e904:	003fe206 	br	e890 <__alt_data_end+0xfffef490>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e908:	0001883a 	nop
    e90c:	00000106 	br	e914 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e910:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e914:	e0bff917 	ldw	r2,-28(fp)
    e918:	10bfffec 	andhi	r2,r2,65535
    e91c:	10000f26 	beq	r2,zero,e95c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e920:	e0bffb17 	ldw	r2,-20(fp)
    e924:	10c00817 	ldw	r3,32(r2)
    e928:	00bfff84 	movi	r2,-2
    e92c:	1886703a 	and	r3,r3,r2
    e930:	e0bffb17 	ldw	r2,-20(fp)
    e934:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e938:	e0bffc17 	ldw	r2,-16(fp)
    e93c:	10800104 	addi	r2,r2,4
    e940:	1007883a 	mov	r3,r2
    e944:	e0bffb17 	ldw	r2,-20(fp)
    e948:	10800817 	ldw	r2,32(r2)
    e94c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e950:	e0bffc17 	ldw	r2,-16(fp)
    e954:	10800104 	addi	r2,r2,4
    e958:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e95c:	e0bffd17 	ldw	r2,-12(fp)
    e960:	1080800c 	andi	r2,r2,512
    e964:	103fbe26 	beq	r2,zero,e860 <__alt_data_end+0xfffef460>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e968:	e0bffd17 	ldw	r2,-12(fp)
    e96c:	1004d43a 	srli	r2,r2,16
    e970:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e974:	00001406 	br	e9c8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e978:	e0bffc17 	ldw	r2,-16(fp)
    e97c:	e0fffb17 	ldw	r3,-20(fp)
    e980:	18c00d17 	ldw	r3,52(r3)
    e984:	e13ffb17 	ldw	r4,-20(fp)
    e988:	20c7883a 	add	r3,r4,r3
    e98c:	18c20e04 	addi	r3,r3,2104
    e990:	18c00003 	ldbu	r3,0(r3)
    e994:	18c03fcc 	andi	r3,r3,255
    e998:	18c0201c 	xori	r3,r3,128
    e99c:	18ffe004 	addi	r3,r3,-128
    e9a0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e9a4:	e0bffb17 	ldw	r2,-20(fp)
    e9a8:	10800d17 	ldw	r2,52(r2)
    e9ac:	10800044 	addi	r2,r2,1
    e9b0:	10c1ffcc 	andi	r3,r2,2047
    e9b4:	e0bffb17 	ldw	r2,-20(fp)
    e9b8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e9bc:	e0bffa17 	ldw	r2,-24(fp)
    e9c0:	10bfffc4 	addi	r2,r2,-1
    e9c4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e9c8:	e0bffa17 	ldw	r2,-24(fp)
    e9cc:	10000526 	beq	r2,zero,e9e4 <altera_avalon_jtag_uart_irq+0x1a8>
    e9d0:	e0bffb17 	ldw	r2,-20(fp)
    e9d4:	10c00d17 	ldw	r3,52(r2)
    e9d8:	e0bffb17 	ldw	r2,-20(fp)
    e9dc:	10800c17 	ldw	r2,48(r2)
    e9e0:	18bfe51e 	bne	r3,r2,e978 <__alt_data_end+0xfffef578>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e9e4:	e0bffa17 	ldw	r2,-24(fp)
    e9e8:	103f9d26 	beq	r2,zero,e860 <__alt_data_end+0xfffef460>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e9ec:	e0bffb17 	ldw	r2,-20(fp)
    e9f0:	10c00817 	ldw	r3,32(r2)
    e9f4:	00bfff44 	movi	r2,-3
    e9f8:	1886703a 	and	r3,r3,r2
    e9fc:	e0bffb17 	ldw	r2,-20(fp)
    ea00:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ea04:	e0bffb17 	ldw	r2,-20(fp)
    ea08:	10800017 	ldw	r2,0(r2)
    ea0c:	10800104 	addi	r2,r2,4
    ea10:	1007883a 	mov	r3,r2
    ea14:	e0bffb17 	ldw	r2,-20(fp)
    ea18:	10800817 	ldw	r2,32(r2)
    ea1c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    ea20:	e0bffc17 	ldw	r2,-16(fp)
    ea24:	10800104 	addi	r2,r2,4
    ea28:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    ea2c:	003f8c06 	br	e860 <__alt_data_end+0xfffef460>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    ea30:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    ea34:	0001883a 	nop
    ea38:	e037883a 	mov	sp,fp
    ea3c:	df000017 	ldw	fp,0(sp)
    ea40:	dec00104 	addi	sp,sp,4
    ea44:	f800283a 	ret

0000ea48 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    ea48:	defff804 	addi	sp,sp,-32
    ea4c:	df000715 	stw	fp,28(sp)
    ea50:	df000704 	addi	fp,sp,28
    ea54:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    ea58:	e0bffb17 	ldw	r2,-20(fp)
    ea5c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    ea60:	e0bff917 	ldw	r2,-28(fp)
    ea64:	10800017 	ldw	r2,0(r2)
    ea68:	10800104 	addi	r2,r2,4
    ea6c:	10800037 	ldwio	r2,0(r2)
    ea70:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    ea74:	e0bffa17 	ldw	r2,-24(fp)
    ea78:	1081000c 	andi	r2,r2,1024
    ea7c:	10000b26 	beq	r2,zero,eaac <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    ea80:	e0bff917 	ldw	r2,-28(fp)
    ea84:	10800017 	ldw	r2,0(r2)
    ea88:	10800104 	addi	r2,r2,4
    ea8c:	1007883a 	mov	r3,r2
    ea90:	e0bff917 	ldw	r2,-28(fp)
    ea94:	10800817 	ldw	r2,32(r2)
    ea98:	10810014 	ori	r2,r2,1024
    ea9c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    eaa0:	e0bff917 	ldw	r2,-28(fp)
    eaa4:	10000915 	stw	zero,36(r2)
    eaa8:	00000a06 	br	ead4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    eaac:	e0bff917 	ldw	r2,-28(fp)
    eab0:	10c00917 	ldw	r3,36(r2)
    eab4:	00a00034 	movhi	r2,32768
    eab8:	10bfff04 	addi	r2,r2,-4
    eabc:	10c00536 	bltu	r2,r3,ead4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    eac0:	e0bff917 	ldw	r2,-28(fp)
    eac4:	10800917 	ldw	r2,36(r2)
    eac8:	10c00044 	addi	r3,r2,1
    eacc:	e0bff917 	ldw	r2,-28(fp)
    ead0:	10c00915 	stw	r3,36(r2)
    ead4:	d0a6de17 	ldw	r2,-25736(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    ead8:	e037883a 	mov	sp,fp
    eadc:	df000017 	ldw	fp,0(sp)
    eae0:	dec00104 	addi	sp,sp,4
    eae4:	f800283a 	ret

0000eae8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    eae8:	defffd04 	addi	sp,sp,-12
    eaec:	df000215 	stw	fp,8(sp)
    eaf0:	df000204 	addi	fp,sp,8
    eaf4:	e13ffe15 	stw	r4,-8(fp)
    eaf8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    eafc:	00000506 	br	eb14 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    eb00:	e0bfff17 	ldw	r2,-4(fp)
    eb04:	1090000c 	andi	r2,r2,16384
    eb08:	10000226 	beq	r2,zero,eb14 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    eb0c:	00bffd44 	movi	r2,-11
    eb10:	00000b06 	br	eb40 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    eb14:	e0bffe17 	ldw	r2,-8(fp)
    eb18:	10c00d17 	ldw	r3,52(r2)
    eb1c:	e0bffe17 	ldw	r2,-8(fp)
    eb20:	10800c17 	ldw	r2,48(r2)
    eb24:	18800526 	beq	r3,r2,eb3c <altera_avalon_jtag_uart_close+0x54>
    eb28:	e0bffe17 	ldw	r2,-8(fp)
    eb2c:	10c00917 	ldw	r3,36(r2)
    eb30:	e0bffe17 	ldw	r2,-8(fp)
    eb34:	10800117 	ldw	r2,4(r2)
    eb38:	18bff136 	bltu	r3,r2,eb00 <__alt_data_end+0xfffef700>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    eb3c:	0005883a 	mov	r2,zero
}
    eb40:	e037883a 	mov	sp,fp
    eb44:	df000017 	ldw	fp,0(sp)
    eb48:	dec00104 	addi	sp,sp,4
    eb4c:	f800283a 	ret

0000eb50 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    eb50:	defffa04 	addi	sp,sp,-24
    eb54:	df000515 	stw	fp,20(sp)
    eb58:	df000504 	addi	fp,sp,20
    eb5c:	e13ffd15 	stw	r4,-12(fp)
    eb60:	e17ffe15 	stw	r5,-8(fp)
    eb64:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    eb68:	00bff9c4 	movi	r2,-25
    eb6c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    eb70:	e0bffe17 	ldw	r2,-8(fp)
    eb74:	10da8060 	cmpeqi	r3,r2,27137
    eb78:	1800031e 	bne	r3,zero,eb88 <altera_avalon_jtag_uart_ioctl+0x38>
    eb7c:	109a80a0 	cmpeqi	r2,r2,27138
    eb80:	1000181e 	bne	r2,zero,ebe4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    eb84:	00002906 	br	ec2c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    eb88:	e0bffd17 	ldw	r2,-12(fp)
    eb8c:	10c00117 	ldw	r3,4(r2)
    eb90:	00a00034 	movhi	r2,32768
    eb94:	10bfffc4 	addi	r2,r2,-1
    eb98:	18802126 	beq	r3,r2,ec20 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    eb9c:	e0bfff17 	ldw	r2,-4(fp)
    eba0:	10800017 	ldw	r2,0(r2)
    eba4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    eba8:	e0bffc17 	ldw	r2,-16(fp)
    ebac:	10800090 	cmplti	r2,r2,2
    ebb0:	1000061e 	bne	r2,zero,ebcc <altera_avalon_jtag_uart_ioctl+0x7c>
    ebb4:	e0fffc17 	ldw	r3,-16(fp)
    ebb8:	00a00034 	movhi	r2,32768
    ebbc:	10bfffc4 	addi	r2,r2,-1
    ebc0:	18800226 	beq	r3,r2,ebcc <altera_avalon_jtag_uart_ioctl+0x7c>
    ebc4:	e0bffc17 	ldw	r2,-16(fp)
    ebc8:	00000206 	br	ebd4 <altera_avalon_jtag_uart_ioctl+0x84>
    ebcc:	00a00034 	movhi	r2,32768
    ebd0:	10bfff84 	addi	r2,r2,-2
    ebd4:	e0fffd17 	ldw	r3,-12(fp)
    ebd8:	18800115 	stw	r2,4(r3)
      rc = 0;
    ebdc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    ebe0:	00000f06 	br	ec20 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    ebe4:	e0bffd17 	ldw	r2,-12(fp)
    ebe8:	10c00117 	ldw	r3,4(r2)
    ebec:	00a00034 	movhi	r2,32768
    ebf0:	10bfffc4 	addi	r2,r2,-1
    ebf4:	18800c26 	beq	r3,r2,ec28 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    ebf8:	e0bffd17 	ldw	r2,-12(fp)
    ebfc:	10c00917 	ldw	r3,36(r2)
    ec00:	e0bffd17 	ldw	r2,-12(fp)
    ec04:	10800117 	ldw	r2,4(r2)
    ec08:	1885803a 	cmpltu	r2,r3,r2
    ec0c:	10c03fcc 	andi	r3,r2,255
    ec10:	e0bfff17 	ldw	r2,-4(fp)
    ec14:	10c00015 	stw	r3,0(r2)
      rc = 0;
    ec18:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    ec1c:	00000206 	br	ec28 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    ec20:	0001883a 	nop
    ec24:	00000106 	br	ec2c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    ec28:	0001883a 	nop

  default:
    break;
  }

  return rc;
    ec2c:	e0bffb17 	ldw	r2,-20(fp)
}
    ec30:	e037883a 	mov	sp,fp
    ec34:	df000017 	ldw	fp,0(sp)
    ec38:	dec00104 	addi	sp,sp,4
    ec3c:	f800283a 	ret

0000ec40 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    ec40:	defff304 	addi	sp,sp,-52
    ec44:	dfc00c15 	stw	ra,48(sp)
    ec48:	df000b15 	stw	fp,44(sp)
    ec4c:	df000b04 	addi	fp,sp,44
    ec50:	e13ffc15 	stw	r4,-16(fp)
    ec54:	e17ffd15 	stw	r5,-12(fp)
    ec58:	e1bffe15 	stw	r6,-8(fp)
    ec5c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    ec60:	e0bffd17 	ldw	r2,-12(fp)
    ec64:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    ec68:	00004706 	br	ed88 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    ec6c:	e0bffc17 	ldw	r2,-16(fp)
    ec70:	10800a17 	ldw	r2,40(r2)
    ec74:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    ec78:	e0bffc17 	ldw	r2,-16(fp)
    ec7c:	10800b17 	ldw	r2,44(r2)
    ec80:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    ec84:	e0fff717 	ldw	r3,-36(fp)
    ec88:	e0bff817 	ldw	r2,-32(fp)
    ec8c:	18800536 	bltu	r3,r2,eca4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    ec90:	e0fff717 	ldw	r3,-36(fp)
    ec94:	e0bff817 	ldw	r2,-32(fp)
    ec98:	1885c83a 	sub	r2,r3,r2
    ec9c:	e0bff615 	stw	r2,-40(fp)
    eca0:	00000406 	br	ecb4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    eca4:	00c20004 	movi	r3,2048
    eca8:	e0bff817 	ldw	r2,-32(fp)
    ecac:	1885c83a 	sub	r2,r3,r2
    ecb0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ecb4:	e0bff617 	ldw	r2,-40(fp)
    ecb8:	10001e26 	beq	r2,zero,ed34 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    ecbc:	e0fffe17 	ldw	r3,-8(fp)
    ecc0:	e0bff617 	ldw	r2,-40(fp)
    ecc4:	1880022e 	bgeu	r3,r2,ecd0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    ecc8:	e0bffe17 	ldw	r2,-8(fp)
    eccc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    ecd0:	e0bffc17 	ldw	r2,-16(fp)
    ecd4:	10c00e04 	addi	r3,r2,56
    ecd8:	e0bff817 	ldw	r2,-32(fp)
    ecdc:	1885883a 	add	r2,r3,r2
    ece0:	e1bff617 	ldw	r6,-40(fp)
    ece4:	100b883a 	mov	r5,r2
    ece8:	e13ff517 	ldw	r4,-44(fp)
    ecec:	00061480 	call	6148 <memcpy>
      ptr   += n;
    ecf0:	e0fff517 	ldw	r3,-44(fp)
    ecf4:	e0bff617 	ldw	r2,-40(fp)
    ecf8:	1885883a 	add	r2,r3,r2
    ecfc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    ed00:	e0fffe17 	ldw	r3,-8(fp)
    ed04:	e0bff617 	ldw	r2,-40(fp)
    ed08:	1885c83a 	sub	r2,r3,r2
    ed0c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ed10:	e0fff817 	ldw	r3,-32(fp)
    ed14:	e0bff617 	ldw	r2,-40(fp)
    ed18:	1885883a 	add	r2,r3,r2
    ed1c:	10c1ffcc 	andi	r3,r2,2047
    ed20:	e0bffc17 	ldw	r2,-16(fp)
    ed24:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    ed28:	e0bffe17 	ldw	r2,-8(fp)
    ed2c:	00bfcf16 	blt	zero,r2,ec6c <__alt_data_end+0xfffef86c>
    ed30:	00000106 	br	ed38 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    ed34:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    ed38:	e0fff517 	ldw	r3,-44(fp)
    ed3c:	e0bffd17 	ldw	r2,-12(fp)
    ed40:	1880141e 	bne	r3,r2,ed94 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    ed44:	e0bfff17 	ldw	r2,-4(fp)
    ed48:	1090000c 	andi	r2,r2,16384
    ed4c:	1000131e 	bne	r2,zero,ed9c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    ed50:	0001883a 	nop
    ed54:	e0bffc17 	ldw	r2,-16(fp)
    ed58:	10c00a17 	ldw	r3,40(r2)
    ed5c:	e0bff717 	ldw	r2,-36(fp)
    ed60:	1880051e 	bne	r3,r2,ed78 <altera_avalon_jtag_uart_read+0x138>
    ed64:	e0bffc17 	ldw	r2,-16(fp)
    ed68:	10c00917 	ldw	r3,36(r2)
    ed6c:	e0bffc17 	ldw	r2,-16(fp)
    ed70:	10800117 	ldw	r2,4(r2)
    ed74:	18bff736 	bltu	r3,r2,ed54 <__alt_data_end+0xfffef954>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    ed78:	e0bffc17 	ldw	r2,-16(fp)
    ed7c:	10c00a17 	ldw	r3,40(r2)
    ed80:	e0bff717 	ldw	r2,-36(fp)
    ed84:	18800726 	beq	r3,r2,eda4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    ed88:	e0bffe17 	ldw	r2,-8(fp)
    ed8c:	00bfb716 	blt	zero,r2,ec6c <__alt_data_end+0xfffef86c>
    ed90:	00000506 	br	eda8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    ed94:	0001883a 	nop
    ed98:	00000306 	br	eda8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    ed9c:	0001883a 	nop
    eda0:	00000106 	br	eda8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    eda4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    eda8:	e0fff517 	ldw	r3,-44(fp)
    edac:	e0bffd17 	ldw	r2,-12(fp)
    edb0:	18801826 	beq	r3,r2,ee14 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    edb4:	0005303a 	rdctl	r2,status
    edb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    edbc:	e0fffb17 	ldw	r3,-20(fp)
    edc0:	00bfff84 	movi	r2,-2
    edc4:	1884703a 	and	r2,r3,r2
    edc8:	1001703a 	wrctl	status,r2
  
  return context;
    edcc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    edd0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    edd4:	e0bffc17 	ldw	r2,-16(fp)
    edd8:	10800817 	ldw	r2,32(r2)
    eddc:	10c00054 	ori	r3,r2,1
    ede0:	e0bffc17 	ldw	r2,-16(fp)
    ede4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ede8:	e0bffc17 	ldw	r2,-16(fp)
    edec:	10800017 	ldw	r2,0(r2)
    edf0:	10800104 	addi	r2,r2,4
    edf4:	1007883a 	mov	r3,r2
    edf8:	e0bffc17 	ldw	r2,-16(fp)
    edfc:	10800817 	ldw	r2,32(r2)
    ee00:	18800035 	stwio	r2,0(r3)
    ee04:	e0bffa17 	ldw	r2,-24(fp)
    ee08:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ee0c:	e0bff917 	ldw	r2,-28(fp)
    ee10:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    ee14:	e0fff517 	ldw	r3,-44(fp)
    ee18:	e0bffd17 	ldw	r2,-12(fp)
    ee1c:	18800426 	beq	r3,r2,ee30 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    ee20:	e0fff517 	ldw	r3,-44(fp)
    ee24:	e0bffd17 	ldw	r2,-12(fp)
    ee28:	1885c83a 	sub	r2,r3,r2
    ee2c:	00000606 	br	ee48 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    ee30:	e0bfff17 	ldw	r2,-4(fp)
    ee34:	1090000c 	andi	r2,r2,16384
    ee38:	10000226 	beq	r2,zero,ee44 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    ee3c:	00bffd44 	movi	r2,-11
    ee40:	00000106 	br	ee48 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    ee44:	00bffec4 	movi	r2,-5
}
    ee48:	e037883a 	mov	sp,fp
    ee4c:	dfc00117 	ldw	ra,4(sp)
    ee50:	df000017 	ldw	fp,0(sp)
    ee54:	dec00204 	addi	sp,sp,8
    ee58:	f800283a 	ret

0000ee5c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    ee5c:	defff304 	addi	sp,sp,-52
    ee60:	dfc00c15 	stw	ra,48(sp)
    ee64:	df000b15 	stw	fp,44(sp)
    ee68:	df000b04 	addi	fp,sp,44
    ee6c:	e13ffc15 	stw	r4,-16(fp)
    ee70:	e17ffd15 	stw	r5,-12(fp)
    ee74:	e1bffe15 	stw	r6,-8(fp)
    ee78:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    ee7c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    ee80:	e0bffd17 	ldw	r2,-12(fp)
    ee84:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ee88:	00003706 	br	ef68 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    ee8c:	e0bffc17 	ldw	r2,-16(fp)
    ee90:	10800c17 	ldw	r2,48(r2)
    ee94:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    ee98:	e0bffc17 	ldw	r2,-16(fp)
    ee9c:	10800d17 	ldw	r2,52(r2)
    eea0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    eea4:	e0fff917 	ldw	r3,-28(fp)
    eea8:	e0bff517 	ldw	r2,-44(fp)
    eeac:	1880062e 	bgeu	r3,r2,eec8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    eeb0:	e0fff517 	ldw	r3,-44(fp)
    eeb4:	e0bff917 	ldw	r2,-28(fp)
    eeb8:	1885c83a 	sub	r2,r3,r2
    eebc:	10bfffc4 	addi	r2,r2,-1
    eec0:	e0bff615 	stw	r2,-40(fp)
    eec4:	00000b06 	br	eef4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    eec8:	e0bff517 	ldw	r2,-44(fp)
    eecc:	10000526 	beq	r2,zero,eee4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    eed0:	00c20004 	movi	r3,2048
    eed4:	e0bff917 	ldw	r2,-28(fp)
    eed8:	1885c83a 	sub	r2,r3,r2
    eedc:	e0bff615 	stw	r2,-40(fp)
    eee0:	00000406 	br	eef4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    eee4:	00c1ffc4 	movi	r3,2047
    eee8:	e0bff917 	ldw	r2,-28(fp)
    eeec:	1885c83a 	sub	r2,r3,r2
    eef0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    eef4:	e0bff617 	ldw	r2,-40(fp)
    eef8:	10001e26 	beq	r2,zero,ef74 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    eefc:	e0fffe17 	ldw	r3,-8(fp)
    ef00:	e0bff617 	ldw	r2,-40(fp)
    ef04:	1880022e 	bgeu	r3,r2,ef10 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    ef08:	e0bffe17 	ldw	r2,-8(fp)
    ef0c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    ef10:	e0bffc17 	ldw	r2,-16(fp)
    ef14:	10c20e04 	addi	r3,r2,2104
    ef18:	e0bff917 	ldw	r2,-28(fp)
    ef1c:	1885883a 	add	r2,r3,r2
    ef20:	e1bff617 	ldw	r6,-40(fp)
    ef24:	e17ffd17 	ldw	r5,-12(fp)
    ef28:	1009883a 	mov	r4,r2
    ef2c:	00061480 	call	6148 <memcpy>
      ptr   += n;
    ef30:	e0fffd17 	ldw	r3,-12(fp)
    ef34:	e0bff617 	ldw	r2,-40(fp)
    ef38:	1885883a 	add	r2,r3,r2
    ef3c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    ef40:	e0fffe17 	ldw	r3,-8(fp)
    ef44:	e0bff617 	ldw	r2,-40(fp)
    ef48:	1885c83a 	sub	r2,r3,r2
    ef4c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ef50:	e0fff917 	ldw	r3,-28(fp)
    ef54:	e0bff617 	ldw	r2,-40(fp)
    ef58:	1885883a 	add	r2,r3,r2
    ef5c:	10c1ffcc 	andi	r3,r2,2047
    ef60:	e0bffc17 	ldw	r2,-16(fp)
    ef64:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ef68:	e0bffe17 	ldw	r2,-8(fp)
    ef6c:	00bfc716 	blt	zero,r2,ee8c <__alt_data_end+0xfffefa8c>
    ef70:	00000106 	br	ef78 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    ef74:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ef78:	0005303a 	rdctl	r2,status
    ef7c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ef80:	e0fffb17 	ldw	r3,-20(fp)
    ef84:	00bfff84 	movi	r2,-2
    ef88:	1884703a 	and	r2,r3,r2
    ef8c:	1001703a 	wrctl	status,r2
  
  return context;
    ef90:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    ef94:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ef98:	e0bffc17 	ldw	r2,-16(fp)
    ef9c:	10800817 	ldw	r2,32(r2)
    efa0:	10c00094 	ori	r3,r2,2
    efa4:	e0bffc17 	ldw	r2,-16(fp)
    efa8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    efac:	e0bffc17 	ldw	r2,-16(fp)
    efb0:	10800017 	ldw	r2,0(r2)
    efb4:	10800104 	addi	r2,r2,4
    efb8:	1007883a 	mov	r3,r2
    efbc:	e0bffc17 	ldw	r2,-16(fp)
    efc0:	10800817 	ldw	r2,32(r2)
    efc4:	18800035 	stwio	r2,0(r3)
    efc8:	e0bffa17 	ldw	r2,-24(fp)
    efcc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    efd0:	e0bff817 	ldw	r2,-32(fp)
    efd4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    efd8:	e0bffe17 	ldw	r2,-8(fp)
    efdc:	0080100e 	bge	zero,r2,f020 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    efe0:	e0bfff17 	ldw	r2,-4(fp)
    efe4:	1090000c 	andi	r2,r2,16384
    efe8:	1000101e 	bne	r2,zero,f02c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    efec:	0001883a 	nop
    eff0:	e0bffc17 	ldw	r2,-16(fp)
    eff4:	10c00d17 	ldw	r3,52(r2)
    eff8:	e0bff517 	ldw	r2,-44(fp)
    effc:	1880051e 	bne	r3,r2,f014 <altera_avalon_jtag_uart_write+0x1b8>
    f000:	e0bffc17 	ldw	r2,-16(fp)
    f004:	10c00917 	ldw	r3,36(r2)
    f008:	e0bffc17 	ldw	r2,-16(fp)
    f00c:	10800117 	ldw	r2,4(r2)
    f010:	18bff736 	bltu	r3,r2,eff0 <__alt_data_end+0xfffefbf0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    f014:	e0bffc17 	ldw	r2,-16(fp)
    f018:	10800917 	ldw	r2,36(r2)
    f01c:	1000051e 	bne	r2,zero,f034 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    f020:	e0bffe17 	ldw	r2,-8(fp)
    f024:	00bfd016 	blt	zero,r2,ef68 <__alt_data_end+0xfffefb68>
    f028:	00000306 	br	f038 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    f02c:	0001883a 	nop
    f030:	00000106 	br	f038 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    f034:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    f038:	e0fffd17 	ldw	r3,-12(fp)
    f03c:	e0bff717 	ldw	r2,-36(fp)
    f040:	18800426 	beq	r3,r2,f054 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    f044:	e0fffd17 	ldw	r3,-12(fp)
    f048:	e0bff717 	ldw	r2,-36(fp)
    f04c:	1885c83a 	sub	r2,r3,r2
    f050:	00000606 	br	f06c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    f054:	e0bfff17 	ldw	r2,-4(fp)
    f058:	1090000c 	andi	r2,r2,16384
    f05c:	10000226 	beq	r2,zero,f068 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    f060:	00bffd44 	movi	r2,-11
    f064:	00000106 	br	f06c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    f068:	00bffec4 	movi	r2,-5
}
    f06c:	e037883a 	mov	sp,fp
    f070:	dfc00117 	ldw	ra,4(sp)
    f074:	df000017 	ldw	fp,0(sp)
    f078:	dec00204 	addi	sp,sp,8
    f07c:	f800283a 	ret

0000f080 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    f080:	defffa04 	addi	sp,sp,-24
    f084:	dfc00515 	stw	ra,20(sp)
    f088:	df000415 	stw	fp,16(sp)
    f08c:	df000404 	addi	fp,sp,16
    f090:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    f094:	0007883a 	mov	r3,zero
    f098:	e0bfff17 	ldw	r2,-4(fp)
    f09c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    f0a0:	e0bfff17 	ldw	r2,-4(fp)
    f0a4:	10800104 	addi	r2,r2,4
    f0a8:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f0ac:	0005303a 	rdctl	r2,status
    f0b0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f0b4:	e0fffd17 	ldw	r3,-12(fp)
    f0b8:	00bfff84 	movi	r2,-2
    f0bc:	1884703a 	and	r2,r3,r2
    f0c0:	1001703a 	wrctl	status,r2
  
  return context;
    f0c4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    f0c8:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
    f0cc:	000f9000 	call	f900 <alt_tick>
    f0d0:	e0bffc17 	ldw	r2,-16(fp)
    f0d4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f0d8:	e0bffe17 	ldw	r2,-8(fp)
    f0dc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    f0e0:	0001883a 	nop
    f0e4:	e037883a 	mov	sp,fp
    f0e8:	dfc00117 	ldw	ra,4(sp)
    f0ec:	df000017 	ldw	fp,0(sp)
    f0f0:	dec00204 	addi	sp,sp,8
    f0f4:	f800283a 	ret

0000f0f8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    f0f8:	defff804 	addi	sp,sp,-32
    f0fc:	dfc00715 	stw	ra,28(sp)
    f100:	df000615 	stw	fp,24(sp)
    f104:	df000604 	addi	fp,sp,24
    f108:	e13ffc15 	stw	r4,-16(fp)
    f10c:	e17ffd15 	stw	r5,-12(fp)
    f110:	e1bffe15 	stw	r6,-8(fp)
    f114:	e1ffff15 	stw	r7,-4(fp)
    f118:	e0bfff17 	ldw	r2,-4(fp)
    f11c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    f120:	d0a6de17 	ldw	r2,-25736(gp)
    f124:	1000021e 	bne	r2,zero,f130 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    f128:	e0bffb17 	ldw	r2,-20(fp)
    f12c:	d0a6de15 	stw	r2,-25736(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    f130:	e0bffc17 	ldw	r2,-16(fp)
    f134:	10800104 	addi	r2,r2,4
    f138:	00c001c4 	movi	r3,7
    f13c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
    f140:	d8000015 	stw	zero,0(sp)
    f144:	e1fffc17 	ldw	r7,-16(fp)
    f148:	01800074 	movhi	r6,1
    f14c:	31bc2004 	addi	r6,r6,-3968
    f150:	e17ffe17 	ldw	r5,-8(fp)
    f154:	e13ffd17 	ldw	r4,-12(fp)
    f158:	000db4c0 	call	db4c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
    f15c:	0001883a 	nop
    f160:	e037883a 	mov	sp,fp
    f164:	dfc00117 	ldw	ra,4(sp)
    f168:	df000017 	ldw	fp,0(sp)
    f16c:	dec00204 	addi	sp,sp,8
    f170:	f800283a 	ret

0000f174 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    f174:	defff504 	addi	sp,sp,-44
    f178:	df000a15 	stw	fp,40(sp)
    f17c:	df000a04 	addi	fp,sp,40
    f180:	e13ffc15 	stw	r4,-16(fp)
    f184:	e17ffd15 	stw	r5,-12(fp)
    f188:	e1bffe15 	stw	r6,-8(fp)
    f18c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    f190:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    f194:	d0a6de17 	ldw	r2,-25736(gp)
  
  if (alt_ticks_per_second ())
    f198:	10003c26 	beq	r2,zero,f28c <alt_alarm_start+0x118>
  {
    if (alarm)
    f19c:	e0bffc17 	ldw	r2,-16(fp)
    f1a0:	10003826 	beq	r2,zero,f284 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    f1a4:	e0bffc17 	ldw	r2,-16(fp)
    f1a8:	e0fffe17 	ldw	r3,-8(fp)
    f1ac:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    f1b0:	e0bffc17 	ldw	r2,-16(fp)
    f1b4:	e0ffff17 	ldw	r3,-4(fp)
    f1b8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f1bc:	0005303a 	rdctl	r2,status
    f1c0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f1c4:	e0fff917 	ldw	r3,-28(fp)
    f1c8:	00bfff84 	movi	r2,-2
    f1cc:	1884703a 	and	r2,r3,r2
    f1d0:	1001703a 	wrctl	status,r2
  
  return context;
    f1d4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    f1d8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    f1dc:	d0a6df17 	ldw	r2,-25732(gp)
      
      current_nticks = alt_nticks();
    f1e0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    f1e4:	e0fffd17 	ldw	r3,-12(fp)
    f1e8:	e0bff617 	ldw	r2,-40(fp)
    f1ec:	1885883a 	add	r2,r3,r2
    f1f0:	10c00044 	addi	r3,r2,1
    f1f4:	e0bffc17 	ldw	r2,-16(fp)
    f1f8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    f1fc:	e0bffc17 	ldw	r2,-16(fp)
    f200:	10c00217 	ldw	r3,8(r2)
    f204:	e0bff617 	ldw	r2,-40(fp)
    f208:	1880042e 	bgeu	r3,r2,f21c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    f20c:	e0bffc17 	ldw	r2,-16(fp)
    f210:	00c00044 	movi	r3,1
    f214:	10c00405 	stb	r3,16(r2)
    f218:	00000206 	br	f224 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    f21c:	e0bffc17 	ldw	r2,-16(fp)
    f220:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    f224:	e0bffc17 	ldw	r2,-16(fp)
    f228:	d0e00e04 	addi	r3,gp,-32712
    f22c:	e0fffa15 	stw	r3,-24(fp)
    f230:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f234:	e0bffb17 	ldw	r2,-20(fp)
    f238:	e0fffa17 	ldw	r3,-24(fp)
    f23c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f240:	e0bffa17 	ldw	r2,-24(fp)
    f244:	10c00017 	ldw	r3,0(r2)
    f248:	e0bffb17 	ldw	r2,-20(fp)
    f24c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f250:	e0bffa17 	ldw	r2,-24(fp)
    f254:	10800017 	ldw	r2,0(r2)
    f258:	e0fffb17 	ldw	r3,-20(fp)
    f25c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f260:	e0bffa17 	ldw	r2,-24(fp)
    f264:	e0fffb17 	ldw	r3,-20(fp)
    f268:	10c00015 	stw	r3,0(r2)
    f26c:	e0bff817 	ldw	r2,-32(fp)
    f270:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f274:	e0bff717 	ldw	r2,-36(fp)
    f278:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    f27c:	0005883a 	mov	r2,zero
    f280:	00000306 	br	f290 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    f284:	00bffa84 	movi	r2,-22
    f288:	00000106 	br	f290 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    f28c:	00bfde84 	movi	r2,-134
  }
}
    f290:	e037883a 	mov	sp,fp
    f294:	df000017 	ldw	fp,0(sp)
    f298:	dec00104 	addi	sp,sp,4
    f29c:	f800283a 	ret

0000f2a0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    f2a0:	deffff04 	addi	sp,sp,-4
    f2a4:	df000015 	stw	fp,0(sp)
    f2a8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    f2ac:	0001883a 	nop
    f2b0:	e037883a 	mov	sp,fp
    f2b4:	df000017 	ldw	fp,0(sp)
    f2b8:	dec00104 	addi	sp,sp,4
    f2bc:	f800283a 	ret

0000f2c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f2c0:	defffe04 	addi	sp,sp,-8
    f2c4:	dfc00115 	stw	ra,4(sp)
    f2c8:	df000015 	stw	fp,0(sp)
    f2cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f2d0:	d0a00b17 	ldw	r2,-32724(gp)
    f2d4:	10000326 	beq	r2,zero,f2e4 <alt_get_errno+0x24>
    f2d8:	d0a00b17 	ldw	r2,-32724(gp)
    f2dc:	103ee83a 	callr	r2
    f2e0:	00000106 	br	f2e8 <alt_get_errno+0x28>
    f2e4:	d0a6d904 	addi	r2,gp,-25756
}
    f2e8:	e037883a 	mov	sp,fp
    f2ec:	dfc00117 	ldw	ra,4(sp)
    f2f0:	df000017 	ldw	fp,0(sp)
    f2f4:	dec00204 	addi	sp,sp,8
    f2f8:	f800283a 	ret

0000f2fc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    f2fc:	defffa04 	addi	sp,sp,-24
    f300:	dfc00515 	stw	ra,20(sp)
    f304:	df000415 	stw	fp,16(sp)
    f308:	df000404 	addi	fp,sp,16
    f30c:	e13ffe15 	stw	r4,-8(fp)
    f310:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    f314:	e0bffe17 	ldw	r2,-8(fp)
    f318:	10000326 	beq	r2,zero,f328 <alt_dev_llist_insert+0x2c>
    f31c:	e0bffe17 	ldw	r2,-8(fp)
    f320:	10800217 	ldw	r2,8(r2)
    f324:	1000061e 	bne	r2,zero,f340 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    f328:	000f2c00 	call	f2c0 <alt_get_errno>
    f32c:	1007883a 	mov	r3,r2
    f330:	00800584 	movi	r2,22
    f334:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    f338:	00bffa84 	movi	r2,-22
    f33c:	00001306 	br	f38c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    f340:	e0bffe17 	ldw	r2,-8(fp)
    f344:	e0ffff17 	ldw	r3,-4(fp)
    f348:	e0fffc15 	stw	r3,-16(fp)
    f34c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f350:	e0bffd17 	ldw	r2,-12(fp)
    f354:	e0fffc17 	ldw	r3,-16(fp)
    f358:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f35c:	e0bffc17 	ldw	r2,-16(fp)
    f360:	10c00017 	ldw	r3,0(r2)
    f364:	e0bffd17 	ldw	r2,-12(fp)
    f368:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f36c:	e0bffc17 	ldw	r2,-16(fp)
    f370:	10800017 	ldw	r2,0(r2)
    f374:	e0fffd17 	ldw	r3,-12(fp)
    f378:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f37c:	e0bffc17 	ldw	r2,-16(fp)
    f380:	e0fffd17 	ldw	r3,-12(fp)
    f384:	10c00015 	stw	r3,0(r2)

  return 0;  
    f388:	0005883a 	mov	r2,zero
}
    f38c:	e037883a 	mov	sp,fp
    f390:	dfc00117 	ldw	ra,4(sp)
    f394:	df000017 	ldw	fp,0(sp)
    f398:	dec00204 	addi	sp,sp,8
    f39c:	f800283a 	ret

0000f3a0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    f3a0:	defffd04 	addi	sp,sp,-12
    f3a4:	dfc00215 	stw	ra,8(sp)
    f3a8:	df000115 	stw	fp,4(sp)
    f3ac:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f3b0:	00800074 	movhi	r2,1
    f3b4:	10800604 	addi	r2,r2,24
    f3b8:	e0bfff15 	stw	r2,-4(fp)
    f3bc:	00000606 	br	f3d8 <_do_ctors+0x38>
        (*ctor) (); 
    f3c0:	e0bfff17 	ldw	r2,-4(fp)
    f3c4:	10800017 	ldw	r2,0(r2)
    f3c8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f3cc:	e0bfff17 	ldw	r2,-4(fp)
    f3d0:	10bfff04 	addi	r2,r2,-4
    f3d4:	e0bfff15 	stw	r2,-4(fp)
    f3d8:	e0ffff17 	ldw	r3,-4(fp)
    f3dc:	00800074 	movhi	r2,1
    f3e0:	10800704 	addi	r2,r2,28
    f3e4:	18bff62e 	bgeu	r3,r2,f3c0 <__alt_data_end+0xfffeffc0>
        (*ctor) (); 
}
    f3e8:	0001883a 	nop
    f3ec:	e037883a 	mov	sp,fp
    f3f0:	dfc00117 	ldw	ra,4(sp)
    f3f4:	df000017 	ldw	fp,0(sp)
    f3f8:	dec00204 	addi	sp,sp,8
    f3fc:	f800283a 	ret

0000f400 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    f400:	defffd04 	addi	sp,sp,-12
    f404:	dfc00215 	stw	ra,8(sp)
    f408:	df000115 	stw	fp,4(sp)
    f40c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f410:	00800074 	movhi	r2,1
    f414:	10800604 	addi	r2,r2,24
    f418:	e0bfff15 	stw	r2,-4(fp)
    f41c:	00000606 	br	f438 <_do_dtors+0x38>
        (*dtor) (); 
    f420:	e0bfff17 	ldw	r2,-4(fp)
    f424:	10800017 	ldw	r2,0(r2)
    f428:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f42c:	e0bfff17 	ldw	r2,-4(fp)
    f430:	10bfff04 	addi	r2,r2,-4
    f434:	e0bfff15 	stw	r2,-4(fp)
    f438:	e0ffff17 	ldw	r3,-4(fp)
    f43c:	00800074 	movhi	r2,1
    f440:	10800704 	addi	r2,r2,28
    f444:	18bff62e 	bgeu	r3,r2,f420 <__alt_data_end+0xffff0020>
        (*dtor) (); 
}
    f448:	0001883a 	nop
    f44c:	e037883a 	mov	sp,fp
    f450:	dfc00117 	ldw	ra,4(sp)
    f454:	df000017 	ldw	fp,0(sp)
    f458:	dec00204 	addi	sp,sp,8
    f45c:	f800283a 	ret

0000f460 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    f460:	deffff04 	addi	sp,sp,-4
    f464:	df000015 	stw	fp,0(sp)
    f468:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    f46c:	0001883a 	nop
    f470:	e037883a 	mov	sp,fp
    f474:	df000017 	ldw	fp,0(sp)
    f478:	dec00104 	addi	sp,sp,4
    f47c:	f800283a 	ret

0000f480 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    f480:	defff804 	addi	sp,sp,-32
    f484:	dfc00715 	stw	ra,28(sp)
    f488:	df000615 	stw	fp,24(sp)
    f48c:	dc000515 	stw	r16,20(sp)
    f490:	df000604 	addi	fp,sp,24
    f494:	e13ffb15 	stw	r4,-20(fp)
    f498:	e17ffc15 	stw	r5,-16(fp)
    f49c:	e1bffd15 	stw	r6,-12(fp)
    f4a0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    f4a4:	e1bffe17 	ldw	r6,-8(fp)
    f4a8:	e17ffd17 	ldw	r5,-12(fp)
    f4ac:	e13ffc17 	ldw	r4,-16(fp)
    f4b0:	000f7080 	call	f708 <open>
    f4b4:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    f4b8:	e0bffa17 	ldw	r2,-24(fp)
    f4bc:	10002216 	blt	r2,zero,f548 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    f4c0:	04000074 	movhi	r16,1
    f4c4:	84031404 	addi	r16,r16,3152
    f4c8:	e0bffa17 	ldw	r2,-24(fp)
    f4cc:	01400304 	movi	r5,12
    f4d0:	1009883a 	mov	r4,r2
    f4d4:	000b04c0 	call	b04c <__mulsi3>
    f4d8:	8085883a 	add	r2,r16,r2
    f4dc:	10c00017 	ldw	r3,0(r2)
    f4e0:	e0bffb17 	ldw	r2,-20(fp)
    f4e4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    f4e8:	04000074 	movhi	r16,1
    f4ec:	84031404 	addi	r16,r16,3152
    f4f0:	e0bffa17 	ldw	r2,-24(fp)
    f4f4:	01400304 	movi	r5,12
    f4f8:	1009883a 	mov	r4,r2
    f4fc:	000b04c0 	call	b04c <__mulsi3>
    f500:	8085883a 	add	r2,r16,r2
    f504:	10800104 	addi	r2,r2,4
    f508:	10c00017 	ldw	r3,0(r2)
    f50c:	e0bffb17 	ldw	r2,-20(fp)
    f510:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f514:	04000074 	movhi	r16,1
    f518:	84031404 	addi	r16,r16,3152
    f51c:	e0bffa17 	ldw	r2,-24(fp)
    f520:	01400304 	movi	r5,12
    f524:	1009883a 	mov	r4,r2
    f528:	000b04c0 	call	b04c <__mulsi3>
    f52c:	8085883a 	add	r2,r16,r2
    f530:	10800204 	addi	r2,r2,8
    f534:	10c00017 	ldw	r3,0(r2)
    f538:	e0bffb17 	ldw	r2,-20(fp)
    f53c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    f540:	e13ffa17 	ldw	r4,-24(fp)
    f544:	000e2dc0 	call	e2dc <alt_release_fd>
  }
} 
    f548:	0001883a 	nop
    f54c:	e6ffff04 	addi	sp,fp,-4
    f550:	dfc00217 	ldw	ra,8(sp)
    f554:	df000117 	ldw	fp,4(sp)
    f558:	dc000017 	ldw	r16,0(sp)
    f55c:	dec00304 	addi	sp,sp,12
    f560:	f800283a 	ret

0000f564 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    f564:	defffb04 	addi	sp,sp,-20
    f568:	dfc00415 	stw	ra,16(sp)
    f56c:	df000315 	stw	fp,12(sp)
    f570:	df000304 	addi	fp,sp,12
    f574:	e13ffd15 	stw	r4,-12(fp)
    f578:	e17ffe15 	stw	r5,-8(fp)
    f57c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    f580:	01c07fc4 	movi	r7,511
    f584:	01800044 	movi	r6,1
    f588:	e17ffd17 	ldw	r5,-12(fp)
    f58c:	01000074 	movhi	r4,1
    f590:	21031704 	addi	r4,r4,3164
    f594:	000f4800 	call	f480 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    f598:	01c07fc4 	movi	r7,511
    f59c:	000d883a 	mov	r6,zero
    f5a0:	e17ffe17 	ldw	r5,-8(fp)
    f5a4:	01000074 	movhi	r4,1
    f5a8:	21031404 	addi	r4,r4,3152
    f5ac:	000f4800 	call	f480 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    f5b0:	01c07fc4 	movi	r7,511
    f5b4:	01800044 	movi	r6,1
    f5b8:	e17fff17 	ldw	r5,-4(fp)
    f5bc:	01000074 	movhi	r4,1
    f5c0:	21031a04 	addi	r4,r4,3176
    f5c4:	000f4800 	call	f480 <alt_open_fd>
}  
    f5c8:	0001883a 	nop
    f5cc:	e037883a 	mov	sp,fp
    f5d0:	dfc00117 	ldw	ra,4(sp)
    f5d4:	df000017 	ldw	fp,0(sp)
    f5d8:	dec00204 	addi	sp,sp,8
    f5dc:	f800283a 	ret

0000f5e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f5e0:	defffe04 	addi	sp,sp,-8
    f5e4:	dfc00115 	stw	ra,4(sp)
    f5e8:	df000015 	stw	fp,0(sp)
    f5ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f5f0:	d0a00b17 	ldw	r2,-32724(gp)
    f5f4:	10000326 	beq	r2,zero,f604 <alt_get_errno+0x24>
    f5f8:	d0a00b17 	ldw	r2,-32724(gp)
    f5fc:	103ee83a 	callr	r2
    f600:	00000106 	br	f608 <alt_get_errno+0x28>
    f604:	d0a6d904 	addi	r2,gp,-25756
}
    f608:	e037883a 	mov	sp,fp
    f60c:	dfc00117 	ldw	ra,4(sp)
    f610:	df000017 	ldw	fp,0(sp)
    f614:	dec00204 	addi	sp,sp,8
    f618:	f800283a 	ret

0000f61c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    f61c:	defffb04 	addi	sp,sp,-20
    f620:	dfc00415 	stw	ra,16(sp)
    f624:	df000315 	stw	fp,12(sp)
    f628:	dc000215 	stw	r16,8(sp)
    f62c:	df000304 	addi	fp,sp,12
    f630:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    f634:	e0bffe17 	ldw	r2,-8(fp)
    f638:	10800217 	ldw	r2,8(r2)
    f63c:	10d00034 	orhi	r3,r2,16384
    f640:	e0bffe17 	ldw	r2,-8(fp)
    f644:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    f648:	e03ffd15 	stw	zero,-12(fp)
    f64c:	00002306 	br	f6dc <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    f650:	04000074 	movhi	r16,1
    f654:	84031404 	addi	r16,r16,3152
    f658:	e0bffd17 	ldw	r2,-12(fp)
    f65c:	01400304 	movi	r5,12
    f660:	1009883a 	mov	r4,r2
    f664:	000b04c0 	call	b04c <__mulsi3>
    f668:	8085883a 	add	r2,r16,r2
    f66c:	10c00017 	ldw	r3,0(r2)
    f670:	e0bffe17 	ldw	r2,-8(fp)
    f674:	10800017 	ldw	r2,0(r2)
    f678:	1880151e 	bne	r3,r2,f6d0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f67c:	04000074 	movhi	r16,1
    f680:	84031404 	addi	r16,r16,3152
    f684:	e0bffd17 	ldw	r2,-12(fp)
    f688:	01400304 	movi	r5,12
    f68c:	1009883a 	mov	r4,r2
    f690:	000b04c0 	call	b04c <__mulsi3>
    f694:	8085883a 	add	r2,r16,r2
    f698:	10800204 	addi	r2,r2,8
    f69c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    f6a0:	10000b0e 	bge	r2,zero,f6d0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    f6a4:	01400304 	movi	r5,12
    f6a8:	e13ffd17 	ldw	r4,-12(fp)
    f6ac:	000b04c0 	call	b04c <__mulsi3>
    f6b0:	1007883a 	mov	r3,r2
    f6b4:	00800074 	movhi	r2,1
    f6b8:	10831404 	addi	r2,r2,3152
    f6bc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f6c0:	e0bffe17 	ldw	r2,-8(fp)
    f6c4:	18800226 	beq	r3,r2,f6d0 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    f6c8:	00bffcc4 	movi	r2,-13
    f6cc:	00000806 	br	f6f0 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    f6d0:	e0bffd17 	ldw	r2,-12(fp)
    f6d4:	10800044 	addi	r2,r2,1
    f6d8:	e0bffd15 	stw	r2,-12(fp)
    f6dc:	d0a00a17 	ldw	r2,-32728(gp)
    f6e0:	1007883a 	mov	r3,r2
    f6e4:	e0bffd17 	ldw	r2,-12(fp)
    f6e8:	18bfd92e 	bgeu	r3,r2,f650 <__alt_data_end+0xffff0250>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    f6ec:	0005883a 	mov	r2,zero
}
    f6f0:	e6ffff04 	addi	sp,fp,-4
    f6f4:	dfc00217 	ldw	ra,8(sp)
    f6f8:	df000117 	ldw	fp,4(sp)
    f6fc:	dc000017 	ldw	r16,0(sp)
    f700:	dec00304 	addi	sp,sp,12
    f704:	f800283a 	ret

0000f708 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    f708:	defff604 	addi	sp,sp,-40
    f70c:	dfc00915 	stw	ra,36(sp)
    f710:	df000815 	stw	fp,32(sp)
    f714:	df000804 	addi	fp,sp,32
    f718:	e13ffd15 	stw	r4,-12(fp)
    f71c:	e17ffe15 	stw	r5,-8(fp)
    f720:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    f724:	00bfffc4 	movi	r2,-1
    f728:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    f72c:	00bffb44 	movi	r2,-19
    f730:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    f734:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    f738:	d1600804 	addi	r5,gp,-32736
    f73c:	e13ffd17 	ldw	r4,-12(fp)
    f740:	000fa2c0 	call	fa2c <alt_find_dev>
    f744:	e0bff815 	stw	r2,-32(fp)
    f748:	e0bff817 	ldw	r2,-32(fp)
    f74c:	1000051e 	bne	r2,zero,f764 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    f750:	e13ffd17 	ldw	r4,-12(fp)
    f754:	000fabc0 	call	fabc <alt_find_file>
    f758:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    f75c:	00800044 	movi	r2,1
    f760:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    f764:	e0bff817 	ldw	r2,-32(fp)
    f768:	10002b26 	beq	r2,zero,f818 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
    f76c:	e13ff817 	ldw	r4,-32(fp)
    f770:	000fbc40 	call	fbc4 <alt_get_fd>
    f774:	e0bff915 	stw	r2,-28(fp)
    f778:	e0bff917 	ldw	r2,-28(fp)
    f77c:	1000030e 	bge	r2,zero,f78c <open+0x84>
    {
      status = index;
    f780:	e0bff917 	ldw	r2,-28(fp)
    f784:	e0bffa15 	stw	r2,-24(fp)
    f788:	00002506 	br	f820 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
    f78c:	01400304 	movi	r5,12
    f790:	e13ff917 	ldw	r4,-28(fp)
    f794:	000b04c0 	call	b04c <__mulsi3>
    f798:	1007883a 	mov	r3,r2
    f79c:	00800074 	movhi	r2,1
    f7a0:	10831404 	addi	r2,r2,3152
    f7a4:	1885883a 	add	r2,r3,r2
    f7a8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f7ac:	e0fffe17 	ldw	r3,-8(fp)
    f7b0:	00900034 	movhi	r2,16384
    f7b4:	10bfffc4 	addi	r2,r2,-1
    f7b8:	1886703a 	and	r3,r3,r2
    f7bc:	e0bffc17 	ldw	r2,-16(fp)
    f7c0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    f7c4:	e0bffb17 	ldw	r2,-20(fp)
    f7c8:	1000051e 	bne	r2,zero,f7e0 <open+0xd8>
    f7cc:	e13ffc17 	ldw	r4,-16(fp)
    f7d0:	000f61c0 	call	f61c <alt_file_locked>
    f7d4:	e0bffa15 	stw	r2,-24(fp)
    f7d8:	e0bffa17 	ldw	r2,-24(fp)
    f7dc:	10001016 	blt	r2,zero,f820 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    f7e0:	e0bff817 	ldw	r2,-32(fp)
    f7e4:	10800317 	ldw	r2,12(r2)
    f7e8:	10000826 	beq	r2,zero,f80c <open+0x104>
    f7ec:	e0bff817 	ldw	r2,-32(fp)
    f7f0:	10800317 	ldw	r2,12(r2)
    f7f4:	e1ffff17 	ldw	r7,-4(fp)
    f7f8:	e1bffe17 	ldw	r6,-8(fp)
    f7fc:	e17ffd17 	ldw	r5,-12(fp)
    f800:	e13ffc17 	ldw	r4,-16(fp)
    f804:	103ee83a 	callr	r2
    f808:	00000106 	br	f810 <open+0x108>
    f80c:	0005883a 	mov	r2,zero
    f810:	e0bffa15 	stw	r2,-24(fp)
    f814:	00000206 	br	f820 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
    f818:	00bffb44 	movi	r2,-19
    f81c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    f820:	e0bffa17 	ldw	r2,-24(fp)
    f824:	1000090e 	bge	r2,zero,f84c <open+0x144>
  {
    alt_release_fd (index);  
    f828:	e13ff917 	ldw	r4,-28(fp)
    f82c:	000e2dc0 	call	e2dc <alt_release_fd>
    ALT_ERRNO = -status;
    f830:	000f5e00 	call	f5e0 <alt_get_errno>
    f834:	1007883a 	mov	r3,r2
    f838:	e0bffa17 	ldw	r2,-24(fp)
    f83c:	0085c83a 	sub	r2,zero,r2
    f840:	18800015 	stw	r2,0(r3)
    return -1;
    f844:	00bfffc4 	movi	r2,-1
    f848:	00000106 	br	f850 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
    f84c:	e0bff917 	ldw	r2,-28(fp)
}
    f850:	e037883a 	mov	sp,fp
    f854:	dfc00117 	ldw	ra,4(sp)
    f858:	df000017 	ldw	fp,0(sp)
    f85c:	dec00204 	addi	sp,sp,8
    f860:	f800283a 	ret

0000f864 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    f864:	defffa04 	addi	sp,sp,-24
    f868:	df000515 	stw	fp,20(sp)
    f86c:	df000504 	addi	fp,sp,20
    f870:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f874:	0005303a 	rdctl	r2,status
    f878:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f87c:	e0fffc17 	ldw	r3,-16(fp)
    f880:	00bfff84 	movi	r2,-2
    f884:	1884703a 	and	r2,r3,r2
    f888:	1001703a 	wrctl	status,r2
  
  return context;
    f88c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    f890:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    f894:	e0bfff17 	ldw	r2,-4(fp)
    f898:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    f89c:	e0bffd17 	ldw	r2,-12(fp)
    f8a0:	10800017 	ldw	r2,0(r2)
    f8a4:	e0fffd17 	ldw	r3,-12(fp)
    f8a8:	18c00117 	ldw	r3,4(r3)
    f8ac:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    f8b0:	e0bffd17 	ldw	r2,-12(fp)
    f8b4:	10800117 	ldw	r2,4(r2)
    f8b8:	e0fffd17 	ldw	r3,-12(fp)
    f8bc:	18c00017 	ldw	r3,0(r3)
    f8c0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    f8c4:	e0bffd17 	ldw	r2,-12(fp)
    f8c8:	e0fffd17 	ldw	r3,-12(fp)
    f8cc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    f8d0:	e0bffd17 	ldw	r2,-12(fp)
    f8d4:	e0fffd17 	ldw	r3,-12(fp)
    f8d8:	10c00015 	stw	r3,0(r2)
    f8dc:	e0bffb17 	ldw	r2,-20(fp)
    f8e0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f8e4:	e0bffe17 	ldw	r2,-8(fp)
    f8e8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    f8ec:	0001883a 	nop
    f8f0:	e037883a 	mov	sp,fp
    f8f4:	df000017 	ldw	fp,0(sp)
    f8f8:	dec00104 	addi	sp,sp,4
    f8fc:	f800283a 	ret

0000f900 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    f900:	defffb04 	addi	sp,sp,-20
    f904:	dfc00415 	stw	ra,16(sp)
    f908:	df000315 	stw	fp,12(sp)
    f90c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    f910:	d0a00e17 	ldw	r2,-32712(gp)
    f914:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    f918:	d0a6df17 	ldw	r2,-25732(gp)
    f91c:	10800044 	addi	r2,r2,1
    f920:	d0a6df15 	stw	r2,-25732(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f924:	00002e06 	br	f9e0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    f928:	e0bffd17 	ldw	r2,-12(fp)
    f92c:	10800017 	ldw	r2,0(r2)
    f930:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    f934:	e0bffd17 	ldw	r2,-12(fp)
    f938:	10800403 	ldbu	r2,16(r2)
    f93c:	10803fcc 	andi	r2,r2,255
    f940:	10000426 	beq	r2,zero,f954 <alt_tick+0x54>
    f944:	d0a6df17 	ldw	r2,-25732(gp)
    f948:	1000021e 	bne	r2,zero,f954 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    f94c:	e0bffd17 	ldw	r2,-12(fp)
    f950:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    f954:	e0bffd17 	ldw	r2,-12(fp)
    f958:	10800217 	ldw	r2,8(r2)
    f95c:	d0e6df17 	ldw	r3,-25732(gp)
    f960:	18801d36 	bltu	r3,r2,f9d8 <alt_tick+0xd8>
    f964:	e0bffd17 	ldw	r2,-12(fp)
    f968:	10800403 	ldbu	r2,16(r2)
    f96c:	10803fcc 	andi	r2,r2,255
    f970:	1000191e 	bne	r2,zero,f9d8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    f974:	e0bffd17 	ldw	r2,-12(fp)
    f978:	10800317 	ldw	r2,12(r2)
    f97c:	e0fffd17 	ldw	r3,-12(fp)
    f980:	18c00517 	ldw	r3,20(r3)
    f984:	1809883a 	mov	r4,r3
    f988:	103ee83a 	callr	r2
    f98c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    f990:	e0bfff17 	ldw	r2,-4(fp)
    f994:	1000031e 	bne	r2,zero,f9a4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    f998:	e13ffd17 	ldw	r4,-12(fp)
    f99c:	000f8640 	call	f864 <alt_alarm_stop>
    f9a0:	00000d06 	br	f9d8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    f9a4:	e0bffd17 	ldw	r2,-12(fp)
    f9a8:	10c00217 	ldw	r3,8(r2)
    f9ac:	e0bfff17 	ldw	r2,-4(fp)
    f9b0:	1887883a 	add	r3,r3,r2
    f9b4:	e0bffd17 	ldw	r2,-12(fp)
    f9b8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    f9bc:	e0bffd17 	ldw	r2,-12(fp)
    f9c0:	10c00217 	ldw	r3,8(r2)
    f9c4:	d0a6df17 	ldw	r2,-25732(gp)
    f9c8:	1880032e 	bgeu	r3,r2,f9d8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    f9cc:	e0bffd17 	ldw	r2,-12(fp)
    f9d0:	00c00044 	movi	r3,1
    f9d4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    f9d8:	e0bffe17 	ldw	r2,-8(fp)
    f9dc:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f9e0:	e0fffd17 	ldw	r3,-12(fp)
    f9e4:	d0a00e04 	addi	r2,gp,-32712
    f9e8:	18bfcf1e 	bne	r3,r2,f928 <__alt_data_end+0xffff0528>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f9ec:	0001883a 	nop
}
    f9f0:	0001883a 	nop
    f9f4:	e037883a 	mov	sp,fp
    f9f8:	dfc00117 	ldw	ra,4(sp)
    f9fc:	df000017 	ldw	fp,0(sp)
    fa00:	dec00204 	addi	sp,sp,8
    fa04:	f800283a 	ret

0000fa08 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
    fa08:	deffff04 	addi	sp,sp,-4
    fa0c:	df000015 	stw	fp,0(sp)
    fa10:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    fa14:	000170fa 	wrctl	ienable,zero
}
    fa18:	0001883a 	nop
    fa1c:	e037883a 	mov	sp,fp
    fa20:	df000017 	ldw	fp,0(sp)
    fa24:	dec00104 	addi	sp,sp,4
    fa28:	f800283a 	ret

0000fa2c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    fa2c:	defffa04 	addi	sp,sp,-24
    fa30:	dfc00515 	stw	ra,20(sp)
    fa34:	df000415 	stw	fp,16(sp)
    fa38:	df000404 	addi	fp,sp,16
    fa3c:	e13ffe15 	stw	r4,-8(fp)
    fa40:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    fa44:	e0bfff17 	ldw	r2,-4(fp)
    fa48:	10800017 	ldw	r2,0(r2)
    fa4c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    fa50:	e13ffe17 	ldw	r4,-8(fp)
    fa54:	00076740 	call	7674 <strlen>
    fa58:	10800044 	addi	r2,r2,1
    fa5c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    fa60:	00000d06 	br	fa98 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    fa64:	e0bffc17 	ldw	r2,-16(fp)
    fa68:	10800217 	ldw	r2,8(r2)
    fa6c:	e0fffd17 	ldw	r3,-12(fp)
    fa70:	180d883a 	mov	r6,r3
    fa74:	e17ffe17 	ldw	r5,-8(fp)
    fa78:	1009883a 	mov	r4,r2
    fa7c:	000fcd40 	call	fcd4 <memcmp>
    fa80:	1000021e 	bne	r2,zero,fa8c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    fa84:	e0bffc17 	ldw	r2,-16(fp)
    fa88:	00000706 	br	faa8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    fa8c:	e0bffc17 	ldw	r2,-16(fp)
    fa90:	10800017 	ldw	r2,0(r2)
    fa94:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    fa98:	e0fffc17 	ldw	r3,-16(fp)
    fa9c:	e0bfff17 	ldw	r2,-4(fp)
    faa0:	18bff01e 	bne	r3,r2,fa64 <__alt_data_end+0xffff0664>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    faa4:	0005883a 	mov	r2,zero
}
    faa8:	e037883a 	mov	sp,fp
    faac:	dfc00117 	ldw	ra,4(sp)
    fab0:	df000017 	ldw	fp,0(sp)
    fab4:	dec00204 	addi	sp,sp,8
    fab8:	f800283a 	ret

0000fabc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    fabc:	defffb04 	addi	sp,sp,-20
    fac0:	dfc00415 	stw	ra,16(sp)
    fac4:	df000315 	stw	fp,12(sp)
    fac8:	df000304 	addi	fp,sp,12
    facc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    fad0:	d0a00617 	ldw	r2,-32744(gp)
    fad4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    fad8:	00003106 	br	fba0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    fadc:	e0bffd17 	ldw	r2,-12(fp)
    fae0:	10800217 	ldw	r2,8(r2)
    fae4:	1009883a 	mov	r4,r2
    fae8:	00076740 	call	7674 <strlen>
    faec:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    faf0:	e0bffd17 	ldw	r2,-12(fp)
    faf4:	10c00217 	ldw	r3,8(r2)
    faf8:	e0bffe17 	ldw	r2,-8(fp)
    fafc:	10bfffc4 	addi	r2,r2,-1
    fb00:	1885883a 	add	r2,r3,r2
    fb04:	10800003 	ldbu	r2,0(r2)
    fb08:	10803fcc 	andi	r2,r2,255
    fb0c:	1080201c 	xori	r2,r2,128
    fb10:	10bfe004 	addi	r2,r2,-128
    fb14:	10800bd8 	cmpnei	r2,r2,47
    fb18:	1000031e 	bne	r2,zero,fb28 <alt_find_file+0x6c>
    {
      len -= 1;
    fb1c:	e0bffe17 	ldw	r2,-8(fp)
    fb20:	10bfffc4 	addi	r2,r2,-1
    fb24:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    fb28:	e0bffe17 	ldw	r2,-8(fp)
    fb2c:	e0ffff17 	ldw	r3,-4(fp)
    fb30:	1885883a 	add	r2,r3,r2
    fb34:	10800003 	ldbu	r2,0(r2)
    fb38:	10803fcc 	andi	r2,r2,255
    fb3c:	1080201c 	xori	r2,r2,128
    fb40:	10bfe004 	addi	r2,r2,-128
    fb44:	10800be0 	cmpeqi	r2,r2,47
    fb48:	1000081e 	bne	r2,zero,fb6c <alt_find_file+0xb0>
    fb4c:	e0bffe17 	ldw	r2,-8(fp)
    fb50:	e0ffff17 	ldw	r3,-4(fp)
    fb54:	1885883a 	add	r2,r3,r2
    fb58:	10800003 	ldbu	r2,0(r2)
    fb5c:	10803fcc 	andi	r2,r2,255
    fb60:	1080201c 	xori	r2,r2,128
    fb64:	10bfe004 	addi	r2,r2,-128
    fb68:	10000a1e 	bne	r2,zero,fb94 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    fb6c:	e0bffd17 	ldw	r2,-12(fp)
    fb70:	10800217 	ldw	r2,8(r2)
    fb74:	e0fffe17 	ldw	r3,-8(fp)
    fb78:	180d883a 	mov	r6,r3
    fb7c:	e17fff17 	ldw	r5,-4(fp)
    fb80:	1009883a 	mov	r4,r2
    fb84:	000fcd40 	call	fcd4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    fb88:	1000021e 	bne	r2,zero,fb94 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    fb8c:	e0bffd17 	ldw	r2,-12(fp)
    fb90:	00000706 	br	fbb0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    fb94:	e0bffd17 	ldw	r2,-12(fp)
    fb98:	10800017 	ldw	r2,0(r2)
    fb9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    fba0:	e0fffd17 	ldw	r3,-12(fp)
    fba4:	d0a00604 	addi	r2,gp,-32744
    fba8:	18bfcc1e 	bne	r3,r2,fadc <__alt_data_end+0xffff06dc>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    fbac:	0005883a 	mov	r2,zero
}
    fbb0:	e037883a 	mov	sp,fp
    fbb4:	dfc00117 	ldw	ra,4(sp)
    fbb8:	df000017 	ldw	fp,0(sp)
    fbbc:	dec00204 	addi	sp,sp,8
    fbc0:	f800283a 	ret

0000fbc4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    fbc4:	defffa04 	addi	sp,sp,-24
    fbc8:	dfc00515 	stw	ra,20(sp)
    fbcc:	df000415 	stw	fp,16(sp)
    fbd0:	dc000315 	stw	r16,12(sp)
    fbd4:	df000404 	addi	fp,sp,16
    fbd8:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    fbdc:	00bffa04 	movi	r2,-24
    fbe0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    fbe4:	e03ffc15 	stw	zero,-16(fp)
    fbe8:	00001d06 	br	fc60 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
    fbec:	04000074 	movhi	r16,1
    fbf0:	84031404 	addi	r16,r16,3152
    fbf4:	e0bffc17 	ldw	r2,-16(fp)
    fbf8:	01400304 	movi	r5,12
    fbfc:	1009883a 	mov	r4,r2
    fc00:	000b04c0 	call	b04c <__mulsi3>
    fc04:	8085883a 	add	r2,r16,r2
    fc08:	10800017 	ldw	r2,0(r2)
    fc0c:	1000111e 	bne	r2,zero,fc54 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
    fc10:	04000074 	movhi	r16,1
    fc14:	84031404 	addi	r16,r16,3152
    fc18:	e0bffc17 	ldw	r2,-16(fp)
    fc1c:	01400304 	movi	r5,12
    fc20:	1009883a 	mov	r4,r2
    fc24:	000b04c0 	call	b04c <__mulsi3>
    fc28:	8085883a 	add	r2,r16,r2
    fc2c:	e0fffe17 	ldw	r3,-8(fp)
    fc30:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    fc34:	d0e00a17 	ldw	r3,-32728(gp)
    fc38:	e0bffc17 	ldw	r2,-16(fp)
    fc3c:	1880020e 	bge	r3,r2,fc48 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    fc40:	e0bffc17 	ldw	r2,-16(fp)
    fc44:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
    fc48:	e0bffc17 	ldw	r2,-16(fp)
    fc4c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    fc50:	00000606 	br	fc6c <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    fc54:	e0bffc17 	ldw	r2,-16(fp)
    fc58:	10800044 	addi	r2,r2,1
    fc5c:	e0bffc15 	stw	r2,-16(fp)
    fc60:	e0bffc17 	ldw	r2,-16(fp)
    fc64:	10800810 	cmplti	r2,r2,32
    fc68:	103fe01e 	bne	r2,zero,fbec <__alt_data_end+0xffff07ec>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    fc6c:	e0bffd17 	ldw	r2,-12(fp)
}
    fc70:	e6ffff04 	addi	sp,fp,-4
    fc74:	dfc00217 	ldw	ra,8(sp)
    fc78:	df000117 	ldw	fp,4(sp)
    fc7c:	dc000017 	ldw	r16,0(sp)
    fc80:	dec00304 	addi	sp,sp,12
    fc84:	f800283a 	ret

0000fc88 <atexit>:
    fc88:	200b883a 	mov	r5,r4
    fc8c:	000f883a 	mov	r7,zero
    fc90:	000d883a 	mov	r6,zero
    fc94:	0009883a 	mov	r4,zero
    fc98:	000fd501 	jmpi	fd50 <__register_exitproc>

0000fc9c <exit>:
    fc9c:	defffe04 	addi	sp,sp,-8
    fca0:	000b883a 	mov	r5,zero
    fca4:	dc000015 	stw	r16,0(sp)
    fca8:	dfc00115 	stw	ra,4(sp)
    fcac:	2021883a 	mov	r16,r4
    fcb0:	000fe680 	call	fe68 <__call_exitprocs>
    fcb4:	00800074 	movhi	r2,1
    fcb8:	10878c04 	addi	r2,r2,7728
    fcbc:	11000017 	ldw	r4,0(r2)
    fcc0:	20800f17 	ldw	r2,60(r4)
    fcc4:	10000126 	beq	r2,zero,fccc <exit+0x30>
    fcc8:	103ee83a 	callr	r2
    fccc:	8009883a 	mov	r4,r16
    fcd0:	000ffe80 	call	ffe8 <_exit>

0000fcd4 <memcmp>:
    fcd4:	01c000c4 	movi	r7,3
    fcd8:	3980192e 	bgeu	r7,r6,fd40 <memcmp+0x6c>
    fcdc:	2144b03a 	or	r2,r4,r5
    fce0:	11c4703a 	and	r2,r2,r7
    fce4:	10000f26 	beq	r2,zero,fd24 <memcmp+0x50>
    fce8:	20800003 	ldbu	r2,0(r4)
    fcec:	28c00003 	ldbu	r3,0(r5)
    fcf0:	10c0151e 	bne	r2,r3,fd48 <memcmp+0x74>
    fcf4:	31bfff84 	addi	r6,r6,-2
    fcf8:	01ffffc4 	movi	r7,-1
    fcfc:	00000406 	br	fd10 <memcmp+0x3c>
    fd00:	20800003 	ldbu	r2,0(r4)
    fd04:	28c00003 	ldbu	r3,0(r5)
    fd08:	31bfffc4 	addi	r6,r6,-1
    fd0c:	10c00e1e 	bne	r2,r3,fd48 <memcmp+0x74>
    fd10:	21000044 	addi	r4,r4,1
    fd14:	29400044 	addi	r5,r5,1
    fd18:	31fff91e 	bne	r6,r7,fd00 <__alt_data_end+0xffff0900>
    fd1c:	0005883a 	mov	r2,zero
    fd20:	f800283a 	ret
    fd24:	20c00017 	ldw	r3,0(r4)
    fd28:	28800017 	ldw	r2,0(r5)
    fd2c:	18bfee1e 	bne	r3,r2,fce8 <__alt_data_end+0xffff08e8>
    fd30:	31bfff04 	addi	r6,r6,-4
    fd34:	21000104 	addi	r4,r4,4
    fd38:	29400104 	addi	r5,r5,4
    fd3c:	39bff936 	bltu	r7,r6,fd24 <__alt_data_end+0xffff0924>
    fd40:	303fe91e 	bne	r6,zero,fce8 <__alt_data_end+0xffff08e8>
    fd44:	003ff506 	br	fd1c <__alt_data_end+0xffff091c>
    fd48:	10c5c83a 	sub	r2,r2,r3
    fd4c:	f800283a 	ret

0000fd50 <__register_exitproc>:
    fd50:	defffa04 	addi	sp,sp,-24
    fd54:	dc000315 	stw	r16,12(sp)
    fd58:	04000074 	movhi	r16,1
    fd5c:	84078c04 	addi	r16,r16,7728
    fd60:	80c00017 	ldw	r3,0(r16)
    fd64:	dc400415 	stw	r17,16(sp)
    fd68:	dfc00515 	stw	ra,20(sp)
    fd6c:	18805217 	ldw	r2,328(r3)
    fd70:	2023883a 	mov	r17,r4
    fd74:	10003726 	beq	r2,zero,fe54 <__register_exitproc+0x104>
    fd78:	10c00117 	ldw	r3,4(r2)
    fd7c:	010007c4 	movi	r4,31
    fd80:	20c00e16 	blt	r4,r3,fdbc <__register_exitproc+0x6c>
    fd84:	1a000044 	addi	r8,r3,1
    fd88:	8800221e 	bne	r17,zero,fe14 <__register_exitproc+0xc4>
    fd8c:	18c00084 	addi	r3,r3,2
    fd90:	18c7883a 	add	r3,r3,r3
    fd94:	18c7883a 	add	r3,r3,r3
    fd98:	12000115 	stw	r8,4(r2)
    fd9c:	10c7883a 	add	r3,r2,r3
    fda0:	19400015 	stw	r5,0(r3)
    fda4:	0005883a 	mov	r2,zero
    fda8:	dfc00517 	ldw	ra,20(sp)
    fdac:	dc400417 	ldw	r17,16(sp)
    fdb0:	dc000317 	ldw	r16,12(sp)
    fdb4:	dec00604 	addi	sp,sp,24
    fdb8:	f800283a 	ret
    fdbc:	00800034 	movhi	r2,0
    fdc0:	10800004 	addi	r2,r2,0
    fdc4:	10002626 	beq	r2,zero,fe60 <__register_exitproc+0x110>
    fdc8:	01006404 	movi	r4,400
    fdcc:	d9400015 	stw	r5,0(sp)
    fdd0:	d9800115 	stw	r6,4(sp)
    fdd4:	d9c00215 	stw	r7,8(sp)
    fdd8:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    fddc:	d9400017 	ldw	r5,0(sp)
    fde0:	d9800117 	ldw	r6,4(sp)
    fde4:	d9c00217 	ldw	r7,8(sp)
    fde8:	10001d26 	beq	r2,zero,fe60 <__register_exitproc+0x110>
    fdec:	81000017 	ldw	r4,0(r16)
    fdf0:	10000115 	stw	zero,4(r2)
    fdf4:	02000044 	movi	r8,1
    fdf8:	22405217 	ldw	r9,328(r4)
    fdfc:	0007883a 	mov	r3,zero
    fe00:	12400015 	stw	r9,0(r2)
    fe04:	20805215 	stw	r2,328(r4)
    fe08:	10006215 	stw	zero,392(r2)
    fe0c:	10006315 	stw	zero,396(r2)
    fe10:	883fde26 	beq	r17,zero,fd8c <__alt_data_end+0xffff098c>
    fe14:	18c9883a 	add	r4,r3,r3
    fe18:	2109883a 	add	r4,r4,r4
    fe1c:	1109883a 	add	r4,r2,r4
    fe20:	21802215 	stw	r6,136(r4)
    fe24:	01800044 	movi	r6,1
    fe28:	12406217 	ldw	r9,392(r2)
    fe2c:	30cc983a 	sll	r6,r6,r3
    fe30:	4992b03a 	or	r9,r9,r6
    fe34:	12406215 	stw	r9,392(r2)
    fe38:	21c04215 	stw	r7,264(r4)
    fe3c:	01000084 	movi	r4,2
    fe40:	893fd21e 	bne	r17,r4,fd8c <__alt_data_end+0xffff098c>
    fe44:	11006317 	ldw	r4,396(r2)
    fe48:	218cb03a 	or	r6,r4,r6
    fe4c:	11806315 	stw	r6,396(r2)
    fe50:	003fce06 	br	fd8c <__alt_data_end+0xffff098c>
    fe54:	18805304 	addi	r2,r3,332
    fe58:	18805215 	stw	r2,328(r3)
    fe5c:	003fc606 	br	fd78 <__alt_data_end+0xffff0978>
    fe60:	00bfffc4 	movi	r2,-1
    fe64:	003fd006 	br	fda8 <__alt_data_end+0xffff09a8>

0000fe68 <__call_exitprocs>:
    fe68:	defff504 	addi	sp,sp,-44
    fe6c:	df000915 	stw	fp,36(sp)
    fe70:	dd400615 	stw	r21,24(sp)
    fe74:	dc800315 	stw	r18,12(sp)
    fe78:	dfc00a15 	stw	ra,40(sp)
    fe7c:	ddc00815 	stw	r23,32(sp)
    fe80:	dd800715 	stw	r22,28(sp)
    fe84:	dd000515 	stw	r20,20(sp)
    fe88:	dcc00415 	stw	r19,16(sp)
    fe8c:	dc400215 	stw	r17,8(sp)
    fe90:	dc000115 	stw	r16,4(sp)
    fe94:	d9000015 	stw	r4,0(sp)
    fe98:	2839883a 	mov	fp,r5
    fe9c:	04800044 	movi	r18,1
    fea0:	057fffc4 	movi	r21,-1
    fea4:	00800074 	movhi	r2,1
    fea8:	10878c04 	addi	r2,r2,7728
    feac:	12000017 	ldw	r8,0(r2)
    feb0:	45005217 	ldw	r20,328(r8)
    feb4:	44c05204 	addi	r19,r8,328
    feb8:	a0001c26 	beq	r20,zero,ff2c <__call_exitprocs+0xc4>
    febc:	a0800117 	ldw	r2,4(r20)
    fec0:	15ffffc4 	addi	r23,r2,-1
    fec4:	b8000d16 	blt	r23,zero,fefc <__call_exitprocs+0x94>
    fec8:	14000044 	addi	r16,r2,1
    fecc:	8421883a 	add	r16,r16,r16
    fed0:	8421883a 	add	r16,r16,r16
    fed4:	84402004 	addi	r17,r16,128
    fed8:	a463883a 	add	r17,r20,r17
    fedc:	a421883a 	add	r16,r20,r16
    fee0:	e0001e26 	beq	fp,zero,ff5c <__call_exitprocs+0xf4>
    fee4:	80804017 	ldw	r2,256(r16)
    fee8:	e0801c26 	beq	fp,r2,ff5c <__call_exitprocs+0xf4>
    feec:	bdffffc4 	addi	r23,r23,-1
    fef0:	843fff04 	addi	r16,r16,-4
    fef4:	8c7fff04 	addi	r17,r17,-4
    fef8:	bd7ff91e 	bne	r23,r21,fee0 <__alt_data_end+0xffff0ae0>
    fefc:	00800034 	movhi	r2,0
    ff00:	10800004 	addi	r2,r2,0
    ff04:	10000926 	beq	r2,zero,ff2c <__call_exitprocs+0xc4>
    ff08:	a0800117 	ldw	r2,4(r20)
    ff0c:	1000301e 	bne	r2,zero,ffd0 <__call_exitprocs+0x168>
    ff10:	a0800017 	ldw	r2,0(r20)
    ff14:	10003226 	beq	r2,zero,ffe0 <__call_exitprocs+0x178>
    ff18:	a009883a 	mov	r4,r20
    ff1c:	98800015 	stw	r2,0(r19)
    ff20:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    ff24:	9d000017 	ldw	r20,0(r19)
    ff28:	a03fe41e 	bne	r20,zero,febc <__alt_data_end+0xffff0abc>
    ff2c:	dfc00a17 	ldw	ra,40(sp)
    ff30:	df000917 	ldw	fp,36(sp)
    ff34:	ddc00817 	ldw	r23,32(sp)
    ff38:	dd800717 	ldw	r22,28(sp)
    ff3c:	dd400617 	ldw	r21,24(sp)
    ff40:	dd000517 	ldw	r20,20(sp)
    ff44:	dcc00417 	ldw	r19,16(sp)
    ff48:	dc800317 	ldw	r18,12(sp)
    ff4c:	dc400217 	ldw	r17,8(sp)
    ff50:	dc000117 	ldw	r16,4(sp)
    ff54:	dec00b04 	addi	sp,sp,44
    ff58:	f800283a 	ret
    ff5c:	a0800117 	ldw	r2,4(r20)
    ff60:	80c00017 	ldw	r3,0(r16)
    ff64:	10bfffc4 	addi	r2,r2,-1
    ff68:	15c01426 	beq	r2,r23,ffbc <__call_exitprocs+0x154>
    ff6c:	80000015 	stw	zero,0(r16)
    ff70:	183fde26 	beq	r3,zero,feec <__alt_data_end+0xffff0aec>
    ff74:	95c8983a 	sll	r4,r18,r23
    ff78:	a0806217 	ldw	r2,392(r20)
    ff7c:	a5800117 	ldw	r22,4(r20)
    ff80:	2084703a 	and	r2,r4,r2
    ff84:	10000b26 	beq	r2,zero,ffb4 <__call_exitprocs+0x14c>
    ff88:	a0806317 	ldw	r2,396(r20)
    ff8c:	2088703a 	and	r4,r4,r2
    ff90:	20000c1e 	bne	r4,zero,ffc4 <__call_exitprocs+0x15c>
    ff94:	89400017 	ldw	r5,0(r17)
    ff98:	d9000017 	ldw	r4,0(sp)
    ff9c:	183ee83a 	callr	r3
    ffa0:	a0800117 	ldw	r2,4(r20)
    ffa4:	15bfbf1e 	bne	r2,r22,fea4 <__alt_data_end+0xffff0aa4>
    ffa8:	98800017 	ldw	r2,0(r19)
    ffac:	153fcf26 	beq	r2,r20,feec <__alt_data_end+0xffff0aec>
    ffb0:	003fbc06 	br	fea4 <__alt_data_end+0xffff0aa4>
    ffb4:	183ee83a 	callr	r3
    ffb8:	003ff906 	br	ffa0 <__alt_data_end+0xffff0ba0>
    ffbc:	a5c00115 	stw	r23,4(r20)
    ffc0:	003feb06 	br	ff70 <__alt_data_end+0xffff0b70>
    ffc4:	89000017 	ldw	r4,0(r17)
    ffc8:	183ee83a 	callr	r3
    ffcc:	003ff406 	br	ffa0 <__alt_data_end+0xffff0ba0>
    ffd0:	a0800017 	ldw	r2,0(r20)
    ffd4:	a027883a 	mov	r19,r20
    ffd8:	1029883a 	mov	r20,r2
    ffdc:	003fb606 	br	feb8 <__alt_data_end+0xffff0ab8>
    ffe0:	0005883a 	mov	r2,zero
    ffe4:	003ffb06 	br	ffd4 <__alt_data_end+0xffff0bd4>

0000ffe8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    ffe8:	defffd04 	addi	sp,sp,-12
    ffec:	df000215 	stw	fp,8(sp)
    fff0:	df000204 	addi	fp,sp,8
    fff4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    fff8:	0001883a 	nop
    fffc:	e0bfff17 	ldw	r2,-4(fp)
   10000:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   10004:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   10008:	10000226 	beq	r2,zero,10014 <_exit+0x2c>
    ALT_SIM_FAIL();
   1000c:	002af070 	cmpltui	zero,zero,43969
   10010:	00000106 	br	10018 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   10014:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   10018:	003fff06 	br	10018 <__alt_data_end+0xffff0c18>
